(data (i32.const 8232) "failed to allocate pages\00this contract has been paused - please try again later\00")
(data (i32.const 8312) "token creation is disabled - please try again later\00")
(data (i32.const 8364) "invalid symbol name\00")
(data (i32.const 8384) "invalid supply\00")
(data (i32.const 8399) "max-supply must be positive\00")
(data (i32.const 8427) "token with symbol already exists\00")
(data (i32.const 8460) "memo has more than 256 bytes\00")
(data (i32.const 8489) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8549) "invalid quantity\00")
(data (i32.const 8566) "must issue positive quantity\00")
(data (i32.const 8595) "symbol precision mismatch\00")
(data (i32.const 8621) "quantity exceeds available supply\00")
(data (i32.const 8655) "this account is locked - email support@edna.life\00")
(data (i32.const 8704) "cannot transfer to self\00")
(data (i32.const 8728) "to account does not exist\00")
(data (i32.const 8754) "unable to find key\00")
(data (i32.const 8773) "must transfer positive quantity\00")
(data (i32.const 8805) "token with symbol does not exist\00")
(data (i32.const 8838) "must burn positive quantity\00")
(data (i32.const 8866) "toggle account lock is disabled - please try again later\00")
(data (i32.const 8923) "this account is locked - visit https://t.me/edna_life\00")
(data (i32.const 8977) "teleport is disabled - please try again later\00")
(data (i32.const 9023) "must teleport a positive quantity\00")
(data (i32.const 9057) "new membership is disabled - please try again later\00")
(data (i32.const 9109) "ednadacwalet\00")
(data (i32.const 9122) "member with this id already exists.\00")
(data (i32.const 9158) "EDNA\00")
(data (i32.const 9163) "initial member stake\00")
(data (i32.const 9184) "memberscount\00")
(data (i32.const 9197) "referedcount\00")
(data (i32.const 9210) "Worbli accounts are pre-verified.\00")
(data (i32.const 9244) "gyftietokens\00")
(data (i32.const 9257) "gyftie account name provided not found in gyftie contract\00")
(data (i32.const 9315) "membership is disabled - please try again later\00")
(data (i32.const 9363) "ram fee for changing chains\00")
(data (i32.const 9391) "attempt to erase a non-existing member\00")
(data (i32.const 9430) "member id already exists on this chain\00")
(data (i32.const 9469) "sitting trustees may not delete their accounts\00")
(data (i32.const 9516) "member not found during remove\00")
(data (i32.const 9547) "account with an upaid lease cannot be removed\00")
(data (i32.const 9593) "account still owed on leases cannot be removed\00")
(data (i32.const 9640) "account with a stake can not be removed\00")
(data (i32.const 9680) "account with an unfilled DNA order cannot be removed\00")
(data (i32.const 9733) "sendstats fails to find that stat name\00")
(data (i32.const 9772) "send_stat fails to find that stat name\00")
(data (i32.const 9811) "election voting is disabled - please try again later\00")
(data (i32.const 9864) "attempt to vote - candidate not found\00")
(data (i32.const 9902) "member not found during custodian promotion\00")
(data (i32.const 9946) "electnendson\00")
(data (i32.const 9959) "next election end date not found\00")
(data (i32.const 9992) "this is a custodian only action\00")
(data (i32.const 10025) "not authorized to execute this action\00")
(data (i32.const 10063) "ednadacspend\00")
(data (i32.const 10076) "recommendation not found\00")
(data (i32.const 10101) "member not found on ednamembers during reco change\00")
(data (i32.const 10152) "member not found on memberindex during reco change\00")
(data (i32.const 10203) "config not found during reco change\00")
(data (i32.const 10239) "statistic not found during reco change\00")
(data (i32.const 10278) "service item not found during reco change\00")
(data (i32.const 10320) "you have already approved this item\00")
(data (i32.const 10356) "invalid proposal type\00")
(data (i32.const 10378) "adding proposals is diabled - please try again later\00")
(data (i32.const 10431) "adding service proposals is diabled - please try again later\00")
(data (i32.const 10492) "custodian only option\00")
(data (i32.const 10514) "proposal custodial bypass is diabled - please try again later\00")
(data (i32.const 10576) "voting item nout found\00")
(data (i32.const 10599) "voting on proposals is disabled - please try again later\00")
(data (i32.const 10656) "custodian voting on proposals is disabled - please try again later\00")
(data (i32.const 10723) "voting on referendums is disabled - please try again later\00")
(data (i32.const 10782) "this item is not being voted on presently\00")
(data (i32.const 10824) "this item open for custodian voting only\00")
(data (i32.const 10865) "invalid vote status\00")
(data (i32.const 10885) "ordering sequencing is disabled - please try again later\00")
(data (i32.const 10942) "tokens leased on this dna account account plus being sent now are too few to place an order\00")
(data (i32.const 11034) "grpcountneed\00")
(data (i32.const 11047) "seqxgroupnum\00")
(data (i32.const 11060) "counter row not found\00")
(data (i32.const 11082) "seqxgroupcnt\00")
(data (i32.const 11095) "ednalabwalet\00")
(data (i32.const 11108) "order placed for sequencing\00")
(data (i32.const 11136) "invalid order status - allowed values 3-9\00")
(data (i32.const 11178) "not authorized to set this status\00")
(data (i32.const 11212) "not authorizrd to set this status\00")
(data (i32.const 11246) "that order_id not found\00")
(data (i32.const 11270) "no orders left to push in that group\00")
(data (i32.const 11307) "invalid total on this lease\00")
(data (i32.const 11335) "lease offer creation is disabled - please try again later\00")
(data (i32.const 11393) "invalid lease type allows is 1-public or 2-private\00")
(data (i32.const 11444) "ednaleasepit\00")
(data (i32.const 11457) "new lease offer\00")
(data (i32.const 11473) "lease offer modification is disabled - please try again later\00")
(data (i32.const 11535) "lease offer not found\00")
(data (i32.const 11557) "this account did not make this lease offer\00")
(data (i32.const 11600) "this lease offer no longer has that many tokens left\00")
(data (i32.const 11653) "amount requested greater than allowed by offer\00")
(data (i32.const 11700) "leasing is disabled - please try again later\00")
(data (i32.const 11745) "this account is not authorized to accept this lease offer\00")
(data (i32.const 11803) "this is an EDNA DAC custodian function only\00")
(data (i32.const 11847) "this transaction only valid on telos\00")
(data (i32.const 11884) "member with that id not found\00")
(data (i32.const 11914) "you have already created your free account\00")
(data (i32.const 11957) "EOS\00")
(data (i32.const 11961) "contispaused\00")
(data (i32.const 11974) "configuration not found\00")
(data (i32.const 11998) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 12049) "error reading iterator\00")
(data (i32.const 12072) "cannot create objects in table of another contract\00")
(data (i32.const 12123) "write\00")
(data (i32.const 12129) "cannot pass end iterator to modify\00")
(data (i32.const 12164) "object passed to modify is not in multi_index\00")
(data (i32.const 12210) "cannot modify objects in table of another contract\00")
(data (i32.const 12261) "updater cannot change primary key when modifying an object\00")
(data (i32.const 12320) "attempt to add asset with different symbol\00")
(data (i32.const 12363) "addition underflow\00")
(data (i32.const 12382) "addition overflow\00")
(data (i32.const 12400) "no balance object found\00")
(data (i32.const 12424) "overdrawn balance\00")
(data (i32.const 12442) "object passed to erase is not in multi_index\00")
(data (i32.const 12487) "cannot erase objects in table of another contract\00")
(data (i32.const 12537) "attempt to remove object that was not in multi_index\00")
(data (i32.const 12590) "attempt to subtract asset with different symbol\00")
(data (i32.const 12638) "subtraction underflow\00")
(data (i32.const 12660) "subtraction overflow\00")
(data (i32.const 12681) "string is too long to be a valid name\00")
(data (i32.const 12719) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 12786) "character is not in allowed character set for names\00")
(data (i32.const 12838) "string is too long to be a valid symbol_code\00")
(data (i32.const 12883) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 12936) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 12985) "statistic not found\00")
(data (i32.const 13005) "account not found\00")
(data (i32.const 13023) "cannot increment end iterator\00")
(data (i32.const 13053) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 13112) "divide by zero\00")
(data (i32.const 13127) "multiplication overflow\00")
(data (i32.const 13151) "multiplication underflow\00")
(data (i32.const 13176) "thischainuid\00")
(data (i32.const 13189) "cannot pass end iterator to erase\00")
(data (i32.const 13223) "read\00")
(data (i32.const 13228) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 13282) "cannot decrement iterator at beginning of index\00")
(data (i32.const 13330) "next primary key in table is at autoincrement limit\00")
(data (i32.const 13382) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 13436) "cannot decrement iterator at beginning of table\00")
(data (i32.const 13484) "invalid vote status during a new vote\00")
(data (i32.const 13522) "get\00")
(data (i32.const 0) "\d84\00\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "abort" (func $fimport$4))
(import "env" "memset" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$6 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$9 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$10 (param i32 i32)))
(import "env" "__multf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$12 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$13 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$15 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$20 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$22 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "db_update_i64" (func $fimport$27 (param i32 i64 i32 i32)))
(import "env" "is_account" (func $fimport$28 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$29 (param i64)))
(import "env" "has_auth" (func $fimport$30 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_idx64_store" (func $fimport$33 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$34 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$36 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$37 (result i64)))
(import "env" "get_active_producers" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$39 (param i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$40 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$41 (param i32 i64 i32)))
(import "env" "__multi3" (func $fimport$42 (param i32 i64 i64 i64 i64)))
(import "env" "action_data_size" (func $fimport$43 (result i32)))
(import "env" "read_action_data" (func $fimport$44 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$45 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$46 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$47 (param i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$48 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$49 (param i32)))
(import "env" "db_idx64_previous" (func $fimport$50 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$51 (param i64 i64 i64) (result i32)))
(import "env" "db_previous_i64" (func $fimport$52 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$53 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$54 (param i32 i32) (result i32)))
(export "apply" (func $377))
(table $0 58 58 anyfunc)
(elem (i32.const 1) $58 $179 $334 $250 $368 $98 $325 $148 $343 $286 $209 $93 $61 $169 $41 $181 $26 $165 $303 $341 $321 $128 $208 $202 $34 $48 $297 $99 $55 $200 $193 $77 $95 $102 $318 $80 $173 $91 $207 $177 $328 $376 $171 $159 $53 $50 $83 $302 $350 $167 $291 $101 $372 $156 $72 $104 $346)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 13526))
(global $global$2 i32 (i32.const 13526))


void .FUNC $505 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [352])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [308]) = $2
	*($3 + [304]) = $2
	*($3 + [312]) = ($2 + $4)
	*($3 + [296]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$5
	CALL memcpy(($3 + [296]), $2, [8])
	$2 = (*($3 + [308]) + [8])
	*($3 + [308]) = $2
	$4 = (($3 + [304]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$6
	CALL memcpy(($3 + [295]), $2, [1])
	*($3 + [308]) = (*($3 + [308]) + [1])
	*($3 + [288]) = [0]
	*($3 + [280]) = (int_64)0
	CALL $415(($3 + [304]), ($3 + [280]))
	*($3 + [272]) = (int_64)0
	*($3 + [264]) = (int_64)0
	$2 = *($3 + [308])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$7
	CALL memcpy(($3 + [264]), $2, [8])
	$2 = (*($3 + [308]) + [8])
	*($3 + [308]) = $2
	*($3 + [104]) = (int_64)0
	$4 = (($3 + [304]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$8
	CALL memcpy(($3 + [104]), $2, [8])
	*((($3 + [264]) + [8])) = *($3 + [104])
	$2 = (*($3 + [308]) + [8])
	*($3 + [308]) = $2
	*($3 + [256]) = (int_64)0
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$9
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = (*($3 + [308]) + [8])
	*($3 + [308]) = $2
	*($3 + [104]) = (int_64)0
	$4 = (($3 + [304]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$10
	CALL memcpy(($3 + [104]), $2, [8])
	*((($3 + [248]) + [8])) = *($3 + [104])
	$2 = (*($3 + [308]) + [8])
	*($3 + [308]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$11
	CALL memcpy(($3 + [247]), $2, [1])
	$2 = (*($3 + [308]) + [1])
	*($3 + [308]) = $2
	$4 = ($3 + [312])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$12
	CALL memcpy(($3 + [246]), $2, [1])
	$2 = (*($3 + [308]) + [1])
	*($3 + [308]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$13
	CALL memcpy(($3 + [245]), $2, [1])
	$2 = (*($3 + [308]) + [1])
	*($3 + [308]) = $2
	$4 = (($3 + [304]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [308])
	
.LABEL $label$14
	CALL memcpy(($3 + [244]), $2, [1])
	*($3 + [308]) = (*($3 + [308]) + [1])
	*(($2 = (($3 + [88]) + [8]))) = *($4)
	*($3 + [88]) = *($3 + [304])
	*(($4 = (($3 + [320]) + [8]))) = *($2)
	*($3 + [320]) = *($3 + [88])
	$2 = *($4)
	*((($3 + [336]) + [8])) = $2
	*(($3 + [128])) = $2
	*($3 + [104]) = $0
	*($3 + [112]) = $1
	$0 = *($3 + [320])
	*($3 + [120]) = $0
	*($3 + [336]) = $0
	*($3 + [132 align=4]) = (int_64)361417177238274561
	*($3 + [140 align=4]) = (int_64)144408800781666054
	*($3 + [148]) = [1027]
	*($3 + [150 align=2]) = (int_64)72339081933160453
	*($3 + [158 align=2]) = [33620738]
	*($3 + [162]) = [1027]
	*($3 + [164 align=4]) = (int_64)216736870368216581
	*($3 + [172]) = [17171716]
	*($3 + [176]) = (int_64)73469379886514946
	*($3 + [184]) = [770]
	*($3 + [186 align=2]) = (int_64)72621656421500164
	*($3 + [194 align=2]) = [50462978]
	*($3 + [198]) = [1284]
	*($3 + [200]) = (int_64)506097522914230534
	*($3 + [208]) = [17434888]
	*($3 + [212]) = [770]
	*($3 + [214]) = [4]
	*($3 + [215 align=1]) = [67305985]
	*($3 + [219 align=1]) = [261]
	*($3 + [221]) = [2]
	*($3 + [224]) = (int_64)72058693550160512
	*($3 + [232]) = [770]
	*($3 + [234]) = [4]
	$4 = *($3 + [295])
	$0 = *($3 + [296])
	$2 = CALL $18(($3 + [72]), ($3 + [280]))
	$1 = *((($3 + [264]) + [8]))
	*((($3 + [56]) + [8])) = $1
	$5 = *((($3 + [248]) + [8]))
	*((($3 + [40]) + [8])) = $5
	*((($3 + [24]) + [8])) = $1
	*((($3 + [8]) + [8])) = $5
	$1 = *($3 + [264])
	*($3 + [56]) = $1
	$5 = *($3 + [248])
	*($3 + [40]) = $5
	*($3 + [24]) = $1
	*($3 + [8]) = $5
	CALL $318(($3 + [104]), $0, $4, $2, ($3 + [24]), ($3 + [8]), *($3 + [247]), *($3 + [246]), *($3 + [245]), *($3 + [244]))
	if ( (*($2) & [1]) ){ goto $label$17 }
	if ( (*($3 + [280]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [280]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($3 + [288])))
	$global$0 = ($3 + [352])
	return 
	
.LABEL $label$15
	$global$0 = ($3 + [352])
}

void .FUNC $504 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $291($3, *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [160])
}

void .FUNC $507 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $5, [8])
	*($3 + [136]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $325($3, *($3 + [152]), *($3 + [144]), *($3 + [136]))
	$global$0 = ($3 + [160])
}

void .FUNC $506 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $5, [8])
	*($3 + [136]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $321($3, *($3 + [152]), *($3 + [144]), *($3 + [136]))
	$global$0 = ($3 + [160])
}

void .FUNC $501 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-4]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [196]), $5, [4])
	*($3 + [184]) = (int_64)0
	*($3 + [176]) = (int_64)0
	$5 = ($2 + [12])
	if ( ((uint_32)($4 + [-12]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [176]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [20])
	if ( ((uint_32)($4 + [-20]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [176]) + [8])) = *($3 + [40])
	*(($3 + [64])) = $6
	*($3 + [56]) = $2
	*((($3 + [40]) + [20])) = ($2 + [28])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [68 align=4]) = (int_64)361417177238274561
	*($3 + [76]) = [151521030]
	*($3 + [80]) = [2826]
	*($3 + [82 align=2]) = (int_64)144396684594708993
	*($3 + [90]) = [3]
	*($3 + [92 align=4]) = (int_64)289077004450529537
	*($3 + [100]) = [134678021]
	*($3 + [104]) = [265]
	*($3 + [106 align=2]) = (int_64)216736857432785666
	*($3 + [114 align=2]) = [67305985]
	*($3 + [118]) = [261]
	*($3 + [120]) = [2]
	*((($3 + [8]) + [8])) = *((($3 + [24]) + [8]))
	*($3 + [121 align=1]) = (int_64)144399970194490371
	*($3 + [129 align=1]) = (int_64)433757350076154369
	*($3 + [137 align=1]) = [513]
	*($3 + [139 align=1]) = (int_64)723118041428460547
	*($3 + [147 align=1]) = (int_64)289077004467372545
	*($3 + [155 align=1]) = [261]
	*($3 + [157]) = [2]
	*($3 + [160]) = (int_64)72058693550160512
	*($3 + [168]) = [770]
	*($3 + [170]) = [4]
	*($3 + [8]) = *($3 + [24])
	CALL $297(($3 + [40]), *($3 + [200]), *($3 + [196]), ($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $500 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [260]) = $2
	*($3 + [256]) = $2
	$5 = ($2 + $4)
	*($3 + [264]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [240]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [256]) + [8]))
	$2 = *($3 + [260])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$7
	CALL memcpy(($3 + [232]), $2, [8])
	*($3 + [260]) = ($2 + [8])
	*($3 + [224]) = [0]
	*($3 + [216]) = (int_64)0
	CALL $415(($3 + [256]), ($3 + [216]))
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$2 = *($3 + [260])
	$4 = (($3 + [256]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$8
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = (*($3 + [260]) + [8])
	*($3 + [260]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$9
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [200]) + [8]))) = *($3 + [64])
	*($3 + [260]) = (*($3 + [260]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [256]) + [8]))
	*($3 + [48]) = *($3 + [256])
	*(($5 = (($3 + [272]) + [8]))) = *($2)
	*($3 + [272]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [272])
	*($3 + [80]) = $0
	*($3 + [288]) = $0
	*($3 + [92 align=4]) = (int_64)361417177238274561
	*($3 + [100 align=4]) = (int_64)144408800781666054
	*($3 + [108]) = [1027]
	*($3 + [110 align=2]) = (int_64)72339081933160453
	*($3 + [118 align=2]) = [33620738]
	*($3 + [122]) = [1027]
	*($3 + [124 align=4]) = (int_64)216736870368216581
	*($3 + [132]) = [17171716]
	*($3 + [136]) = (int_64)73469379886514946
	*($3 + [144]) = [770]
	*($3 + [146 align=2]) = (int_64)72621656421500164
	*($3 + [154 align=2]) = [50462978]
	*($3 + [158]) = [1284]
	*($3 + [160]) = (int_64)506097522914230534
	*($3 + [168]) = [17434888]
	*($3 + [172]) = [770]
	*($3 + [174]) = [4]
	*($3 + [175 align=1]) = [67305985]
	*($3 + [179 align=1]) = [261]
	*($3 + [181]) = [2]
	*($3 + [184]) = (int_64)72058693550160512
	*($3 + [192]) = [770]
	*($3 + [194]) = [4]
	$0 = *($3 + [232])
	$1 = *($3 + [240])
	$6 = *($3 + [248])
	$2 = CALL $18(($3 + [32]), ($3 + [216]))
	$7 = *($4)
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	$7 = *($3 + [200])
	*($3) = $7
	*($3 + [16]) = $7
	CALL $286(($3 + [64]), $6, $1, $0, $2, $3)
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($3 + [216]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [224])))
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [304])
}

void .FUNC $468 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [260]) = $2
	*($3 + [256]) = $2
	$5 = ($2 + $4)
	*($3 + [264]) = $5
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [240]) = (int_64)0
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [256]) + [8]))
	$2 = *($3 + [260])
	
.LABEL $label$6
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*((($3 + [232]) + [8])) = *($3 + [64])
	*($3 + [260]) = ($2 + [8])
	*($3 + [224]) = [0]
	*($3 + [216]) = (int_64)0
	CALL $415(($3 + [256]), ($3 + [216]))
	$2 = *($3 + [260])
	$4 = (($3 + [256]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$8
	CALL memcpy(($3 + [215]), $2, [1])
	$2 = (*($3 + [260]) + [1])
	*($3 + [260]) = $2
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$9
	CALL memcpy(($3 + [200]), $2, [8])
	*($3 + [260]) = (*($3 + [260]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [256]) + [8]))
	*($3 + [48]) = *($3 + [256])
	*(($4 = (($3 + [272]) + [8]))) = *($2)
	*($3 + [272]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [272])
	*($3 + [80]) = $0
	*($3 + [288]) = $0
	*($3 + [92 align=4]) = (int_64)361417177238274561
	*($3 + [100 align=4]) = (int_64)144408800781666054
	*($3 + [108]) = [1027]
	*($3 + [110 align=2]) = (int_64)72339081933160453
	*($3 + [118 align=2]) = [33620738]
	*($3 + [122]) = [1027]
	*($3 + [124 align=4]) = (int_64)216736870368216581
	*($3 + [132]) = [17171716]
	*($3 + [136]) = (int_64)73469379886514946
	*($3 + [144]) = [770]
	*($3 + [146 align=2]) = (int_64)72621656421500164
	*($3 + [154 align=2]) = [50462978]
	*($3 + [158]) = [1284]
	*($3 + [160]) = (int_64)506097522914230534
	*($3 + [168]) = [17434888]
	*($3 + [172]) = [770]
	*($3 + [174]) = [4]
	*($3 + [175 align=1]) = [67305985]
	*($3 + [179 align=1]) = [261]
	*($3 + [181]) = [2]
	*($3 + [184]) = (int_64)72058693550160512
	*($3 + [192]) = [770]
	*($3 + [194]) = [4]
	*(($4 = (($3 + [32]) + [8]))) = *((($3 + [232]) + [8]))
	*($3 + [32]) = *($3 + [232])
	$2 = CALL $18(($3 + [16]), ($3 + [216]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $55(($3 + [64]), $0, $3, $2, *($3 + [215]), *($3 + [200]))
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($3 + [216]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [224])))
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [304])
}

void .FUNC $469 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [28])) = $2
	*(($3 + [32])) = ($2 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $58(($3 + [8]))
	$global$0 = ($3 + [144])
}

void .FUNC $466 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $50($3, *($3 + [136]))
	$global$0 = ($3 + [144])
}

void .FUNC $467 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [260]) = $2
	*($3 + [256]) = $2
	$5 = ($2 + $4)
	*($3 + [264]) = $5
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [240]) = (int_64)0
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [256]) + [8]))
	$2 = *($3 + [260])
	
.LABEL $label$6
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*((($3 + [232]) + [8])) = *($3 + [64])
	*($3 + [260]) = ($2 + [8])
	*($3 + [224]) = [0]
	*($3 + [216]) = (int_64)0
	CALL $415(($3 + [256]), ($3 + [216]))
	$2 = *($3 + [260])
	$4 = (($3 + [256]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$8
	CALL memcpy(($3 + [215]), $2, [1])
	$2 = (*($3 + [260]) + [1])
	*($3 + [260]) = $2
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$9
	CALL memcpy(($3 + [200]), $2, [8])
	*($3 + [260]) = (*($3 + [260]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [256]) + [8]))
	*($3 + [48]) = *($3 + [256])
	*(($4 = (($3 + [272]) + [8]))) = *($2)
	*($3 + [272]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [272])
	*($3 + [80]) = $0
	*($3 + [288]) = $0
	*($3 + [92 align=4]) = (int_64)361417177238274561
	*($3 + [100 align=4]) = (int_64)144408800781666054
	*($3 + [108]) = [1027]
	*($3 + [110 align=2]) = (int_64)72339081933160453
	*($3 + [118 align=2]) = [33620738]
	*($3 + [122]) = [1027]
	*($3 + [124 align=4]) = (int_64)216736870368216581
	*($3 + [132]) = [17171716]
	*($3 + [136]) = (int_64)73469379886514946
	*($3 + [144]) = [770]
	*($3 + [146 align=2]) = (int_64)72621656421500164
	*($3 + [154 align=2]) = [50462978]
	*($3 + [158]) = [1284]
	*($3 + [160]) = (int_64)506097522914230534
	*($3 + [168]) = [17434888]
	*($3 + [172]) = [770]
	*($3 + [174]) = [4]
	*($3 + [175 align=1]) = [67305985]
	*($3 + [179 align=1]) = [261]
	*($3 + [181]) = [2]
	*($3 + [184]) = (int_64)72058693550160512
	*($3 + [192]) = [770]
	*($3 + [194]) = [4]
	*(($4 = (($3 + [32]) + [8]))) = *((($3 + [232]) + [8]))
	*($3 + [32]) = *($3 + [232])
	$0 = *($3 + [248])
	$2 = CALL $18(($3 + [16]), ($3 + [216]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $53(($3 + [64]), $0, $3, $2, [0], $0)
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($3 + [216]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [224])))
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [304])
}

void .FUNC $464 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [260]) = $2
	*($3 + [256]) = $2
	$5 = ($2 + $4)
	*($3 + [264]) = $5
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [240]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [256]) + [8]))
	$2 = *($3 + [260])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [232]) = (int_64)0
	*($3 + [224]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$7
	CALL memcpy(($3 + [224]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [224]) + [8]))) = *($3 + [72])
	*($3 + [260]) = ($2 + [8])
	*($3 + [216]) = [0]
	*($3 + [208]) = (int_64)0
	CALL $415(($3 + [256]), ($3 + [208]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [256]) + [8]))
	*($3 + [56]) = *($3 + [256])
	*(($4 = (($3 + [272]) + [8]))) = *($2)
	*($3 + [272]) = *($3 + [56])
	$2 = *($4)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [272])
	*($3 + [88]) = $0
	*($3 + [288]) = $0
	*($3 + [100 align=4]) = (int_64)361417177238274561
	*($3 + [108 align=4]) = (int_64)144408800781666054
	*($3 + [116]) = [1027]
	*($3 + [118 align=2]) = (int_64)72339081933160453
	*($3 + [126 align=2]) = [33620738]
	*($3 + [130]) = [1027]
	*($3 + [132 align=4]) = (int_64)216736870368216581
	*($3 + [140]) = [17171716]
	*($3 + [144]) = (int_64)73469379886514946
	*($3 + [152]) = [770]
	*($3 + [154 align=2]) = (int_64)72621656421500164
	*($3 + [162 align=2]) = [50462978]
	*($3 + [166]) = [1284]
	*($3 + [168]) = (int_64)506097522914230534
	*($3 + [176]) = [17434888]
	*($3 + [180]) = [770]
	*($3 + [182]) = [4]
	*($3 + [183 align=1]) = [67305985]
	*($3 + [187 align=1]) = [261]
	*($3 + [189]) = [2]
	*($3 + [192]) = (int_64)72058693550160512
	*($3 + [200]) = [770]
	*($3 + [202]) = [4]
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [224])
	$0 = *($3 + [240])
	$1 = *($3 + [248])
	$2 = CALL $18(($3 + [24]), ($3 + [208]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $41(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [208]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [208]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [216])))
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [304])
}

void .FUNC $465 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [244]) = $2
	*($3 + [240]) = $2
	$5 = ($2 + $4)
	*($3 + [248]) = $5
	*($3 + [232]) = (int_64)0
	*($3 + [224]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$5
	CALL memcpy(($3 + [224]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [244])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [224]) + [8]))) = *($3 + [72])
	*($3 + [244]) = ($2 + [8])
	*($3 + [216]) = [0]
	*($3 + [208]) = (int_64)0
	CALL $415(($3 + [240]), ($3 + [208]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [240]) + [8]))
	*($3 + [56]) = *($3 + [240])
	*(($5 = (($3 + [256]) + [8]))) = *($2)
	*($3 + [256]) = *($3 + [56])
	$2 = *($5)
	*((($3 + [272]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [256])
	*($3 + [88]) = $0
	*($3 + [272]) = $0
	*($3 + [100 align=4]) = (int_64)361417177238274561
	*($3 + [108 align=4]) = (int_64)144408800781666054
	*($3 + [116]) = [1027]
	*($3 + [118 align=2]) = (int_64)72339081933160453
	*($3 + [126 align=2]) = [33620738]
	*($3 + [130]) = [1027]
	*($3 + [132 align=4]) = (int_64)216736870368216581
	*($3 + [140]) = [17171716]
	*($3 + [144]) = (int_64)73469379886514946
	*($3 + [152]) = [770]
	*($3 + [154 align=2]) = (int_64)72621656421500164
	*($3 + [162 align=2]) = [50462978]
	*($3 + [166]) = [1284]
	*($3 + [168]) = (int_64)506097522914230534
	*($3 + [176]) = [17434888]
	*($3 + [180]) = [770]
	*($3 + [182]) = [4]
	*($3 + [183 align=1]) = [67305985]
	*($3 + [187 align=1]) = [261]
	*($3 + [189]) = [2]
	*($3 + [192]) = (int_64)72058693550160512
	*($3 + [200]) = [770]
	*($3 + [202]) = [4]
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [224])
	$2 = CALL $18(($3 + [24]), ($3 + [208]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $48(($3 + [72]), ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [208]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [208]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [216])))
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [288])
}

void .FUNC $462 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [244]) = $2
	*($3 + [240]) = $2
	$5 = ($2 + $4)
	*($3 + [248]) = $5
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [224]) = (int_64)0
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [240]) + [8]))
	$2 = *($3 + [244])
	
.LABEL $label$6
	CALL memcpy(($3 + [216]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [244])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [216]) + [8]))) = *($3 + [64])
	*($3 + [244]) = ($2 + [8])
	*($3 + [208]) = [0]
	*($3 + [200]) = (int_64)0
	CALL $415(($3 + [240]), ($3 + [200]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [240]) + [8]))
	*($3 + [48]) = *($3 + [240])
	*(($5 = (($3 + [256]) + [8]))) = *($2)
	*($3 + [256]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [272]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [256])
	*($3 + [80]) = $0
	*($3 + [272]) = $0
	*($3 + [92 align=4]) = (int_64)361417177238274561
	*($3 + [100 align=4]) = (int_64)144408800781666054
	*($3 + [108]) = [1027]
	*($3 + [110 align=2]) = (int_64)72339081933160453
	*($3 + [118 align=2]) = [33620738]
	*($3 + [122]) = [1027]
	*($3 + [124 align=4]) = (int_64)216736870368216581
	*($3 + [132]) = [17171716]
	*($3 + [136]) = (int_64)73469379886514946
	*($3 + [144]) = [770]
	*($3 + [146 align=2]) = (int_64)72621656421500164
	*($3 + [154 align=2]) = [50462978]
	*($3 + [158]) = [1284]
	*($3 + [160]) = (int_64)506097522914230534
	*($3 + [168]) = [17434888]
	*($3 + [172]) = [770]
	*($3 + [174]) = [4]
	*($3 + [175 align=1]) = [67305985]
	*($3 + [179 align=1]) = [261]
	*($3 + [181]) = [2]
	*($3 + [184]) = (int_64)72058693550160512
	*($3 + [192]) = [770]
	*($3 + [194]) = [4]
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [216])
	$0 = *($3 + [232])
	$2 = CALL $18(($3 + [16]), ($3 + [200]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $34(($3 + [64]), $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [200]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [200]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [208])))
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [288])
}

int_32 .FUNC $463 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13522])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $161($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $460 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $18(($2 + [16]), ($1 + [16]))
	$1 = CALL $18($2, ($1 + [28]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$8 = CALL $18(($2 + [32]), $1)
	$6 = CALL $18(($2 + [48]), $5)
	CALL void $7((int_32 $4), (int_64 $3), (int_64 $6), (int_32 $8), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($8 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*($6 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($5) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($1 + [8]))
	if ( ((*($5) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($5 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $461 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [176]) = (int_64)0
	*($3 + [168]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [168]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [24])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [60 align=4]) = (int_64)361417177238274561
	*($3 + [68]) = [151521030]
	*($3 + [72]) = [2826]
	*($3 + [74 align=2]) = (int_64)144396684594708993
	*($3 + [82]) = [3]
	*($3 + [84 align=4]) = (int_64)289077004450529537
	*($3 + [92]) = [134678021]
	*($3 + [96]) = [265]
	*($3 + [98 align=2]) = (int_64)216736857432785666
	*($3 + [106 align=2]) = [67305985]
	*($3 + [110]) = [261]
	*($3 + [112]) = [2]
	$0 = *($5)
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $0
	*($3 + [113 align=1]) = (int_64)144399970194490371
	*($3 + [121 align=1]) = (int_64)433757350076154369
	*($3 + [129 align=1]) = [513]
	*($3 + [131 align=1]) = (int_64)723118041428460547
	*($3 + [139 align=1]) = (int_64)289077004467372545
	*($3 + [147 align=1]) = [261]
	*($3 + [149]) = [2]
	*($3 + [152]) = (int_64)72058693550160512
	*($3 + [160]) = [770]
	*($3 + [162]) = [4]
	$0 = *($3 + [168])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $26(($3 + [32]), *($3 + [184]), $3)
	$global$0 = ($3 + [192])
}

void .FUNC $534 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$20
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$22
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$24 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$25 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$26 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$27 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$28 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$28
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$29 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$29
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [84])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$30 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$30
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [88])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$31 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$31
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [92])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$32 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$32
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [96])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$33 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$33
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [100])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$34 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$34
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [104])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$35 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$35
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [108])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$36 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$36
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [112])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$37 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$37
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [116])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$38 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$38
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $535 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $597 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [56])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $598(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $553 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [20]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	$0 = *($0)
	*($2 + [15]) = ((int_32)*($0 + [24]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$5 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	*($2 + [8]) = $0
	CALL $554(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $473 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	int_32 $31
	int_32 $32
	$2 = ($global$0 - [640])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [13223])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [639]), $2, [1])
	$5 = ($2 + [1])
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [638]), $5, [1])
	*($3 + [624]) = (int_64)0
	$5 = ($2 + [2])
	if ( ((uint_32)($4 + [-2]) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [624]), $5, [8])
	$5 = ($2 + [10])
	if ( ((uint_32)($4 + [-10]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [616]), $5, [8])
	$5 = ($2 + [18])
	if ( ((uint_32)($4 + [-18]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [608]), $5, [8])
	*($3 + [600]) = (int_64)0
	$5 = ($2 + [26])
	if ( ((uint_32)($4 + [-26]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [600]), $5, [8])
	$5 = ($2 + [34])
	if ( ((int_32)$4 != (int_32)[34]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [599]), $5, [1])
	$5 = ($2 + [35])
	if ( ((int_32)$4 != (int_32)[35]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$11
	CALL memcpy(($3 + [598]), $5, [1])
	*($3 + [584]) = (int_64)0
	*($3 + [576]) = (int_64)0
	$5 = ($2 + [36])
	if ( ((uint_32)($4 + [-36]) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$12
	CALL memcpy(($3 + [576]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [44])
	if ( ((uint_32)($4 + [-44]) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$13
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [576]) + [8])) = *($3 + [264])
	*($3 + [568]) = (int_64)0
	*($3 + [560]) = (int_64)0
	$5 = ($2 + [52])
	if ( ((uint_32)($4 + [-52]) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$14
	CALL memcpy(($3 + [560]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [60])
	if ( ((uint_32)($4 + [-60]) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$15
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [560]) + [8])) = *($3 + [264])
	*($3 + [552]) = (int_64)0
	*($3 + [544]) = (int_64)0
	$5 = ($2 + [68])
	if ( ((uint_32)($4 + [-68]) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$16
	CALL memcpy(($3 + [544]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [76])
	if ( ((uint_32)($4 + [-76]) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$17
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [544]) + [8])) = *($3 + [264])
	*($3 + [536]) = (int_64)0
	*($3 + [528]) = (int_64)0
	$5 = ($2 + [84])
	if ( ((uint_32)($4 + [-84]) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$18
	CALL memcpy(($3 + [528]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [92])
	if ( ((uint_32)($4 + [-92]) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$19
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [528]) + [8])) = *($3 + [264])
	*($3 + [520]) = (int_64)0
	*($3 + [512]) = (int_64)0
	$5 = ($2 + [100])
	if ( ((uint_32)($4 + [-100]) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$20
	CALL memcpy(($3 + [512]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [108])
	if ( ((uint_32)($4 + [-108]) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$21
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [512]) + [8])) = *($3 + [264])
	*($3 + [504]) = (int_64)0
	*($3 + [496]) = (int_64)0
	$5 = ($2 + [116])
	if ( ((uint_32)($4 + [-116]) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$22
	CALL memcpy(($3 + [496]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [124])
	if ( ((uint_32)($4 + [-124]) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$23
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [496]) + [8])) = *($3 + [264])
	*($3 + [488]) = (int_64)0
	*($3 + [480]) = (int_64)0
	$5 = ($2 + [132])
	if ( ((uint_32)($4 + [-132]) > (uint_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$24
	CALL memcpy(($3 + [480]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [140])
	if ( ((uint_32)($4 + [-140]) > (uint_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$25
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [480]) + [8])) = *($3 + [264])
	*($3 + [472]) = (int_64)0
	*($3 + [464]) = (int_64)0
	$5 = ($2 + [148])
	if ( ((uint_32)($4 + [-148]) > (uint_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$26
	CALL memcpy(($3 + [464]), $5, [8])
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [156])
	if ( ((uint_32)($4 + [-156]) > (uint_32)[7]) ){ goto $label$27 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$27
	CALL memcpy(($3 + [264]), $5, [8])
	*((($3 + [464]) + [8])) = *($3 + [264])
	$6 = ($2 + [164])
	$5 = ($4 & [-4])
	if ( ((int_32)$5 != (int_32)[164]) ){ goto $label$28 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$28
	CALL memcpy(($3 + [460]), $6, [4])
	$6 = ($2 + [168])
	if ( ((int_32)$5 != (int_32)[168]) ){ goto $label$29 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$29
	CALL memcpy(($3 + [456]), $6, [4])
	$6 = ($2 + [172])
	if ( ((int_32)$5 != (int_32)[172]) ){ goto $label$30 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$30
	CALL memcpy(($3 + [452]), $6, [4])
	$5 = ($2 + [176])
	if ( ((int_32)$4 != (int_32)[176]) ){ goto $label$31 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$31
	CALL memcpy(($3 + [451]), $5, [1])
	$5 = ($2 + [177])
	if ( ((int_32)$4 != (int_32)[177]) ){ goto $label$32 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$32
	CALL memcpy(($3 + [450]), $5, [1])
	$5 = ($2 + [178])
	if ( ((int_32)$4 != (int_32)[178]) ){ goto $label$33 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$33
	CALL memcpy(($3 + [449]), $5, [1])
	$5 = ($2 + [179])
	if ( ((int_32)$4 != (int_32)[179]) ){ goto $label$34 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$34
	CALL memcpy(($3 + [448]), $5, [1])
	$5 = ($2 + [180])
	if ( ((int_32)$4 != (int_32)[180]) ){ goto $label$35 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$35
	CALL memcpy(($3 + [447]), $5, [1])
	$5 = ($2 + [181])
	if ( ((int_32)$4 != (int_32)[181]) ){ goto $label$36 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$36
	CALL memcpy(($3 + [446]), $5, [1])
	*($3 + [432]) = (int_64)0
	$5 = ($2 + [182])
	if ( ((uint_32)($4 + [-182]) > (uint_32)[7]) ){ goto $label$37 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$37
	CALL memcpy(($3 + [432]), $5, [8])
	$5 = ($2 + [190])
	if ( ((int_32)$4 != (int_32)[190]) ){ goto $label$38 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$38
	CALL memcpy(($3 + [431]), $5, [1])
	$5 = ($2 + [191])
	if ( ((uint_32)($4 + [-191]) > (uint_32)[7]) ){ goto $label$39 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$39
	CALL memcpy(($3 + [416]), $5, [8])
	$5 = ($2 + [199])
	if ( ((uint_32)($4 + [-199]) > (uint_32)[7]) ){ goto $label$40 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$40
	CALL memcpy(($3 + [408]), $5, [8])
	$5 = ($2 + [207])
	if ( ((uint_32)($4 + [-207]) > (uint_32)[3]) ){ goto $label$41 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$41
	CALL memcpy(($3 + [404]), $5, [4])
	$5 = ($2 + [211])
	if ( ((int_32)$4 != (int_32)[211]) ){ goto $label$42 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$42
	$6 = ($2 + $4)
	CALL memcpy(($3 + [403]), $5, [1])
	$5 = ($2 + [212])
	if ( ((int_32)$4 != (int_32)[212]) ){ goto $label$43 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$43
	CALL memcpy(($3 + [402]), $5, [1])
	*(($3 + [288])) = $6
	*($3 + [280]) = $2
	*(($3 + [284])) = ($2 + [213])
	*($3 + [272]) = $1
	*($3 + [264]) = $0
	*($3 + [292 align=4]) = (int_64)361417177238274561
	*($3 + [300]) = [151521030]
	*($3 + [304]) = [2826]
	*($3 + [306 align=2]) = (int_64)144396684594708993
	*($3 + [314]) = [3]
	*($3 + [316 align=4]) = (int_64)289077004450529537
	*($3 + [324]) = [134678021]
	*($3 + [328]) = [265]
	*($3 + [330 align=2]) = (int_64)216736857432785666
	*($3 + [338 align=2]) = [67305985]
	*($3 + [342]) = [261]
	*($3 + [344]) = [2]
	*($3 + [345 align=1]) = (int_64)144399970194490371
	*($3 + [353 align=1]) = (int_64)433757350076154369
	*($3 + [361 align=1]) = [513]
	*($3 + [363 align=1]) = (int_64)723118041428460547
	*($3 + [371 align=1]) = (int_64)289077004467372545
	*($3 + [379 align=1]) = [261]
	*($3 + [381]) = [2]
	*($3 + [384]) = (int_64)72058693550160512
	*($3 + [392]) = [770]
	*($3 + [394]) = [4]
	$2 = *($3 + [639])
	$4 = *($3 + [638])
	$5 = *($3 + [599])
	$6 = *($3 + [598])
	$0 = *($3 + [600])
	$1 = *($3 + [608])
	$7 = *($3 + [616])
	$8 = *($3 + [624])
	*(($9 = (($3 + [248]) + [8]))) = *((($3 + [576]) + [8]))
	*(($10 = (($3 + [232]) + [8]))) = *((($3 + [560]) + [8]))
	*(($11 = (($3 + [216]) + [8]))) = *((($3 + [544]) + [8]))
	*(($12 = (($3 + [200]) + [8]))) = *((($3 + [528]) + [8]))
	*(($13 = (($3 + [184]) + [8]))) = *((($3 + [512]) + [8]))
	*($3 + [248]) = *($3 + [576])
	*($3 + [232]) = *($3 + [560])
	*($3 + [216]) = *($3 + [544])
	*($3 + [200]) = *($3 + [528])
	*($3 + [184]) = *($3 + [512])
	*(($14 = (($3 + [168]) + [8]))) = *((($3 + [496]) + [8]))
	*(($15 = (($3 + [152]) + [8]))) = *((($3 + [480]) + [8]))
	*(($16 = (($3 + [136]) + [8]))) = *((($3 + [464]) + [8]))
	*($3 + [168]) = *($3 + [496])
	*($3 + [152]) = *($3 + [480])
	*($3 + [136]) = *($3 + [464])
	$17 = *($3 + [451])
	$18 = *($3 + [450])
	$19 = *($3 + [449])
	$20 = *($3 + [448])
	$21 = *($3 + [447])
	$22 = *($3 + [446])
	$23 = *($3 + [431])
	$24 = *($3 + [403])
	$25 = *($3 + [402])
	$26 = *($3 + [404])
	$27 = *($3 + [408])
	$28 = *($3 + [416])
	$29 = *($3 + [432])
	$30 = *($3 + [452])
	$31 = *($3 + [456])
	$32 = *($3 + [460])
	*((($3 + [120]) + [8])) = *($9)
	*($3 + [120]) = *($3 + [248])
	*((($3 + [104]) + [8])) = *($10)
	*($3 + [104]) = *($3 + [232])
	*((($3 + [88]) + [8])) = *($11)
	*($3 + [88]) = *($3 + [216])
	*((($3 + [72]) + [8])) = *($12)
	*($3 + [72]) = *($3 + [200])
	*((($3 + [56]) + [8])) = *($13)
	*($3 + [56]) = *($3 + [184])
	*((($3 + [40]) + [8])) = *($14)
	*($3 + [40]) = *($3 + [168])
	*((($3 + [24]) + [8])) = *($15)
	*($3 + [24]) = *($3 + [152])
	*((($3 + [8]) + [8])) = *($16)
	*($3 + [8]) = *($3 + [136])
	CALL $80(($3 + [264]), $2, $4, $8, $7, $1, $0, $5, $6, ($3 + [120]), ($3 + [104]), ($3 + [88]), ($3 + [72]), ($3 + [56]), ($3 + [40]), ($3 + [24]), ($3 + [8]), $32, $31, $30, $17, $18, $19, $20, $21, $22, $29, $23, $28, $27, $26, $24, $25)
	$global$0 = ($3 + [640])
}

void .FUNC $503 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	$0 = *($3 + [136])
	CALL require_auth($0)
	if ( CALL $160($3, $0) ){ goto $label$6 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$6
	$global$0 = ($3 + [144])
}

int_32 .FUNC $364 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [36]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $586(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = [-1]
	*($5 + [40]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $587(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $530 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $502 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [176]) = (int_64)0
	*($3 + [168]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [168]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [168]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [24])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [60 align=4]) = (int_64)361417177238274561
	*($3 + [68]) = [151521030]
	*($3 + [72]) = [2826]
	*($3 + [74 align=2]) = (int_64)144396684594708993
	*($3 + [82]) = [3]
	*($3 + [84 align=4]) = (int_64)289077004450529537
	*($3 + [92]) = [134678021]
	*($3 + [96]) = [265]
	*($3 + [98 align=2]) = (int_64)216736857432785666
	*($3 + [106 align=2]) = [67305985]
	*($3 + [110]) = [261]
	*($3 + [112]) = [2]
	$0 = *($5)
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $0
	*($3 + [113 align=1]) = (int_64)144399970194490371
	*($3 + [121 align=1]) = (int_64)433757350076154369
	*($3 + [129 align=1]) = [513]
	*($3 + [131 align=1]) = (int_64)723118041428460547
	*($3 + [139 align=1]) = (int_64)289077004467372545
	*($3 + [147 align=1]) = [261]
	*($3 + [149]) = [2]
	*($3 + [152]) = (int_64)72058693550160512
	*($3 + [160]) = [770]
	*($3 + [162]) = [4]
	$0 = *($3 + [168])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $303(($3 + [32]), *($3 + [184]), $3)
	$global$0 = ($3 + [192])
}

void .FUNC $450 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $18($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $18(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

int_32 .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([80])) + [64]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [36])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [41])
	*($3 + [64]) = ($5 + [44])
	*($3 + [68]) = ($5 + [48])
	*($3 + [72]) = ($5 + [52])
	*($3 + [76]) = ($5 + [56])
	CALL $562(($3 + [32]), ($3 + [24]))
	*($5 + [68]) = $1
	*($5 + [72 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $205(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(*($2) + [4])
	*($1 + [8]) = *($5 + [80])
	$6 = *($1)
	$8 = *($5 + [88])
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *(($5 + [92])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22(($5 + [88]), [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [16]), (*(*($2) + [4]) + [88]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$5 = *($1 + [16])
	$2 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($2 + [16])
	$9 = (CASTING uint_64)(uint_32 $2)
	$7 = ($1 + [16])
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($5 <= [513]) ){ goto $label$8 }
	$2 = CALL $1($5)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$7
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [40]) = $7
	*($4 + [32]) = $1
	CALL $531(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($2)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [12590])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12638])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12660])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $30(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8364])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8460])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $29(($3 + [40]), $4)
	if ( ((int_32)*($2 + [40]) == (int_32)($3 + [40])) ){ goto $label$8 }
	CALL eosio_assert([0], [11998])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8805])
	
.LABEL $label$8
	CALL require_auth(*($2 + [32]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8549])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8838])
	
.LABEL $label$15
	$4 = ($1 + [8])
	if ( ((int_64)*($4) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$16
	*($3 + [32]) = $1
	CALL $49(($3 + [40]), $2, ($3 + [32]))
	$6 = *(($2 + [32]))
	*(($8 = (($3 + [16]) + [8]))) = *($4)
	$7 = *($1)
	*(($3 + [8])) = *($8)
	*($3 + [16]) = $7
	*($3) = *($3 + [16])
	CALL $44($0, $6, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [68])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $9($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL $9($4)
	
.LABEL $label$17
	$global$0 = ($3 + [80])
}

void .FUNC $264 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [1])
	*($1 + [32]) = (*($1 + [32]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = ($1 + [36])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [36]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [58])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [68]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $267 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $43 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $29($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $42 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-8281825045618098176, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = [1]
	if ( ((int_32)*(CALL $45(($2 + [8]), $0) + [8]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$1
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $9($7)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $41 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [112])
	$global$0 = $5
	CALL require_auth($1)
	if ( (CALL $27($0) == 0) ){ goto $label$7 }
	if ( CALL $42($0, $1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [8257])
	if ( (CALL $42($0, $1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [8655])
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$1 == (int_64)$2) ){ goto $label$3 }
	
.LABEL $label$4
	if ( CALL is_account($2) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8704])
	if ( CALL is_account($2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8728])
	
.LABEL $label$1
	$6 = *($3 + [8])
	*(($5 + [104])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [80]) = $7)
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [72]) = *($0)
	$8 = CALL $43(($5 + [72]), $7, [8754])
	CALL require_recipient($1)
	CALL require_recipient($2)
	if ( (CALL $42($0, $1) == 0) ){ goto $label$8 }
	CALL eosio_assert([0], [8655])
	
.LABEL $label$8
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$10 }
	$10 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$7 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$7 = $11
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$13 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [8549])
	
.LABEL $label$9
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$18 }
	if ( ((int_64)$6 != (int_64)*($8 + [8])) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], [8773])
	if ( ((int_64)$6 == (int_64)*($8 + [8])) ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [8595])
	if ( (*($4) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((*($4) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	if ( (*($4 + [4]) <= [257]) ){ goto $label$14 }
	CALL eosio_assert([0], [8460])
	
.LABEL $label$14
	$10 = CALL has_auth($2)
	$12 = ($3 + [8])
	$11 = *($12)
	*((($5 + [56]) + [8])) = $11
	$7 = *($3)
	*((($5 + [24]) + [8])) = $11
	*($5 + [24]) = $7
	*($5 + [56]) = $7
	CALL $44($0, $1, ($5 + [24]))
	$11 = *($12)
	*((($5 + [40]) + [8])) = $11
	$7 = *($3)
	*((($5 + [8]) + [8])) = $11
	*($5 + [8]) = $7
	*($5 + [40]) = $7
	CALL $36($0, $2, ($5 + [8]), ( $2 ? $1 : $10 ))
	$13 = *($5 + [96])
	if ( ($13 == 0) ){ goto $label$19 }
	$0 = ($5 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$21 }
	
.LOOP $label$22:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$23 }
	CALL $9($12)
	
.LABEL $label$23
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$22 }
	$10 = *(($5 + [96]))
	goto $label$20 
	
.LABEL $label$21
	$10 = $13
	
.LABEL $label$20
	*($0) = $13
	CALL $9($10)
	
.LABEL $label$19
	$global$0 = ($5 + [112])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$1
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($5 + [8])
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, $2, $6), ($4 + [16]), [16]
	*($5 + [20]) = $7)
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$2
	*($4 + [40]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [16]) = $6)
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [40]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $519(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12590])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12638])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12660])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $52(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $44 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $38(($3 + [8]), $0)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$8
	$6 = *($2)
	$5 = *($4)
	if ( ((int_64)$5 < (int_64)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [12400])
	$6 = *($2)
	$5 = *([0])
	if ( ((int_64)$5 >= (int_64)$6) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [12424])
	if ( ((int_64)*($4) == (int_64)*($2)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$5 != (int_64)$6) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $46(($3 + [8]), $4)
	$0 = *($3 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($3) = $2
	CALL $47(($3 + [8]), $4, $1, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [36])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $0
	
.LABEL $label$9
	*($7) = $0
	CALL $9($2)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $550 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [20]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	$0 = *($0)
	*($2 + [15]) = ((int_32)*($0 + [24]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$5 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	*($2 + [8]) = $0
	CALL $551(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $509 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [151]), $5, [1])
	$5 = ($2 + [9])
	if ( ((int_32)$4 != (int_32)[9]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [150]), $5, [1])
	$5 = ($2 + [10])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [149]), $5, [1])
	$5 = ($2 + [11])
	if ( ((int_32)$4 != (int_32)[11]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	$6 = ($2 + $4)
	CALL memcpy(($3 + [148]), $5, [1])
	$5 = ($2 + [12])
	if ( ((int_32)$4 != (int_32)[12]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [147]), $5, [1])
	*(($3 + [32])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [13])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $334(($3 + [8]), *($3 + [152]), *($3 + [151]), *($3 + [150]), *($3 + [149]), *($3 + [148]), *($3 + [147]))
	$global$0 = ($3 + [160])
}

int_32 .FUNC $362 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $573(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $306(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $457 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $508 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [200])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [200])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [192]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $5, [8])
	*($3 + [184]) = (int_64)0
	*($3 + [176]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [176]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $5, [8])
	*(($4 = (($3 + [176]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $6
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [32])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [68 align=4]) = (int_64)361417177238274561
	*($3 + [76]) = [151521030]
	*($3 + [80]) = [2826]
	*($3 + [82 align=2]) = (int_64)144396684594708993
	*($3 + [90]) = [3]
	*($3 + [92 align=4]) = (int_64)289077004450529537
	*($3 + [100]) = [134678021]
	*($3 + [104]) = [265]
	*($3 + [106 align=2]) = (int_64)216736857432785666
	*($3 + [114 align=2]) = [67305985]
	*($3 + [118]) = [261]
	*($3 + [120]) = [2]
	$0 = *($4)
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	*($3 + [121 align=1]) = (int_64)144399970194490371
	*($3 + [129 align=1]) = (int_64)433757350076154369
	*($3 + [137 align=1]) = [513]
	*($3 + [139 align=1]) = (int_64)723118041428460547
	*($3 + [147 align=1]) = (int_64)289077004467372545
	*($3 + [155 align=1]) = [261]
	*($3 + [157]) = [2]
	*($3 + [160]) = (int_64)72058693550160512
	*($3 + [168]) = [770]
	*($3 + [170]) = [4]
	$0 = *($3 + [176])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $328(($3 + [40]), *($3 + [200]), *($3 + [192]), ($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $167 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$6 = ($global$0 - [176])
	$global$0 = $6
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [9992])
	
.LABEL $label$1
	$7 = *($0)
	*($6 + [8]) = $1
	*($6 + [20]) = [10024]
	*($6 + [24]) = [0]
	*($6 + [28]) = [10024]
	*($6 + [32]) = [10024]
	*($6 + [36 align=4]) = (int_64)0
	*($6 + [48]) = $2
	*($6 + [56]) = $3
	*($6 + [64]) = $4
	*($6 + [16]) = *($0 + [81])
	$5 = CALL $18(($6 + [72]), $5)
	*($6 + [88]) = [0]
	*($6 + [84]) = [10024]
	*($6 + [92]) = [10024]
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = (int_64)5937556300622899072
	*($6 + [112]) = (int_64)-4420674833730240512
	*(($0 = CALL $7([16]))) = $7
	*($0 + [8]) = (int_64)3617214756542218240
	*(($6 + [140])) = [0]
	$8 = ($0 + [16])
	*(($6 + [128])) = $8
	*(($6 + [124])) = $8
	*($6 + [120]) = $0
	*($6 + [132 align=4]) = (int_64)0
	$0 = *($5)
	$5 = ( *(($6 + [76])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($5 + [62])
	$1 = (CASTING uint_64)(uint_32 $5)
	$5 = ($6 + [132])
	
.LOOP $label$2:
	$0 = ($0 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$2 }
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $161($5, $0)
	$5 = *(($6 + [136]))
	$0 = *(($6 + [132]))
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$0 = [0]
	
.LABEL $label$3
	*($6 + [148]) = $0
	*($6 + [144]) = $0
	*($6 + [152]) = $5
	*($6 + [160]) = ($6 + [144])
	*($6 + [168]) = ($6 + [8])
	CALL $168(($6 + [168]), ($6 + [160]))
	CALL $163(($6 + [104]))
	$0 = *($6 + [132])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($6 + [136])) = $0
	CALL $9($0)
	
.LABEL $label$5
	$0 = *($6 + [120])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [124])) = $0
	CALL $9($0)
	
.LABEL $label$6
	if ( ((*($6 + [72]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($6 + [80])))
	
.LABEL $label$7
	$global$0 = ($6 + [176])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [12]) != (int_32)[0])
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	*($2 + [8]) = $0
	CALL $544(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $165 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($global$0 - [160])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [9992])
	
.LABEL $label$1
	$5 = *($0)
	*($4 + [8]) = $1
	*($4 + [20]) = [10024]
	*($4 + [24]) = [0]
	*($4 + [28]) = [10024]
	*($4 + [32]) = [10024]
	*($4 + [40]) = $2
	*($4 + [48]) = $3
	*($4 + [52]) = [10024]
	*($4 + [56]) = [0]
	*($4 + [60]) = [10024]
	*($4 + [64]) = [10024]
	*($4 + [68]) = [10024]
	*($4 + [72]) = [0]
	*($4 + [76]) = [10024]
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)5937556300622899072
	*($4 + [16]) = *($0 + [80])
	*($4 + [96]) = (int_64)-4420674833730240512
	*(($0 = CALL $7([16]))) = $5
	*($0 + [8]) = (int_64)3617214756542218240
	*(($4 + [124])) = [0]
	$3 = ($0 + [16])
	*(($4 + [112])) = $3
	*(($4 + [108])) = $3
	*($4 + [104]) = $0
	*($4 + [116 align=4]) = (int_64)0
	CALL $161(($4 + [116]), [46])
	$6 = ($4 + [120])
	$0 = *($6)
	$3 = *($4 + [116])
	*($4 + [132]) = $3
	*($4 + [128]) = $3
	*($4 + [136]) = $0
	*($4 + [144]) = ($4 + [128])
	*($4 + [152]) = ($4 + [8])
	CALL $166(($4 + [152]), ($4 + [144]))
	CALL $163(($4 + [88]))
	$0 = *($4 + [116])
	if ( ($0 == 0) ){ goto $label$2 }
	*($6) = $0
	CALL $9($0)
	
.LABEL $label$2
	$0 = *($4 + [104])
	if ( ($0 == 0) ){ goto $label$3 }
	*(($4 + [108])) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [160])
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $521(CALL $520($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $163 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $161($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $164(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $541(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $23($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $160 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)5094022140569452544, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $84(($2 + [8]), $0)
	if ( ((int_32)*($3 + [12]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$1
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $9($7)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return ((int_32)$3 != (int_32)[0])
}

void .FUNC $537 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [56])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $538(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $525(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $375(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $169 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = ($global$0 - [176])
	$global$0 = $5
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [9992])
	
.LABEL $label$1
	$6 = *($0)
	*($5 + [8]) = $1
	*($5 + [20]) = [10024]
	*($5 + [24]) = [0]
	*($5 + [28]) = [10024]
	*($5 + [32]) = [10024]
	*($5 + [36 align=4]) = (int_64)0
	*($5 + [44]) = [10024]
	*($5 + [48]) = [0]
	*($5 + [52]) = [10024]
	*($5 + [56]) = [10024]
	*($5 + [64]) = $2
	*($5 + [72]) = $3
	*($5 + [16]) = *($0 + [82])
	$4 = CALL $18(($5 + [80]), $4)
	*($5 + [104]) = (int_64)5937556300622899072
	*($5 + [92 align=4]) = (int_64)0
	*($5 + [112]) = (int_64)-4420674833730240512
	*(($0 = CALL $7([16]))) = $6
	*($0 + [8]) = (int_64)3617214756542218240
	*(($5 + [140])) = [0]
	$7 = ($0 + [16])
	*(($5 + [128])) = $7
	*(($5 + [124])) = $7
	*($5 + [120]) = $0
	*($5 + [132 align=4]) = (int_64)0
	$0 = *($4)
	$4 = ( *(($5 + [84])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($4 + [55])
	$1 = (CASTING uint_64)(uint_32 $4)
	$4 = ($5 + [132])
	
.LOOP $label$2:
	$0 = ($0 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$2 }
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $161($4, $0)
	$4 = *(($5 + [136]))
	$0 = *(($5 + [132]))
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$0 = [0]
	
.LABEL $label$3
	*($5 + [148]) = $0
	*($5 + [144]) = $0
	*($5 + [152]) = $4
	*($5 + [160]) = ($5 + [144])
	*($5 + [168]) = ($5 + [8])
	CALL $170(($5 + [168]), ($5 + [160]))
	CALL $163(($5 + [104]))
	$0 = *($5 + [132])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($5 + [136])) = $0
	CALL $9($0)
	
.LABEL $label$5
	$0 = *($5 + [120])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($5 + [124])) = $0
	CALL $9($0)
	
.LABEL $label$6
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($5 + [88])))
	
.LABEL $label$7
	$global$0 = ($5 + [176])
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [12]) != (int_32)[0])
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	*($2 + [8]) = $0
	CALL $547(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $578 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $61 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$7 = ($global$0 - [592])
	$global$0 = $7
	CALL require_auth((int_64)5937556299887047648)
	if ( (CALL $27($0) == 0) ){ goto $label$5 }
	if ( CALL $42($0, $3) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8257])
	if ( (CALL $42($0, $3) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8923])
	if ( (CALL $28($0, (int_64)6110391600498257792) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( CALL $28($0, (int_64)6110391600498257792) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9057])
	
.LABEL $label$1
	$8 = CALL $56($0, (int_64)-3792729948836422512)
	*($7 + [232]) = [9109]
	*($7 + [236]) = CALL $15([9109])
	*($7 + [32]) = *($7 + [232])
	CALL $32(($7 + [240]), ($7 + [32]))
	$9 = *($0 + [30])
	*(($7 + [224])) = [0]
	*($7 + [208]) = (int_64)-1
	*($7 + [216]) = (int_64)0
	*($7 + [228]) = [0]
	$10 = *($0)
	*($7 + [192]) = $10
	*($7 + [200]) = $10
	$11 = CALL db_find_i64($10, $10, (int_64)-7880044402153918464, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $62(($7 + [192]), $11) + [20]) == (int_32)($7 + [192])) ){ goto $label$7 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$7
	CALL eosio_assert([0], [9122])
	
.LABEL $label$6
	$12 = ((int_32)$9 == (int_32)$2)
	if ( ((int_64)CALL current_receiver() == (int_64)*($7 + [192])) ){ goto $label$8 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$8
	*(($9 = CALL $7([32])) + [20]) = ($7 + [192])
	*($9 + [8]) = $3
	*($9) = $1
	*($9 + [16]) = $2
	*($9 + [18]) = $12
	*($7 + [152]) = (($7 + [448]) + [19])
	*($7 + [148]) = ($7 + [448])
	*($7 + [144]) = ($7 + [448])
	*($7 + [104]) = ($7 + [144])
	$11 = ($9 + [8])
	*($7 + [244]) = $11
	*($7 + [240]) = $9
	*($7 + [248]) = ($9 + [16])
	*($7 + [252]) = ($9 + [17])
	*($7 + [256]) = ($9 + [18])
	CALL $63(($7 + [240]), ($7 + [104]))
	$10 = *($9)
	$13 = (($7 + [192]) + [8])
	*($9 + [24]) = CALL db_store_i64(*($13), (int_64)-7880044402153918464, $3, $10, ($7 + [448]), [19])
	$14 = (($7 + [192]) + [16])
	if ( (uint_64)($10 <= *($14)) ){ goto $label$9 }
	*($14) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$10 = *($9)
	$15 = *($13)
	*($7 + [240]) = *($11)
	*($9 + [28]) = CALL db_idx64_store($15, (int_64)-7880044402153918464, $3, $10, ($7 + [240]))
	*($7 + [448]) = $9
	$10 = *($9)
	*($7 + [240]) = $10
	$13 = *(($9 + [24]))
	*($7 + [144]) = $13
	$14 = ($7 + [220])
	$11 = *($14)
	if ( ((uint_32)$11 >= (uint_32)*((($7 + [192]) + [32]))) ){ goto $label$12 }
	*($11 + [8]) = $10
	*($11 + [16]) = $13
	*($7 + [448]) = [0]
	*($11) = $9
	*($14) = ($11 + [24])
	$9 = *($7 + [448])
	*($7 + [448]) = [0]
	if ( $9 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $64((($7 + [192]) + [24]), ($7 + [448]), ($7 + [240]), ($7 + [144]))
	$9 = *($7 + [448])
	*($7 + [448]) = [0]
	if ( ($9 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9($9)
	
.LABEL $label$10
	$16 = CALL $56($0, (int_64)5937548789047547040)
	$9 = CALL $15([9158])
	if ( ($9 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [12838])
	goto $label$15 
	
.LABEL $label$16
	if ( ($9 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$15 = (int_64)0
	
.LOOP $label$17:
	$11 = *(($9 + [9157]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [12883])
	
.LABEL $label$18
	$15 = ((int_64)((int_64)$15 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$17 }
	goto $label$13 
	
.LABEL $label$14
	$15 = (int_64)0
	
.LABEL $label$13
	$10 = ((int_64)$15 & (int_64)72057594037927935)
	$17 = ((int_64)((int_64)$15 << (int_64)8) | (int_64)4)
	$9 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$15 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$10 = $15
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$10 = $15
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $11 ){ goto $label$23 }
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [8364])
	
.LABEL $label$19
	$16 = ((int_64)$16 * (int_64)10000)
	$9 = CALL $15([9158])
	if ( ($9 <= [8]) ){ goto $label$27 }
	CALL eosio_assert([0], [12838])
	goto $label$26 
	
.LABEL $label$27
	if ( ($9 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$10 = (int_64)0
	
.LOOP $label$28:
	$11 = *(($9 + [9157]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$29 }
	CALL eosio_assert([0], [12883])
	
.LABEL $label$29
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$28 }
	goto $label$24 
	
.LABEL $label$25
	$10 = (int_64)0
	
.LABEL $label$24
	$15 = ((int_64)$10 << (int_64)8)
	if ( (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$30 }
	CALL eosio_assert([0], [12936])
	
.LABEL $label$30
	$18 = ((int_64)$15 | (int_64)4)
	$10 = ((int_64)$10 & (int_64)72057594037927935)
	$9 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$15 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$10 = $15
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$10 = $15
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $11 ){ goto $label$35 }
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert([0], [8364])
	
.LABEL $label$31
	if ( ((int_32)((CASTING uint_32)(uint_64 $8) & [255]) != (int_32)$2) ){ goto $label$37 }
	*((($7 + [144]) + [32])) = [0]
	*($7 + [160]) = (int_64)-1
	*($7 + [168]) = (int_64)0
	$10 = *($0)
	*($7 + [144]) = $10
	*($7 + [152]) = $10
	if ( ((int_64)CALL current_receiver() == (int_64)*($7 + [144])) ){ goto $label$38 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$38
	*(($9 = CALL $7([232])) + [24]) = (int_64)0
	*($9 + [216]) = ($7 + [144])
	*($9 + [8]) = $4
	*($9) = $1
	*($9 + [16]) = $3
	*($9 + [32]) = $2
	*($9 + [40]) = $16
	*($9 + [48]) = $18
	*($9 + [56]) = (int_64)0
	*($9 + [64]) = $17
	*($9 + [72]) = (int_64)0
	*($9 + [80]) = $17
	*($9 + [88]) = (int_64)0
	*($9 + [96]) = $17
	*($9 + [104]) = (int_64)0
	*($9 + [112]) = $17
	*($9 + [120]) = (int_64)0
	*($9 + [33]) = *($0 + [32])
	*($9 + [34]) = *($0 + [42])
	*($9 + [136]) = (int_64)0
	*($9 + [128]) = $17
	*($9 + [144]) = $17
	*($9 + [152]) = (int_64)0
	*($9 + [160]) = $17
	*($9 + [168]) = (int_64)0
	*($9 + [176]) = [0]
	*($9 + [180]) = [0]
	*($9 + [182]) = [0]
	*($9 + [184]) = [0]
	*($9 + [185]) = $12
	*($9 + [186]) = [0]
	*($9 + [192]) = (int_64)0
	*($9 + [200]) = (int_64)0
	*($9 + [212]) = $5
	*($9 + [181]) = *($0 + [51])
	*($9 + [213]) = $6
	*($7 + [112]) = (($7 + [240]) + [204])
	*($7 + [108]) = ($7 + [240])
	*($7 + [104]) = ($7 + [240])
	*($7 + [568]) = ($7 + [104])
	*($7 + [452]) = ($9 + [8])
	*($7 + [448]) = $9
	*($7 + [456]) = ($9 + [16])
	*($7 + [460]) = ($9 + [24])
	*($7 + [464]) = ($9 + [32])
	*($7 + [468]) = ($9 + [33])
	*($7 + [472]) = ($9 + [34])
	*($7 + [476]) = ($9 + [40])
	*($7 + [480]) = ($9 + [56])
	*($7 + [484]) = ($9 + [72])
	*($7 + [488]) = ($9 + [88])
	*($7 + [492]) = ($9 + [104])
	*($7 + [496]) = ($9 + [120])
	*($7 + [500]) = ($9 + [136])
	*($7 + [504]) = ($9 + [152])
	*($7 + [508]) = ($9 + [168])
	*($7 + [512]) = ($9 + [172])
	*($7 + [516]) = ($9 + [176])
	*($7 + [520]) = ($9 + [180])
	*($7 + [528]) = ($9 + [182])
	*($7 + [524]) = ($9 + [181])
	*($7 + [532]) = ($9 + [183])
	*($7 + [536]) = ($9 + [184])
	*($7 + [540]) = ($9 + [185])
	*($7 + [544]) = ($9 + [186])
	*($7 + [548]) = ($9 + [192])
	*($7 + [552]) = ($9 + [200])
	*($7 + [556]) = ($9 + [208])
	*($7 + [560]) = ($9 + [212])
	*($7 + [564]) = ($9 + [213])
	CALL $65(($7 + [448]), ($7 + [568]))
	$10 = *($9)
	$13 = CALL db_store_i64(*((($7 + [144]) + [8])), (int_64)5937556069193265024, $3, $10, ($7 + [240]), [204])
	*($9 + [220]) = $13
	$11 = (($7 + [144]) + [16])
	if ( (uint_64)($10 <= *($11)) ){ goto $label$39 }
	*($11) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$39
	*($7 + [448]) = $9
	$10 = *($9)
	*($7 + [240]) = $10
	*($7 + [104]) = $13
	$2 = ($7 + [172])
	$11 = *($2)
	if ( ((uint_32)$11 >= (uint_32)*(($7 + [176]))) ){ goto $label$42 }
	*($11 + [8]) = $10
	*($11 + [16]) = $13
	*($7 + [448]) = [0]
	*($11) = $9
	*($2) = ($11 + [24])
	$9 = *($7 + [448])
	$11 = [0]
	*($7 + [448]) = [0]
	if ( $9 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	CALL $66(($7 + [168]), ($7 + [448]), ($7 + [240]), ($7 + [104]))
	$9 = *($7 + [448])
	$11 = [0]
	*($7 + [448]) = [0]
	if ( ($9 == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $9($9)
	
.LABEL $label$40
	*(($7 + [480])) = $11
	*($7 + [464]) = (int_64)-1
	*($7 + [472]) = (int_64)0
	$10 = *($0)
	*($7 + [448]) = $10
	*($7 + [456]) = $10
	*($7 + [136]) = [9109]
	*($7 + [140]) = CALL $15([9109])
	*($7 + [24]) = *($7 + [136])
	CALL $32(($7 + [240]), ($7 + [24]))
	$11 = *(($7 + [476]))
	$2 = *($7 + [472])
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$44 }
	
.LOOP $label$46:
	$9 = ($11 + [-24])
	$13 = *($9)
	if ( ((int_64)*($13) == (int_64)5937543767500543376) ){ goto $label$45 }
	$11 = $9
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$44 }
	if ( ((int_32)*($13 + [36]) == (int_32)($7 + [448])) ){ goto $label$43 }
	CALL eosio_assert([0], [11998])
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL $33(($7 + [448]), CALL $fimport$2(*($7 + [448]), *(($7 + [456])), (int_64)4982871467403247616, (int_64)5937543767500543376))
	if ( ((int_32)*($13 + [36]) == (int_32)($7 + [448])) ){ goto $label$43 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$43
	$10 = *($0)
	$15 = *($13 + [16])
	*($7 + [112]) = (int_64)3617214756542218240
	*($7 + [104]) = $3
	$9 = CALL $7([16])
	*(($7 + [80])) = $18
	*(($7 + [96])) = [0]
	*($9) = *($7 + [104])
	*(($9 + [8])) = *($7 + [112])
	*($7 + [120]) = $9
	*($7 + [56]) = $3
	*($7 + [64]) = $15
	*($7 + [72]) = $16
	*($7 + [88]) = (int_64)0
	$9 = ($9 + [16])
	*($7 + [128]) = $9
	*($7 + [124]) = $9
	$11 = ($7 + [88])
	$9 = CALL $15([9163])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$49 }
	*(($7 + [88])) = ($9 << [1])
	$13 = ($11 + [1])
	if ( $9 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$2 = (($9 + [16]) & [-16])
	$13 = CALL $7($2)
	*(($7 + [96])) = $13
	*(($7 + [92])) = $9
	*($7 + [88]) = ($2 | [1])
	
.LABEL $label$48
	CALL memcpy($13, [9163], $9)
	
.LABEL $label$47
	*(($13 + $9)) = [0]
	$9 = (($7 + [120]) + [8])
	$13 = *($9)
	*($9) = [0]
	*((($7 + [240]) + [24])) = *((($7 + [56]) + [24]))
	*(($9 = (($7 + [240]) + [40]))) = *(($11 + [8]))
	$15 = *($11)
	*(($7 + [88])) = [0]
	*($7 + [568]) = *($7 + [120])
	*($7 + [576]) = $13
	*($7 + [120]) = (int_64)0
	*($7 + [240]) = *($7 + [56])
	*($7 + [248]) = *((($7 + [56]) + [8]))
	*($7 + [256]) = *($7 + [72])
	*($7 + [272]) = $15
	*(($7 + [92])) = [0]
	*((($7 + [56]) + [40])) = [0]
	CALL $37($10, (int_64)-3617168760277827584, ($7 + [568]), ($7 + [240]))
	if ( ((*($7 + [272]) & [1]) == 0) ){ goto $label$50 }
	CALL $9(*($9))
	
.LABEL $label$50
	$9 = *($7 + [568])
	if ( ($9 == 0) ){ goto $label$51 }
	*($7 + [572]) = $9
	CALL $9($9)
	
.LABEL $label$51
	if ( ((*(($7 + [88])) & [1]) == 0) ){ goto $label$52 }
	CALL $9(*(($7 + [96])))
	
.LABEL $label$52
	$13 = *($7 + [472])
	if ( ($13 == 0) ){ goto $label$53 }
	$2 = ($7 + [476])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$55 }
	
.LOOP $label$56:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$57 }
	if ( ((*($11 + [24]) & [1]) == 0) ){ goto $label$58 }
	CALL $9(*(($11 + [32])))
	
.LABEL $label$58
	CALL $9($11)
	
.LABEL $label$57
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$56 }
	$9 = *(($7 + [472]))
	goto $label$54 
	
.LABEL $label$55
	$9 = $13
	
.LABEL $label$54
	*($2) = $13
	CALL $9($9)
	
.LABEL $label$53
	$13 = *($7 + [168])
	if ( ($13 == 0) ){ goto $label$37 }
	$2 = ($7 + [172])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$60 }
	
.LOOP $label$61:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$62 }
	CALL $9($11)
	
.LABEL $label$62
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$61 }
	$9 = *(($7 + [168]))
	goto $label$59 
	
.LABEL $label$60
	$9 = $13
	
.LABEL $label$59
	*($2) = $13
	CALL $9($9)
	
.LABEL $label$37
	*(($7 + [272])) = [0]
	*($7 + [256]) = (int_64)-1
	*($7 + [264]) = (int_64)0
	$10 = *($0)
	*($7 + [240]) = $10
	*($7 + [248]) = $10
	*($7 + [48]) = [9184]
	*($7 + [52]) = CALL $15([9184])
	*($7 + [16]) = *($7 + [48])
	CALL $32(($7 + [448]), ($7 + [16]))
	$11 = *(($7 + [268]))
	$2 = *($7 + [264])
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$65 }
	
.LOOP $label$67:
	$9 = ($11 + [-24])
	$13 = *($9)
	if ( ((int_64)*($13) == (int_64)-7880044396964042864) ){ goto $label$66 }
	$11 = $9
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$65 }
	if ( ((int_32)*($13 + [28]) == (int_32)($7 + [240])) ){ goto $label$68 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$68
	if ( $13 ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$65
	$9 = CALL db_find_i64(*($7 + [240]), *(($7 + [248])), (int_64)-4157500428759203840, (int_64)-7880044396964042864)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$64 }
	$13 = CALL $67(($7 + [240]), $9)
	if ( ((int_32)*($13 + [28]) == (int_32)($7 + [240])) ){ goto $label$63 }
	CALL eosio_assert([0], [11998])
	goto $label$63 
	
.LABEL $label$64
	$13 = [0]
	CALL eosio_assert([0], [12129])
	
.LABEL $label$63
	CALL $68(($7 + [240]), $13)
	if ( (int_64)($4 == 0) ){ goto $label$69 }
	*(($7 + [480])) = [0]
	*($7 + [464]) = (int_64)-1
	*($7 + [472]) = (int_64)0
	*($7 + [484]) = [0]
	$10 = *($0)
	*($7 + [448]) = $10
	*($7 + [456]) = $10
	if ( ((int_64)CALL current_receiver() == (int_64)*($7 + [448])) ){ goto $label$70 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$70
	*(($9 = CALL $7([40])) + [24]) = ($7 + [448])
	*($9 + [8]) = $4
	*($9) = $1
	*($9 + [16]) = *(($0 + [48]))
	*($7 + [576]) = (($7 + [144]) + [17])
	*($7 + [572]) = ($7 + [144])
	*($7 + [568]) = ($7 + [144])
	*($7 + [584]) = ($7 + [568])
	$11 = ($9 + [8])
	*($7 + [108]) = $11
	*($7 + [104]) = $9
	*($7 + [112]) = ($9 + [16])
	CALL $69(($7 + [104]), ($7 + [584]))
	$10 = *($9)
	$13 = (($7 + [448]) + [8])
	*($9 + [28]) = CALL db_store_i64(*($13), (int_64)-5001621371248181248, $3, $10, ($7 + [144]), [17])
	$0 = (($7 + [448]) + [16])
	if ( (uint_64)($10 <= *($0)) ){ goto $label$71 }
	*($0) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$71
	$10 = *($9)
	$15 = *($13)
	*($7 + [104]) = *($11)
	*($9 + [32]) = CALL db_idx64_store($15, (int_64)-5001621371248181248, $3, $10, ($7 + [104]))
	*($7 + [104]) = $9
	$10 = *($9)
	*($7 + [144]) = $10
	$13 = *(($9 + [28]))
	*($7 + [568]) = $13
	$0 = (($7 + [448]) + [28])
	$11 = *($0)
	if ( ((uint_32)$11 >= (uint_32)*(($7 + [480]))) ){ goto $label$74 }
	*($11 + [8]) = $10
	*($11 + [16]) = $13
	*($7 + [104]) = [0]
	*($11) = $9
	*($0) = ($11 + [24])
	$9 = *($7 + [104])
	*($7 + [104]) = [0]
	if ( $9 ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	CALL $70(($7 + [472]), ($7 + [104]), ($7 + [144]), ($7 + [568]))
	$9 = *($7 + [104])
	*($7 + [104]) = [0]
	if ( ($9 == 0) ){ goto $label$72 }
	
.LABEL $label$73
	CALL $9($9)
	
.LABEL $label$72
	*($7 + [40]) = [9197]
	*($7 + [44]) = CALL $15([9197])
	*($7 + [8]) = *($7 + [40])
	CALL $32(($7 + [144]), ($7 + [8]))
	$11 = *(($7 + [268]))
	$0 = *(($7 + [264]))
	if ( ((int_32)$0 == (int_32)$11) ){ goto $label$77 }
	
.LOOP $label$79:
	$9 = ($11 + [-24])
	$13 = *($9)
	if ( ((int_64)*($13) == (int_64)-5001621593128523888) ){ goto $label$78 }
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$78
	if ( ((int_32)$0 == (int_32)$11) ){ goto $label$77 }
	if ( ((int_32)*($13 + [28]) == (int_32)($7 + [240])) ){ goto $label$80 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$80
	if ( $13 ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$77
	$9 = CALL db_find_i64(*($7 + [240]), *(($7 + [248])), (int_64)-4157500428759203840, (int_64)-5001621593128523888)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$76 }
	$13 = CALL $67(($7 + [240]), $9)
	if ( ((int_32)*($13 + [28]) == (int_32)($7 + [240])) ){ goto $label$75 }
	CALL eosio_assert([0], [11998])
	goto $label$75 
	
.LABEL $label$76
	$13 = [0]
	CALL eosio_assert([0], [12129])
	
.LABEL $label$75
	CALL $71(($7 + [240]), $13)
	$13 = *($7 + [472])
	if ( ($13 == 0) ){ goto $label$69 }
	$0 = ($7 + [476])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$82 }
	
.LOOP $label$83:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$84 }
	CALL $9($11)
	
.LABEL $label$84
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$83 }
	$9 = *(($7 + [472]))
	goto $label$81 
	
.LABEL $label$82
	$9 = $13
	
.LABEL $label$81
	*($0) = $13
	CALL $9($9)
	
.LABEL $label$69
	$13 = *($7 + [264])
	if ( ($13 == 0) ){ goto $label$85 }
	$0 = ($7 + [268])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$87 }
	
.LOOP $label$88:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$89 }
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$90 }
	CALL $9(*(($11 + [24])))
	
.LABEL $label$90
	CALL $9($11)
	
.LABEL $label$89
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$88 }
	$9 = *(($7 + [264]))
	goto $label$86 
	
.LABEL $label$87
	$9 = $13
	
.LABEL $label$86
	*($0) = $13
	CALL $9($9)
	
.LABEL $label$85
	$13 = *($7 + [216])
	if ( ($13 == 0) ){ goto $label$91 }
	$0 = ($7 + [220])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$93 }
	
.LOOP $label$94:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$95 }
	CALL $9($11)
	
.LABEL $label$95
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$94 }
	$9 = *(($7 + [216]))
	goto $label$92 
	
.LABEL $label$93
	$9 = $13
	
.LABEL $label$92
	*($0) = $13
	CALL $9($9)
	
.LABEL $label$91
	$global$0 = ($7 + [592])
	return (unreachable)
	
.LABEL $label$36
	CALL $17($11)
}

void .FUNC $456 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $595 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [56])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $596(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $416 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $241 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [1])
	*($1 + [48]) = (*($1 + [48]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = ($1 + [48])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [44]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [63])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [84]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $563 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $562 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $561 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	*($0 + [16 align=4]) = *($1)
	*($5) = *($1 + [8])
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	CALL $161(($0 + [28]), [16])
	$1 = *($0 + [28])
	$5 = (*(($0 + [32])) - $1)
	if ( ((int_32)$5 > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	
.LABEL $label$1
	CALL memcpy($1, $4, [8])
	$4 = ($4 + [8])
	$1 = ($1 + [8])
	if ( ((int_32)($5 + [-8]) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	
.LABEL $label$2
	CALL memcpy($1, $4, [8])
	return $0
}

int_32 .FUNC $560 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [128]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($1 + [136])))
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($1 + [96])))
	if ( (*($1 + [56]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($1 + [64])))
	
.LABEL $label$4
	CALL $9($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $9($1)
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $567 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)3775065857097465856)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $352(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $566 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $565 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($0 + [17])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $564 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $569 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [116]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5534162690622095360)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $295(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $568 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $398 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [184]) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [224]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $425(($4 + [24]), ($4 + [224]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [208])
	*($4 + [40]) = $0
	*($4 + [224]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [200])
	$0 = *($4 + [192])
	$9 = *($4 + [184])
	$1 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 ($9 & [255])), (int_32 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC $399 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [272]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $432(($4 + [16]), ($4 + [272]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [256]) + [8]))) = *($3)
	*($4 + [256]) = *($4)
	$3 = *($8)
	*((($4 + [272]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [256])
	*($4 + [32]) = $0
	*($4 + [272]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [248])
	$1 = *($4 + [240])
	$9 = *($4 + [232])
	$10 = *($4 + [224])
	$11 = *($4 + [216])
	$12 = *($4 + [208])
	$13 = *($4 + [200])
	$14 = *($4 + [192])
	$15 = *($4 + [184])
	$16 = *($4 + [176])
	$17 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $17), (int_64 $16), (int_64 $15), (int_64 $14), (int_64 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $552 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [64])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $528(*($1), ($3 + [72]))
	$2 = ($3 + [84])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$0 = ($3 + [88])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $531 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $528(*($1), *($0 + [8]))
}

int_32 .FUNC $390 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [168]) + [24])) = (int_64)0
	*(($4 + [208])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [240]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $417(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4)
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [224])
	*($4 + [32]) = $0
	*($4 + [240]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [16])
	CALL $418(($4 + [240]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $391 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [200]))) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [240]) = ($4 + [168])
	*($4 + [32]) = ($4 + [184])
	CALL $414(($4 + [32]), ($4 + [240]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [176])
	*($4 + [16]) = *($4 + [168])
	*(($3 = (($4 + [224]) + [8]))) = *($9)
	*($4 + [224]) = *($4 + [16])
	$9 = *($3)
	*((($4 + [240]) + [8])) = $9
	*(($4 + [56])) = $9
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [224])
	*($4 + [48]) = $0
	*($4 + [240]) = $0
	*($4 + [60 align=4]) = (int_64)361417177238274561
	*($4 + [68 align=4]) = (int_64)144408800781666054
	*($4 + [76]) = [1027]
	*($4 + [78 align=2]) = (int_64)72339081933160453
	*($4 + [86 align=2]) = [33620738]
	*($4 + [90]) = [1027]
	*($4 + [92 align=4]) = (int_64)216736870368216581
	*($4 + [100]) = [17171716]
	*($4 + [104]) = (int_64)73469379886514946
	*($4 + [112]) = [770]
	*($4 + [114 align=2]) = (int_64)72621656421500164
	*($4 + [122 align=2]) = [50462978]
	*($4 + [126]) = [1284]
	*($4 + [128]) = (int_64)506097522914230534
	*($4 + [136]) = [17434888]
	*($4 + [140]) = [770]
	*($4 + [142]) = [4]
	*($4 + [143 align=1]) = [67305985]
	*($4 + [147 align=1]) = [261]
	*($4 + [149]) = [2]
	*($4 + [152]) = (int_64)72058693550160512
	*($4 + [160]) = [770]
	*($4 + [162]) = [4]
	*(($9 = (($4 + [208]) + [8]))) = *($8)
	*($4 + [208]) = *($4 + [192])
	$0 = *($4 + [184])
	*($3) = *($9)
	*($4 + [224]) = *($4 + [208])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [224]) + [8]))
	*((($4 + [240]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [224])
	*($4) = $1
	*($4 + [240]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [256])
	return [1]
}

int_32 .FUNC $392 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [208]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $436(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [184])
	$0 = *($4 + [176])
	$1 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $393 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [288]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $433(($4 + [24]), ($4 + [288]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [272]) + [8]))) = *($3)
	*($4 + [272]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [288]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [272])
	*($4 + [40]) = $0
	*($4 + [288]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [264])
	$1 = *($4 + [256])
	$9 = *($4 + [248])
	$10 = *($4 + [240])
	$11 = *($4 + [232])
	$12 = *($4 + [224])
	$13 = *($4 + [216])
	$14 = *($4 + [208])
	$15 = *($4 + [200])
	$16 = *($4 + [192])
	$17 = *($4 + [184])
	$18 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $18), (int_64 $17), (int_64 $16), (int_64 $15), (int_64 $14), (int_64 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [304])
	return [1]
}

int_32 .FUNC $394 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [192])) = (int_64)0
	*(($4 + [208])) = [0]
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	$6 = ($2 + $5)
	*($4 + [168]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$6 = *(($4 + [168]))
	$3 = *($4 + [164])
	
.LABEL $label$4
	CALL memcpy(($4 + [176]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [164]) = $3
	$7 = (($4 + [176]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$6 = *((($4 + [160]) + [8]))
	$3 = *($4 + [164])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [164]) = $3
	*($4 + [24]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$3 = *($4 + [164])
	
.LABEL $label$6
	CALL memcpy(($4 + [24]), $3, [8])
	*(($4 + [192])) = *($4 + [24])
	*($4 + [164]) = ($3 + [8])
	CALL $415(($4 + [160]), (($4 + [176]) + [24]))
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [160]) + [8]))
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [224])
	*($4 + [40]) = $0
	*($4 + [240]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [24])
	CALL $416(($4 + [240]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$7
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $395 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [240])
	$global$0 = $3
	*(($4 = $3) + [200]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [168]) + [24])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [224]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $419(($4 + [16]), ($4 + [224]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4)
	$3 = *($6)
	*((($4 + [224]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [208])
	*($4 + [32]) = $0
	*($4 + [224]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [228]) = ($4 + [200])
	*($4 + [224]) = ($4 + [16])
	CALL $420(($4 + [224]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [184]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [184]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [192])))
	$global$0 = ($4 + [240])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [240])
	return $2
}

int_32 .FUNC $396 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [192]) + [24]))) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [256]) = ($4 + [176])
	*($4 + [40]) = ($4 + [192])
	CALL $453(($4 + [40]), ($4 + [256]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [184])
	*($4 + [24]) = *($4 + [176])
	*(($3 = (($4 + [240]) + [8]))) = *($9)
	*($4 + [240]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [256]) + [8])) = $9
	*((($4 + [40]) + [24])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [240])
	*($4 + [56]) = $0
	*($4 + [256]) = $0
	*($4 + [68 align=4]) = (int_64)361417177238274561
	*($4 + [76 align=4]) = (int_64)144408800781666054
	*($4 + [84]) = [1027]
	*($4 + [86 align=2]) = (int_64)72339081933160453
	*($4 + [94 align=2]) = [33620738]
	*($4 + [98]) = [1027]
	*($4 + [100 align=4]) = (int_64)216736870368216581
	*($4 + [108]) = [17171716]
	*($4 + [112]) = (int_64)73469379886514946
	*($4 + [120]) = [770]
	*($4 + [122 align=2]) = (int_64)72621656421500164
	*($4 + [130 align=2]) = [50462978]
	*($4 + [134]) = [1284]
	*($4 + [136]) = (int_64)506097522914230534
	*($4 + [144]) = [17434888]
	*($4 + [148]) = [770]
	*($4 + [150]) = [4]
	*($4 + [151 align=1]) = [67305985]
	*($4 + [155 align=1]) = [261]
	*($4 + [157]) = [2]
	*($4 + [160]) = (int_64)72058693550160512
	*($4 + [168]) = [770]
	*($4 + [170]) = [4]
	*(($9 = (($4 + [224]) + [8]))) = *($8)
	*($4 + [224]) = *($4 + [208])
	$8 = *($4 + [200])
	$0 = *($4 + [192])
	*($3) = *($9)
	*($4 + [240]) = *($4 + [224])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [240]) + [8]))
	*((($4 + [256]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [240])
	*($4 + [8]) = $1
	*($4 + [256]) = $1
	CALL void $3((int_32 $0), (int_64 $8), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [272])
	return [1]
}

int_32 .FUNC $397 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [184])) = (int_64)0
	*(($4 + [200])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [204]) = [0]
	*($4 + [208]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [240]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $421(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4)
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [224])
	*($4 + [32]) = $0
	*($4 + [240]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [16])
	CALL $422(($4 + [240]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [192]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [192]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [200])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

void .FUNC $442 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [8]))) = *(($1 + [40]))
	*($2 + [64]) = *($1 + [32])
	$4 = *($1 + [24])
	$5 = *($1 + [16])
	$6 = *($1 + [8])
	$7 = *($1)
	$8 = CALL $18(($2 + [48]), ($1 + [48]))
	$9 = *($1 + [96])
	$10 = *($1 + [88])
	$11 = *($1 + [80])
	$12 = *($1 + [72])
	$13 = *($1 + [64])
	$14 = CALL $18(($2 + [32]), ($1 + [104]))
	$15 = *($1 + [128])
	$16 = *($1 + [120])
	$17 = CALL $18(($2 + [16]), ($1 + [136]))
	$18 = *($1 + [160])
	$19 = *($1 + [152])
	*(($2 + [8])) = *($3)
	*($2) = *($2 + [64])
	CALL $602($0, $7, $6, $5, $4, $2, $8, $13, $12, $11, $10, $9, $14, $16, $15, $17, $19, $18)
	if ( (*($17) & [1]) ){ goto $label$5 }
	if ( (*($14) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*($17 + [8]))
	if ( ((*($14) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($14 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($8) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL $9(*($8 + [8]))
	$global$0 = ($2 + [80])
}

void .FUNC $485 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $165($3, *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [160])
}

void .FUNC $486 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [228]) = $2
	*($3 + [224]) = $2
	$5 = ($2 + $4)
	*($3 + [232]) = $5
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [232]))
	$2 = *($3 + [228])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [228]) = $2
	*($3 + [208]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [224]) + [8]))
	$2 = *($3 + [228])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [228]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [232]))
	$2 = *($3 + [228])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [228]) = $2
	*($3 + [192]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [228])
	
.LABEL $label$8
	CALL memcpy(($3 + [192]), $2, [8])
	*($3 + [228]) = ($2 + [8])
	*($3 + [184]) = [0]
	*($3 + [176]) = (int_64)0
	CALL $415(($3 + [224]), ($3 + [176]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [224]) + [8]))
	*($3 + [24]) = *($3 + [224])
	*(($5 = (($3 + [240]) + [8]))) = *($2)
	*($3 + [240]) = *($3 + [24])
	$2 = *($5)
	*((($3 + [256]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [240])
	*($3 + [56]) = $0
	*($3 + [256]) = $0
	*($3 + [68 align=4]) = (int_64)361417177238274561
	*($3 + [76 align=4]) = (int_64)144408800781666054
	*($3 + [84]) = [1027]
	*($3 + [86 align=2]) = (int_64)72339081933160453
	*($3 + [94 align=2]) = [33620738]
	*($3 + [98]) = [1027]
	*($3 + [100 align=4]) = (int_64)216736870368216581
	*($3 + [108]) = [17171716]
	*($3 + [112]) = (int_64)73469379886514946
	*($3 + [120]) = [770]
	*($3 + [122 align=2]) = (int_64)72621656421500164
	*($3 + [130 align=2]) = [50462978]
	*($3 + [134]) = [1284]
	*($3 + [136]) = (int_64)506097522914230534
	*($3 + [144]) = [17434888]
	*($3 + [148]) = [770]
	*($3 + [150]) = [4]
	*($3 + [151 align=1]) = [67305985]
	*($3 + [155 align=1]) = [261]
	*($3 + [157]) = [2]
	*($3 + [160]) = (int_64)72058693550160512
	*($3 + [168]) = [770]
	*($3 + [170]) = [4]
	$2 = CALL $18(($3 + [8]), ($3 + [176]))
	CALL $167(($3 + [40]), *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [176]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [176]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [184])))
	$global$0 = ($3 + [272])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [272])
}

void .FUNC $487 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [212]) = $2
	*($3 + [208]) = $2
	$5 = ($2 + $4)
	*($3 + [216]) = $5
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [192]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [208]) + [8]))
	$2 = *($3 + [212])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [212])
	
.LABEL $label$7
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [212]) = ($2 + [8])
	*($3 + [176]) = [0]
	*($3 + [168]) = (int_64)0
	CALL $415(($3 + [208]), ($3 + [168]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [208]) + [8]))
	*($3 + [16]) = *($3 + [208])
	*(($4 = (($3 + [224]) + [8]))) = *($2)
	*($3 + [224]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [240]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [224])
	*($3 + [48]) = $0
	*($3 + [240]) = $0
	*($3 + [60 align=4]) = (int_64)361417177238274561
	*($3 + [68 align=4]) = (int_64)144408800781666054
	*($3 + [76]) = [1027]
	*($3 + [78 align=2]) = (int_64)72339081933160453
	*($3 + [86 align=2]) = [33620738]
	*($3 + [90]) = [1027]
	*($3 + [92 align=4]) = (int_64)216736870368216581
	*($3 + [100]) = [17171716]
	*($3 + [104]) = (int_64)73469379886514946
	*($3 + [112]) = [770]
	*($3 + [114 align=2]) = (int_64)72621656421500164
	*($3 + [122 align=2]) = [50462978]
	*($3 + [126]) = [1284]
	*($3 + [128]) = (int_64)506097522914230534
	*($3 + [136]) = [17434888]
	*($3 + [140]) = [770]
	*($3 + [142]) = [4]
	*($3 + [143 align=1]) = [67305985]
	*($3 + [147 align=1]) = [261]
	*($3 + [149]) = [2]
	*($3 + [152]) = (int_64)72058693550160512
	*($3 + [160]) = [770]
	*($3 + [162]) = [4]
	$2 = CALL $18($3, ($3 + [168]))
	CALL $169(($3 + [32]), *($3 + [200]), *($3 + [192]), *($3 + [184]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [168]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [168]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [176])))
	$global$0 = ($3 + [256])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [256])
}

void .FUNC $480 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$11
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$12
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$13
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [72])
	if ( ((int_32)$6 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$14
	$4 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [80])
	if ( ((int_32)$6 != (int_32)[80]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$15
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [88])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $104($3, *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [144]), *($3 + [136]))
	$global$0 = ($3 + [224])
}

void .FUNC $481 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [240])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	*($3 + [224]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [216]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [208]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [200]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$11
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$12
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$13
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [72])
	if ( ((int_32)$6 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$14
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [80])
	if ( ((int_32)$6 != (int_32)[80]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$15
	$4 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [88])
	if ( ((int_32)$6 != (int_32)[88]) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$16
	CALL memcpy(($3 + [144]), $5, [8])
	*(($3 + [32])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [96])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $128(($3 + [8]), *($3 + [232]), $0, *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [240])
}

void .FUNC $454 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	CALL $415(*($1), ($4 + [12]))
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [32])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2) = $4
	CALL $607($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $483 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $156($3, *($3 + [136]))
	$global$0 = ($3 + [144])
}

void .FUNC $559 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), *($0 + [52]))
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [72])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$17 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $488 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $171($3, *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [160])
}

void .FUNC $489 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [448])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	*($3 + [408]) = ($2 + $4)
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	$4 = (($3 + [400]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [391]), $2, [1])
	$2 = (*($3 + [404]) + [1])
	*($3 + [404]) = $2
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$7
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	$4 = (($3 + [400]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$8
	CALL memcpy(($3 + [375]), $2, [1])
	$2 = (*($3 + [404]) + [1])
	*($3 + [404]) = $2
	*($3 + [360]) = (int_64)0
	*($3 + [352]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$9
	CALL memcpy(($3 + [352]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	*($3 + [96]) = (int_64)0
	$4 = (($3 + [400]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$10
	CALL memcpy(($3 + [96]), $2, [8])
	*((($3 + [352]) + [8])) = *($3 + [96])
	*($3 + [404]) = (*($3 + [404]) + [8])
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $415(($3 + [400]), ($3 + [336]))
	$2 = *($3 + [404])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$11
	CALL memcpy(($3 + [328]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	$4 = (($3 + [400]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$12
	CALL memcpy(($3 + [327]), $2, [1])
	$2 = (*($3 + [404]) + [1])
	*($3 + [404]) = $2
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$13
	CALL memcpy(($3 + [312]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	$4 = (($3 + [400]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$14
	CALL memcpy(($3 + [304]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	*($3 + [296]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$15
	CALL memcpy(($3 + [296]), $2, [8])
	*($3 + [404]) = (*($3 + [404]) + [8])
	*($3 + [288]) = [0]
	*($3 + [280]) = (int_64)0
	CALL $415(($3 + [400]), ($3 + [280]))
	*($3 + [272]) = (int_64)0
	$2 = *($3 + [404])
	$4 = (($3 + [400]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$16
	CALL memcpy(($3 + [272]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$17
	CALL memcpy(($3 + [264]), $2, [8])
	*($3 + [404]) = (*($3 + [404]) + [8])
	*($3 + [256]) = [0]
	*($3 + [248]) = (int_64)0
	CALL $415(($3 + [400]), ($3 + [248]))
	$2 = *($3 + [404])
	$4 = (($3 + [400]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$18
	CALL memcpy(($3 + [240]), $2, [8])
	$2 = (*($3 + [404]) + [8])
	*($3 + [404]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$19 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [404])
	
.LABEL $label$19
	CALL memcpy(($3 + [239]), $2, [1])
	*($3 + [404]) = (*($3 + [404]) + [1])
	*(($2 = (($3 + [80]) + [8]))) = *((($3 + [400]) + [8]))
	*($3 + [80]) = *($3 + [400])
	*(($4 = (($3 + [416]) + [8]))) = *($2)
	*($3 + [416]) = *($3 + [80])
	$2 = *($4)
	*((($3 + [432]) + [8])) = $2
	*(($3 + [120])) = $2
	*($3 + [96]) = $0
	*($3 + [104]) = $1
	$0 = *($3 + [416])
	*($3 + [112]) = $0
	*($3 + [432]) = $0
	*($3 + [124 align=4]) = (int_64)361417177238274561
	*($3 + [132 align=4]) = (int_64)144408800781666054
	*($3 + [140]) = [1027]
	*($3 + [142 align=2]) = (int_64)72339081933160453
	*($3 + [150 align=2]) = [33620738]
	*($3 + [154]) = [1027]
	*($3 + [156 align=4]) = (int_64)216736870368216581
	*($3 + [164]) = [17171716]
	*($3 + [168]) = (int_64)73469379886514946
	*($3 + [176]) = [770]
	*($3 + [178 align=2]) = (int_64)72621656421500164
	*($3 + [186 align=2]) = [50462978]
	*($3 + [190]) = [1284]
	*($3 + [192]) = (int_64)506097522914230534
	*($3 + [200]) = [17434888]
	*($3 + [204]) = [770]
	*($3 + [206]) = [4]
	*($3 + [207 align=1]) = [67305985]
	*($3 + [211 align=1]) = [261]
	*($3 + [213]) = [2]
	*($3 + [216]) = (int_64)72058693550160512
	*($3 + [224]) = [770]
	*($3 + [226]) = [4]
	*(($5 = (($3 + [64]) + [8]))) = *((($3 + [352]) + [8]))
	*($3 + [64]) = *($3 + [352])
	$6 = *($3 + [375])
	$0 = *($3 + [376])
	$7 = *($3 + [391])
	$1 = *($3 + [392])
	$4 = CALL $18(($3 + [48]), ($3 + [336]))
	$8 = *($3 + [296])
	$9 = *($3 + [304])
	$10 = *($3 + [312])
	$11 = *($3 + [327])
	$12 = *($3 + [328])
	$13 = CALL $18(($3 + [32]), ($3 + [280]))
	$14 = *($3 + [264])
	$15 = *($3 + [272])
	$2 = CALL $18(($3 + [16]), ($3 + [248]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [64])
	CALL $173(($3 + [96]), $1, $7, $0, $6, $3, $4, $12, $11, $10, $9, $8, $13, $15, $14, $2, *($3 + [240]), *($3 + [239]))
	if ( (*($2) & [1]) ){ goto $label$30 }
	if ( (*($13) & [1]) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $9(*($2 + [8]))
	if ( ((*($13) & [1]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	CALL $9(*($13 + [8]))
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$26 }
	
.LABEL $label$27
	if ( (*($3 + [248]) & $2) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $9(*($4 + [8]))
	if ( ((*($3 + [248]) & $2) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL $9(*(($3 + [256])))
	$2 = [1]
	if ( ((*($3 + [280]) & [1]) == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$2 = [1]
	if ( (*($3 + [280]) & [1]) ){ goto $label$22 }
	
.LABEL $label$23
	if ( (*($3 + [336]) & $2) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $9(*(($3 + [288])))
	if ( ((*($3 + [336]) & $2) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $9(*(($3 + [344])))
	$global$0 = ($3 + [448])
	return 
	
.LABEL $label$20
	$global$0 = ($3 + [448])
}

void .FUNC $365 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [40]))
	$9 = *($1 + [44])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4157660971118100480, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [12]) = $0
	*($5) = (int_64)0
	$7 = ($5 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	goto $label$7 
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy($7, $8, [1])
	*($5 + [16]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $522(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $367 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$9 = *(($1 + [72]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [76]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $366 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [24])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [24])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$4 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [16])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [16])
	$7 = ($1 + [8])
	$8 = *($1)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $1($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [40]) = $5
	*($3 + [32]) = $1
	CALL $531(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($2)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	*($5) = *(*($2))
	$7 = *($1)
	$2 = $3
	$3 = ($2 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [48]) = $1
	*($4 + [56]) = $6
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $3, [55])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$2 = ($1 + [72])
	$5 = *($2)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $7)
	*($2) = $5
	
.LABEL $label$5
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$4
	*($4 + [48]) = *($6)
	if ( (CALL $16($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$5 = ($1 + [76])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $7)
	*($5) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$6
	$global$0 = ($4 + [96])
}

void .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $246 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $247 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = *($1)
	$9 = *($2)
	$10 = *($9 + [56])
	$8 = *($2 + [4])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$3 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$3 }
	*($1 + [32]) = (*($1 + [32]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *($9 + [59])
	
.LABEL $label$3
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$4 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$4 }
	*($1 + [36]) = (*($1 + [36]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [36]) + [1]))) ){ goto $label$4 }
	*($5) = *($9 + [58])
	
.LABEL $label$4
	$10 = *($9 + [59])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$5 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$5 }
	*($1 + [40]) = (*($1 + [40]) + [1])
	if ( ((int_64)((int_64)*(*(*($2 + [12]) + [4]) + [40]) + (int_64)1) != (int_64)*(*($2 + [16]))) ){ goto $label$5 }
	*($5) = *($9 + [60])
	
.LABEL $label$5
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$6 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$6 }
	*($1 + [41]) = (*($1 + [41]) + [1])
	if ( ((int_64)((int_64)*(*(*($2 + [12]) + [4]) + [41]) + (int_64)1) != (int_64)*(*($2 + [16]))) ){ goto $label$6 }
	*($5) = *($9 + [61])
	
.LABEL $label$6
	$10 = *($9 + [62])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$7 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$7 }
	*($1 + [44]) = (*($1 + [44]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [44]) + [1]))) ){ goto $label$7 }
	*($5) = *($9 + [63])
	
.LABEL $label$7
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$8 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$8 }
	*($1 + [48]) = (*($1 + [48]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [48]) + [1]))) ){ goto $label$8 }
	*($5) = *($9 + [64])
	
.LABEL $label$8
	$9 = $3
	$2 = ($9 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($9 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$8 = ($1 + [72])
	$9 = *($8)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$11 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $7)
	*($8) = $9
	
.LABEL $label$11
	CALL db_idx64_update($9, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$13 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $7)
	*($2) = $1
	
.LABEL $label$13
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

int_32 .FUNC $244 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [13023])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [44]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)3775065857097465857, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [44])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($8 + [32]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL $352($6, CALL $fimport$2(*($6), *($6 + [8]), (int_64)3775065857097465856, $5))
	if ( ((int_32)*($8 + [32]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$3
	*(($0 + [4])) = $8
	*(($8 + [44])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)3775065857097465856, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $352($7, $9)
	*($3 + [28]) = [0]
	*($3 + [24]) = $7
	$8 = *(*(CALL $567(($3 + [24])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	$7 = ($1 + [16])
	$9 = ($1 + [8])
	$10 = *(*($5 + [16]))
	if ( ((int_32)$10 != (int_32)*($6 + [56])) ){ goto $label$6 }
	*($1 + [24]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$10 != (int_32)*($6 + [59])) ){ goto $label$7 }
	if ( CALL $160($6, *(*($5 + [24]))) ){ goto $label$8 }
	CALL eosio_assert([0], [10824])
	
.LABEL $label$8
	*($1 + [25]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_32)$10 != (int_32)*($6 + [62])) ){ goto $label$9 }
	*($1 + [26]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$9
	CALL eosio_assert([0], [13484])
	
.LABEL $label$5
	$2 = $2
	$5 = ($2 + [-32])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($2 + [-5])
	*($3 + [16]) = $3
	*($3 + [28]) = $9
	*($3 + [24]) = $1
	*($3 + [32]) = $7
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [25])
	*($3 + [44]) = ($1 + [26])
	CALL $249(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)3775065857097465856, *(*($0 + [8])), $8, $5, [27])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$10 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$5 = ($4 + [8])
	$8 = *($5)
	$0 = *(($0 + [8]))
	$11 = *($0)
	$12 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)3775065857097465856, $11, $12, ($3 + [24]))
	$8 = *($0)
	$11 = *($5)
	$12 = *($1)
	*($3 + [24]) = *(($1 + [16]))
	*(($1 + [44])) = CALL db_idx64_store($11, (int_64)3775065857097465857, $8, $12, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $242 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $240 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([32])) + [20]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [17])
	*($3 + [56]) = ($5 + [18])
	CALL $524(($3 + [40]), ($3 + [32]))
	*($5 + [28]) = [-1]
	*($5 + [24]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $64(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $606 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8, int_32 $9, int_64 $10, int_64 $11, int_64 $12, int_32 $13, int_64 $14, int_64 $15, int_32 $16, int_64 $17, int_32 $18)
{
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$19 = ($global$0 - [80])
	$global$0 = $19
	$0 = *($0 + [4])
	$20 = *($0 + [4])
	$21 = (*($0) + int_32($20 >> [1]))
	$22 = *($0)
	if ( (($20 & [1]) == 0) ){ goto $label$1 }
	$22 = *((*($21) + $22))
	
.LABEL $label$1
	*(($20 = (($19 + [64]) + [8]))) = *(($6 + [8]))
	*($19 + [64]) = *($6)
	$6 = CALL $18(($19 + [48]), $7)
	$0 = CALL $18(($19 + [32]), $13)
	$7 = CALL $18(($19 + [16]), $16)
	*(($19 + [8])) = *($20)
	*($19) = *($19 + [64])
	CALL void $21((int_32 $1), (int_64 $2), (int_64 $3), (int_32 $4), (int_64 $5), (int_32 $19), (int_32 $6), (int_32 $8), (int_64 $9), (int_32 $10), (int_64 $11), (int_64 $12), (int_64 $0), (int_32 $14), (int_64 $15), (int_64 $7), (int_32 $17), (int_64 $18), (int_32 $22))
	if ( (*($7) & [1]) ){ goto $label$6 }
	if ( (*($0) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($7 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*($0 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($6) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($19 + [80])
	return 
	
.LABEL $label$2
	CALL $9(*($6 + [8]))
	$global$0 = ($19 + [80])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [12]) = $0
	*($5) = (int_64)0
	$7 = ($5 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	goto $label$7 
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy($7, $8, [1])
	*($5 + [16]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $151(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [56]) = *(*(*($2) + [4]) + [152])
	$2 = ($1 + [8])
	*($4 + [24]) = *($2)
	$5 = ($1 + [16])
	*($4 + [32]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($7 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $2
	*($4 + [48]) = $1
	*($4 + [56]) = $5
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $3, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [24]) + [8])
	*($4 + [48]) = *($2)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$4
	*($4 + [48]) = *($5)
	if ( (CALL $16($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [76])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$6
	$global$0 = ($4 + [96])
}

void .FUNC $83 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($4 + [88]) = $1
	$5 = (CASTING uint_32)(uint_64 CALL $56($0, (int_64)-3792729948836422512))
	if ( ((int_32)($5 & [255]) != (int_32)$3) ){ goto $label$3 }
	CALL require_auth($2)
	if ( (CALL $27($0) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL require_auth((int_64)5937556299887047648)
	if ( CALL $27($0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( (CALL $42($0, $2) == 0) ){ goto $label$4 }
	CALL eosio_assert([0], [8923])
	
.LABEL $label$4
	$6 = [0]
	*(($4 + [128])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	$1 = *($0)
	*($4 + [96]) = $1
	*($4 + [104]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)5094022140569452544, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $84(($4 + [96]), $7)
	if ( ((int_32)*($6 + [12]) == (int_32)($4 + [96])) ){ goto $label$5 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$5
	$8 = *($4 + [120])
	if ( ($8 == 0) ){ goto $label$6 }
	$9 = ($4 + [124])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$10 }
	CALL $9($10)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	$7 = *(($4 + [120]))
	goto $label$7 
	
.LABEL $label$8
	$7 = $8
	
.LABEL $label$7
	*($9) = $8
	CALL $9($7)
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$11 }
	CALL eosio_assert([0], [9469])
	
.LABEL $label$11
	if ( ((int_32)($5 & [255]) != (int_32)$3) ){ goto $label$12 }
	$5 = [0]
	*(($4 + [128])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	$1 = *($0)
	*($4 + [96]) = $1
	*($4 + [104]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)5937556069193265024, *($4 + [88]))
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$15 }
	$5 = CALL $74(($4 + [96]), $7)
	if ( ((int_32)*($5 + [216]) == (int_32)($4 + [96])) ){ goto $label$16 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$16
	if ( ((int_32)*($5 + [181]) == (int_32)*($0 + [51])) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [9516])
	if ( ((int_32)*([0] + [181]) == (int_32)*($0 + [51])) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [9547])
	
.LABEL $label$13
	if ( (*($5 + [182]) == 0) ){ goto $label$17 }
	CALL eosio_assert([0], [9593])
	
.LABEL $label$17
	if ( (*($5 + [184]) == 0) ){ goto $label$18 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$18
	if ( (*($5 + [183]) == 0) ){ goto $label$19 }
	CALL eosio_assert([0], [9680])
	
.LABEL $label$19
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [84]) = [0]
	$1 = *($0)
	*($4 + [48]) = $1
	*($4 + [56]) = $1
	*($4 + [40]) = ($4 + [48])
	CALL $85($4, ($4 + [40]), ($4 + [88]))
	$6 = *($4 + [4])
	if ( ($6 == 0) ){ goto $label$20 }
	if ( ((int_64)*($4 + [88]) != (int_64)*($6 + [8])) ){ goto $label$20 }
	if ( ((int_64)*($6 + [8]) != (int_64)*($4 + [88])) ){ goto $label$20 }
	$9 = ($4 + [124])
	$11 = ($4 + [120])
	$12 = (($4 + [96]) + [8])
	
.LOOP $label$21:
	$1 = *($6)
	$10 = *($9)
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$27 }
	
.LOOP $label$29:
	$7 = ($10 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$28 }
	$10 = $7
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$27 }
	if ( ((int_32)*($8 + [216]) == (int_32)($4 + [96])) ){ goto $label$30 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$30
	if ( $8 ){ goto $label$24 }
	goto $label$26 
	
.LABEL $label$27
	$7 = CALL db_find_i64(*($4 + [96]), *($12), (int_64)5937556069193265024, $1)
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$25 }
	
.LABEL $label$26
	CALL eosio_assert([0], [12129])
	CALL $86(($4 + [96]), [0])
	CALL eosio_assert([0], [13023])
	$7 = CALL db_next_i64(*([0] + [220]), $4)
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$8 = CALL $74(($4 + [96]), $7)
	if ( ((int_32)*($8 + [216]) == (int_32)($4 + [96])) ){ goto $label$24 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$24
	CALL $86(($4 + [96]), $8)
	$7 = CALL db_next_i64(*($8 + [220]), $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $74(($4 + [96]), $7)
	
.LABEL $label$22
	if ( ((int_64)*(($6 + [8])) == (int_64)*($4 + [88])) ){ goto $label$21 }
	
.LABEL $label$20
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$1 = *($0)
	*($4) = $1
	*($4 + [8]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)-4227605603803571328, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$31 }
	$7 = CALL $87($4, $7)
	if ( ((int_32)*($7 + [12]) == (int_32)$4) ){ goto $label$32 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$32
	$10 = CALL db_next_i64(*($7 + [16]), ($4 + [136]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$33 }
	CALL $87($4, $10)
	
.LABEL $label$33
	CALL $88($4, $7)
	
.LABEL $label$31
	if ( $5 ){ goto $label$34 }
	CALL eosio_assert([0], [13189])
	CALL eosio_assert([0], [13023])
	
.LABEL $label$34
	$7 = CALL db_next_i64(*($5 + [220]), ($4 + [136]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$35 }
	CALL $74(($4 + [96]), $7)
	
.LABEL $label$35
	CALL $82(($4 + [96]), $5)
	$8 = *($4 + [24])
	if ( ($8 == 0) ){ goto $label$36 }
	$3 = ($4 + [28])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$38 }
	
.LOOP $label$39:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$40 }
	CALL $9($10)
	
.LABEL $label$40
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$39 }
	$7 = *(($4 + [24]))
	goto $label$37 
	
.LABEL $label$38
	$7 = $8
	
.LABEL $label$37
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$36
	$8 = *($4 + [72])
	if ( ($8 == 0) ){ goto $label$41 }
	$3 = ($4 + [76])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$43 }
	
.LOOP $label$44:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$45 }
	CALL $9($10)
	
.LABEL $label$45
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$44 }
	$7 = *(($4 + [72]))
	goto $label$42 
	
.LABEL $label$43
	$7 = $8
	
.LABEL $label$42
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$41
	$8 = *($4 + [120])
	if ( ($8 == 0) ){ goto $label$12 }
	$3 = ($4 + [124])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$47 }
	
.LOOP $label$48:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$49 }
	CALL $9($10)
	
.LABEL $label$49
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$48 }
	$7 = *(($4 + [120]))
	goto $label$46 
	
.LABEL $label$47
	$7 = $8
	
.LABEL $label$46
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$12
	*((($4 + [96]) + [32])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	*($4 + [132]) = [0]
	$1 = *($0)
	*($4 + [96]) = $1
	*($4 + [104]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)-7880044402153918464, *($4 + [88]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$50 }
	$7 = CALL $62(($4 + [96]), $7)
	if ( ((int_32)*($7 + [20]) == (int_32)($4 + [96])) ){ goto $label$51 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$51
	$10 = CALL db_next_i64(*($7 + [24]), ($4 + [48]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$52 }
	CALL $62(($4 + [96]), $10)
	
.LABEL $label$52
	CALL $89(($4 + [96]), $7)
	
.LABEL $label$50
	*((($4 + [48]) + [32])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$1 = *($0)
	*($4 + [48]) = $1
	*($4 + [56]) = $1
	$7 = CALL db_find_i64($1, $1, (int_64)-4157500428759203840, (int_64)-7880044396964042864)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$54 }
	$7 = CALL $67(($4 + [48]), $7)
	if ( ((int_32)*($7 + [28]) == (int_32)($4 + [48])) ){ goto $label$53 }
	CALL eosio_assert([0], [11998])
	goto $label$53 
	
.LABEL $label$54
	$7 = [0]
	CALL eosio_assert([0], [12129])
	
.LABEL $label$53
	CALL $90(($4 + [48]), $7)
	$8 = *($4 + [72])
	if ( ($8 == 0) ){ goto $label$55 }
	$3 = ($4 + [76])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$57 }
	
.LOOP $label$58:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$59 }
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$60 }
	CALL $9(*(($10 + [24])))
	
.LABEL $label$60
	CALL $9($10)
	
.LABEL $label$59
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$58 }
	$7 = *(($4 + [72]))
	goto $label$56 
	
.LABEL $label$57
	$7 = $8
	
.LABEL $label$56
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$55
	$8 = *($4 + [120])
	if ( ($8 == 0) ){ goto $label$61 }
	$3 = ($4 + [124])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$63 }
	
.LOOP $label$64:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$65 }
	CALL $9($10)
	
.LABEL $label$65
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$64 }
	$7 = *(($4 + [120]))
	goto $label$62 
	
.LABEL $label$63
	$7 = $8
	
.LABEL $label$62
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$61
	$global$0 = ($4 + [144])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [220]))
}

void .FUNC $533 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $492 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $181(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [12])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [16]))
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	*($5) = *(*($2))
	*($1 + [16]) = *(*($2 + [4]))
	$6 = *($1)
	$3 = $3
	$2 = ($3 + [-32])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-13])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [17])
	*($4 + [56]) = ($1 + [18])
	CALL $63(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $2, [19])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [40]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$5 = *($1 + [28])
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($4 + [32]), $6)
	*(($1 + [28])) = $5
	
.LABEL $label$5
	CALL db_idx64_update($5, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $419 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $415(*($1), (*($0) + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $418 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $607 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [48])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [56])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	$0 = ($5 + [57])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	$0 = ($5 + [58])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	$6 = ($5 + [59])
	$5 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($6, $5, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $493 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $193($3, *($3 + [152]), *($3 + [144]), *($3 + [136]))
	$global$0 = ($3 + [160])
}

void .FUNC $585 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *($6 + [120])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)5534162690622095360, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$5 = *($0)
	$6 = *($5 + [4])
	$7 = *(($6 + [124]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($5)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)5534162690622095361, ($4 + [8]), *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$7 = *($0)
	$5 = *($7 + [4])
	$0 = *(($5 + [128]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($7)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [8]), *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($0)
	
.LABEL $label$5
	$global$0 = ($4 + [16])
}

int_32 .FUNC $412 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = [0]
	*($4 + [200]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [224]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $424(($4 + [24]), ($4 + [224]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [208])
	*($4 + [40]) = $0
	*($4 + [224]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	$8 = *($4 + [192])
	$1 = *($4 + [184])
	$9 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $495 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [151]), $5, [1])
	*((($3 + [8]) + [24])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [25])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $202(($3 + [8]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [151]))
	$global$0 = ($3 + [176])
}

void .FUNC $587 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $148 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	$1 = ($global$0 - [256])
	$global$0 = $1
	CALL require_auth(*($0))
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($1 + [248])) = [0]
	*($1 + [232]) = (int_64)-1
	$2 = *($0)
	*($1 + [216]) = $2
	*($1 + [224]) = $2
	*($1 + [240]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $84(($1 + [216]), $3)
	$5 = ($4 + [16])
	
.LOOP $label$3:
	$3 = CALL db_next_i64(*($5), ($1 + [176]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL $84(($1 + [216]), $3)
	
.LABEL $label$4
	CALL $149(($1 + [216]), $4)
	goto $label$3 
	
.LABEL $label$2
	CALL eosio_assert([0], [13023])
	$3 = CALL db_next_i64(*([0] + [16]), ($1 + [176]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $84(($1 + [216]), $3)
	
.LABEL $label$5
	*((($1 + [176]) + [32])) = [0]
	*($1 + [192]) = (int_64)-1
	*($1 + [200]) = (int_64)0
	*($1 + [212]) = [0]
	$2 = *($0)
	*($1 + [176]) = $2
	*($1 + [184]) = $2
	*($1 + [168]) = ($1 + [176])
	*($1 + [164]) = [0]
	*($1 + [160]) = ($1 + [168])
	$6 = CALL $56($0, (int_64)5094024597612504768)
	*((($1 + [120]) + [32])) = [0]
	*($1 + [136]) = (int_64)-1
	*($1 + [144]) = (int_64)0
	$2 = *($0)
	*($1 + [120]) = $2
	*($1 + [128]) = $2
	$3 = CALL db_find_i64($2, $2, (int_64)5937556069193265024, (int_64)1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $74(($1 + [120]), $3) + [216]) == (int_32)($1 + [120])) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	*($1 + [80]) = (int_64)0
	CALL $150(($1 + [32]), ($1 + [168]), ($1 + [80]))
	$3 = *($1 + [164])
	if ( ((int_32)$3 == (int_32)*($1 + [36])) ){ goto $label$7 }
	$7 = (($1 + [216]) + [24])
	$8 = (($1 + [80]) | [8])
	$9 = (($1 + [120]) + [28])
	$10 = ($1 + [232])
	$11 = ($1 + [248])
	$12 = (int_64)0
	
.LOOP $label$8:
	if ( (uint_64)($6 <= $12) ){ goto $label$7 }
	$2 = *($3)
	$4 = *($9)
	$13 = *((($1 + [120]) + [24]))
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$13:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)$2) ){ goto $label$12 }
	$4 = $3
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$11 }
	if ( ((int_32)*($5 + [216]) == (int_32)($1 + [120])) ){ goto $label$14 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$14
	if ( $5 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$3 = CALL db_find_i64(*($1 + [120]), *((($1 + [120]) + [8])), (int_64)5937556069193265024, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $74(($1 + [120]), $3)
	if ( ((int_32)*($5 + [216]) == (int_32)($1 + [120])) ){ goto $label$9 }
	CALL eosio_assert([0], [11998])
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	CALL eosio_assert([0], [9902])
	
.LABEL $label$9
	$14 = *($0)
	$4 = *($5 + [32])
	$2 = *($5 + [16])
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [216])) ){ goto $label$15 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$15
	*(($3 = CALL $7([24])) + [12]) = ($1 + [216])
	*($3 + [8]) = $4
	*($3) = $2
	CALL memcpy(($1 + [80]), $3, [8])
	CALL memcpy($8, ($3 + [8]), [1])
	$2 = *($3)
	$5 = CALL db_store_i64(*((($1 + [216]) + [8])), (int_64)5094022140569452544, $14, $2, ($1 + [80]), [9])
	*($3 + [16]) = $5
	if ( (uint_64)($2 <= *($10)) ){ goto $label$16 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($1 + [32]) = $3
	$2 = *($3)
	*($1 + [80]) = $2
	*($1 + [72]) = $5
	$13 = (($1 + [216]) + [28])
	$4 = *($13)
	if ( ((uint_32)$4 >= (uint_32)*($11)) ){ goto $label$19 }
	*($4 + [8]) = $2
	*($4 + [16]) = $5
	*($1 + [32]) = [0]
	*($4) = $3
	*($13) = ($4 + [24])
	$3 = *($1 + [32])
	*($1 + [32]) = [0]
	if ( $3 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $151($7, ($1 + [32]), ($1 + [80]), ($1 + [72]))
	$3 = *($1 + [32])
	*($1 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9($3)
	
.LABEL $label$17
	CALL $152(($1 + [160]))
	*($1 + [80]) = (int_64)0
	$12 = ((int_64)$12 + (int_64)1)
	CALL $150(($1 + [32]), ($1 + [168]), ($1 + [80]))
	$3 = *($1 + [164])
	if ( ((int_32)$3 != (int_32)*($1 + [36])) ){ goto $label$8 }
	
.LABEL $label$7
	$3 = CALL db_lowerbound_i64(*($1 + [176]), *(($1 + [184])), (int_64)4730634643120193536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$3 = CALL $96(($1 + [176]), $3)
	CALL $153(($1 + [176]), $3)
	$3 = CALL db_next_i64(*($3 + [20]), ($1 + [80]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = CALL $96(($1 + [176]), $3)
	CALL $153(($1 + [176]), $3)
	$3 = CALL db_next_i64(*($3 + [20]), ($1 + [80]))
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$21 }
	
.LABEL $label$20
	*(($1 + [112])) = [0]
	*($1 + [96]) = (int_64)-1
	$2 = *($0)
	*($1 + [80]) = $2
	*($1 + [88]) = $2
	*($1 + [104]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)6076636753632296960, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$22 }
	$4 = CALL $106(($1 + [80]), $3)
	$5 = ($4 + [84])
	
.LOOP $label$23:
	$3 = CALL db_next_i64(*($5), ($1 + [32]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$24 }
	CALL $106(($1 + [80]), $3)
	
.LABEL $label$24
	CALL $154(($1 + [80]), $4)
	goto $label$23 
	
.LABEL $label$22
	CALL eosio_assert([0], [13023])
	$3 = CALL db_next_i64(*([0] + [84]), ($1 + [32]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$25 }
	CALL $106(($1 + [80]), $3)
	
.LABEL $label$25
	$2 = CALL $56($0, (int_64)6076636753632096096)
	*($1 + [72]) = $2
	*($1 + [72]) = ((int_64)$2 + (int_64)((int_64)((int_64)CALL $24() / (int_64)1000000) & (int_64)4294967295))
	*(($1 + [64])) = [0]
	*($1 + [48]) = (int_64)-1
	*($1 + [56]) = (int_64)0
	$2 = *($0)
	*($1 + [32]) = $2
	*($1 + [40]) = $2
	*($1 + [16]) = [9946]
	*($1 + [20]) = CALL $15([9946])
	*($1 + [8]) = *($1 + [16])
	CALL $32(($1 + [24]), ($1 + [8]))
	$4 = *(($1 + [60]))
	$13 = *($1 + [56])
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$31:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)6076636610723457328) ){ goto $label$30 }
	$4 = $3
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$29 }
	if ( ((int_32)*($5 + [36]) == (int_32)($1 + [32])) ){ goto $label$32 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$32
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$3 = CALL db_find_i64(*($1 + [32]), *(($1 + [40])), (int_64)4982871467403247616, (int_64)6076636610723457328)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$27 }
	$5 = CALL $33(($1 + [32]), $3)
	if ( ((int_32)*($5 + [36]) == (int_32)($1 + [32])) ){ goto $label$28 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$28
	*($1 + [24]) = ($1 + [72])
	goto $label$26 
	
.LABEL $label$27
	$5 = [0]
	CALL eosio_assert([0], [9959])
	*($1 + [24]) = ($1 + [72])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$26
	CALL $155(($1 + [32]), $5, ($1 + [24]))
	$5 = *($1 + [56])
	if ( ($5 == 0) ){ goto $label$33 }
	$13 = ($1 + [60])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$35 }
	
.LOOP $label$36:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$37 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$38 }
	CALL $9(*(($4 + [32])))
	
.LABEL $label$38
	CALL $9($4)
	
.LABEL $label$37
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$36 }
	$3 = *(($1 + [56]))
	goto $label$34 
	
.LABEL $label$35
	$3 = $5
	
.LABEL $label$34
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$33
	$5 = *($1 + [104])
	if ( ($5 == 0) ){ goto $label$39 }
	$13 = ($1 + [108])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$41 }
	
.LOOP $label$42:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$43 }
	CALL $9($4)
	
.LABEL $label$43
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$42 }
	$3 = *(($1 + [104]))
	goto $label$40 
	
.LABEL $label$41
	$3 = $5
	
.LABEL $label$40
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$39
	$5 = *($1 + [144])
	if ( ($5 == 0) ){ goto $label$44 }
	$13 = ($1 + [148])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$46 }
	
.LOOP $label$47:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$48 }
	CALL $9($4)
	
.LABEL $label$48
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$47 }
	$3 = *(($1 + [144]))
	goto $label$45 
	
.LABEL $label$46
	$3 = $5
	
.LABEL $label$45
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$44
	$5 = *($1 + [200])
	if ( ($5 == 0) ){ goto $label$49 }
	$13 = ($1 + [204])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$51 }
	
.LOOP $label$52:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$53 }
	CALL $9($4)
	
.LABEL $label$53
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$52 }
	$3 = *(($1 + [200]))
	goto $label$50 
	
.LABEL $label$51
	$3 = $5
	
.LABEL $label$50
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$49
	$5 = *($1 + [240])
	if ( ($5 == 0) ){ goto $label$54 }
	$13 = ($1 + [244])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$56 }
	
.LOOP $label$57:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$58 }
	CALL $9($4)
	
.LABEL $label$58
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$57 }
	$3 = *(($1 + [240]))
	goto $label$55 
	
.LABEL $label$56
	$3 = $5
	
.LABEL $label$55
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$54
	$global$0 = ($1 + [256])
}

void .FUNC $549 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [76]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [80])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [84]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [88])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($0 + [92])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $440 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $18($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$6 = CALL $18(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $98 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	*($4 + [36]) = [0]
	$1 = *($0)
	*($4) = $1
	*($4 + [8]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)4730634643120193536, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $96($4, $5) + [16]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$1 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$3 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$3
	*(($0 = CALL $7([32])) + [16]) = $4
	*($0 + [8]) = (int_64)0
	*($0) = $3
	CALL memcpy(($4 + [48]), $0, [8])
	$5 = ($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), $5, [8])
	$3 = *($0)
	$6 = ($4 + [8])
	*($0 + [20]) = CALL db_store_i64(*($6), (int_64)4730634643120193536, $1, $3, ($4 + [48]), [16])
	$7 = ($4 + [16])
	if ( (uint_64)($3 <= *($7)) ){ goto $label$4 }
	*($7) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$3 = *($0)
	$8 = *($6)
	*($4 + [72]) = *($5)
	*($0 + [24]) = CALL db_idx64_store($8, (int_64)4730634643120193536, $1, $3, ($4 + [72]))
	*($4 + [72]) = $0
	$1 = *($0)
	*($4 + [48]) = $1
	$6 = *(($0 + [20]))
	*($4 + [44]) = $6
	$7 = ($4 + [28])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($4 + [32]))) ){ goto $label$7 }
	*($5 + [8]) = $1
	*($5 + [16]) = $6
	*($4 + [72]) = [0]
	*($5) = $0
	*($7) = ($5 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $97(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9($0)
	
.LABEL $label$5
	$6 = *($4 + [24])
	if ( ($6 == 0) ){ goto $label$8 }
	$7 = ($4 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($4 + [24]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$8
	$global$0 = ($4 + [80])
}

void .FUNC $99 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$1 = *($0)
	*($3) = $1
	*($3 + [8]) = $1
	$0 = CALL db_find_i64($1, $1, (int_64)4730634643120193536, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $96($3, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$3
	$4 = CALL db_next_i64(*($0 + [20]), ($3 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $96($3, $4)
	
.LABEL $label$4
	CALL $100($3, $0)
	$5 = *($3 + [24])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($3 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $238 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(($2 + [4]))
	$6 = *($1)
	if ( ((int_32)*(*($2)) != (int_32)[1]) ){ goto $label$4 }
	*($1 + [8]) = *($5)
	goto $label$3 
	
.LABEL $label$4
	$7 = *($5)
	$8 = *($1 + [8])
	if ( ((int_32)*(*(($2 + [8]))) != (int_32)[1]) ){ goto $label$5 }
	*(($1 + [8])) = ((int_64)$7 + (int_64)$8)
	goto $label$3 
	
.LABEL $label$5
	*(($1 + [8])) = (int_64))($8 - $7)
	
.LABEL $label$3
	$2 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [16])
	$7 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [16])
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ($2 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($2)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [40]) = $5
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	CALL $531(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $3, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $236 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [24]) = [-1]
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $97(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $233 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [44]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [63])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $91 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [71]) = $3
	*($5 + [72]) = $2
	*($5 + [70]) = $4
	CALL require_auth(*($0))
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$4 = [0]
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$2 = *($0)
	*($5 + [24]) = $2
	*($5 + [32]) = $2
	$0 = CALL db_find_i64($2, $2, (int_64)-4157500428759203840, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $67(($5 + [24]), $0)
	if ( ((int_32)*($4 + [28]) == (int_32)($5 + [24])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9733])
	
.LABEL $label$2
	*($5 + [12]) = ($5 + [72])
	*($5 + [8]) = ($5 + [70])
	*($5 + [16]) = ($5 + [71])
	if ( $4 ){ goto $label$4 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$4
	CALL $92(($5 + [24]), $4, ($5 + [8]))
	$3 = *($5 + [48])
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($5 + [52])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [24])))
	
.LABEL $label$10
	CALL $9($4)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($5 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($0)
	
.LABEL $label$5
	$global$0 = ($5 + [80])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(($2 + [4]))
	$6 = *($1)
	if ( ((int_32)*(*($2)) != (int_32)[1]) ){ goto $label$4 }
	*($1 + [8]) = *($5)
	goto $label$3 
	
.LABEL $label$4
	$7 = *($5)
	$8 = *($1 + [8])
	if ( ((int_32)*(*(($2 + [8]))) != (int_32)[1]) ){ goto $label$5 }
	*(($1 + [8])) = ((int_64)$7 + (int_64)$8)
	goto $label$3 
	
.LABEL $label$5
	*(($1 + [8])) = (int_64))($8 - $7)
	
.LABEL $label$3
	$2 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [16])
	$7 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [16])
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ($2 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($2)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [40]) = $5
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	CALL $531(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $3, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $230 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $411 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [240])
	$global$0 = $3
	*(($4 = $3) + [200]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [168]) + [24])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [224]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $449(($4 + [16]), ($4 + [224]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4)
	$3 = *($6)
	*((($4 + [224]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [208])
	*($4 + [32]) = $0
	*($4 + [224]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [228]) = ($4 + [200])
	*($4 + [224]) = ($4 + [16])
	CALL $450(($4 + [224]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [184]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [184]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [192])))
	$global$0 = ($4 + [240])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [240])
	return $2
}

void .FUNC $417 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $415(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $443 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $603(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

int_32 .FUNC $409 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [208]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $428(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [184])
	$0 = *($4 + [176])
	$1 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [224])
	return [1]
}

void .FUNC $444 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [8]))) = *(($1 + [48]))
	*($2 + [64]) = *($1 + [40])
	$4 = *($1 + [32])
	$5 = *($1 + [24])
	$6 = *($1 + [16])
	$7 = *($1 + [8])
	$8 = *($1)
	$9 = CALL $18(($2 + [48]), ($1 + [56]))
	$10 = *($1 + [104])
	$11 = *($1 + [96])
	$12 = *($1 + [88])
	$13 = *($1 + [80])
	$14 = *($1 + [72])
	$15 = CALL $18(($2 + [32]), ($1 + [112]))
	$16 = *($1 + [136])
	$17 = *($1 + [128])
	$18 = CALL $18(($2 + [16]), ($1 + [144]))
	$19 = *($1 + [168])
	$20 = *($1 + [160])
	*(($2 + [8])) = *($3)
	*($2) = *($2 + [64])
	CALL $606($0, $8, $7, $6, $5, $4, $2, $9, $14, $13, $12, $11, $10, $15, $17, $16, $18, $20, $19)
	if ( (*($18) & [1]) ){ goto $label$5 }
	if ( (*($15) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*($18 + [8]))
	if ( ((*($15) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($15 + [8]))
	if ( ((*($9) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($9) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL $9(*($9 + [8]))
	$global$0 = ($2 + [80])
}

void .FUNC $605 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $415(*($1), (*($0) + [112]))
	$0 = *($0)
	$2 = ($0 + [128])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [136])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), ($0 + [144]))
	$2 = ($0 + [160])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = ($0 + [168])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $415 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $463($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $21($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $21($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $17($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $541 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [32])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((int_32)(*($5 + [8]) - $6) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($6, $4, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = *(($3 + [40]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	CALL $528(*($1), ($5 + [48]))
	$0 = ($5 + [60])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [4])
	*(($6 = ($6 + [4]))) = (*($6) + [4])
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)(*($6 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($6 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $0, [4])
	*(($6 = ($6 + [4]))) = (*($6) + [4])
	*($2) = $5
	CALL $542($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $445 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $260 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [59])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $532 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	CALL $415(*($1), *($0 + [12]))
	CALL $415(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $414 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $446 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [32])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $261 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $413 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $1($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*((($4 + [176]) + [24])) = (int_64)0
	*(($4 + [208])) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [164]) = $3
	*($4 + [160]) = $3
	*($4 + [168]) = ($3 + $2)
	*($4 + [240]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $459(($4 + [24]), ($4 + [240]))
	*(($5 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [224]) + [8]))) = *($5)
	*($4 + [224]) = *($4 + [8])
	$5 = *($6)
	*((($4 + [240]) + [8])) = $5
	*((($4 + [24]) + [24])) = $5
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [224])
	*($4 + [40]) = $0
	*($4 + [240]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [24])
	CALL $460(($4 + [240]), ($4 + [176]))
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$9 }
	$3 = [1]
	if ( (*($4 + [204]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($3)
	$3 = [1]
	if ( ((*($4 + [204]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [212])))
	if ( (*($4 + [192]) & $3) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($4 + [192]) & $3) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($4 + [200])))
	
.LABEL $label$5
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $447 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), ($0 + [24]))
}

void .FUNC $262 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [36])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [36]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [58])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [68]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

int_32 .FUNC $410 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [208])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [240]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $437(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4)
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [224])
	*($4 + [32]) = $0
	*($4 + [240]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [16])
	CALL $438(($4 + [240]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $386 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [224]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $445(($4 + [24]), ($4 + [224]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [208])
	*($4 + [40]) = $0
	*($4 + [224]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [200])
	$0 = *($4 + [192])
	$1 = *($4 + [184])
	$9 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $303 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
	*(($4 + [352])) = [0]
	*(($4 + [358])) = [0]
	*($4 + [336]) = (int_64)-1
	*($4 + [344]) = (int_64)0
	*($4 + [356]) = [0]
	$1 = *($0)
	*($4 + [320]) = $1
	*($4 + [328]) = $1
	*($4 + [312]) = ($4 + [320])
	*($4 + [208]) = *($0 + [124])
	CALL $304(($4 + [248]), ($4 + [312]), ($4 + [208]))
	$5 = *($4 + [252])
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((int_64)*($4 + [208]) != (int_64)*($5 + [104])) ){ goto $label$4 }
	$1 = *($4 + [248])
	*($4 + [304]) = $1
	if ( (uint_64)($1 <= (int_64)4294967296) ){ goto $label$3 }
	$6 = ($0 + [124])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [96]) != (int_64)*($6)) ){ goto $label$3 }
	$7 = (($4 + [248]) + [24])
	$8 = (($4 + [248]) + [16])
	$9 = (($4 + [248]) + [32])
	$10 = (($4 + [248]) + [28])
	$11 = ($4 + [244])
	$12 = ($4 + [140])
	
.LOOP $label$5:
	$13 = *($2)
	$1 = ((int_64)*($5 + [56]) * (int_64)100)
	if ( ((int_64)$1 <= (int_64)((int_64)$13 * (int_64)110)) ){ goto $label$6 }
	*(($14 = (($4 + [288]) + [8]))) = (int_64)0
	*($4 + [288]) = ((int_64)((int_64)((int_64)$13 * (int_64)-110) + (int_64)$1) / (int_64)100)
	*($8) = (int_64)-1
	*($7) = (int_64)0
	*($9) = [0]
	$1 = *($0)
	*((($4 + [248]) + [8])) = $1
	*($4 + [248]) = $1
	if ( ((int_64)*($5 + [80]) != (int_64)0) ){ goto $label$7 }
	*((($4 + [128]) + [8])) = ($4 + [288])
	*($4 + [132]) = ($4 + [304])
	*($4 + [128]) = ($4 + [248])
	*($4 + [168]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$8 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$8
	*((($4 + [208]) + [8])) = ($4 + [168])
	*($4 + [212]) = ($4 + [128])
	*($4 + [208]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $305(($4 + [208]), $5)
	*($4 + [368]) = $5
	$1 = *($5)
	*($4 + [208]) = $1
	$15 = *($5 + [44])
	*($4 + [152]) = $15
	$16 = *($10)
	if ( ((uint_32)$16 >= (uint_32)*($9)) ){ goto $label$11 }
	*($16 + [8]) = $1
	*($16 + [16]) = $15
	*($4 + [368]) = [0]
	*($16) = $5
	*($10) = ($16 + [24])
	$5 = *($4 + [368])
	*($4 + [368]) = [0]
	if ( $5 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $306($7, ($4 + [368]), ($4 + [208]), ($4 + [152]))
	$5 = *($4 + [368])
	*($4 + [368]) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9($5)
	
.LABEL $label$9
	$5 = *($4 + [308])
	*($4 + [208]) = $0
	CALL $307(($4 + [320]), $5, ($4 + [208]))
	$5 = *($4 + [308])
	
.LABEL $label$7
	if ( ((int_64)*(($5 + [64])) == (int_64)*(($5 + [88]))) ){ goto $label$12 }
	CALL eosio_assert([0], [13053])
	
.LABEL $label$12
	if ( ((int_64)*($5 + [56]) != (int_64)*($5 + [80])) ){ goto $label$13 }
	$5 = *($4 + [308])
	if ( ((int_32)*($5 + [72]) != (int_32)[1]) ){ goto $label$13 }
	$1 = *($0)
	*((($4 + [208]) + [8])) = $1
	*((($4 + [208]) + [16])) = (int_64)-1
	*(($17 = (($4 + [208]) + [24]))) = (int_64)0
	*((($4 + [208]) + [32])) = [0]
	*($11) = [0]
	*($4 + [208]) = $1
	*($4 + [384]) = ($4 + [208])
	$5 = ($5 + [16])
	CALL $287(($4 + [128]), ($4 + [384]), $5)
	$16 = *($4 + [132])
	if ( ($16 == 0) ){ goto $label$15 }
	if ( ((int_64)*($5) != (int_64)*($16 + [32])) ){ goto $label$15 }
	$1 = *($4 + [128])
	*($4 + [152]) = $1
	*($4 + [392]) = (int_64)0
	$5 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$14 }
	
.LOOP $label$16:
	if ( ((int_64)*($5 + [32]) != (int_64)*(*($4 + [308]) + [16])) ){ goto $label$17 }
	*($4 + [392]) = *($5 + [24])
	
.LABEL $label$17
	CALL $288(($4 + [152]))
	$5 = *($4 + [156])
	if ( $5 ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	*($4 + [156]) = [0]
	*($4 + [152]) = ($4 + [384])
	*($4 + [392]) = (int_64)0
	
.LABEL $label$14
	$1 = *($0)
	*((($4 + [168]) + [8])) = ($4 + [288])
	*($4 + [172]) = ($4 + [392])
	*($4 + [168]) = ($4 + [248])
	*($4 + [368]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$18 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$18
	*((($4 + [128]) + [8])) = ($4 + [368])
	*($4 + [132]) = ($4 + [168])
	*($4 + [128]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $308(($4 + [128]), $5)
	*($4 + [192]) = $5
	$1 = *($5)
	*($4 + [128]) = $1
	$15 = *($5 + [44])
	*($4 + [184]) = $15
	$16 = *($10)
	if ( ((uint_32)$16 >= (uint_32)*($9)) ){ goto $label$21 }
	*($16 + [8]) = $1
	*($16 + [16]) = $15
	*($4 + [192]) = [0]
	*($16) = $5
	*($10) = ($16 + [24])
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( $5 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $306($7, ($4 + [192]), ($4 + [128]), ($4 + [184]))
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $9($5)
	
.LABEL $label$19
	$5 = *($4 + [308])
	*($4 + [128]) = $0
	CALL $309(($4 + [320]), $5, ($4 + [128]))
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$13 }
	$18 = (($4 + [208]) + [28])
	$5 = *($18)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$25 }
	CALL $9($16)
	
.LABEL $label$25
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$24 }
	$5 = *($17)
	goto $label$22 
	
.LABEL $label$23
	$5 = $15
	
.LABEL $label$22
	*($18) = $15
	CALL $9($5)
	
.LABEL $label$13
	$5 = *($4 + [308])
	if ( ((int_64)*(($5 + [64])) == (int_64)*(($5 + [88]))) ){ goto $label$26 }
	CALL eosio_assert([0], [13053])
	
.LABEL $label$26
	if ( ((int_64)*($5 + [56]) <= (int_64)*($5 + [80])) ){ goto $label$27 }
	$5 = *($4 + [308])
	if ( ((int_32)*($5 + [72]) != (int_32)[1]) ){ goto $label$27 }
	$1 = *($0)
	*((($4 + [208]) + [8])) = $1
	*((($4 + [208]) + [16])) = (int_64)-1
	*(($17 = (($4 + [208]) + [24]))) = (int_64)0
	*((($4 + [208]) + [32])) = [0]
	*($11) = [0]
	*($4 + [208]) = $1
	*($4 + [200]) = ($4 + [208])
	$5 = ($5 + [16])
	CALL $287(($4 + [128]), ($4 + [200]), $5)
	$16 = *($4 + [132])
	if ( ($16 == 0) ){ goto $label$29 }
	if ( ((int_64)*($5) != (int_64)*($16 + [32])) ){ goto $label$29 }
	$13 = *($4 + [128])
	*($4 + [192]) = $13
	$1 = (int_64)0
	*($4 + [184]) = (int_64)0
	$5 = (CASTING uint_32)(uint_64 (uint_64)$13 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$28 }
	$1 = (int_64)0
	
.LOOP $label$30:
	if ( ((int_64)*($5 + [32]) != (int_64)*(*($4 + [308]) + [16])) ){ goto $label$31 }
	*($4 + [184]) = *($5 + [24])
	$1 = *(($5 + [48]))
	
.LABEL $label$31
	CALL $288(($4 + [192]))
	$5 = *($4 + [196])
	if ( $5 ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	*($4 + [196]) = [0]
	*($4 + [192]) = ($4 + [200])
	$1 = (int_64)0
	*($4 + [184]) = (int_64)0
	
.LABEL $label$28
	$5 = *($4 + [308])
	$13 = *($5 + [80])
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$32 }
	CALL eosio_assert([0], [11307])
	$5 = *($4 + [308])
	
.LABEL $label$32
	$19 = (int_64)
	CALL __multi3(($4 + [112]), $19(*($5 + [56]) - $13)), (int_64)$19 >> (int_64)63), (int_64)100, (int_64)0)
	$19 = *((($4 + [112]) + [8]))
	$20 = *($4 + [112])
	if ( (( (uint_64)($20 <= (int_64)4611686018427387904) ? ((int_64)$19 < (int_64)0) : (int_64)($19 == 0) ) == 0) ){ goto $label$38 }
	if ( (( ((uint_64)$20 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$19 > (int_64)-1) : ((int_64)$19 == (int_64)-1) ) == 0) ){ goto $label$37 }
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) == (int_64)0) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	CALL eosio_assert([0], [13127])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [13151])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$35 }
	
.LABEL $label$36
	CALL eosio_assert([0], [13112])
	if ( ((int_64)(*(($5 + [64])) == 0) == 0) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	if ( (int_64)(*(($5 + [64])) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL eosio_assert([0], [13053])
	
.LABEL $label$33
	CALL __multi3(($4 + [96]), $13, (int_64)$13 >> (int_64)63), (int_64)100, (int_64)0)
	$20 = ((int_64)$20 / (int_64)*(($5 + [56])))
	$13 = *((($4 + [96]) + [8]))
	$19 = *($4 + [96])
	if ( (( (uint_64)($19 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ) == 0) ){ goto $label$44 }
	if ( (( ((uint_64)$19 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ) == 0) ){ goto $label$43 }
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) == (int_64)0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	CALL eosio_assert([0], [13127])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$43
	CALL eosio_assert([0], [13151])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$41 }
	
.LABEL $label$42
	CALL eosio_assert([0], [13112])
	if ( ((int_64)$1 != (int_64)*(($5 + [64]))) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	if ( ((int_64)$1 == (int_64)*(($5 + [64]))) ){ goto $label$39 }
	
.LABEL $label$40
	CALL eosio_assert([0], [13053])
	
.LABEL $label$39
	$1 = *(($5 + [56]))
	$13 = *($4 + [288])
	CALL __multi3(($4 + [80]), $13, (int_64)$13 >> (int_64)63), ((int_64)$20 & (int_64)255), (int_64)0)
	$19 = ((int_64)$19 / (int_64)$1)
	$20 = *($14)
	$1 = *((($4 + [80]) + [8]))
	$13 = *($4 + [80])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$46 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$45 }
	CALL eosio_assert([0], [13151])
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [13127])
	
.LABEL $label$45
	*((($4 + [128]) + [8])) = $20
	*($4 + [128]) = ((int_64)$13 / (int_64)100)
	$1 = *($4 + [288])
	CALL __multi3(($4 + [64]), $1, (int_64)$1 >> (int_64)63), ((int_64)$19 & (int_64)255), (int_64)0)
	$19 = *($14)
	$1 = *((($4 + [64]) + [8]))
	$13 = *($4 + [64])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$48 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$47 }
	CALL eosio_assert([0], [13151])
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [13127])
	
.LABEL $label$47
	*((($4 + [168]) + [8])) = $19
	*($4 + [168]) = ((int_64)$13 / (int_64)100)
	$1 = *($0)
	*(($15 = (($4 + [152]) + [8]))) = ($4 + [128])
	*($4 + [156]) = ($4 + [304])
	*($4 + [152]) = ($4 + [248])
	*($4 + [392]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$49 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$49
	*(($18 = (($4 + [368]) + [8]))) = ($4 + [392])
	*($4 + [372]) = ($4 + [152])
	*($4 + [368]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $310(($4 + [368]), $5)
	*($4 + [384]) = $5
	$1 = *($5)
	*($4 + [368]) = $1
	$21 = *($5 + [44])
	*($4 + [364]) = $21
	$16 = *($10)
	if ( ((uint_32)$16 >= (uint_32)*($9)) ){ goto $label$52 }
	*($16 + [8]) = $1
	*($16 + [16]) = $21
	*($4 + [384]) = [0]
	*($16) = $5
	*($10) = ($16 + [24])
	$5 = *($4 + [384])
	*($4 + [384]) = [0]
	if ( $5 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	CALL $306($7, ($4 + [384]), ($4 + [368]), ($4 + [364]))
	$5 = *($4 + [384])
	*($4 + [384]) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	
.LABEL $label$51
	CALL $9($5)
	
.LABEL $label$50
	$1 = *($0)
	*($15) = ($4 + [168])
	*($4 + [156]) = ($4 + [184])
	*($4 + [152]) = ($4 + [248])
	*($4 + [392]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$53 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$53
	*($18) = ($4 + [392])
	*($4 + [372]) = ($4 + [152])
	*($4 + [368]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $311(($4 + [368]), $5)
	*($4 + [384]) = $5
	$1 = *($5)
	*($4 + [368]) = $1
	$15 = *($5 + [44])
	*($4 + [364]) = $15
	$16 = *($10)
	if ( ((uint_32)$16 >= (uint_32)*($9)) ){ goto $label$56 }
	*($16 + [8]) = $1
	*($16 + [16]) = $15
	*($4 + [384]) = [0]
	*($16) = $5
	*($10) = ($16 + [24])
	$5 = *($4 + [384])
	*($4 + [384]) = [0]
	if ( $5 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	CALL $306($7, ($4 + [384]), ($4 + [368]), ($4 + [364]))
	$5 = *($4 + [384])
	*($4 + [384]) = [0]
	if ( ($5 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	CALL $9($5)
	
.LABEL $label$54
	$5 = *($4 + [308])
	*($4 + [368]) = $0
	CALL $312(($4 + [320]), $5, ($4 + [368]))
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$27 }
	$18 = (($4 + [208]) + [28])
	$5 = *($18)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$58 }
	
.LOOP $label$59:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$60 }
	CALL $9($16)
	
.LABEL $label$60
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$59 }
	$5 = *($17)
	goto $label$57 
	
.LABEL $label$58
	$5 = $15
	
.LABEL $label$57
	*($18) = $15
	CALL $9($5)
	
.LABEL $label$27
	$5 = *($4 + [308])
	if ( ((int_64)*(($5 + [64])) == (int_64)*(($5 + [88]))) ){ goto $label$61 }
	CALL eosio_assert([0], [13053])
	
.LABEL $label$61
	if ( ((int_64)*($5 + [56]) != (int_64)*($5 + [80])) ){ goto $label$62 }
	$5 = *($4 + [308])
	if ( (*($5 + [72]) <= [2]) ){ goto $label$62 }
	$1 = *($0)
	*((($4 + [208]) + [8])) = $1
	*((($4 + [208]) + [16])) = (int_64)-1
	*(($22 = (($4 + [208]) + [24]))) = (int_64)0
	*((($4 + [208]) + [32])) = [0]
	*($11) = [0]
	*($4 + [208]) = $1
	*($4 + [384]) = ($4 + [208])
	$5 = ($5 + [16])
	CALL $287(($4 + [128]), ($4 + [384]), $5)
	$16 = *($4 + [132])
	if ( ($16 == 0) ){ goto $label$65 }
	if ( ((int_64)*($5) != (int_64)*($16 + [32])) ){ goto $label$64 }
	*($4 + [392]) = *($4 + [128])
	goto $label$63 
	
.LABEL $label$65
	*($4 + [396]) = [0]
	*($4 + [392]) = ($4 + [384])
	goto $label$63 
	
.LABEL $label$64
	*($4 + [396]) = [0]
	*($4 + [392]) = ($4 + [384])
	
.LABEL $label$63
	$23 = $3
	$5 = *(*($4 + [308]) + [72])
	$16 = (($5 << [3]) + [8])
	$18 = ($5 + [1])
	$15 = ($3 - ((($18 << [3]) + [15]) & [8176]))
	$3 = $15
	$global$0 = $3
	$5 = [0]
	
.LOOP $label$66:
	*(($15 + $5)) = (int_64)0
	$5 = ($5 + [8])
	if ( ((int_32)$16 != (int_32)$5) ){ goto $label$66 }
	$3 = *($4 + [308])
	$16 = $3
	$17 = ($16 - ((*($3 + [72]) << [4]) + [16]))
	$global$0 = $17
	$5 = $17
	
.LOOP $label$67:
	*($5) = (int_64)0
	*(($5 + [8])) = (int_64)0
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$16) ){ goto $label$67 }
	$5 = [1]
	*($4 + [364]) = [1]
	*(($21 = (($4 + [168]) + [8]))) = (int_64)0
	*($4 + [168]) = (int_64)0
	$16 = *($4 + [396])
	if ( ($16 == 0) ){ goto $label$69 }
	
.LOOP $label$70:
	if ( ((int_64)*($16 + [32]) != (int_64)*($3 + [16])) ){ goto $label$71 }
	*(($15 + (($5 = *($4 + [364])) << [3]))) = *($16 + [24])
	*(($3 = ($17 + ($5 << [4])))) = *($16 + [40])
	*(($3 + [8])) = *(($16 + [48]))
	*($4 + [364]) = ($5 + [1])
	
.LABEL $label$71
	CALL $288(($4 + [392]))
	$16 = *($4 + [396])
	if ( ($16 == 0) ){ goto $label$72 }
	$3 = *($4 + [308])
	goto $label$70 
	
.LABEL $label$72
	$5 = *($4 + [364])
	if ( ($5 == 0) ){ goto $label$68 }
	
.LABEL $label$69
	
.LOOP $label$73:
	$5 = ($17 + (($5 & [255]) << [4]))
	$1 = *($5)
	CALL __multi3(($4 + [48]), $1, (int_64)$1 >> (int_64)63), (int_64)100, (int_64)0)
	$19 = *($5 + [8])
	$1 = *((($4 + [48]) + [8]))
	$13 = *($4 + [48])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$78 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$79 }
	CALL eosio_assert([0], [13151])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$76 }
	goto $label$77 
	
.LABEL $label$79
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) == (int_64)0) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	CALL eosio_assert([0], [13127])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$76 }
	
.LABEL $label$77
	CALL eosio_assert([0], [13112])
	if ( ((int_64)$19 != (int_64)*(($5 + [64]))) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	if ( ((int_64)$19 == (int_64)*(($5 + [64]))) ){ goto $label$74 }
	
.LABEL $label$75
	CALL eosio_assert([0], [13053])
	
.LABEL $label$74
	$1 = *($4 + [288])
	CALL __multi3(($4 + [32]), $1, (int_64)$1 >> (int_64)63), ((int_64)((int_64)$13 / (int_64)*(($5 + [56]))) & (int_64)255), (int_64)0)
	$19 = *($14)
	$1 = *((($4 + [32]) + [8]))
	$13 = *($4 + [32])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$81 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$80 }
	CALL eosio_assert([0], [13151])
	goto $label$80 
	
.LABEL $label$81
	CALL eosio_assert([0], [13127])
	
.LABEL $label$80
	*($21) = $19
	*($4 + [168]) = ((int_64)$13 / (int_64)100)
	$1 = *($0)
	*((($4 + [128]) + [8])) = $15
	*($4 + [132]) = $18
	*($12) = ($4 + [364])
	*((($4 + [128]) + [16])) = ($4 + [168])
	*($4 + [128]) = ($4 + [248])
	*($4 + [152]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$82 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$82
	*((($4 + [368]) + [8])) = ($4 + [152])
	*($4 + [372]) = ($4 + [128])
	*($4 + [368]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $313(($4 + [368]), $5)
	*($4 + [192]) = $5
	$1 = *($5)
	*($4 + [368]) = $1
	$3 = *($5 + [44])
	*($4 + [184]) = $3
	$16 = *($10)
	if ( ((uint_32)$16 >= (uint_32)*($9)) ){ goto $label$85 }
	*($16 + [8]) = $1
	*($16 + [16]) = $3
	*($4 + [192]) = [0]
	*($16) = $5
	*($10) = ($16 + [24])
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( $5 ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	CALL $306($7, ($4 + [192]), ($4 + [368]), ($4 + [184]))
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( ($5 == 0) ){ goto $label$83 }
	
.LABEL $label$84
	CALL $9($5)
	
.LABEL $label$83
	$5 = (*($4 + [364]) + [-1])
	*($4 + [364]) = $5
	if ( ($5 & [255]) ){ goto $label$73 }
	
.LABEL $label$68
	$5 = *($4 + [308])
	*($4 + [128]) = $0
	CALL $314(($4 + [320]), $5, ($4 + [128]))
	$3 = $23
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$62 }
	$17 = (($4 + [208]) + [28])
	$5 = *($17)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$87 }
	
.LOOP $label$88:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$89 }
	CALL $9($16)
	
.LABEL $label$89
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$88 }
	$5 = *($22)
	goto $label$86 
	
.LABEL $label$87
	$5 = $15
	
.LABEL $label$86
	*($17) = $15
	CALL $9($5)
	
.LABEL $label$62
	$5 = *($4 + [308])
	if ( ((int_64)*(($5 + [64])) == (int_64)*(($5 + [88]))) ){ goto $label$90 }
	CALL eosio_assert([0], [13053])
	
.LABEL $label$90
	if ( ((int_64)*($5 + [56]) <= (int_64)*($5 + [80])) ){ goto $label$91 }
	$5 = *($4 + [308])
	if ( (*($5 + [72]) <= [2]) ){ goto $label$91 }
	$1 = *($0)
	*((($4 + [208]) + [8])) = $1
	*((($4 + [208]) + [16])) = (int_64)-1
	*(($22 = (($4 + [208]) + [24]))) = (int_64)0
	*((($4 + [208]) + [32])) = [0]
	*($11) = [0]
	*($4 + [208]) = $1
	*($4 + [384]) = ($4 + [208])
	$5 = ($5 + [16])
	CALL $287(($4 + [128]), ($4 + [384]), $5)
	$16 = *($4 + [132])
	if ( ($16 == 0) ){ goto $label$94 }
	if ( ((int_64)*($5) != (int_64)*($16 + [32])) ){ goto $label$93 }
	*($4 + [392]) = *($4 + [128])
	goto $label$92 
	
.LABEL $label$94
	*($4 + [396]) = [0]
	*($4 + [392]) = ($4 + [384])
	goto $label$92 
	
.LABEL $label$93
	*($4 + [396]) = [0]
	*($4 + [392]) = ($4 + [384])
	
.LABEL $label$92
	$23 = $3
	$5 = *(*($4 + [308]) + [72])
	$15 = (($5 << [3]) + [16])
	$18 = ($5 + [2])
	$16 = ($3 - ((($18 << [3]) + [15]) & [8176]))
	$3 = $16
	$global$0 = $3
	$5 = [0]
	
.LOOP $label$95:
	*(($16 + $5)) = (int_64)0
	$5 = ($5 + [8])
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$95 }
	$15 = *($4 + [308])
	$3 = $3
	$17 = ($3 - ((*($15 + [72]) << [4]) + [32]))
	$global$0 = $17
	$5 = $17
	
.LOOP $label$96:
	*($5) = (int_64)0
	*(($5 + [8])) = (int_64)0
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$96 }
	$3 = [1]
	*($4 + [364]) = [1]
	*(($21 = (($4 + [168]) + [8]))) = (int_64)0
	*($4 + [168]) = (int_64)0
	$5 = *($4 + [396])
	if ( ($5 == 0) ){ goto $label$97 }
	
.LOOP $label$98:
	if ( ((int_64)*($5 + [32]) != (int_64)*($15 + [16])) ){ goto $label$99 }
	*(($16 + (($15 = *($4 + [364])) << [3]))) = *($5 + [24])
	*(($3 = ($17 + ($15 << [4])))) = *($5 + [40])
	*(($3 + [8])) = *(($5 + [48]))
	*($4 + [364]) = ($15 + [1])
	
.LABEL $label$99
	CALL $288(($4 + [392]))
	$5 = *($4 + [396])
	if ( ($5 == 0) ){ goto $label$100 }
	$15 = *($4 + [308])
	goto $label$98 
	
.LABEL $label$100
	$15 = *($4 + [308])
	$3 = *($4 + [364])
	
.LABEL $label$97
	*(($16 + (($3 & [255]) << [3]))) = *([0] + [32])
	$1 = *($15 + [56])
	$19 = *(($15 + [64]))
	if ( ((int_64)*(($15 + [88])) == (int_64)$19) ){ goto $label$101 }
	CALL eosio_assert([0], [12590])
	
.LABEL $label$101
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($15 + [80]))) <= (int_64)-4611686018427387904) ){ goto $label$103 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$102 }
	CALL eosio_assert([0], [12660])
	goto $label$102 
	
.LABEL $label$103
	CALL eosio_assert([0], [12638])
	
.LABEL $label$102
	*(($15 = ($17 + (($5 = *($4 + [364])) << [4])))) = $1
	*($15 + [8]) = $19
	if ( ($5 == 0) ){ goto $label$104 }
	
.LOOP $label$105:
	CALL __multi3(($4 + [16]), $1, (int_64)$1 >> (int_64)63), (int_64)100, (int_64)0)
	$1 = *((($4 + [16]) + [8]))
	$13 = *($4 + [16])
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$111 }
	if ( (( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) == 0) ){ goto $label$110 }
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) == (int_64)0) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	CALL eosio_assert([0], [13127])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$108 }
	goto $label$109 
	
.LABEL $label$110
	CALL eosio_assert([0], [13151])
	$5 = *($4 + [308])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$108 }
	
.LABEL $label$109
	CALL eosio_assert([0], [13112])
	if ( ((int_64)$19 != (int_64)*(($5 + [64]))) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$108
	if ( ((int_64)$19 == (int_64)*(($5 + [64]))) ){ goto $label$106 }
	
.LABEL $label$107
	CALL eosio_assert([0], [13053])
	
.LABEL $label$106
	$1 = *($4 + [288])
	CALL __multi3($4, $1, (int_64)$1 >> (int_64)63), ((int_64)((int_64)$13 / (int_64)*(($5 + [56]))) & (int_64)255), (int_64)0)
	$19 = *($14)
	$1 = *(($4 + [8]))
	$13 = *($4)
	if ( (( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$113 }
	if ( ( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$112 }
	CALL eosio_assert([0], [13151])
	goto $label$112 
	
.LABEL $label$113
	CALL eosio_assert([0], [13127])
	
.LABEL $label$112
	*($21) = $19
	*($4 + [168]) = ((int_64)$13 / (int_64)100)
	$1 = *($0)
	*((($4 + [128]) + [8])) = $16
	*($4 + [132]) = $18
	*($12) = ($4 + [364])
	*((($4 + [128]) + [16])) = ($4 + [168])
	*($4 + [128]) = ($4 + [248])
	*($4 + [152]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [248])) ){ goto $label$114 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$114
	*((($4 + [368]) + [8])) = ($4 + [152])
	*($4 + [372]) = ($4 + [128])
	*($4 + [368]) = ($4 + [248])
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = ($4 + [248])
	CALL $315(($4 + [368]), $5)
	*($4 + [192]) = $5
	$1 = *($5)
	*($4 + [368]) = $1
	$3 = *($5 + [44])
	*($4 + [184]) = $3
	$15 = *($10)
	if ( ((uint_32)$15 >= (uint_32)*($9)) ){ goto $label$117 }
	*($15 + [8]) = $1
	*($15 + [16]) = $3
	*($4 + [192]) = [0]
	*($15) = $5
	*($10) = ($15 + [24])
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( $5 ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$117
	CALL $306($7, ($4 + [192]), ($4 + [368]), ($4 + [184]))
	$5 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( ($5 == 0) ){ goto $label$115 }
	
.LABEL $label$116
	CALL $9($5)
	
.LABEL $label$115
	$5 = (*($4 + [364]) + [-1])
	*($4 + [364]) = $5
	$5 = ($5 & [255])
	if ( ($5 == 0) ){ goto $label$104 }
	$5 = ($17 + ($5 << [4]))
	$19 = *($5 + [8])
	$1 = *($5)
	goto $label$105 
	
.LABEL $label$104
	$5 = *($4 + [308])
	*($4 + [128]) = $0
	CALL $316(($4 + [320]), $5, ($4 + [128]))
	$3 = $23
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$91 }
	$14 = (($4 + [208]) + [28])
	$5 = *($14)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$119 }
	
.LOOP $label$120:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$121 }
	CALL $9($16)
	
.LABEL $label$121
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$120 }
	$5 = *($22)
	goto $label$118 
	
.LABEL $label$119
	$5 = $15
	
.LABEL $label$118
	*($14) = $15
	CALL $9($5)
	
.LABEL $label$91
	$15 = *($7)
	if ( ($15 == 0) ){ goto $label$6 }
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$123 }
	
.LOOP $label$124:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$125 }
	CALL $9($16)
	
.LABEL $label$125
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$124 }
	$5 = *($7)
	goto $label$122 
	
.LABEL $label$123
	$5 = $15
	
.LABEL $label$122
	*($10) = $15
	CALL $9($5)
	
.LABEL $label$6
	CALL $317(($4 + [304]))
	$5 = *($4 + [308])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [96]) == (int_64)*($6)) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$4
	*($4 + [308]) = [0]
	*($4 + [304]) = ($4 + [312])
	
.LABEL $label$3
	CALL eosio_assert([0], [11270])
	
.LABEL $label$2
	$0 = *($4 + [344])
	if ( ($0 == 0) ){ goto $label$126 }
	$10 = ($4 + [348])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$128 }
	
.LOOP $label$129:
	$5 = ($5 + [-24])
	$16 = *($5)
	*($5) = [0]
	if ( ($16 == 0) ){ goto $label$130 }
	if ( ((*($16 + [32]) & [1]) == 0) ){ goto $label$131 }
	CALL $9(*(($16 + [40])))
	
.LABEL $label$131
	CALL $9($16)
	
.LABEL $label$130
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$129 }
	$5 = *(($4 + [344]))
	goto $label$127 
	
.LABEL $label$128
	$5 = $0
	
.LABEL $label$127
	*($10) = $0
	CALL $9($5)
	
.LABEL $label$126
	$global$0 = ($4 + [400])
}

void .FUNC $302 (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $528(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $263 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $307 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [125]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $306 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *(*($5 + [4]) + [4])
	*($1 + [8]) = *($6)
	*($1 + [16]) = *($6 + [24])
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $304 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)5534162690622095362, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $295($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)5534162690622095360, $6))
	if ( ((int_32)*($4 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [128])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $309 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [125]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [16]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $540 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $528(*($1), *($0 + [12]))
}

void .FUNC $604 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [88])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [96])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [104])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $605(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $423 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($3 + [33])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $435 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [32]))
	*($2 + [32]) = *($1 + [24])
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	$6 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [40]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$3 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($8 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$7 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($8)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $6), (int_64 $5), (int_64 ($4 & [255])), (int_32 $2), (int_32 $7), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($7 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $434 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), ($0 + [40]))
	$global$0 = ($2 + [16])
}

void .FUNC $437 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $415(*($1), ($3 + [32]))
}

void .FUNC $436 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $431 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $430 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($3 + [25])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $433 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $597(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $432 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $595(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $602 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8, int_64 $9, int_64 $10, int_64 $11, int_32 $12, int_64 $13, int_64 $14, int_32 $15, int_64 $16, int_32 $17)
{
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$18 = ($global$0 - [80])
	$global$0 = $18
	$0 = *($0 + [4])
	$19 = *($0 + [4])
	$20 = (*($0) + int_32($19 >> [1]))
	$21 = *($0)
	if ( (($19 & [1]) == 0) ){ goto $label$1 }
	$21 = *((*($20) + $21))
	
.LABEL $label$1
	*(($19 = (($18 + [64]) + [8]))) = *(($5 + [8]))
	*($18 + [64]) = *($5)
	$5 = CALL $18(($18 + [48]), $6)
	$0 = CALL $18(($18 + [32]), $12)
	$6 = CALL $18(($18 + [16]), $15)
	*(($18 + [8])) = *($19)
	*($18) = *($18 + [64])
	CALL void $20((int_32 $1), (int_64 $2), (int_32 $3), (int_64 $4), (int_32 $18), (int_32 $5), (int_32 $7), (int_64 $8), (int_32 $9), (int_64 $10), (int_64 $11), (int_64 $0), (int_32 $13), (int_64 $14), (int_64 $6), (int_32 $16), (int_64 $17), (int_32 $21))
	if ( (*($6) & [1]) ){ goto $label$6 }
	if ( (*($0) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($6 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*($0 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($5) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($18 + [80])
	return 
	
.LABEL $label$2
	CALL $9(*($5 + [8]))
	$global$0 = ($18 + [80])
}

void .FUNC $439 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), ($0 + [24]))
}

void .FUNC $438 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [24])
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	$6 = *($1)
	$1 = CALL $18($2, ($1 + [32]))
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$8 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($8) + $0))
	
.LABEL $label$1
	$7 = CALL $18(($2 + [16]), $1)
	CALL void $8((int_32 $6), (int_64 $5), (int_64 $4), (int_64 $3), (int_64 $7), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($7 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $603 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$0 = *($0)
	$3 = ($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [48])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), ($0 + [56]))
	$3 = ($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2) = $0
	CALL $604($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $268 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [1])
	*($1 + [36]) = (*($1 + [36]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = ($1 + [36])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [59])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [68]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($2)
	$6 = *($1)
	$7 = *(*($2 + [4]))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $2) ){ goto $label$3 }
	CALL eosio_assert([0], [13189])
	CALL eosio_assert([0], [13023])
	
.LABEL $label$3
	$8 = CALL db_next_i64(*($2 + [84]), ($4 + [24]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	CALL $106((CASTING uint_32)(uint_64 $7), $8)
	
.LABEL $label$4
	CALL $154($5, $2)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$3 = $3
	$2 = ($3 + [-80])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = $3
	*($4 + [16]) = $4
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [72])
	CALL $117(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [84]), (int_64)0, $2, [80])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $128 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11, int_64 $12)
{
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	$13 = ($global$0 - [192])
	$global$0 = $13
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391463044068144) ){ goto $label$2 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$2
	if ( ((uint_64)CALL $56($0, (int_64)6076636610723457328) >= (uint_64)((int_64)((int_64)CALL $24() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$4 }
	$4 = *($0)
	*($13 + [56]) = (int_64)3617214756542218240
	*($13 + [48]) = $4
	*((($14 = CALL $7([16])) + [8])) = *($13 + [56])
	*($14) = *($13 + [48])
	$15 = ($14 + [16])
	*($13 + [156]) = $15
	*($13 + [152]) = $14
	*($13 + [160]) = $15
	CALL $105($4, (int_64)-4420681859411040624, ($13 + [152]))
	$14 = *($13 + [152])
	if ( ($14 == 0) ){ goto $label$3 }
	*($13 + [156]) = $14
	CALL $9($14)
	$global$0 = ($13 + [192])
	return 
	
.LABEL $label$4
	*(($13 + [40])) = [0]
	*($13 + [24]) = (int_64)-1
	*($13 + [32]) = (int_64)0
	$1 = *($0)
	*($13 + [8]) = $1
	*($13 + [16]) = $1
	$14 = CALL db_find_i64($1, $1, (int_64)6076636753632296960, $3)
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$9 }
	$14 = CALL $106(($13 + [8]), $14)
	if ( ((int_32)*($14 + [80]) == (int_32)($13 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$10
	*($13 + [4]) = $14
	*($13) = ($13 + [8])
	$1 = *($14 + [16])
	$16 = *($14 + [24])
	$17 = *($14 + [32])
	$18 = *($14 + [40])
	$19 = *($14 + [48])
	$20 = *($14 + [56])
	$21 = *($14 + [64])
	$22 = *($14 + [72])
	$23 = *($14 + [8])
	*($13 + [52]) = $13
	*($13 + [48]) = ($13 + [8])
	CALL $129(($13 + [8]), $14, ($13 + [48]))
	*(($13 + [80])) = [0]
	*($13 + [64]) = (int_64)-1
	*($13 + [72]) = (int_64)0
	*($13 + [84]) = [0]
	$24 = *($0)
	*($13 + [48]) = $24
	*($13 + [56]) = $24
	if ( (int_64)($23 == 0) ){ goto $label$6 }
	$14 = CALL db_find_i64($24, $24, (int_64)4730634643120193536, $23)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$8 }
	$14 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($14 + [16]) == (int_32)($13 + [48])) ){ goto $label$7 }
	CALL eosio_assert([0], [11998])
	goto $label$7 
	
.LABEL $label$9
	*($13 + [4]) = [0]
	*($13) = ($13 + [8])
	goto $label$5 
	
.LABEL $label$8
	$14 = [0]
	CALL eosio_assert([0], [12129])
	
.LABEL $label$7
	CALL $130(($13 + [48]), $14)
	
.LABEL $label$6
	if ( (int_64)($1 == 0) ){ goto $label$11 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$13 }
	
.LOOP $label$15:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$1) ){ goto $label$14 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$13 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$12 }
	CALL eosio_assert([0], [11998])
	goto $label$12 
	
.LABEL $label$13
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$16 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$12 }
	CALL eosio_assert([0], [11998])
	goto $label$12 
	
.LABEL $label$16
	CALL eosio_assert([0], [12129])
	
.LABEL $label$12
	CALL $131(($13 + [48]), $26)
	
.LABEL $label$11
	if ( (int_64)($16 == 0) ){ goto $label$17 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$19 }
	
.LOOP $label$21:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$16) ){ goto $label$20 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$19 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$18 }
	CALL eosio_assert([0], [11998])
	goto $label$18 
	
.LABEL $label$19
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $16)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$22 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$18 }
	CALL eosio_assert([0], [11998])
	goto $label$18 
	
.LABEL $label$22
	CALL eosio_assert([0], [12129])
	
.LABEL $label$18
	CALL $132(($13 + [48]), $26)
	
.LABEL $label$17
	if ( (int_64)($17 == 0) ){ goto $label$23 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$25 }
	
.LOOP $label$27:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$17) ){ goto $label$26 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$25 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$24 }
	CALL eosio_assert([0], [11998])
	goto $label$24 
	
.LABEL $label$25
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $17)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$28 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$24 }
	CALL eosio_assert([0], [11998])
	goto $label$24 
	
.LABEL $label$28
	CALL eosio_assert([0], [12129])
	
.LABEL $label$24
	CALL $133(($13 + [48]), $26)
	
.LABEL $label$23
	if ( (int_64)($18 == 0) ){ goto $label$29 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$31 }
	
.LOOP $label$33:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$18) ){ goto $label$32 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$31 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$30 }
	CALL eosio_assert([0], [11998])
	goto $label$30 
	
.LABEL $label$31
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $18)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$34 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$30 }
	CALL eosio_assert([0], [11998])
	goto $label$30 
	
.LABEL $label$34
	CALL eosio_assert([0], [12129])
	
.LABEL $label$30
	CALL $134(($13 + [48]), $26)
	
.LABEL $label$29
	if ( (int_64)($19 == 0) ){ goto $label$35 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$37 }
	
.LOOP $label$39:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$19) ){ goto $label$38 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$37 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$36 }
	CALL eosio_assert([0], [11998])
	goto $label$36 
	
.LABEL $label$37
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $19)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$40 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$36 }
	CALL eosio_assert([0], [11998])
	goto $label$36 
	
.LABEL $label$40
	CALL eosio_assert([0], [12129])
	
.LABEL $label$36
	CALL $135(($13 + [48]), $26)
	
.LABEL $label$35
	if ( (int_64)($20 == 0) ){ goto $label$41 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$43 }
	
.LOOP $label$45:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$20) ){ goto $label$44 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$43 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$42 }
	CALL eosio_assert([0], [11998])
	goto $label$42 
	
.LABEL $label$43
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $20)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$46 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$42 }
	CALL eosio_assert([0], [11998])
	goto $label$42 
	
.LABEL $label$46
	CALL eosio_assert([0], [12129])
	
.LABEL $label$42
	CALL $136(($13 + [48]), $26)
	
.LABEL $label$41
	if ( (int_64)($21 == 0) ){ goto $label$47 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$49 }
	
.LOOP $label$51:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$21) ){ goto $label$50 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$49 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$48 }
	CALL eosio_assert([0], [11998])
	goto $label$48 
	
.LABEL $label$49
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $21)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$52 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$48 }
	CALL eosio_assert([0], [11998])
	goto $label$48 
	
.LABEL $label$52
	CALL eosio_assert([0], [12129])
	
.LABEL $label$48
	CALL $137(($13 + [48]), $26)
	
.LABEL $label$47
	if ( (int_64)($22 == 0) ){ goto $label$53 }
	$15 = *(($13 + [76]))
	$25 = *(($13 + [72]))
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$55 }
	
.LOOP $label$57:
	$14 = ($15 + [-24])
	$26 = *($14)
	if ( ((int_64)*($26) == (int_64)$22) ){ goto $label$56 }
	$15 = $14
	if ( ((int_32)$25 != (int_32)$14) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	if ( ((int_32)$25 == (int_32)$15) ){ goto $label$55 }
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$54 }
	CALL eosio_assert([0], [11998])
	goto $label$54 
	
.LABEL $label$55
	$26 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $22)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$58 }
	$26 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($26 + [16]) == (int_32)($13 + [48])) ){ goto $label$54 }
	CALL eosio_assert([0], [11998])
	goto $label$54 
	
.LABEL $label$58
	CALL eosio_assert([0], [12129])
	
.LABEL $label$54
	CALL $138(($13 + [48]), $26)
	
.LABEL $label$53
	$26 = *($13 + [72])
	if ( ($26 == 0) ){ goto $label$5 }
	$25 = ($13 + [76])
	$14 = *($25)
	if ( ((int_32)$14 == (int_32)$26) ){ goto $label$60 }
	
.LOOP $label$61:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$62 }
	CALL $9($15)
	
.LABEL $label$62
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$61 }
	$14 = *(($13 + [72]))
	goto $label$59 
	
.LABEL $label$60
	$14 = $26
	
.LABEL $label$59
	*($25) = $26
	CALL $9($14)
	
.LABEL $label$5
	$16 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($13 + [8])) ){ goto $label$63 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$63
	*(($14 = CALL $7([96])) + [80]) = ($13 + [8])
	*($14 + [8]) = $4
	*($14) = $3
	*($14 + [16]) = $5
	*($14 + [24]) = $6
	*($14 + [32]) = $7
	*($14 + [40]) = $8
	*($14 + [48]) = $9
	*($14 + [56]) = $10
	*($14 + [64]) = $11
	*($14 + [72]) = $12
	*($13 + [136]) = (($13 + [48]) + [80])
	*($13 + [132]) = ($13 + [48])
	*($13 + [128]) = ($13 + [48])
	*($13 + [144]) = ($13 + [128])
	*($13 + [156]) = ($14 + [8])
	*($13 + [152]) = $14
	*($13 + [160]) = ($14 + [16])
	*($13 + [164]) = ($14 + [24])
	*($13 + [168]) = ($14 + [32])
	*($13 + [172]) = ($14 + [40])
	*($13 + [176]) = ($14 + [48])
	*($13 + [180]) = ($14 + [56])
	*($13 + [184]) = ($14 + [64])
	*($13 + [188]) = ($14 + [72])
	CALL $117(($13 + [152]), ($13 + [144]))
	$1 = *($14)
	$26 = CALL db_store_i64(*((($13 + [8]) + [8])), (int_64)6076636753632296960, $16, $1, ($13 + [48]), [80])
	*($14 + [84]) = $26
	$15 = (($13 + [8]) + [16])
	if ( (uint_64)($1 <= *($15)) ){ goto $label$64 }
	*($15) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$64
	*($13 + [152]) = $14
	$1 = *($14)
	*($13 + [48]) = $1
	*($13 + [128]) = $26
	$25 = ($13 + [36])
	$15 = *($25)
	if ( ((uint_32)$15 >= (uint_32)*((($13 + [8]) + [32]))) ){ goto $label$67 }
	*($15 + [8]) = $1
	*($15 + [16]) = $26
	*($13 + [152]) = [0]
	*($15) = $14
	*($25) = ($15 + [24])
	$15 = *($13 + [152])
	$14 = [0]
	*($13 + [152]) = [0]
	if ( $15 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	CALL $118(($13 + [32]), ($13 + [152]), ($13 + [48]), ($13 + [128]))
	$15 = *($13 + [152])
	$14 = [0]
	*($13 + [152]) = [0]
	if ( ($15 == 0) ){ goto $label$65 }
	
.LABEL $label$66
	CALL $9($15)
	
.LABEL $label$65
	*(($13 + [80])) = $14
	*($13 + [64]) = (int_64)-1
	*($13 + [84]) = $14
	$1 = *($0)
	*($13 + [48]) = $1
	*($13 + [56]) = $1
	*($13 + [72]) = (int_64)0
	$15 = CALL db_find_i64($1, $1, (int_64)4730634643120193536, (int_64)0)
	if ( ((int_32)$15 < (int_32)$14) ){ goto $label$68 }
	if ( ((int_32)*(CALL $96(($13 + [48]), $15) + [16]) == (int_32)($13 + [48])) ){ goto $label$68 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$68
	if ( (int_64)($4 == 0) ){ goto $label$69 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$71 }
	
.LOOP $label$73:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$4) ){ goto $label$72 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$71 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$70 }
	CALL eosio_assert([0], [11998])
	goto $label$70 
	
.LABEL $label$71
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $4)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$74 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$70 }
	CALL eosio_assert([0], [11998])
	goto $label$70 
	
.LABEL $label$74
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$70
	CALL $139(($13 + [48]), $0)
	
.LABEL $label$69
	if ( (int_64)($5 == 0) ){ goto $label$75 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$77 }
	
.LOOP $label$79:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$5) ){ goto $label$78 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$78
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$77 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$76 }
	CALL eosio_assert([0], [11998])
	goto $label$76 
	
.LABEL $label$77
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $5)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$80 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$76 }
	CALL eosio_assert([0], [11998])
	goto $label$76 
	
.LABEL $label$80
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$76
	CALL $140(($13 + [48]), $0)
	
.LABEL $label$75
	if ( (int_64)($6 == 0) ){ goto $label$81 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$83 }
	
.LOOP $label$85:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$6) ){ goto $label$84 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$83 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$82 }
	CALL eosio_assert([0], [11998])
	goto $label$82 
	
.LABEL $label$83
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $6)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$86 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$82 }
	CALL eosio_assert([0], [11998])
	goto $label$82 
	
.LABEL $label$86
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$82
	CALL $141(($13 + [48]), $0)
	
.LABEL $label$81
	if ( (int_64)($7 == 0) ){ goto $label$87 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$89 }
	
.LOOP $label$91:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$7) ){ goto $label$90 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$91 }
	goto $label$89 
	
.LABEL $label$90
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$89 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$88 }
	CALL eosio_assert([0], [11998])
	goto $label$88 
	
.LABEL $label$89
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $7)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$92 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$88 }
	CALL eosio_assert([0], [11998])
	goto $label$88 
	
.LABEL $label$92
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$88
	CALL $142(($13 + [48]), $0)
	
.LABEL $label$87
	if ( (int_64)($8 == 0) ){ goto $label$93 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$95 }
	
.LOOP $label$97:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$8) ){ goto $label$96 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$97 }
	goto $label$95 
	
.LABEL $label$96
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$95 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$94 }
	CALL eosio_assert([0], [11998])
	goto $label$94 
	
.LABEL $label$95
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $8)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$98 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$94 }
	CALL eosio_assert([0], [11998])
	goto $label$94 
	
.LABEL $label$98
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$94
	CALL $143(($13 + [48]), $0)
	
.LABEL $label$93
	if ( (int_64)($9 == 0) ){ goto $label$99 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$101 }
	
.LOOP $label$103:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$9) ){ goto $label$102 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$103 }
	goto $label$101 
	
.LABEL $label$102
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$101 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$100 }
	CALL eosio_assert([0], [11998])
	goto $label$100 
	
.LABEL $label$101
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $9)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$104 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$100 }
	CALL eosio_assert([0], [11998])
	goto $label$100 
	
.LABEL $label$104
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$100
	CALL $144(($13 + [48]), $0)
	
.LABEL $label$99
	if ( (int_64)($10 == 0) ){ goto $label$105 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$107 }
	
.LOOP $label$109:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$10) ){ goto $label$108 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$108
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$107 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$106 }
	CALL eosio_assert([0], [11998])
	goto $label$106 
	
.LABEL $label$107
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $10)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$110 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$106 }
	CALL eosio_assert([0], [11998])
	goto $label$106 
	
.LABEL $label$110
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$106
	CALL $145(($13 + [48]), $0)
	
.LABEL $label$105
	if ( (int_64)($11 == 0) ){ goto $label$111 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$113 }
	
.LOOP $label$115:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$11) ){ goto $label$114 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$115 }
	goto $label$113 
	
.LABEL $label$114
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$113 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$112 }
	CALL eosio_assert([0], [11998])
	goto $label$112 
	
.LABEL $label$113
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $11)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$116 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$112 }
	CALL eosio_assert([0], [11998])
	goto $label$112 
	
.LABEL $label$116
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$112
	CALL $146(($13 + [48]), $0)
	
.LABEL $label$111
	if ( (int_64)($12 == 0) ){ goto $label$117 }
	$15 = *(($13 + [76]))
	$26 = *(($13 + [72]))
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$119 }
	
.LOOP $label$121:
	$14 = ($15 + [-24])
	$0 = *($14)
	if ( ((int_64)*($0) == (int_64)$12) ){ goto $label$120 }
	$15 = $14
	if ( ((int_32)$26 != (int_32)$14) ){ goto $label$121 }
	goto $label$119 
	
.LABEL $label$120
	if ( ((int_32)$26 == (int_32)$15) ){ goto $label$119 }
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$118 }
	CALL eosio_assert([0], [11998])
	goto $label$118 
	
.LABEL $label$119
	$0 = [0]
	$14 = CALL db_find_i64(*($13 + [48]), *(($13 + [56])), (int_64)4730634643120193536, $12)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$122 }
	$0 = CALL $96(($13 + [48]), $14)
	if ( ((int_32)*($0 + [16]) == (int_32)($13 + [48])) ){ goto $label$118 }
	CALL eosio_assert([0], [11998])
	goto $label$118 
	
.LABEL $label$122
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$118
	CALL $147(($13 + [48]), $0)
	
.LABEL $label$117
	$0 = *($13 + [72])
	if ( ($0 == 0) ){ goto $label$123 }
	$26 = ($13 + [76])
	$14 = *($26)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$125 }
	
.LOOP $label$126:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$127 }
	CALL $9($15)
	
.LABEL $label$127
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$126 }
	$14 = *(($13 + [72]))
	goto $label$124 
	
.LABEL $label$125
	$14 = $0
	
.LABEL $label$124
	*($26) = $0
	CALL $9($14)
	
.LABEL $label$123
	$0 = *($13 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$26 = ($13 + [36])
	$14 = *($26)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$129 }
	
.LOOP $label$130:
	$14 = ($14 + [-24])
	$15 = *($14)
	*($14) = [0]
	if ( ($15 == 0) ){ goto $label$131 }
	CALL $9($15)
	
.LABEL $label$131
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$130 }
	$14 = *(($13 + [32]))
	goto $label$128 
	
.LABEL $label$129
	$14 = $0
	
.LABEL $label$128
	*($26) = $0
	CALL $9($14)
	
.LABEL $label$3
	$global$0 = ($13 + [192])
}

void .FUNC $286 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [624])
	$global$0 = $6
	*($6 + [528]) = $3
	*($6 + [536]) = $2
	*($6 + [520]) = $1
	CALL require_auth($2)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391468512948096) ){ goto $label$2 }
	CALL eosio_assert([0], [10885])
	
.LABEL $label$2
	$3 = *($5)
	*($6 + [504]) = (int_64)0
	$2 = *($5 + [8])
	*($6 + [512]) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$2 = $1
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$2 = $1
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $8 ){ goto $label$7 }
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8364])
	
.LABEL $label$3
	*($6 + [503]) = [0]
	*(($6 + [488])) = [0]
	*($6 + [472]) = (int_64)-1
	*($6 + [480]) = (int_64)0
	*($6 + [492]) = [0]
	$2 = *($0)
	*($6 + [456]) = $2
	*($6 + [464]) = $2
	*($6 + [448]) = ($6 + [456])
	CALL $287(($6 + [544]), ($6 + [448]), ($6 + [528]))
	$7 = *($6 + [548])
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_64)*($6 + [528]) != (int_64)*($7 + [32])) ){ goto $label$9 }
	$2 = *($6 + [544])
	*($6 + [440]) = $2
	$7 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($7) == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	if ( ((int_64)*($7 + [32]) != (int_64)*($6 + [528])) ){ goto $label$8 }
	*($6 + [503]) = (*($6 + [503]) + [1])
	*($6 + [504]) = ((int_64)*($7 + [40]) + (int_64)*($6 + [504]))
	CALL $288(($6 + [440]))
	$7 = *($6 + [444])
	if ( $7 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	*($6 + [444]) = [0]
	*($6 + [440]) = ($6 + [448])
	
.LABEL $label$8
	$10 = ((int_64)*($5) + (int_64)*($6 + [504]))
	if ( ((uint_64)$3 <= (uint_64)$10) ){ goto $label$11 }
	CALL eosio_assert([0], [10942])
	
.LABEL $label$11
	$11 = [0]
	*(($6 + [432])) = [0]
	*($6 + [416]) = (int_64)-1
	*($6 + [424]) = (int_64)0
	$2 = *($0)
	*($6 + [400]) = $2
	*($6 + [408]) = $2
	*($6 + [392]) = [11034]
	*($6 + [396]) = CALL $15([11034])
	*($6 + [152]) = *($6 + [392])
	CALL $32(($6 + [544]), ($6 + [152]))
	$8 = *(($6 + [428]))
	$9 = *($6 + [424])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$15:
	$7 = ($8 + [-24])
	$12 = *($7)
	if ( ((int_64)*($12) == (int_64)7343834332292355216) ){ goto $label$14 }
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$13 }
	if ( ((int_32)*($12 + [36]) == (int_32)($6 + [400])) ){ goto $label$16 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$16
	$11 = $12
	goto $label$12 
	
.LABEL $label$13
	$7 = CALL db_find_i64(*($6 + [400]), *(($6 + [408])), (int_64)4982871467403247616, (int_64)7343834332292355216)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$11 = CALL $33(($6 + [400]), $7)
	if ( ((int_32)*($11 + [36]) == (int_32)($6 + [400])) ){ goto $label$12 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$12
	$3 = *($11 + [8])
	*(($6 + [384])) = [0]
	*($6 + [368]) = (int_64)-1
	*($6 + [376]) = (int_64)0
	$2 = *($0)
	*($6 + [352]) = $2
	*($6 + [360]) = $2
	*($6 + [344]) = [11047]
	*($6 + [348]) = CALL $15([11047])
	*($6 + [144]) = *($6 + [344])
	CALL $32(($6 + [544]), ($6 + [144]))
	$8 = *(($6 + [380]))
	$12 = *($6 + [376])
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$21:
	$7 = ($8 + [-24])
	$9 = *($7)
	if ( ((int_64)*($9) == (int_64)-4418639957570292448) ){ goto $label$20 }
	$8 = $7
	if ( ((int_32)$12 != (int_32)$7) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$19 }
	if ( ((int_32)*($9 + [28]) == (int_32)($6 + [352])) ){ goto $label$22 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$22
	if ( $9 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	$7 = CALL db_find_i64(*($6 + [352]), *(($6 + [360])), (int_64)-4157500428759203840, (int_64)-4418639957570292448)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL $67(($6 + [352]), $7)
	if ( ((int_32)*($9 + [28]) == (int_32)($6 + [352])) ){ goto $label$17 }
	CALL eosio_assert([0], [11998])
	goto $label$17 
	
.LABEL $label$18
	$9 = [0]
	CALL eosio_assert([0], [11060])
	
.LABEL $label$17
	*($6 + [336]) = *($9 + [8])
	*($6 + [328]) = [11082]
	*($6 + [332]) = CALL $15([11082])
	*($6 + [136]) = *($6 + [328])
	CALL $32(($6 + [544]), ($6 + [136]))
	$8 = *(($6 + [380]))
	$12 = *(($6 + [376]))
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$25 }
	
.LOOP $label$27:
	$7 = ($8 + [-24])
	$9 = *($7)
	if ( ((int_64)*($9) == (int_64)-4418639957570476144) ){ goto $label$26 }
	$8 = $7
	if ( ((int_32)$12 != (int_32)$7) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$25 }
	if ( ((int_32)*($9 + [28]) == (int_32)($6 + [352])) ){ goto $label$28 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$28
	if ( $9 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$25
	$7 = CALL db_find_i64(*($6 + [352]), *(($6 + [360])), (int_64)-4157500428759203840, (int_64)-4418639957570476144)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$24 }
	$9 = CALL $67(($6 + [352]), $7)
	if ( ((int_32)*($9 + [28]) == (int_32)($6 + [352])) ){ goto $label$23 }
	CALL eosio_assert([0], [11998])
	goto $label$23 
	
.LABEL $label$24
	$9 = [0]
	CALL eosio_assert([0], [11060])
	
.LABEL $label$23
	*($6 + [320]) = *($9 + [8])
	$7 = CALL $15([9158])
	if ( ($7 <= [8]) ){ goto $label$32 }
	CALL eosio_assert([0], [12838])
	goto $label$31 
	
.LABEL $label$32
	if ( ($7 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$2 = (int_64)0
	
.LOOP $label$33:
	$8 = *(($7 + [9157]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$34 }
	CALL eosio_assert([0], [12883])
	
.LABEL $label$34
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$33 }
	goto $label$29 
	
.LABEL $label$30
	$2 = (int_64)0
	
.LABEL $label$29
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	$7 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$2 = $1
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$2 = $1
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $8 ){ goto $label$39 }
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [8364])
	
.LABEL $label$35
	*($6 + [312]) = [11095]
	*($6 + [316]) = CALL $15([11095])
	*($6 + [128]) = *($6 + [312])
	CALL $32(($6 + [544]), ($6 + [128]))
	$8 = *(($6 + [428]))
	$12 = *(($6 + [424]))
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$41 }
	
.LOOP $label$43:
	$7 = ($8 + [-24])
	$9 = *($7)
	if ( ((int_64)*($9) == (int_64)5937548165010183568) ){ goto $label$42 }
	$8 = $7
	if ( ((int_32)$12 != (int_32)$7) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$41 }
	if ( ((int_32)*($9 + [36]) == (int_32)($6 + [400])) ){ goto $label$40 }
	CALL eosio_assert([0], [11998])
	goto $label$40 
	
.LABEL $label$41
	$9 = [0]
	$7 = CALL db_find_i64(*($6 + [400]), *(($6 + [408])), (int_64)4982871467403247616, (int_64)5937548165010183568)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$40 }
	$9 = CALL $33(($6 + [400]), $7)
	if ( ((int_32)*($9 + [36]) == (int_32)($6 + [400])) ){ goto $label$40 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$40
	$2 = *($0)
	$1 = *($9 + [16])
	*($6 + [208]) = (int_64)3617214756542218240
	*($6 + [200]) = *($6 + [536])
	$7 = CALL $7([16])
	*(($6 + [288])) = [0]
	*($7) = *($6 + [200])
	*(($7 + [8])) = *($6 + [208])
	*(($6 + [272])) = *(($5 + [8]))
	*($6 + [296]) = $7
	*($6 + [256]) = $1
	*($6 + [280]) = (int_64)0
	$7 = ($7 + [16])
	*($6 + [304]) = $7
	*($6 + [300]) = $7
	*($6 + [248]) = *($6 + [536])
	*($6 + [264]) = *($5)
	$8 = ($6 + [280])
	$7 = CALL $15([11108])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$47 }
	$9 = (($6 + [248]) + [16])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$50 }
	*(($6 + [280])) = ($7 << [1])
	$12 = ($8 + [1])
	if ( $7 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$11 = (($7 + [16]) & [-16])
	$12 = CALL $7($11)
	*(($6 + [288])) = $12
	*(($6 + [284])) = $7
	*($6 + [280]) = ($11 | [1])
	
.LABEL $label$49
	CALL memcpy($12, [11108], $7)
	
.LABEL $label$48
	*(($12 + $7)) = [0]
	$7 = (($6 + [296]) + [8])
	$12 = *($7)
	*($7) = [0]
	*(($6 + [568])) = *(($9 + [8]))
	*(($7 = (($6 + [544]) + [40]))) = *(($8 + [8]))
	$1 = *($8)
	*(($6 + [280])) = [0]
	*($6 + [184]) = *($6 + [296])
	*($6 + [192]) = $12
	*($6 + [296]) = (int_64)0
	*($6 + [544]) = *($6 + [248])
	*($6 + [552]) = *((($6 + [248]) + [8]))
	*($6 + [560]) = *($9)
	*($6 + [576]) = $1
	*(($6 + [284])) = [0]
	*((($6 + [248]) + [40])) = [0]
	CALL $37($2, (int_64)-3617168760277827584, ($6 + [184]), ($6 + [544]))
	if ( ((*($6 + [576]) & [1]) == 0) ){ goto $label$51 }
	CALL $9(*($7))
	
.LABEL $label$51
	$7 = *($6 + [184])
	if ( ($7 == 0) ){ goto $label$52 }
	*($6 + [188]) = $7
	CALL $9($7)
	
.LABEL $label$52
	if ( ((*(($6 + [280])) & [1]) == 0) ){ goto $label$53 }
	CALL $9(*(($6 + [288])))
	
.LABEL $label$53
	$2 = *($0)
	*($6 + [208]) = (int_64)3617214756542218240
	*($6 + [200]) = $2
	*((($7 = CALL $7([16])) + [8])) = *($6 + [208])
	*($7) = *($6 + [200])
	*(($8 = (($6 + [608]) + [4]))) = *((($6 + [242]) + [4]))
	*(($6 + [566])) = *($8)
	*((($6 + [104]) + [8])) = (int_64)1
	*($6 + [560]) = [1]
	$8 = *($6 + [242 align=2])
	*($6 + [562 align=2]) = $8
	*((($6 + [104]) + [16])) = *($6 + [560])
	*($6 + [184]) = $7
	$7 = ($7 + [16])
	*($6 + [188]) = $7
	*($6 + [192]) = $7
	*($6 + [544]) = (int_64)-4418639957570476144
	*($6 + [552]) = (int_64)1
	*($6 + [104]) = (int_64)-4418639957570476144
	*($6 + [608]) = $8
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [184]), ($6 + [104]))
	$7 = *($6 + [184])
	if ( ($7 == 0) ){ goto $label$54 }
	*($6 + [188]) = $7
	CALL $9($7)
	
.LABEL $label$54
	$2 = *($0)
	$1 = *($6 + [536])
	*($6 + [241]) = *(($0 + ( [97] ? [98] : (uint_64)(*($6 + [320]) <= $3) )))
	*(($9 = ($6 + [232]))) = [0]
	*(($6 + [238])) = [0]
	*($6 + [208]) = $2
	*($6 + [200]) = $2
	*($6 + [216]) = (int_64)-1
	*($6 + [224]) = (int_64)0
	*($6 + [236]) = [0]
	*($6 + [560]) = $4
	*($6 + [572]) = $5
	*($6 + [548]) = ($6 + [520])
	*($6 + [544]) = ($6 + [200])
	*($6 + [552]) = ($6 + [528])
	*($6 + [556]) = ($6 + [536])
	*($6 + [564]) = ($6 + [336])
	*($6 + [568]) = ($6 + [320])
	*($6 + [576]) = ($6 + [503])
	*($6 + [580]) = ($6 + [504])
	*($6 + [584]) = ($6 + [241])
	*($6 + [608]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($6 + [200])) ){ goto $label$55 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$55
	*($6 + [188]) = ($6 + [544])
	*($6 + [184]) = ($6 + [200])
	*($6 + [192]) = ($6 + [608])
	*(($7 = CALL $7([136])) + [24]) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [32 align=4]) = (int_64)0
	*($7 + [40]) = [0]
	*($7 + [56]) = (int_64)0
	*($7 + [64]) = (int_64)0
	*($7 + [80]) = (int_64)0
	*($7 + [88]) = (int_64)0
	*($7 + [112]) = ($6 + [200])
	CALL $289(($6 + [184]), $7)
	*($6 + [600]) = $7
	$2 = *($7)
	*($6 + [184]) = $2
	$12 = *($7 + [116])
	*($6 + [596]) = $12
	$5 = ($6 + [228])
	$8 = *($5)
	if ( ((uint_32)$8 >= (uint_32)*($9)) ){ goto $label$57 }
	*($8 + [8]) = $2
	*($8 + [16]) = $12
	*($6 + [600]) = [0]
	*($8) = $7
	*($5) = ($8 + [24])
	$7 = *($6 + [600])
	*($6 + [600]) = [0]
	if ( ($7 == 0) ){ goto $label$56 }
	goto $label$46 
	
.LABEL $label$57
	CALL $290(($6 + [224]), ($6 + [600]), ($6 + [184]), ($6 + [596]))
	$7 = *($6 + [600])
	*($6 + [600]) = [0]
	if ( $7 ){ goto $label$46 }
	
.LABEL $label$56
	if ( (uint_64)(*($6 + [320]) <= $3) ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$47
	CALL $17($8)
	
.LABEL $label$46
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$58 }
	CALL $9(*(($7 + [40])))
	
.LABEL $label$58
	CALL $9($7)
	if ( (uint_64)(*($6 + [320]) <= $3) ){ goto $label$44 }
	
.LABEL $label$45
	$2 = *($0)
	*($6 + [192]) = (int_64)3617214756542218240
	*($6 + [184]) = $2
	*((($7 = CALL $7([16])) + [8])) = *($6 + [192])
	*($7) = *($6 + [184])
	*(($8 = (($6 + [600]) + [4]))) = *((($6 + [178]) + [4]))
	*(($9 = ($6 + [566]))) = *($8)
	*((($6 + [80]) + [8])) = (int_64)1
	*($6 + [560]) = [1]
	$12 = *($6 + [178 align=2])
	*($6 + [562 align=2]) = $12
	*((($6 + [80]) + [16])) = *($6 + [560])
	*($6 + [608]) = $7
	$7 = ($7 + [16])
	*($6 + [612]) = $7
	*($6 + [616]) = $7
	*($6 + [544]) = (int_64)-4418639957570292448
	*($6 + [552]) = (int_64)1
	*($6 + [80]) = (int_64)-4418639957570292448
	*($6 + [600]) = $12
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [608]), ($6 + [80]))
	$7 = *($6 + [608])
	if ( ($7 == 0) ){ goto $label$59 }
	*($6 + [612]) = $7
	CALL $9($7)
	
.LABEL $label$59
	$2 = *($0)
	*($6 + [192]) = (int_64)3617214756542218240
	*($6 + [184]) = $2
	*((($7 = CALL $7([16])) + [8])) = *($6 + [192])
	*($7) = *($6 + [184])
	*($8) = *((($6 + [172]) + [4]))
	*($9) = *($8)
	*((($6 + [56]) + [8])) = (int_64)0
	*($6 + [560]) = [256]
	$8 = *($6 + [172 align=2])
	*($6 + [562 align=2]) = $8
	*((($6 + [56]) + [16])) = *($6 + [560])
	*($6 + [608]) = $7
	$7 = ($7 + [16])
	*($6 + [612]) = $7
	*($6 + [616]) = $7
	*($6 + [544]) = (int_64)-4418639957570476144
	*($6 + [552]) = (int_64)0
	*($6 + [56]) = (int_64)-4418639957570476144
	*($6 + [600]) = $8
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [608]), ($6 + [56]))
	$7 = *($6 + [608])
	if ( ($7 == 0) ){ goto $label$60 }
	*($6 + [612]) = $7
	CALL $9($7)
	
.LABEL $label$60
	$2 = *($0)
	*($6 + [192]) = (int_64)3617214756542218240
	*($6 + [184]) = $2
	*((($7 = CALL $7([16])) + [8])) = *($6 + [192])
	*($7) = *($6 + [184])
	*(($8 = (($6 + [600]) + [4]))) = *((($6 + [166]) + [4]))
	*(($9 = ($6 + [566]))) = *($8)
	*((($6 + [32]) + [8])) = (int_64)1
	*($6 + [560]) = [1]
	$12 = *($6 + [166 align=2])
	*($6 + [562 align=2]) = $12
	*((($6 + [32]) + [16])) = *($6 + [560])
	*($6 + [608]) = $7
	$7 = ($7 + [16])
	*($6 + [612]) = $7
	*($6 + [616]) = $7
	*($6 + [544]) = (int_64)-3660748230063477104
	*($6 + [552]) = (int_64)1
	*($6 + [32]) = (int_64)-3660748230063477104
	*($6 + [600]) = $12
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [608]), ($6 + [32]))
	$7 = *($6 + [608])
	if ( ($7 == 0) ){ goto $label$61 }
	*($6 + [612]) = $7
	CALL $9($7)
	
.LABEL $label$61
	$2 = *($0)
	*($6 + [192]) = (int_64)3617214756542218240
	*($6 + [184]) = $2
	*((($7 = CALL $7([16])) + [8])) = *($6 + [192])
	*($7) = *($6 + [184])
	*($8) = *((($6 + [160]) + [4]))
	*($9) = *($8)
	*((($6 + [8]) + [8])) = $10
	*($6 + [560]) = [1]
	$8 = *($6 + [160 align=2])
	*($6 + [562 align=2]) = $8
	*((($6 + [8]) + [16])) = *($6 + [560])
	*($6 + [608]) = $7
	$7 = ($7 + [16])
	*($6 + [612]) = $7
	*($6 + [616]) = $7
	*($6 + [544]) = (int_64)-4418693908750065008
	*($6 + [552]) = $10
	*($6 + [8]) = (int_64)-4418693908750065008
	*($6 + [600]) = $8
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [608]), ($6 + [8]))
	$7 = *($6 + [608])
	if ( ($7 == 0) ){ goto $label$44 }
	*($6 + [612]) = $7
	CALL $9($7)
	
.LABEL $label$44
	$9 = *($6 + [224])
	if ( ($9 == 0) ){ goto $label$62 }
	$0 = ($6 + [228])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$64 }
	
.LOOP $label$65:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$66 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$67 }
	CALL $9(*(($8 + [40])))
	
.LABEL $label$67
	CALL $9($8)
	
.LABEL $label$66
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$65 }
	$7 = *(($6 + [224]))
	goto $label$63 
	
.LABEL $label$64
	$7 = $9
	
.LABEL $label$63
	*($0) = $9
	CALL $9($7)
	
.LABEL $label$62
	$9 = *($6 + [376])
	if ( ($9 == 0) ){ goto $label$68 }
	$0 = ($6 + [380])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$70 }
	
.LOOP $label$71:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$72 }
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$73 }
	CALL $9(*(($8 + [24])))
	
.LABEL $label$73
	CALL $9($8)
	
.LABEL $label$72
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$71 }
	$7 = *(($6 + [376]))
	goto $label$69 
	
.LABEL $label$70
	$7 = $9
	
.LABEL $label$69
	*($0) = $9
	CALL $9($7)
	
.LABEL $label$68
	$9 = *($6 + [424])
	if ( ($9 == 0) ){ goto $label$74 }
	$0 = ($6 + [428])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$76 }
	
.LOOP $label$77:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$78 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$79 }
	CALL $9(*(($8 + [32])))
	
.LABEL $label$79
	CALL $9($8)
	
.LABEL $label$78
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$77 }
	$7 = *(($6 + [424]))
	goto $label$75 
	
.LABEL $label$76
	$7 = $9
	
.LABEL $label$75
	*($0) = $9
	CALL $9($7)
	
.LABEL $label$74
	$9 = *($6 + [480])
	if ( ($9 == 0) ){ goto $label$80 }
	$0 = ($6 + [484])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$82 }
	
.LOOP $label$83:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$84 }
	CALL $9($8)
	
.LABEL $label$84
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$83 }
	$7 = *(($6 + [480]))
	goto $label$81 
	
.LABEL $label$82
	$7 = $9
	
.LABEL $label$81
	*($0) = $9
	CALL $9($7)
	
.LABEL $label$80
	$global$0 = ($6 + [624])
	(unreachable)
}

void .FUNC $287 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-8462961477395939327, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [84])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $356($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)-8462961477395939328, $6))
	if ( ((int_32)*($4 + [84]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [96])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $284 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = *($1)
	$9 = *($2)
	$10 = *($9 + [56])
	$8 = *($2 + [4])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$3 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$3 }
	*($1 + [32]) = (*($1 + [32]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *($9 + [59])
	
.LABEL $label$3
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$4 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$4 }
	*($1 + [36]) = (*($1 + [36]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [36]) + [1]))) ){ goto $label$4 }
	*($5) = *($9 + [58])
	
.LABEL $label$4
	$10 = *($9 + [59])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$5 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$5 }
	*($1 + [40]) = (*($1 + [40]) + [1])
	if ( ((int_64)((int_64)*(*(*($2 + [12]) + [4]) + [40]) + (int_64)1) != (int_64)*(*($2 + [16]))) ){ goto $label$5 }
	*($5) = *($9 + [60])
	
.LABEL $label$5
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$6 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$6 }
	*($1 + [41]) = (*($1 + [41]) + [1])
	if ( ((int_64)((int_64)*(*(*($2 + [12]) + [4]) + [41]) + (int_64)1) != (int_64)*(*($2 + [16]))) ){ goto $label$6 }
	*($5) = *($9 + [61])
	
.LABEL $label$6
	$10 = *($9 + [62])
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$7 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [127])) ){ goto $label$7 }
	*($1 + [44]) = (*($1 + [44]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [44]) + [1]))) ){ goto $label$7 }
	*($5) = *($9 + [63])
	
.LABEL $label$7
	if ( ((int_32)*($8) != (int_32)$10) ){ goto $label$8 }
	if ( ((int_32)*(*($2 + [8])) != (int_32)*($9 + [128])) ){ goto $label$8 }
	*($1 + [48]) = (*($1 + [48]) + [1])
	if ( ((int_64)*(*($2 + [16])) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2 + [12]) + [4]) + [48]) + [1]))) ){ goto $label$8 }
	*($5) = *($9 + [64])
	
.LABEL $label$8
	$9 = $3
	$2 = ($9 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($9 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$8 = ($1 + [72])
	$9 = *($8)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$11 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $7)
	*($8) = $9
	
.LABEL $label$11
	CALL db_idx64_update($9, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$13 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $7)
	*($2) = $1
	
.LABEL $label$13
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $285 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	*($5) = *(*($2))
	$7 = *($1)
	$2 = $3
	$3 = ($2 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [48]) = $1
	*($4 + [56]) = $6
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $3, [55])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$2 = ($1 + [72])
	$5 = *($2)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $7)
	*($2) = $5
	
.LABEL $label$5
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$4
	*($4 + [48]) = *($6)
	if ( (CALL $16($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$5 = ($1 + [76])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $7)
	*($5) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$6
	$global$0 = ($4 + [96])
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

int_32 .FUNC $288 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [13023])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [96]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-8462961477395939327, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [96])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*(($4 + [84])) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-8462961477395939328, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $356($7, $2)
	if ( ((int_32)*($4 + [84]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*(($4 + [96])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)5534162690622095360, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $295($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $569(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [24]) = *(*($5 + [12]))
	$8 = ($1 + [32])
	CALL $19($8, *($5 + [16]))
	*($1 + [44]) = *(*($5 + [20]))
	*($1 + [48]) = *(*($5 + [24]))
	$6 = *($5 + [28])
	*(($1 + [64])) = *(($6 + [8]))
	*($1 + [56]) = *($6)
	*($1 + [72]) = *(*($5 + [32]))
	$6 = *($5 + [36])
	*(($1 + [88])) = *(($6 + [8]))
	*($1 + [80]) = *($6)
	*($1 + [96]) = *(*($5 + [40]))
	$5 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [89])
	$7 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [96])
	$10 = ($1 + [80])
	$11 = ($1 + [72])
	$12 = ($1 + [56])
	$13 = ($1 + [48])
	$14 = ($1 + [44])
	$15 = ($1 + [8])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $1($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $15
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	*($3 + [48]) = $8
	*($3 + [52]) = $14
	*($3 + [56]) = $13
	*($3 + [60]) = $12
	*($3 + [64]) = $11
	*($3 + [68]) = $10
	*($3 + [72]) = $9
	*($3 + [76]) = ($1 + [104])
	CALL $301(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [116]) = CALL db_store_i64(*($4 + [8]), (int_64)5534162690622095360, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $2($6)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$5 = ($4 + [8])
	$7 = *($5)
	$6 = *(($0 + [8]))
	$16 = *($6)
	$17 = *($1)
	*($3 + [32]) = *(($1 + [96]))
	*($1 + [120]) = CALL db_idx64_store($7, (int_64)5534162690622095360, $16, $17, ($3 + [32]))
	$7 = *($6)
	$16 = *($5)
	$17 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*(($1 + [124])) = CALL db_idx64_store($16, (int_64)5534162690622095361, $7, $17, ($3 + [32]))
	$7 = *($6)
	$16 = *($5)
	$17 = *($1)
	*($3 + [32]) = *(($1 + [104]))
	*(($1 + [128])) = CALL db_idx64_store($16, (int_64)5534162690622095362, $7, $17, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [172])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [169]) = (*($1 + [169]) + [1])
	$5 = *($1)
	*($4 + [24]) = [0]
	*($4 + [8]) = ($4 + [24])
	$6 = ($1 + [8])
	*($4 + [36]) = $6
	*($4 + [32]) = $1
	$7 = ($1 + [16])
	*($4 + [40]) = $7
	$8 = ($1 + [24])
	*($4 + [44]) = $8
	$9 = ($1 + [32])
	*($4 + [48]) = $9
	$10 = ($1 + [40])
	*($4 + [52]) = $10
	$11 = ($1 + [56])
	*($4 + [56]) = $11
	$12 = ($1 + [72])
	*($4 + [60]) = $12
	$13 = ($1 + [80])
	*($4 + [64]) = $13
	$14 = ($1 + [88])
	*($4 + [68]) = $14
	$15 = ($1 + [104])
	*($4 + [72]) = $15
	$16 = ($1 + [112])
	*($4 + [76]) = $16
	$17 = ($1 + [120])
	*($4 + [80]) = $17
	$18 = ($1 + [128])
	*($4 + [84]) = $18
	$19 = ($1 + [144])
	*($4 + [88]) = $19
	$20 = ($1 + [152])
	*($4 + [92]) = $20
	$21 = ($1 + [160])
	*($4 + [96]) = $21
	$22 = ($1 + [168])
	*($4 + [100]) = $22
	$23 = ($1 + [169])
	*($4 + [104]) = $23
	CALL $557(($4 + [32]), ($4 + [8]))
	$24 = *($4 + [24])
	if ( ($24 <= [513]) ){ goto $label$4 }
	$3 = CALL $1($24)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($24 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $24)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $6
	*($4 + [40]) = $7
	*($4 + [44]) = $8
	*($4 + [48]) = $9
	*($4 + [52]) = $10
	*($4 + [56]) = $11
	*($4 + [60]) = $12
	*($4 + [64]) = $13
	*($4 + [68]) = $14
	*($4 + [72]) = $15
	*($4 + [76]) = $16
	*($4 + [80]) = $17
	*($4 + [84]) = $18
	*($4 + [88]) = $19
	*($4 + [92]) = $20
	*($4 + [96]) = $21
	*($4 + [100]) = $22
	*($4 + [104]) = $23
	*($4 + [32]) = $1
	CALL $558(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [176]), $2, $3, $24)
	if ( ((uint_32)$24 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [112])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([184])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64]) = [0]
	*($5 + [72]) = (int_64)0
	*($5 + [88 align=4]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [104]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128 align=4]) = (int_64)0
	*($5 + [136]) = [0]
	*($5 + [172]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [104])
	*($3 + [76]) = ($5 + [112])
	*($3 + [80]) = ($5 + [120])
	*($3 + [84]) = ($5 + [128])
	*($3 + [88]) = ($5 + [144])
	*($3 + [92]) = ($5 + [152])
	*($3 + [96]) = ($5 + [160])
	*($3 + [100]) = ($5 + [168])
	*($3 + [104]) = ($5 + [169])
	CALL $559(($3 + [32]), ($3 + [24]))
	*($5 + [176]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $175(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [128]) & [1]) ){ goto $label$15 }
	if ( (*($1 + [88]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*(($1 + [136])))
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($1 + [96])))
	if ( (*($1 + [56]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($1 + [64])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [112])
	return $5
}

void .FUNC $491 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $179(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $185 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [33]) = *(*(*($2) + [4]) + [168])
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-208])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-4])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [33])
	*($4 + [48]) = ($1 + [34])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [56])
	*($4 + [60]) = ($1 + [72])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [120])
	*($4 + [76]) = ($1 + [136])
	*($4 + [80]) = ($1 + [152])
	*($4 + [84]) = ($1 + [168])
	*($4 + [88]) = ($1 + [172])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [180])
	*($4 + [104]) = ($1 + [182])
	*($4 + [100]) = ($1 + [181])
	*($4 + [108]) = ($1 + [183])
	*($4 + [112]) = ($1 + [184])
	*($4 + [116]) = ($1 + [185])
	*($4 + [120]) = ($1 + [186])
	*($4 + [124]) = ($1 + [192])
	*($4 + [128]) = ($1 + [200])
	*($4 + [132]) = ($1 + [208])
	*($4 + [136]) = ($1 + [212])
	*($4 + [140]) = ($1 + [213])
	CALL $65(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $3, [204])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $490 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	*($3 + [424]) = ($2 + $4)
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	*($3 + [400]) = (int_64)0
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [400]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$7
	CALL memcpy(($3 + [399]), $2, [1])
	$2 = (*($3 + [420]) + [1])
	*($3 + [420]) = $2
	*($3 + [384]) = (int_64)0
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$8
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$9
	CALL memcpy(($3 + [383]), $2, [1])
	$2 = (*($3 + [420]) + [1])
	*($3 + [420]) = $2
	*($3 + [368]) = (int_64)0
	*($3 + [360]) = (int_64)0
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$10
	CALL memcpy(($3 + [360]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$11
	CALL memcpy(($3 + [104]), $2, [8])
	*((($3 + [360]) + [8])) = *($3 + [104])
	*($3 + [420]) = (*($3 + [420]) + [8])
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	CALL $415(($3 + [416]), ($3 + [344]))
	$2 = *($3 + [420])
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$12
	CALL memcpy(($3 + [336]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$13
	CALL memcpy(($3 + [335]), $2, [1])
	$2 = (*($3 + [420]) + [1])
	*($3 + [420]) = $2
	*($3 + [320]) = (int_64)0
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$14
	CALL memcpy(($3 + [320]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$15
	CALL memcpy(($3 + [312]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	*($3 + [304]) = (int_64)0
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$16
	CALL memcpy(($3 + [304]), $2, [8])
	*($3 + [420]) = (*($3 + [420]) + [8])
	*($3 + [296]) = [0]
	*($3 + [288]) = (int_64)0
	CALL $415(($3 + [416]), ($3 + [288]))
	*($3 + [280]) = (int_64)0
	$2 = *($3 + [420])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$17
	CALL memcpy(($3 + [280]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$18
	CALL memcpy(($3 + [272]), $2, [8])
	*($3 + [420]) = (*($3 + [420]) + [8])
	*($3 + [264]) = [0]
	*($3 + [256]) = (int_64)0
	CALL $415(($3 + [416]), ($3 + [256]))
	$2 = *($3 + [420])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$19
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = (*($3 + [420]) + [8])
	*($3 + [420]) = $2
	$4 = (($3 + [416]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$20 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [420])
	
.LABEL $label$20
	CALL memcpy(($3 + [247]), $2, [1])
	*($3 + [420]) = (*($3 + [420]) + [1])
	*(($2 = (($3 + [88]) + [8]))) = *($4)
	*($3 + [88]) = *($3 + [416])
	*(($4 = (($3 + [432]) + [8]))) = *($2)
	*($3 + [432]) = *($3 + [88])
	$2 = *($4)
	*((($3 + [448]) + [8])) = $2
	*(($3 + [128])) = $2
	*($3 + [104]) = $0
	*($3 + [112]) = $1
	$0 = *($3 + [432])
	*($3 + [120]) = $0
	*($3 + [448]) = $0
	*($3 + [132 align=4]) = (int_64)361417177238274561
	*($3 + [140 align=4]) = (int_64)144408800781666054
	*($3 + [148]) = [1027]
	*($3 + [150 align=2]) = (int_64)72339081933160453
	*($3 + [158 align=2]) = [33620738]
	*($3 + [162]) = [1027]
	*($3 + [164 align=4]) = (int_64)216736870368216581
	*($3 + [172]) = [17171716]
	*($3 + [176]) = (int_64)73469379886514946
	*($3 + [184]) = [770]
	*($3 + [186 align=2]) = (int_64)72621656421500164
	*($3 + [194 align=2]) = [50462978]
	*($3 + [198]) = [1284]
	*($3 + [200]) = (int_64)506097522914230534
	*($3 + [208]) = [17434888]
	*($3 + [212]) = [770]
	*($3 + [214]) = [4]
	*($3 + [215 align=1]) = [67305985]
	*($3 + [219 align=1]) = [261]
	*($3 + [221]) = [2]
	*($3 + [224]) = (int_64)72058693550160512
	*($3 + [232]) = [770]
	*($3 + [234]) = [4]
	*(($5 = (($3 + [72]) + [8]))) = *((($3 + [360]) + [8]))
	*($3 + [72]) = *($3 + [360])
	$6 = *($3 + [383])
	$0 = *($3 + [384])
	$7 = *($3 + [399])
	$1 = *($3 + [400])
	$8 = *($3 + [408])
	$4 = CALL $18(($3 + [56]), ($3 + [344]))
	$9 = *($3 + [304])
	$10 = *($3 + [312])
	$11 = *($3 + [320])
	$12 = *($3 + [335])
	$13 = *($3 + [336])
	$14 = CALL $18(($3 + [40]), ($3 + [288]))
	$15 = *($3 + [272])
	$16 = *($3 + [280])
	$2 = CALL $18(($3 + [24]), ($3 + [256]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [72])
	CALL $177(($3 + [104]), $8, $1, $7, $0, $6, ($3 + [8]), $4, $13, $12, $11, $10, $9, $14, $16, $15, $2, *($3 + [248]), *($3 + [247]))
	if ( (*($2) & [1]) ){ goto $label$31 }
	if ( (*($14) & [1]) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL $9(*($2 + [8]))
	if ( ((*($14) & [1]) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	CALL $9(*($14 + [8]))
	$2 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$2 = [1]
	if ( (*($4) & [1]) ){ goto $label$27 }
	
.LABEL $label$28
	if ( (*($3 + [256]) & $2) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL $9(*($4 + [8]))
	if ( ((*($3 + [256]) & $2) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL $9(*(($3 + [264])))
	$2 = [1]
	if ( ((*($3 + [288]) & [1]) == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$2 = [1]
	if ( (*($3 + [288]) & [1]) ){ goto $label$23 }
	
.LABEL $label$24
	if ( (*($3 + [344]) & $2) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $9(*(($3 + [296])))
	if ( ((*($3 + [344]) & $2) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $9(*(($3 + [352])))
	$global$0 = ($3 + [464])
	return 
	
.LABEL $label$21
	$global$0 = ($3 + [464])
}

void .FUNC $547 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [20]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	$0 = *($0)
	*($2 + [15]) = ((int_32)*($0 + [24]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$5 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	*($2 + [8]) = $0
	CALL $548(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [24]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $563(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $192(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(*($2) + [4])
	*($1 + [8]) = *($5 + [112])
	*($1 + [16]) = *($5 + [120])
	$6 = *($1)
	$8 = *($5 + [128])
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *(($5 + [132])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22(($5 + [128]), [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [24]), (*(*($2) + [4]) + [128]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$5 = *($1 + [24])
	$2 = ( *(($1 + [28])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($2 + [24])
	$9 = (CASTING uint_64)(uint_32 $2)
	$7 = ($1 + [24])
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($5 <= [513]) ){ goto $label$8 }
	$2 = CALL $1($5)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$7
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [44]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $540(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [40]), (int_64)0, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($2)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $600 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [88])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [96])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $415(*($1), ($4 + [104]))
	*($2 + [8]) = $4
	CALL $601(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $542 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [13]) = ((int_32)*(*($0) + [68]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [13]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [76]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [14]) = ((int_32)*($0 + [80]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	*($2 + [8]) = $0
	CALL $543(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	*($1 + [17]) = *(*(*($2) + [4]) + [168])
	$6 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-13])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [17])
	*($4 + [56]) = ($1 + [18])
	CALL $63(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $3, [19])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [40]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($4 + [32]), $6)
	*(($1 + [28])) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

int_32 .FUNC $571 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5001342326447013888)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $362(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $555 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [52]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [56])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [60]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [72])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $570 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $358 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($6 + [40])))
	
.LABEL $label$13
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($9 + [40])))
	
.LABEL $label$16
	CALL $9($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [116]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $585(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	$global$0 = ($2 + [16])
}

void .FUNC $359 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$9 = *(($1 + [32]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5003143671300882432, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $478 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $101(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [172])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [128]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($5 + [136])))
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($5 + [96])))
	if ( (*($5 + [56]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($5 + [64])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	if ( ((*($8 + [128]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($8 + [136])))
	if ( ((*($8 + [88]) & [1]) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((*($8 + [88]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $9(*(($8 + [96])))
	if ( (*($8 + [56]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((*($8 + [56]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $9(*(($8 + [64])))
	
.LABEL $label$20
	CALL $9($8)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [176]))
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($6 + [28])))
	
.LABEL $label$13
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($9 + [28])))
	
.LABEL $label$16
	CALL $9($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961540019654656, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([104])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [84]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [64])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [80])
	*($3 + [72]) = ($5 + [81])
	*($3 + [76]) = ($5 + [82])
	CALL $568(($3 + [32]), ($3 + [24]))
	*($5 + [88]) = $1
	*($5 + [92 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $333(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [84])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [88]))
	$9 = *($1 + [92])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961477395939328, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [96]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961477395939327, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $350 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	if ( ((int_64)$1 <= (int_64)-4157660971118100481) ){ goto $label$56 }
	if ( ((int_64)$1 <= (int_64)4982871467403247615) ){ goto $label$55 }
	if ( ((int_64)$1 > (int_64)5937556069193265023) ){ goto $label$53 }
	if ( ((int_64)$1 == (int_64)4982871467403247616) ){ goto $label$49 }
	if ( ((int_64)$1 == (int_64)5094022140569452544) ){ goto $label$36 }
	if ( ((int_64)$1 != (int_64)5094023804032647168) ){ goto $label$1 }
	goto $label$35 
	
.LABEL $label$56
	if ( ((int_64)$1 > (int_64)-6497942333781180417) ){ goto $label$54 }
	if ( ((int_64)$1 <= (int_64)-8462961477395939329) ){ goto $label$52 }
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	if ( ((int_64)$1 != (int_64)-7880044402153918464) ){ goto $label$1 }
	goto $label$22 
	
.LABEL $label$55
	if ( ((int_64)$1 <= (int_64)-2507757988870094849) ){ goto $label$51 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 == (int_64)3775065857097465856) ){ goto $label$48 }
	if ( ((int_64)$1 != (int_64)4730634643120193536) ){ goto $label$1 }
	goto $label$37 
	
.LABEL $label$54
	if ( ((int_64)$1 <= (int_64)-5001621371248181249) ){ goto $label$50 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$53
	if ( ((int_64)$1 == (int_64)5937556069193265024) ){ goto $label$34 }
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	if ( ((int_64)$1 != (int_64)7176376055052107776) ){ goto $label$1 }
	goto $label$28 
	
.LABEL $label$52
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 != (int_64)-8462961540019654656) ){ goto $label$1 }
	goto $label$26 
	
.LABEL $label$51
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$50
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$49
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$57 }
	$5 = CALL $33($2, $4)
	
.LOOP $label$58:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [40]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$59 }
	$4 = CALL $33($2, $6)
	
.LABEL $label$59
	CALL $351($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$58 }
	
.LABEL $label$57
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$45 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$47 }
	
.LOOP $label$60:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$61 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$62 }
	CALL $9(*(($5 + [32])))
	
.LABEL $label$62
	CALL $9($5)
	
.LABEL $label$61
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$60 }
	$4 = *(($2 + [24]))
	goto $label$46 
	
.LABEL $label$48
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$1 = *($0)
	*($2) = $1
	*($2 + [8]) = $1
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($1, $1, (int_64)3775065857097465856, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$63 }
	$5 = CALL $352($2, $4)
	
.LOOP $label$64:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [36]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$65 }
	$4 = CALL $352($2, $6)
	
.LABEL $label$65
	CALL $353($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$64 }
	
.LABEL $label$63
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	$0 = ($2 + [28])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$44 }
	
.LOOP $label$66:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$67 }
	CALL $9($5)
	
.LABEL $label$67
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$66 }
	$4 = *(($2 + [24]))
	goto $label$43 
	
.LABEL $label$47
	$4 = $6
	
.LABEL $label$46
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$45
	if ( ((int_64)$1 <= (int_64)-4227605603803571329) ){ goto $label$69 }
	if ( ((int_64)$1 > (int_64)5094022140569452543) ){ goto $label$68 }
	if ( ((int_64)$1 <= (int_64)-4157500428759203841) ){ goto $label$41 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 == (int_64)4730634643120193536) ){ goto $label$37 }
	goto $label$1 
	
.LABEL $label$69
	if ( ((int_64)$1 <= (int_64)-7880044402153918465) ){ goto $label$42 }
	if ( ((int_64)$1 <= (int_64)-5003143671300882433) ){ goto $label$40 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$68
	if ( ((int_64)$1 <= (int_64)5937556069193265023) ){ goto $label$39 }
	if ( ((int_64)$1 == (int_64)5937556069193265024) ){ goto $label$34 }
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	if ( ((int_64)$1 == (int_64)7176376055052107776) ){ goto $label$28 }
	goto $label$1 
	
.LABEL $label$44
	$4 = $6
	
.LABEL $label$43
	*($0) = $6
	CALL $9($4)
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$42
	if ( ((int_64)$1 > (int_64)-8462961477395939329) ){ goto $label$38 }
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	goto $label$1 
	
.LABEL $label$41
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$40
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$39
	if ( ((int_64)$1 == (int_64)5094022140569452544) ){ goto $label$36 }
	if ( ((int_64)$1 == (int_64)5094023804032647168) ){ goto $label$35 }
	goto $label$1 
	
.LABEL $label$38
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$37
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)4730634643120193536, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$70 }
	$5 = CALL $96($2, $4)
	
.LOOP $label$71:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [20]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$72 }
	$4 = CALL $96($2, $6)
	
.LABEL $label$72
	CALL $100($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$71 }
	
.LABEL $label$70
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$73 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$75 }
	
.LOOP $label$76:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$77 }
	CALL $9($5)
	
.LABEL $label$77
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$76 }
	$4 = *(($2 + [24]))
	goto $label$74 
	
.LABEL $label$75
	$4 = $6
	
.LABEL $label$74
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$73
	if ( ((int_64)$1 > (int_64)-4227605603803571329) ){ goto $label$84 }
	if ( ((int_64)$1 <= (int_64)-7880044402153918465) ){ goto $label$83 }
	if ( ((int_64)$1 <= (int_64)-5003143671300882433) ){ goto $label$81 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$84
	if ( ((int_64)$1 <= (int_64)5094022140569452543) ){ goto $label$82 }
	if ( ((int_64)$1 <= (int_64)5937556069193265023) ){ goto $label$80 }
	if ( ((int_64)$1 == (int_64)5937556069193265024) ){ goto $label$34 }
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	if ( ((int_64)$1 == (int_64)7176376055052107776) ){ goto $label$28 }
	goto $label$1 
	
.LABEL $label$83
	if ( ((int_64)$1 > (int_64)-8462961477395939329) ){ goto $label$79 }
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	goto $label$1 
	
.LABEL $label$82
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$78 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$81
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$80
	if ( ((int_64)$1 == (int_64)5094022140569452544) ){ goto $label$36 }
	if ( ((int_64)$1 == (int_64)5094023804032647168) ){ goto $label$35 }
	goto $label$1 
	
.LABEL $label$79
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$78
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$36
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$85 }
	$5 = CALL $84($2, $4)
	
.LOOP $label$86:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [16]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$87 }
	$4 = CALL $84($2, $6)
	
.LABEL $label$87
	CALL $149($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$86 }
	
.LABEL $label$85
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$88 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$90 }
	
.LOOP $label$91:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$92 }
	CALL $9($5)
	
.LABEL $label$92
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$91 }
	$4 = *(($2 + [24]))
	goto $label$89 
	
.LABEL $label$90
	$4 = $6
	
.LABEL $label$89
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$88
	if ( ((int_64)$1 <= (int_64)-5001342326447013889) ){ goto $label$99 }
	if ( ((int_64)$1 <= (int_64)-2507757988870094849) ){ goto $label$98 }
	if ( ((int_64)$1 <= (int_64)5937556069193265023) ){ goto $label$96 }
	if ( ((int_64)$1 == (int_64)5937556069193265024) ){ goto $label$34 }
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	if ( ((int_64)$1 == (int_64)7176376055052107776) ){ goto $label$28 }
	goto $label$1 
	
.LABEL $label$99
	if ( ((int_64)$1 > (int_64)-7880044402153918465) ){ goto $label$97 }
	if ( ((int_64)$1 > (int_64)-8462961477395939329) ){ goto $label$95 }
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	goto $label$1 
	
.LABEL $label$98
	if ( ((int_64)$1 > (int_64)-4157660971118100481) ){ goto $label$94 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$97
	if ( ((int_64)$1 > (int_64)-5003143671300882433) ){ goto $label$93 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$96
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 == (int_64)5094023804032647168) ){ goto $label$35 }
	goto $label$1 
	
.LABEL $label$95
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$94
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$93
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	goto $label$1 
	
.LABEL $label$35
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)5094023804032647168, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$103 }
	$5 = CALL $182($2, $4)
	
.LOOP $label$104:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [176]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$105 }
	$4 = CALL $182($2, $6)
	
.LABEL $label$105
	CALL $354($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$104 }
	CALL $176(($2 + [24]))
	if ( ((int_64)$1 > (int_64)-5001342326447013889) ){ goto $label$102 }
	if ( ((int_64)$1 > (int_64)-7880044402153918465) ){ goto $label$101 }
	if ( ((int_64)$1 > (int_64)-8462961477395939329) ){ goto $label$33 }
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	goto $label$1 
	
.LABEL $label$103
	CALL $176(($2 + [24]))
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$102
	if ( ((int_64)$1 > (int_64)-2507757988870094849) ){ goto $label$100 }
	if ( ((int_64)$1 > (int_64)-4157660971118100481) ){ goto $label$32 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$101
	if ( ((int_64)$1 > (int_64)-5003143671300882433) ){ goto $label$31 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$100
	if ( ((int_64)$1 > (int_64)6076636753632296959) ){ goto $label$30 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 != (int_64)5937556069193265024) ){ goto $label$1 }
	
.LABEL $label$34
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)5937556069193265024, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$106 }
	$5 = CALL $74($2, $4)
	
.LOOP $label$107:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [220]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$108 }
	$4 = CALL $74($2, $6)
	
.LABEL $label$108
	CALL $82($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$107 }
	
.LABEL $label$106
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$109 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$111 }
	
.LOOP $label$112:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$113 }
	CALL $9($5)
	
.LABEL $label$113
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$112 }
	$4 = *(($2 + [24]))
	goto $label$110 
	
.LABEL $label$111
	$4 = $6
	
.LABEL $label$110
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$109
	if ( ((int_64)$1 <= (int_64)-5001621371248181249) ){ goto $label$119 }
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$118 }
	if ( ((int_64)$1 > (int_64)-4227605603803571329) ){ goto $label$116 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$119
	if ( ((int_64)$1 <= (int_64)-8281825045618098177) ){ goto $label$117 }
	if ( ((int_64)$1 > (int_64)-6497942333781180417) ){ goto $label$115 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$118
	if ( ((int_64)$1 > (int_64)6076636753632296959) ){ goto $label$114 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$117
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$116
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$115
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$114
	if ( ((int_64)$1 == (int_64)7176376055052107776) ){ goto $label$28 }
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	goto $label$1 
	
.LABEL $label$33
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$32
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$31
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	goto $label$1 
	
.LABEL $label$30
	if ( ((int_64)$1 == (int_64)6076636753632296960) ){ goto $label$29 }
	if ( ((int_64)$1 == (int_64)7176376055052107776) ){ goto $label$28 }
	goto $label$1 
	
.LABEL $label$29
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)6076636753632296960, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$120 }
	$5 = CALL $106($2, $4)
	
.LOOP $label$121:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [84]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$122 }
	$4 = CALL $106($2, $6)
	
.LABEL $label$122
	CALL $154($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$121 }
	
.LABEL $label$120
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$123 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$125 }
	
.LOOP $label$126:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$127 }
	CALL $9($5)
	
.LABEL $label$127
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$126 }
	$4 = *(($2 + [24]))
	goto $label$124 
	
.LABEL $label$125
	$4 = $6
	
.LABEL $label$124
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$123
	if ( ((int_64)$1 > (int_64)-5001621371248181249) ){ goto $label$132 }
	if ( ((int_64)$1 <= (int_64)-8281825045618098177) ){ goto $label$131 }
	if ( ((int_64)$1 > (int_64)-6497942333781180417) ){ goto $label$129 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$132
	if ( ((int_64)$1 <= (int_64)-4157660971118100481) ){ goto $label$130 }
	if ( ((int_64)$1 > (int_64)-2507757988870094849) ){ goto $label$128 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$131
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$130
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$129
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$128
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 != (int_64)7176376055052107776) ){ goto $label$1 }
	
.LABEL $label$28
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)7176376055052107776, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$133 }
	$5 = CALL $336($2, $4)
	
.LOOP $label$134:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [44]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$135 }
	$4 = CALL $336($2, $6)
	
.LABEL $label$135
	CALL $342($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$134 }
	
.LABEL $label$133
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$136 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$138 }
	
.LOOP $label$139:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$140 }
	CALL $9($5)
	
.LABEL $label$140
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$139 }
	$4 = *(($2 + [24]))
	goto $label$137 
	
.LABEL $label$138
	$4 = $6
	
.LABEL $label$137
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$136
	if ( ((int_64)$1 <= (int_64)-5003143671300882433) ){ goto $label$144 }
	if ( ((int_64)$1 <= (int_64)-4227605603803571329) ){ goto $label$143 }
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$141 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$144
	if ( ((int_64)$1 > (int_64)-8281825045618098177) ){ goto $label$142 }
	if ( ((int_64)$1 == (int_64)-8462961772248301568) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$143
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$142
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$141
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$27
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-8462961772248301568, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$145 }
	$5 = CALL $326($2, $4)
	
.LOOP $label$146:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [28]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$147 }
	$4 = CALL $326($2, $6)
	
.LABEL $label$147
	CALL $327($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$146 }
	
.LABEL $label$145
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$148 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$150 }
	
.LOOP $label$151:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$152 }
	CALL $9($5)
	
.LABEL $label$152
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$151 }
	$4 = *(($2 + [24]))
	goto $label$149 
	
.LABEL $label$150
	$4 = $6
	
.LABEL $label$149
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$148
	if ( ((int_64)$1 > (int_64)-5001621371248181249) ){ goto $label$155 }
	if ( ((int_64)$1 > (int_64)-7880044402153918465) ){ goto $label$154 }
	if ( ((int_64)$1 == (int_64)-8462961540019654656) ){ goto $label$26 }
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$155
	if ( ((int_64)$1 > (int_64)-4157660971118100481) ){ goto $label$153 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$154
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$153
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$26
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-8462961540019654656, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$156 }
	$5 = CALL $322($2, $4)
	
.LOOP $label$157:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [72]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$158 }
	$4 = CALL $322($2, $6)
	
.LABEL $label$158
	CALL $355($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$157 }
	
.LABEL $label$156
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$159 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$161 }
	
.LOOP $label$162:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$163 }
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$164 }
	CALL $9(*(($5 + [28])))
	
.LABEL $label$164
	CALL $9($5)
	
.LABEL $label$163
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$162 }
	$4 = *(($2 + [24]))
	goto $label$160 
	
.LABEL $label$161
	$4 = $6
	
.LABEL $label$160
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$159
	if ( ((int_64)$1 <= (int_64)-5001621371248181249) ){ goto $label$167 }
	if ( ((int_64)$1 > (int_64)-4157660971118100481) ){ goto $label$166 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$167
	if ( ((int_64)$1 <= (int_64)-7880044402153918465) ){ goto $label$165 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$166
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$165
	if ( ((int_64)$1 == (int_64)-8462961477395939328) ){ goto $label$25 }
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$25
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-8462961477395939328, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$168 }
	$5 = CALL $356($2, $4)
	
.LOOP $label$169:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [88]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$170 }
	$4 = CALL $356($2, $6)
	
.LABEL $label$170
	CALL $357($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$169 }
	
.LABEL $label$168
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$171 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$173 }
	
.LOOP $label$174:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$175 }
	CALL $9($5)
	
.LABEL $label$175
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$174 }
	$4 = *(($2 + [24]))
	goto $label$172 
	
.LABEL $label$173
	$4 = $6
	
.LABEL $label$172
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$171
	if ( ((int_64)$1 > (int_64)-5001342326447013889) ){ goto $label$177 }
	if ( ((int_64)$1 <= (int_64)-6497942333781180417) ){ goto $label$176 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	goto $label$1 
	
.LABEL $label$177
	if ( ((int_64)$1 <= (int_64)-4157660971118100481) ){ goto $label$23 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$176
	if ( ((int_64)$1 == (int_64)-8281825045618098176) ){ goto $label$24 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$24
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-8281825045618098176, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$178 }
	$5 = CALL $45($2, $4)
	
.LOOP $label$179:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [12]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$180 }
	$4 = CALL $45($2, $6)
	
.LABEL $label$180
	CALL $51($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$179 }
	
.LABEL $label$178
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$181 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$183 }
	
.LOOP $label$184:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$185 }
	CALL $9($5)
	
.LABEL $label$185
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$184 }
	$4 = *(($2 + [24]))
	goto $label$182 
	
.LABEL $label$183
	$4 = $6
	
.LABEL $label$182
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$181
	if ( ((int_64)$1 <= (int_64)-5001342326447013889) ){ goto $label$188 }
	if ( ((int_64)$1 <= (int_64)-4157660971118100481) ){ goto $label$187 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$188
	if ( ((int_64)$1 > (int_64)-5003143671300882433) ){ goto $label$186 }
	if ( ((int_64)$1 == (int_64)-7880044402153918464) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$187
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$186
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$22
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-7880044402153918464, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$189 }
	$5 = CALL $62($2, $4)
	
.LOOP $label$190:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [24]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$191 }
	$4 = CALL $62($2, $6)
	
.LABEL $label$191
	CALL $89($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$190 }
	
.LABEL $label$189
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$192 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$194 }
	
.LOOP $label$195:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$196 }
	CALL $9($5)
	
.LABEL $label$196
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$195 }
	$4 = *(($2 + [24]))
	goto $label$193 
	
.LABEL $label$194
	$4 = $6
	
.LABEL $label$193
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$192
	if ( ((int_64)$1 > (int_64)-4227605603803571329) ){ goto $label$199 }
	if ( ((int_64)$1 > (int_64)-5001621371248181249) ){ goto $label$198 }
	if ( ((int_64)$1 == (int_64)-6497942333781180416) ){ goto $label$21 }
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$199
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$197 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$198
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$197
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$21
	*(($2 + [32])) = [0]
	*(($2 + [38])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)5534162690622095360, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$200 }
	$5 = CALL $295($2, $4)
	
.LOOP $label$201:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [116]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$202 }
	$4 = CALL $295($2, $6)
	
.LABEL $label$202
	CALL $358($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$201 }
	
.LABEL $label$200
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$203 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$205 }
	
.LOOP $label$206:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$207 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$208 }
	CALL $9(*(($5 + [40])))
	
.LABEL $label$208
	CALL $9($5)
	
.LABEL $label$207
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$206 }
	$4 = *(($2 + [24]))
	goto $label$204 
	
.LABEL $label$205
	$4 = $6
	
.LABEL $label$204
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$203
	if ( ((int_64)$1 <= (int_64)-4227605603803571329) ){ goto $label$209 }
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$19 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$209
	if ( ((int_64)$1 == (int_64)-5003143671300882432) ){ goto $label$20 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$20
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-5003143671300882432, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$210 }
	$5 = CALL $184($2, $4)
	
.LOOP $label$211:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [28]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$212 }
	$4 = CALL $184($2, $6)
	
.LABEL $label$212
	CALL $359($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$211 }
	
.LABEL $label$210
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$16 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$18 }
	
.LOOP $label$213:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$214 }
	CALL $9($5)
	
.LABEL $label$214
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$213 }
	$4 = *(($2 + [24]))
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$18
	$4 = $6
	
.LABEL $label$17
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$16
	if ( ((int_64)$1 > (int_64)-4157660971118100481) ){ goto $label$14 }
	if ( ((int_64)$1 == (int_64)-5001621371248181248) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$15
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-5001621371248181248, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$215 }
	$5 = CALL $360($2, $4)
	
.LOOP $label$216:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [28]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$217 }
	$4 = CALL $360($2, $6)
	
.LABEL $label$217
	CALL $361($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$216 }
	
.LABEL $label$215
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$11 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$218:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$219 }
	CALL $9($5)
	
.LABEL $label$219
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$218 }
	$4 = *(($2 + [24]))
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$13
	$4 = $6
	
.LABEL $label$12
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_64)$1 <= (int_64)-4157660971118100481) ){ goto $label$220 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$220
	if ( ((int_64)$1 == (int_64)-5001342326447013888) ){ goto $label$10 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$10
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$221 }
	$5 = CALL $362($2, $4)
	
.LOOP $label$222:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [44]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$223 }
	$4 = CALL $362($2, $6)
	
.LABEL $label$223
	CALL $363($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$222 }
	
.LABEL $label$221
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$224 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$226 }
	
.LOOP $label$227:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$228 }
	CALL $9($5)
	
.LABEL $label$228
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$227 }
	$4 = *(($2 + [24]))
	goto $label$225 
	
.LABEL $label$226
	$4 = $6
	
.LABEL $label$225
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$224
	if ( ((int_64)$1 > (int_64)-4157500428759203841) ){ goto $label$8 }
	if ( ((int_64)$1 == (int_64)-4227605603803571328) ){ goto $label$9 }
	if ( ((int_64)$1 == (int_64)-4157660971118100480) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$9
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-4227605603803571328, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$229 }
	$5 = CALL $87($2, $4)
	
.LOOP $label$230:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [16]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$231 }
	$4 = CALL $87($2, $6)
	
.LABEL $label$231
	CALL $88($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$230 }
	
.LABEL $label$229
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$232:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$233 }
	CALL $9($5)
	
.LABEL $label$233
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$232 }
	$4 = *(($2 + [24]))
	goto $label$6 
	
.LABEL $label$8
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 == (int_64)-4157500428759203840) ){ goto $label$3 }
	if ( ((int_64)$1 != (int_64)-4157660971118100480) ){ goto $label$1 }
	
.LABEL $label$4
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-4157660971118100480, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$234 }
	$5 = CALL $364($2, $4)
	
.LOOP $label$235:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [40]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$236 }
	$4 = CALL $364($2, $6)
	
.LABEL $label$236
	CALL $365($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$235 }
	
.LABEL $label$234
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$237 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$239 }
	
.LOOP $label$240:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$241 }
	CALL $9($5)
	
.LABEL $label$241
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$240 }
	$4 = *(($2 + [24]))
	goto $label$238 
	
.LABEL $label$239
	$4 = $6
	
.LABEL $label$238
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$237
	if ( ((int_64)$1 == (int_64)-2507757988870094848) ){ goto $label$2 }
	if ( ((int_64)$1 != (int_64)-4157500428759203840) ){ goto $label$1 }
	
.LABEL $label$3
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$242 }
	$5 = CALL $67($2, $4)
	
.LOOP $label$243:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [32]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$244 }
	$4 = CALL $67($2, $6)
	
.LABEL $label$244
	CALL $366($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$243 }
	
.LABEL $label$242
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$245 }
	$7 = ($2 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$247 }
	
.LOOP $label$248:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$249 }
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$250 }
	CALL $9(*(($5 + [24])))
	
.LABEL $label$250
	CALL $9($5)
	
.LABEL $label$249
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$248 }
	$4 = *(($2 + [24]))
	goto $label$246 
	
.LABEL $label$247
	$4 = $6
	
.LABEL $label$246
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$245
	if ( ((int_64)$1 != (int_64)-2507757988870094848) ){ goto $label$1 }
	
.LABEL $label$2
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [36]) = [0]
	$1 = *($0)
	*($2) = $1
	*($2 + [8]) = $1
	*($2 + [24]) = (int_64)0
	$4 = CALL db_lowerbound_i64($1, $1, (int_64)-2507757988870094848, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$251 }
	$5 = CALL $189($2, $4)
	
.LOOP $label$252:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [68]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$253 }
	$4 = CALL $189($2, $6)
	
.LABEL $label$253
	CALL $367($2, $5)
	$5 = $4
	if ( $4 ){ goto $label$252 }
	
.LABEL $label$251
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	$0 = ($2 + [28])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$255 }
	
.LOOP $label$256:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$257 }
	CALL $9($5)
	
.LABEL $label$257
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$256 }
	$4 = *(($2 + [24]))
	goto $label$254 
	
.LABEL $label$255
	$4 = $6
	
.LABEL $label$254
	*($0) = $6
	CALL $9($4)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [32])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [32])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [40]))
}

int_32 .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [32]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [25])
	*($3 + [60]) = ($5 + [26])
	CALL $566(($3 + [40]), ($3 + [32]))
	*($5 + [36]) = $1
	*($5 + [40 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $246(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [44]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $527 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $528(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $573 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $601 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [120])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [128])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $415(*($1), ($3 + [136]))
	$2 = ($3 + [152])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [160])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $545 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [13]) = ((int_32)*(*($0) + [44]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [13]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [52]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [14]) = ((int_32)*($0 + [56]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	*($2 + [8]) = $0
	CALL $546(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $526 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $525 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), *($0 + [8]))
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $526(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $31(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [16]) = *(*(*($5 + [4]) + [4]) + [16])
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $524 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [16]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $23 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $16(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $25 (int_32 $0)
{
}

int_64 .FUNC $24 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

int_32 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [64])
	$global$0 = $1
	*(($1 + [56])) = [0]
	*($1 + [40]) = (int_64)-1
	*($1 + [48]) = (int_64)0
	$2 = *($0)
	*($1 + [24]) = $2
	*($1 + [32]) = $2
	*($1 + [8]) = [11961]
	*($1 + [12]) = CALL $15([11961])
	*($1) = *($1 + [8])
	CALL $32(($1 + [16]), $1)
	$0 = CALL $33(($1 + [24]), CALL $fimport$2($2, $2, (int_64)4982871467403247616, (int_64)4983117962670380176))
	if ( ((int_32)*($0 + [36]) == (int_32)($1 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$1
	$2 = *($0 + [8])
	$3 = *($1 + [48])
	if ( ($3 == 0) ){ goto $label$2 }
	$4 = ($1 + [52])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($5 + [32])))
	
.LABEL $label$7
	CALL $9($5)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($1 + [48]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($4) = $3
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($1 + [64])
	return (int_64)($2 == 0)
}

void .FUNC $26 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391462070956704) ){ goto $label$2 }
	CALL eosio_assert([0], [8312])
	
.LABEL $label$2
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$7 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8364])
	
.LABEL $label$3
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$4 = [0]
	$7 = $6
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$7 = $8
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$12 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8384])
	
.LABEL $label$8
	if ( ((int_64)$11 > (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [8399])
	
.LABEL $label$13
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	if ( ((int_32)*(CALL $29(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$15 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$15
	CALL eosio_assert([0], [8427])
	
.LABEL $label$14
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$16
	*(($4 = CALL $7([56]))) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $30(($3 + [112]), ($3 + [104]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $8, $7), ($3 + [48]), [40]
	*($4 + [44]) = $10)
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$17 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$17
	*($3 + [112]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $7)
	*($3 + [88]) = $10
	$0 = ($3 + [36])
	$9 = *($0)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$20 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [112]) = [0]
	*($9) = $4
	*($0) = ($9 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $31(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $9($4)
	
.LABEL $label$18
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$21 }
	$0 = ($3 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $9($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($3 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $10
	
.LABEL $label$22
	*($0) = $10
	CALL $9($4)
	
.LABEL $label$21
	$global$0 = ($3 + [128])
}

void .FUNC $329 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-8462961772248301568, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $326($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)-8462961772248301568, $6))
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [32])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $328 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [288])
	$global$0 = $4
	*($4 + [248]) = $1
	*($4 + [256]) = $2
	CALL require_auth($2)
	if ( (CALL $42($0, $2) == 0) ){ goto $label$1 }
	CALL eosio_assert([0], [8923])
	
.LABEL $label$1
	if ( CALL $27($0) ){ goto $label$2 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$2
	$5 = [0]
	*(($4 + [240])) = [0]
	*($4 + [224]) = (int_64)-1
	*($4 + [232]) = (int_64)0
	*($4 + [244]) = [0]
	$2 = *($0)
	*($4 + [208]) = $2
	*($4 + [216]) = $2
	$6 = CALL db_find_i64($2, $2, (int_64)-8462961540019654656, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $322(($4 + [208]), $6)
	if ( ((int_32)*($5 + [68]) == (int_32)($4 + [208])) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [11535])
	
.LABEL $label$3
	if ( ((int_64)*(($5 + [40])) != (int_64)*($3 + [8])) ){ goto $label$11 }
	$2 = *($3)
	if ( ((int_64)*($5 + [32]) < (int_64)$2) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [13053])
	$2 = *($3)
	if ( ((int_64)*($5 + [32]) >= (int_64)$2) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [11600])
	if ( ((int_64)*($5 + [48]) >= (int_64)*($3)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)*($5 + [48]) < (int_64)$2) ){ goto $label$7 }
	
.LABEL $label$8
	if ( CALL $28($0, (int_64)6110391466682881056) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [11653])
	if ( CALL $28($0, (int_64)6110391466682881056) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [11700])
	
.LABEL $label$5
	*($4 + [200]) = *($5 + [8])
	*($4 + [199]) = *($5 + [64])
	*($4 + [198]) = *($5 + [65])
	*($4 + [197]) = *($5 + [66])
	*($4 + [196]) = *($5 + [67])
	if ( ((int_32)*($5 + [16]) != (int_32)*($0 + [88])) ){ goto $label$16 }
	*(($4 + [184])) = [0]
	*($4 + [168]) = (int_64)-1
	*($4 + [176]) = (int_64)0
	*($4 + [188]) = [0]
	$2 = *($0)
	*($4 + [152]) = $2
	*($4 + [160]) = $2
	*($4 + [272]) = ($4 + [152])
	CALL $329(($4 + [112]), ($4 + [272]), ($4 + [248]))
	$6 = *($4 + [116])
	if ( ($6 == 0) ){ goto $label$15 }
	if ( ((int_64)*($4 + [248]) != (int_64)*($6 + [8])) ){ goto $label$15 }
	$2 = *($4 + [112])
	*($4 + [96]) = $2
	$6 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($6) == 0) ){ goto $label$14 }
	
.LOOP $label$17:
	if ( ((int_64)*($6 + [8]) != (int_64)*($4 + [248])) ){ goto $label$14 }
	CALL $330(($4 + [96]))
	$6 = *($4 + [100])
	if ( $6 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], [11745])
	*($4 + [152]) = $3
	if ( $5 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$15
	*($4 + [100]) = [0]
	*($4 + [96]) = ($4 + [272])
	
.LABEL $label$14
	$7 = *($4 + [176])
	if ( ($7 == 0) ){ goto $label$18 }
	$8 = ($4 + [180])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$22 }
	CALL $9($9)
	
.LABEL $label$22
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$21 }
	$6 = *(($4 + [176]))
	goto $label$19 
	
.LABEL $label$20
	$6 = $7
	
.LABEL $label$19
	*($8) = $7
	CALL $9($6)
	
.LABEL $label$18
	*($4 + [152]) = $3
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [12129])
	
.LABEL $label$12
	CALL $331(($4 + [208]), $5, ($4 + [152]))
	*(($5 = ($4 + [184]))) = [0]
	*($4 + [168]) = (int_64)-1
	*($4 + [176]) = (int_64)0
	*($4 + [188]) = [0]
	$2 = *($0)
	*($4 + [152]) = $2
	*($4 + [160]) = $2
	$2 = *($4 + [256])
	*($4 + [120]) = $0
	*($4 + [132]) = $3
	*($4 + [116]) = ($4 + [248])
	*($4 + [112]) = ($4 + [152])
	*($4 + [124]) = ($4 + [200])
	*($4 + [128]) = ($4 + [256])
	*($4 + [136]) = ($4 + [199])
	*($4 + [140]) = ($4 + [198])
	*($4 + [144]) = ($4 + [197])
	*($4 + [148]) = ($4 + [196])
	*($4 + [272]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [152])) ){ goto $label$23 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$23
	*($4 + [100]) = ($4 + [112])
	*($4 + [96]) = ($4 + [152])
	*($4 + [104]) = ($4 + [272])
	*(($6 = CALL $7([104])) + [32]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [84]) = ($4 + [152])
	CALL $332(($4 + [96]), $6)
	*($4 + [264]) = $6
	$2 = *($6)
	*($4 + [96]) = $2
	$7 = *($6 + [88])
	*($4 + [284]) = $7
	$8 = ($4 + [180])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*($5)) ){ goto $label$26 }
	*($9 + [8]) = $2
	*($9 + [16]) = $7
	*($4 + [264]) = [0]
	*($9) = $6
	*($8) = ($9 + [24])
	$6 = *($4 + [264])
	*($4 + [264]) = [0]
	if ( $6 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $333(($4 + [176]), ($4 + [264]), ($4 + [96]), ($4 + [284]))
	$6 = *($4 + [264])
	*($4 + [264]) = [0]
	if ( ($6 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL $9($6)
	
.LABEL $label$24
	$2 = *($0)
	*($4 + [104]) = (int_64)3617214756542218240
	*($4 + [96]) = $2
	*((($6 = CALL $7([16])) + [8])) = *($4 + [104])
	*($6) = *($4 + [96])
	*(($9 = (($4 + [264]) + [4]))) = *((($4 + [90]) + [4]))
	*(($5 = ($4 + [134]))) = *($9)
	*((($4 + [48]) + [8])) = (int_64)1
	*($4 + [128]) = [1]
	$7 = *($4 + [90 align=2])
	*($4 + [130 align=2]) = $7
	*((($4 + [48]) + [16])) = *($4 + [128])
	*($4 + [272]) = $6
	$6 = ($6 + [16])
	*($4 + [276]) = $6
	*($4 + [280]) = $6
	*($4 + [112]) = (int_64)-8462961461681543280
	*($4 + [120]) = (int_64)1
	*($4 + [48]) = (int_64)-8462961461681543280
	*($4 + [264]) = $7
	CALL $206($2, (int_64)-4420674027266244608, ($4 + [272]), ($4 + [48]))
	$6 = *($4 + [272])
	if ( ($6 == 0) ){ goto $label$27 }
	*($4 + [276]) = $6
	CALL $9($6)
	
.LABEL $label$27
	$2 = *($0)
	*($4 + [104]) = (int_64)3617214756542218240
	*($4 + [96]) = $2
	*((($6 = CALL $7([16])) + [8])) = *($4 + [104])
	*($6) = *($4 + [96])
	$1 = *($3)
	*($9) = *((($4 + [84]) + [4]))
	*($5) = *($9)
	*((($4 + [24]) + [8])) = $1
	*($4 + [128]) = [1]
	$9 = *($4 + [84 align=2])
	*($4 + [130 align=2]) = $9
	*((($4 + [24]) + [16])) = *($4 + [128])
	*($4 + [272]) = $6
	$6 = ($6 + [16])
	*($4 + [276]) = $6
	*($4 + [280]) = $6
	*($4 + [112]) = (int_64)-8462961719032781216
	*($4 + [120]) = $1
	*($4 + [24]) = (int_64)-8462961719032781216
	*($4 + [264]) = $9
	CALL $206($2, (int_64)-4420674027266244608, ($4 + [272]), ($4 + [24]))
	$6 = *($4 + [272])
	if ( ($6 == 0) ){ goto $label$28 }
	*($4 + [276]) = $6
	CALL $9($6)
	
.LABEL $label$28
	$2 = *($0)
	*($4 + [104]) = (int_64)3617214756542218240
	*($4 + [96]) = $2
	*((($6 = CALL $7([16])) + [8])) = *($4 + [104])
	*($6) = *($4 + [96])
	$1 = *($4 + [199])
	*(($9 = (($4 + [264]) + [4]))) = *((($4 + [78]) + [4]))
	*(($4 + [134])) = *($9)
	*(($4 + [8])) = $1
	*($4 + [128]) = [1]
	$9 = *($4 + [78 align=2])
	*($4 + [130 align=2]) = $9
	*(($4 + [16])) = *($4 + [128])
	*($4 + [272]) = $6
	$6 = ($6 + [16])
	*($4 + [276]) = $6
	*($4 + [280]) = $6
	*($4 + [112]) = (int_64)-8462959357337102976
	*($4 + [120]) = $1
	*($4) = (int_64)-8462959357337102976
	*($4 + [264]) = $9
	CALL $206($2, (int_64)-4420674027266244608, ($4 + [272]), $4)
	$6 = *($4 + [272])
	if ( ($6 == 0) ){ goto $label$29 }
	*($4 + [276]) = $6
	CALL $9($6)
	
.LABEL $label$29
	$5 = *($4 + [176])
	if ( ($5 == 0) ){ goto $label$30 }
	$0 = ($4 + [180])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$32 }
	
.LOOP $label$33:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$34 }
	CALL $9($9)
	
.LABEL $label$34
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$33 }
	$6 = *(($4 + [176]))
	goto $label$31 
	
.LABEL $label$32
	$6 = $5
	
.LABEL $label$31
	*($0) = $5
	CALL $9($6)
	
.LABEL $label$30
	$5 = *($4 + [232])
	if ( ($5 == 0) ){ goto $label$35 }
	$0 = (($4 + [208]) + [28])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$37 }
	
.LOOP $label$38:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$39 }
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$40 }
	CALL $9(*(($9 + [28])))
	
.LABEL $label$40
	CALL $9($9)
	
.LABEL $label$39
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$38 }
	$6 = *(($4 + [232]))
	goto $label$36 
	
.LABEL $label$37
	$6 = $5
	
.LABEL $label$36
	*($0) = $5
	CALL $9($6)
	
.LABEL $label$35
	$global$0 = ($4 + [288])
}

void .FUNC $544 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [20]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	$0 = *($0)
	*($2 + [15]) = ((int_32)*($0 + [24]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$5 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	*($2 + [8]) = $0
	CALL $545(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $521 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $193 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [304])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $160($0, $2) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
	$5 = CALL $56($0, (int_64)5094026183813278864)
	$6 = CALL $56($0, (int_64)-3792729948836422512)
	$7 = [0]
	*(($4 + [232])) = [0]
	*($4 + [216]) = (int_64)-1
	*($4 + [224]) = (int_64)0
	$1 = *($0)
	*($4 + [200]) = $1
	*($4 + [208]) = $1
	*($4 + [192]) = [10063]
	*($4 + [196]) = CALL $15([10063])
	*($4 + [8]) = *($4 + [192])
	CALL $32(($4 + [240]), ($4 + [8]))
	$9 = *(($4 + [228]))
	$8 = *($4 + [224])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)5937543767441188496) ){ goto $label$4 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($11 + [36]) == (int_32)($4 + [200])) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$7 = $11
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL db_find_i64(*($4 + [200]), *(($4 + [208])), (int_64)4982871467403247616, (int_64)5937543767441188496)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $33(($4 + [200]), $10)
	if ( ((int_32)*($7 + [36]) == (int_32)($4 + [200])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$12 = *($7 + [16])
	*(($4 + [184])) = [0]
	*($4 + [168]) = (int_64)-1
	*($4 + [176]) = (int_64)0
	$1 = *($0)
	*($4 + [152]) = $1
	*($4 + [160]) = $1
	$10 = CALL db_find_i64($1, $1, (int_64)5094023804032647168, $3)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $182(($4 + [152]), $10)
	if ( ((int_32)*($10 + [172]) == (int_32)($4 + [152])) ){ goto $label$9 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$9
	*($4 + [148]) = $10
	*($4 + [144]) = ($4 + [152])
	goto $label$7 
	
.LABEL $label$8
	*($4 + [148]) = [0]
	*($4 + [144]) = ($4 + [152])
	CALL eosio_assert([0], [10076])
	$10 = *($4 + [148])
	
.LABEL $label$7
	if ( ((uint_64)((int_64)*($10 + [169]) + (int_64)1) >= (uint_64)$5) ){ goto $label$16 }
	$1 = *($0)
	if ( $10 ){ goto $label$17 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$17
	CALL $194(($4 + [152]), $10, $1)
	*(($4 + [272])) = [0]
	*($4 + [256]) = (int_64)-1
	*($4 + [264]) = (int_64)0
	*($4 + [276]) = [0]
	$1 = *($0)
	*($4 + [240]) = $1
	*($4 + [248]) = $1
	$10 = CALL db_find_i64($1, $1, (int_64)-5003143671300882432, $3)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$10 = CALL $184(($4 + [240]), $10)
	if ( ((int_32)*($10 + [24]) == (int_32)($4 + [240])) ){ goto $label$18 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$18
	if ( ((int_64)*($10 + [16]) != (int_64)$2) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	$7 = *($10 + [16])
	if ( ((int_32)$7 != (int_32)*($0 + [79])) ){ goto $label$19 }
	if ( ((int_32)*($10 + [32]) != (int_32)((CASTING uint_32)(uint_64 $6) & [255])) ){ goto $label$19 }
	$2 = *($10 + [24])
	*(($8 = (($4 + [16]) + [8]))) = *(($10 + [48]))
	*($4 + [16]) = *($10 + [40])
	$9 = CALL $18(($4 + [128]), ($10 + [56]))
	$1 = *($0)
	*($4 + [120]) = (int_64)3617214756542218240
	*($4 + [112]) = $12
	*((($10 = CALL $7([16])) + [8])) = *($4 + [120])
	*($10) = *($4 + [112])
	*(($11 = (($4 + [64]) + [24]))) = *($8)
	*($4 + [64]) = $12
	*($4 + [72]) = $2
	*($4 + [80]) = *($4 + [16])
	CALL $18(($4 + [96]), $9)
	*((($4 + [240]) + [24])) = *($11)
	$8 = (($4 + [64]) + [40])
	*(($11 = (($4 + [240]) + [40]))) = *($8)
	*($8) = [0]
	$8 = ($10 + [16])
	*($4 + [292]) = $8
	*($4 + [288]) = $10
	*($4 + [296]) = $8
	*($4 + [240]) = *($4 + [64])
	*($4 + [248]) = *($4 + [72])
	*($4 + [256]) = *($4 + [80])
	*($4 + [272]) = *($4 + [96])
	*($4 + [96]) = (int_64)0
	CALL $37($1, (int_64)-3617168760277827584, ($4 + [288]), ($4 + [240]))
	if ( ((*($4 + [272]) & [1]) == 0) ){ goto $label$20 }
	CALL $9(*($11))
	
.LABEL $label$20
	$10 = *($4 + [288])
	if ( ($10 == 0) ){ goto $label$21 }
	*($4 + [292]) = $10
	CALL $9($10)
	
.LABEL $label$21
	if ( ((*(($4 + [96])) & [1]) == 0) ){ goto $label$22 }
	CALL $9(*(($4 + [104])))
	
.LABEL $label$22
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($9 + [8]))
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)*($0 + [80])) ){ goto $label$23 }
	$1 = *(*($4 + [148]) + [160])
	$10 = [0]
	*(($4 + [272])) = [0]
	*($4 + [256]) = (int_64)-1
	*($4 + [264]) = (int_64)0
	$2 = *($0)
	*($4 + [240]) = $2
	*($4 + [248]) = $2
	$9 = CALL db_find_i64($2, $2, (int_64)5937556069193265024, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$25 }
	$10 = CALL $74(($4 + [240]), $9)
	if ( ((int_32)*($10 + [216]) == (int_32)($4 + [240])) ){ goto $label$26 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$26
	*($4 + [16]) = ($4 + [144])
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [10101])
	*($4 + [16]) = ($4 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$24
	CALL $195(($4 + [240]), $10, ($4 + [16]))
	$10 = [0]
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = [0]
	$2 = *($0)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	$9 = CALL db_find_i64($2, $2, (int_64)-7880044402153918464, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	$10 = CALL $62(($4 + [16]), $9)
	if ( ((int_32)*($10 + [20]) == (int_32)($4 + [16])) ){ goto $label$29 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$29
	*($4 + [112]) = ($4 + [144])
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [10152])
	*($4 + [112]) = ($4 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$27
	CALL $196(($4 + [16]), $10, ($4 + [112]))
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$30 }
	$11 = ($4 + [44])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$32 }
	
.LOOP $label$33:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$34 }
	CALL $9($9)
	
.LABEL $label$34
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$33 }
	$10 = *(($4 + [40]))
	goto $label$31 
	
.LABEL $label$32
	$10 = $8
	
.LABEL $label$31
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$30
	$8 = *($4 + [264])
	if ( ($8 == 0) ){ goto $label$23 }
	$11 = ($4 + [268])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$36 }
	
.LOOP $label$37:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$38 }
	CALL $9($9)
	
.LABEL $label$38
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$37 }
	$10 = *(($4 + [264]))
	goto $label$35 
	
.LABEL $label$36
	$10 = $8
	
.LABEL $label$35
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$23
	if ( ((int_32)$7 != (int_32)*($0 + [81])) ){ goto $label$39 }
	$2 = *(*($4 + [148]) + [104])
	$9 = *(($4 + [228]))
	$11 = *(($4 + [224]))
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$43 }
	
.LOOP $label$45:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$44 }
	$9 = $10
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$43 }
	if ( ((int_32)*($8 + [36]) == (int_32)($4 + [200])) ){ goto $label$46 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$46
	if ( $8 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$10 = CALL db_find_i64(*($4 + [200]), *(($4 + [208])), (int_64)4982871467403247616, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$41 }
	$8 = CALL $33(($4 + [200]), $10)
	if ( ((int_32)*($8 + [36]) == (int_32)($4 + [200])) ){ goto $label$42 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$42
	*($4 + [240]) = ($4 + [144])
	goto $label$40 
	
.LABEL $label$41
	$8 = [0]
	CALL eosio_assert([0], [10203])
	*($4 + [240]) = ($4 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$40
	CALL $197(($4 + [200]), $8, ($4 + [240]))
	
.LABEL $label$39
	if ( ((int_32)$7 != (int_32)*($0 + [82])) ){ goto $label$47 }
	$1 = *(*($4 + [148]) + [72])
	$10 = [0]
	*(($4 + [272])) = [0]
	*($4 + [256]) = (int_64)-1
	*($4 + [264]) = (int_64)0
	$2 = *($0)
	*($4 + [240]) = $2
	*($4 + [248]) = $2
	$9 = CALL db_find_i64($2, $2, (int_64)-4157500428759203840, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$49 }
	$10 = CALL $67(($4 + [240]), $9)
	if ( ((int_32)*($10 + [28]) == (int_32)($4 + [240])) ){ goto $label$50 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$50
	*($4 + [16]) = ($4 + [144])
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [10239])
	*($4 + [16]) = ($4 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$48
	CALL $198(($4 + [240]), $10, ($4 + [16]))
	$8 = *($4 + [264])
	if ( ($8 == 0) ){ goto $label$47 }
	$11 = ($4 + [268])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$52 }
	
.LOOP $label$53:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$54 }
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$55 }
	CALL $9(*(($9 + [24])))
	
.LABEL $label$55
	CALL $9($9)
	
.LABEL $label$54
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$53 }
	$10 = *(($4 + [264]))
	goto $label$51 
	
.LABEL $label$52
	$10 = $8
	
.LABEL $label$51
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$47
	if ( ((int_32)$7 != (int_32)*($0 + [83])) ){ goto $label$12 }
	$1 = *(*($4 + [148]) + [144])
	$10 = [0]
	*(($4 + [272])) = [0]
	*($4 + [256]) = (int_64)-1
	*($4 + [264]) = (int_64)0
	*($4 + [276]) = [0]
	$2 = *($0)
	*($4 + [240]) = $2
	*($4 + [248]) = $2
	$9 = CALL db_find_i64($2, $2, (int_64)-2507757988870094848, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$57 }
	$10 = CALL $189(($4 + [240]), $9)
	if ( ((int_32)*($10 + [64]) == (int_32)($4 + [240])) ){ goto $label$58 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$58
	*($4 + [16]) = ($4 + [144])
	goto $label$56 
	
.LABEL $label$57
	CALL eosio_assert([0], [10278])
	*($4 + [16]) = ($4 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$56
	CALL $199(($4 + [240]), $10, ($4 + [16]))
	$8 = *($4 + [264])
	if ( ($8 == 0) ){ goto $label$11 }
	$0 = ($4 + [268])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$60 }
	
.LOOP $label$61:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$62 }
	CALL $9($9)
	
.LABEL $label$62
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$61 }
	$10 = *(($4 + [264]))
	goto $label$59 
	
.LABEL $label$60
	$10 = $8
	
.LABEL $label$59
	*($0) = $8
	CALL $9($10)
	$13 = [18]
	goto $label$10 
	
.LABEL $label$15
	$13 = [2]
	goto $label$10 
	
.LABEL $label$14
	$13 = [0]
	goto $label$10 
	
.LABEL $label$13
	$13 = [3]
	goto $label$10 
	
.LABEL $label$12
	$13 = [18]
	goto $label$10 
	
.LABEL $label$11
	$13 = [18]
	
.LABEL $label$10
	
.LOOP $label$63:
	goto $label$113 
	
.LABEL $label$115
	$10 = CALL $184(($4 + [240]), $10)
	if ( ((int_64)*($10 + [16]) != (int_64)$2) ){ goto $label$82 }
	$13 = [2]
	goto $label$63 
	
.LABEL $label$114
	CALL eosio_assert([0], [10320])
	$13 = [0]
	goto $label$63 
	
.LABEL $label$113
	$10 = CALL db_next_i64(*($10 + [28]), ($4 + [16]))
	if ( ((int_32)$10 >= (int_32)[0]) ){ goto $label$83 }
	$13 = [3]
	goto $label$63 
	
.LABEL $label$112
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [240])) ){ goto $label$81 }
	$13 = [4]
	goto $label$63 
	
.LABEL $label$111
	CALL eosio_assert([0], [12072])
	$13 = [5]
	goto $label$63 
	
.LABEL $label$110
	*(($10 = CALL $7([40])) + [24]) = ($4 + [240])
	*($10 + [16]) = $2
	*($10 + [8]) = $3
	*($4 + [296]) = (($4 + [16]) + [24])
	*($4 + [292]) = ($4 + [16])
	*($4 + [288]) = ($4 + [16])
	*($4 + [128]) = ($4 + [288])
	$9 = ($10 + [8])
	*($4 + [116]) = $9
	*($4 + [112]) = $10
	*($4 + [120]) = ($10 + [16])
	CALL $191(($4 + [112]), ($4 + [128]))
	$1 = *($10)
	$8 = (($4 + [240]) + [8])
	*($10 + [28]) = CALL db_store_i64(*($8), (int_64)-5003143671300882432, $2, $1, ($4 + [16]), [24])
	$0 = (($4 + [240]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$80 }
	$13 = [6]
	goto $label$63 
	
.LABEL $label$109
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$13 = [7]
	goto $label$63 
	
.LABEL $label$108
	$1 = *($10)
	$3 = *($8)
	*($4 + [112]) = *($9)
	*($10 + [32]) = CALL db_idx64_store($3, (int_64)-5003143671300882432, $2, $1, ($4 + [112]))
	*($4 + [112]) = $10
	$2 = *($10)
	*($4 + [16]) = $2
	$8 = *(($10 + [28]))
	*($4 + [288]) = $8
	$0 = (($4 + [240]) + [28])
	$9 = *($0)
	if ( ((uint_32)$9 >= (uint_32)*(($4 + [272]))) ){ goto $label$79 }
	$13 = [31]
	goto $label$63 
	
.LABEL $label$107
	*($9 + [8]) = $2
	*($9 + [16]) = $8
	*($4 + [112]) = [0]
	*($9) = $10
	*($0) = ($9 + [24])
	$10 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( $10 ){ goto $label$76 }
	goto $label$77 
	
.LABEL $label$106
	CALL $192(($4 + [264]), ($4 + [112]), ($4 + [16]), ($4 + [288]))
	$10 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( ($10 == 0) ){ goto $label$78 }
	$13 = [9]
	goto $label$63 
	
.LABEL $label$105
	CALL $9($10)
	$13 = [10]
	goto $label$63 
	
.LABEL $label$104
	$8 = *($4 + [264])
	if ( ($8 == 0) ){ goto $label$75 }
	$13 = [11]
	goto $label$63 
	
.LABEL $label$103
	$0 = ($4 + [268])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$74 }
	$13 = [12]
	goto $label$63 
	
.LABEL $label$102
	$13 = [13]
	goto $label$63 
	
.LABEL $label$101
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$72 }
	$13 = [14]
	goto $label$63 
	
.LABEL $label$100
	CALL $9($9)
	$13 = [15]
	goto $label$63 
	
.LABEL $label$99
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$73 }
	$13 = [16]
	goto $label$63 
	
.LABEL $label$98
	$10 = *(($4 + [264]))
	goto $label$71 
	
.LABEL $label$97
	$10 = $8
	$13 = [17]
	goto $label$63 
	
.LABEL $label$96
	*($0) = $8
	CALL $9($10)
	goto $label$70 
	
.LABEL $label$95
	CALL $176(($4 + [176]))
	$8 = *($4 + [224])
	if ( ($8 == 0) ){ goto $label$69 }
	$13 = [19]
	goto $label$63 
	
.LABEL $label$94
	$0 = ($4 + [228])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$68 }
	$13 = [20]
	goto $label$63 
	
.LABEL $label$93
	$13 = [21]
	goto $label$63 
	
.LABEL $label$92
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$66 }
	$13 = [22]
	goto $label$63 
	
.LABEL $label$91
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$65 }
	$13 = [23]
	goto $label$63 
	
.LABEL $label$90
	CALL $9(*(($9 + [32])))
	$13 = [24]
	goto $label$63 
	
.LABEL $label$89
	CALL $9($9)
	$13 = [25]
	goto $label$63 
	
.LABEL $label$88
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$67 }
	$13 = [26]
	goto $label$63 
	
.LABEL $label$87
	$10 = *(($4 + [224]))
	goto $label$64 
	
.LABEL $label$86
	$10 = $8
	$13 = [27]
	goto $label$63 
	
.LABEL $label$85
	*($0) = $8
	CALL $9($10)
	$13 = [28]
	goto $label$63 
	
.LABEL $label$84
	$global$0 = ($4 + [304])
	return 
	
.LABEL $label$83
	$13 = [1]
	goto $label$63 
	
.LABEL $label$82
	$13 = [0]
	goto $label$63 
	
.LABEL $label$81
	$13 = [5]
	goto $label$63 
	
.LABEL $label$80
	$13 = [7]
	goto $label$63 
	
.LABEL $label$79
	$13 = [8]
	goto $label$63 
	
.LABEL $label$78
	$13 = [10]
	goto $label$63 
	
.LABEL $label$77
	$13 = [10]
	goto $label$63 
	
.LABEL $label$76
	$13 = [9]
	goto $label$63 
	
.LABEL $label$75
	$13 = [18]
	goto $label$63 
	
.LABEL $label$74
	$13 = [30]
	goto $label$63 
	
.LABEL $label$73
	$13 = [13]
	goto $label$63 
	
.LABEL $label$72
	$13 = [15]
	goto $label$63 
	
.LABEL $label$71
	$13 = [17]
	goto $label$63 
	
.LABEL $label$70
	$13 = [18]
	goto $label$63 
	
.LABEL $label$69
	$13 = [28]
	goto $label$63 
	
.LABEL $label$68
	$13 = [29]
	goto $label$63 
	
.LABEL $label$67
	$13 = [21]
	goto $label$63 
	
.LABEL $label$66
	$13 = [25]
	goto $label$63 
	
.LABEL $label$65
	$13 = [24]
	goto $label$63 
	
.LABEL $label$64
	$13 = [27]
	goto $label$63 
	$13
}

void .FUNC $470 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [168])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [168])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [167]), $5, [1])
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [17])
	if ( ((uint_32)($4 + [-17]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [25])
	if ( ((int_32)$4 != (int_32)[25]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [143]), $5, [1])
	$5 = ($2 + [26])
	if ( ((int_32)$4 != (int_32)[26]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [142]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [27])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $61($3, *($3 + [168]), *($3 + [167]), *($3 + [152]), *($3 + [144]), *($3 + [143]), *($3 + [142]))
	$global$0 = ($3 + [176])
}

void .FUNC $321 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [160])
	$global$0 = $4
	*($4 + [104]) = $1
	*($4 + [112]) = $3
	CALL require_auth($2)
	if ( (CALL $28($0, (int_64)6110391466682881040) == 0) ){ goto $label$5 }
	if ( (CALL $27($0) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [11473])
	if ( CALL $27($0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8257])
	if ( CALL $42($0, $2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (CALL $42($0, $2) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8923])
	
.LABEL $label$1
	*(($4 + [96])) = [0]
	*($4 + [80]) = (int_64)-1
	*($4 + [88]) = (int_64)0
	*($4 + [100]) = [0]
	$3 = *($0)
	*($4 + [64]) = $3
	*($4 + [72]) = $3
	$5 = CALL db_find_i64($3, $3, (int_64)-8462961540019654656, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $322(($4 + [64]), $5)
	if ( ((int_32)*($5 + [68]) == (int_32)($4 + [64])) ){ goto $label$7 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$7
	if ( ((int_64)*($5 + [8]) == (int_64)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [11557])
	
.LABEL $label$8
	*(($6 = ($4 + [56]))) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	*($4 + [60]) = [0]
	$3 = *($0)
	*($4 + [24]) = $3
	*($4 + [32]) = $3
	*($4 + [12]) = ($4 + [104])
	*($4 + [8]) = ($4 + [24])
	*($4 + [16]) = ($4 + [112])
	*($4 + [152]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [24])) ){ goto $label$9 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$9
	*($4 + [132]) = ($4 + [8])
	*($4 + [128]) = ($4 + [24])
	*($4 + [136]) = ($4 + [152])
	*(($0 = CALL $7([40])) + [16]) = (int_64)0
	*($0 + [24]) = ($4 + [24])
	CALL $323(($4 + [128]), $0)
	*($4 + [144]) = $0
	$2 = *($0)
	*($4 + [128]) = $2
	$7 = *($0 + [28])
	*($4 + [124]) = $7
	$8 = ($4 + [52])
	$5 = *($8)
	if ( ((uint_32)$5 >= (uint_32)*($6)) ){ goto $label$12 }
	*($5 + [8]) = $2
	*($5 + [16]) = $7
	*($4 + [144]) = [0]
	*($5) = $0
	*($8) = ($5 + [24])
	$0 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( $0 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $324(($4 + [48]), ($4 + [144]), ($4 + [128]), ($4 + [124]))
	$0 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9($0)
	
.LABEL $label$10
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$13 }
	$7 = ($4 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$17 }
	CALL $9($5)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($4 + [48]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $6
	
.LABEL $label$14
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$13
	$6 = *($4 + [88])
	if ( ($6 == 0) ){ goto $label$18 }
	$7 = (($4 + [64]) + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($5 + [28])))
	
.LABEL $label$23
	CALL $9($5)
	
.LABEL $label$22
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($4 + [88]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $6
	
.LABEL $label$19
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$18
	$global$0 = ($4 + [160])
	return (unreachable)
	
.LABEL $label$6
	CALL eosio_assert([0], [11535])
}

void .FUNC $320 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [28])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-8462961772248301568, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $326($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $577(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	$2 = $2
	$6 = ($2 + [-32])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	$5 = ($1 + [16])
	*($3 + [40]) = $5
	CALL $578(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)-8462961772248301568, *(*($0 + [8])), $7, $6, [24])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$4 = ($4 + [8])
	$7 = *($4)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [32]) = CALL db_idx64_store($7, (int_64)-8462961772248301568, $9, $10, ($3 + [32]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [32]) = *($5)
	*(($1 + [36])) = CALL db_idx64_store($9, (int_64)-8462961772248301567, $7, $10, ($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([80])) + [8]) = (int_64)0
	*($5 + [20 align=4]) = (int_64)0
	*($5 + [28]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [20])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [48])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [65])
	*($3 + [72]) = ($5 + [66])
	*($3 + [76]) = ($5 + [67])
	CALL $576(($3 + [40]), ($3 + [32]))
	*($5 + [76]) = [-1]
	*($5 + [72]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $320(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [28])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $325 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL require_auth($2)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391466682881040) ){ goto $label$2 }
	CALL eosio_assert([0], [11473])
	
.LABEL $label$2
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [84]) = [0]
	$5 = *($0)
	*($4 + [48]) = $5
	*($4 + [56]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-8462961540019654656, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $322(($4 + [48]), $6)
	if ( ((int_32)*($6 + [68]) == (int_32)($4 + [48])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	if ( ((int_64)*($6 + [8]) == (int_64)$2) ){ goto $label$5 }
	CALL eosio_assert([0], [11557])
	
.LABEL $label$5
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [44]) = [0]
	$5 = *($0)
	*($4 + [8]) = $5
	*($4 + [16]) = $5
	$0 = CALL db_find_i64($5, $5, (int_64)-8462961772248301568, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $326(($4 + [8]), $0)
	if ( ((int_32)*($0 + [24]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$7
	if ( ((int_64)*($0 + [8]) != (int_64)$1) ){ goto $label$6 }
	
.LOOP $label$8:
	if ( ((int_64)*($0 + [16]) != (int_64)$3) ){ goto $label$9 }
	$6 = CALL db_next_i64(*($0 + [28]), ($4 + [88]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	CALL $326(($4 + [8]), $6)
	
.LABEL $label$10
	CALL $327(($4 + [8]), $0)
	
.LABEL $label$9
	$0 = CALL db_next_i64(*($0 + [28]), ($4 + [88]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$6 }
	$0 = CALL $326(($4 + [8]), $0)
	if ( ((int_64)*($0 + [8]) == (int_64)$1) ){ goto $label$8 }
	
.LABEL $label$6
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$11 }
	$8 = ($4 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	CALL $9($6)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($4 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $7
	
.LABEL $label$12
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$11
	$7 = *($4 + [72])
	if ( ($7 == 0) ){ goto $label$16 }
	$8 = (($4 + [48]) + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	if ( ((*($6 + [20]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($6 + [28])))
	
.LABEL $label$21
	CALL $9($6)
	
.LABEL $label$20
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($4 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $7
	
.LABEL $label$17
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$16
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$3
	CALL eosio_assert([0], [11535])
}

void .FUNC $324 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$9 = *(($1 + [32]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961772248301568, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [36]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961772248301567, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $326 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [24]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $579(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($5 + [32 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $324(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $101 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$1 = *($0)
	*($3) = $1
	*($3 + [8]) = $1
	$0 = CALL db_find_i64($1, $1, (int_64)4730634643120193536, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $96($3, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$3
	$4 = CALL db_next_i64(*($0 + [20]), ($3 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $96($3, $4)
	
.LABEL $label$4
	CALL $100($3, $0)
	$5 = *($3 + [24])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($3 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$9 = *(($1 + [24]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $103 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	CALL $161(($4 + [52]), [88])
	$5 = ($4 + [56])
	$7 = *($5)
	$2 = *($4 + [52])
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = $7
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $536(($4 + [88]), ($4 + [80]))
	CALL $163(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$6
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $102 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_64 $13
	int_32 $14
	$12 = ($global$0 - [208])
	$global$0 = $12
	if ( (CALL $27($0) == 0) ){ goto $label$5 }
	if ( (CALL $28($0, (int_64)6110391463044068144) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8257])
	if ( CALL $28($0, (int_64)6110391463044068144) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9811])
	if ( CALL $42($0, $1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (CALL $42($0, $1) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8923])
	
.LABEL $label$1
	$13 = *($0)
	*($12 + [96]) = (int_64)3617214756542218240
	*($12 + [88]) = $1
	*((($0 = CALL $7([16])) + [8])) = *($12 + [96])
	*($0) = *($12 + [88])
	$14 = ($0 + [16])
	*($12 + [196]) = $14
	*($12 + [192]) = $0
	*($12 + [200]) = $14
	*($12 + [104]) = $1
	*($12 + [112]) = $2
	*($12 + [120]) = $3
	*($12 + [128]) = $4
	*($12 + [136]) = $5
	*($12 + [144]) = $6
	*($12 + [152]) = $7
	*($12 + [160]) = $8
	*($12 + [168]) = $9
	*($12 + [176]) = $10
	*($12 + [184]) = $11
	$12 = CALL memcpy($12, ($12 + [104]), [88])
	CALL $103($13, (int_64)-4420681859124612448, ($12 + [192]), $12)
	$0 = *($12 + [192])
	if ( ($0 == 0) ){ goto $label$6 }
	*($12 + [196]) = $0
	CALL $9($0)
	
.LABEL $label$6
	$global$0 = ($12 + [208])
}

void .FUNC $105 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	$4 = [0]
	$5 = [0]
	$6 = [0]
	$7 = (*($2 + [4]) - *($2))
	if ( ($7 == 0) ){ goto $label$2 }
	$4 = int_32($7 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = CALL $7($7)
	$4 = ($6 + ($4 << [4]))
	*(($3 + [16])) = $4
	*($3 + [8]) = $6
	*($3 + [12]) = $6
	$5 = *($2)
	$2 = (*(($2 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $5, $2)
	$5 = ($6 + $2)
	*($3 + [12]) = $5
	goto $label$2 
	
.LABEL $label$3
	$5 = $6
	
.LABEL $label$2
	*(($3 + [44])) = $5
	*(($3 + [48])) = $4
	*(($3 + [16])) = [0]
	*(($3 + [60])) = [0]
	*($3 + [32]) = $1
	*($3 + [24]) = $0
	*($3 + [40]) = $6
	*($3 + [8]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	CALL $163(($3 + [24]))
	$6 = *($3 + [52])
	if ( ($6 == 0) ){ goto $label$4 }
	*(($3 + [56])) = $6
	CALL $9($6)
	
.LABEL $label$4
	$6 = *($3 + [40])
	if ( ($6 == 0) ){ goto $label$5 }
	*(($3 + [44])) = $6
	CALL $9($6)
	
.LABEL $label$5
	$6 = *($3 + [8])
	if ( ($6 == 0) ){ goto $label$6 }
	*($3 + [12]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($3 + [8]))
}

void .FUNC $104 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	$12 = ($global$0 - [192])
	$global$0 = $12
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391463044068144) ){ goto $label$2 }
	CALL eosio_assert([0], [9811])
	
.LABEL $label$2
	if ( ((uint_64)CALL $56($0, (int_64)6076636610723457328) >= (uint_64)((int_64)((int_64)CALL $24() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$4 }
	$3 = *($0)
	*($12 + [56]) = (int_64)3617214756542218240
	*($12 + [48]) = $3
	*((($13 = CALL $7([16])) + [8])) = *($12 + [56])
	*($13) = *($12 + [48])
	$14 = ($13 + [16])
	*($12 + [156]) = $14
	*($12 + [152]) = $13
	*($12 + [160]) = $14
	CALL $105($3, (int_64)-4420681859411040624, ($12 + [152]))
	$13 = *($12 + [152])
	if ( ($13 == 0) ){ goto $label$3 }
	*($12 + [156]) = $13
	CALL $9($13)
	$global$0 = ($12 + [192])
	return 
	
.LABEL $label$4
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	$15 = *($0)
	*($12 + [8]) = $15
	*($12 + [16]) = $15
	$13 = CALL db_find_i64($15, $15, (int_64)6076636753632296960, $2)
	if ( ((int_32)$13 <= (int_32)[-1]) ){ goto $label$10 }
	$13 = CALL $106(($12 + [8]), $13)
	if ( ((int_32)*($13 + [80]) == (int_32)($12 + [8])) ){ goto $label$11 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$11
	*($12 + [4]) = $13
	*($12) = ($12 + [8])
	$15 = *($13 + [16])
	$16 = *($13 + [24])
	$17 = *($13 + [32])
	$18 = *($13 + [40])
	$19 = *($13 + [48])
	$20 = *($13 + [56])
	$21 = *($13 + [64])
	$22 = *($13 + [72])
	$23 = *($13 + [8])
	*($12 + [52]) = ($12 + [8])
	*($12 + [48]) = $12
	CALL $107(($12 + [8]), $13, ($12 + [48]))
	*(($12 + [80])) = [0]
	*($12 + [64]) = (int_64)-1
	*($12 + [72]) = (int_64)0
	*($12 + [84]) = [0]
	$24 = *($0)
	*($12 + [48]) = $24
	*($12 + [56]) = $24
	if ( (int_64)($23 == 0) ){ goto $label$7 }
	$13 = CALL db_find_i64($24, $24, (int_64)4730634643120193536, $23)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$9 }
	$13 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($13 + [16]) == (int_32)($12 + [48])) ){ goto $label$8 }
	CALL eosio_assert([0], [11998])
	goto $label$8 
	
.LABEL $label$10
	*($12 + [4]) = [0]
	*($12) = ($12 + [8])
	if ( ((int_64)CALL current_receiver() != (int_64)*($12 + [8])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$13 = [0]
	CALL eosio_assert([0], [12129])
	
.LABEL $label$8
	CALL $108(($12 + [48]), $13)
	
.LABEL $label$7
	if ( (int_64)($15 == 0) ){ goto $label$12 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$14 }
	
.LOOP $label$16:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$15) ){ goto $label$15 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$14 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$13 }
	CALL eosio_assert([0], [11998])
	goto $label$13 
	
.LABEL $label$14
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $15)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$17 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$13 }
	CALL eosio_assert([0], [11998])
	goto $label$13 
	
.LABEL $label$17
	CALL eosio_assert([0], [12129])
	
.LABEL $label$13
	CALL $109(($12 + [48]), $26)
	
.LABEL $label$12
	if ( (int_64)($16 == 0) ){ goto $label$18 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$20 }
	
.LOOP $label$22:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$16) ){ goto $label$21 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$20 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$19 }
	CALL eosio_assert([0], [11998])
	goto $label$19 
	
.LABEL $label$20
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $16)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$23 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$19 }
	CALL eosio_assert([0], [11998])
	goto $label$19 
	
.LABEL $label$23
	CALL eosio_assert([0], [12129])
	
.LABEL $label$19
	CALL $110(($12 + [48]), $26)
	
.LABEL $label$18
	if ( (int_64)($17 == 0) ){ goto $label$24 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$26 }
	
.LOOP $label$28:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$17) ){ goto $label$27 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$26 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$25 }
	CALL eosio_assert([0], [11998])
	goto $label$25 
	
.LABEL $label$26
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $17)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$29 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$25 }
	CALL eosio_assert([0], [11998])
	goto $label$25 
	
.LABEL $label$29
	CALL eosio_assert([0], [12129])
	
.LABEL $label$25
	CALL $111(($12 + [48]), $26)
	
.LABEL $label$24
	if ( (int_64)($18 == 0) ){ goto $label$30 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$32 }
	
.LOOP $label$34:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$18) ){ goto $label$33 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$32 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$31 }
	CALL eosio_assert([0], [11998])
	goto $label$31 
	
.LABEL $label$32
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $18)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$35 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$31 }
	CALL eosio_assert([0], [11998])
	goto $label$31 
	
.LABEL $label$35
	CALL eosio_assert([0], [12129])
	
.LABEL $label$31
	CALL $112(($12 + [48]), $26)
	
.LABEL $label$30
	if ( (int_64)($19 == 0) ){ goto $label$36 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$38 }
	
.LOOP $label$40:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$19) ){ goto $label$39 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$38 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$37 }
	CALL eosio_assert([0], [11998])
	goto $label$37 
	
.LABEL $label$38
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $19)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$41 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$37 }
	CALL eosio_assert([0], [11998])
	goto $label$37 
	
.LABEL $label$41
	CALL eosio_assert([0], [12129])
	
.LABEL $label$37
	CALL $113(($12 + [48]), $26)
	
.LABEL $label$36
	if ( (int_64)($20 == 0) ){ goto $label$42 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$44 }
	
.LOOP $label$46:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$20) ){ goto $label$45 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$44 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$43 }
	CALL eosio_assert([0], [11998])
	goto $label$43 
	
.LABEL $label$44
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $20)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$47 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$43 }
	CALL eosio_assert([0], [11998])
	goto $label$43 
	
.LABEL $label$47
	CALL eosio_assert([0], [12129])
	
.LABEL $label$43
	CALL $114(($12 + [48]), $26)
	
.LABEL $label$42
	if ( (int_64)($21 == 0) ){ goto $label$48 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$50 }
	
.LOOP $label$52:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$21) ){ goto $label$51 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$52 }
	goto $label$50 
	
.LABEL $label$51
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$50 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$49 }
	CALL eosio_assert([0], [11998])
	goto $label$49 
	
.LABEL $label$50
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $21)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$53 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$49 }
	CALL eosio_assert([0], [11998])
	goto $label$49 
	
.LABEL $label$53
	CALL eosio_assert([0], [12129])
	
.LABEL $label$49
	CALL $115(($12 + [48]), $26)
	
.LABEL $label$48
	if ( (int_64)($22 == 0) ){ goto $label$54 }
	$14 = *(($12 + [76]))
	$25 = *(($12 + [72]))
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$56 }
	
.LOOP $label$58:
	$13 = ($14 + [-24])
	$26 = *($13)
	if ( ((int_64)*($26) == (int_64)$22) ){ goto $label$57 }
	$14 = $13
	if ( ((int_32)$25 != (int_32)$13) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	if ( ((int_32)$25 == (int_32)$14) ){ goto $label$56 }
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$55 }
	CALL eosio_assert([0], [11998])
	goto $label$55 
	
.LABEL $label$56
	$26 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $22)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$59 }
	$26 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($26 + [16]) == (int_32)($12 + [48])) ){ goto $label$55 }
	CALL eosio_assert([0], [11998])
	goto $label$55 
	
.LABEL $label$59
	CALL eosio_assert([0], [12129])
	
.LABEL $label$55
	CALL $116(($12 + [48]), $26)
	
.LABEL $label$54
	$26 = *($12 + [72])
	if ( ($26 == 0) ){ goto $label$60 }
	$25 = ($12 + [76])
	$13 = *($25)
	if ( ((int_32)$13 == (int_32)$26) ){ goto $label$62 }
	
.LOOP $label$63:
	$13 = ($13 + [-24])
	$14 = *($13)
	*($13) = [0]
	if ( ($14 == 0) ){ goto $label$64 }
	CALL $9($14)
	
.LABEL $label$64
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$63 }
	$13 = *(($12 + [72]))
	goto $label$61 
	
.LABEL $label$62
	$13 = $26
	
.LABEL $label$61
	*($25) = $26
	CALL $9($13)
	
.LABEL $label$60
	if ( ((int_64)CALL current_receiver() == (int_64)*($12 + [8])) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [12072])
	
.LABEL $label$5
	*(($13 = CALL $7([96])) + [80]) = ($12 + [8])
	*($13 + [8]) = $3
	*($13) = $2
	*($13 + [16]) = $4
	*($13 + [24]) = $5
	*($13 + [32]) = $6
	*($13 + [40]) = $7
	*($13 + [48]) = $8
	*($13 + [56]) = $9
	*($13 + [64]) = $10
	*($13 + [72]) = $11
	*($12 + [136]) = (($12 + [48]) + [80])
	*($12 + [132]) = ($12 + [48])
	*($12 + [128]) = ($12 + [48])
	*($12 + [144]) = ($12 + [128])
	*($12 + [156]) = ($13 + [8])
	*($12 + [152]) = $13
	*($12 + [160]) = ($13 + [16])
	*($12 + [164]) = ($13 + [24])
	*($12 + [168]) = ($13 + [32])
	*($12 + [172]) = ($13 + [40])
	*($12 + [176]) = ($13 + [48])
	*($12 + [180]) = ($13 + [56])
	*($12 + [184]) = ($13 + [64])
	*($12 + [188]) = ($13 + [72])
	CALL $117(($12 + [152]), ($12 + [144]))
	$15 = *($13)
	$26 = CALL db_store_i64(*((($12 + [8]) + [8])), (int_64)6076636753632296960, $1, $15, ($12 + [48]), [80])
	*($13 + [84]) = $26
	$14 = (($12 + [8]) + [16])
	if ( (uint_64)($15 <= *($14)) ){ goto $label$65 }
	*($14) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$65
	*($12 + [152]) = $13
	$15 = *($13)
	*($12 + [48]) = $15
	*($12 + [128]) = $26
	$25 = ($12 + [36])
	$14 = *($25)
	if ( ((uint_32)$14 >= (uint_32)*((($12 + [8]) + [32]))) ){ goto $label$68 }
	*($14 + [8]) = $15
	*($14 + [16]) = $26
	*($12 + [152]) = [0]
	*($14) = $13
	*($25) = ($14 + [24])
	$14 = *($12 + [152])
	$13 = [0]
	*($12 + [152]) = [0]
	if ( $14 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	CALL $118(($12 + [32]), ($12 + [152]), ($12 + [48]), ($12 + [128]))
	$14 = *($12 + [152])
	$13 = [0]
	*($12 + [152]) = [0]
	if ( ($14 == 0) ){ goto $label$66 }
	
.LABEL $label$67
	CALL $9($14)
	
.LABEL $label$66
	*(($12 + [80])) = $13
	*($12 + [64]) = (int_64)-1
	*($12 + [84]) = $13
	$15 = *($0)
	*($12 + [48]) = $15
	*($12 + [56]) = $15
	*($12 + [72]) = (int_64)0
	$14 = CALL db_find_i64($15, $15, (int_64)4730634643120193536, (int_64)0)
	if ( ((int_32)$14 < (int_32)$13) ){ goto $label$69 }
	if ( ((int_32)*(CALL $96(($12 + [48]), $14) + [16]) == (int_32)($12 + [48])) ){ goto $label$69 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$69
	if ( (int_64)($3 == 0) ){ goto $label$70 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$72 }
	
.LOOP $label$74:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$3) ){ goto $label$73 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$73
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$72 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$71 }
	CALL eosio_assert([0], [11998])
	goto $label$71 
	
.LABEL $label$72
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $3)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$75 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$71 }
	CALL eosio_assert([0], [11998])
	goto $label$71 
	
.LABEL $label$75
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$71
	CALL $119(($12 + [48]), $0)
	
.LABEL $label$70
	if ( (int_64)($4 == 0) ){ goto $label$76 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$78 }
	
.LOOP $label$80:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$4) ){ goto $label$79 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$78 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$77 }
	CALL eosio_assert([0], [11998])
	goto $label$77 
	
.LABEL $label$78
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $4)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$81 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$77 }
	CALL eosio_assert([0], [11998])
	goto $label$77 
	
.LABEL $label$81
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$77
	CALL $120(($12 + [48]), $0)
	
.LABEL $label$76
	if ( (int_64)($5 == 0) ){ goto $label$82 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$84 }
	
.LOOP $label$86:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$5) ){ goto $label$85 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$84 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$83 }
	CALL eosio_assert([0], [11998])
	goto $label$83 
	
.LABEL $label$84
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $5)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$87 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$83 }
	CALL eosio_assert([0], [11998])
	goto $label$83 
	
.LABEL $label$87
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$83
	CALL $121(($12 + [48]), $0)
	
.LABEL $label$82
	if ( (int_64)($6 == 0) ){ goto $label$88 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$90 }
	
.LOOP $label$92:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$6) ){ goto $label$91 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$91
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$90 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$89 }
	CALL eosio_assert([0], [11998])
	goto $label$89 
	
.LABEL $label$90
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $6)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$93 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$89 }
	CALL eosio_assert([0], [11998])
	goto $label$89 
	
.LABEL $label$93
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$89
	CALL $122(($12 + [48]), $0)
	
.LABEL $label$88
	if ( (int_64)($7 == 0) ){ goto $label$94 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$96 }
	
.LOOP $label$98:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$7) ){ goto $label$97 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$96 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$95 }
	CALL eosio_assert([0], [11998])
	goto $label$95 
	
.LABEL $label$96
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $7)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$99 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$95 }
	CALL eosio_assert([0], [11998])
	goto $label$95 
	
.LABEL $label$99
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$95
	CALL $123(($12 + [48]), $0)
	
.LABEL $label$94
	if ( (int_64)($8 == 0) ){ goto $label$100 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$102 }
	
.LOOP $label$104:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$8) ){ goto $label$103 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$103
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$102 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$101 }
	CALL eosio_assert([0], [11998])
	goto $label$101 
	
.LABEL $label$102
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $8)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$105 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$101 }
	CALL eosio_assert([0], [11998])
	goto $label$101 
	
.LABEL $label$105
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$101
	CALL $124(($12 + [48]), $0)
	
.LABEL $label$100
	if ( (int_64)($9 == 0) ){ goto $label$106 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$108 }
	
.LOOP $label$110:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$9) ){ goto $label$109 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$110 }
	goto $label$108 
	
.LABEL $label$109
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$108 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$107 }
	CALL eosio_assert([0], [11998])
	goto $label$107 
	
.LABEL $label$108
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $9)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$111 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$107 }
	CALL eosio_assert([0], [11998])
	goto $label$107 
	
.LABEL $label$111
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$107
	CALL $125(($12 + [48]), $0)
	
.LABEL $label$106
	if ( (int_64)($10 == 0) ){ goto $label$112 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$114 }
	
.LOOP $label$116:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$10) ){ goto $label$115 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$116 }
	goto $label$114 
	
.LABEL $label$115
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$114 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$113 }
	CALL eosio_assert([0], [11998])
	goto $label$113 
	
.LABEL $label$114
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $10)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$117 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$113 }
	CALL eosio_assert([0], [11998])
	goto $label$113 
	
.LABEL $label$117
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$113
	CALL $126(($12 + [48]), $0)
	
.LABEL $label$112
	if ( (int_64)($11 == 0) ){ goto $label$118 }
	$14 = *(($12 + [76]))
	$26 = *(($12 + [72]))
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$120 }
	
.LOOP $label$122:
	$13 = ($14 + [-24])
	$0 = *($13)
	if ( ((int_64)*($0) == (int_64)$11) ){ goto $label$121 }
	$14 = $13
	if ( ((int_32)$26 != (int_32)$13) ){ goto $label$122 }
	goto $label$120 
	
.LABEL $label$121
	if ( ((int_32)$26 == (int_32)$14) ){ goto $label$120 }
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$119 }
	CALL eosio_assert([0], [11998])
	goto $label$119 
	
.LABEL $label$120
	$0 = [0]
	$13 = CALL db_find_i64(*($12 + [48]), *(($12 + [56])), (int_64)4730634643120193536, $11)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$123 }
	$0 = CALL $96(($12 + [48]), $13)
	if ( ((int_32)*($0 + [16]) == (int_32)($12 + [48])) ){ goto $label$119 }
	CALL eosio_assert([0], [11998])
	goto $label$119 
	
.LABEL $label$123
	CALL eosio_assert([0], [9864])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$119
	CALL $127(($12 + [48]), $0)
	
.LABEL $label$118
	$0 = *($12 + [72])
	if ( ($0 == 0) ){ goto $label$124 }
	$26 = ($12 + [76])
	$13 = *($26)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$126 }
	
.LOOP $label$127:
	$13 = ($13 + [-24])
	$14 = *($13)
	*($13) = [0]
	if ( ($14 == 0) ){ goto $label$128 }
	CALL $9($14)
	
.LABEL $label$128
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$127 }
	$13 = *(($12 + [72]))
	goto $label$125 
	
.LABEL $label$126
	$13 = $0
	
.LABEL $label$125
	*($26) = $0
	CALL $9($13)
	
.LABEL $label$124
	$0 = *($12 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$26 = ($12 + [36])
	$13 = *($26)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$130 }
	
.LOOP $label$131:
	$13 = ($13 + [-24])
	$14 = *($13)
	*($13) = [0]
	if ( ($14 == 0) ){ goto $label$132 }
	CALL $9($14)
	
.LABEL $label$132
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$131 }
	$13 = *(($12 + [32]))
	goto $label$129 
	
.LABEL $label$130
	$13 = $0
	
.LABEL $label$129
	*($26) = $0
	CALL $9($13)
	
.LABEL $label$3
	$global$0 = ($12 + [192])
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($2 + [4])
	$6 = *($1)
	$7 = *(*($2))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $8) ){ goto $label$3 }
	CALL eosio_assert([0], [13189])
	CALL eosio_assert([0], [13023])
	
.LABEL $label$3
	$9 = CALL db_next_i64(*($8 + [84]), ($4 + [24]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$10 = ((int_64)(CASTING uint_64)(uint_32 CALL $106((CASTING uint_32)(uint_64 $7), $9)) << (int_64)32)
	goto $label$4 
	
.LABEL $label$5
	$10 = (int_64)0
	
.LABEL $label$4
	CALL $154($5, $8)
	*(*($2)) = ((int_64)$10 | (int_64)((int_64)$7 & (int_64)4294967295))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$3 = $3
	$2 = ($3 + [-80])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = $3
	*($4 + [16]) = $4
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [72])
	CALL $117(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [84]), (int_64)0, $2, [80])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($4 + [64])
}

int_32 .FUNC $28 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)4982871467403247616, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $33(($2 + [8]), $0)
	if ( ((int_32)*($0 + [36]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$3 = *($0 + [8])
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($6 + [32])))
	
.LABEL $label$8
	CALL $9($6)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($2 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return ((int_64)$3 == (int_64)1)
	
.LABEL $label$1
	CALL eosio_assert([0], [11974])
	return (unreachable)
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $459 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), ($0 + [16]))
	CALL $415(*($1), ($0 + [28]))
}

void .FUNC $458 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [9])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [10])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [11])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($3 + [12])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $318 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_64 $11
	int_64 $12
	$10 = ($global$0 - [320])
	$global$0 = $10
	*($10 + [231]) = $2
	*($10 + [232]) = $1
	*($10 + [230]) = $6
	*($10 + [229]) = $7
	*($10 + [228]) = $8
	*($10 + [227]) = $9
	CALL require_auth($1)
	if ( (CALL $27($0) == 0) ){ goto $label$7 }
	if ( (CALL $28($0, (int_64)6110391466682881040) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [8257])
	if ( CALL $28($0, (int_64)6110391466682881040) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [11335])
	if ( (CALL $42($0, $1) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( CALL $42($0, $1) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_32)*($0 + [87]) == (int_32)$2) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8923])
	if ( ((int_32)*($0 + [87]) == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0 + [88]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [11393])
	
.LABEL $label$1
	$11 = *($4)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$10 }
	$1 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$12 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$1 = $12
	$9 = $2
	$2 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	$1 = $12
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$2 < (int_32)[6])
	$8 = ($2 + [1])
	$2 = $8
	if ( $9 ){ goto $label$14 }
	$2 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	
.LABEL $label$12
	$1 = (int_64)0
	if ( ((int_64)$11 <= (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8549])
	$1 = (int_64)0
	if ( ((int_64)*($4) > (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [8773])
	
.LABEL $label$8
	$12 = *($4 + [8])
	*((($10 + [184]) + [32])) = [0]
	*($10 + [200]) = (int_64)-1
	*($10 + [208]) = $1
	*($10 + [184]) = *($0)
	$1 = (uint_64)$12 >> (uint_64)(int_64)8
	*($10 + [192]) = $1)
	$2 = CALL $43(($10 + [184]), $1, [8754])
	if ( ((int_64)*($4 + [8]) == (int_64)*($2 + [8])) ){ goto $label$15 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$15
	*((($10 + [144]) + [32])) = [0]
	*($10 + [160]) = (int_64)-1
	*($10 + [168]) = (int_64)0
	$1 = *($0)
	*($10 + [144]) = $1
	*($10 + [152]) = $1
	*($10 + [136]) = [11444]
	*($10 + [140]) = CALL $15([11444])
	*($10 + [8]) = *($10 + [136])
	CALL $32(($10 + [256]), ($10 + [8]))
	$9 = *(($10 + [172]))
	$7 = *($10 + [168])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$19:
	$2 = ($9 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)5937548233127845264) ){ goto $label$18 }
	$9 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$17 }
	if ( ((int_32)*($8 + [36]) == (int_32)($10 + [144])) ){ goto $label$16 }
	CALL eosio_assert([0], [11998])
	goto $label$16 
	
.LABEL $label$17
	$8 = CALL $33(($10 + [144]), CALL $fimport$2(*($10 + [144]), *(($10 + [152])), (int_64)4982871467403247616, (int_64)5937548233127845264))
	if ( ((int_32)*($8 + [36]) == (int_32)($10 + [144])) ){ goto $label$16 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$16
	$1 = *($8 + [16])
	*(($10 + [128])) = [0]
	*($10 + [120]) = (int_64)0
	$2 = CALL $15([11457])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$25 }
	*($10 + [120]) = ($2 << [1])
	$9 = (($10 + [120]) | [1])
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$8 = (($2 + [16]) & [-16])
	$9 = CALL $7($8)
	*($10 + [120]) = ($8 | [1])
	*($10 + [128]) = $9
	*($10 + [124]) = $2
	
.LABEL $label$24
	CALL memcpy($9, [11457], $2)
	
.LABEL $label$23
	*(($9 + $2)) = [0]
	*(($8 = ($10 + [112]))) = [0]
	*($10 + [96]) = (int_64)-1
	*($10 + [104]) = (int_64)0
	*($10 + [116]) = [0]
	$12 = *($0)
	*($10 + [80]) = $12
	*($10 + [88]) = $12
	$12 = *($10 + [232])
	*($10 + [268]) = $3
	*($10 + [272]) = $4
	*($10 + [276]) = $5
	*($10 + [260]) = ($10 + [232])
	*($10 + [256]) = ($10 + [80])
	*($10 + [264]) = ($10 + [231])
	*($10 + [280]) = ($10 + [230])
	*($10 + [284]) = ($10 + [229])
	*($10 + [288]) = ($10 + [228])
	*($10 + [292]) = ($10 + [227])
	*($10 + [304]) = $12
	if ( ((int_64)CALL current_receiver() == (int_64)*($10 + [80])) ){ goto $label$26 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$26
	*($10 + [68]) = ($10 + [256])
	*($10 + [64]) = ($10 + [80])
	*($10 + [72]) = ($10 + [304])
	*(($2 = CALL $7([80])) + [8]) = (int_64)0
	*($2 + [20 align=4]) = (int_64)0
	*($2 + [28]) = [0]
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [68]) = ($10 + [80])
	CALL $319(($10 + [64]), $2)
	*($10 + [248]) = $2
	$12 = *($2)
	*($10 + [64]) = $12
	$7 = *($2 + [72])
	*($10 + [244]) = $7
	$3 = ($10 + [108])
	$9 = *($3)
	if ( ((uint_32)$9 >= (uint_32)*($8)) ){ goto $label$27 }
	*($9 + [8]) = $12
	*($9 + [16]) = $7
	*($10 + [248]) = [0]
	*($9) = $2
	*($3) = ($9 + [24])
	$2 = *($10 + [248])
	$9 = [0]
	*($10 + [248]) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$27
	CALL $320(($10 + [104]), ($10 + [248]), ($10 + [64]), ($10 + [244]))
	$2 = *($10 + [248])
	$9 = [0]
	*($10 + [248]) = [0]
	if ( $2 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $17(($10 + [120]))
	
.LABEL $label$21
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*(($2 + [28])))
	
.LABEL $label$28
	CALL $9($2)
	
.LABEL $label$20
	$12 = *($0)
	*($10 + [72]) = (int_64)3617214756542218240
	*($10 + [64]) = *($10 + [232])
	*((($2 = CALL $7([16])) + [8])) = *($10 + [72])
	*($2) = *($10 + [64])
	*(($8 = (($10 + [16]) + [24]))) = *(($4 + [8]))
	*($10 + [24]) = $1
	*($10 + [16]) = *($10 + [232])
	*($10 + [32]) = *($4)
	CALL $18(($10 + [48]), ($10 + [120]))
	*((($10 + [256]) + [24])) = *($8)
	$8 = (($10 + [16]) + [40])
	*(($7 = (($10 + [256]) + [40]))) = *($8)
	*($8) = $9
	$9 = ($2 + [16])
	*($10 + [308]) = $9
	*($10 + [304]) = $2
	*($10 + [312]) = $9
	*($10 + [256]) = *($10 + [16])
	*($10 + [264]) = *($10 + [24])
	*($10 + [272]) = *($10 + [32])
	*($10 + [288]) = *($10 + [48])
	*($10 + [48]) = (int_64)0
	CALL $37($12, (int_64)-3617168760277827584, ($10 + [304]), ($10 + [256]))
	if ( ((*($10 + [288]) & [1]) == 0) ){ goto $label$29 }
	CALL $9(*($7))
	
.LABEL $label$29
	$2 = *($10 + [304])
	if ( ($2 == 0) ){ goto $label$30 }
	*($10 + [308]) = $2
	CALL $9($2)
	
.LABEL $label$30
	if ( ((*(($10 + [48])) & [1]) == 0) ){ goto $label$31 }
	CALL $9(*(($10 + [56])))
	
.LABEL $label$31
	$8 = *($10 + [104])
	if ( ($8 == 0) ){ goto $label$32 }
	$7 = (($10 + [80]) + [28])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$34 }
	
.LOOP $label$35:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$36 }
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$37 }
	CALL $9(*(($9 + [28])))
	
.LABEL $label$37
	CALL $9($9)
	
.LABEL $label$36
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$35 }
	$2 = *(($10 + [104]))
	goto $label$33 
	
.LABEL $label$34
	$2 = $8
	
.LABEL $label$33
	*($7) = $8
	CALL $9($2)
	
.LABEL $label$32
	if ( ((*($10 + [120]) & [1]) == 0) ){ goto $label$38 }
	CALL $9(*($10 + [128]))
	
.LABEL $label$38
	$8 = *($10 + [168])
	if ( ($8 == 0) ){ goto $label$39 }
	$7 = ($10 + [172])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$41 }
	
.LOOP $label$42:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$43 }
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$44 }
	CALL $9(*(($9 + [32])))
	
.LABEL $label$44
	CALL $9($9)
	
.LABEL $label$43
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$42 }
	$2 = *(($10 + [168]))
	goto $label$40 
	
.LABEL $label$41
	$2 = $8
	
.LABEL $label$40
	*($7) = $8
	CALL $9($2)
	
.LABEL $label$39
	$8 = *($10 + [208])
	if ( ($8 == 0) ){ goto $label$45 }
	$7 = ($10 + [212])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$47 }
	
.LOOP $label$48:
	$2 = ($2 + [-24])
	$9 = *($2)
	*($2) = [0]
	if ( ($9 == 0) ){ goto $label$49 }
	CALL $9($9)
	
.LABEL $label$49
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$48 }
	$2 = *(($10 + [208]))
	goto $label$46 
	
.LABEL $label$47
	$2 = $8
	
.LABEL $label$46
	*($7) = $8
	CALL $9($2)
	
.LABEL $label$45
	$global$0 = ($10 + [320])
	(unreachable)
}

void .FUNC $518 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [151]), $6, [1])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $376(($3 + [8]), *($3 + [152]), *($3 + [151]))
	$global$0 = ($3 + [160])
}

void .FUNC $519 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-8462961540019654656, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $322($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $574(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	$8 = ($1 + [20])
	CALL $19($8, *($5 + [12]))
	$6 = *($5 + [16])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$6 = *($5 + [20])
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	*($1 + [64]) = *(*($5 + [24]))
	*($1 + [65]) = *(*($5 + [28]))
	*($1 + [66]) = *(*($5 + [32]))
	*($1 + [67]) = *(*($5 + [36]))
	$5 = *($1 + [20])
	$6 = ( *(($1 + [24])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [53])
	$7 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [67])
	$10 = ($1 + [66])
	$11 = ($1 + [65])
	$12 = ($1 + [64])
	$13 = ($1 + [48])
	$14 = ($1 + [32])
	$15 = ($1 + [16])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $1($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $15
	*($3 + [36]) = $8
	*($3 + [40]) = $14
	*($3 + [44]) = $13
	*($3 + [48]) = $12
	*($3 + [52]) = $11
	*($3 + [56]) = $10
	*($3 + [60]) = $9
	CALL $575(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)-8462961540019654656, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $2($6)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$7 = *(($4 + [8]))
	$16 = *(*(($0 + [8])))
	$17 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [76]) = CALL db_idx64_store($7, (int_64)-8462961540019654656, $16, $17, ($3 + [24]))
	$global$0 = ($3 + [64])
}

void .FUNC $512 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $343(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $513 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [143]), $5, [1])
	$5 = ($2 + [17])
	if ( ((int_32)$4 != (int_32)[17]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [142]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [18])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $91($3, *($3 + [152]), *($3 + [144]), *($3 + [143]), *($3 + [142]))
	$global$0 = ($3 + [160])
}

void .FUNC $510 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $341(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $476 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $98($3, *($3 + [152]), $0, *($3 + [136]))
	$global$0 = ($3 + [160])
}

void .FUNC $516 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [212]) = $2
	*($3 + [208]) = $2
	$5 = ($2 + $4)
	*($3 + [216]) = $5
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [212])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $2, [8])
	*($3 + [212]) = ($2 + [8])
	*($3 + [184]) = [0]
	*($3 + [176]) = (int_64)0
	CALL $415(($3 + [208]), ($3 + [176]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [208]) + [8]))
	*($3 + [24]) = *($3 + [208])
	*(($4 = (($3 + [224]) + [8]))) = *($2)
	*($3 + [224]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [240]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [224])
	*($3 + [56]) = $0
	*($3 + [240]) = $0
	*($3 + [68 align=4]) = (int_64)361417177238274561
	*($3 + [76 align=4]) = (int_64)144408800781666054
	*($3 + [84]) = [1027]
	*($3 + [86 align=2]) = (int_64)72339081933160453
	*($3 + [94 align=2]) = [33620738]
	*($3 + [98]) = [1027]
	*($3 + [100 align=4]) = (int_64)216736870368216581
	*($3 + [108]) = [17171716]
	*($3 + [112]) = (int_64)73469379886514946
	*($3 + [120]) = [770]
	*($3 + [122 align=2]) = (int_64)72621656421500164
	*($3 + [130 align=2]) = [50462978]
	*($3 + [134]) = [1284]
	*($3 + [136]) = (int_64)506097522914230534
	*($3 + [144]) = [17434888]
	*($3 + [148]) = [770]
	*($3 + [150]) = [4]
	*($3 + [151 align=1]) = [67305985]
	*($3 + [155 align=1]) = [261]
	*($3 + [157]) = [2]
	*($3 + [160]) = (int_64)72058693550160512
	*($3 + [168]) = [770]
	*($3 + [170]) = [4]
	$2 = CALL $18(($3 + [8]), ($3 + [176]))
	CALL $372(($3 + [40]), *($3 + [200]), *($3 + [192]), $2)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [176]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [176]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [184])))
	$global$0 = ($3 + [256])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [256])
}

void .FUNC $517 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $350($3, *($3 + [136]))
	$global$0 = ($3 + [144])
}

void .FUNC $514 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [151]), $5, [1])
	$5 = ($2 + [25])
	if ( ((int_32)$4 != (int_32)[25]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [150]), $5, [1])
	*(($3 + [32])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [26])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $93(($3 + [8]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [151]), *($3 + [150]))
	$global$0 = ($3 + [176])
}

void .FUNC $515 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [212]) = $2
	*($3 + [208]) = $2
	$5 = ($2 + $4)
	*($3 + [216]) = $5
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [208]) + [8]))
	$2 = *($3 + [212])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [184]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [212])
	
.LABEL $label$7
	CALL memcpy(($3 + [184]), $2, [8])
	*($3 + [212]) = ($2 + [8])
	*($3 + [176]) = [0]
	*($3 + [168]) = (int_64)0
	CALL $415(($3 + [208]), ($3 + [168]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [208]) + [8]))
	*($3 + [16]) = *($3 + [208])
	*(($4 = (($3 + [224]) + [8]))) = *($2)
	*($3 + [224]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [240]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$0 = *($3 + [224])
	*($3 + [48]) = $0
	*($3 + [240]) = $0
	*($3 + [60 align=4]) = (int_64)361417177238274561
	*($3 + [68 align=4]) = (int_64)144408800781666054
	*($3 + [76]) = [1027]
	*($3 + [78 align=2]) = (int_64)72339081933160453
	*($3 + [86 align=2]) = [33620738]
	*($3 + [90]) = [1027]
	*($3 + [92 align=4]) = (int_64)216736870368216581
	*($3 + [100]) = [17171716]
	*($3 + [104]) = (int_64)73469379886514946
	*($3 + [112]) = [770]
	*($3 + [114 align=2]) = (int_64)72621656421500164
	*($3 + [122 align=2]) = [50462978]
	*($3 + [126]) = [1284]
	*($3 + [128]) = (int_64)506097522914230534
	*($3 + [136]) = [17434888]
	*($3 + [140]) = [770]
	*($3 + [142]) = [4]
	*($3 + [143 align=1]) = [67305985]
	*($3 + [147 align=1]) = [261]
	*($3 + [149]) = [2]
	*($3 + [152]) = (int_64)72058693550160512
	*($3 + [160]) = [770]
	*($3 + [162]) = [4]
	$2 = CALL $18($3, ($3 + [168]))
	CALL $368(($3 + [32]), *($3 + [200]), *($3 + [192]), *($3 + [184]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [168]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [168]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [176])))
	$global$0 = ($3 + [256])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [256])
}

void .FUNC $497 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [151]), $5, [1])
	*((($3 + [8]) + [24])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [25])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $208(($3 + [8]), *($3 + [168]), $0, $0, [0])
	$global$0 = ($3 + [176])
}

void .FUNC $422 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$5 = CALL $18(($2 + [16]), ($1 + [24]))
	$6 = *($1 + [40])
	$7 = *($1 + [36])
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($8 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$3 = CALL $18(($2 + [64]), $5)
	*(($2 + [8])) = *($8)
	*($2) = *($2 + [80])
	CALL void $0((int_32 $4), (int_64 $2), (int_32 $3), (int_32 ($7 & [255])), (int_32 $6), (int_64 $1))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($3 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($5 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $599 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [32])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [40])) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	CALL $415(*($1), ($5 + [48]))
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	*(($6 = ($6 + [4]))) = (*($6) + [8])
	$0 = ($5 + [72])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((int_32)*($6 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [1])
	*(($6 = ($6 + [4]))) = (*($6) + [1])
	*($2) = $5
	CALL $600($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $215 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [40]) = (*($1 + [40]) + [1])
	*($1 + [41]) = (*($1 + [41]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = ($1 + [40])
	$9 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [40]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [60])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $8
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $214 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $217 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [40]) = (*($1 + [40]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [40])
	$8 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [40]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [60])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $216 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)3775065857097465857, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $352($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)3775065857097465856, $6))
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [44])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_64 .FUNC $210 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)-4157500428759203840, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $67(($2 + [8]), $0)
	if ( ((int_32)*($0 + [28]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$3 = *($0 + [8])
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($6 + [24])))
	
.LABEL $label$8
	CALL $9($6)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($2 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $3
	
.LABEL $label$1
	CALL eosio_assert([0], [12985])
	return (unreachable)
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [41]) = (*($1 + [41]) + [1])
	*($1 + [40]) = (*($1 + [40]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = ($1 + [40])
	$9 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [41]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [61])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $8
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $223 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [36])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [36]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [58])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [68]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	*($1 + [17]) = *(*(*($2) + [4]) + [168])
	$6 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-13])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [17])
	*($4 + [56]) = ($1 + [18])
	CALL $63(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $3, [19])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [40]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($4 + [32]), $6)
	*(($1 + [28])) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $197 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(*($2) + [4])
	*($1 + [8]) = *($5 + [112])
	*($1 + [16]) = *($5 + [120])
	$6 = *($1)
	$8 = *($5 + [128])
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *(($5 + [132])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22(($5 + [128]), [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [24]), (*(*($2) + [4]) + [128]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$5 = *($1 + [24])
	$2 = ( *(($1 + [28])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($2 + [24])
	$9 = (CASTING uint_64)(uint_32 $2)
	$7 = ($1 + [24])
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($5 <= [513]) ){ goto $label$8 }
	$2 = CALL $1($5)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$7
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [44]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $540(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [40]), (int_64)0, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($2)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [172])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [169]) = (*($1 + [169]) + [1])
	$5 = *($1)
	*($4 + [24]) = [0]
	*($4 + [8]) = ($4 + [24])
	$6 = ($1 + [8])
	*($4 + [36]) = $6
	*($4 + [32]) = $1
	$7 = ($1 + [16])
	*($4 + [40]) = $7
	$8 = ($1 + [24])
	*($4 + [44]) = $8
	$9 = ($1 + [32])
	*($4 + [48]) = $9
	$10 = ($1 + [40])
	*($4 + [52]) = $10
	$11 = ($1 + [56])
	*($4 + [56]) = $11
	$12 = ($1 + [72])
	*($4 + [60]) = $12
	$13 = ($1 + [80])
	*($4 + [64]) = $13
	$14 = ($1 + [88])
	*($4 + [68]) = $14
	$15 = ($1 + [104])
	*($4 + [72]) = $15
	$16 = ($1 + [112])
	*($4 + [76]) = $16
	$17 = ($1 + [120])
	*($4 + [80]) = $17
	$18 = ($1 + [128])
	*($4 + [84]) = $18
	$19 = ($1 + [144])
	*($4 + [88]) = $19
	$20 = ($1 + [152])
	*($4 + [92]) = $20
	$21 = ($1 + [160])
	*($4 + [96]) = $21
	$22 = ($1 + [168])
	*($4 + [100]) = $22
	$23 = ($1 + [169])
	*($4 + [104]) = $23
	CALL $557(($4 + [32]), ($4 + [8]))
	$24 = *($4 + [24])
	if ( ($24 <= [513]) ){ goto $label$4 }
	$3 = CALL $1($24)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($24 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $24)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $6
	*($4 + [40]) = $7
	*($4 + [44]) = $8
	*($4 + [48]) = $9
	*($4 + [52]) = $10
	*($4 + [56]) = $11
	*($4 + [60]) = $12
	*($4 + [64]) = $13
	*($4 + [68]) = $14
	*($4 + [72]) = $15
	*($4 + [76]) = $16
	*($4 + [80]) = $17
	*($4 + [84]) = $18
	*($4 + [88]) = $19
	*($4 + [92]) = $20
	*($4 + [96]) = $21
	*($4 + [100]) = $22
	*($4 + [104]) = $23
	*($4 + [32]) = $1
	CALL $558(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [176]), $2, $3, $24)
	if ( ((uint_32)$24 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($3)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [112])
	return 
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [33]) = *(*(*($2) + [4]) + [168])
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-208])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-4])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [33])
	*($4 + [48]) = ($1 + [34])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [56])
	*($4 + [60]) = ($1 + [72])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [120])
	*($4 + [76]) = ($1 + [136])
	*($4 + [80]) = ($1 + [152])
	*($4 + [84]) = ($1 + [168])
	*($4 + [88]) = ($1 + [172])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [180])
	*($4 + [104]) = ($1 + [182])
	*($4 + [100]) = ($1 + [181])
	*($4 + [108]) = ($1 + [183])
	*($4 + [112]) = ($1 + [184])
	*($4 + [116]) = ($1 + [185])
	*($4 + [120]) = ($1 + [186])
	*($4 + [124]) = ($1 + [192])
	*($4 + [128]) = ($1 + [200])
	*($4 + [132]) = ($1 + [208])
	*($4 + [136]) = ($1 + [212])
	*($4 + [140]) = ($1 + [213])
	CALL $65(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $3, [204])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $219 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [41]) = (*($1 + [41]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [41]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [61])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $218 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [56]) = *(*(*($2) + [4]) + [152])
	$2 = ($1 + [8])
	*($4 + [24]) = *($2)
	$5 = ($1 + [16])
	*($4 + [32]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($7 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $2
	*($4 + [48]) = $1
	*($4 + [56]) = $5
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $3, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [24]) + [8])
	*($4 + [48]) = *($2)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$4
	*($4 + [48]) = *($5)
	if ( (CALL $16($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [76])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$6
	$global$0 = ($4 + [96])
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $378 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [28])) = $2
	*(($4 + [32])) = ($2 + $7)
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [36 align=4]) = (int_64)361417177238274561
	*($4 + [44]) = [151521030]
	*($4 + [48]) = [2826]
	*($4 + [50 align=2]) = (int_64)144396684594708993
	*($4 + [58]) = [3]
	*($4 + [60 align=4]) = (int_64)289077004450529537
	*($4 + [68]) = [134678021]
	*($4 + [72]) = [265]
	*($4 + [74 align=2]) = (int_64)216736857432785666
	*($4 + [82 align=2]) = [67305985]
	*($4 + [86]) = [261]
	*($4 + [88]) = [2]
	*($4 + [89 align=1]) = (int_64)144399970194490371
	*($4 + [97 align=1]) = (int_64)433757350076154369
	*($4 + [105 align=1]) = [513]
	*($4 + [107 align=1]) = (int_64)723118041428460547
	*($4 + [115 align=1]) = (int_64)289077004467372545
	*($4 + [123 align=1]) = [261]
	*($4 + [125]) = [2]
	*($4 + [128]) = (int_64)72058693550160512
	*($4 + [136]) = [770]
	*($4 + [138]) = [4]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

int_32 .FUNC $379 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = (int_64)0
	*($4 + [144]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [144]) + [8])
	CALL memcpy(($4 + [144]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36 align=4]) = (int_64)361417177238274561
	*($4 + [44]) = [151521030]
	*($4 + [48]) = [2826]
	*($4 + [50 align=2]) = (int_64)144396684594708993
	*($4 + [58]) = [3]
	*($4 + [60 align=4]) = (int_64)289077004450529537
	*($4 + [68]) = [134678021]
	*($4 + [72]) = [265]
	*($4 + [74 align=2]) = (int_64)216736857432785666
	*($4 + [82 align=2]) = [67305985]
	*($4 + [86]) = [261]
	*($4 + [88]) = [2]
	*($4 + [89 align=1]) = (int_64)144399970194490371
	*($4 + [97 align=1]) = (int_64)433757350076154369
	*($4 + [105 align=1]) = [513]
	*($4 + [107 align=1]) = (int_64)723118041428460547
	*($4 + [115 align=1]) = (int_64)289077004467372545
	*($4 + [123 align=1]) = [261]
	*($4 + [125]) = [2]
	*($4 + [128]) = (int_64)72058693550160512
	*($4 + [136]) = [770]
	*($4 + [138]) = [4]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [144]) + [8]))
	$1 = *($4 + [144])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	$global$0 = ($4 + [160])
	return [1]
}

void .FUNC $548 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [56])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $528(*($1), ($4 + [64]))
	*($2 + [8]) = $4
	CALL $549(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $372 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [56]) = $2
	*($4 + [64]) = $1
	CALL require_auth(*($0))
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$2 = *($0)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	$5 = CALL db_find_i64($2, $2, (int_64)-4157500428759203840, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $67(($4 + [16]), $5)
	if ( ((int_32)*($0 + [28]) == (int_32)($4 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*($4 + [84]) = $3
	*($4 + [80]) = ($4 + [56])
	CALL $373(($4 + [16]), $0, ($4 + [80]))
	$5 = *($4 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = *($0)
	*($4 + [8]) = $3
	*($4 + [4]) = ($4 + [56])
	*($4) = ($4 + [64])
	*($4 + [104]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [16])) ){ goto $label$5 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$5
	*($4 + [84]) = $4
	*($4 + [80]) = ($4 + [16])
	*($4 + [88]) = ($4 + [104])
	*(($0 = CALL $7([40]))) = (int_64)0
	*($0 + [16 align=4]) = (int_64)0
	*($0 + [24]) = [0]
	*($0 + [28]) = ($4 + [16])
	CALL $374(($4 + [80]), $0)
	*($4 + [96]) = $0
	$2 = *($0)
	*($4 + [80]) = $2
	$5 = *($0 + [32])
	*($4 + [76]) = $5
	$6 = ($4 + [44])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [48]))) ){ goto $label$8 }
	*($3 + [8]) = $2
	*($3 + [16]) = $5
	*($4 + [96]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	$0 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $375(($4 + [40]), ($4 + [96]), ($4 + [80]), ($4 + [76]))
	$0 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( $0 ){ goto $label$6 }
	
.LABEL $label$7
	$5 = *($4 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($0 + [24])))
	
.LABEL $label$9
	CALL $9($0)
	$5 = *($4 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($4 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($3 + [24])))
	
.LABEL $label$14
	CALL $9($3)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($4 + [112])
}

void .FUNC $373 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	$5 = *($1)
	$6 = *($2 + [4])
	$8 = *($6)
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *($6 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22($6, [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [16]), *(($2 + [4])))
	
.LABEL $label$3
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$2 = *($1 + [16])
	$6 = ( *(($1 + [20])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [16])
	$9 = (CASTING uint_64)(uint_32 $6)
	$7 = ($1 + [16])
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($2 <= [513]) ){ goto $label$8 }
	$6 = CALL $1($2)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($4 + [12]) = $6
	*($4 + [8]) = $6
	*($4 + [16]) = ($6 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [40]) = $7
	*($4 + [32]) = $1
	CALL $531(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $6, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($6)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $370 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [16]) = *(*($4 + [8]))
	$5 = *($0)
	$6 = ($1 + [24])
	CALL $19($6, *($4 + [12]))
	$4 = *($1 + [24])
	$7 = ( *(($1 + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [24])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [8])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $6
	CALL $540(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($5 + [8]), (int_64)4982871467403247616, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $371 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $376 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth(*($0))
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$4 = *($0)
	*($3 + [8]) = $4
	*($3 + [16]) = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$1
	*(($0 = CALL $7([24])) + [12]) = ($3 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	CALL memcpy(($3 + [64]), $0, [8])
	CALL memcpy((($3 + [64]) | [8]), ($0 + [8]), [1])
	$1 = *($0)
	$5 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)5094022140569452544, $4, $1, ($3 + [64]), [9])
	*($0 + [16]) = $5
	$2 = ($3 + [24])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$2 }
	*($2) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($3 + [56]) = $0
	$4 = *($0)
	*($3 + [64]) = $4
	*($3 + [52]) = $5
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($3 + [40]))) ){ goto $label$5 }
	*($2 + [8]) = $4
	*($2 + [16]) = $5
	*($3 + [56]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $151(($3 + [32]), ($3 + [56]), ($3 + [64]), ($3 + [52]))
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9($0)
	
.LABEL $label$3
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $9($2)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($3 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$6
	$global$0 = ($3 + [80])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [912])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)-4420674833730240513) ){ goto $label$57 }
	if ( ((int_64)$2 <= (int_64)3607571207051154431) ){ goto $label$56 }
	if ( ((int_64)$2 <= (int_64)4516881727834030079) ){ goto $label$54 }
	if ( ((int_64)$2 > (int_64)6076636753631903743) ){ goto $label$50 }
	if ( ((int_64)$2 > (int_64)4923678922967252991) ){ goto $label$42 }
	if ( ((int_64)$2 == (int_64)4516881727834030080) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)4923678657436188672) ){ goto $label$1 }
	*($3 + [852]) = [0]
	*($3 + [848]) = [1]
	*($3 + [56]) = *($3 + [848])
	CALL $378($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$57
	if ( ((int_64)$2 > (int_64)-5003013564429161985) ){ goto $label$55 }
	if ( ((int_64)$2 > (int_64)-5003133963534511617) ){ goto $label$53 }
	if ( ((int_64)$2 <= (int_64)-5858943021525106689) ){ goto $label$49 }
	if ( ((int_64)$2 > (int_64)-5003142590251204609) ){ goto $label$41 }
	if ( ((int_64)$2 == (int_64)-5858943021525106688) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)-5003143671304498176) ){ goto $label$1 }
	*($3 + [660]) = [0]
	*($3 + [656]) = [2]
	*($3 + [248]) = *($3 + [656])
	CALL $379($1, $1, ($3 + [248]))
	goto $label$1 
	
.LABEL $label$56
	if ( ((int_64)$2 > (int_64)-3845323308723601409) ){ goto $label$52 }
	if ( ((int_64)$2 <= (int_64)-4420672007217230401) ){ goto $label$48 }
	if ( ((int_64)$2 > (int_64)-4417103636006023793) ){ goto $label$40 }
	if ( ((int_64)$2 == (int_64)-4420672007217230400) ){ goto $label$31 }
	if ( ((int_64)$2 != (int_64)-4417249012457930752) ){ goto $label$1 }
	*($3 + [492]) = [0]
	*($3 + [488]) = [3]
	*($3 + [416]) = *($3 + [488])
	CALL $380($1, $1, ($3 + [416]))
	goto $label$1 
	
.LABEL $label$55
	if ( ((int_64)$2 > (int_64)-4997502817706846865) ){ goto $label$51 }
	if ( ((int_64)$2 <= (int_64)-5003010271985455217) ){ goto $label$47 }
	if ( ((int_64)$2 > (int_64)-5003008549659488833) ){ goto $label$39 }
	if ( ((int_64)$2 == (int_64)-5003010271985455216) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)-5003008996391518208) ){ goto $label$1 }
	*($3 + [596]) = [0]
	*($3 + [592]) = [4]
	*($3 + [312]) = *($3 + [592])
	CALL $381($1, $1, ($3 + [312]))
	goto $label$1 
	
.LABEL $label$54
	if ( ((int_64)$2 <= (int_64)3626300891786985471) ){ goto $label$46 }
	if ( ((int_64)$2 > (int_64)3626429759622627327) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)3626300891786985472) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)3626429750955400384) ){ goto $label$1 }
	*($3 + [580]) = [0]
	*($3 + [576]) = [5]
	*($3 + [328]) = *($3 + [576])
	CALL $382($1, $1, ($3 + [328]))
	goto $label$1 
	
.LABEL $label$53
	if ( ((int_64)$2 <= (int_64)-5003020524872269825) ){ goto $label$45 }
	if ( ((int_64)$2 > (int_64)-5003018401853299057) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-5003020524872269824) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)-5003019685500662384) ){ goto $label$1 }
	*($3 + [780]) = [0]
	*($3 + [776]) = [6]
	*($3 + [128]) = *($3 + [776])
	CALL $383($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$52
	if ( ((int_64)$2 <= (int_64)-3605821267742139089) ){ goto $label$44 }
	if ( ((int_64)$2 > (int_64)-2688959064337951377) ){ goto $label$36 }
	if ( ((int_64)$2 == (int_64)-3605821267742139088) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)-3112641867421143552) ){ goto $label$1 }
	*($3 + [508]) = [0]
	*($3 + [504]) = [7]
	*($3 + [400]) = *($3 + [504])
	CALL $384($1, $1, ($3 + [400]))
	goto $label$1 
	
.LABEL $label$51
	if ( ((int_64)$2 <= (int_64)-4420683143058403953) ){ goto $label$43 }
	if ( ((int_64)$2 > (int_64)-4420681859124612449) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-4420683143058403952) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)-4420681859411040624) ){ goto $label$1 }
	*($3 + [732]) = [0]
	*($3 + [728]) = [8]
	*($3 + [176]) = *($3 + [728])
	CALL $378($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$50
	if ( ((int_64)$2 > (int_64)6761218787619373055) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)6076636753631903744) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)6761216327190024864) ){ goto $label$1 }
	*($3 + [476]) = [0]
	*($3 + [472]) = [9]
	*($3 + [432]) = *($3 + [472])
	CALL $379($1, $1, ($3 + [432]))
	goto $label$1 
	
.LABEL $label$49
	if ( ((int_64)$2 == (int_64)-7953171256199948944) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-7694776914265385856) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)-7297718547675873280) ){ goto $label$1 }
	*($3 + [564]) = [0]
	*($3 + [560]) = [10]
	*($3 + [344]) = *($3 + [560])
	CALL $385($1, $1, ($3 + [344]))
	goto $label$1 
	
.LABEL $label$48
	if ( ((int_64)$2 == (int_64)-4420674833730240512) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-4420674027266244608) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-4420672453949259776) ){ goto $label$1 }
	*($3 + [604]) = [0]
	*($3 + [600]) = [11]
	*($3 + [304]) = *($3 + [600])
	CALL $386($1, $1, ($3 + [304]))
	goto $label$1 
	
.LABEL $label$47
	if ( ((int_64)$2 == (int_64)-5003013564429161984) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-5003011376172498944) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)-5003010569708503040) ){ goto $label$1 }
	*($3 + [796]) = [0]
	*($3 + [792]) = [12]
	*($3 + [112]) = *($3 + [792])
	CALL $387($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$46
	if ( ((int_64)$2 == (int_64)3607571207051154432) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)3626116106864820224) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)3626300889956996464) ){ goto $label$1 }
	*($3 + [844]) = [0]
	*($3 + [840]) = [13]
	*($3 + [64]) = *($3 + [840])
	CALL $388($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$45
	if ( ((int_64)$2 == (int_64)-5003133963534511616) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)-5003133781678751744) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)-5003133715010813952) ){ goto $label$1 }
	*($3 + [692]) = [0]
	*($3 + [688]) = [14]
	*($3 + [216]) = *($3 + [688])
	CALL $389($1, $1, ($3 + [216]))
	goto $label$1 
	
.LABEL $label$44
	if ( ((int_64)$2 == (int_64)-3845323308723601408) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)-3667961263146401792) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [892]) = [0]
	*($3 + [888]) = [15]
	*($3 + [16]) = *($3 + [888])
	CALL $390($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$43
	if ( ((int_64)$2 == (int_64)-4997502817706846864) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4708666039271424000) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-4420683982430011392) ){ goto $label$1 }
	*($3 + [652]) = [0]
	*($3 + [648]) = [16]
	*($3 + [256]) = *($3 + [648])
	CALL $379($1, $1, ($3 + [256]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$2 == (int_64)4923678922967252992) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$1 }
	*($3 + [908]) = [0]
	*($3 + [904]) = [17]
	*($3) = *($3 + [904])
	CALL $391($1, $1, $3)
	goto $label$1 
	
.LABEL $label$41
	if ( ((int_64)$2 == (int_64)-5003142590251204608) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-5003137265097654272) ){ goto $label$1 }
	*($3 + [708]) = [0]
	*($3 + [704]) = [18]
	*($3 + [200]) = *($3 + [704])
	CALL $392($1, $1, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$40
	if ( ((int_64)$2 == (int_64)-4417103636006023792) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-4157731351474941056) ){ goto $label$1 }
	*($3 + [540]) = [0]
	*($3 + [536]) = [19]
	*($3 + [368]) = *($3 + [536])
	CALL $391($1, $1, ($3 + [368]))
	goto $label$1 
	
.LABEL $label$39
	if ( ((int_64)$2 == (int_64)-5003008549659488832) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-4997650414435303424) ){ goto $label$1 }
	*($3 + [484]) = [0]
	*($3 + [480]) = [20]
	*($3 + [424]) = *($3 + [480])
	CALL $379($1, $1, ($3 + [424]))
	goto $label$1 
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)3626429759622627328) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)3941451086197085552) ){ goto $label$1 }
	*($3 + [516]) = [0]
	*($3 + [512]) = [21]
	*($3 + [392]) = *($3 + [512])
	CALL $384($1, $1, ($3 + [392]))
	goto $label$1 
	
.LABEL $label$37
	if ( ((int_64)$2 == (int_64)-5003018401853299056) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-5003018401566870880) ){ goto $label$1 }
	*($3 + [740]) = [0]
	*($3 + [736]) = [22]
	*($3 + [168]) = *($3 + [736])
	CALL $393($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-2688959064337951376) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-2507766120631500800) ){ goto $label$1 }
	*($3 + [612]) = [0]
	*($3 + [608]) = [23]
	*($3 + [296]) = *($3 + [608])
	CALL $386($1, $1, ($3 + [296]))
	goto $label$1 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-4420681859124612448) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4420677021986903552) ){ goto $label$1 }
	*($3 + [628]) = [0]
	*($3 + [624]) = [24]
	*($3 + [280]) = *($3 + [624])
	CALL $386($1, $1, ($3 + [280]))
	goto $label$1 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)6761218787619373056) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [900]) = [0]
	*($3 + [896]) = [25]
	*($3 + [8]) = *($3 + [896])
	CALL $394($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$33
	*($3 + [884]) = [0]
	*($3 + [880]) = [26]
	*($3 + [24]) = *($3 + [880])
	CALL $395($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$32
	*($3 + [548]) = [0]
	*($3 + [544]) = [27]
	*($3 + [360]) = *($3 + [544])
	CALL $396($1, $1, ($3 + [360]))
	goto $label$1 
	
.LABEL $label$31
	*($3 + [772]) = [0]
	*($3 + [768]) = [28]
	*($3 + [136]) = *($3 + [768])
	CALL $379($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$30
	*($3 + [860]) = [0]
	*($3 + [856]) = [29]
	*($3 + [48]) = *($3 + [856])
	CALL $397($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$29
	*($3 + [636]) = [0]
	*($3 + [632]) = [30]
	*($3 + [272]) = *($3 + [632])
	CALL $386($1, $1, ($3 + [272]))
	goto $label$1 
	
.LABEL $label$28
	*($3 + [644]) = [0]
	*($3 + [640]) = [31]
	*($3 + [264]) = *($3 + [640])
	CALL $383($1, $1, ($3 + [264]))
	goto $label$1 
	
.LABEL $label$27
	*($3 + [828]) = [0]
	*($3 + [824]) = [32]
	*($3 + [80]) = *($3 + [824])
	CALL $398($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$26
	*($3 + [788]) = [0]
	*($3 + [784]) = [33]
	*($3 + [120]) = *($3 + [784])
	CALL $379($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$25
	*($3 + [756]) = [0]
	*($3 + [752]) = [34]
	*($3 + [152]) = *($3 + [752])
	CALL $399($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$24
	*($3 + [524]) = [0]
	*($3 + [520]) = [35]
	*($3 + [384]) = *($3 + [520])
	CALL $400($1, $1, ($3 + [384]))
	goto $label$1 
	
.LABEL $label$23
	*($3 + [820]) = [0]
	*($3 + [816]) = [36]
	*($3 + [88]) = *($3 + [816])
	CALL $401($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$22
	*($3 + [676]) = [0]
	*($3 + [672]) = [37]
	*($3 + [232]) = *($3 + [672])
	CALL $402($1, $1, ($3 + [232]))
	goto $label$1 
	
.LABEL $label$21
	*($3 + [804]) = [0]
	*($3 + [800]) = [38]
	*($3 + [104]) = *($3 + [800])
	CALL $403($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$20
	*($3 + [620]) = [0]
	*($3 + [616]) = [39]
	*($3 + [288]) = *($3 + [616])
	CALL $381($1, $1, ($3 + [288]))
	goto $label$1 
	
.LABEL $label$19
	*($3 + [668]) = [0]
	*($3 + [664]) = [40]
	*($3 + [240]) = *($3 + [664])
	CALL $404($1, $1, ($3 + [240]))
	goto $label$1 
	
.LABEL $label$18
	*($3 + [500]) = [0]
	*($3 + [496]) = [41]
	*($3 + [408]) = *($3 + [496])
	CALL $405($1, $1, ($3 + [408]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [460]) = [0]
	*($3 + [456]) = [42]
	*($3 + [448]) = *($3 + [456])
	CALL $406($1, $1, ($3 + [448]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [684]) = [0]
	*($3 + [680]) = [43]
	*($3 + [224]) = *($3 + [680])
	CALL $392($1, $1, ($3 + [224]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [716]) = [0]
	*($3 + [712]) = [44]
	*($3 + [192]) = *($3 + [712])
	CALL $407($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [868]) = [0]
	*($3 + [864]) = [45]
	*($3 + [40]) = *($3 + [864])
	CALL $397($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [876]) = [0]
	*($3 + [872]) = [46]
	*($3 + [32]) = *($3 + [872])
	CALL $408($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [812]) = [0]
	*($3 + [808]) = [47]
	*($3 + [96]) = *($3 + [808])
	CALL $409($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [532]) = [0]
	*($3 + [528]) = [48]
	*($3 + [376]) = *($3 + [528])
	CALL $408($1, $1, ($3 + [376]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [588]) = [0]
	*($3 + [584]) = [49]
	*($3 + [320]) = *($3 + [584])
	CALL $408($1, $1, ($3 + [320]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [700]) = [0]
	*($3 + [696]) = [50]
	*($3 + [208]) = *($3 + [696])
	CALL $410($1, $1, ($3 + [208]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [556]) = [0]
	*($3 + [552]) = [51]
	*($3 + [352]) = *($3 + [552])
	CALL $392($1, $1, ($3 + [352]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [764]) = [0]
	*($3 + [760]) = [52]
	*($3 + [144]) = *($3 + [760])
	CALL $379($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [572]) = [0]
	*($3 + [568]) = [53]
	*($3 + [336]) = *($3 + [568])
	CALL $411($1, $1, ($3 + [336]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [724]) = [0]
	*($3 + [720]) = [54]
	*($3 + [184]) = *($3 + [720])
	CALL $408($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [836]) = [0]
	*($3 + [832]) = [55]
	*($3 + [72]) = *($3 + [832])
	CALL $412($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [748]) = [0]
	*($3 + [744]) = [56]
	*($3 + [160]) = *($3 + [744])
	CALL $399($1, $1, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [468]) = [0]
	*($3 + [464]) = [57]
	*($3 + [440]) = *($3 + [464])
	CALL $413($1, $1, ($3 + [440]))
	
.LABEL $label$1
	CALL $25([0])
	$global$0 = ($3 + [912])
}

void .FUNC $374 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = ($1 + [16])
	CALL $19($6, *($4 + [8]))
	$4 = *($1 + [16])
	$7 = ( *(($1 + [20])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [16])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [8])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [32]) = $1
	*($3 + [40]) = $6
	CALL $531(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($5 + [8]), (int_64)-4157500428759203840, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $375 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)5094023804032647168, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $182($7, $9)
	*($3 + [68]) = [0]
	*($3 + [64]) = $7
	$8 = *(*(CALL $556(($3 + [64])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	$9 = *($5 + [8])
	*($1 + [16]) = *($9)
	$7 = *($9)
	if ( ((int_32)$7 != (int_32)*($6 + [79])) ){ goto $label$5 }
	*($1 + [24]) = *(*($5 + [16]))
	*($1 + [32]) = *(*($5 + [20]))
	$7 = *($5 + [24])
	*(($1 + [48])) = *(($7 + [8]))
	*($1 + [40]) = *($7)
	CALL $19(($1 + [56]), *($5 + [28]))
	$9 = *(($5 + [8]))
	$7 = *($9)
	
.LABEL $label$5
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [80])) ){ goto $label$6 }
	*($1 + [160]) = *(*($5 + [32]))
	*($1 + [168]) = *(*($5 + [36]))
	$7 = *($9)
	
.LABEL $label$6
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [81])) ){ goto $label$7 }
	*($1 + [104]) = *(*($5 + [40]))
	*($1 + [112]) = *(*($5 + [44]))
	*($1 + [120]) = *(*($5 + [48]))
	CALL $19(($1 + [128]), *($5 + [52]))
	$7 = *(*(($5 + [8])))
	
.LABEL $label$7
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [82])) ){ goto $label$8 }
	*($1 + [72]) = *(*($5 + [56]))
	*($1 + [80]) = *(*($5 + [60]))
	CALL $19(($1 + [88]), *($5 + [64]))
	$7 = *(*(($5 + [8])))
	
.LABEL $label$8
	$9 = ($1 + [16])
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [83])) ){ goto $label$10 }
	*($1 + [144]) = *(*($5 + [68]))
	$5 = *($5 + [72])
	*($1 + [152]) = *($5)
	$10 = ($1 + [152])
	$11 = ($1 + [144])
	if ( ((int_32)*($5) != (int_32)*($6 + [69])) ){ goto $label$9 }
	$8 = *($6)
	*(($5 = CALL $7([16])) + [8]) = (int_64)3617214756542218240
	*($5) = $8
	*(($7 = (($3 + [40]) + [4]))) = *((($3 + [34]) + [4]))
	*(($3 + [86])) = *($7)
	*(($3 + [16])) = (int_64)1
	*($3 + [80]) = [1]
	$7 = *($3 + [34 align=2])
	*($3 + [82 align=2]) = $7
	*((($3 + [8]) + [16])) = *($3 + [80])
	*($3 + [48]) = $5
	$5 = ($5 + [16])
	*($3 + [52]) = $5
	*($3 + [56]) = $5
	*($3 + [64]) = (int_64)-4418111355583912288
	*($3 + [72]) = (int_64)1
	*($3 + [8]) = (int_64)-4418111355583912288
	*($3 + [40]) = $7
	CALL $206($8, (int_64)-4420674027266244608, ($3 + [48]), ($3 + [8]))
	$5 = *($3 + [48])
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [52]) = $5
	CALL $9($5)
	goto $label$9 
	
.LABEL $label$10
	$10 = ($1 + [152])
	$11 = ($1 + [144])
	
.LABEL $label$9
	*($1 + [169]) = [1]
	*($3 + [40]) = [0]
	*($3 + [48]) = ($3 + [40])
	$6 = ($1 + [8])
	*($3 + [68]) = $6
	*($3 + [64]) = $1
	*($3 + [72]) = $9
	$12 = ($1 + [24])
	*($3 + [76]) = $12
	$13 = ($1 + [32])
	*($3 + [80]) = $13
	$14 = ($1 + [40])
	*($3 + [84]) = $14
	$15 = ($1 + [56])
	*($3 + [88]) = $15
	$16 = ($1 + [72])
	*($3 + [92]) = $16
	$17 = ($1 + [80])
	*($3 + [96]) = $17
	$18 = ($1 + [88])
	*($3 + [100]) = $18
	$19 = ($1 + [104])
	*($3 + [104]) = $19
	$20 = ($1 + [112])
	*($3 + [108]) = $20
	$21 = ($1 + [120])
	*($3 + [112]) = $21
	$22 = ($1 + [128])
	*($3 + [116]) = $22
	*($3 + [120]) = $11
	*($3 + [124]) = $10
	$23 = ($1 + [160])
	*($3 + [128]) = $23
	$24 = ($1 + [168])
	*($3 + [132]) = $24
	$25 = ($1 + [169])
	*($3 + [136]) = $25
	CALL $557(($3 + [64]), ($3 + [48]))
	$7 = *($3 + [40])
	if ( ($7 <= [513]) ){ goto $label$12 }
	$5 = CALL $1($7)
	goto $label$11 
	
.LABEL $label$12
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$11
	*($3 + [52]) = $5
	*($3 + [48]) = $5
	*($3 + [56]) = ($5 + $7)
	*($3 + [40]) = ($3 + [48])
	*($3 + [68]) = $6
	*($3 + [64]) = $1
	*($3 + [72]) = $9
	*($3 + [76]) = $12
	*($3 + [80]) = $13
	*($3 + [84]) = $14
	*($3 + [88]) = $15
	*($3 + [92]) = $16
	*($3 + [96]) = $17
	*($3 + [100]) = $18
	*($3 + [104]) = $19
	*($3 + [108]) = $20
	*($3 + [112]) = $21
	*($3 + [116]) = $22
	*($3 + [120]) = $11
	*($3 + [124]) = $10
	*($3 + [128]) = $23
	*($3 + [132]) = $24
	*($3 + [136]) = $25
	CALL $558(($3 + [64]), ($3 + [40]))
	$8 = *($1)
	*($1 + [176]) = CALL db_store_i64(*($4 + [8]), (int_64)5094023804032647168, *(*($0 + [8])), $8, $5, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$8 >= (uint_64)*($4 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($5)
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [144])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $560(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

int_32 .FUNC $176 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($3 + [136])))
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [96])))
	if ( (*($3 + [56]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [64])))
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $177 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8, int_32 $9, int_64 $10, int_64 $11, int_64 $12, int_32 $13, int_64 $14, int_64 $15, int_32 $16, int_64 $17, int_32 $18)
{
	int_32 $19
	$19 = ($global$0 - [256])
	$global$0 = $19
	*($19 + [200]) = $4
	*($19 + [208]) = $2
	*($19 + [192]) = $10
	*($19 + [184]) = $12
	*($19 + [176]) = $14
	*($19 + [175]) = $3
	*($19 + [174]) = $5
	*($19 + [160]) = $8
	*($19 + [159]) = $9
	*($19 + [144]) = $11
	*($19 + [136]) = $15
	*($19 + [128]) = $17
	*($19 + [127]) = $18
	CALL require_auth($1)
	*(($18 = ($19 + [112]))) = [0]
	*($19 + [96]) = (int_64)-1
	*($19 + [104]) = (int_64)0
	$1 = *($0)
	*($19 + [80]) = $1
	*($19 + [88]) = $1
	*($19 + [12]) = $0
	*($19 + [24]) = $6
	*($19 + [28]) = $7
	*($19 + [52]) = $13
	*($19 + [64]) = $16
	*($19 + [4]) = ($19 + [208])
	*($19) = ($19 + [80])
	*($19 + [8]) = ($19 + [175])
	*($19 + [16]) = ($19 + [200])
	*($19 + [20]) = ($19 + [174])
	*($19 + [32]) = ($19 + [160])
	*($19 + [36]) = ($19 + [159])
	*($19 + [40]) = ($19 + [192])
	*($19 + [44]) = ($19 + [144])
	*($19 + [48]) = ($19 + [184])
	*($19 + [56]) = ($19 + [176])
	*($19 + [60]) = ($19 + [136])
	*($19 + [68]) = ($19 + [128])
	*($19 + [72]) = ($19 + [127])
	*($19 + [248]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($19 + [80])) ){ goto $label$1 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$1
	*($19 + [228]) = $19
	*($19 + [224]) = ($19 + [80])
	*($19 + [232]) = ($19 + [248])
	*(($0 = CALL $7([184])) + [24]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [56 align=4]) = (int_64)0
	*($0 + [64]) = [0]
	*($0 + [72]) = (int_64)0
	*($0 + [88 align=4]) = (int_64)0
	*($0 + [96]) = [0]
	*($0 + [104]) = (int_64)0
	*($0 + [120]) = (int_64)0
	*($0 + [128 align=4]) = (int_64)0
	*($0 + [136]) = [0]
	*($0 + [172]) = ($19 + [80])
	CALL $178(($19 + [224]), $0)
	*($19 + [240]) = $0
	$1 = *($0)
	*($19 + [224]) = $1
	$13 = *($0 + [176])
	*($19 + [220]) = $13
	$7 = ($19 + [108])
	$16 = *($7)
	if ( ((uint_32)$16 >= (uint_32)*($18)) ){ goto $label$4 }
	*($16 + [8]) = $1
	*($16 + [16]) = $13
	*($19 + [240]) = [0]
	*($16) = $0
	*($7) = ($16 + [24])
	$0 = *($19 + [240])
	*($19 + [240]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL $175(($19 + [104]), ($19 + [240]), ($19 + [224]), ($19 + [220]))
	$0 = *($19 + [240])
	*($19 + [240]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( (*($0 + [128]) & [1]) ){ goto $label$9 }
	if ( (*($0 + [88]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($0 + [136])))
	if ( ((*($0 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($0 + [96])))
	if ( (*($0 + [56]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($0 + [56]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($0 + [64])))
	
.LABEL $label$5
	CALL $9($0)
	
.LABEL $label$2
	CALL $176(($19 + [104]))
	$global$0 = ($19 + [256])
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [12]) != (int_32)[0])
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	*($2 + [8]) = $0
	CALL $550(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $171 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($global$0 - [160])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [9992])
	
.LABEL $label$1
	$5 = *($0)
	*($4 + [8]) = $1
	*($4 + [20]) = [10024]
	*($4 + [24]) = [0]
	*($4 + [28]) = [10024]
	*($4 + [32]) = [10024]
	*($4 + [36 align=4]) = (int_64)0
	*($4 + [44]) = [10024]
	*($4 + [48]) = [0]
	*($4 + [52]) = [10024]
	*($4 + [56]) = [10024]
	*($4 + [60]) = [10024]
	*($4 + [64]) = [0]
	*($4 + [68]) = [10024]
	*($4 + [72]) = $2
	*($4 + [80]) = $3
	*($4 + [88]) = (int_64)5937556300622899072
	*($4 + [16]) = *($0 + [83])
	*($4 + [96]) = (int_64)-4420674833730240512
	*(($0 = CALL $7([16]))) = $5
	*($0 + [8]) = (int_64)3617214756542218240
	*(($4 + [124])) = [0]
	$3 = ($0 + [16])
	*(($4 + [112])) = $3
	*(($4 + [108])) = $3
	*($4 + [104]) = $0
	*($4 + [116 align=4]) = (int_64)0
	CALL $161(($4 + [116]), [46])
	$6 = ($4 + [120])
	$0 = *($6)
	$3 = *($4 + [116])
	*($4 + [132]) = $3
	*($4 + [128]) = $3
	*($4 + [136]) = $0
	*($4 + [144]) = ($4 + [128])
	*($4 + [152]) = ($4 + [8])
	CALL $172(($4 + [152]), ($4 + [144]))
	CALL $163(($4 + [88]))
	$0 = *($4 + [116])
	if ( ($0 == 0) ){ goto $label$2 }
	*($6) = $0
	CALL $9($0)
	
.LABEL $label$2
	$0 = *($4 + [104])
	if ( ($0 == 0) ){ goto $label$3 }
	*(($4 + [108])) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [160])
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [12]) != (int_32)[0])
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	*($2 + [8]) = $0
	CALL $553(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $173 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8, int_64 $9, int_64 $10, int_64 $11, int_32 $12, int_64 $13, int_64 $14, int_32 $15, int_64 $16, int_32 $17)
{
	int_32 $18
	$18 = ($global$0 - [256])
	$global$0 = $18
	*($18 + [200]) = $3
	*($18 + [208]) = $1
	*($18 + [192]) = $9
	*($18 + [184]) = $11
	*($18 + [176]) = $13
	*($18 + [175]) = $2
	*($18 + [174]) = $4
	*($18 + [160]) = $7
	*($18 + [159]) = $8
	*($18 + [144]) = $10
	*($18 + [136]) = $14
	*($18 + [128]) = $16
	*($18 + [127]) = $17
	CALL require_auth(*($0))
	*(($17 = ($18 + [112]))) = [0]
	*($18 + [96]) = (int_64)-1
	*($18 + [104]) = (int_64)0
	$16 = *($0)
	*($18 + [80]) = $16
	*($18 + [88]) = $16
	*($18 + [12]) = $0
	*($18 + [24]) = $5
	*($18 + [28]) = $6
	*($18 + [52]) = $12
	*($18 + [64]) = $15
	*($18 + [4]) = ($18 + [208])
	*($18) = ($18 + [80])
	*($18 + [8]) = ($18 + [175])
	*($18 + [16]) = ($18 + [200])
	*($18 + [20]) = ($18 + [174])
	*($18 + [32]) = ($18 + [160])
	*($18 + [36]) = ($18 + [159])
	*($18 + [40]) = ($18 + [192])
	*($18 + [44]) = ($18 + [144])
	*($18 + [48]) = ($18 + [184])
	*($18 + [56]) = ($18 + [176])
	*($18 + [60]) = ($18 + [136])
	*($18 + [68]) = ($18 + [128])
	*($18 + [72]) = ($18 + [127])
	*($18 + [248]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($18 + [80])) ){ goto $label$1 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$1
	*($18 + [228]) = $18
	*($18 + [224]) = ($18 + [80])
	*($18 + [232]) = ($18 + [248])
	*(($0 = CALL $7([184])) + [24]) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [56 align=4]) = (int_64)0
	*($0 + [64]) = [0]
	*($0 + [72]) = (int_64)0
	*($0 + [88 align=4]) = (int_64)0
	*($0 + [96]) = [0]
	*($0 + [104]) = (int_64)0
	*($0 + [120]) = (int_64)0
	*($0 + [128 align=4]) = (int_64)0
	*($0 + [136]) = [0]
	*($0 + [172]) = ($18 + [80])
	CALL $174(($18 + [224]), $0)
	*($18 + [240]) = $0
	$1 = *($0)
	*($18 + [224]) = $1
	$12 = *($0 + [176])
	*($18 + [220]) = $12
	$6 = ($18 + [108])
	$15 = *($6)
	if ( ((uint_32)$15 >= (uint_32)*($17)) ){ goto $label$4 }
	*($15 + [8]) = $1
	*($15 + [16]) = $12
	*($18 + [240]) = [0]
	*($15) = $0
	*($6) = ($15 + [24])
	$0 = *($18 + [240])
	*($18 + [240]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL $175(($18 + [104]), ($18 + [240]), ($18 + [224]), ($18 + [220]))
	$0 = *($18 + [240])
	*($18 + [240]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( (*($0 + [128]) & [1]) ){ goto $label$9 }
	if ( (*($0 + [88]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($0 + [136])))
	if ( ((*($0 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($0 + [96])))
	if ( (*($0 + [56]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($0 + [56]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($0 + [64])))
	
.LABEL $label$5
	CALL $9($0)
	
.LABEL $label$2
	CALL $176(($18 + [104]))
	$global$0 = ($18 + [256])
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)5094023804032647168, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $182($7, $9)
	*($3 + [36]) = [0]
	*($3 + [32]) = $7
	$8 = *(*(CALL $556(($3 + [32])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	$9 = *($5 + [8])
	*($1 + [16]) = *($9)
	$7 = *($9)
	if ( ((int_32)$7 != (int_32)*($6 + [79])) ){ goto $label$5 }
	*($1 + [24]) = *(*($5 + [16]))
	*($1 + [32]) = *(*($5 + [20]))
	$7 = *($5 + [24])
	*(($1 + [48])) = *(($7 + [8]))
	*($1 + [40]) = *($7)
	CALL $19(($1 + [56]), *($5 + [28]))
	$9 = *(($5 + [8]))
	$7 = *($9)
	
.LABEL $label$5
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [80])) ){ goto $label$6 }
	*($1 + [160]) = *(*($5 + [32]))
	*($1 + [168]) = *(*($5 + [36]))
	$7 = *($9)
	
.LABEL $label$6
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [81])) ){ goto $label$7 }
	*($1 + [104]) = *(*($5 + [40]))
	*($1 + [112]) = *(*($5 + [44]))
	*($1 + [120]) = *(*($5 + [48]))
	CALL $19(($1 + [128]), *($5 + [52]))
	$7 = *(*(($5 + [8])))
	
.LABEL $label$7
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [82])) ){ goto $label$8 }
	*($1 + [72]) = *(*($5 + [56]))
	*($1 + [80]) = *(*($5 + [60]))
	CALL $19(($1 + [88]), *($5 + [64]))
	$7 = *(*(($5 + [8])))
	
.LABEL $label$8
	$9 = ($1 + [16])
	if ( ((int_32)($7 & [255]) != (int_32)*($6 + [83])) ){ goto $label$10 }
	*($1 + [144]) = *(*($5 + [68]))
	*($1 + [152]) = *(*($5 + [72]))
	$6 = ($1 + [152])
	$10 = ($1 + [144])
	goto $label$9 
	
.LABEL $label$10
	$6 = ($1 + [152])
	$10 = ($1 + [144])
	
.LABEL $label$9
	*($1 + [169]) = [1]
	*($3 + [24]) = [0]
	*($3 + [8]) = ($3 + [24])
	$11 = ($1 + [8])
	*($3 + [36]) = $11
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	$12 = ($1 + [24])
	*($3 + [44]) = $12
	$13 = ($1 + [32])
	*($3 + [48]) = $13
	$14 = ($1 + [40])
	*($3 + [52]) = $14
	$15 = ($1 + [56])
	*($3 + [56]) = $15
	$16 = ($1 + [72])
	*($3 + [60]) = $16
	$17 = ($1 + [80])
	*($3 + [64]) = $17
	$18 = ($1 + [88])
	*($3 + [68]) = $18
	$19 = ($1 + [104])
	*($3 + [72]) = $19
	$20 = ($1 + [112])
	*($3 + [76]) = $20
	$21 = ($1 + [120])
	*($3 + [80]) = $21
	$22 = ($1 + [128])
	*($3 + [84]) = $22
	*($3 + [88]) = $10
	*($3 + [92]) = $6
	$23 = ($1 + [160])
	*($3 + [96]) = $23
	$24 = ($1 + [168])
	*($3 + [100]) = $24
	$25 = ($1 + [169])
	*($3 + [104]) = $25
	CALL $557(($3 + [32]), ($3 + [8]))
	$7 = *($3 + [24])
	if ( ($7 <= [513]) ){ goto $label$12 }
	$5 = CALL $1($7)
	goto $label$11 
	
.LABEL $label$12
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$11
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $7)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $11
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $12
	*($3 + [48]) = $13
	*($3 + [52]) = $14
	*($3 + [56]) = $15
	*($3 + [60]) = $16
	*($3 + [64]) = $17
	*($3 + [68]) = $18
	*($3 + [72]) = $19
	*($3 + [76]) = $20
	*($3 + [80]) = $21
	*($3 + [84]) = $22
	*($3 + [88]) = $10
	*($3 + [92]) = $6
	*($3 + [96]) = $23
	*($3 + [100]) = $24
	*($3 + [104]) = $25
	CALL $558(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [176]) = CALL db_store_i64(*($4 + [8]), (int_64)5094023804032647168, *(*($0 + [8])), $8, $5, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$8 >= (uint_64)*($4 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($5)
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [112])
}

void .FUNC $179 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
	$4 = *($0)
	*($3 + [24]) = (int_64)3617214756542218240
	*($3 + [16]) = $1
	*((($0 = CALL $7([16])) + [8])) = *($3 + [24])
	*($0) = *($3 + [16])
	*(($3 + [8])) = $2
	$5 = ($0 + [16])
	*($3 + [52]) = $5
	*($3 + [48]) = $0
	*($3 + [56]) = $5
	*($3 + [32]) = $1
	*($3 + [40]) = $2
	*($3) = $1
	CALL $180($4, (int_64)-4420683982430011392, ($3 + [48]), $3)
	$0 = *($3 + [48])
	if ( ($0 == 0) ){ goto $label$2 }
	*($3 + [52]) = $0
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($3 + [64])
}

void .FUNC $361 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$9 = *(($1 + [32]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5001621371248181248, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $589 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [48])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($3 + [56]) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [64])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [72]) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [80])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [88]) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [96])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$7
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [104]) = *($2 + [8])
	*($4) = (*($4) + [8])
	*($2 + [8]) = $5
	CALL $590(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $588 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [41])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $589(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $522 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $584 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7176376055052107776)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $336(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [8]))
	*($2 + [32]) = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [16]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($5 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$4 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($5)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $586 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $581 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $580 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [88]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-8462961477395939328)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $356(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $583 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $582 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $237 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [1])
	*($1 + [44]) = (*($1 + [44]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = ($1 + [48])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [48]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [64])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [84]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $95 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $28($0, (int_64)6110391461790506128) ){ goto $label$2 }
	CALL eosio_assert([0], [9057])
	
.LABEL $label$2
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$1 = *($0)
	*($3) = $1
	*($3 + [8]) = $1
	$4 = CALL db_find_i64($1, $1, (int_64)4730634643120193536, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $96($3, $4) + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$3
	$1 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3)) ){ goto $label$4 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$4
	*(($0 = CALL $7([32])) + [16]) = $3
	*($0 + [8]) = (int_64)0
	*($0) = $2
	CALL memcpy(($3 + [48]), $0, [8])
	$4 = ($0 + [8])
	CALL memcpy((($3 + [48]) | [8]), $4, [8])
	$2 = *($0)
	$5 = ($3 + [8])
	*($0 + [20]) = CALL db_store_i64(*($5), (int_64)4730634643120193536, $1, $2, ($3 + [48]), [16])
	$6 = ($3 + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$5 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$2 = *($0)
	$7 = *($5)
	*($3 + [72]) = *($4)
	*($0 + [24]) = CALL db_idx64_store($7, (int_64)4730634643120193536, $1, $2, ($3 + [72]))
	*($3 + [72]) = $0
	$1 = *($0)
	*($3 + [48]) = $1
	$5 = *(($0 + [20]))
	*($3 + [44]) = $5
	$6 = ($3 + [28])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($3 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $1
	*($4 + [16]) = $5
	*($3 + [72]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	$0 = *($3 + [72])
	*($3 + [72]) = [0]
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $97(($3 + [24]), ($3 + [72]), ($3 + [48]), ($3 + [44]))
	$0 = *($3 + [72])
	*($3 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9($0)
	
.LABEL $label$6
	$5 = *($3 + [24])
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = ($3 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($3 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
}

void .FUNC $235 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [48])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [48]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [64])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [84]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $479 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [184]), $5, [8])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$10
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$11
	CALL memcpy(($3 + [168]), $5, [8])
	$5 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$12
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [64])
	if ( ((int_32)$6 != (int_32)[64]) ){ goto $label$13 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$13
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [72])
	if ( ((int_32)$6 != (int_32)[72]) ){ goto $label$14 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$14
	$4 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [80])
	if ( ((int_32)$6 != (int_32)[80]) ){ goto $label$15 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$15
	CALL memcpy(($3 + [136]), $5, [8])
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [88])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $102($3, *($3 + [216]), *($3 + [208]), *($3 + [200]), *($3 + [192]), *($3 + [184]), *($3 + [176]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [144]), *($3 + [136]))
	$global$0 = ($3 + [224])
}

int_32 .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [24]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $535(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $70(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $572 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $574 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-8462961540019654656)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $322(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $575 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $528(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $576 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $415(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $577 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [28]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-8462961772248301568)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $326(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $471 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [168])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [168])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [159]), $5, [1])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [17])
	if ( ((uint_32)($4 + [-17]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [144]), $5, [8])
	*(($3 + [32])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [25])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $72(($3 + [8]), *($3 + [168]), *($3 + [160]), *($3 + [159]), *($3 + [144]))
	$global$0 = ($3 + [176])
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	$4 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [16])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [16])
	$7 = ($1 + [8])
	$8 = *($1)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $1($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [40]) = $5
	*($3 + [32]) = $1
	CALL $531(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($2)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-208])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-4])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [33])
	*($3 + [48]) = ($1 + [34])
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [56])
	*($3 + [60]) = ($1 + [72])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [104])
	*($3 + [72]) = ($1 + [120])
	*($3 + [76]) = ($1 + [136])
	*($3 + [80]) = ($1 + [152])
	*($3 + [84]) = ($1 + [168])
	*($3 + [88]) = ($1 + [172])
	*($3 + [92]) = ($1 + [176])
	*($3 + [96]) = ($1 + [180])
	*($3 + [104]) = ($1 + [182])
	*($3 + [100]) = ($1 + [181])
	*($3 + [108]) = ($1 + [183])
	*($3 + [112]) = ($1 + [184])
	*($3 + [116]) = ($1 + [185])
	*($3 + [120]) = ($1 + [186])
	*($3 + [124]) = ($1 + [192])
	*($3 + [128]) = ($1 + [200])
	*($3 + [132]) = ($1 + [208])
	*($3 + [136]) = ($1 + [212])
	*($3 + [140]) = ($1 + [213])
	CALL $65(($3 + [24]), ($3 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $2, [204])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [144])
}

void .FUNC $472 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [168])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [168])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [167]), $5, [1])
	*($3 + [152]) = (int_64)0
	$5 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [17])
	if ( ((int_32)$4 != (int_32)[17]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [151]), $5, [1])
	*(($3 + [32])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [18])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $77(($3 + [8]), *($3 + [168]), *($3 + [167]), *($3 + [152]), *($3 + [151]))
	$global$0 = ($3 + [176])
}

void .FUNC $475 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $95(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $474 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [13223])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $83($3, *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [160])
}

void .FUNC $477 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [152]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $6, [8])
	*(($3 + [32])) = $5
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $99(($3 + [8]), *($3 + [152]), *($3 + [144]))
	$global$0 = ($3 + [160])
}

void .FUNC $232 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

int_32 .FUNC $408 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [136]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($4 + [136]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [28 align=4]) = (int_64)361417177238274561
	*($4 + [36]) = [151521030]
	*($4 + [40]) = [2826]
	*($4 + [42 align=2]) = (int_64)144396684594708993
	*($4 + [50]) = [3]
	*($4 + [52 align=4]) = (int_64)289077004450529537
	*($4 + [60]) = [134678021]
	*($4 + [64]) = [265]
	*($4 + [66 align=2]) = (int_64)216736857432785666
	*($4 + [74 align=2]) = [67305985]
	*($4 + [78]) = [261]
	*($4 + [80]) = [2]
	*($4 + [81 align=1]) = (int_64)144399970194490371
	*($4 + [89 align=1]) = (int_64)433757350076154369
	*($4 + [97 align=1]) = [513]
	*($4 + [99 align=1]) = (int_64)723118041428460547
	*($4 + [107 align=1]) = (int_64)289077004467372545
	*($4 + [115 align=1]) = [261]
	*($4 + [117]) = [2]
	*($4 + [120]) = (int_64)72058693550160512
	*($4 + [128]) = [770]
	*($4 + [130]) = [4]
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [136])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $551 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [13]) = ((int_32)*(*($0) + [36]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [13]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [44]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [14]) = ((int_32)*($0 + [48]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	*($2 + [8]) = $0
	CALL $552(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $93 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	$6 = ($global$0 - [80])
	$global$0 = $6
	*($6 + [71]) = $4
	*($6 + [72]) = $3
	*($6 + [70]) = $5
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$5 = [0]
	*(($6 + [56])) = [0]
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	$1 = *($0)
	*($6 + [24]) = $1
	*($6 + [32]) = $1
	$0 = CALL db_find_i64($1, $1, (int_64)-4157500428759203840, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $67(($6 + [24]), $0)
	if ( ((int_32)*($5 + [28]) == (int_32)($6 + [24])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9772])
	
.LABEL $label$2
	*($6 + [12]) = ($6 + [72])
	*($6 + [8]) = ($6 + [70])
	*($6 + [16]) = ($6 + [71])
	if ( $5 ){ goto $label$4 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$4
	CALL $94(($6 + [24]), $5, ($6 + [8]))
	$4 = *($6 + [48])
	if ( ($4 == 0) ){ goto $label$5 }
	$7 = ($6 + [52])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($0 + [24])))
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$8 }
	$5 = *(($6 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$5 = $4
	
.LABEL $label$6
	*($7) = $4
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($6 + [80])
}

void .FUNC $441 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $599(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$18
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$20
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$22
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$24 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$25 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$26 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$27 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$28 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$28
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$29 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$29
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [84])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$30 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$30
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [88])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$31 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$31
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [92])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$32 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$32
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [96])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$33 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$33
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [100])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$34 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$34
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [104])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$35 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$35
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [108])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$36 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$36
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [112])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$37 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$37
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [116])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$38 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$38
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $520 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5001621371248181248, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $360($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)-5001621371248181248, $6))
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [32])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $58 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = CALL $56($0, (int_64)4923678657436329872)
	$3 = [0]
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$4 = *($0)
	*($1) = $4
	*($1 + [8]) = $4
	*($1 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($4, $4, (int_64)-2063328927043158016, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $59($1, $0)
	
.LOOP $label$2:
	$0 = [0]
	$6 = CALL db_next_i64(*($5 + [28]), ($1 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $59($1, $6)
	
.LABEL $label$3
	CALL $60($1, $5)
	if ( ($0 == 0) ){ goto $label$1 }
	$5 = $0
	$3 = ($3 + [1])
	if ( ((uint_64)$2 >= (uint_64)((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)255)) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = *($1 + [24])
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($1 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [16])) = *($3 + [24])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *($5)
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $530(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $271 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $276 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [1])
	*($1 + [44]) = (*($1 + [44]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = ($1 + [48])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [48]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [64])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [84]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $275 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $274 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [48]) = (*($1 + [48]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [48])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [48]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [64])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [84]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $50 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL require_auth(*($0))
	if ( CALL $28($0, (int_64)6110391460749447424) ){ goto $label$1 }
	CALL eosio_assert([0], [8866])
	
.LABEL $label$1
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)-8281825045618098176, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $45(($2 + [8]), $4)
	if ( ((int_32)*($0 + [8]) == (int_32)($2 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$5
	$4 = CALL db_next_i64(*($0 + [12]), ($2 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	CALL $45(($2 + [8]), $4)
	
.LABEL $label$6
	CALL $51(($2 + [8]), $0)
	$5 = *($2 + [32])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($2 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$7
	*(($0 = CALL $7([24])) + [8]) = ($2 + [8])
	*($0) = $1
	CALL memcpy(($2 + [64]), $0, [8])
	$3 = *($0)
	$5 = CALL db_store_i64(*((($2 + [8]) + [8])), (int_64)-8281825045618098176, $6, $3, ($2 + [64]), [8])
	*($0 + [12]) = $5
	$4 = ($2 + [24])
	if ( (uint_64)($3 <= *($4)) ){ goto $label$8 }
	*($4) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($2 + [56]) = $0
	$3 = *($0)
	*($2 + [64]) = $3
	*($2 + [52]) = $5
	$7 = ($2 + [36])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($2 + [40]))) ){ goto $label$11 }
	*($4 + [8]) = $3
	*($4 + [16]) = $5
	*($2 + [56]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	$0 = *($2 + [56])
	*($2 + [56]) = [0]
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $52(($2 + [32]), ($2 + [56]), ($2 + [64]), ($2 + [52]))
	$0 = *($2 + [56])
	*($2 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$9
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($2 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $9($4)
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($2 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $5
	
.LABEL $label$12
	*($7) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($2 + [80])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $279 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $53 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [80])
	$global$0 = $6
	CALL require_auth($1)
	if ( (CALL $27($0) == 0) ){ goto $label$5 }
	if ( CALL $42($0, $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8257])
	if ( (CALL $42($0, $1) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8923])
	if ( (CALL $28($0, (int_64)6110391470983392144) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( CALL $28($0, (int_64)6110391470983392144) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8977])
	
.LABEL $label$1
	$7 = [0]
	$8 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$9 = $8)
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$9 = $10
	$11 = $7
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$9 = $10
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $11 ){ goto $label$12 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8364])
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( (*($3 + [4]) <= [257]) ){ goto $label$6 }
	CALL eosio_assert([0], [8460])
	
.LABEL $label$6
	$3 = [0]
	*(($6 + [72])) = [0]
	*($6 + [56]) = (int_64)-1
	*($6 + [64]) = (int_64)0
	$9 = *($0)
	*($6 + [40]) = $9
	*($6 + [48]) = $8
	$7 = CALL db_find_i64($9, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$3 = CALL $29(($6 + [40]), $7)
	if ( ((int_32)*($3 + [40]) == (int_32)($6 + [40])) ){ goto $label$13 }
	CALL eosio_assert([0], [11998])
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [8805])
	
.LABEL $label$13
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$16 }
	$9 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$11 = $7
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $11 ){ goto $label$19 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert([0], [8549])
	$8 = *($2)
	
.LABEL $label$15
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$20 }
	CALL eosio_assert([0], [9023])
	
.LABEL $label$20
	if ( ((int_64)*(($2 + [8])) == (int_64)*($3 + [8])) ){ goto $label$21 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$21
	CALL require_recipient($1)
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$22 }
	CALL eosio_assert([0], [9023])
	
.LABEL $label$22
	$10 = *(($2 + [8]))
	*((($6 + [24]) + [8])) = $10
	$9 = *($2)
	*(($6 + [8])) = $10
	*($6 + [24]) = $9
	*($6) = $9
	CALL $44($0, $1, $6)
	*($6 + [16]) = $2
	CALL $54(($6 + [40]), $3, ($6 + [16]))
	$12 = *($6 + [64])
	if ( ($12 == 0) ){ goto $label$23 }
	$2 = ($6 + [68])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$12) ){ goto $label$25 }
	
.LOOP $label$26:
	$7 = ($7 + [-24])
	$11 = *($7)
	*($7) = [0]
	if ( ($11 == 0) ){ goto $label$27 }
	CALL $9($11)
	
.LABEL $label$27
	if ( ((int_32)$12 != (int_32)$7) ){ goto $label$26 }
	$7 = *(($6 + [64]))
	goto $label$24 
	
.LABEL $label$25
	$7 = $12
	
.LABEL $label$24
	*($2) = $12
	CALL $9($7)
	
.LABEL $label$23
	$global$0 = ($6 + [80])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [12590])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12638])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12660])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $30(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	$6 = ($global$0 - [112])
	$global$0 = $6
	CALL require_auth((int_64)5937556299887047648)
	if ( ((int_64)CALL $56($0, (int_64)-3792729948836422512) != (int_64)(CASTING uint_64)(uint_32 $4)) ){ goto $label$1 }
	if ( CALL is_account($5) ){ goto $label$2 }
	CALL eosio_assert([0], [8728])
	
.LABEL $label$2
	$7 = *($0)
	*($6 + [48]) = (int_64)3617214756542218240
	*($6 + [40]) = $7
	*((($0 = CALL $7([16])) + [8])) = *($6 + [48])
	*($0) = *($6 + [40])
	*(($4 = ($6 + [16]))) = *(($2 + [8]))
	*($6) = $5
	*($6 + [8]) = *($2)
	CALL $18(($6 + [24]), $3)
	*((($6 + [56]) + [16])) = *($4)
	$2 = ($6 + [32])
	*(($4 = (($6 + [56]) + [32]))) = *($2)
	*($2) = [0]
	$2 = ($0 + [16])
	*($6 + [100]) = $2
	*($6 + [96]) = $0
	*($6 + [104]) = $2
	*($6 + [56]) = *($6)
	*($6 + [64]) = *($6 + [8])
	*($6 + [80]) = *($6 + [24])
	*($6 + [24]) = (int_64)0
	CALL $57($7, (int_64)8516769789752901632, ($6 + [96]), ($6 + [56]))
	if ( ((*($6 + [80]) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*($4))
	
.LABEL $label$3
	$0 = *($6 + [96])
	if ( ($0 == 0) ){ goto $label$4 }
	*($6 + [100]) = $0
	CALL $9($0)
	
.LABEL $label$4
	if ( ((*(($6 + [24])) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($6 + [32])))
	
.LABEL $label$1
	$global$0 = ($6 + [112])
}

int_64 .FUNC $56 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)4982871467403247616, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $33(($2 + [8]), $0)
	if ( ((int_32)*($0 + [36]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$3 = *($0 + [8])
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($6 + [32])))
	
.LABEL $label$8
	CALL $9($6)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($2 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $3
	
.LABEL $label$1
	CALL eosio_assert([0], [11974])
	return (unreachable)
}

void .FUNC $57 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	CALL $529(($4 + [52]), $3)
	CALL $163(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*(($4 + [56])) = $7
	CALL $9($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$6
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $453 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $452 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $18(($2 + [32]), ($1 + [24]))
	*(($7 = (($2 + [16]) + [8]))) = *(($1 + [48]))
	*($2 + [16]) = *($1 + [40])
	*((($2 + [48]) + [8])) = *($7)
	*($2 + [48]) = *($2 + [16])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*($0) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$7 = CALL $18(($2 + [80]), $6)
	$8 = *((($2 + [48]) + [8]))
	*((($2 + [64]) + [8])) = $8
	*(($2 + [8])) = $8
	$8 = *($2 + [48])
	*($2) = $8
	*($2 + [64]) = $8
	CALL void $0((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $7), (int_32 $2), (int_32 $1))
	if ( (*($2 + [80]) & [1]) ){ goto $label$4 }
	if ( (*($6) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($7 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($6 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $451 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $415(*($1), ($4 + [24]))
	$5 = ($4 + [40])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*(($4 + [48])) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $152 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *($2 + [24])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4730634643120193536, $1, *($2))
	*(*(($0 + [4])) + [24]) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13282])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)4730634643120193536)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [13228])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13228])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [16]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [11998])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $96($6, CALL $fimport$2(*($6), *($6 + [8]), (int_64)4730634643120193536, $5))
	if ( ((int_32)*($8 + [16]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$5
	*(($0 + [4])) = $8
	*(($8 + [24])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$4 = ($1 + [8])
	$5 = *($4)
	*($4) = (int_64)0
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4730634643120193536, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $96($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)4730634643120193536, $6))
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [24])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $156 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [256])
	$global$0 = $2
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($2 + [248])) = [0]
	*($2 + [232]) = (int_64)-1
	$1 = *($0)
	*($2 + [216]) = $1
	*($2 + [224]) = $1
	*($2 + [240]) = (int_64)0
	$3 = CALL db_lowerbound_i64($1, $1, (int_64)5094022140569452544, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $84(($2 + [216]), $3)
	$5 = ($4 + [16])
	
.LOOP $label$3:
	$3 = CALL db_next_i64(*($5), ($2 + [176]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL $84(($2 + [216]), $3)
	
.LABEL $label$4
	CALL $149(($2 + [216]), $4)
	goto $label$3 
	
.LABEL $label$2
	CALL eosio_assert([0], [13023])
	$3 = CALL db_next_i64(*([0] + [16]), ($2 + [176]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	CALL $84(($2 + [216]), $3)
	
.LABEL $label$5
	*((($2 + [176]) + [32])) = [0]
	*($2 + [192]) = (int_64)-1
	*($2 + [200]) = (int_64)0
	*($2 + [212]) = [0]
	$1 = *($0)
	*($2 + [176]) = $1
	*($2 + [184]) = $1
	*($2 + [168]) = ($2 + [176])
	*($2 + [164]) = [0]
	*($2 + [160]) = ($2 + [168])
	$6 = CALL $56($0, (int_64)5094024597612504768)
	*((($2 + [120]) + [32])) = [0]
	*($2 + [136]) = (int_64)-1
	*($2 + [144]) = (int_64)0
	$1 = *($0)
	*($2 + [120]) = $1
	*($2 + [128]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)5937556069193265024, (int_64)1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $74(($2 + [120]), $3) + [216]) == (int_32)($2 + [120])) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	*($2 + [80]) = (int_64)0
	CALL $150(($2 + [32]), ($2 + [168]), ($2 + [80]))
	$3 = *($2 + [164])
	if ( ((int_32)$3 == (int_32)*($2 + [36])) ){ goto $label$7 }
	$7 = (($2 + [216]) + [24])
	$8 = (($2 + [80]) | [8])
	$9 = (($2 + [120]) + [28])
	$10 = ($2 + [232])
	$11 = ($2 + [248])
	$12 = (int_64)0
	
.LOOP $label$8:
	if ( (uint_64)($6 <= $12) ){ goto $label$7 }
	$1 = *($3)
	$4 = *($9)
	$13 = *((($2 + [120]) + [24]))
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$13:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$12 }
	$4 = $3
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$11 }
	if ( ((int_32)*($5 + [216]) == (int_32)($2 + [120])) ){ goto $label$14 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$14
	if ( $5 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$3 = CALL db_find_i64(*($2 + [120]), *((($2 + [120]) + [8])), (int_64)5937556069193265024, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $74(($2 + [120]), $3)
	if ( ((int_32)*($5 + [216]) == (int_32)($2 + [120])) ){ goto $label$9 }
	CALL eosio_assert([0], [11998])
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	CALL eosio_assert([0], [9902])
	
.LABEL $label$9
	$14 = *($0)
	$4 = *($5 + [32])
	$1 = *($5 + [16])
	if ( ((int_64)CALL current_receiver() == (int_64)*($2 + [216])) ){ goto $label$15 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$15
	*(($3 = CALL $7([24])) + [12]) = ($2 + [216])
	*($3 + [8]) = $4
	*($3) = $1
	CALL memcpy(($2 + [80]), $3, [8])
	CALL memcpy($8, ($3 + [8]), [1])
	$1 = *($3)
	$5 = CALL db_store_i64(*((($2 + [216]) + [8])), (int_64)5094022140569452544, $14, $1, ($2 + [80]), [9])
	*($3 + [16]) = $5
	if ( (uint_64)($1 <= *($10)) ){ goto $label$16 }
	*($10) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($2 + [32]) = $3
	$1 = *($3)
	*($2 + [80]) = $1
	*($2 + [72]) = $5
	$13 = (($2 + [216]) + [28])
	$4 = *($13)
	if ( ((uint_32)$4 >= (uint_32)*($11)) ){ goto $label$19 }
	*($4 + [8]) = $1
	*($4 + [16]) = $5
	*($2 + [32]) = [0]
	*($4) = $3
	*($13) = ($4 + [24])
	$3 = *($2 + [32])
	*($2 + [32]) = [0]
	if ( $3 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $151($7, ($2 + [32]), ($2 + [80]), ($2 + [72]))
	$3 = *($2 + [32])
	*($2 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9($3)
	
.LABEL $label$17
	CALL $152(($2 + [160]))
	*($2 + [80]) = (int_64)0
	$12 = ((int_64)$12 + (int_64)1)
	CALL $150(($2 + [32]), ($2 + [168]), ($2 + [80]))
	$3 = *($2 + [164])
	if ( ((int_32)$3 != (int_32)*($2 + [36])) ){ goto $label$8 }
	
.LABEL $label$7
	$3 = CALL db_lowerbound_i64(*($2 + [176]), *(($2 + [184])), (int_64)4730634643120193536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$3 = CALL $96(($2 + [176]), $3)
	CALL $157(($2 + [176]), $3)
	$3 = CALL db_next_i64(*($3 + [20]), ($2 + [80]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = CALL $96(($2 + [176]), $3)
	CALL $157(($2 + [176]), $3)
	$3 = CALL db_next_i64(*($3 + [20]), ($2 + [80]))
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$21 }
	
.LABEL $label$20
	*(($2 + [112])) = [0]
	*($2 + [96]) = (int_64)-1
	$1 = *($0)
	*($2 + [80]) = $1
	*($2 + [88]) = $1
	*($2 + [104]) = (int_64)0
	$3 = CALL db_lowerbound_i64($1, $1, (int_64)6076636753632296960, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$22 }
	$4 = CALL $106(($2 + [80]), $3)
	$5 = ($4 + [84])
	
.LOOP $label$23:
	$3 = CALL db_next_i64(*($5), ($2 + [32]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$24 }
	CALL $106(($2 + [80]), $3)
	
.LABEL $label$24
	CALL $154(($2 + [80]), $4)
	goto $label$23 
	
.LABEL $label$22
	CALL eosio_assert([0], [13023])
	$3 = CALL db_next_i64(*([0] + [84]), ($2 + [32]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$25 }
	CALL $106(($2 + [80]), $3)
	
.LABEL $label$25
	$1 = CALL $56($0, (int_64)6076636753632096096)
	*($2 + [72]) = $1
	*($2 + [72]) = ((int_64)$1 + (int_64)((int_64)((int_64)CALL $24() / (int_64)1000000) & (int_64)4294967295))
	*(($2 + [64])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$1 = *($0)
	*($2 + [32]) = $1
	*($2 + [40]) = $1
	*($2 + [16]) = [9946]
	*($2 + [20]) = CALL $15([9946])
	*($2 + [8]) = *($2 + [16])
	CALL $32(($2 + [24]), ($2 + [8]))
	$4 = *(($2 + [60]))
	$13 = *($2 + [56])
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$31:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)6076636610723457328) ){ goto $label$30 }
	$4 = $3
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$13 == (int_32)$4) ){ goto $label$29 }
	if ( ((int_32)*($5 + [36]) == (int_32)($2 + [32])) ){ goto $label$32 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$32
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$3 = CALL db_find_i64(*($2 + [32]), *(($2 + [40])), (int_64)4982871467403247616, (int_64)6076636610723457328)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$27 }
	$5 = CALL $33(($2 + [32]), $3)
	if ( ((int_32)*($5 + [36]) == (int_32)($2 + [32])) ){ goto $label$28 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$28
	*($2 + [24]) = ($2 + [72])
	goto $label$26 
	
.LABEL $label$27
	$5 = [0]
	CALL eosio_assert([0], [9959])
	*($2 + [24]) = ($2 + [72])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$26
	CALL $158(($2 + [32]), $5, ($2 + [24]))
	$5 = *($2 + [56])
	if ( ($5 == 0) ){ goto $label$33 }
	$13 = ($2 + [60])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$35 }
	
.LOOP $label$36:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$37 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$38 }
	CALL $9(*(($4 + [32])))
	
.LABEL $label$38
	CALL $9($4)
	
.LABEL $label$37
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$36 }
	$3 = *(($2 + [56]))
	goto $label$34 
	
.LABEL $label$35
	$3 = $5
	
.LABEL $label$34
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$33
	$5 = *($2 + [104])
	if ( ($5 == 0) ){ goto $label$39 }
	$13 = ($2 + [108])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$41 }
	
.LOOP $label$42:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$43 }
	CALL $9($4)
	
.LABEL $label$43
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$42 }
	$3 = *(($2 + [104]))
	goto $label$40 
	
.LABEL $label$41
	$3 = $5
	
.LABEL $label$40
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$39
	$5 = *($2 + [144])
	if ( ($5 == 0) ){ goto $label$44 }
	$13 = ($2 + [148])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$46 }
	
.LOOP $label$47:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$48 }
	CALL $9($4)
	
.LABEL $label$48
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$47 }
	$3 = *(($2 + [144]))
	goto $label$45 
	
.LABEL $label$46
	$3 = $5
	
.LABEL $label$45
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$44
	$5 = *($2 + [200])
	if ( ($5 == 0) ){ goto $label$49 }
	$13 = ($2 + [204])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$51 }
	
.LOOP $label$52:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$53 }
	CALL $9($4)
	
.LABEL $label$53
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$52 }
	$3 = *(($2 + [200]))
	goto $label$50 
	
.LABEL $label$51
	$3 = $5
	
.LABEL $label$50
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$49
	$5 = *($2 + [240])
	if ( ($5 == 0) ){ goto $label$54 }
	$13 = ($2 + [244])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$56 }
	
.LOOP $label$57:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$58 }
	CALL $9($4)
	
.LABEL $label$58
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$57 }
	$3 = *(($2 + [240]))
	goto $label$55 
	
.LABEL $label$56
	$3 = $5
	
.LABEL $label$55
	*($13) = $5
	CALL $9($3)
	
.LABEL $label$54
	$global$0 = ($2 + [256])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$4 = ($1 + [8])
	$5 = *($4)
	*($4) = (int_64)0
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [84]))
}

void .FUNC $155 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	$2 = *($1 + [24])
	$5 = ( *(($1 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [24])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [24])
	$7 = ($1 + [8])
	$8 = *($1)
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $7
	*($4 + [44]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $540(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [40]), (int_64)0, $3, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($3)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [48])
}

int_32 .FUNC $404 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [216])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [288])) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*(($4 + [320])) = [0]
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [368]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $443(($4 + [16]), ($4 + [368]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [352]) + [8]))) = *($3)
	*($4 + [352]) = *($4)
	$3 = *($6)
	*((($4 + [368]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [352])
	*($4 + [32]) = $0
	*($4 + [368]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [372]) = ($4 + [344])
	*($4 + [368]) = ($4 + [16])
	CALL $444(($4 + [368]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($4 + [312]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($4 + [320])))
	if ( ((*($4 + [280]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($4 + [280]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [224]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*(($4 + [288])))
	$2 = [1]
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [232])))
	$global$0 = ($4 + [384])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [384])
	return $2
}

int_32 .FUNC $405 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [192]) + [24]))) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [256]) = ($4 + [176])
	*($4 + [40]) = ($4 + [192])
	CALL $457(($4 + [40]), ($4 + [256]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [184])
	*($4 + [24]) = *($4 + [176])
	*(($3 = (($4 + [240]) + [8]))) = *($9)
	*($4 + [240]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [256]) + [8])) = $9
	*((($4 + [40]) + [24])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [240])
	*($4 + [56]) = $0
	*($4 + [256]) = $0
	*($4 + [68 align=4]) = (int_64)361417177238274561
	*($4 + [76 align=4]) = (int_64)144408800781666054
	*($4 + [84]) = [1027]
	*($4 + [86 align=2]) = (int_64)72339081933160453
	*($4 + [94 align=2]) = [33620738]
	*($4 + [98]) = [1027]
	*($4 + [100 align=4]) = (int_64)216736870368216581
	*($4 + [108]) = [17171716]
	*($4 + [112]) = (int_64)73469379886514946
	*($4 + [120]) = [770]
	*($4 + [122 align=2]) = (int_64)72621656421500164
	*($4 + [130 align=2]) = [50462978]
	*($4 + [134]) = [1284]
	*($4 + [136]) = (int_64)506097522914230534
	*($4 + [144]) = [17434888]
	*($4 + [148]) = [770]
	*($4 + [150]) = [4]
	*($4 + [151 align=1]) = [67305985]
	*($4 + [155 align=1]) = [261]
	*($4 + [157]) = [2]
	*($4 + [160]) = (int_64)72058693550160512
	*($4 + [168]) = [770]
	*($4 + [170]) = [4]
	*(($9 = (($4 + [224]) + [8]))) = *($8)
	*($4 + [224]) = *($4 + [208])
	$0 = *($4 + [200])
	$1 = *($4 + [192])
	*($3) = *($9)
	*($4 + [240]) = *($4 + [224])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$10 = *((($4 + [240]) + [8]))
	*((($4 + [256]) + [8])) = $10
	*((($4 + [8]) + [8])) = $10
	$10 = *($4 + [240])
	*($4 + [8]) = $10
	*($4 + [256]) = $10
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	$2 = *($1 + [24])
	$5 = ( *(($1 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [24])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [24])
	$7 = ($1 + [8])
	$8 = *($1)
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $7
	*($4 + [44]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $540(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [40]), (int_64)0, $3, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($3)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [48])
}

void .FUNC $159 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	$6 = ($global$0 - [176])
	$global$0 = $6
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [9992])
	
.LABEL $label$1
	$7 = *($0)
	*(($6 + [40])) = *(($4 + [8]))
	*($6) = $1
	*($6 + [16]) = $2
	*($6 + [24]) = $3
	*($6 + [8]) = *($0 + [79])
	*($6 + [32]) = *($4)
	$4 = CALL $18(($6 + [48]), $5)
	*($6 + [60 align=4]) = (int_64)0
	*($6 + [68]) = [10024]
	*($6 + [72]) = [0]
	*($6 + [76]) = [10024]
	*($6 + [80]) = [10024]
	*($6 + [84]) = [10024]
	*($6 + [88]) = (int_64)0
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = (int_64)5937556300622899072
	*($6 + [112]) = (int_64)-4420674833730240512
	*(($0 = CALL $7([16]))) = $7
	*($0 + [8]) = (int_64)3617214756542218240
	*(($6 + [140])) = [0]
	$3 = ($0 + [16])
	*(($6 + [128])) = $3
	*(($6 + [124])) = $3
	*($6 + [120]) = $0
	*($6 + [132 align=4]) = (int_64)0
	$0 = *($4)
	$4 = ( *(($6 + [52])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($4 + [66])
	$1 = (CASTING uint_64)(uint_32 $4)
	$4 = ($6 + [132])
	
.LOOP $label$2:
	$0 = ($0 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$2 }
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $161($4, $0)
	$4 = *(($6 + [136]))
	$0 = *(($6 + [132]))
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	$0 = [0]
	
.LABEL $label$3
	*($6 + [148]) = $0
	*($6 + [144]) = $0
	*($6 + [152]) = $4
	*($6 + [160]) = ($6 + [144])
	*($6 + [168]) = $6
	CALL $162(($6 + [168]), ($6 + [160]))
	CALL $163(($6 + [104]))
	$0 = *($6 + [132])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($6 + [136])) = $0
	CALL $9($0)
	
.LABEL $label$5
	$0 = *($6 + [120])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [124])) = $0
	CALL $9($0)
	
.LABEL $label$6
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($6 + [56])))
	
.LABEL $label$7
	$global$0 = ($6 + [176])
}

int_32 .FUNC $400 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [272])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [188])) = [0]
	*(($4 + [200])) = (int_64)0
	*(($4 + [216])) = (int_64)0
	*($4 + [176]) = [0]
	*($4 + [168]) = (int_64)0
	*($4 + [180 align=4]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [256]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $454(($4 + [16]), ($4 + [256]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [240]) + [8]))) = *($3)
	*($4 + [240]) = *($4)
	$3 = *($6)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [240])
	*($4 + [32]) = $0
	*($4 + [256]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [260]) = ($4 + [232])
	*($4 + [256]) = ($4 + [16])
	CALL $455(($4 + [256]), ($4 + [168]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [180]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [180]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [188])))
	$global$0 = ($4 + [272])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [272])
	return $2
}

int_32 .FUNC $401 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [448])
	$global$0 = $3
	*(($4 = $3) + [408]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = [0]
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = [0]
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = [0]
	*($4 + [368]) = (int_64)0
	*($4 + [376]) = [0]
	*($4 + [384]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [400]) = [0]
	*($4 + [404]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $5)
	*($4 + [432]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $426(($4 + [16]), ($4 + [432]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($6 = (($4 + [416]) + [8]))) = *($3)
	*($4 + [416]) = *($4)
	$3 = *($6)
	*((($4 + [432]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [416])
	*($4 + [32]) = $0
	*($4 + [432]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	*($4 + [436]) = ($4 + [408])
	*($4 + [432]) = ($4 + [16])
	CALL $427(($4 + [432]), ($4 + [168]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	$global$0 = ($4 + [448])
	return [1]
}

int_32 .FUNC $402 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [344]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [216])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [288])) = [0]
	*($4 + [184]) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*(($4 + [320])) = [0]
	*($4 + [312]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = [0]
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $5)
	*($4 + [368]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $441(($4 + [24]), ($4 + [368]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [352]) + [8]))) = *($3)
	*($4 + [352]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [368]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [352])
	*($4 + [40]) = $0
	*($4 + [368]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [372]) = ($4 + [344])
	*($4 + [368]) = ($4 + [24])
	CALL $442(($4 + [368]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	$2 = [1]
	if ( (*($4 + [312]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($4 + [320])))
	if ( ((*($4 + [280]) & $2) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (*($4 + [280]) & $2) ){ goto $label$6 }
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [224]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*(($4 + [288])))
	$2 = [1]
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [232])))
	$global$0 = ($4 + [384])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [384])
	return $2
}

int_32 .FUNC $403 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [208]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $429(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [185])
	$9 = *($4 + [184])
	$0 = *($4 + [176])
	$1 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [224])
	return [1]
}

void .FUNC $273 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $421 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $415(*($1), ($0 + [24]))
	$3 = ($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$0 = ($0 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $455 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $18(($2 + [64]), ($1 + [12]))
	*(($6 = (($2 + [48]) + [8]))) = *(($1 + [32]))
	*(($7 = (($2 + [32]) + [8]))) = *(($1 + [48]))
	*($2 + [48]) = *($1 + [24])
	*($2 + [32]) = *($1 + [40])
	$8 = *($1 + [56])
	$9 = *($1 + [57])
	$10 = *($1 + [58])
	$11 = *($1 + [59])
	*((($2 + [96]) + [8])) = *($7)
	*((($2 + [80]) + [8])) = *($6)
	*($2 + [96]) = *($2 + [32])
	*($2 + [80]) = *($2 + [48])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $18(($2 + [144]), $5)
	$12 = *((($2 + [80]) + [8]))
	*((($2 + [128]) + [8])) = $12
	$13 = *((($2 + [96]) + [8]))
	*((($2 + [112]) + [8])) = $13
	*((($2 + [16]) + [8])) = $12
	*(($2 + [8])) = $13
	$12 = *($2 + [80])
	*($2 + [128]) = $12
	$13 = *($2 + [96])
	*($2 + [112]) = $13
	*($2 + [16]) = $12
	*($2) = $13
	CALL void $0((int_32 $4), (int_64 ($3 & [255])), (int_32 $6), (int_32 ($2 + [16])), (int_32 $2), (int_32 ($8 & [255])), (int_32 ($9 & [255])), (int_32 ($10 & [255])), (int_32 ($11 & [255])), (int_32 $1))
	if ( (*($2 + [144]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($5 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

void .FUNC $272 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [44]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [63])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $426 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [1])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $588(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([96])) + [80]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [48])
	*($3 + [68]) = ($5 + [56])
	*($3 + [72]) = ($5 + [64])
	*($3 + [76]) = ($5 + [72])
	CALL $539(($3 + [40]), ($3 + [32]))
	*($5 + [84]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $118(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $427 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_64 $23
	int_32 $24
	int_64 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	$2 = ($global$0 - [512])
	$global$0 = $2
	*(($3 = (($2 + [240]) + [8]))) = *(($1 + [56]))
	*(($4 = (($2 + [224]) + [8]))) = *(($1 + [72]))
	*(($5 = (($2 + [208]) + [8]))) = *(($1 + [88]))
	*($2 + [240]) = *($1 + [48])
	*($2 + [224]) = *($1 + [64])
	*($2 + [208]) = *($1 + [80])
	$6 = *($1 + [41])
	$7 = *($1 + [40])
	$8 = *($1 + [32])
	$9 = *($1 + [24])
	$10 = *($1 + [16])
	$11 = *($1 + [8])
	$12 = *($1 + [1])
	$13 = *($1)
	*(($14 = (($2 + [192]) + [8]))) = *(($1 + [104]))
	*(($15 = (($2 + [176]) + [8]))) = *(($1 + [120]))
	*(($16 = (($2 + [160]) + [8]))) = *(($1 + [136]))
	*(($17 = (($2 + [144]) + [8]))) = *(($1 + [152]))
	*(($18 = (($2 + [128]) + [8]))) = *(($1 + [168]))
	*($2 + [192]) = *($1 + [96])
	*($2 + [176]) = *($1 + [112])
	*($2 + [160]) = *($1 + [128])
	*($2 + [144]) = *($1 + [144])
	*($2 + [128]) = *($1 + [160])
	$19 = *($1 + [237])
	$20 = *($1 + [236])
	$21 = *($1 + [232])
	$22 = *($1 + [224])
	$23 = *($1 + [216])
	$24 = *($1 + [208])
	$25 = *($1 + [200])
	$26 = *($1 + [193])
	$27 = *($1 + [192])
	$28 = *($1 + [191])
	$29 = *($1 + [190])
	$30 = *($1 + [189])
	$31 = *($1 + [188])
	$32 = *($1 + [184])
	$33 = *($1 + [180])
	$34 = *($1 + [176])
	*((($2 + [368]) + [8])) = *($18)
	*((($2 + [352]) + [8])) = *($17)
	*((($2 + [336]) + [8])) = *($16)
	*((($2 + [320]) + [8])) = *($15)
	*((($2 + [304]) + [8])) = *($14)
	*($2 + [368]) = *($2 + [128])
	*($2 + [352]) = *($2 + [144])
	*($2 + [336]) = *($2 + [160])
	*($2 + [320]) = *($2 + [176])
	*($2 + [304]) = *($2 + [192])
	*((($2 + [288]) + [8])) = *($5)
	*((($2 + [272]) + [8])) = *($4)
	*((($2 + [256]) + [8])) = *($3)
	*($2 + [288]) = *($2 + [208])
	*($2 + [272]) = *($2 + [224])
	*($2 + [256]) = *($2 + [240])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($2 + [496]) + [8]))) = *((($2 + [256]) + [8]))
	*(($4 = (($2 + [480]) + [8]))) = *((($2 + [272]) + [8]))
	*(($5 = (($2 + [464]) + [8]))) = *((($2 + [288]) + [8]))
	*(($14 = (($2 + [448]) + [8]))) = *((($2 + [304]) + [8]))
	*(($15 = (($2 + [432]) + [8]))) = *((($2 + [320]) + [8]))
	*($2 + [496]) = *($2 + [256])
	*($2 + [480]) = *($2 + [272])
	*($2 + [464]) = *($2 + [288])
	*($2 + [448]) = *($2 + [304])
	*($2 + [432]) = *($2 + [320])
	*(($16 = (($2 + [416]) + [8]))) = *((($2 + [336]) + [8]))
	*(($17 = (($2 + [400]) + [8]))) = *((($2 + [352]) + [8]))
	*(($18 = (($2 + [384]) + [8]))) = *((($2 + [368]) + [8]))
	*((($2 + [112]) + [8])) = *($3)
	*((($2 + [96]) + [8])) = *($4)
	*($2 + [416]) = *($2 + [336])
	*($2 + [400]) = *($2 + [352])
	*($2 + [384]) = *($2 + [368])
	*($2 + [112]) = *($2 + [496])
	*($2 + [96]) = *($2 + [480])
	*((($2 + [80]) + [8])) = *($5)
	*($2 + [80]) = *($2 + [464])
	*((($2 + [64]) + [8])) = *($14)
	*($2 + [64]) = *($2 + [448])
	*((($2 + [48]) + [8])) = *($15)
	*($2 + [48]) = *($2 + [432])
	*((($2 + [32]) + [8])) = *($16)
	*($2 + [32]) = *($2 + [416])
	*((($2 + [16]) + [8])) = *($17)
	*($2 + [16]) = *($2 + [400])
	*(($2 + [8])) = *($18)
	*($2) = *($2 + [384])
	CALL void $0((int_32 ($13 & [255])), (int_32 ($12 & [255])), (int_32 $11), (int_64 $10), (int_64 $9), (int_64 $8), (int_64 ($7 & [255])), (int_32 ($6 & [255])), (int_32 ($2 + [112])), (int_32 ($2 + [96])), (int_32 ($2 + [80])), (int_32 ($2 + [64])), (int_32 ($2 + [48])), (int_32 ($2 + [32])), (int_32 ($2 + [16])), (int_32 $2), (int_32 $34), (int_32 $33), (int_32 $32), (int_32 ($31 & [255])), (int_32 ($30 & [255])), (int_32 ($29 & [255])), (int_32 ($28 & [255])), (int_32 ($27 & [255])), (int_32 ($26 & [255])), (int_32 $25), (int_64 ($24 & [255])), (int_32 $23), (int_64 $22), (int_64 $21), (int_32 ($20 & [255])), (int_32 ($19 & [255])), (int_32 $1))
	$global$0 = ($2 + [512])
}

void .FUNC $424 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $496 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [33])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $207($3, *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [176])
}

void .FUNC $425 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $579 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $536 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $537(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $344 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [64])
	$global$0 = $1
	*(($1 + [56])) = [0]
	*($1 + [40]) = (int_64)-1
	*($1 + [48]) = (int_64)0
	$2 = *($0)
	*($1 + [24]) = $2
	*($1 + [32]) = $2
	*($1 + [8]) = [13176]
	*($1 + [12]) = CALL $15([13176])
	*($1) = *($1 + [8])
	CALL $32(($1 + [16]), $1)
	$3 = CALL $33(($1 + [24]), CALL $fimport$2($2, $2, (int_64)4982871467403247616, (int_64)-3792729948836422512))
	if ( ((int_32)*($3 + [36]) == (int_32)($1 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$1
	$2 = *($0 + [29])
	$4 = *($3 + [8])
	$5 = *($1 + [48])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($1 + [52])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($3 + [32])))
	
.LABEL $label$7
	CALL $9($3)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($1 + [48]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($1 + [64])
	return ((int_64)$4 == (int_64)$2)
}

void .FUNC $228 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $229 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [1])
	*($1 + [36]) = (*($1 + [36]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = ($1 + [36])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [59])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [68]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
	$9 = *($1 + [28])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [12])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [16]))
}

void .FUNC $224 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $225 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [36]) = (*($1 + [36]) + [1])
	*($1 + [32]) = (*($1 + [32]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = ($1 + [36])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [36]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [58])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [68]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [-1])
	$4 = ($1 + [8])
	*($3 + [24]) = *($4)
	$5 = ($1 + [16])
	*($3 + [32]) = *($5)
	$6 = *($1)
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-9])
	*($3 + [40]) = ($3 + [8])
	*($3 + [52]) = $4
	*($3 + [48]) = $1
	*($3 + [56]) = $5
	*($3 + [60]) = ($1 + [24])
	*($3 + [64]) = ($1 + [32])
	*($3 + [68]) = ($1 + [36])
	*($3 + [72]) = ($1 + [40])
	*($3 + [76]) = ($1 + [41])
	*($3 + [80]) = ($1 + [44])
	*($3 + [84]) = ($1 + [48])
	*($3 + [88]) = ($1 + [52])
	*($3 + [92]) = ($1 + [56])
	CALL $204(($3 + [48]), ($3 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($3 + [24]) + [8])
	*($3 + [48]) = *($4)
	if ( (CALL $16(($3 + [24]), ($3 + [48]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [72])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($3 + [40]), $6)
	*($7) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, (int_64)0, ($3 + [48]))
	
.LABEL $label$4
	*($3 + [48]) = *($5)
	if ( (CALL $16($2, ($3 + [48]), [8]) == 0) ){ goto $label$6 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($3 + [40]), $6)
	*($2) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($3 + [48]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
}

void .FUNC $220 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $221 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [32]) = (*($1 + [32]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [32]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [59])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [64]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $222 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13, int_32 $14, int_32 $15, int_32 $16, int_32 $17, int_32 $18, int_32 $19, int_32 $20, int_32 $21, int_32 $22, int_32 $23, int_32 $24, int_32 $25, int_64 $26, int_32 $27, int_64 $28, int_64 $29, int_32 $30, int_32 $31, int_32 $32)
{
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_64 $37
	int_64 $38
	int_64 $39
	int_64 $40
	$33 = ($global$0 - [528])
	$global$0 = $33
	*($33 + [167]) = $1
	*($33 + [168]) = $6
	$1 = (CASTING uint_32)(uint_64 CALL $56($0, (int_64)-3792729948836422512))
	if ( ((int_32)($1 & [255]) != (int_32)$2) ){ goto $label$3 }
	CALL require_auth($3)
	if ( (CALL $27($0) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL require_auth((int_64)5937556299887047648)
	if ( CALL $27($0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( CALL $42($0, $3) ){ goto $label$6 }
	if ( CALL $28($0, (int_64)6110391600498257792) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [8923])
	if ( CALL $28($0, (int_64)6110391600498257792) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9315])
	
.LABEL $label$4
	*(($33 + [152])) = [0]
	*($33 + [136]) = (int_64)-1
	*($33 + [144]) = (int_64)0
	*($33 + [156]) = [0]
	$6 = *($0)
	*($33 + [120]) = $6
	*($33 + [128]) = $6
	$34 = CALL db_find_i64($6, $6, (int_64)-7880044402153918464, $4)
	if ( ((int_32)$34 < (int_32)[0]) ){ goto $label$7 }
	$34 = CALL $62(($33 + [120]), $34)
	if ( ((int_32)*($34 + [20]) == (int_32)($33 + [120])) ){ goto $label$8 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$8
	*($33 + [180]) = ($33 + [167])
	*($33 + [176]) = ($33 + [168])
	CALL $81(($33 + [120]), $34, ($33 + [176]))
	
.LABEL $label$7
	$35 = ($1 & [255])
	if ( ((int_32)$35 != (int_32)$2) ){ goto $label$10 }
	*(($33 + [424])) = [0]
	*($33 + [408]) = (int_64)-1
	*($33 + [416]) = (int_64)0
	$6 = *($0)
	*($33 + [392]) = $6
	*($33 + [400]) = $6
	*($33 + [112]) = [9109]
	*($33 + [116]) = CALL $15([9109])
	*($33) = *($33 + [112])
	CALL $32(($33 + [176]), $33)
	$1 = *(($33 + [420]))
	$36 = *($33 + [416])
	if ( ((int_32)$36 == (int_32)$1) ){ goto $label$12 }
	
.LOOP $label$14:
	$2 = ($1 + [-24])
	$34 = *($2)
	if ( ((int_64)*($34) == (int_64)5937543767500543376) ){ goto $label$13 }
	$1 = $2
	if ( ((int_32)$36 != (int_32)$2) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$36 == (int_32)$1) ){ goto $label$12 }
	if ( ((int_32)*($34 + [36]) == (int_32)($33 + [392])) ){ goto $label$11 }
	CALL eosio_assert([0], [11998])
	goto $label$11 
	
.LABEL $label$12
	$34 = CALL $33(($33 + [392]), CALL $fimport$2(*($33 + [392]), *(($33 + [400])), (int_64)4982871467403247616, (int_64)5937543767500543376))
	if ( ((int_32)*($34 + [36]) == (int_32)($33 + [392])) ){ goto $label$11 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$11
	$37 = *($34 + [16])
	$38 = ((int_64)CALL $56($0, (int_64)5937548789047547040) * (int_64)10000000)
	$2 = CALL $15([9158])
	if ( ($2 <= [8]) ){ goto $label$18 }
	CALL eosio_assert([0], [12838])
	goto $label$17 
	
.LABEL $label$18
	if ( ($2 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$6 = (int_64)0
	
.LOOP $label$19:
	$1 = *(($2 + [9157]))
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$20 }
	CALL eosio_assert([0], [12883])
	
.LABEL $label$20
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$19 }
	goto $label$15 
	
.LABEL $label$16
	$6 = (int_64)0
	
.LABEL $label$15
	$39 = ((int_64)$6 << (int_64)8)
	if ( (uint_64)(((int_64)$38 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$21 }
	CALL eosio_assert([0], [12936])
	
.LABEL $label$21
	$40 = ((int_64)$39 | (int_64)4)
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	$2 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$39 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$6 = $39
	$1 = $2
	$2 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	$6 = $39
	
.LOOP $label$26:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$1 = ((int_32)$2 < (int_32)[6])
	$34 = ($2 + [1])
	$2 = $34
	if ( $1 ){ goto $label$26 }
	$2 = ($34 + [1])
	if ( ((int_32)$34 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [8364])
	
.LABEL $label$22
	$6 = *($0)
	*($33 + [16]) = (int_64)3617214756542218240
	*($33 + [8]) = $3
	$2 = CALL $7([16])
	*(($33 + [72])) = $40
	*(($33 + [88])) = [0]
	*($2) = *($33 + [8])
	*(($2 + [8])) = *($33 + [16])
	*($33 + [96]) = $2
	*($33 + [48]) = $3
	*($33 + [56]) = $37
	*($33 + [64]) = $38
	*($33 + [80]) = (int_64)0
	$2 = ($2 + [16])
	*($33 + [104]) = $2
	*($33 + [100]) = $2
	$1 = ($33 + [80])
	$2 = CALL $15([9363])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$29 }
	*(($33 + [80])) = ($2 << [1])
	$34 = ($1 + [1])
	if ( $2 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$36 = (($2 + [16]) & [-16])
	$34 = CALL $7($36)
	*(($33 + [88])) = $34
	*(($33 + [84])) = $2
	*($33 + [80]) = ($36 | [1])
	
.LABEL $label$28
	CALL memcpy($34, [9363], $2)
	
.LABEL $label$27
	*(($34 + $2)) = [0]
	$2 = (($33 + [96]) + [8])
	$34 = *($2)
	*($2) = [0]
	*((($33 + [176]) + [24])) = *((($33 + [48]) + [24]))
	*(($2 = (($33 + [176]) + [40]))) = *(($1 + [8]))
	$39 = *($1)
	*(($33 + [80])) = [0]
	*($33 + [512]) = *($33 + [96])
	*($33 + [520]) = $34
	*($33 + [96]) = (int_64)0
	*($33 + [176]) = *($33 + [48])
	*($33 + [184]) = *((($33 + [48]) + [8]))
	*($33 + [192]) = *($33 + [64])
	*($33 + [208]) = $39
	*(($33 + [84])) = [0]
	*((($33 + [48]) + [40])) = [0]
	CALL $37($6, (int_64)-3617168760277827584, ($33 + [512]), ($33 + [176]))
	if ( ((*($33 + [208]) & [1]) == 0) ){ goto $label$30 }
	CALL $9(*($2))
	
.LABEL $label$30
	$2 = *($33 + [512])
	if ( ($2 == 0) ){ goto $label$31 }
	*($33 + [516]) = $2
	CALL $9($2)
	
.LABEL $label$31
	if ( ((*((($33 + [48]) + [32])) & [1]) == 0) ){ goto $label$32 }
	CALL $9(*(($33 + [88])))
	
.LABEL $label$32
	$6 = *($0)
	$2 = [0]
	*((($33 + [176]) + [32])) = [0]
	*($33 + [184]) = $6
	*($33 + [176]) = $6
	*($33 + [192]) = (int_64)-1
	*($33 + [200]) = (int_64)0
	$1 = CALL db_find_i64($6, $6, (int_64)5937556069193265024, $4)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$34 }
	$2 = CALL $74(($33 + [176]), $1)
	if ( ((int_32)*($2 + [216]) == (int_32)($33 + [176])) ){ goto $label$33 }
	CALL eosio_assert([0], [11998])
	goto $label$33 
	
.LABEL $label$34
	CALL eosio_assert([0], [9391])
	CALL eosio_assert([0], [13189])
	CALL eosio_assert([0], [13023])
	
.LABEL $label$33
	$1 = CALL db_next_i64(*($2 + [220]), ($33 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$35 }
	CALL $74(($33 + [176]), $1)
	
.LABEL $label$35
	CALL $82(($33 + [176]), $2)
	$34 = *($33 + [200])
	if ( ($34 == 0) ){ goto $label$36 }
	$36 = ($33 + [204])
	$2 = *($36)
	if ( ((int_32)$2 == (int_32)$34) ){ goto $label$38 }
	
.LOOP $label$39:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$40 }
	CALL $9($1)
	
.LABEL $label$40
	if ( ((int_32)$34 != (int_32)$2) ){ goto $label$39 }
	$2 = *(($33 + [200]))
	goto $label$37 
	
.LABEL $label$38
	$2 = $34
	
.LABEL $label$37
	*($36) = $34
	CALL $9($2)
	
.LABEL $label$36
	$34 = *($33 + [416])
	if ( ($34 == 0) ){ goto $label$10 }
	$36 = ($33 + [420])
	$2 = *($36)
	if ( ((int_32)$2 == (int_32)$34) ){ goto $label$42 }
	
.LOOP $label$43:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$44 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$45 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$45
	CALL $9($1)
	
.LABEL $label$44
	if ( ((int_32)$34 != (int_32)$2) ){ goto $label$43 }
	$2 = *(($33 + [416]))
	goto $label$41 
	
.LABEL $label$42
	$2 = $34
	
.LABEL $label$41
	*($36) = $34
	CALL $9($2)
	
.LABEL $label$10
	if ( ((int_32)*($33 + [167]) != (int_32)$35) ){ goto $label$46 }
	*(($33 + [40])) = [0]
	*($33 + [24]) = (int_64)-1
	*($33 + [32]) = (int_64)0
	$6 = *($0)
	*($33 + [8]) = $6
	*($33 + [16]) = $6
	$2 = CALL db_find_i64($6, $6, (int_64)5937556069193265024, $4)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$47 }
	if ( ((int_32)*(CALL $74(($33 + [8]), $2) + [216]) == (int_32)($33 + [8])) ){ goto $label$48 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$48
	CALL eosio_assert([0], [9430])
	
.LABEL $label$47
	if ( ((int_64)CALL current_receiver() == (int_64)*($33 + [8])) ){ goto $label$49 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$49
	*(($2 = CALL $7([232])) + [216]) = ($33 + [8])
	*($2 + [8]) = $5
	*($2) = $4
	*($2 + [24]) = $26
	*($2 + [33]) = $7
	*($2 + [34]) = $8
	*($2 + [16]) = *($33 + [168])
	*($2 + [32]) = *($33 + [167])
	*($2 + [40]) = *($9)
	*(($2 + [48])) = *(($9 + [8]))
	*($2 + [56]) = *($10)
	*(($2 + [64])) = *(($10 + [8]))
	*($2 + [72]) = *($11)
	*(($2 + [80])) = *(($11 + [8]))
	*(($2 + [96])) = *(($12 + [8]))
	*($2 + [88]) = *($12)
	*($2 + [104]) = *($13)
	*(($2 + [112])) = *(($13 + [8]))
	*($2 + [120]) = *($14)
	*(($2 + [128])) = *(($14 + [8]))
	*($2 + [136]) = *($15)
	*(($2 + [144])) = *(($15 + [8]))
	*(($2 + [160])) = *(($16 + [8]))
	*($2 + [152]) = *($16)
	*($2 + [172]) = $18
	*($2 + [168]) = $17
	*($2 + [176]) = $19
	*($2 + [180]) = $20
	*($2 + [181]) = $21
	*($2 + [182]) = $22
	*($2 + [183]) = $23
	*($2 + [184]) = $24
	*($2 + [185]) = $25
	*($2 + [186]) = $27
	*($2 + [192]) = $28
	*($2 + [200]) = $29
	*($2 + [208]) = $30
	*($2 + [212]) = $31
	*($2 + [213]) = $32
	*($33 + [520]) = (($33 + [176]) + [204])
	*($33 + [516]) = ($33 + [176])
	*($33 + [512]) = ($33 + [176])
	*($33 + [384]) = ($33 + [512])
	*($33 + [396]) = ($2 + [8])
	*($33 + [392]) = $2
	*($33 + [400]) = ($2 + [16])
	*($33 + [404]) = ($2 + [24])
	*($33 + [408]) = ($2 + [32])
	*($33 + [412]) = ($2 + [33])
	*($33 + [416]) = ($2 + [34])
	*($33 + [420]) = ($2 + [40])
	*($33 + [424]) = ($2 + [56])
	*($33 + [428]) = ($2 + [72])
	*($33 + [432]) = ($2 + [88])
	*($33 + [436]) = ($2 + [104])
	*($33 + [440]) = ($2 + [120])
	*($33 + [444]) = ($2 + [136])
	*($33 + [448]) = ($2 + [152])
	*($33 + [452]) = ($2 + [168])
	*($33 + [456]) = ($2 + [172])
	*($33 + [460]) = ($2 + [176])
	*($33 + [464]) = ($2 + [180])
	*($33 + [472]) = ($2 + [182])
	*($33 + [468]) = ($2 + [181])
	*($33 + [476]) = ($2 + [183])
	*($33 + [480]) = ($2 + [184])
	*($33 + [484]) = ($2 + [185])
	*($33 + [488]) = ($2 + [186])
	*($33 + [492]) = ($2 + [192])
	*($33 + [496]) = ($2 + [200])
	*($33 + [500]) = ($2 + [208])
	*($33 + [504]) = ($2 + [212])
	*($33 + [508]) = ($2 + [213])
	CALL $65(($33 + [392]), ($33 + [384]))
	$6 = *($2)
	$34 = CALL db_store_i64(*((($33 + [8]) + [8])), (int_64)5937556069193265024, (int_64)5937556299887047648, $6, ($33 + [176]), [204])
	*($2 + [220]) = $34
	$1 = (($33 + [8]) + [16])
	if ( (uint_64)($6 <= *($1)) ){ goto $label$50 }
	*($1) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$50
	*($33 + [392]) = $2
	$6 = *($2)
	*($33 + [176]) = $6
	*($33 + [512]) = $34
	$0 = ($33 + [36])
	$1 = *($0)
	if ( ((uint_32)$1 >= (uint_32)*((($33 + [8]) + [32]))) ){ goto $label$53 }
	*($1 + [8]) = $6
	*($1 + [16]) = $34
	*($33 + [392]) = [0]
	*($1) = $2
	*($0) = ($1 + [24])
	$2 = *($33 + [392])
	*($33 + [392]) = [0]
	if ( $2 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	CALL $66(($33 + [32]), ($33 + [392]), ($33 + [176]), ($33 + [512]))
	$2 = *($33 + [392])
	*($33 + [392]) = [0]
	if ( ($2 == 0) ){ goto $label$51 }
	
.LABEL $label$52
	CALL $9($2)
	
.LABEL $label$51
	$34 = *($33 + [32])
	if ( ($34 == 0) ){ goto $label$46 }
	$0 = ($33 + [36])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$34) ){ goto $label$55 }
	
.LOOP $label$56:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$57 }
	CALL $9($1)
	
.LABEL $label$57
	if ( ((int_32)$34 != (int_32)$2) ){ goto $label$56 }
	$2 = *(($33 + [32]))
	goto $label$54 
	
.LABEL $label$55
	$2 = $34
	
.LABEL $label$54
	*($0) = $34
	CALL $9($2)
	
.LABEL $label$46
	$34 = *($33 + [144])
	if ( ($34 == 0) ){ goto $label$58 }
	$0 = ($33 + [148])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$34) ){ goto $label$60 }
	
.LOOP $label$61:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$62 }
	CALL $9($1)
	
.LABEL $label$62
	if ( ((int_32)$34 != (int_32)$2) ){ goto $label$61 }
	$2 = *(($33 + [144]))
	goto $label$59 
	
.LABEL $label$60
	$2 = $34
	
.LABEL $label$59
	*($0) = $34
	CALL $9($2)
	
.LABEL $label$58
	$global$0 = ($33 + [528])
	return (unreachable)
	
.LABEL $label$9
	CALL $17($1)
}

int_32 .FUNC $389 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [208])) = [0]
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $5)
	*($4 + [240]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $439(($4 + [24]), ($4 + [240]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [224])
	*($4 + [40]) = $0
	*($4 + [240]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [24])
	CALL $440(($4 + [240]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $388 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = [0]
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [224]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $423(($4 + [16]), ($4 + [224]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4)
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [208])
	*($4 + [32]) = $0
	*($4 + [224]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [201])
	$9 = *($4 + [200])
	$0 = *($4 + [192])
	$1 = *($4 + [184])
	$10 = *($4 + [176])
	$11 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $11), (int_64 ($10 & [255])), (int_32 $1), (int_64 $0), (int_64 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC $383 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [208]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $431(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [184])
	$1 = *($4 + [176])
	$9 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $382 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [256])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [208])) = [0]
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $5)
	*($4 + [240]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $447(($4 + [24]), ($4 + [240]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [224]) + [8]))) = *($3)
	*($4 + [224]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [224])
	*($4 + [40]) = $0
	*($4 + [240]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [244]) = ($4 + [216])
	*($4 + [240]) = ($4 + [24])
	CALL $448(($4 + [240]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [256])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [256])
	return $2
}

int_32 .FUNC $381 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [224]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $446(($4 + [16]), ($4 + [224]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4)
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [208])
	*($4 + [32]) = $0
	*($4 + [224]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [200])
	$0 = *($4 + [192])
	$1 = *($4 + [184])
	$9 = *($4 + [176])
	$10 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC $380 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [184]) = [0]
	*($4 + [188]) = [0]
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [208]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $458(($4 + [24]), ($4 + [208]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [192])
	*($4 + [40]) = $0
	*($4 + [208]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [188])
	$9 = *($4 + [187])
	$10 = *($4 + [186])
	$11 = *($4 + [185])
	$12 = *($4 + [184])
	$0 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($12 & [255])), (int_32 ($11 & [255])), (int_32 ($10 & [255])), (int_32 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $387 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $7)
	*($4 + [224]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $430(($4 + [24]), ($4 + [224]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($8 = (($4 + [208]) + [8]))) = *($3)
	*($4 + [208]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [224]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [208])
	*($4 + [40]) = $0
	*($4 + [224]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [201])
	$9 = *($4 + [200])
	$0 = *($4 + [192])
	$1 = *($4 + [184])
	$10 = *($4 + [176])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $10), (int_64 $1), (int_64 $0), (int_64 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $385 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [272])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [208])) = [0]
	*(($4 + [224])) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $5)
	*($4 + [256]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $451(($4 + [24]), ($4 + [256]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [240]) + [8]))) = *($3)
	*($4 + [240]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [240])
	*($4 + [40]) = $0
	*($4 + [256]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [260]) = ($4 + [232])
	*($4 + [256]) = ($4 + [24])
	CALL $452(($4 + [256]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [272])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [272])
	return $2
}

int_32 .FUNC $384 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [176]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [156]) = $2
	*($4 + [152]) = $2
	*($4 + [160]) = ($2 + $7)
	*($4 + [208]) = ($4 + [152])
	*($4 + [16]) = ($4 + [168])
	CALL $456(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [160])
	*($4) = *($4 + [152])
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($8)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [44 align=4]) = (int_64)361417177238274561
	*($4 + [52 align=4]) = (int_64)144408800781666054
	*($4 + [60]) = [1027]
	*($4 + [62 align=2]) = (int_64)72339081933160453
	*($4 + [70 align=2]) = [33620738]
	*($4 + [74]) = [1027]
	*($4 + [76 align=4]) = (int_64)216736870368216581
	*($4 + [84]) = [17171716]
	*($4 + [88]) = (int_64)73469379886514946
	*($4 + [96]) = [770]
	*($4 + [98 align=2]) = (int_64)72621656421500164
	*($4 + [106 align=2]) = [50462978]
	*($4 + [110]) = [1284]
	*($4 + [112]) = (int_64)506097522914230534
	*($4 + [120]) = [17434888]
	*($4 + [124]) = [770]
	*($4 + [126]) = [4]
	*($4 + [127 align=1]) = [67305985]
	*($4 + [131 align=1]) = [261]
	*($4 + [133]) = [2]
	*($4 + [136]) = (int_64)72058693550160512
	*($4 + [144]) = [770]
	*($4 + [146]) = [4]
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [184])
	$1 = *($4 + [176])
	$9 = *($4 + [168])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [224])
	return [1]
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [112])
	$global$0 = $5
	*($5 + [104]) = $4
	$6 = (CASTING uint_32)(uint_64 CALL $56($0, (int_64)-3792729948836422512))
	if ( ((int_32)($6 & [255]) != (int_32)$3) ){ goto $label$2 }
	CALL require_auth($2)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth((int_64)5937556299887047648)
	
.LABEL $label$1
	*($5 + [103]) = [0]
	if ( ((int_32)*($0 + [30]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9210])
	
.LABEL $label$3
	if ( (int_64)($4 == 0) ){ goto $label$6 }
	*($5 + [40]) = [9244]
	*($5 + [44]) = CALL $15([9244])
	*($5 + [16]) = *($5 + [40])
	$7 = CALL $32(($5 + [48]), ($5 + [16]))
	*($5 + [24]) = [9244]
	*($5 + [28]) = CALL $15([9244])
	*($5 + [8]) = *($5 + [24])
	CALL $32(($5 + [32]), ($5 + [8]))
	*(($5 + [88])) = [0]
	*($5 + [72]) = (int_64)-1
	*($5 + [80]) = (int_64)0
	$4 = *($7)
	*($5 + [56]) = $4
	*($5 + [64]) = (int_64)7464601119210252160
	$7 = CALL db_find_i64($4, (int_64)7464601119210252160, (int_64)-5915276602094125056, *($5 + [104]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $73(($5 + [56]), $7) + [72]) == (int_32)($5 + [56])) ){ goto $label$9 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$9
	*($5 + [103]) = [1]
	$8 = *($5 + [80])
	if ( $8 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9257])
	*($5 + [103]) = [1]
	$8 = *($5 + [80])
	if ( ($8 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$9 = ($5 + [84])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$11 }
	
.LOOP $label$12:
	$10 = ($10 + [-24])
	$7 = *($10)
	*($10) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	if ( ((*($7 + [28]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($7 + [36])))
	
.LABEL $label$14
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($7 + [24])))
	
.LABEL $label$15
	CALL $9($7)
	
.LABEL $label$13
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$12 }
	$7 = *(($5 + [80]))
	goto $label$10 
	
.LABEL $label$11
	$7 = $8
	
.LABEL $label$10
	*($9) = $8
	CALL $9($7)
	if ( ((int_32)($6 & [255]) != (int_32)$3) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)($6 & [255]) != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [88])) = [0]
	*($5 + [72]) = (int_64)-1
	*($5 + [80]) = (int_64)0
	$4 = *($0)
	*($5 + [56]) = $4
	*($5 + [64]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)5937556069193265024, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $74(($5 + [56]), $7)
	if ( ((int_32)*($7 + [216]) == (int_32)($5 + [56])) ){ goto $label$16 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$16
	CALL require_auth(*($7 + [16]))
	*($5 + [36]) = ($5 + [103])
	*($5 + [32]) = ($5 + [104])
	CALL $75(($5 + [56]), $7, ($5 + [32]))
	$8 = *($5 + [80])
	if ( ($8 == 0) ){ goto $label$4 }
	$3 = ($5 + [84])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$18 }
	
.LOOP $label$19:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$20 }
	CALL $9($10)
	
.LABEL $label$20
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$19 }
	$7 = *(($5 + [80]))
	goto $label$17 
	
.LABEL $label$18
	$7 = $8
	
.LABEL $label$17
	*($3) = $8
	CALL $9($7)
	
.LABEL $label$4
	*(($5 + [88])) = [0]
	*($5 + [72]) = (int_64)-1
	*($5 + [80]) = (int_64)0
	*($5 + [92]) = [0]
	$4 = *($0)
	*($5 + [56]) = $4
	*($5 + [64]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-7880044402153918464, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$21 }
	$7 = CALL $62(($5 + [56]), $7)
	if ( ((int_32)*($7 + [20]) == (int_32)($5 + [56])) ){ goto $label$22 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$22
	CALL require_auth(*($7 + [8]))
	*($5 + [32]) = ($5 + [103])
	CALL $76(($5 + [56]), $7, ($5 + [32]))
	$8 = *($5 + [80])
	if ( ($8 == 0) ){ goto $label$21 }
	$0 = ($5 + [84])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$26 }
	CALL $9($10)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$25 }
	$7 = *(($5 + [80]))
	goto $label$23 
	
.LABEL $label$24
	$7 = $8
	
.LABEL $label$23
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$21
	$global$0 = ($5 + [112])
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([88]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [12])
	*($3 + [44]) = ($5 + [16])
	*($3 + [48]) = ($5 + [28])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	CALL $532(($3 + [32]), ($3 + [24]))
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $533(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [24])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$4 = *($1 + [16])
	$5 = ( *(($1 + [20])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [16])
	$6 = (CASTING uint_64)(uint_32 $5)
	$5 = ($1 + [16])
	$7 = ($1 + [8])
	$8 = *($1)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $1($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [40]) = $5
	*($3 + [32]) = $1
	CALL $531(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($2)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	*($1 + [18]) = *(*($2))
	$6 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-13])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [17])
	*($4 + [56]) = ($1 + [18])
	CALL $63(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $3, [19])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [40]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($4 + [32]), $6)
	*(($1 + [28])) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $77 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [64])
	$global$0 = $5
	$6 = (CASTING uint_32)(uint_64 CALL $56($0, (int_64)-3792729948836422512))
	if ( ((int_32)($6 & [255]) != (int_32)$2) ){ goto $label$2 }
	CALL require_auth($3)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth((int_64)5937556299887047648)
	
.LABEL $label$1
	*($5 + [63]) = *(($0 + ( [33] ? [32] : $4 )))
	if ( ((int_32)($6 & [255]) != (int_32)$2) ){ goto $label$3 }
	*((($5 + [16]) + [32])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	$3 = *($0)
	*($5 + [16]) = $3
	*($5 + [24]) = $3
	$2 = CALL db_find_i64($3, $3, (int_64)5937556069193265024, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $74(($5 + [16]), $2)
	if ( ((int_32)*($2 + [216]) == (int_32)($5 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	CALL require_auth(*($2 + [16]))
	*($5 + [8]) = ($5 + [63])
	CALL $78(($5 + [16]), $2, ($5 + [8]))
	$6 = *($5 + [40])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($5 + [44])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($5 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $9($2)
	
.LABEL $label$3
	*((($5 + [16]) + [32])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	*($5 + [52]) = [0]
	$3 = *($0)
	*($5 + [16]) = $3
	*($5 + [24]) = $3
	$2 = CALL db_find_i64($3, $3, (int_64)-7880044402153918464, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $62(($5 + [16]), $2)
	if ( ((int_32)*($2 + [20]) == (int_32)($5 + [16])) ){ goto $label$10 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$10
	CALL require_auth(*($2 + [8]))
	*($5 + [8]) = ($5 + [63])
	CALL $79(($5 + [16]), $2, ($5 + [8]))
	$6 = *($5 + [40])
	if ( ($6 == 0) ){ goto $label$9 }
	$0 = ($5 + [44])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$14 }
	CALL $9($4)
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$13 }
	$2 = *(($5 + [40]))
	goto $label$11 
	
.LABEL $label$12
	$2 = $6
	
.LABEL $label$11
	*($0) = $6
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [160])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([232])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [152]) = (int_64)0
	*($5 + [160]) = (int_64)0
	*($5 + [216]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [33])
	*($3 + [64]) = ($5 + [34])
	*($3 + [68]) = ($5 + [40])
	*($3 + [72]) = ($5 + [56])
	*($3 + [76]) = ($5 + [72])
	*($3 + [80]) = ($5 + [88])
	*($3 + [84]) = ($5 + [104])
	*($3 + [88]) = ($5 + [120])
	*($3 + [92]) = ($5 + [136])
	*($3 + [96]) = ($5 + [152])
	*($3 + [100]) = ($5 + [168])
	*($3 + [104]) = ($5 + [172])
	*($3 + [108]) = ($5 + [176])
	*($3 + [112]) = ($5 + [180])
	*($3 + [120]) = ($5 + [182])
	*($3 + [116]) = ($5 + [181])
	*($3 + [124]) = ($5 + [183])
	*($3 + [128]) = ($5 + [184])
	*($3 + [132]) = ($5 + [185])
	*($3 + [136]) = ($5 + [186])
	*($3 + [140]) = ($5 + [192])
	*($3 + [144]) = ($5 + [200])
	*($3 + [148]) = ($5 + [208])
	*($3 + [152]) = ($5 + [212])
	*($3 + [156]) = ($5 + [213])
	CALL $534(($3 + [40]), ($3 + [32]))
	*($5 + [220]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $66(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [160])
	return $5
}

void .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *(*($2))
	*($1 + [185]) = *(*($2 + [4]))
	$5 = *($1)
	$3 = $3
	$2 = ($3 + [-208])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-4])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [33])
	*($4 + [48]) = ($1 + [34])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [56])
	*($4 + [60]) = ($1 + [72])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [120])
	*($4 + [76]) = ($1 + [136])
	*($4 + [80]) = ($1 + [152])
	*($4 + [84]) = ($1 + [168])
	*($4 + [88]) = ($1 + [172])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [180])
	*($4 + [104]) = ($1 + [182])
	*($4 + [100]) = ($1 + [181])
	*($4 + [108]) = ($1 + [183])
	*($4 + [112]) = ($1 + [184])
	*($4 + [116]) = ($1 + [185])
	*($4 + [120]) = ($1 + [186])
	*($4 + [124]) = ($1 + [192])
	*($4 + [128]) = ($1 + [200])
	*($4 + [132]) = ($1 + [208])
	*($4 + [136]) = ($1 + [212])
	*($4 + [140]) = ($1 + [213])
	CALL $65(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $2, [204])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [33]) = *(*($2))
	$5 = *($1)
	$2 = $3
	$3 = ($2 + [-208])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-4])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [33])
	*($4 + [48]) = ($1 + [34])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [56])
	*($4 + [60]) = ($1 + [72])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [120])
	*($4 + [76]) = ($1 + [136])
	*($4 + [80]) = ($1 + [152])
	*($4 + [84]) = ($1 + [168])
	*($4 + [88]) = ($1 + [172])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [180])
	*($4 + [104]) = ($1 + [182])
	*($4 + [100]) = ($1 + [181])
	*($4 + [108]) = ($1 + [183])
	*($4 + [112]) = ($1 + [184])
	*($4 + [116]) = ($1 + [185])
	*($4 + [120]) = ($1 + [186])
	*($4 + [124]) = ($1 + [192])
	*($4 + [128]) = ($1 + [200])
	*($4 + [132]) = ($1 + [208])
	*($4 + [136]) = ($1 + [212])
	*($4 + [140]) = ($1 + [213])
	CALL $65(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $3, [204])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	*($1 + [17]) = *(*($2))
	$6 = *($1)
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-13])
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	*($4 + [48]) = ($1 + [16])
	*($4 + [52]) = ($1 + [17])
	*($4 + [56]) = ($1 + [18])
	CALL $63(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [24]), (int_64)0, $3, [19])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [40]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7880044402153918464, ($4 + [32]), $6)
	*(($1 + [28])) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $499 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [144]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$9
	CALL memcpy(($3 + [143]), $5, [1])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [33])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28 align=4]) = (int_64)361417177238274561
	*($3 + [36]) = [151521030]
	*($3 + [40]) = [2826]
	*($3 + [42 align=2]) = (int_64)144396684594708993
	*($3 + [50]) = [3]
	*($3 + [52 align=4]) = (int_64)289077004450529537
	*($3 + [60]) = [134678021]
	*($3 + [64]) = [265]
	*($3 + [66 align=2]) = (int_64)216736857432785666
	*($3 + [74 align=2]) = [67305985]
	*($3 + [78]) = [261]
	*($3 + [80]) = [2]
	*($3 + [81 align=1]) = (int_64)144399970194490371
	*($3 + [89 align=1]) = (int_64)433757350076154369
	*($3 + [97 align=1]) = [513]
	*($3 + [99 align=1]) = (int_64)723118041428460547
	*($3 + [107 align=1]) = (int_64)289077004467372545
	*($3 + [115 align=1]) = [261]
	*($3 + [117]) = [2]
	*($3 + [120]) = (int_64)72058693550160512
	*($3 + [128]) = [770]
	*($3 + [130]) = [4]
	CALL $250($3, $0, *($3 + [160]), *($3 + [152]), *($3 + [144]), *($3 + [143]))
	$global$0 = ($3 + [176])
}

void .FUNC $498 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [151]), $5, [1])
	*((($3 + [8]) + [24])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [25])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $209(($3 + [8]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [151]))
	$global$0 = ($3 + [176])
}

void .FUNC $259 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $258 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [41]) = (*($1 + [41]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [41]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [61])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $312 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [125]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [16]) = *((*($5 + [8]) + (*(*($5 + [12])) << [3])))
	$5 = *($5 + [16])
	*(($1 + [32])) = *(($5 + [8]))
	*($1 + [24]) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $5, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $314 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [125]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $362($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $571(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [16]) = *((*($5 + [8]) + (*(*($5 + [12])) << [3])))
	$5 = *($5 + [16])
	*(($1 + [32])) = *(($5 + [8]))
	*($1 + [24]) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $572(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $5, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $316 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [125]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

int_32 .FUNC $317 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [13023])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [128]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)5534162690622095362, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [128])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($8 + [112]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL $295($6, CALL $fimport$2(*($6), *($6 + [8]), (int_64)5534162690622095360, $5))
	if ( ((int_32)*($8 + [112]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$3
	*(($0 + [4])) = $8
	*(($8 + [128])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $251 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $250 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	$6 = ($global$0 - [256])
	$global$0 = $6
	*($6 + [216]) = $3
	*($6 + [224]) = $2
	*($6 + [208]) = $4
	*($6 + [207]) = $5
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$7 = CALL $56($0, (int_64)6110391469059420832)
	$8 = CALL $56($0, (int_64)6110391462096876192)
	$9 = CALL $56($0, (int_64)6110391469059420832)
	$3 = CALL $210($0, (int_64)-7880044396964042864)
	$10 = CALL $56($0, (int_64)-6147823752712473952)
	$11 = CALL $56($0, (int_64)5094026183813278864)
	$12 = CALL $56($0, (int_64)-6147822881404538208)
	*(($6 + [192])) = [0]
	*($6 + [176]) = (int_64)-1
	*($6 + [184]) = (int_64)0
	*($6 + [196]) = [0]
	$2 = *($0)
	*($6 + [160]) = $2
	*($6 + [168]) = $2
	$12 = ((uint_64)((int_64)$12 * (int_64)$3) / (uint_64)(int_64)100)
	$5 = CALL db_find_i64($2, $2, (int_64)-2507757988870094848, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $189(($6 + [160]), $5)
	if ( ((int_32)*($5 + [64]) == (int_32)($6 + [160])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*($6 + [156]) = $5
	*($6 + [152]) = ($6 + [160])
	goto $label$2 
	
.LABEL $label$3
	*($6 + [156]) = [0]
	*($6 + [152]) = ($6 + [160])
	CALL eosio_assert([0], [10576])
	$5 = *($6 + [156])
	
.LABEL $label$2
	$5 = *($5 + [8])
	*($6 + [151]) = $5
	if ( ((int_32)$5 != (int_32)*($0 + [56])) ){ goto $label$5 }
	$2 = ((uint_64)((int_64)$10 * (int_64)$3) / (uint_64)(int_64)100)
	if ( ((int_64)$7 == (int_64)1) ){ goto $label$6 }
	CALL eosio_assert([0], [10599])
	$5 = *($6 + [151])
	
.LABEL $label$6
	*($6 + [136]) = $2
	
.LABEL $label$5
	if ( ((int_32)($5 & [255]) != (int_32)*($0 + [59])) ){ goto $label$7 }
	if ( ((int_64)$8 == (int_64)1) ){ goto $label$8 }
	CALL eosio_assert([0], [10656])
	$5 = *($6 + [151])
	
.LABEL $label$8
	*($6 + [136]) = $11
	
.LABEL $label$7
	if ( ((int_32)($5 & [255]) != (int_32)*($0 + [62])) ){ goto $label$9 }
	if ( ((int_64)$9 == (int_64)1) ){ goto $label$10 }
	CALL eosio_assert([0], [10723])
	$5 = *($6 + [151])
	
.LABEL $label$10
	*($6 + [136]) = $12
	
.LABEL $label$9
	$13 = *(*($6 + [156]) + [52])
	$14 = ($5 & [255])
	if ( ((int_32)$14 == (int_32)*(($0 + [56]))) ){ goto $label$11 }
	if ( ((int_32)$14 == (int_32)*(($0 + [59]))) ){ goto $label$11 }
	if ( ((int_32)($5 & [255]) == (int_32)*(($0 + [62]))) ){ goto $label$11 }
	CALL eosio_assert([0], [10782])
	
.LABEL $label$11
	if ( ((uint_32)$13 >= (uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $24() / (int_64)1000000))) ){ goto $label$23 }
	$13 = *(($0 + [62]))
	$5 = *($6 + [151])
	if ( ((int_32)$5 != (int_32)$13) ){ goto $label$22 }
	*($6 + [48]) = *($0 + [64])
	goto $label$16 
	
.LABEL $label$23
	*(($6 + [128])) = [0]
	*($6 + [112]) = (int_64)-1
	*($6 + [120]) = (int_64)0
	*($6 + [132]) = [0]
	$2 = *($0)
	*($6 + [96]) = $2
	*($6 + [104]) = $2
	*($6 + [88]) = ($6 + [96])
	CALL $211(($6 + [48]), ($6 + [88]), ($6 + [216]))
	$5 = *($6 + [52])
	if ( ($5 == 0) ){ goto $label$25 }
	if ( ((int_64)*($6 + [216]) != (int_64)*($5 + [16])) ){ goto $label$25 }
	$2 = *($6 + [48])
	*($6 + [80]) = $2
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$24 }
	$15 = ($0 + [59])
	$13 = ($0 + [127])
	$14 = ($0 + [128])
	$16 = ($6 + [56])
	$17 = ($0 + [126])
	$18 = ($0 + [56])
	$19 = ($0 + [129])
	$20 = ($0 + [130])
	$21 = ($0 + [62])
	$22 = [0]
	
.LOOP $label$27:
	if ( ((int_64)*($5 + [16]) != (int_64)*($6 + [216])) ){ goto $label$26 }
	if ( ((int_64)*($5 + [8]) != (int_64)*($6 + [208])) ){ goto $label$28 }
	$22 = *($6 + [151])
	if ( ((int_32)$22 != (int_32)*($15)) ){ goto $label$30 }
	if ( CALL $160($0, *($6 + [224])) ){ goto $label$31 }
	CALL eosio_assert([0], [10824])
	
.LABEL $label$31
	$22 = *($6 + [207])
	$23 = *($6 + [84])
	$5 = *($23 + [25])
	if ( ((int_32)$5 == (int_32)$22) ){ goto $label$18 }
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$32 }
	if ( ((int_32)$22 != (int_32)*($14)) ){ goto $label$32 }
	*($6 + [48]) = $0
	CALL $251(($6 + [96]), $23, ($6 + [48]))
	$22 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $22 ){ goto $label$33 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$33
	CALL $252(($6 + [160]), $22, ($6 + [48]))
	
.LABEL $label$32
	if ( ((int_32)$5 != (int_32)*($14)) ){ goto $label$34 }
	if ( ((int_32)*($6 + [207]) != (int_32)*($13)) ){ goto $label$34 }
	$22 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $253(($6 + [96]), $22, ($6 + [48]))
	$22 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $22 ){ goto $label$35 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$35
	CALL $254(($6 + [160]), $22, ($6 + [48]))
	
.LABEL $label$34
	if ( ((int_32)$5 != (int_32)*($17)) ){ goto $label$29 }
	$5 = *($6 + [207])
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$36 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $255(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$37 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$37
	CALL $256(($6 + [160]), $5, ($6 + [48]))
	$5 = *($6 + [207])
	
.LABEL $label$36
	if ( ((int_32)($5 & [255]) != (int_32)*($14)) ){ goto $label$29 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $257(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$38 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$38
	CALL $258(($6 + [160]), $5, ($6 + [48]))
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$22 != (int_32)*($18)) ){ goto $label$39 }
	$22 = *($5 + [24])
	if ( ((int_32)$22 != (int_32)*($17)) ){ goto $label$40 }
	$23 = *($6 + [207])
	if ( ((int_32)$23 != (int_32)*($13)) ){ goto $label$41 }
	*($6 + [48]) = $0
	CALL $259(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$42 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$42
	CALL $260(($6 + [160]), $5, ($6 + [48]))
	$23 = *($6 + [207])
	
.LABEL $label$41
	if ( ((int_32)($23 & [255]) != (int_32)*($14)) ){ goto $label$40 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $261(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$43 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$43
	CALL $262(($6 + [160]), $5, ($6 + [48]))
	
.LABEL $label$40
	if ( ((int_32)$22 != (int_32)*($13)) ){ goto $label$44 }
	$5 = *($6 + [207])
	if ( ((int_32)$5 != (int_32)*($14)) ){ goto $label$45 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $263(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$46 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$46
	CALL $264(($6 + [160]), $5, ($6 + [48]))
	$5 = *($6 + [207])
	
.LABEL $label$45
	if ( ((int_32)($5 & [255]) != (int_32)*($19)) ){ goto $label$44 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $265(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	if ( $5 ){ goto $label$47 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$47
	CALL $266(($6 + [160]), $5)
	
.LABEL $label$44
	if ( ((int_32)$22 != (int_32)*($14)) ){ goto $label$29 }
	$5 = *($6 + [207])
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$48 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $267(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$49 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$49
	CALL $268(($6 + [160]), $5, ($6 + [48]))
	$5 = *($6 + [207])
	
.LABEL $label$48
	if ( ((int_32)($5 & [255]) != (int_32)*($20)) ){ goto $label$29 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $269(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	if ( $5 ){ goto $label$50 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$50
	CALL $270(($6 + [160]), $5)
	goto $label$29 
	
.LABEL $label$39
	if ( ((int_32)$22 != (int_32)*($21)) ){ goto $label$51 }
	$22 = *($5 + [26])
	if ( ((int_32)$22 != (int_32)*($17)) ){ goto $label$52 }
	$23 = *($6 + [207])
	if ( ((int_32)$23 != (int_32)*($13)) ){ goto $label$53 }
	*($6 + [48]) = $0
	CALL $271(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$54 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$54
	CALL $272(($6 + [160]), $5, ($6 + [48]))
	$23 = *($6 + [207])
	
.LABEL $label$53
	if ( ((int_32)($23 & [255]) != (int_32)*($14)) ){ goto $label$52 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $273(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$55 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$55
	CALL $274(($6 + [160]), $5, ($6 + [48]))
	
.LABEL $label$52
	if ( ((int_32)$22 != (int_32)*($13)) ){ goto $label$56 }
	$5 = *($6 + [207])
	if ( ((int_32)$5 != (int_32)*($14)) ){ goto $label$57 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $275(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$58 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$58
	CALL $276(($6 + [160]), $5, ($6 + [48]))
	$5 = *($6 + [207])
	
.LABEL $label$57
	if ( ((int_32)($5 & [255]) != (int_32)*($19)) ){ goto $label$56 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $277(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	if ( $5 ){ goto $label$59 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$59
	CALL $278(($6 + [160]), $5)
	
.LABEL $label$56
	if ( ((int_32)$22 != (int_32)*($14)) ){ goto $label$29 }
	$5 = *($6 + [207])
	if ( ((int_32)$5 != (int_32)*($13)) ){ goto $label$60 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $279(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	*($16) = $0
	*($6 + [52]) = ($6 + [136])
	*($6 + [48]) = ($6 + [152])
	if ( $5 ){ goto $label$61 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$61
	CALL $280(($6 + [160]), $5, ($6 + [48]))
	$5 = *($6 + [207])
	
.LABEL $label$60
	if ( ((int_32)($5 & [255]) != (int_32)*($20)) ){ goto $label$29 }
	$5 = *($6 + [84])
	*($6 + [48]) = $0
	CALL $281(($6 + [96]), $5, ($6 + [48]))
	$5 = *($6 + [156])
	if ( $5 ){ goto $label$62 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$62
	CALL $282(($6 + [160]), $5)
	goto $label$29 
	
.LABEL $label$51
	CALL eosio_assert([0], [10865])
	
.LABEL $label$29
	CALL $244(($6 + [80]))
	$22 = [1]
	$5 = *($6 + [84])
	
.LABEL $label$28
	if ( $5 ){ goto $label$27 }
	
.LABEL $label$26
	if ( (($22 & [1]) == 0) ){ goto $label$24 }
	goto $label$18 
	
.LABEL $label$25
	*($6 + [84]) = [0]
	*($6 + [80]) = ($6 + [88])
	
.LABEL $label$24
	$2 = *($6 + [224])
	*($6 + [60]) = $0
	*($6 + [52]) = ($6 + [208])
	*($6 + [48]) = ($6 + [96])
	*($6 + [56]) = ($6 + [216])
	*($6 + [64]) = ($6 + [151])
	*($6 + [68]) = ($6 + [207])
	*($6 + [72]) = ($6 + [224])
	*($6 + [240]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($6 + [96])) ){ goto $label$63 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$63
	*($6 + [36]) = ($6 + [48])
	*($6 + [32]) = ($6 + [96])
	*($6 + [40]) = ($6 + [240])
	*(($5 = CALL $7([48])) + [32]) = ($6 + [96])
	CALL $283(($6 + [32]), $5)
	*($6 + [232]) = $5
	$2 = *($5)
	*($6 + [32]) = $2
	$14 = *($5 + [36])
	*($6 + [252]) = $14
	$22 = ($6 + [124])
	$13 = *($22)
	if ( ((uint_32)$13 >= (uint_32)*(($6 + [128]))) ){ goto $label$21 }
	*($13 + [8]) = $2
	*($13 + [16]) = $14
	*($6 + [232]) = [0]
	*($13) = $5
	*($22) = ($13 + [24])
	$5 = *($6 + [232])
	*($6 + [232]) = [0]
	if ( $5 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)*(($0 + [59]))) ){ goto $label$17 }
	*($6 + [48]) = $13
	goto $label$16 
	
.LABEL $label$21
	CALL $246(($6 + [120]), ($6 + [232]), ($6 + [32]), ($6 + [252]))
	$5 = *($6 + [232])
	*($6 + [232]) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $9($5)
	
.LABEL $label$19
	$2 = *($0)
	*($6 + [40]) = (int_64)3617214756542218240
	*($6 + [32]) = $2
	*((($5 = CALL $7([16])) + [8])) = *($6 + [40])
	*($5) = *($6 + [32])
	*(($13 = (($6 + [232]) + [4]))) = *((($6 + [26]) + [4]))
	*(($6 + [70])) = *($13)
	*(($6 + [8])) = (int_64)1
	*($6 + [64]) = [1]
	$13 = *($6 + [26 align=2])
	*($6 + [66 align=2]) = $13
	*(($6 + [16])) = *($6 + [64])
	*($6 + [240]) = $5
	$5 = ($5 + [16])
	*($6 + [244]) = $5
	*($6 + [248]) = $5
	*($6 + [48]) = (int_64)-2507753050160389248
	*($6 + [56]) = (int_64)1
	*($6) = (int_64)-2507753050160389248
	*($6 + [232]) = $13
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [240]), $6)
	$5 = *($6 + [240])
	if ( ($5 == 0) ){ goto $label$64 }
	*($6 + [244]) = $5
	CALL $9($5)
	
.LABEL $label$64
	$5 = *($6 + [156])
	*($6 + [48]) = $0
	*($6 + [52]) = ($6 + [151])
	*($6 + [56]) = ($6 + [207])
	*($6 + [60]) = ($6 + [152])
	*($6 + [64]) = ($6 + [136])
	if ( $5 ){ goto $label$65 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$65
	CALL $284(($6 + [160]), $5, ($6 + [48]))
	
.LABEL $label$18
	$13 = *($6 + [120])
	if ( ($13 == 0) ){ goto $label$15 }
	$14 = ($6 + [124])
	$0 = *($14)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$14 }
	
.LOOP $label$66:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$67 }
	CALL $9($5)
	
.LABEL $label$67
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$66 }
	$0 = *(($6 + [120]))
	*($14) = $13
	CALL $9($0)
	$13 = *($6 + [184])
	if ( $13 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)*(($0 + [56]))) ){ goto $label$16 }
	*($6 + [48]) = *($0 + [58])
	
.LABEL $label$16
	$0 = *($6 + [156])
	*($6 + [96]) = ($6 + [48])
	if ( $0 ){ goto $label$68 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$68
	CALL $285(($6 + [160]), $0, ($6 + [96]))
	
.LABEL $label$15
	$13 = *($6 + [184])
	if ( $13 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	*($14) = $13
	CALL $9($13)
	$13 = *($6 + [184])
	if ( ($13 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$14 = ($6 + [188])
	$0 = *($14)
	if ( ((int_32)$0 == (int_32)$13) ){ goto $label$70 }
	
.LOOP $label$71:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$72 }
	CALL $9($5)
	
.LABEL $label$72
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$71 }
	$0 = *(($6 + [184]))
	goto $label$69 
	
.LABEL $label$70
	$0 = $13
	
.LABEL $label$69
	*($14) = $13
	CALL $9($0)
	$global$0 = ($6 + [256])
	return 
	
.LABEL $label$12
	$global$0 = ($6 + [256])
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $252 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [41]) = (*($1 + [41]) + [1])
	*($1 + [40]) = (*($1 + [40]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = ($1 + [40])
	$9 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [41]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [61])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $8
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $255 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [127]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $254 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [40]) = (*($1 + [40]) + [1])
	*($1 + [41]) = (*($1 + [41]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [41])
	$8 = ($1 + [40])
	$9 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [40]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [60])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $8
	*($4 + [76]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $257 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $256 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [40]) = (*($1 + [40]) + [1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [40])
	$8 = *($1)
	if ( ((int_64)((int_64)*(*(*($2) + [4]) + [40]) + (int_64)1) != (int_64)*(*(($2 + [4])))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [60])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [72]) = $7
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [76]) = ($1 + [41])
	*($4 + [80]) = ($1 + [44])
	*($4 + [84]) = ($1 + [48])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $8)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $8)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $598 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [80])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [88])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $181 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$3 = ($global$0 - [304])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
	$4 = CALL $56($0, (int_64)5094026183813278864)
	$5 = CALL $56($0, (int_64)-3792729948836422512)
	$6 = [0]
	*(($3 + [232])) = [0]
	*($3 + [216]) = (int_64)-1
	*($3 + [224]) = (int_64)0
	$7 = *($0)
	*($3 + [200]) = $7
	*($3 + [208]) = $7
	*($3 + [192]) = [10063]
	*($3 + [196]) = CALL $15([10063])
	*($3 + [8]) = *($3 + [192])
	CALL $32(($3 + [240]), ($3 + [8]))
	$9 = *(($3 + [228]))
	$8 = *($3 + [224])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)5937543767441188496) ){ goto $label$4 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($11 + [36]) == (int_32)($3 + [200])) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$6 = $11
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL db_find_i64(*($3 + [200]), *(($3 + [208])), (int_64)4982871467403247616, (int_64)5937543767441188496)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $33(($3 + [200]), $10)
	if ( ((int_32)*($6 + [36]) == (int_32)($3 + [200])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	$12 = *($6 + [16])
	*(($3 + [184])) = [0]
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	$7 = *($0)
	*($3 + [152]) = $7
	*($3 + [160]) = $7
	$10 = CALL db_find_i64($7, $7, (int_64)5094023804032647168, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $182(($3 + [152]), $10)
	if ( ((int_32)*($10 + [172]) == (int_32)($3 + [152])) ){ goto $label$9 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$9
	*($3 + [148]) = $10
	*($3 + [144]) = ($3 + [152])
	goto $label$7 
	
.LABEL $label$8
	*($3 + [148]) = [0]
	*($3 + [144]) = ($3 + [152])
	CALL eosio_assert([0], [10076])
	$10 = *($3 + [148])
	
.LABEL $label$7
	if ( ((uint_64)((int_64)*($10 + [169]) + (int_64)1) >= (uint_64)$4) ){ goto $label$16 }
	$7 = *($0)
	if ( $10 ){ goto $label$17 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$17
	CALL $183(($3 + [152]), $10, $7)
	*(($3 + [272])) = [0]
	*($3 + [256]) = (int_64)-1
	*($3 + [264]) = (int_64)0
	*($3 + [276]) = [0]
	$7 = *($0)
	*($3 + [240]) = $7
	*($3 + [248]) = $7
	$10 = CALL db_find_i64($7, $7, (int_64)-5003143671300882432, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$10 = CALL $184(($3 + [240]), $10)
	if ( ((int_32)*($10 + [24]) == (int_32)($3 + [240])) ){ goto $label$18 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$18
	if ( ((int_64)*($10 + [16]) != (int_64)$1) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	$6 = *($10 + [16])
	if ( ((int_32)$6 != (int_32)*($0 + [79])) ){ goto $label$19 }
	if ( ((int_32)*($10 + [32]) != (int_32)((CASTING uint_32)(uint_64 $5) & [255])) ){ goto $label$19 }
	$1 = *($10 + [24])
	*(($8 = (($3 + [16]) + [8]))) = *(($10 + [48]))
	*($3 + [16]) = *($10 + [40])
	$9 = CALL $18(($3 + [128]), ($10 + [56]))
	$7 = *($0)
	*($3 + [120]) = (int_64)3617214756542218240
	*($3 + [112]) = $12
	*((($10 = CALL $7([16])) + [8])) = *($3 + [120])
	*($10) = *($3 + [112])
	*(($11 = (($3 + [64]) + [24]))) = *($8)
	*($3 + [64]) = $12
	*($3 + [72]) = $1
	*($3 + [80]) = *($3 + [16])
	CALL $18(($3 + [96]), $9)
	*((($3 + [240]) + [24])) = *($11)
	$8 = (($3 + [64]) + [40])
	*(($11 = (($3 + [240]) + [40]))) = *($8)
	*($8) = [0]
	$8 = ($10 + [16])
	*($3 + [292]) = $8
	*($3 + [288]) = $10
	*($3 + [296]) = $8
	*($3 + [240]) = *($3 + [64])
	*($3 + [248]) = *($3 + [72])
	*($3 + [256]) = *($3 + [80])
	*($3 + [272]) = *($3 + [96])
	*($3 + [96]) = (int_64)0
	CALL $37($7, (int_64)-3617168760277827584, ($3 + [288]), ($3 + [240]))
	if ( ((*($3 + [272]) & [1]) == 0) ){ goto $label$20 }
	CALL $9(*($11))
	
.LABEL $label$20
	$10 = *($3 + [288])
	if ( ($10 == 0) ){ goto $label$21 }
	*($3 + [292]) = $10
	CALL $9($10)
	
.LABEL $label$21
	if ( ((*(($3 + [96])) & [1]) == 0) ){ goto $label$22 }
	CALL $9(*(($3 + [104])))
	
.LABEL $label$22
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($9 + [8]))
	
.LABEL $label$19
	if ( ((int_32)$6 != (int_32)*($0 + [80])) ){ goto $label$23 }
	$7 = *(*($3 + [148]) + [160])
	$10 = [0]
	*(($3 + [272])) = [0]
	*($3 + [256]) = (int_64)-1
	*($3 + [264]) = (int_64)0
	$1 = *($0)
	*($3 + [240]) = $1
	*($3 + [248]) = $1
	$9 = CALL db_find_i64($1, $1, (int_64)5937556069193265024, $7)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$25 }
	$10 = CALL $74(($3 + [240]), $9)
	if ( ((int_32)*($10 + [216]) == (int_32)($3 + [240])) ){ goto $label$26 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$26
	*($3 + [16]) = ($3 + [144])
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [10101])
	*($3 + [16]) = ($3 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$24
	CALL $185(($3 + [240]), $10, ($3 + [16]))
	$10 = [0]
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	*($3 + [52]) = [0]
	$1 = *($0)
	*($3 + [16]) = $1
	*($3 + [24]) = $1
	$9 = CALL db_find_i64($1, $1, (int_64)-7880044402153918464, $7)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	$10 = CALL $62(($3 + [16]), $9)
	if ( ((int_32)*($10 + [20]) == (int_32)($3 + [16])) ){ goto $label$29 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$29
	*($3 + [112]) = ($3 + [144])
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [10152])
	*($3 + [112]) = ($3 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$27
	CALL $186(($3 + [16]), $10, ($3 + [112]))
	$8 = *($3 + [40])
	if ( ($8 == 0) ){ goto $label$30 }
	$11 = ($3 + [44])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$32 }
	
.LOOP $label$33:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$34 }
	CALL $9($9)
	
.LABEL $label$34
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$33 }
	$10 = *(($3 + [40]))
	goto $label$31 
	
.LABEL $label$32
	$10 = $8
	
.LABEL $label$31
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$30
	$8 = *($3 + [264])
	if ( ($8 == 0) ){ goto $label$23 }
	$11 = ($3 + [268])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$36 }
	
.LOOP $label$37:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$38 }
	CALL $9($9)
	
.LABEL $label$38
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$37 }
	$10 = *(($3 + [264]))
	goto $label$35 
	
.LABEL $label$36
	$10 = $8
	
.LABEL $label$35
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)*($0 + [81])) ){ goto $label$39 }
	$1 = *(*($3 + [148]) + [104])
	$9 = *(($3 + [228]))
	$11 = *(($3 + [224]))
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$43 }
	
.LOOP $label$45:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$44 }
	$9 = $10
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$43 }
	if ( ((int_32)*($8 + [36]) == (int_32)($3 + [200])) ){ goto $label$46 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$46
	if ( $8 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$10 = CALL db_find_i64(*($3 + [200]), *(($3 + [208])), (int_64)4982871467403247616, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$41 }
	$8 = CALL $33(($3 + [200]), $10)
	if ( ((int_32)*($8 + [36]) == (int_32)($3 + [200])) ){ goto $label$42 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$42
	*($3 + [240]) = ($3 + [144])
	goto $label$40 
	
.LABEL $label$41
	$8 = [0]
	CALL eosio_assert([0], [10203])
	*($3 + [240]) = ($3 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$40
	CALL $187(($3 + [200]), $8, ($3 + [240]))
	
.LABEL $label$39
	if ( ((int_32)$6 != (int_32)*($0 + [82])) ){ goto $label$47 }
	$7 = *(*($3 + [148]) + [72])
	$10 = [0]
	*(($3 + [272])) = [0]
	*($3 + [256]) = (int_64)-1
	*($3 + [264]) = (int_64)0
	$1 = *($0)
	*($3 + [240]) = $1
	*($3 + [248]) = $1
	$9 = CALL db_find_i64($1, $1, (int_64)-4157500428759203840, $7)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$49 }
	$10 = CALL $67(($3 + [240]), $9)
	if ( ((int_32)*($10 + [28]) == (int_32)($3 + [240])) ){ goto $label$50 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$50
	*($3 + [16]) = ($3 + [144])
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [10239])
	*($3 + [16]) = ($3 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$48
	CALL $188(($3 + [240]), $10, ($3 + [16]))
	$8 = *($3 + [264])
	if ( ($8 == 0) ){ goto $label$47 }
	$11 = ($3 + [268])
	$10 = *($11)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$52 }
	
.LOOP $label$53:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$54 }
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$55 }
	CALL $9(*(($9 + [24])))
	
.LABEL $label$55
	CALL $9($9)
	
.LABEL $label$54
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$53 }
	$10 = *(($3 + [264]))
	goto $label$51 
	
.LABEL $label$52
	$10 = $8
	
.LABEL $label$51
	*($11) = $8
	CALL $9($10)
	
.LABEL $label$47
	if ( ((int_32)$6 != (int_32)*($0 + [83])) ){ goto $label$12 }
	$7 = *(*($3 + [148]) + [144])
	$10 = [0]
	*(($3 + [272])) = [0]
	*($3 + [256]) = (int_64)-1
	*($3 + [264]) = (int_64)0
	*($3 + [276]) = [0]
	$1 = *($0)
	*($3 + [240]) = $1
	*($3 + [248]) = $1
	$9 = CALL db_find_i64($1, $1, (int_64)-2507757988870094848, $7)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$57 }
	$10 = CALL $189(($3 + [240]), $9)
	if ( ((int_32)*($10 + [64]) == (int_32)($3 + [240])) ){ goto $label$58 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$58
	*($3 + [16]) = ($3 + [144])
	goto $label$56 
	
.LABEL $label$57
	CALL eosio_assert([0], [10278])
	*($3 + [16]) = ($3 + [144])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$56
	CALL $190(($3 + [240]), $10, ($3 + [16]))
	$8 = *($3 + [264])
	if ( ($8 == 0) ){ goto $label$11 }
	$0 = ($3 + [268])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$60 }
	
.LOOP $label$61:
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$62 }
	CALL $9($9)
	
.LABEL $label$62
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$61 }
	$10 = *(($3 + [264]))
	goto $label$59 
	
.LABEL $label$60
	$10 = $8
	
.LABEL $label$59
	*($0) = $8
	CALL $9($10)
	$13 = [18]
	goto $label$10 
	
.LABEL $label$15
	$13 = [2]
	goto $label$10 
	
.LABEL $label$14
	$13 = [0]
	goto $label$10 
	
.LABEL $label$13
	$13 = [3]
	goto $label$10 
	
.LABEL $label$12
	$13 = [18]
	goto $label$10 
	
.LABEL $label$11
	$13 = [18]
	
.LABEL $label$10
	
.LOOP $label$63:
	goto $label$113 
	
.LABEL $label$115
	$10 = CALL $184(($3 + [240]), $10)
	if ( ((int_64)*($10 + [16]) != (int_64)$1) ){ goto $label$82 }
	$13 = [2]
	goto $label$63 
	
.LABEL $label$114
	CALL eosio_assert([0], [10320])
	$13 = [0]
	goto $label$63 
	
.LABEL $label$113
	$10 = CALL db_next_i64(*($10 + [28]), ($3 + [16]))
	if ( ((int_32)$10 >= (int_32)[0]) ){ goto $label$83 }
	$13 = [3]
	goto $label$63 
	
.LABEL $label$112
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [240])) ){ goto $label$81 }
	$13 = [4]
	goto $label$63 
	
.LABEL $label$111
	CALL eosio_assert([0], [12072])
	$13 = [5]
	goto $label$63 
	
.LABEL $label$110
	*(($10 = CALL $7([40])) + [24]) = ($3 + [240])
	*($10 + [16]) = $1
	*($10 + [8]) = $2
	*($3 + [296]) = (($3 + [16]) + [24])
	*($3 + [292]) = ($3 + [16])
	*($3 + [288]) = ($3 + [16])
	*($3 + [128]) = ($3 + [288])
	$9 = ($10 + [8])
	*($3 + [116]) = $9
	*($3 + [112]) = $10
	*($3 + [120]) = ($10 + [16])
	CALL $191(($3 + [112]), ($3 + [128]))
	$7 = *($10)
	$8 = (($3 + [240]) + [8])
	*($10 + [28]) = CALL db_store_i64(*($8), (int_64)-5003143671300882432, $1, $7, ($3 + [16]), [24])
	$0 = (($3 + [240]) + [16])
	if ( (uint_64)($7 <= *($0)) ){ goto $label$80 }
	$13 = [6]
	goto $label$63 
	
.LABEL $label$109
	*($0) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$13 = [7]
	goto $label$63 
	
.LABEL $label$108
	$7 = *($10)
	$2 = *($8)
	*($3 + [112]) = *($9)
	*($10 + [32]) = CALL db_idx64_store($2, (int_64)-5003143671300882432, $1, $7, ($3 + [112]))
	*($3 + [112]) = $10
	$1 = *($10)
	*($3 + [16]) = $1
	$8 = *(($10 + [28]))
	*($3 + [288]) = $8
	$0 = (($3 + [240]) + [28])
	$9 = *($0)
	if ( ((uint_32)$9 >= (uint_32)*(($3 + [272]))) ){ goto $label$79 }
	$13 = [31]
	goto $label$63 
	
.LABEL $label$107
	*($9 + [8]) = $1
	*($9 + [16]) = $8
	*($3 + [112]) = [0]
	*($9) = $10
	*($0) = ($9 + [24])
	$10 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $10 ){ goto $label$76 }
	goto $label$77 
	
.LABEL $label$106
	CALL $192(($3 + [264]), ($3 + [112]), ($3 + [16]), ($3 + [288]))
	$10 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($10 == 0) ){ goto $label$78 }
	$13 = [9]
	goto $label$63 
	
.LABEL $label$105
	CALL $9($10)
	$13 = [10]
	goto $label$63 
	
.LABEL $label$104
	$8 = *($3 + [264])
	if ( ($8 == 0) ){ goto $label$75 }
	$13 = [11]
	goto $label$63 
	
.LABEL $label$103
	$0 = ($3 + [268])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$74 }
	$13 = [12]
	goto $label$63 
	
.LABEL $label$102
	$13 = [13]
	goto $label$63 
	
.LABEL $label$101
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$72 }
	$13 = [14]
	goto $label$63 
	
.LABEL $label$100
	CALL $9($9)
	$13 = [15]
	goto $label$63 
	
.LABEL $label$99
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$73 }
	$13 = [16]
	goto $label$63 
	
.LABEL $label$98
	$10 = *(($3 + [264]))
	goto $label$71 
	
.LABEL $label$97
	$10 = $8
	$13 = [17]
	goto $label$63 
	
.LABEL $label$96
	*($0) = $8
	CALL $9($10)
	goto $label$70 
	
.LABEL $label$95
	CALL $176(($3 + [176]))
	$8 = *($3 + [224])
	if ( ($8 == 0) ){ goto $label$69 }
	$13 = [19]
	goto $label$63 
	
.LABEL $label$94
	$0 = ($3 + [228])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$68 }
	$13 = [20]
	goto $label$63 
	
.LABEL $label$93
	$13 = [21]
	goto $label$63 
	
.LABEL $label$92
	$10 = ($10 + [-24])
	$9 = *($10)
	*($10) = [0]
	if ( ($9 == 0) ){ goto $label$66 }
	$13 = [22]
	goto $label$63 
	
.LABEL $label$91
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$65 }
	$13 = [23]
	goto $label$63 
	
.LABEL $label$90
	CALL $9(*(($9 + [32])))
	$13 = [24]
	goto $label$63 
	
.LABEL $label$89
	CALL $9($9)
	$13 = [25]
	goto $label$63 
	
.LABEL $label$88
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$67 }
	$13 = [26]
	goto $label$63 
	
.LABEL $label$87
	$10 = *(($3 + [224]))
	goto $label$64 
	
.LABEL $label$86
	$10 = $8
	$13 = [27]
	goto $label$63 
	
.LABEL $label$85
	*($0) = $8
	CALL $9($10)
	$13 = [28]
	goto $label$63 
	
.LABEL $label$84
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$83
	$13 = [1]
	goto $label$63 
	
.LABEL $label$82
	$13 = [0]
	goto $label$63 
	
.LABEL $label$81
	$13 = [5]
	goto $label$63 
	
.LABEL $label$80
	$13 = [7]
	goto $label$63 
	
.LABEL $label$79
	$13 = [8]
	goto $label$63 
	
.LABEL $label$78
	$13 = [10]
	goto $label$63 
	
.LABEL $label$77
	$13 = [10]
	goto $label$63 
	
.LABEL $label$76
	$13 = [9]
	goto $label$63 
	
.LABEL $label$75
	$13 = [18]
	goto $label$63 
	
.LABEL $label$74
	$13 = [30]
	goto $label$63 
	
.LABEL $label$73
	$13 = [13]
	goto $label$63 
	
.LABEL $label$72
	$13 = [15]
	goto $label$63 
	
.LABEL $label$71
	$13 = [17]
	goto $label$63 
	
.LABEL $label$70
	$13 = [18]
	goto $label$63 
	
.LABEL $label$69
	$13 = [28]
	goto $label$63 
	
.LABEL $label$68
	$13 = [29]
	goto $label$63 
	
.LABEL $label$67
	$13 = [21]
	goto $label$63 
	
.LABEL $label$66
	$13 = [25]
	goto $label$63 
	
.LABEL $label$65
	$13 = [24]
	goto $label$63 
	
.LABEL $label$64
	$13 = [27]
	goto $label$63 
	$13
}

int_32 .FUNC $406 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = [0]
	*($4 + [144]) = (int_64)0
	$3 = ($2 + $7)
	$8 = (($4 + [144]) + [8])
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	CALL memcpy(($4 + [144]), $2, [8])
	$9 = ($2 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL memcpy(($4 + [144]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [9])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36 align=4]) = (int_64)361417177238274561
	*($4 + [44]) = [151521030]
	*($4 + [48]) = [2826]
	*($4 + [50 align=2]) = (int_64)144396684594708993
	*($4 + [58]) = [3]
	*($4 + [60 align=4]) = (int_64)289077004450529537
	*($4 + [68]) = [134678021]
	*($4 + [72]) = [265]
	*($4 + [74 align=2]) = (int_64)216736857432785666
	*($4 + [82 align=2]) = [67305985]
	*($4 + [86]) = [261]
	*($4 + [88]) = [2]
	*($4 + [89 align=1]) = (int_64)144399970194490371
	*($4 + [97 align=1]) = (int_64)433757350076154369
	*($4 + [105 align=1]) = [513]
	*($4 + [107 align=1]) = (int_64)723118041428460547
	*($4 + [115 align=1]) = (int_64)289077004467372545
	*($4 + [123 align=1]) = [261]
	*($4 + [125]) = [2]
	*($4 + [128]) = (int_64)72058693550160512
	*($4 + [136]) = [770]
	*($4 + [138]) = [4]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *(($4 + [152]))
	$0 = *($4 + [144])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	$global$0 = ($4 + [160])
	return [1]
}

void .FUNC $180 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = (*($2 + [4]) - *($2))
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = CALL $7($5)
	*(($4 + [16])) = ($5 + ($6 << [4]))
	*($4 + [8]) = $5
	*($4 + [12]) = $5
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($5, $6, $2)
	*($4 + [12]) = ($5 + $2)
	
.LABEL $label$2
	$2 = CALL $561(($4 + [24]), ($4 + [8]), $0, $1, $3)
	CALL $163($2)
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$3 }
	*(($2 + [32])) = $5
	CALL $9($5)
	
.LABEL $label$3
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$4 }
	*(($2 + [20])) = $5
	CALL $9($5)
	
.LABEL $label$4
	$2 = *($4 + [8])
	if ( ($2 == 0) ){ goto $label$5 }
	*($4 + [12]) = $2
	CALL $9($2)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $428 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $369 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [36]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [8]) = *(*($2))
	*($1 + [16]) = *(*($2 + [4]))
	$5 = *($1)
	$6 = *($2 + [8])
	$8 = *($6)
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *($6 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22($6, [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [24]), *(($2 + [8])))
	
.LABEL $label$3
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$2 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($6 + [24])
	$9 = (CASTING uint_64)(uint_32 $6)
	$7 = ($1 + [24])
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($2 <= [513]) ){ goto $label$8 }
	$6 = CALL $1($2)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($4 + [12]) = $6
	*($4 + [8]) = $6
	*($4 + [16]) = ($6 + $2)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [44]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $540(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [40]), (int_64)0, $6, $2)
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($6)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $543 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [15]) = ((int_32)*(*($0) + [84]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0)
	$5 = ($3 + [88])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$5 = ($3 + [92])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$5 = ($3 + [96])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$0 = ($3 + [100])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $269 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [24]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $511 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [244]) = $2
	*($3 + [240]) = $2
	$5 = ($2 + $4)
	*($3 + [248]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [224]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [244])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $2, [8])
	*($3 + [244]) = ($2 + [8])
	*($3 + [216]) = [0]
	*($3 + [208]) = (int_64)0
	CALL $415(($3 + [240]), ($3 + [208]))
	*($3 + [200]) = [0]
	*($3 + [192]) = (int_64)0
	CALL $415(($3 + [240]), ($3 + [192]))
	*(($2 = (($3 + [40]) + [8]))) = *((($3 + [240]) + [8]))
	*($3 + [40]) = *($3 + [240])
	*(($4 = (($3 + [256]) + [8]))) = *($2)
	*($3 + [256]) = *($3 + [40])
	$2 = *($4)
	*((($3 + [272]) + [8])) = $2
	*(($3 + [80])) = $2
	*($3 + [56]) = $0
	*($3 + [64]) = $1
	$0 = *($3 + [256])
	*($3 + [72]) = $0
	*($3 + [272]) = $0
	*($3 + [84 align=4]) = (int_64)361417177238274561
	*($3 + [92 align=4]) = (int_64)144408800781666054
	*($3 + [100]) = [1027]
	*($3 + [102 align=2]) = (int_64)72339081933160453
	*($3 + [110 align=2]) = [33620738]
	*($3 + [114]) = [1027]
	*($3 + [116 align=4]) = (int_64)216736870368216581
	*($3 + [124]) = [17171716]
	*($3 + [128]) = (int_64)73469379886514946
	*($3 + [136]) = [770]
	*($3 + [138 align=2]) = (int_64)72621656421500164
	*($3 + [146 align=2]) = [50462978]
	*($3 + [150]) = [1284]
	*($3 + [152]) = (int_64)506097522914230534
	*($3 + [160]) = [17434888]
	*($3 + [164]) = [770]
	*($3 + [166]) = [4]
	*($3 + [167 align=1]) = [67305985]
	*($3 + [171 align=1]) = [261]
	*($3 + [173]) = [2]
	*($3 + [176]) = (int_64)72058693550160512
	*($3 + [184]) = [770]
	*($3 + [186]) = [4]
	$2 = CALL $18(($3 + [8]), ($3 + [192]))
	$4 = CALL $18(($3 + [24]), ($3 + [208]))
	CALL $346(($3 + [56]), *($3 + [232]), *($3 + [224]), $4, $2)
	if ( (*($2) & [1]) ){ goto $label$13 }
	if ( (*($4) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $9(*($2 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*($4 + [8]))
	$2 = [1]
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$2 = [1]
	if ( (*($3 + [192]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($3 + [208]) & $2) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($3 + [200])))
	if ( ((*($3 + [208]) & $2) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [216])))
	$global$0 = ($3 + [288])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [288])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [36]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $523(($3 + [32]), ($3 + [24]))
	*($5 + [40]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $371(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [32])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $368 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [128])
	$global$0 = $5
	*($5 + [72]) = $3
	*($5 + [64]) = $2
	*($5 + [80]) = $1
	CALL require_auth(*($0))
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	$2 = *($0)
	*($5 + [24]) = $2
	*($5 + [32]) = $2
	$6 = CALL db_find_i64($2, $2, (int_64)4982871467403247616, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $33(($5 + [24]), $6)
	if ( ((int_32)*($0 + [36]) == (int_32)($5 + [24])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*($5 + [16]) = $4
	*($5 + [12]) = ($5 + [72])
	*($5 + [8]) = ($5 + [64])
	CALL $369(($5 + [24]), $0, ($5 + [8]))
	$6 = *($5 + [48])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = *($0)
	*($5 + [20]) = $4
	*($5 + [12]) = ($5 + [64])
	*($5 + [8]) = ($5 + [80])
	*($5 + [16]) = ($5 + [72])
	*($5 + [120]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [24])) ){ goto $label$5 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$5
	*($5 + [100]) = ($5 + [8])
	*($5 + [96]) = ($5 + [24])
	*($5 + [104]) = ($5 + [120])
	*(($0 = CALL $7([48])) + [16]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [32]) = [0]
	*($0 + [36]) = ($5 + [24])
	CALL $370(($5 + [96]), $0)
	*($5 + [112]) = $0
	$2 = *($0)
	*($5 + [96]) = $2
	$6 = *($0 + [40])
	*($5 + [92]) = $6
	$7 = ($5 + [52])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($5 + [56]))) ){ goto $label$8 }
	*($4 + [8]) = $2
	*($4 + [16]) = $6
	*($5 + [112]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	$0 = *($5 + [112])
	*($5 + [112]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $371(($5 + [48]), ($5 + [112]), ($5 + [96]), ($5 + [92]))
	$0 = *($5 + [112])
	*($5 + [112]) = [0]
	if ( $0 ){ goto $label$6 }
	
.LABEL $label$7
	$6 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((*($0 + [24]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($0 + [32])))
	
.LABEL $label$9
	CALL $9($0)
	$6 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($5 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($4 + [32])))
	
.LABEL $label$14
	CALL $9($4)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($5 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $6
	
.LABEL $label$10
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($5 + [128])
}

int_32 .FUNC $300 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [120])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [13023])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [120])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)5534162690622095360, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [120]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [112]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $295($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)5534162690622095360, $6))
	if ( ((int_32)*($3 + [112]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [120])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $429 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($0 + [17])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $208 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [112])
	$global$0 = $5
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$6 = *($0)
	*($5 + [48]) = (int_64)3617214756542218240
	*($5 + [40]) = $1
	*((($0 = CALL $7([16])) + [8])) = *($5 + [48])
	*($0) = *($5 + [40])
	*(($7 = (($5 + [56]) + [6]))) = *((($5 + [33]) + [6]))
	*(($8 = (($5 + [56]) + [4]))) = *((($5 + [33]) + [4]))
	*(($5 + [95])) = *($7)
	*(($5 + [93])) = *($8)
	*($5 + [96]) = $0
	$0 = ($0 + [16])
	*($5 + [100]) = $0
	*($5 + [104]) = $0
	*($5 + [64]) = (int_64)-5915094966574078064
	*($5 + [72]) = (int_64)1
	*($5 + [80]) = (int_64)1
	*($5 + [88]) = [0]
	$0 = *($5 + [33 align=1])
	*($5 + [56]) = $0
	*($5 + [89 align=1]) = $0
	*(($5 + [16])) = (int_64)1
	*(($5 + [8])) = (int_64)1
	*(($5 + [24])) = *($5 + [88])
	*($5) = (int_64)-5915094966574078064
	CALL $201($6, (int_64)-4420672453949259776, ($5 + [96]), $5)
	$0 = *($5 + [96])
	if ( ($0 == 0) ){ goto $label$2 }
	*($5 + [100]) = $0
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($5 + [112])
}

void .FUNC $209 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$5 = ($global$0 - [256])
	$global$0 = $5
	*($5 + [216]) = $2
	*($5 + [224]) = $1
	*($5 + [208]) = $3
	*($5 + [207]) = $4
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$6 = CALL $56($0, (int_64)6110391469059420832)
	$7 = CALL $56($0, (int_64)6110391462096876192)
	$8 = CALL $56($0, (int_64)6110391469059420832)
	$2 = CALL $210($0, (int_64)-7880044396964042864)
	$9 = CALL $56($0, (int_64)-6147823752712473952)
	$10 = CALL $56($0, (int_64)5094026183813278864)
	$11 = CALL $56($0, (int_64)-6147822881404538208)
	*(($5 + [192])) = [0]
	*($5 + [176]) = (int_64)-1
	*($5 + [184]) = (int_64)0
	*($5 + [196]) = [0]
	$1 = *($0)
	*($5 + [160]) = $1
	*($5 + [168]) = $1
	$11 = ((uint_64)((int_64)$11 * (int_64)$2) / (uint_64)(int_64)100)
	$4 = CALL db_find_i64($1, $1, (int_64)-2507757988870094848, $3)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $189(($5 + [160]), $4)
	if ( ((int_32)*($4 + [64]) == (int_32)($5 + [160])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*($5 + [156]) = $4
	*($5 + [152]) = ($5 + [160])
	goto $label$2 
	
.LABEL $label$3
	*($5 + [156]) = [0]
	*($5 + [152]) = ($5 + [160])
	CALL eosio_assert([0], [10576])
	$4 = *($5 + [156])
	
.LABEL $label$2
	$4 = *($4 + [8])
	*($5 + [151]) = $4
	if ( ((int_32)$4 != (int_32)*($0 + [56])) ){ goto $label$5 }
	$1 = ((uint_64)((int_64)$9 * (int_64)$2) / (uint_64)(int_64)100)
	if ( ((int_64)$6 == (int_64)1) ){ goto $label$6 }
	CALL eosio_assert([0], [10599])
	$4 = *($5 + [151])
	
.LABEL $label$6
	*($5 + [136]) = $1
	
.LABEL $label$5
	if ( ((int_32)($4 & [255]) != (int_32)*($0 + [59])) ){ goto $label$7 }
	if ( ((int_64)$7 == (int_64)1) ){ goto $label$8 }
	CALL eosio_assert([0], [10656])
	$4 = *($5 + [151])
	
.LABEL $label$8
	*($5 + [136]) = $10
	
.LABEL $label$7
	if ( ((int_32)($4 & [255]) != (int_32)*($0 + [62])) ){ goto $label$9 }
	if ( ((int_64)$8 == (int_64)1) ){ goto $label$10 }
	CALL eosio_assert([0], [10723])
	$4 = *($5 + [151])
	
.LABEL $label$10
	*($5 + [136]) = $11
	
.LABEL $label$9
	$12 = *(*($5 + [156]) + [52])
	$13 = ($4 & [255])
	if ( ((int_32)$13 == (int_32)*(($0 + [56]))) ){ goto $label$11 }
	if ( ((int_32)$13 == (int_32)*(($0 + [59]))) ){ goto $label$11 }
	if ( ((int_32)($4 & [255]) == (int_32)*(($0 + [62]))) ){ goto $label$11 }
	CALL eosio_assert([0], [10782])
	
.LABEL $label$11
	if ( ((uint_32)$12 >= (uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $24() / (int_64)1000000))) ){ goto $label$23 }
	$12 = *(($0 + [62]))
	$4 = *($5 + [151])
	if ( ((int_32)$4 != (int_32)$12) ){ goto $label$22 }
	*($5 + [48]) = *($0 + [64])
	goto $label$16 
	
.LABEL $label$23
	*(($5 + [128])) = [0]
	*($5 + [112]) = (int_64)-1
	*($5 + [120]) = (int_64)0
	*($5 + [132]) = [0]
	$1 = *($0)
	*($5 + [96]) = $1
	*($5 + [104]) = $1
	*($5 + [88]) = ($5 + [96])
	CALL $211(($5 + [48]), ($5 + [88]), ($5 + [216]))
	$4 = *($5 + [52])
	if ( ($4 == 0) ){ goto $label$25 }
	if ( ((int_64)*($5 + [216]) != (int_64)*($4 + [16])) ){ goto $label$25 }
	$1 = *($5 + [48])
	*($5 + [80]) = $1
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($4) == 0) ){ goto $label$24 }
	$14 = ($0 + [59])
	$12 = ($0 + [127])
	$13 = ($0 + [128])
	$15 = ($5 + [56])
	$16 = ($0 + [126])
	$17 = ($0 + [56])
	$18 = ($0 + [129])
	$19 = ($0 + [130])
	$20 = ($0 + [62])
	$21 = [0]
	
.LOOP $label$27:
	if ( ((int_64)*($4 + [16]) != (int_64)*($5 + [216])) ){ goto $label$26 }
	if ( ((int_64)*($4 + [8]) != (int_64)*($5 + [208])) ){ goto $label$28 }
	$21 = *($5 + [151])
	if ( ((int_32)$21 != (int_32)*($14)) ){ goto $label$30 }
	if ( CALL $160($0, *($5 + [224])) ){ goto $label$31 }
	CALL eosio_assert([0], [10824])
	
.LABEL $label$31
	$21 = *($5 + [207])
	$22 = *($5 + [84])
	$4 = *($22 + [25])
	if ( ((int_32)$4 == (int_32)$21) ){ goto $label$18 }
	if ( ((int_32)$4 != (int_32)*($12)) ){ goto $label$32 }
	if ( ((int_32)$21 != (int_32)*($13)) ){ goto $label$32 }
	*($5 + [48]) = $0
	CALL $212(($5 + [96]), $22, ($5 + [48]))
	$21 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $21 ){ goto $label$33 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$33
	CALL $213(($5 + [160]), $21, ($5 + [48]))
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)*($13)) ){ goto $label$34 }
	if ( ((int_32)*($5 + [207]) != (int_32)*($12)) ){ goto $label$34 }
	$21 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $214(($5 + [96]), $21, ($5 + [48]))
	$21 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $21 ){ goto $label$35 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$35
	CALL $215(($5 + [160]), $21, ($5 + [48]))
	
.LABEL $label$34
	if ( ((int_32)$4 != (int_32)*($16)) ){ goto $label$29 }
	$4 = *($5 + [207])
	if ( ((int_32)$4 != (int_32)*($12)) ){ goto $label$36 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $216(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$37 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$37
	CALL $217(($5 + [160]), $4, ($5 + [48]))
	$4 = *($5 + [207])
	
.LABEL $label$36
	if ( ((int_32)($4 & [255]) != (int_32)*($13)) ){ goto $label$29 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $218(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$38 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$38
	CALL $219(($5 + [160]), $4, ($5 + [48]))
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$21 != (int_32)*($17)) ){ goto $label$39 }
	$21 = *($4 + [24])
	if ( ((int_32)$21 != (int_32)*($16)) ){ goto $label$40 }
	$22 = *($5 + [207])
	if ( ((int_32)$22 != (int_32)*($12)) ){ goto $label$41 }
	*($5 + [48]) = $0
	CALL $220(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$42 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$42
	CALL $221(($5 + [160]), $4, ($5 + [48]))
	$22 = *($5 + [207])
	
.LABEL $label$41
	if ( ((int_32)($22 & [255]) != (int_32)*($13)) ){ goto $label$40 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $222(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$43 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$43
	CALL $223(($5 + [160]), $4, ($5 + [48]))
	
.LABEL $label$40
	if ( ((int_32)$21 != (int_32)*($12)) ){ goto $label$44 }
	$4 = *($5 + [207])
	if ( ((int_32)$4 != (int_32)*($13)) ){ goto $label$45 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $224(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$46 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$46
	CALL $225(($5 + [160]), $4, ($5 + [48]))
	$4 = *($5 + [207])
	
.LABEL $label$45
	if ( ((int_32)($4 & [255]) != (int_32)*($18)) ){ goto $label$44 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $226(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	if ( $4 ){ goto $label$47 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$47
	CALL $227(($5 + [160]), $4)
	
.LABEL $label$44
	if ( ((int_32)$21 != (int_32)*($13)) ){ goto $label$29 }
	$4 = *($5 + [207])
	if ( ((int_32)$4 != (int_32)*($12)) ){ goto $label$48 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $228(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$49 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$49
	CALL $229(($5 + [160]), $4, ($5 + [48]))
	$4 = *($5 + [207])
	
.LABEL $label$48
	if ( ((int_32)($4 & [255]) != (int_32)*($19)) ){ goto $label$29 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $230(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	if ( $4 ){ goto $label$50 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$50
	CALL $231(($5 + [160]), $4)
	goto $label$29 
	
.LABEL $label$39
	if ( ((int_32)$21 != (int_32)*($20)) ){ goto $label$51 }
	$21 = *($4 + [26])
	if ( ((int_32)$21 != (int_32)*($16)) ){ goto $label$52 }
	$22 = *($5 + [207])
	if ( ((int_32)$22 != (int_32)*($12)) ){ goto $label$53 }
	*($5 + [48]) = $0
	CALL $232(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$54 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$54
	CALL $233(($5 + [160]), $4, ($5 + [48]))
	$22 = *($5 + [207])
	
.LABEL $label$53
	if ( ((int_32)($22 & [255]) != (int_32)*($13)) ){ goto $label$52 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $234(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$55 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$55
	CALL $235(($5 + [160]), $4, ($5 + [48]))
	
.LABEL $label$52
	if ( ((int_32)$21 != (int_32)*($12)) ){ goto $label$56 }
	$4 = *($5 + [207])
	if ( ((int_32)$4 != (int_32)*($13)) ){ goto $label$57 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $236(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$58 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$58
	CALL $237(($5 + [160]), $4, ($5 + [48]))
	$4 = *($5 + [207])
	
.LABEL $label$57
	if ( ((int_32)($4 & [255]) != (int_32)*($18)) ){ goto $label$56 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $238(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	if ( $4 ){ goto $label$59 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$59
	CALL $239(($5 + [160]), $4)
	
.LABEL $label$56
	if ( ((int_32)$21 != (int_32)*($13)) ){ goto $label$29 }
	$4 = *($5 + [207])
	if ( ((int_32)$4 != (int_32)*($12)) ){ goto $label$60 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $240(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	*($15) = $0
	*($5 + [52]) = ($5 + [136])
	*($5 + [48]) = ($5 + [152])
	if ( $4 ){ goto $label$61 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$61
	CALL $241(($5 + [160]), $4, ($5 + [48]))
	$4 = *($5 + [207])
	
.LABEL $label$60
	if ( ((int_32)($4 & [255]) != (int_32)*($19)) ){ goto $label$29 }
	$4 = *($5 + [84])
	*($5 + [48]) = $0
	CALL $242(($5 + [96]), $4, ($5 + [48]))
	$4 = *($5 + [156])
	if ( $4 ){ goto $label$62 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$62
	CALL $243(($5 + [160]), $4)
	goto $label$29 
	
.LABEL $label$51
	CALL eosio_assert([0], [10865])
	
.LABEL $label$29
	CALL $244(($5 + [80]))
	$21 = [1]
	$4 = *($5 + [84])
	
.LABEL $label$28
	if ( $4 ){ goto $label$27 }
	
.LABEL $label$26
	if ( (($21 & [1]) == 0) ){ goto $label$24 }
	goto $label$18 
	
.LABEL $label$25
	*($5 + [84]) = [0]
	*($5 + [80]) = ($5 + [88])
	
.LABEL $label$24
	$1 = *($5 + [224])
	*($5 + [60]) = $0
	*($5 + [52]) = ($5 + [208])
	*($5 + [48]) = ($5 + [96])
	*($5 + [56]) = ($5 + [216])
	*($5 + [64]) = ($5 + [151])
	*($5 + [68]) = ($5 + [207])
	*($5 + [72]) = ($5 + [224])
	*($5 + [240]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [96])) ){ goto $label$63 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$63
	*($5 + [36]) = ($5 + [48])
	*($5 + [32]) = ($5 + [96])
	*($5 + [40]) = ($5 + [240])
	*(($4 = CALL $7([48])) + [32]) = ($5 + [96])
	CALL $245(($5 + [32]), $4)
	*($5 + [232]) = $4
	$1 = *($4)
	*($5 + [32]) = $1
	$13 = *($4 + [36])
	*($5 + [252]) = $13
	$21 = ($5 + [124])
	$12 = *($21)
	if ( ((uint_32)$12 >= (uint_32)*(($5 + [128]))) ){ goto $label$21 }
	*($12 + [8]) = $1
	*($12 + [16]) = $13
	*($5 + [232]) = [0]
	*($12) = $4
	*($21) = ($12 + [24])
	$4 = *($5 + [232])
	*($5 + [232]) = [0]
	if ( $4 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	if ( ((int_32)$4 != (int_32)*(($0 + [59]))) ){ goto $label$17 }
	*($5 + [48]) = $12
	goto $label$16 
	
.LABEL $label$21
	CALL $246(($5 + [120]), ($5 + [232]), ($5 + [32]), ($5 + [252]))
	$4 = *($5 + [232])
	*($5 + [232]) = [0]
	if ( ($4 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $9($4)
	
.LABEL $label$19
	$1 = *($0)
	*($5 + [40]) = (int_64)3617214756542218240
	*($5 + [32]) = $1
	*((($4 = CALL $7([16])) + [8])) = *($5 + [40])
	*($4) = *($5 + [32])
	*(($12 = (($5 + [232]) + [4]))) = *((($5 + [26]) + [4]))
	*(($5 + [70])) = *($12)
	*(($5 + [8])) = (int_64)1
	*($5 + [64]) = [1]
	$12 = *($5 + [26 align=2])
	*($5 + [66 align=2]) = $12
	*(($5 + [16])) = *($5 + [64])
	*($5 + [240]) = $4
	$4 = ($4 + [16])
	*($5 + [244]) = $4
	*($5 + [248]) = $4
	*($5 + [48]) = (int_64)-2507753050160389248
	*($5 + [56]) = (int_64)1
	*($5) = (int_64)-2507753050160389248
	*($5 + [232]) = $12
	CALL $206($1, (int_64)-4420674027266244608, ($5 + [240]), $5)
	$4 = *($5 + [240])
	if ( ($4 == 0) ){ goto $label$64 }
	*($5 + [244]) = $4
	CALL $9($4)
	
.LABEL $label$64
	$4 = *($5 + [156])
	*($5 + [48]) = $0
	*($5 + [52]) = ($5 + [151])
	*($5 + [56]) = ($5 + [207])
	*($5 + [60]) = ($5 + [152])
	*($5 + [64]) = ($5 + [136])
	if ( $4 ){ goto $label$65 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$65
	CALL $247(($5 + [160]), $4, ($5 + [48]))
	
.LABEL $label$18
	$12 = *($5 + [120])
	if ( ($12 == 0) ){ goto $label$15 }
	$13 = ($5 + [124])
	$0 = *($13)
	if ( ((int_32)$0 == (int_32)$12) ){ goto $label$14 }
	
.LOOP $label$66:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$67 }
	CALL $9($4)
	
.LABEL $label$67
	if ( ((int_32)$12 != (int_32)$0) ){ goto $label$66 }
	$0 = *(($5 + [120]))
	*($13) = $12
	CALL $9($0)
	$12 = *($5 + [184])
	if ( $12 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)*(($0 + [56]))) ){ goto $label$16 }
	*($5 + [48]) = *($0 + [58])
	
.LABEL $label$16
	$0 = *($5 + [156])
	*($5 + [96]) = ($5 + [48])
	if ( $0 ){ goto $label$68 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$68
	CALL $248(($5 + [160]), $0, ($5 + [96]))
	
.LABEL $label$15
	$12 = *($5 + [184])
	if ( $12 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	*($13) = $12
	CALL $9($12)
	$12 = *($5 + [184])
	if ( ($12 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$13 = ($5 + [188])
	$0 = *($13)
	if ( ((int_32)$0 == (int_32)$12) ){ goto $label$70 }
	
.LOOP $label$71:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$72 }
	CALL $9($4)
	
.LABEL $label$72
	if ( ((int_32)$12 != (int_32)$0) ){ goto $label$71 }
	$0 = *(($5 + [184]))
	goto $label$69 
	
.LABEL $label$70
	$0 = $12
	
.LABEL $label$69
	*($13) = $12
	CALL $9($0)
	$global$0 = ($5 + [256])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [256])
}

void .FUNC $202 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [208])
	$global$0 = $5
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( ((int_32)*($0 + [53]) != (int_32)$4) ){ goto $label$5 }
	$4 = ($0 + [56])
	$6 = CALL $56($0, (int_64)-5915097204509215376)
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)*($0 + [54]) != (int_32)$4) ){ goto $label$6 }
	$4 = ($0 + [56])
	$6 = CALL $56($0, (int_64)-4418105526222424720)
	$7 = [1]
	goto $label$3 
	
.LABEL $label$6
	if ( ((int_32)*($0 + [55]) != (int_32)$4) ){ goto $label$2 }
	$4 = ($0 + [59])
	$6 = CALL $56($0, (int_64)-5915103801578982032)
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	$8 = *($4)
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [68]) = [0]
	$9 = *($0)
	*($5 + [32]) = $9
	*($5 + [40]) = $9
	$10 = (int_64)0
	*($5 + [56]) = (int_64)0
	$4 = CALL db_lowerbound_i64($9, $9, (int_64)-2507757988870094848, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$8 }
	CALL $189(($5 + [32]), $4)
	*($5 + [84]) = [0]
	*($5 + [80]) = ($5 + [32])
	$9 = *(*(CALL $203(($5 + [80])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	*(($4 = ($5 + [48]))) = $10
	if ( (uint_64)($10 <= (int_64)-2) ){ goto $label$7 }
	CALL eosio_assert([0], [13330])
	$10 = *($4)
	goto $label$7 
	
.LABEL $label$8
	*(($5 + [48])) = (int_64)0
	
.LABEL $label$7
	$11 = (CASTING uint_32)(uint_64 $6)
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [32])) ){ goto $label$9 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$9
	*(($4 = CALL $7([80])) + [64]) = ($5 + [32])
	*($4 + [8]) = $8
	*($4) = $10
	*($4 + [16]) = $3
	*($4 + [24]) = $2
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = [0]
	*($4 + [44 align=4]) = (int_64)0
	*($4 + [56]) = $7
	*($4 + [52]) = ((CASTING uint_32)(uint_64 ((int_64)CALL $24() / (int_64)1000000)) + $11)
	*($5 + [152]) = (($5 + [80]) + [55])
	*($5 + [148]) = ($5 + [80])
	*($5 + [144]) = ($5 + [80])
	*($5 + [72]) = ($5 + [144])
	$11 = ($4 + [8])
	*($5 + [164]) = $11
	*($5 + [160]) = $4
	$12 = ($4 + [16])
	*($5 + [168]) = $12
	*($5 + [172]) = ($4 + [24])
	*($5 + [176]) = ($4 + [32])
	*($5 + [180]) = ($4 + [36])
	*($5 + [184]) = ($4 + [40])
	*($5 + [188]) = ($4 + [41])
	*($5 + [192]) = ($4 + [44])
	*($5 + [196]) = ($4 + [48])
	*($5 + [200]) = ($4 + [52])
	*($5 + [204]) = ($4 + [56])
	CALL $204(($5 + [160]), ($5 + [72]))
	$9 = *($4)
	$7 = (($5 + [32]) + [8])
	*($4 + [68]) = CALL db_store_i64(*($7), (int_64)-2507757988870094848, $1, $9, ($5 + [80]), [55])
	$13 = (($5 + [32]) + [16])
	if ( (uint_64)($9 <= *($13)) ){ goto $label$10 }
	*($13) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$9 = *($4)
	$10 = *($7)
	*($5 + [160]) = *($11)
	*($4 + [72]) = CALL db_idx64_store($10, (int_64)-2507757988870094848, $1, $9, ($5 + [160]))
	$9 = *($4)
	$10 = *($7)
	*($5 + [160]) = *($12)
	*($4 + [76]) = CALL db_idx64_store($10, (int_64)-2507757988870094847, $1, $9, ($5 + [160]))
	*($5 + [160]) = $4
	$1 = *($4)
	*($5 + [80]) = $1
	$11 = *(($4 + [68]))
	*($5 + [144]) = $11
	$12 = ($5 + [60])
	$7 = *($12)
	if ( ((uint_32)$7 >= (uint_32)*((($5 + [32]) + [32]))) ){ goto $label$13 }
	*($7 + [8]) = $1
	*($7 + [16]) = $11
	*($5 + [160]) = [0]
	*($7) = $4
	*($12) = ($7 + [24])
	$4 = *($5 + [160])
	*($5 + [160]) = [0]
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $205(($5 + [56]), ($5 + [160]), ($5 + [80]), ($5 + [144]))
	$4 = *($5 + [160])
	*($5 + [160]) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9($4)
	
.LABEL $label$11
	$1 = *($0)
	*($5 + [168]) = (int_64)3617214756542218240
	*($5 + [160]) = $1
	*((($4 = CALL $7([16])) + [8])) = *($5 + [168])
	*($4) = *($5 + [160])
	*(($0 = (($5 + [72]) + [4]))) = *((($5 + [26]) + [4]))
	*(($5 + [102])) = *($0)
	*(($5 + [8])) = (int_64)1
	*($5 + [96]) = [1]
	$0 = *($5 + [26 align=2])
	*($5 + [98 align=2]) = $0
	*(($5 + [16])) = *($5 + [96])
	*($5 + [144]) = $4
	$4 = ($4 + [16])
	*($5 + [148]) = $4
	*($5 + [152]) = $4
	*($5 + [80]) = (int_64)-5915094966574078064
	*($5 + [88]) = (int_64)1
	*($5) = (int_64)-5915094966574078064
	*($5 + [72]) = $0
	CALL $206($1, (int_64)-4420674027266244608, ($5 + [144]), $5)
	$4 = *($5 + [144])
	if ( ($4 == 0) ){ goto $label$14 }
	*($5 + [148]) = $4
	CALL $9($4)
	
.LABEL $label$14
	$7 = *($5 + [56])
	if ( ($7 == 0) ){ goto $label$2 }
	$11 = ($5 + [60])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL $9($0)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$17 }
	$4 = *(($5 + [56]))
	goto $label$15 
	
.LABEL $label$16
	$4 = $7
	
.LABEL $label$15
	*($11) = $7
	CALL $9($4)
	
.LABEL $label$2
	$global$0 = ($5 + [208])
}

int_32 .FUNC $203 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [68]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-2507757988870094848)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $189(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $200 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$5 = ($global$0 - [112])
	$global$0 = $5
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$6 = *($0 + [53])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	if ( ((int_32)*($0 + [54]) == (int_32)$4) ){ goto $label$5 }
	if ( ((int_32)*($0 + [55]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [10356])
	$6 = *(($0 + [53]))
	
.LABEL $label$5
	if ( ((int_32)($6 & [255]) != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)CALL $56($0, (int_64)6110391469055764864) == (int_64)1) ){ goto $label$2 }
	CALL eosio_assert([0], [10378])
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)*($0 + [54]) != (int_32)$4) ){ goto $label$6 }
	if ( ((int_64)CALL $56($0, (int_64)6110391470449941632) == (int_64)1) ){ goto $label$2 }
	CALL eosio_assert([0], [10431])
	goto $label$2 
	
.LABEL $label$6
	if ( CALL $160($0, $1) ){ goto $label$7 }
	CALL eosio_assert([0], [10492])
	
.LABEL $label$7
	if ( ((int_64)CALL $56($0, (int_64)6110391462128642944) == (int_64)1) ){ goto $label$2 }
	CALL eosio_assert([0], [10514])
	
.LABEL $label$2
	$7 = *($0)
	*($5 + [48]) = (int_64)3617214756542218240
	*($5 + [40]) = $1
	*((($0 = CALL $7([16])) + [8])) = *($5 + [48])
	*($0) = *($5 + [40])
	*(($6 = (($5 + [56]) + [6]))) = *((($5 + [33]) + [6]))
	*(($8 = (($5 + [56]) + [4]))) = *((($5 + [33]) + [4]))
	*(($5 + [95])) = *($6)
	*(($5 + [93])) = *($8)
	*($5 + [96]) = $0
	$0 = ($0 + [16])
	*($5 + [100]) = $0
	*($5 + [104]) = $0
	*($5 + [64]) = $1
	*($5 + [72]) = $2
	*($5 + [80]) = $3
	*($5 + [88]) = $4
	$0 = *($5 + [33 align=1])
	*($5 + [56]) = $0
	*($5 + [89 align=1]) = $0
	*(($5 + [16])) = $3
	*(($5 + [8])) = $2
	*(($5 + [24])) = *($5 + [88])
	*($5) = $1
	CALL $201($7, (int_64)-4420677021986903552, ($5 + [96]), $5)
	$0 = *($5 + [96])
	if ( ($0 == 0) ){ goto $label$8 }
	*($5 + [100]) = $0
	CALL $9($0)
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $201 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	CALL $161(($4 + [52]), [25])
	$5 = ($4 + [56])
	$7 = *($5)
	$2 = *($4 + [52])
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = $7
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $564(($4 + [88]), ($4 + [80]))
	CALL $163(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$6
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $206 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	CALL $161(($4 + [52]), [18])
	$5 = ($4 + [56])
	$7 = *($5)
	$2 = *($4 + [52])
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = $7
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $565(($4 + [88]), ($4 + [80]))
	CALL $163(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$6
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $207 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$6 = ($global$0 - [208])
	$global$0 = $6
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	if ( ((int_32)*($0 + [53]) != (int_32)$5) ){ goto $label$5 }
	$5 = ($0 + [56])
	$7 = CALL $56($0, (int_64)-5915097204509215376)
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)*($0 + [54]) != (int_32)$5) ){ goto $label$6 }
	$5 = ($0 + [56])
	$7 = CALL $56($0, (int_64)-4418105526222424720)
	$8 = [1]
	goto $label$3 
	
.LABEL $label$6
	if ( ((int_32)*($0 + [55]) != (int_32)$5) ){ goto $label$2 }
	$5 = ($0 + [59])
	$7 = CALL $56($0, (int_64)-5915103801578982032)
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	$9 = *($5)
	*(($6 + [64])) = [0]
	*($6 + [48]) = (int_64)-1
	*($6 + [68]) = [0]
	$1 = *($0)
	*($6 + [32]) = $1
	*($6 + [40]) = $1
	$10 = (int_64)0
	*($6 + [56]) = (int_64)0
	$5 = CALL db_lowerbound_i64($1, $1, (int_64)-2507757988870094848, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	CALL $189(($6 + [32]), $5)
	*($6 + [84]) = [0]
	*($6 + [80]) = ($6 + [32])
	$1 = *(*(CALL $203(($6 + [80])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	*(($5 = ($6 + [48]))) = $10
	if ( (uint_64)($10 <= (int_64)-2) ){ goto $label$7 }
	CALL eosio_assert([0], [13330])
	$10 = *($5)
	goto $label$7 
	
.LABEL $label$8
	*(($6 + [48])) = (int_64)0
	
.LABEL $label$7
	$11 = (CASTING uint_32)(uint_64 $7)
	if ( ((int_64)CALL current_receiver() == (int_64)*($6 + [32])) ){ goto $label$9 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$9
	*(($5 = CALL $7([80])) + [64]) = ($6 + [32])
	*($5 + [8]) = $9
	*($5) = $10
	*($5 + [16]) = $4
	*($5 + [24]) = $3
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [56]) = $8
	*($5 + [52]) = ((CASTING uint_32)(uint_64 ((int_64)CALL $24() / (int_64)1000000)) + $11)
	*($6 + [152]) = (($6 + [80]) + [55])
	*($6 + [148]) = ($6 + [80])
	*($6 + [144]) = ($6 + [80])
	*($6 + [72]) = ($6 + [144])
	$11 = ($5 + [8])
	*($6 + [164]) = $11
	*($6 + [160]) = $5
	$12 = ($5 + [16])
	*($6 + [168]) = $12
	*($6 + [172]) = ($5 + [24])
	*($6 + [176]) = ($5 + [32])
	*($6 + [180]) = ($5 + [36])
	*($6 + [184]) = ($5 + [40])
	*($6 + [188]) = ($5 + [41])
	*($6 + [192]) = ($5 + [44])
	*($6 + [196]) = ($5 + [48])
	*($6 + [200]) = ($5 + [52])
	*($6 + [204]) = ($5 + [56])
	CALL $204(($6 + [160]), ($6 + [72]))
	$1 = *($5)
	$8 = (($6 + [32]) + [8])
	*($5 + [68]) = CALL db_store_i64(*($8), (int_64)-2507757988870094848, $2, $1, ($6 + [80]), [55])
	$13 = (($6 + [32]) + [16])
	if ( (uint_64)($1 <= *($13)) ){ goto $label$10 }
	*($13) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$1 = *($5)
	$10 = *($8)
	*($6 + [160]) = *($11)
	*($5 + [72]) = CALL db_idx64_store($10, (int_64)-2507757988870094848, $2, $1, ($6 + [160]))
	$1 = *($5)
	$10 = *($8)
	*($6 + [160]) = *($12)
	*($5 + [76]) = CALL db_idx64_store($10, (int_64)-2507757988870094847, $2, $1, ($6 + [160]))
	*($6 + [160]) = $5
	$2 = *($5)
	*($6 + [80]) = $2
	$11 = *(($5 + [68]))
	*($6 + [144]) = $11
	$12 = ($6 + [60])
	$8 = *($12)
	if ( ((uint_32)$8 >= (uint_32)*((($6 + [32]) + [32]))) ){ goto $label$13 }
	*($8 + [8]) = $2
	*($8 + [16]) = $11
	*($6 + [160]) = [0]
	*($8) = $5
	*($12) = ($8 + [24])
	$5 = *($6 + [160])
	*($6 + [160]) = [0]
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $205(($6 + [56]), ($6 + [160]), ($6 + [80]), ($6 + [144]))
	$5 = *($6 + [160])
	*($6 + [160]) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9($5)
	
.LABEL $label$11
	$2 = *($0)
	*($6 + [168]) = (int_64)3617214756542218240
	*($6 + [160]) = $2
	*((($5 = CALL $7([16])) + [8])) = *($6 + [168])
	*($5) = *($6 + [160])
	*(($0 = (($6 + [72]) + [4]))) = *((($6 + [26]) + [4]))
	*(($6 + [102])) = *($0)
	*(($6 + [8])) = (int_64)1
	*($6 + [96]) = [1]
	$0 = *($6 + [26 align=2])
	*($6 + [98 align=2]) = $0
	*(($6 + [16])) = *($6 + [96])
	*($6 + [144]) = $5
	$5 = ($5 + [16])
	*($6 + [148]) = $5
	*($6 + [152]) = $5
	*($6 + [80]) = (int_64)-5915094966574078064
	*($6 + [88]) = (int_64)1
	*($6) = (int_64)-5915094966574078064
	*($6 + [72]) = $0
	CALL $206($2, (int_64)-4420674027266244608, ($6 + [144]), $6)
	$5 = *($6 + [144])
	if ( ($5 == 0) ){ goto $label$14 }
	*($6 + [148]) = $5
	CALL $9($5)
	
.LABEL $label$14
	$8 = *($6 + [56])
	if ( ($8 == 0) ){ goto $label$2 }
	$11 = ($6 + [60])
	$5 = *($11)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL $9($0)
	
.LABEL $label$18
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$17 }
	$5 = *(($6 + [56]))
	goto $label$15 
	
.LABEL $label$16
	$5 = $8
	
.LABEL $label$15
	*($11) = $8
	CALL $9($5)
	
.LABEL $label$2
	$global$0 = ($6 + [208])
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [36])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $558 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $528(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $528(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $528(*($1), *($0 + [52]))
	$3 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [72])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$17 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $17 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $554 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [13]) = ((int_32)*(*($0) + [36]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [13]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [44]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($1)
	*($2 + [14]) = ((int_32)*($0 + [48]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	*($2 + [8]) = $0
	CALL $555(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12320])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12363])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12382])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $20($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $338 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [48])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [13023])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [48])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)7176376055052107776, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [48]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [40]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $336($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)7176376055052107776, $6))
	if ( ((int_32)*($3 + [40]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [48])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7176376055052107776, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $336($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $584(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [17]) = *(*($5 + [12]))
	*($1 + [18]) = *(*($5 + [16]))
	*($1 + [19]) = *(*($5 + [20]))
	*($1 + [20]) = *(*($5 + [24]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-11])
	*($3 + [24]) = ($3 + [8])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [17])
	*($3 + [48]) = ($1 + [18])
	*($3 + [52]) = ($1 + [19])
	*($3 + [56]) = ($1 + [20])
	*($3 + [60]) = ($1 + [24])
	CALL $583(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)7176376055052107776, *(*($0 + [8])), $7, $5, [37])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [32]) = *($6)
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)7176376055052107776, $9, $10, ($3 + [32]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [17])
	*($3 + [48]) = ($5 + [18])
	*($3 + [52]) = ($5 + [19])
	*($3 + [56]) = ($5 + [20])
	*($3 + [60]) = ($5 + [24])
	CALL $582(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = [-1]
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $340(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $337 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [8])
	*($4 + [16]) = *($5)
	*($1 + [17]) = *(*($2))
	*($1 + [18]) = *(*($2 + [4]))
	*($1 + [19]) = *(*($2 + [8]))
	*($1 + [20]) = *(*($2 + [12]))
	$6 = *($1)
	$3 = $3
	$2 = ($3 + [-48])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-11])
	*($4 + [24]) = $4
	*($4 + [36]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [17])
	*($4 + [48]) = ($1 + [18])
	*($4 + [52]) = ($1 + [19])
	*($4 + [56]) = ($1 + [20])
	*($4 + [60]) = ($1 + [24])
	CALL $583(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [37])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($4 + [32]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [32]), [8]) == 0) ){ goto $label$4 }
	$2 = ($1 + [48])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7176376055052107776, ($4 + [24]), $6)
	*($2) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($4 + [32]))
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

void .FUNC $334 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [176])
	$global$0 = $7
	*($7 + [143]) = $2
	*($7 + [144]) = $1
	*($7 + [142]) = $3
	*($7 + [141]) = $4
	*($7 + [140]) = $5
	*($7 + [139]) = $6
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	*(($7 + [128])) = [0]
	*($7 + [112]) = (int_64)-1
	*($7 + [120]) = (int_64)0
	*($7 + [132]) = [0]
	$1 = *($0)
	*($7 + [96]) = $1
	*($7 + [104]) = $1
	*($7 + [88]) = ($7 + [96])
	CALL $335(($7 + [48]), ($7 + [88]), ($7 + [144]))
	$6 = *($7 + [52])
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((int_64)*($7 + [144]) != (int_64)*($6 + [8])) ){ goto $label$4 }
	$1 = *($7 + [48])
	*($7 + [80]) = $1
	$6 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($6) == 0) ){ goto $label$3 }
	$2 = ($7 + [124])
	$8 = ($7 + [120])
	$9 = (($7 + [96]) + [8])
	$10 = ($7 + [60])
	$5 = [0]
	
.LOOP $label$6:
	if ( ((int_64)*($6 + [8]) != (int_64)*($7 + [144])) ){ goto $label$5 }
	if ( ((int_32)*($6 + [16]) != (int_32)*($7 + [143])) ){ goto $label$7 }
	$1 = *($6)
	$5 = *($2)
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$11 }
	$5 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($4 + [40]) != (int_32)($7 + [96])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$4 = [0]
	$6 = CALL db_find_i64(*($7 + [96]), *($9), (int_64)7176376055052107776, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$4 = CALL $336(($7 + [96]), $6)
	if ( ((int_32)*($4 + [40]) == (int_32)($7 + [96])) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [11998])
	
.LABEL $label$8
	*((($7 + [48]) + [8])) = ($7 + [140])
	*($10) = ($7 + [139])
	*($7 + [52]) = ($7 + [141])
	*($7 + [48]) = ($7 + [142])
	if ( $4 ){ goto $label$13 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$13
	CALL $337(($7 + [96]), $4, ($7 + [48]))
	$5 = [1]
	$6 = *($7 + [84])
	
.LABEL $label$7
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $338(($7 + [80]))
	$6 = *($7 + [84])
	
.LABEL $label$14
	if ( $6 ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($5 & [255]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	*($7 + [84]) = [0]
	*($7 + [80]) = ($7 + [88])
	
.LABEL $label$3
	$1 = *($7 + [144])
	*($7 + [52]) = ($7 + [144])
	*($7 + [48]) = ($7 + [96])
	*($7 + [56]) = ($7 + [143])
	*($7 + [60]) = ($7 + [142])
	*($7 + [64]) = ($7 + [141])
	*($7 + [68]) = ($7 + [140])
	*($7 + [72]) = ($7 + [139])
	*($7 + [160]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($7 + [96])) ){ goto $label$15 }
	CALL eosio_assert([0], [12072])
	
.LABEL $label$15
	*($7 + [36]) = ($7 + [48])
	*($7 + [32]) = ($7 + [96])
	*($7 + [40]) = ($7 + [160])
	*(($6 = CALL $7([56])) + [24]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = ($7 + [96])
	CALL $339(($7 + [32]), $6)
	*($7 + [152]) = $6
	$1 = *($6)
	*($7 + [32]) = $1
	$4 = *($6 + [44])
	*($7 + [172]) = $4
	$3 = ($7 + [124])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*(($7 + [128]))) ){ goto $label$18 }
	*($5 + [8]) = $1
	*($5 + [16]) = $4
	*($7 + [152]) = [0]
	*($5) = $6
	*($3) = ($5 + [24])
	$6 = *($7 + [152])
	*($7 + [152]) = [0]
	if ( $6 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $340(($7 + [120]), ($7 + [152]), ($7 + [32]), ($7 + [172]))
	$6 = *($7 + [152])
	*($7 + [152]) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9($6)
	
.LABEL $label$16
	$1 = *($0)
	*($7 + [40]) = (int_64)3617214756542218240
	*($7 + [32]) = $1
	*((($6 = CALL $7([16])) + [8])) = *($7 + [40])
	*($6) = *($7 + [32])
	*(($5 = (($7 + [152]) + [4]))) = *((($7 + [26]) + [4]))
	*(($7 + [70])) = *($5)
	*(($7 + [8])) = (int_64)1
	*($7 + [64]) = [1]
	$5 = *($7 + [26 align=2])
	*($7 + [66 align=2]) = $5
	*(($7 + [16])) = *($7 + [64])
	*($7 + [160]) = $6
	$6 = ($6 + [16])
	*($7 + [164]) = $6
	*($7 + [168]) = $6
	*($7 + [48]) = (int_64)-7880044396900068048
	*($7 + [56]) = (int_64)1
	*($7) = (int_64)-7880044396900068048
	*($7 + [152]) = $5
	CALL $206($1, (int_64)-4420674027266244608, ($7 + [160]), $7)
	$6 = *($7 + [160])
	if ( ($6 == 0) ){ goto $label$2 }
	*($7 + [164]) = $6
	CALL $9($6)
	
.LABEL $label$2
	$4 = *($7 + [120])
	if ( ($4 == 0) ){ goto $label$19 }
	$3 = ($7 + [124])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$21 }
	
.LOOP $label$22:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$23 }
	CALL $9($5)
	
.LABEL $label$23
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$22 }
	$6 = *(($7 + [120]))
	goto $label$20 
	
.LABEL $label$21
	$6 = $4
	
.LABEL $label$20
	*($3) = $4
	CALL $9($6)
	
.LABEL $label$19
	$global$0 = ($7 + [176])
}

void .FUNC $335 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7176376055052107776, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $336($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)7176376055052107776, $6))
	if ( ((int_32)*($4 + [40]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [48])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [8])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)-8462961477395939328, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $356($7, $9)
	*($3 + [36]) = [0]
	*($3 + [32]) = $7
	$8 = *(*(CALL $580(($3 + [32])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [24]) = *(*($5 + [12]))
	*($1 + [16]) = *($6 + [91])
	*($1 + [32]) = *(*($5 + [16]))
	$7 = *($5 + [20])
	*($1 + [40]) = *($7)
	*(($1 + [48])) = *(($7 + [8]))
	$7 = *(*($5 + [24]))
	*($1 + [72]) = (int_64)0
	*($1 + [56]) = $7
	*($1 + [80]) = *(*($5 + [28]))
	*($1 + [81]) = *(*($5 + [32]))
	*($1 + [82]) = *(*($5 + [36]))
	$7 = $2
	$5 = ($7 + [-80])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($7 + [-11])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	$7 = ($1 + [24])
	*($3 + [44]) = $7
	$2 = ($1 + [32])
	*($3 + [48]) = $2
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [56])
	*($3 + [60]) = ($1 + [64])
	*($3 + [64]) = ($1 + [72])
	*($3 + [68]) = ($1 + [80])
	*($3 + [72]) = ($1 + [81])
	*($3 + [76]) = ($1 + [82])
	CALL $581(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [88]) = CALL db_store_i64(*($4 + [8]), (int_64)-8462961477395939328, *(*($0 + [8])), $8, $5, [69])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$5 = ($4 + [8])
	$8 = *($5)
	$0 = *(($0 + [8]))
	$10 = *($0)
	$11 = *($1)
	*($3 + [32]) = *($7)
	*($1 + [92]) = CALL db_idx64_store($8, (int_64)-8462961477395939328, $10, $11, ($3 + [32]))
	$8 = *($0)
	$10 = *($5)
	$11 = *($1)
	*($3 + [32]) = *($2)
	*(($1 + [96])) = CALL db_idx64_store($10, (int_64)-8462961477395939327, $8, $11, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $333 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $330 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [32])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [13023])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [32])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-8462961772248301568, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [32]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [24]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $326($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)-8462961772248301568, $6))
	if ( ((int_32)*($3 + [24]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [32])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $331 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($4 + [24]) = *(($1 + [8]))
	$5 = *($1 + [32])
	$6 = *($1)
	$7 = *(($1 + [40]))
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [12590])
	
.LABEL $label$3
	$5 = (int_64)
	if ( ((int_64)$5($5 - *($2))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12660])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [12638])
	
.LABEL $label$4
	*(($1 + [40])) = $7
	*(($1 + [32])) = $5
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$2 = *($1 + [20])
	$8 = ( *(($1 + [24])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [53])
	$5 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [20])
	
.LOOP $label$7:
	$2 = ($2 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ($2 <= [513]) ){ goto $label$9 }
	$3 = CALL $1($2)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $2)
	*($4 + [32]) = ($4 + [8])
	*($4 + [52]) = $8
	*($4 + [40]) = $1
	*($4 + [44]) = ($1 + [8])
	*($4 + [48]) = ($1 + [16])
	*($4 + [56]) = ($1 + [32])
	*($4 + [60]) = ($1 + [48])
	*($4 + [64]) = ($1 + [64])
	*($4 + [68]) = ($1 + [65])
	*($4 + [72]) = ($1 + [66])
	*($4 + [76]) = ($1 + [67])
	CALL $575(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [72]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$10 }
	CALL $2($3)
	
.LABEL $label$10
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($4 + [40]) = *(($1 + [8]))
	if ( (CALL $16(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$12 }
	$2 = *($1 + [76])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8462961540019654656, ($4 + [32]), $6)
	*(($1 + [76])) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$12
	$global$0 = ($4 + [80])
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12123])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)-1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $448 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $18($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$6 = CALL $18(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $449 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), ($4 + [16]))
}

int_32 .FUNC $556 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [176]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13436])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)5094023804032647168)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [13382])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $182(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($4)
	*(($4 = ($1 + [8]))) = ((int_64)$5 + (int_64)1)
	*($3 + [8]) = $5
	$5 = *($1)
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($3 + [24]) = *($4)
	if ( (CALL $16(($3 + [8]), ($3 + [24]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [24])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730634643120193536, ($3 + [16]), $5)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, (int_64)0, ($3 + [24]))
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $299 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	$6 = *($5)
	*($5) = *((*($2) + [98]))
	*($4 + [16]) = $6
	$7 = ($1 + [8])
	*($4 + [24]) = *($7)
	$8 = ($1 + [104])
	*($4 + [32]) = *($8)
	$2 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($9 + [89])
	$6 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $7
	*($4 + [64]) = $9
	*($4 + [88]) = $5
	*($4 + [92]) = $8
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($7)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($8)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $298 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)5534162690622095360, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $295($7, CALL $fimport$2(*($7), *($7 + [8]), (int_64)5534162690622095360, $6))
	if ( ((int_32)*($4 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	*(($4 + [120])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $529 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $161($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	$0 = ($4 - $3)
	if ( ((int_32)$0 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$4 = ($3 + [8])
	*($2 + [12]) = $4
	$7 = ($1 + [8])
	if ( ((int_32)($0 + [-8]) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = ($3 + [16])
	*($2 + [12]) = $4
	*($2 + [24]) = *(($1 + [16]))
	if ( ((int_32)($0 + [-16]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12123])
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [24]), [8])
	*($2 + [12]) = ($3 + [24])
	CALL $528(($2 + [8]), $6)
	$global$0 = ($2 + [32])
}

int_32 .FUNC $528 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([136])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [112]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [44])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [80])
	*($3 + [72]) = ($5 + [96])
	*($3 + [76]) = ($5 + [104])
	CALL $570(($3 + [32]), ($3 + [24]))
	*($5 + [116]) = $1
	*($5 + [120 align=4]) = (int_64)-1
	*($5 + [128]) = [-1]
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $290(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $294 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4227605603803571328, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [12]) == (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$3 = [1]
	if ( ((int_32)*($5 + [8]) == (int_32)*($0 + [86])) ){ goto $label$4 }
	$0 = ($0 + [86])
	
.LOOP $label$7:
	$5 = CALL db_next_i64(*($5 + [16]), ($2 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [8]) != (int_32)*($0)) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [13005])
	
.LABEL $label$4
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 + [28])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $9($0)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($2 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $297 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [10025])
	
.LABEL $label$1
	*(($4 + [64])) = [0]
	*(($4 + [70])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	*($4 + [68]) = [0]
	$1 = *($0)
	*($4 + [32]) = $1
	*($4 + [40]) = $1
	*($4 + [24]) = ($4 + [32])
	*($4 + [8]) = *($0 + [97])
	CALL $298(($4 + [72]), ($4 + [24]), ($4 + [8]))
	$5 = *($4 + [76])
	if ( ($5 == 0) ){ goto $label$5 }
	if ( ((int_64)*($4 + [8]) != (int_64)*($5 + [96])) ){ goto $label$5 }
	$1 = *($4 + [72])
	*($4 + [16]) = $1
	$5 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$4 }
	$6 = [0]
	$7 = ($0 + [97])
	
.LOOP $label$7:
	if ( ((int_64)*($5 + [96]) != (int_64)*($7)) ){ goto $label$6 }
	if ( ((int_32)*($5 + [44]) != (int_32)$2) ){ goto $label$8 }
	*($4 + [72]) = $0
	CALL $299(($4 + [32]), $5, ($4 + [72]))
	$6 = [1]
	
.LABEL $label$8
	CALL $300(($4 + [16]))
	$5 = *($4 + [20])
	if ( $5 ){ goto $label$7 }
	
.LABEL $label$6
	if ( (($6 & [1]) == 0) ){ goto $label$4 }
	$2 = *($4 + [56])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [24])
	
.LABEL $label$4
	CALL eosio_assert([0], [11270])
	$2 = *($4 + [56])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($4 + [60])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($0 + [40])))
	
.LABEL $label$13
	CALL $9($0)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($4 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $2
	
.LABEL $label$9
	*($7) = $2
	CALL $9($5)
	$global$0 = ($4 + [80])
	return 
	
.LABEL $label$2
	$global$0 = ($4 + [80])
}

void .FUNC $296 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = ($1 + [96])
	*($4 + [16]) = *($5)
	$6 = ($1 + [8])
	*($4 + [24]) = *($6)
	$7 = ($1 + [104])
	*($4 + [32]) = *($7)
	*($5) = *(*($2))
	$2 = *($1 + [32])
	$8 = ( *(($1 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($8 + [89])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [32])
	$10 = *($1)
	$11 = ($4 + [32])
	$12 = (($4 + [16]) + [8])
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ($2 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($2)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $2)
	*($4 + [40]) = $4
	*($4 + [52]) = $6
	*($4 + [64]) = $8
	*($4 + [88]) = $5
	*($4 + [92]) = $7
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [68]) = ($1 + [44])
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = ($1 + [72])
	*($4 + [84]) = ($1 + [80])
	CALL $301(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [116]), (int_64)0, $3, $2)
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $2($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [120])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$9 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095360, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$9
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$8
	*($4 + [48]) = *($6)
	if ( (CALL $16($12, ($4 + [48]), [8]) == 0) ){ goto $label$10 }
	$3 = ($1 + [124])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095361, ($4 + [40]), $10)
	*($3) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$10
	*($4 + [48]) = *($7)
	if ( (CALL $16($11, ($4 + [48]), [8]) == 0) ){ goto $label$12 }
	$1 = ($1 + [128])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5534162690622095362, ($4 + [40]), $10)
	*($1) = $2
	
.LABEL $label$13
	CALL db_idx64_update($2, (int_64)0, ($4 + [48]))
	
.LABEL $label$12
	$global$0 = ($4 + [96])
}

void .FUNC $291 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [128])
	$global$0 = $4
	*($4 + [103]) = $3
	CALL require_auth($1)
	if ( ((($3 + [-3]) & [255]) <= [7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11136])
	
.LABEL $label$1
	if ( ((int_32)*($0 + [99]) != (int_32)$3) ){ goto $label$3 }
	if ( CALL $292($0, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [11178])
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)*($0 + [100]) == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($0 + [103]) == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($0 + [101]) != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$5
	if ( CALL $293($0, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [11212])
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)*($0 + [102]) != (int_32)$3) ){ goto $label$6 }
	if ( CALL $294($0, $1) ){ goto $label$7 }
	CALL eosio_assert([0], [11212])
	
.LABEL $label$7
	$1 = *($0)
	*($4 + [88]) = (int_64)3617214756542218240
	*($4 + [80]) = $1
	*((($3 = CALL $7([16])) + [8])) = *($4 + [88])
	*($3) = *($4 + [80])
	*(($5 = (($4 + [104]) + [4]))) = *((($4 + [74]) + [4]))
	*(($4 + [54])) = *($5)
	*((($4 + [8]) + [8])) = (int_64)1
	*($4 + [48]) = [1]
	$5 = *($4 + [74 align=2])
	*($4 + [50 align=2]) = $5
	*((($4 + [8]) + [16])) = *($4 + [48])
	*($4 + [112]) = $3
	$3 = ($3 + [16])
	*($4 + [116]) = $3
	*($4 + [120]) = $3
	*($4 + [32]) = (int_64)-3660748230073964896
	*($4 + [40]) = (int_64)1
	*($4 + [8]) = (int_64)-3660748230073964896
	*($4 + [104]) = $5
	CALL $206($1, (int_64)-4420674027266244608, ($4 + [112]), ($4 + [8]))
	$3 = *($4 + [112])
	if ( ($3 == 0) ){ goto $label$2 }
	*($4 + [116]) = $3
	CALL $9($3)
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)*($0 + [104]) == (int_32)$3) ){ goto $label$8 }
	if ( ((int_32)*($0 + [105]) != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$8
	if ( CALL $160($0, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [11212])
	
.LABEL $label$2
	$3 = [0]
	*(($4 + [64])) = [0]
	*(($4 + [70])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	*($4 + [68]) = [0]
	$1 = *($0)
	*($4 + [32]) = $1
	*($4 + [40]) = $1
	$0 = CALL db_find_i64($1, $1, (int_64)5534162690622095360, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$10 }
	$3 = CALL $295(($4 + [32]), $0)
	if ( ((int_32)*($3 + [112]) == (int_32)($4 + [32])) ){ goto $label$11 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$11
	*($4 + [80]) = ($4 + [103])
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [11246])
	*($4 + [80]) = ($4 + [103])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$9
	CALL $296(($4 + [32]), $3, ($4 + [80]))
	$5 = *($4 + [56])
	if ( ($5 == 0) ){ goto $label$12 }
	$6 = ($4 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($3 + [40])))
	
.LABEL $label$17
	CALL $9($3)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($4 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $5
	
.LABEL $label$13
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$12
	$global$0 = ($4 + [128])
}

void .FUNC $290 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $293 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4227605603803571328, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [12]) == (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$3 = [1]
	if ( ((int_32)*($5 + [8]) == (int_32)*($0 + [85])) ){ goto $label$4 }
	$0 = ($0 + [85])
	
.LOOP $label$7:
	$5 = CALL db_next_i64(*($5 + [16]), ($2 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [8]) != (int_32)*($0)) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [13005])
	
.LABEL $label$4
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 + [28])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $9($0)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($2 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

int_32 .FUNC $292 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4227605603803571328, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [12]) == (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$3 = [1]
	if ( ((int_32)*($5 + [8]) == (int_32)*($0 + [84])) ){ goto $label$4 }
	$0 = ($0 + [84])
	
.LOOP $label$7:
	$5 = CALL db_next_i64(*($5 + [16]), ($2 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL $87($2, $5)
	if ( ((int_32)*($5 + [8]) != (int_32)*($0)) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [13005])
	
.LABEL $label$4
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 + [28])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $9($0)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($2 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$5 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $523 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $415(*($1), *($0 + [12]))
}

int_32 .FUNC $407 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [272])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [208])) = (int_64)0
	*(($4 + [224])) = [0]
	*($4 + [184]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [192]) = [0]
	*($4 + [200]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [164]) = $2
	*($4 + [160]) = $2
	*($4 + [168]) = ($2 + $5)
	*($4 + [256]) = ($4 + [160])
	*($4 + [24]) = ($4 + [176])
	CALL $434(($4 + [24]), ($4 + [256]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [168])
	*($4 + [8]) = *($4 + [160])
	*(($6 = (($4 + [240]) + [8]))) = *($3)
	*($4 + [240]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [256]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [240])
	*($4 + [40]) = $0
	*($4 + [256]) = $0
	*($4 + [52 align=4]) = (int_64)361417177238274561
	*($4 + [60 align=4]) = (int_64)144408800781666054
	*($4 + [68]) = [1027]
	*($4 + [70 align=2]) = (int_64)72339081933160453
	*($4 + [78 align=2]) = [33620738]
	*($4 + [82]) = [1027]
	*($4 + [84 align=4]) = (int_64)216736870368216581
	*($4 + [92]) = [17171716]
	*($4 + [96]) = (int_64)73469379886514946
	*($4 + [104]) = [770]
	*($4 + [106 align=2]) = (int_64)72621656421500164
	*($4 + [114 align=2]) = [50462978]
	*($4 + [118]) = [1284]
	*($4 + [120]) = (int_64)506097522914230534
	*($4 + [128]) = [17434888]
	*($4 + [132]) = [770]
	*($4 + [134]) = [4]
	*($4 + [135 align=1]) = [67305985]
	*($4 + [139 align=1]) = [261]
	*($4 + [141]) = [2]
	*($4 + [144]) = (int_64)72058693550160512
	*($4 + [152]) = [770]
	*($4 + [154]) = [4]
	*($4 + [260]) = ($4 + [232])
	*($4 + [256]) = ($4 + [24])
	CALL $435(($4 + [256]), ($4 + [176]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [216]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [216]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($4 + [224])))
	$global$0 = ($4 + [272])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [272])
	return $2
}

void .FUNC $494 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [152]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [151]), $5, [1])
	*((($3 + [8]) + [24])) = $6
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [25])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $200(($3 + [8]), *($3 + [168]), *($3 + [160]), *($3 + [152]), *($3 + [151]))
	$global$0 = ($3 + [176])
}

void .FUNC $557 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [42])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [24])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$1 = ($1 + [16])
	*($2) = $1
	$4 = *($3)
	$3 = *($0 + [36])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$1 = ($1 + [24])
	*($2) = $1
	$3 = *($0)
	$0 = *($0 + [52])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$6
	*($2) = ($1 + [19])
}

void .FUNC $546 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [14]) = ((int_32)*(*($0) + [60]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, ($2 + [14]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = *($0)
	$5 = ($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($1)
	*($2 + [15]) = ((int_32)*($0 + [68]) != (int_32)[0])
	$4 = *($3 + [4])
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$5 = ($0 + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $5, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($0 + [76])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $484 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [260]) = $2
	*($3 + [256]) = $2
	$5 = ($2 + $4)
	*($3 + [264]) = $5
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [240]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$5 = *((($3 + [256]) + [8]))
	$2 = *($3 + [260])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$7
	CALL memcpy(($3 + [239]), $2, [1])
	$2 = ($2 + [1])
	*($3 + [260]) = $2
	*($3 + [224]) = (int_64)0
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$5 = *(($3 + [264]))
	$2 = *($3 + [260])
	
.LABEL $label$8
	CALL memcpy(($3 + [216]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [260]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$2 = *($3 + [260])
	
.LABEL $label$9
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [216]) + [8]))) = *($3 + [64])
	*($3 + [260]) = ($2 + [8])
	*($3 + [208]) = [0]
	*($3 + [200]) = (int_64)0
	CALL $415(($3 + [256]), ($3 + [200]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [256]) + [8]))
	*($3 + [48]) = *($3 + [256])
	*(($4 = (($3 + [272]) + [8]))) = *($2)
	*($3 + [272]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [272])
	*($3 + [80]) = $0
	*($3 + [288]) = $0
	*($3 + [92 align=4]) = (int_64)361417177238274561
	*($3 + [100 align=4]) = (int_64)144408800781666054
	*($3 + [108]) = [1027]
	*($3 + [110 align=2]) = (int_64)72339081933160453
	*($3 + [118 align=2]) = [33620738]
	*($3 + [122]) = [1027]
	*($3 + [124 align=4]) = (int_64)216736870368216581
	*($3 + [132]) = [17171716]
	*($3 + [136]) = (int_64)73469379886514946
	*($3 + [144]) = [770]
	*($3 + [146 align=2]) = (int_64)72621656421500164
	*($3 + [154 align=2]) = [50462978]
	*($3 + [158]) = [1284]
	*($3 + [160]) = (int_64)506097522914230534
	*($3 + [168]) = [17434888]
	*($3 + [172]) = [770]
	*($3 + [174]) = [4]
	*($3 + [175 align=1]) = [67305985]
	*($3 + [179 align=1]) = [261]
	*($3 + [181]) = [2]
	*($3 + [184]) = (int_64)72058693550160512
	*($3 + [192]) = [770]
	*($3 + [194]) = [4]
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [216])
	$5 = *($3 + [239])
	$0 = *($3 + [240])
	$1 = *($3 + [248])
	$2 = CALL $18(($3 + [16]), ($3 + [200]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $159(($3 + [64]), $1, $0, $5, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$12 }
	if ( (*($3 + [200]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*($2 + [8]))
	if ( ((*($3 + [200]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [208])))
	$global$0 = ($3 + [304])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [304])
}

void .FUNC $198 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *(*($2) + [4])
	*($1 + [8]) = *($5 + [80])
	$6 = *($1)
	$8 = *($5 + [88])
	$7 = CALL $15([10024])
	if ( ((int_32)$7 != (int_32)( *(($5 + [92])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $22(($5 + [88]), [0], [-1], [10024], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $19(($1 + [16]), (*(*($2) + [4]) + [88]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$5
	$8 = ($1 + [8])
	$5 = *($1 + [16])
	$2 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($2 + [16])
	$9 = (CASTING uint_64)(uint_32 $2)
	$7 = ($1 + [16])
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($5 <= [513]) ){ goto $label$8 }
	$2 = CALL $1($5)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$7
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [40]) = $7
	*($4 + [32]) = $1
	CALL $531(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), (int_64)0, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($2)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $528(*($1), ($3 + [16]))
	CALL $528(*($1), ($3 + [28]))
	CALL $528(*($1), ($3 + [40]))
}

void .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$1 = (*($2) + [16])
	*(($2 = *($1))) = $1
	$3 = *($0 + [16])
	$0 = *($0)
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *(($0 + [16]))
	$3 = ( *(($0 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$3 = *($0 + [28])
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [32])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *(($0 + [28]))
	$3 = ( *(($0 + [32])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$3 = *($0 + [40])
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *(($0 + [40]))
	$0 = ( *(($0 + [44])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	*($2) = ($0 + $1)
	
.LABEL $label$6
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [186]) = [1]
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-208])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($5 + [-4])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [33])
	*($3 + [48]) = ($1 + [34])
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [56])
	*($3 + [60]) = ($1 + [72])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [104])
	*($3 + [72]) = ($1 + [120])
	*($3 + [76]) = ($1 + [136])
	*($3 + [80]) = ($1 + [152])
	*($3 + [84]) = ($1 + [168])
	*($3 + [88]) = ($1 + [172])
	*($3 + [92]) = ($1 + [176])
	*($3 + [96]) = ($1 + [180])
	*($3 + [104]) = ($1 + [182])
	*($3 + [100]) = ($1 + [181])
	*($3 + [108]) = ($1 + [183])
	*($3 + [112]) = ($1 + [184])
	*($3 + [116]) = ($1 + [185])
	*($3 + [120]) = ($1 + [186])
	*($3 + [124]) = ($1 + [192])
	*($3 + [128]) = ($1 + [200])
	*($3 + [132]) = ($1 + [208])
	*($3 + [136]) = ($1 + [212])
	*($3 + [140]) = ($1 + [213])
	CALL $65(($3 + [24]), ($3 + [16]))
	CALL db_update_i64(*($1 + [220]), (int_64)0, $2, [204])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [144])
}

void .FUNC $346 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [224])
	$global$0 = $5
	if ( CALL $344($0) ){ goto $label$1 }
	CALL eosio_assert([0], [11847])
	
.LABEL $label$1
	if ( CALL $27($0) ){ goto $label$2 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$2
	$6 = [0]
	*(($5 + [184])) = [0]
	*($5 + [168]) = (int_64)-1
	*($5 + [176]) = (int_64)0
	$7 = *($0)
	*($5 + [152]) = $7
	*($5 + [160]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)5937556069193265024, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $74(($5 + [152]), $8)
	if ( ((int_32)*($6 + [216]) == (int_32)($5 + [152])) ){ goto $label$6 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$6
	$8 = *($6 + [186])
	if ( ((int_32)$8 != (int_32)[1]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [11884])
	$8 = *([0] + [186])
	if ( ((int_32)$8 != (int_32)[1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [11914])
	$8 = *(($6 + [186]))
	
.LABEL $label$3
	if ( ($8 & [255]) ){ goto $label$7 }
	if ( $6 ){ goto $label$8 }
	CALL eosio_assert([0], [12129])
	
.LABEL $label$8
	CALL $347(($5 + [152]), $6)
	
.LABEL $label$7
	$7 = *($0)
	$6 = CALL $18(($5 + [40]), $3)
	$8 = CALL $18(($5 + [24]), $4)
	*(($5 + [16])) = [0]
	*($5 + [8]) = (int_64)0
	$0 = CALL $15([11957])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$19 }
	*($5 + [8]) = ($0 << [1])
	$3 = (($5 + [8]) | [1])
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$4 = (($0 + [16]) & [-16])
	$3 = CALL $7($4)
	*($5 + [8]) = ($4 | [1])
	*($5 + [16]) = $3
	*($5 + [12]) = $0
	
.LABEL $label$18
	CALL memcpy($3, [11957], $0)
	
.LABEL $label$17
	$4 = [0]
	*(($3 + $0)) = [0]
	*((($5 + [56]) + [24])) = *((($5 + [40]) + [8]))
	$1 = *($5 + [40])
	*($6) = (int_64)0
	*($6 + [8]) = [0]
	*((($5 + [56]) + [36])) = *((($5 + [24]) + [8]))
	$9 = *($5 + [24])
	*($8) = (int_64)0
	*($8 + [8]) = [0]
	$0 = (($5 + [8]) + [8])
	*(($5 + [104])) = *($0)
	*($5 + [64]) = $2
	*($5 + [56]) = $7
	*($5 + [72]) = $1
	*($5 + [84 align=4]) = $9
	*($5 + [96]) = *($5 + [8])
	*($5 + [8]) = [0]
	*($5 + [12]) = [0]
	*($0) = [0]
	*($5 + [112]) = (int_64)6761205297852710912
	*($5 + [120]) = (int_64)5031766152489992192
	*(($0 = CALL $7([16]))) = $7
	*($0 + [8]) = (int_64)3617214756542218240
	*((($5 + [112]) + [36])) = [0]
	$3 = ($0 + [16])
	*((($5 + [112]) + [24])) = $3
	*(($5 + [132])) = $3
	*($5 + [128]) = $0
	*($5 + [140 align=4]) = (int_64)0
	*($5 + [208]) = [0]
	*($5 + [216]) = ($5 + [208])
	*($5 + [192]) = ($5 + [56])
	CALL $348(($5 + [192]), ($5 + [216]))
	$0 = *($5 + [208])
	if ( ($0 == 0) ){ goto $label$21 }
	$3 = ($5 + [140])
	CALL $161($3, $0)
	$4 = *(($5 + [144]))
	$0 = *($3)
	goto $label$20 
	
.LABEL $label$21
	$0 = [0]
	
.LABEL $label$20
	*($5 + [196]) = $0
	*($5 + [192]) = $0
	*($5 + [200]) = $4
	*($5 + [208]) = ($5 + [192])
	*($5 + [216]) = ($5 + [56])
	CALL $349(($5 + [216]), ($5 + [208]))
	CALL $163(($5 + [112]))
	$0 = *($5 + [140])
	if ( ($0 == 0) ){ goto $label$22 }
	*(($5 + [144])) = $0
	CALL $9($0)
	
.LABEL $label$22
	$0 = *($5 + [128])
	if ( ($0 == 0) ){ goto $label$23 }
	*(($5 + [132])) = $0
	CALL $9($0)
	
.LABEL $label$23
	if ( ((*(($5 + [96])) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($5 + [104])))
	
.LABEL $label$24
	if ( ((*(($5 + [84])) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*(($5 + [92])))
	
.LABEL $label$25
	if ( (*(($5 + [72])) & [1]) ){ goto $label$27 }
	if ( (*($5 + [8]) & [1]) ){ goto $label$26 }
	goto $label$15 
	
.LABEL $label$27
	CALL $9(*(($5 + [80])))
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$26
	CALL $9(*(($5 + [16])))
	$0 = [1]
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	CALL $17(($5 + [8]))
	
.LABEL $label$15
	$0 = [1]
	if ( (*($5 + [24]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($5 + [40]) & $0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $9(*(($8 + [8])))
	if ( ((*($5 + [40]) & $0) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($6 + [8])))
	$8 = *($5 + [176])
	if ( ($8 == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = *($5 + [176])
	if ( $8 ){ goto $label$9 }
	
.LABEL $label$10
	$global$0 = ($5 + [224])
	return 
	
.LABEL $label$9
	$3 = ($5 + [180])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$29 }
	
.LOOP $label$30:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	CALL $9($6)
	
.LABEL $label$31
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$30 }
	$0 = *(($5 + [176]))
	goto $label$28 
	
.LABEL $label$29
	$0 = $8
	
.LABEL $label$28
	*($3) = $8
	CALL $9($0)
	$global$0 = ($5 + [224])
	(unreachable)
}

void .FUNC $345 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [216]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [186]) = [2]
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-208])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-4])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [33])
	*($4 + [48]) = ($1 + [34])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [56])
	*($4 + [60]) = ($1 + [72])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [120])
	*($4 + [76]) = ($1 + [136])
	*($4 + [80]) = ($1 + [152])
	*($4 + [84]) = ($1 + [168])
	*($4 + [88]) = ($1 + [172])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [180])
	*($4 + [104]) = ($1 + [182])
	*($4 + [100]) = ($1 + [181])
	*($4 + [108]) = ($1 + [183])
	*($4 + [112]) = ($1 + [184])
	*($4 + [116]) = ($1 + [185])
	*($4 + [120]) = ($1 + [186])
	*($4 + [124]) = ($1 + [192])
	*($4 + [128]) = ($1 + [200])
	*($4 + [132]) = ($1 + [208])
	*($4 + [136]) = ($1 + [212])
	*($4 + [140]) = ($1 + [213])
	CALL $65(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [220]), $2, $3, [204])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [25]) = *((*($2) + [128]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $343 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $160($0, $1) ){ goto $label$1 }
	CALL eosio_assert([0], [11803])
	
.LABEL $label$1
	if ( CALL $344($0) ){ goto $label$2 }
	CALL eosio_assert([0], [11847])
	
.LABEL $label$2
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $5
	$0 = CALL db_find_i64($5, $5, (int_64)5937556069193265024, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $74(($3 + [8]), $0)
	if ( ((int_32)*($4 + [216]) == (int_32)($3 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [11998])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [11884])
	CALL eosio_assert([0], [12129])
	
.LABEL $label$3
	CALL $345(($3 + [8]), $4, $1)
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($3 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $9($4)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12442])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12487])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12537])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$9 = *(($1 + [48]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7176376055052107776, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $341 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL $27($0) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$4 = [0]
	*(($3 + [88])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	*($3 + [92]) = [0]
	$5 = *($0)
	*($3 + [56]) = $5
	*($3 + [64]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)7176376055052107776, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $336(($3 + [56]), $6)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [56])) ){ goto $label$2 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$2
	if ( ((int_64)*($4 + [8]) != (int_64)$1) ){ goto $label$3 }
	$5 = *($0)
	*($3 + [48]) = (int_64)3617214756542218240
	*($3 + [40]) = $5
	*((($0 = CALL $7([16])) + [8])) = *($3 + [48])
	*($0) = *($3 + [40])
	*(($6 = (($3 + [96]) + [4]))) = *((($3 + [34]) + [4]))
	*(($3 + [126])) = *($6)
	*((($3 + [8]) + [8])) = (int_64)1
	*($3 + [120]) = [0]
	$6 = *($3 + [34 align=2])
	*($3 + [122 align=2]) = $6
	*((($3 + [8]) + [16])) = *($3 + [120])
	*($3 + [128]) = $0
	$0 = ($0 + [16])
	*($3 + [132]) = $0
	*($3 + [136]) = $0
	*($3 + [104]) = (int_64)-7880044396900068048
	*($3 + [112]) = (int_64)1
	*($3 + [8]) = (int_64)-7880044396900068048
	*($3 + [96]) = $6
	CALL $206($5, (int_64)-4420674027266244608, ($3 + [128]), ($3 + [8]))
	$0 = *($3 + [128])
	if ( ($0 == 0) ){ goto $label$4 }
	*($3 + [132]) = $0
	CALL $9($0)
	
.LABEL $label$4
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [13189])
	CALL eosio_assert([0], [13023])
	
.LABEL $label$5
	$0 = CALL db_next_i64(*($4 + [44]), ($3 + [104]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $336(($3 + [56]), $0)
	
.LABEL $label$6
	CALL $342(($3 + [56]), $4)
	
.LABEL $label$3
	$6 = *($3 + [80])
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = ($3 + [84])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $9($0)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [80]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$7
	$global$0 = ($3 + [144])
}

void .FUNC $340 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $594 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [224])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [232])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = ($0 + [236])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($0 + [237])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $592 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [189])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [190])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [191])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [192])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $593(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $593 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [193])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [200])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [208])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [216])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $594(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $590 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = ($3 + [112])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$6 = *(($5 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $6, [8])
	$4 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($3 + [120]) = *($2 + [8])
	*($6) = (*($6) + [8])
	$5 = *($0)
	$0 = ($5 + [128])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [136]) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [144])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [152]) = *($2 + [8])
	*($4) = (*($4) + [8])
	$0 = ($5 + [160])
	$4 = *($6 + [4])
	$6 = *($1)
	if ( ((uint_32)(*($6 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$4 = *(($6 + [4]))
	
.LABEL $label$7
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($6 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($6 + [8])) - $0) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$0 = *($4)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [168]) = *($2 + [8])
	*($4) = (*($4) + [8])
	*($2 + [8]) = $5
	CALL $591(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $591 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [176])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0)
	$3 = ($4 + [180])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [184])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [188])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $592(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $596 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [72])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [80])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $482 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [28])) = $2
	*(($3 + [32])) = ($2 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [36 align=4]) = (int_64)361417177238274561
	*($3 + [44]) = [151521030]
	*($3 + [48]) = [2826]
	*($3 + [50 align=2]) = (int_64)144396684594708993
	*($3 + [58]) = [3]
	*($3 + [60 align=4]) = (int_64)289077004450529537
	*($3 + [68]) = [134678021]
	*($3 + [72]) = [265]
	*($3 + [74 align=2]) = (int_64)216736857432785666
	*($3 + [82 align=2]) = [67305985]
	*($3 + [86]) = [261]
	*($3 + [88]) = [2]
	*($3 + [89 align=1]) = (int_64)144399970194490371
	*($3 + [97 align=1]) = (int_64)433757350076154369
	*($3 + [105 align=1]) = [513]
	*($3 + [107 align=1]) = (int_64)723118041428460547
	*($3 + [115 align=1]) = (int_64)289077004467372545
	*($3 + [123 align=1]) = [261]
	*($3 + [125]) = [2]
	*($3 + [128]) = (int_64)72058693550160512
	*($3 + [136]) = [770]
	*($3 + [138]) = [4]
	CALL $148(($3 + [8]))
	$global$0 = ($3 + [144])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12049])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $519(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *($5)
	$8 = *($7 + [16])
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = CALL db_lowerbound_i64(*($7), *($7 + [8]), (int_64)3775065857097465856, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $352($7, $9)
	*($3 + [28]) = [0]
	*($3 + [24]) = $7
	$8 = *(*(CALL $567(($3 + [24])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($7 + [16])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [13330])
	$8 = *(($7 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($7 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	$7 = ($1 + [16])
	$9 = ($1 + [8])
	$10 = *(*($5 + [16]))
	if ( ((int_32)$10 != (int_32)*($6 + [56])) ){ goto $label$6 }
	*($1 + [24]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$10 != (int_32)*($6 + [59])) ){ goto $label$7 }
	if ( CALL $160($6, *(*($5 + [24]))) ){ goto $label$8 }
	CALL eosio_assert([0], [10824])
	
.LABEL $label$8
	*($1 + [25]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_32)$10 != (int_32)*($6 + [62])) ){ goto $label$9 }
	*($1 + [26]) = *(*($5 + [20]))
	goto $label$5 
	
.LABEL $label$9
	CALL eosio_assert([0], [13484])
	
.LABEL $label$5
	$2 = $2
	$5 = ($2 + [-32])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($2 + [-5])
	*($3 + [16]) = $3
	*($3 + [28]) = $9
	*($3 + [24]) = $1
	*($3 + [32]) = $7
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [25])
	*($3 + [44]) = ($1 + [26])
	CALL $249(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)3775065857097465856, *(*($0 + [8])), $8, $5, [27])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$10 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$5 = ($4 + [8])
	$8 = *($5)
	$0 = *(($0 + [8]))
	$11 = *($0)
	$12 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)3775065857097465856, $11, $12, ($3 + [24]))
	$8 = *($0)
	$11 = *($5)
	$12 = *($1)
	*($3 + [24]) = *(($1 + [16]))
	*(($1 + [44])) = CALL db_idx64_store($11, (int_64)3775065857097465857, $8, $12, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $36 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*(($4 + [56])) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = *($0)
	*($4 + [24]) = $5
	$6 = *($2 + [8])
	*($4 + [32]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $38(($4 + [24]), $0)
	if ( ((int_32)*($0 + [16]) == (int_32)($4 + [24])) ){ goto $label$4 }
	CALL eosio_assert([0], [11998])
	
.LABEL $label$4
	*($4 + [8]) = $2
	CALL $39(($4 + [24]), $0, (int_64)0, ($4 + [8]))
	$7 = *($4 + [48])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($4 + [16]) = $2
	CALL $40(($4 + [8]), ($4 + [24]), $3, ($4 + [16]))
	$7 = *($4 + [48])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [52])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($4 + [48]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL $9($2)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $37 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $161($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $527(($4 + [88]), ($4 + [80]))
	CALL $163(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $9($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [8]))
}

void .FUNC $34 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8364])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8460])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$7 = *($0)
	*($4 + [104]) = $7
	*($4 + [112]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $29(($4 + [104]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [104])) ){ goto $label$8 }
	CALL eosio_assert([0], [11998])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8489])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $8
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$14 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8549])
	$6 = *($2)
	
.LABEL $label$10
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8566])
	
.LABEL $label$15
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8595])
	
.LABEL $label$16
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$17 }
	CALL eosio_assert([0], [8621])
	
.LABEL $label$17
	*($4 + [144]) = $2
	CALL $35(($4 + [104]), $11, ($4 + [144]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [88]) + [8]))) = *($10)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [88]) = $8
	*($4 + [8]) = *($4 + [88])
	CALL $36($0, $7, ($4 + [8]), $7)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$18 }
	$8 = *($0)
	*($4 + [80]) = (int_64)3617214756542218240
	*($4 + [72]) = $7
	*((($9 = CALL $7([16])) + [8])) = *($4 + [80])
	*($9) = *($4 + [72])
	$7 = *($5)
	*(($5 = (($4 + [24]) + [24]))) = *($10)
	*($4 + [32]) = $1
	*($4 + [24]) = $7
	*($4 + [40]) = *($2)
	CALL $18((($4 + [24]) + [32]), $3)
	*((($4 + [144]) + [24])) = *($5)
	$5 = (($4 + [24]) + [40])
	*(($10 = (($4 + [144]) + [40]))) = *($5)
	*($5) = [0]
	$5 = ($9 + [16])
	*($4 + [196]) = $5
	*($4 + [192]) = $9
	*($4 + [200]) = $5
	*($4 + [144]) = *($4 + [24])
	*($4 + [152]) = *($4 + [32])
	*($4 + [160]) = *($4 + [40])
	*($4 + [176]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $37($8, (int_64)-3617168760277827584, ($4 + [192]), ($4 + [144]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($10))
	
.LABEL $label$19
	$5 = *($4 + [192])
	if ( ($5 == 0) ){ goto $label$20 }
	*($4 + [196]) = $5
	CALL $9($5)
	
.LABEL $label$20
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($4 + [64])))
	
.LABEL $label$18
	$10 = *($4 + [128])
	if ( ($10 == 0) ){ goto $label$21 }
	$2 = ($4 + [132])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $9($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [128]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($2) = $10
	CALL $9($5)
	
.LABEL $label$21
	$global$0 = ($4 + [208])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [12320])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12363])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12382])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12261])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $30(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [12681])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [12786])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [12719])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [12786])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $280 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [44]) = (*($1 + [44]) + [1])
	*($1 + [48]) = (*($1 + [48]) + [-1])
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = ($1 + [16])
	*($4 + [32]) = *($6)
	$7 = ($1 + [44])
	$8 = ($1 + [48])
	$9 = *($1)
	if ( ((int_64)*(*(($2 + [4]))) != (int_64)(CASTING uint_64)(uint_32 (*(*(*($2) + [4]) + [44]) + [1]))) ){ goto $label$3 }
	*($5) = *(*(($2 + [8])) + [63])
	
.LABEL $label$3
	$3 = $3
	$2 = ($3 + [-64])
	$global$0 = $2
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($3 + [-9])
	*($4 + [40]) = ($4 + [8])
	*($4 + [52]) = $5
	*($4 + [56]) = $6
	*($4 + [80]) = $7
	*($4 + [84]) = $8
	*($4 + [48]) = $1
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = ($1 + [36])
	*($4 + [72]) = ($1 + [40])
	*($4 + [76]) = ($1 + [41])
	*($4 + [88]) = ($1 + [52])
	*($4 + [92]) = ($1 + [56])
	CALL $204(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [55])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$2 = (($4 + [24]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $16(($4 + [24]), ($4 + [48]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [72])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094848, ($4 + [40]), $9)
	*($3) = $5
	
.LABEL $label$6
	CALL db_idx64_update($5, (int_64)0, ($4 + [48]))
	
.LABEL $label$5
	*($4 + [48]) = *($6)
	if ( (CALL $16($2, ($4 + [48]), [8]) == 0) ){ goto $label$7 }
	$2 = ($1 + [76])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507757988870094847, ($4 + [40]), $9)
	*($2) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, (int_64)0, ($4 + [48]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12123])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12123])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $281 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12164])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12210])
	
.LABEL $label$2
	*($1 + [26]) = *((*($2) + [126]))
	$2 = ($1 + [8])
	*($4 + [16]) = *($2)
	$5 = ($1 + [16])
	*($4 + [24]) = *($5)
	$6 = *($1)
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($7 + [-5])
	*($4 + [32]) = $4
	*($4 + [44]) = $2
	*($4 + [40]) = $1
	*($4 + [48]) = $5
	*($4 + [52]) = ($1 + [24])
	*($4 + [56]) = ($1 + [25])
	*($4 + [60]) = ($1 + [26])
	CALL $249(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [27])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [40]) = *($2)
	if ( (CALL $16(($4 + [16]), ($4 + [40]), [8]) == 0) ){ goto $label$4 }
	$7 = ($1 + [40])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465856, ($4 + [32]), $6)
	*($7) = $2
	
.LABEL $label$5
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$4
	*($4 + [40]) = *($5)
	if ( (CALL $16($3, ($4 + [40]), [8]) == 0) ){ goto $label$6 }
	$3 = ($1 + [44])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$7 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3775065857097465857, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$7
	CALL db_idx64_update($1, (int_64)0, ($4 + [40]))
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $538 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12123])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [72])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12123])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [80])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12123])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $539 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [13223])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [13223])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}