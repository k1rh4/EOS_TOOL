(data (i32.const 8220) "failed to allocate pages\00invalid first pos\00")
(data (i32.const 8272) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8352) "##erroCode##20020\00")
(data (i32.const 8370) "eosio.token\00")
(data (i32.const 8382) "EOS\00")
(data (i32.const 8386) "eosjoyiocoin\00")
(data (i32.const 8399) "transfer\00")
(data (i32.const 8408) "only support EOS token\00")
(data (i32.const 8431) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 8480) "invalid symbol name\00")
(data (i32.const 8500) "string is too long to be a valid name\00")
(data (i32.const 8538) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 8605) "character is not in allowed character set for names\00")
(data (i32.const 8657) "string is too long to be a valid symbol_code\00")
(data (i32.const 8702) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8755) "switchkey\00")
(data (i32.const 8765) "switch was not open\00")
(data (i32.const 8785) "timekey\00")
(data (i32.const 8793) "timeswitch was not open\00")
(data (i32.const 8817) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8868) "error reading iterator\00")
(data (i32.const 8891) "cannot create objects in table of another contract\00")
(data (i32.const 8942) "write\00")
(data (i32.const 8948) "cannot pass end iterator to modify\00")
(data (i32.const 8983) "object passed to modify is not in multi_index\00")
(data (i32.const 9029) "cannot modify objects in table of another contract\00")
(data (i32.const 9080) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9139) "cannot pass end iterator to erase\00")
(data (i32.const 9173) "cannot increment end iterator\00")
(data (i32.const 9203) "object passed to erase is not in multi_index\00")
(data (i32.const 9248) "cannot erase objects in table of another contract\00")
(data (i32.const 9298) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9351) "balance is not enough\00")
(data (i32.const 9373) "compensate: #\00")
(data (i32.const 9387) "user was not found\00")
(data (i32.const 9406) "stake_amt for user was not enough\00")
(data (i32.const 9440) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9499) "transfer eos symbol only\00")
(data (i32.const 9524) "invalid transfer\00")
(data (i32.const 9541) "active\00")
(data (i32.const 9548) "trxid\00")
(data (i32.const 9554) "withdraw: #\00")
(data (i32.const 9566) "mindeposit\00")
(data (i32.const 9577) "maxdeposit\00")
(data (i32.const 9588) "profitkey\00")
(data (i32.const 9598) "type dose not exist!\00")
(data (i32.const 9619) "price != 0\00")
(data (i32.const 9630) "cnt > 0\00")
(data (i32.const 9638) "delorder item was not found\00")
(data (i32.const 9666) "delorder hero was not found\00")
(data (i32.const 9694) "item_type was not supported\00")
(data (i32.const 9722) "userupgrade was not upgraded \00")
(data (i32.const 9752) "userdele was not upgraded \00")
(data (i32.const 9779) "deldelegate item was not found\00")
(data (i32.const 9810) "deldelegate hero was not found\00")
(data (i32.const 9841) "cleartbl user was not found\00")
(data (i32.const 9869) "cleartbl user itembuy was not found\00")
(data (i32.const 9905) "cleartbl user herobuy was not found\00")
(data (i32.const 9941) "cleartbl user upgrade was not found\00")
(data (i32.const 9977) "cleartbl user delegate was not found\00")
(data (i32.const 10014) "cleartbl user _system_buy was not found\00")
(data (i32.const 10054) "deltbl type was not supported, the range must be between 0 and 10\00")
(data (i32.const 10120) "_system_buy hero was not found\00")
(data (i32.const 10151) "cleartbl type was not supported, the range must be between 0 and 10\00")
(data (i32.const 10219) "for item sell: %s-%lld-%lld-%lld-%lld-\00")
(data (i32.const 10258) "checkorder item was not found\00")
(data (i32.const 10288) "for hero sell: %s-%lld-%lld-%lld-%lld-\00")
(data (i32.const 10327) "checkorder hero was not found\00")
(data (i32.const 10360) "|(\00\00")
(data (i32.const 10364) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10397) "multiplication overflow\00")
(data (i32.const 10421) "multiplication underflow\00")
(data (i32.const 10446) "knightsteam1\00")
(data (i32.const 10459) "balance is 0\00")
(data (i32.const 10472) "clear balance\00")
(data (i32.const 10486) "transfer minimum deposit is 1 EOS\00")
(data (i32.const 10520) "transfer max deposit is 999 EOS\00")
(data (i32.const 10552) "transfer memo=> transaction type | transaction content\00")
(data (i32.const 10607) "stake_amt overflow\00")
(data (i32.const 10626) "delegateType is invalid\00")
(data (i32.const 10650) "invalid reffer memo=>\00")
(data (i32.const 10672) "itemheroid\00")
(data (i32.const 10683) "invalid buy memo=>\00")
(data (i32.const 10702) "item type is invalid\00")
(data (i32.const 10723) "price must be greater than 0\00")
(data (i32.const 10752) "item payment is not satisfied\00")
(data (i32.const 10782) "time was not cooldown\00")
(data (i32.const 10804) "hero payment is not satisfied\00")
(data (i32.const 10834) "itemid\00")
(data (i32.const 10841) "heroid\00")
(data (i32.const 10848) "##erroCode##20021\00")
(data (i32.const 10866) "user has upgraded \00")
(data (i32.const 10885) "user has delegated \00")
(data (i32.const 10905) "erroCode:1000-invalid reffer memo=>\00")
(data (i32.const 10941) "system_buy: %s %lld\00")
(data (i32.const 10961) "get\00")
(data (i32.const 10965) "read\00")
(data (i32.const 0) "\e0*\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "abort" (func $fimport$1))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$24 (result i32)))
(import "env" "read_action_data" (func $fimport$25 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$26 (param i64)))
(import "env" "db_next_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$28 (result i64)))
(import "env" "db_lowerbound_i64" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multi3" (func $fimport$30 (param i32 i64 i64 i64 i64)))
(import "env" "eosio_assert_code" (func $fimport$31 (param i32 i64)))
(import "env" "current_receiver" (func $fimport$32 (result i64)))
(import "env" "db_store_i64" (func $fimport$33 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$34 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$35 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$36 (param i32)))
(import "env" "is_account" (func $fimport$37 (param i64) (result i32)))
(import "env" "send_deferred" (func $fimport$38 (param i32 i64 i32 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$39 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$40 (param i32)))
(import "env" "db_idx64_next" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$42 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$43 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$44 (param i64 i64 i64 i64 i32) (result i32)))
(export "apply" (func $39))
(table $0 24 24 anyfunc)
(elem (i32.const 1) $19 $21 $40 $42 $44 $46 $48 $50 $52 $54 $55 $57 $58 $60 $62 $63 $65 $66 $68 $70 $72 $74 $75)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10970))
(global $global$2 i32 (i32.const 10970))


int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10961])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $173($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $177($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $178($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [8942])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $178($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $179($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8942])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [8942])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [8942])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [8942])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $170 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $172(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $173($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $174(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $171 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $180(CALL $181($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $127 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [72]) = [1]
	*($5 + [24]) = *($1 + [24])
	$6 = *($1 + [8])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($7 + [-7])
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = ($1 + [8])
	*($5 + [40]) = $1
	*($5 + [48]) = ($1 + [16])
	$7 = ($1 + [24])
	*($5 + [52]) = $7
	*($5 + [56]) = ($1 + [32])
	*($5 + [60]) = ($1 + [40])
	*($5 + [64]) = ($1 + [56])
	*($5 + [68]) = ($1 + [64])
	*($5 + [72]) = ($1 + [72])
	CALL $201(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [80]), $2, $4, [73])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [40]) = *($7)
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$4 }
	$4 = *($1 + [84])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8526760964941414400, ($5 + [32]), $6)
	*(($1 + [84])) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [40]))
	
.LABEL $label$4
	$global$0 = ($5 + [80])
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $189 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $49 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [640])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [576]) = (int_64)0
	*($4 + [568]) = (int_64)0
	*($4 + [584]) = (int_64)0
	*($4 + [556]) = $2
	*($4 + [552]) = $2
	*($4 + [560]) = ($2 + $7)
	*($4 + [624]) = ($4 + [552])
	*($4 + [16]) = ($4 + [568])
	CALL $120(($4 + [16]), ($4 + [624]))
	*(($3 = ($4 + [8]))) = *($4 + [560])
	*($4) = *($4 + [552])
	$3 = *($3)
	*((($4 + [592]) + [8])) = $3
	*(($8 = (($4 + [608]) + [8]))) = $3
	$9 = *($4)
	*($4 + [608]) = $9
	*($4 + [592]) = $9
	$3 = *($8)
	*((($4 + [624]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [608])
	*($4 + [32]) = $1
	*($4 + [624]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [284])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [324])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [364])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [440])) = [0]
	*(($4 + [432])) = (int_64)0
	*(($4 + [456])) = $0
	*(($4 + [464])) = (int_64)-1
	*(($4 + [472])) = (int_64)0
	*(($4 + [480])) = [0]
	*(($4 + [496])) = $0
	*(($4 + [504])) = (int_64)-1
	*(($4 + [512])) = (int_64)0
	*(($4 + [520])) = [0]
	*($4 + [448]) = $0
	*($4 + [488]) = $0
	*($4 + [528]) = (int_64)86400
	*($4 + [536]) = (int_64)1
	*($4 + [544]) = (int_64)990000
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [584])
	$1 = *($4 + [576])
	$9 = *($4 + [568])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $77(($4 + [16]))
	$global$0 = ($4 + [640])
	return [1]
}

void .FUNC $48 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [8]) = $2
	CALL require_auth(*($0))
	$5 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [40]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $79($5, $8)
	if ( ((int_32)*($9 + [40]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9387])
	$1 = *($0)
	*($4) = ($4 + [8])
	if ( $9 ){ goto $label$5 }
	CALL eosio_assert([0], [8948])
	
.LABEL $label$5
	CALL $121($5, $9, $1, $4)
	$global$0 = ($4 + [16])
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $43 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = [0]
	if ( $7 ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$4
	$3 = ($2 + $7)
	$8 = ($4 + [552])
	CALL memcpy(($4 + [544]), $2, [1])
	$9 = ($2 + [1])
	if ( ((uint_32)($7 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [9])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [544]) + [8]))
	$8 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$7 }
	$4 = ($0 + [272])
	$6 = *(($0 + [300]))
	$5 = *(($0 + [296]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$9:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$6 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ($0 + [312])
	$6 = *(($0 + [340]))
	$5 = *(($0 + [336]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$10:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$3 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$7
	CALL eosio_assert([0], [9694])
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($7 + [32]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [280])), (int_64)8526761782998466560, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $98($4, $1)
	if ( ((int_32)*($7 + [32]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9779])
	if ( $7 ){ goto $label$11 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$11
	$1 = CALL db_next_i64(*($7 + [36]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	CALL $98($4, $1)
	
.LABEL $label$12
	CALL $99($4, $7)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($7 + [32]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [320])), (int_64)7687438586819379200, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $100($4, $1)
	if ( ((int_32)*($7 + [32]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9810])
	if ( $7 ){ goto $label$13 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$13
	$1 = CALL db_next_i64(*($7 + [36]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	CALL $100($4, $1)
	
.LABEL $label$14
	CALL $101($4, $7)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $41 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memcpy(($4 + [8]), $2, [1])
	$8 = *($4 + [8])
	*(($4 + [28])) = ($2 + [1])
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [544])
	return [1]
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = *($0)
	*($2 + [16]) = [8755]
	*($2 + [20]) = CALL $15([8755])
	*($2 + [8]) = *($2 + [16])
	CALL $88($0, ($0 + [72]), $3, *(CALL $38(($2 + [24]), ($2 + [8]))), (CASTING uint_64)(uint_32 $1))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $47 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = [0]
	if ( $7 ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$4
	$3 = ($2 + $7)
	$8 = ($4 + [552])
	CALL memcpy(($4 + [544]), $2, [1])
	$9 = ($2 + [1])
	if ( ((uint_32)($7 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [9])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [544]) + [8]))
	$8 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( ((int_32)$1 == (int_32)[4]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[3]) ){ goto $label$4 }
	$4 = ($0 + [352])
	$6 = *(($0 + [380]))
	$5 = *(($0 + [376]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$9:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$7 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$8
	$4 = ($0 + [392])
	$6 = *(($0 + [420]))
	$5 = *(($0 + [416]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$10:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$3 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [8817])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [360])), (int_64)-3020370168519699456, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $94($4, $1)
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9722])
	if ( $7 ){ goto $label$11 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$11
	$1 = CALL db_next_i64(*($7 + [28]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	CALL $94($4, $1)
	
.LABEL $label$12
	CALL $95($4, $7)
	
.LABEL $label$4
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [400])), (int_64)-3020379700884144128, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $96($4, $1)
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9752])
	if ( $7 ){ goto $label$13 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$13
	$1 = CALL db_next_i64(*($7 + [28]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	CALL $96($4, $1)
	
.LABEL $label$14
	CALL $97($4, $7)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $45 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [672])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [576]) = (int_64)0
	*($4 + [568]) = [0]
	*($4 + [584]) = (int_64)0
	*($4 + [592]) = (int_64)0
	*($4 + [600]) = (int_64)0
	*($4 + [608]) = (int_64)0
	*($4 + [616]) = (int_64)0
	*($4 + [556]) = $2
	*($4 + [552]) = $2
	*($4 + [560]) = ($2 + $7)
	*($4 + [656]) = ($4 + [552])
	*($4 + [16]) = ($4 + [568])
	CALL $126(($4 + [16]), ($4 + [656]))
	*(($3 = ($4 + [8]))) = *($4 + [560])
	*($4) = *($4 + [552])
	$3 = *($3)
	*((($4 + [624]) + [8])) = $3
	*(($8 = (($4 + [640]) + [8]))) = $3
	$9 = *($4)
	*($4 + [640]) = $9
	*($4 + [624]) = $9
	$3 = *($8)
	*((($4 + [656]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [640])
	*($4 + [32]) = $1
	*($4 + [656]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [284])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [324])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [364])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [440])) = [0]
	*(($4 + [432])) = (int_64)0
	*(($4 + [456])) = $0
	*(($4 + [464])) = (int_64)-1
	*(($4 + [472])) = (int_64)0
	*(($4 + [480])) = [0]
	*(($4 + [496])) = $0
	*(($4 + [504])) = (int_64)-1
	*(($4 + [512])) = (int_64)0
	*(($4 + [520])) = [0]
	*($4 + [448]) = $0
	*($4 + [488]) = $0
	*($4 + [528]) = (int_64)86400
	*($4 + [536]) = (int_64)1
	*($4 + [544]) = (int_64)990000
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [616])
	$1 = *($4 + [608])
	$9 = *($4 + [600])
	$10 = *($4 + [592])
	$11 = *($4 + [584])
	$12 = *($4 + [576])
	$8 = *($4 + [568])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 ($8 & [255])), (int_32 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $77(($4 + [16]))
	$global$0 = ($4 + [672])
	return [1]
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$8 = ($global$0 - [16])
	$global$0 = $8
	CALL require_auth(*($0))
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$8 }
	$9 = ($0 + [192])
	$11 = *(($0 + [220]))
	$10 = *(($0 + [216]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$6 }
	
.LOOP $label$10:
	$1 = ($11 + [-24])
	$12 = *($1)
	if ( ((int_64)*($12 + [8]) == (int_64)$3) ){ goto $label$7 }
	$11 = $1
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$10 }
	goto $label$6 
	
.LABEL $label$9
	$9 = ($0 + [232])
	$11 = *(($0 + [260]))
	$10 = *(($0 + [256]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$3 }
	
.LOOP $label$11:
	$1 = ($11 + [-24])
	$12 = *($1)
	if ( ((int_64)*($12 + [8]) == (int_64)$3) ){ goto $label$4 }
	$11 = $1
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$11 }
	goto $label$3 
	
.LABEL $label$8
	CALL eosio_assert([0], [9694])
	$global$0 = ($8 + [16])
	return 
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$6 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$9) ){ goto $label$12 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$12
	if ( $12 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$1 = CALL db_find_i64(*($9), *(($0 + [200])), (int_64)8526760964941414400, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $90($9, $1)
	if ( ((int_32)*($12 + [76]) == (int_32)$9) ){ goto $label$5 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$5
	CALL $127($9, $12, *($0), ($8 + [8]))
	$global$0 = ($8 + [16])
	return 
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$3 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$9) ){ goto $label$13 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$13
	if ( $12 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = CALL db_find_i64(*($9), *(($0 + [240])), (int_64)7687437768762327040, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $92($9, $1)
	if ( ((int_32)*($12 + [76]) == (int_32)$9) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	CALL $128($9, $12, *($0), $8)
	
.LABEL $label$1
	$global$0 = ($8 + [16])
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8942])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $164 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $163 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $162 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [40]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	*($0 + [16]) = (int_64)0
	$1 = *($2)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($0 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($3 + [56]) = ($3 + [40])
	*($3 + [52]) = $3
	*($3 + [48]) = $3
	*($3 + [64]) = ($3 + [48])
	*($3 + [76]) = ($0 + [8])
	*($3 + [72]) = $0
	*($3 + [80]) = ($0 + [16])
	*($3 + [84]) = ($0 + [24])
	*($3 + [88]) = ($0 + [32])
	CALL $167(($3 + [72]), ($3 + [64]))
	$4 = *($0)
	*($0 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020384829779738624, *(*($2 + [8])), $4, $3, [40])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [96])
	return $0
}

void .FUNC $161 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [584]) = (int_64)0
	*($3 + [576]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [576]), $2, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [576]) + [8])) = *($3 + [32])
	*($3 + [568]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy(($3 + [568]), $5, [8])
	*((($3 + [32]) + [24])) = $4
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [24])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*($3 + [264]) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [300])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [340])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = (int_64)-1
	*(($3 + [368])) = (int_64)0
	*(($3 + [376])) = [0]
	*(($3 + [380])) = [0]
	*(($3 + [392])) = $0
	*($3 + [304]) = $0
	*($3 + [344]) = $0
	*($3 + [384]) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = (int_64)0
	*(($3 + [496])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = (int_64)0
	*($3 + [424]) = $0
	*($3 + [464]) = $0
	*($3 + [504]) = $0
	*(($3 + [536])) = [0]
	$0 = *((($3 + [576]) + [8]))
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $0
	*($3 + [544]) = (int_64)86400
	*($3 + [552]) = (int_64)1
	*($3 + [560]) = (int_64)990000
	$0 = *($3 + [576])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $70(($3 + [32]), $3, *($3 + [568]))
	CALL $77(($3 + [32]))
	$global$0 = ($3 + [592])
}

void .FUNC $160 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [544])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [536]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [536]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $60($3, *($3 + [536]))
	CALL $77($3)
	$global$0 = ($3 + [544])
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	$2 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [32])
	$10 = (CASTING uint_64)(uint_32 $1)
	$11 = ($6 + ((int_32)$9 * (int_32)[40]))
	$1 = ($7 + [32])
	$9 = ($7 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $173($9, $2)
	$1 = *($1)
	$2 = *($9)
	goto $label$6 
	
.LABEL $label$7
	$1 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$12 = ($7 + [40])
	CALL $175(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$13 = ($2 - $8)
	$9 = [0]
	
.LOOP $label$10:
	$4 = ($8 + $9)
	*((($2 = ($7 + $9)) + [-32])) = *(($4 + [-32]))
	*(($2 + [-40])) = *(($4 + [-40]))
	*(($1 = ($2 + [-24]))) = (int_64)0
	*(($6 = ($2 + [-16]))) = [0]
	$3 = ($4 + [-24])
	*($1) = *($3)
	$1 = ($4 + [-16])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$6 = ($4 + [-12])
	*($1) = *($6)
	*($3) = (int_64)0
	$4 = ($4 + [-4])
	*($2) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$9 = ($9 + [-40])
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$10 }
	$7 = ($7 + $9)
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $7
	*(($0 + [4])) = $12
	*(($0 + [8])) = $11
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = *(($2 + [-12]))
	if ( ($4 == 0) ){ goto $label$13 }
	*(($2 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$13
	$4 = ($2 + [-40])
	$9 = *(($2 + [-24]))
	if ( ($9 == 0) ){ goto $label$14 }
	*(($2 + [-20])) = $9
	CALL $9($9)
	
.LABEL $label$14
	$2 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $9($1)
	
.LABEL $label$15
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [16]) = (int_64))(*($1 + [16]) - *(*($3)))
	$6 = *($1)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = ($1 + [32])
	$7 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $7
	*($5 + [40]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8942])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $176(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $58 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [80]) = $2
	*($3 + [88]) = $1
	CALL require_auth(*($0))
	CALL $86($0, ($3 + [88]), ($3 + [80]))
	$2 = *($3 + [80])
	$4 = CALL $15([8382])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8657])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($4 + [8381]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$6
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$6 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)4
	
.LABEL $label$1
	*($3 + [72]) = $6
	*($3 + [64]) = $2
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [8431])
	$6 = *(($3 + [72]))
	
.LABEL $label$7
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $2
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $2
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $5 ){ goto $label$12 }
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8480])
	$6 = *(($3 + [72]))
	
.LABEL $label$8
	CALL $37(($3 + [48]), *($0))
	if ( ((int_64)$6 == (int_64)*($3 + [56])) ){ goto $label$13 }
	CALL eosio_assert([0], [9440])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($3 + [64]) <= (int_64)*($3 + [48])), [9351])
	*($3 + [32]) = [8370]
	*($3 + [36]) = CALL $15([8370])
	*($3 + [8]) = *($3 + [32])
	$7 = CALL $38(($3 + [40]), ($3 + [8]))
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $15([9373])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$17 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$8 = (($4 + [16]) & [-16])
	$5 = CALL $7($8)
	*($3 + [16]) = ($8 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$16
	CALL memcpy($5, [9373], $4)
	
.LABEL $label$15
	*(($5 + $4)) = [0]
	CALL $87($0, $0, ($3 + [88]), ($3 + [64]), $7, ($3 + [16]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*($3 + [24]))
	
.LABEL $label$18
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$14
	CALL $23(($3 + [16]))
}

int_32 .FUNC $59 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [544]) + [8])
	CALL memcpy(($4 + [544]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [544]) + [8]))
	$1 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$13
	$1 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)-3020384829779738624, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [32])
	$1 = CALL $79($3, $1)
	
.LOOP $label$14:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [44]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	$0 = CALL $79($3, $4)
	
.LABEL $label$15
	CALL $115($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$14 }
	goto $label$1 
	
.LABEL $label$12
	CALL eosio_assert([0], [10151])
	$global$0 = ($2 + [16])
	return 
	
.LABEL $label$11
	$1 = CALL db_lowerbound_i64(*($0 + [72]), *(($0 + [80])), (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [72])
	$1 = CALL $118($3, $1)
	
.LOOP $label$16:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [20]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$17 }
	$0 = CALL $118($3, $4)
	
.LABEL $label$17
	CALL $119($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$16 }
	goto $label$1 
	
.LABEL $label$10
	$1 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)8526770029230817280, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [112])
	$1 = CALL $105($3, $1)
	
.LOOP $label$18:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [76]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$0 = CALL $105($3, $4)
	
.LABEL $label$19
	CALL $106($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$18 }
	goto $label$1 
	
.LABEL $label$9
	$1 = CALL db_lowerbound_i64(*($0 + [152]), *(($0 + [160])), (int_64)7687446833051729920, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [152])
	$1 = CALL $109($3, $1)
	
.LOOP $label$20:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [76]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$21 }
	$0 = CALL $109($3, $4)
	
.LABEL $label$21
	CALL $110($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$8
	$1 = CALL db_lowerbound_i64(*($0 + [192]), *(($0 + [200])), (int_64)8526760964941414400, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [192])
	$1 = CALL $90($3, $1)
	
.LOOP $label$22:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [80]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$23 }
	$0 = CALL $90($3, $4)
	
.LABEL $label$23
	CALL $91($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$7
	$1 = CALL db_lowerbound_i64(*($0 + [232]), *(($0 + [240])), (int_64)7687437768762327040, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [232])
	$1 = CALL $92($3, $1)
	
.LOOP $label$24:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [80]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$25 }
	$0 = CALL $92($3, $4)
	
.LABEL $label$25
	CALL $93($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$6
	$1 = CALL db_lowerbound_i64(*($0 + [272]), *(($0 + [280])), (int_64)8526761782998466560, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [272])
	$1 = CALL $98($3, $1)
	
.LOOP $label$26:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [36]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$27 }
	$0 = CALL $98($3, $4)
	
.LABEL $label$27
	CALL $99($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$26 }
	goto $label$1 
	
.LABEL $label$5
	$1 = CALL db_lowerbound_i64(*($0 + [312]), *(($0 + [320])), (int_64)7687438586819379200, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [312])
	$1 = CALL $100($3, $1)
	
.LOOP $label$28:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [36]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$29 }
	$0 = CALL $100($3, $4)
	
.LABEL $label$29
	CALL $101($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$28 }
	goto $label$1 
	
.LABEL $label$4
	$1 = CALL db_lowerbound_i64(*($0 + [352]), *(($0 + [360])), (int_64)-3020370168519699456, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [352])
	$1 = CALL $94($3, $1)
	
.LOOP $label$30:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [28]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$31 }
	$0 = CALL $94($3, $4)
	
.LABEL $label$31
	CALL $95($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$30 }
	goto $label$1 
	
.LABEL $label$3
	$1 = CALL db_lowerbound_i64(*($0 + [392]), *(($0 + [400])), (int_64)-3020379700884144128, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [392])
	$1 = CALL $96($3, $1)
	
.LOOP $label$32:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [28]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$33 }
	$0 = CALL $96($3, $4)
	
.LABEL $label$33
	CALL $97($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$32 }
	goto $label$1 
	
.LABEL $label$2
	$1 = CALL db_lowerbound_i64(*($0 + [432]), *(($0 + [440])), (int_64)-4057297648603496448, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [432])
	$1 = CALL $116($3, $1)
	
.LOOP $label$34:
	$0 = [0]
	$4 = CALL db_next_i64(*($1 + [28]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$35 }
	$0 = CALL $116($3, $4)
	
.LABEL $label$35
	CALL $117($3, $1)
	$1 = $0
	if ( $0 ){ goto $label$34 }
	
.LABEL $label$1
	$global$0 = ($2 + [16])
	$1
}

int_32 .FUNC $51 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [536]) = [0]
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$4
	CALL memcpy(($4 + [536]), $2, [2])
	*(($4 + [20])) = ($2 + [2])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [188])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [268])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*(($4 + [308])) = [0]
	*(($4 + [320])) = $0
	*(($4 + [328])) = (int_64)-1
	*(($4 + [336])) = (int_64)0
	*(($4 + [344])) = [0]
	*(($4 + [348])) = [0]
	*(($4 + [360])) = $0
	*($4 + [272]) = $0
	*($4 + [312]) = $0
	*($4 + [352]) = $0
	*(($4 + [368])) = (int_64)-1
	*(($4 + [376])) = (int_64)0
	*(($4 + [384])) = [0]
	*(($4 + [400])) = $0
	*(($4 + [408])) = (int_64)-1
	*(($4 + [416])) = (int_64)0
	*(($4 + [424])) = [0]
	*(($4 + [440])) = $0
	*(($4 + [448])) = (int_64)-1
	*(($4 + [456])) = (int_64)0
	*(($4 + [464])) = [0]
	*(($4 + [480])) = $0
	*(($4 + [488])) = (int_64)-1
	*(($4 + [496])) = (int_64)0
	*($4 + [392]) = $0
	*($4 + [432]) = $0
	*($4 + [472]) = $0
	*(($4 + [504])) = [0]
	*($4 + [512]) = (int_64)86400
	*($4 + [520]) = (int_64)1
	*($4 + [528]) = (int_64)990000
	$3 = ($4 + int_32($5 >> [1]))
	$8 = *($4 + [536])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($8 & [65535])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $77($4)
	$global$0 = ($4 + [544])
	return [1]
}

void .FUNC $52 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_64 $5, int_64 $6)
{
	CALL require_auth(*($0))
	CALL eosio_assert(((($3 + [-1]) & [255]) <= [2]), [9598])
	CALL eosio_assert(((int_64)$6 != (int_64)0), [9619])
	CALL eosio_assert(((int_64)$5 != (int_64)0), [9630])
}

int_32 .FUNC $53 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [672])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [584]) = (int_64)0
	*($4 + [576]) = (int_64)0
	*($4 + [592]) = [0]
	*($4 + [600]) = (int_64)0
	*($4 + [608]) = (int_64)0
	*($4 + [616]) = (int_64)0
	*($4 + [564]) = $2
	*($4 + [560]) = $2
	*($4 + [568]) = ($2 + $7)
	*($4 + [656]) = ($4 + [560])
	*($4 + [24]) = ($4 + [576])
	CALL $89(($4 + [24]), ($4 + [656]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [568])
	*($4 + [8]) = *($4 + [560])
	$3 = *($3)
	*((($4 + [624]) + [8])) = $3
	*(($8 = (($4 + [640]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [640]) = $9
	*($4 + [624]) = $9
	$3 = *($8)
	*((($4 + [656]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [640])
	*($4 + [40]) = $1
	*($4 + [656]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*(($4 + [184])) = $0
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [292])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [332])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [372])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [448])) = [0]
	*(($4 + [440])) = (int_64)0
	*(($4 + [464])) = $0
	*(($4 + [472])) = (int_64)-1
	*(($4 + [480])) = (int_64)0
	*(($4 + [488])) = [0]
	*(($4 + [504])) = $0
	*(($4 + [512])) = (int_64)-1
	*(($4 + [520])) = (int_64)0
	*(($4 + [528])) = [0]
	*($4 + [456]) = $0
	*($4 + [496]) = $0
	*($4 + [536]) = (int_64)86400
	*($4 + [544]) = (int_64)1
	*($4 + [552]) = (int_64)990000
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [616])
	$1 = *($4 + [608])
	$9 = *($4 + [600])
	$8 = *($4 + [592])
	$10 = *($4 + [584])
	$11 = *($4 + [576])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $11), (int_64 $10), (int_64 ($8 & [255])), (int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $77(($4 + [24]))
	$global$0 = ($4 + [672])
	return [1]
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$7 }
	$4 = ($0 + [192])
	$6 = *(($0 + [220]))
	$5 = *(($0 + [216]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$9:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$6 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$10:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$3 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$7
	CALL eosio_assert([0], [9694])
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*(($7 + [76])) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [200])), (int_64)8526760964941414400, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $90($4, $1)
	if ( ((int_32)*($7 + [76]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9638])
	if ( $7 ){ goto $label$11 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$11
	$1 = CALL db_next_i64(*($7 + [80]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	CALL $90($4, $1)
	
.LABEL $label$12
	CALL $91($4, $7)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*(($7 + [76])) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)7687437768762327040, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $92($4, $1)
	if ( ((int_32)*($7 + [76]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9666])
	if ( $7 ){ goto $label$13 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$13
	$1 = CALL db_next_i64(*($7 + [80]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	CALL $92($4, $1)
	
.LABEL $label$14
	CALL $93($4, $7)
	$global$0 = ($3 + [16])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = *($0)
	*($3 + [32]) = [9566]
	*($3 + [36]) = CALL $15([9566])
	*($3 + [8]) = *($3 + [32])
	$5 = ($0 + [72])
	CALL $88($0, $5, $4, *(CALL $38(($3 + [40]), ($3 + [8]))), $1)
	$4 = *($0)
	*($3 + [16]) = [9577]
	*($3 + [20]) = CALL $15([9577])
	*($3) = *($3 + [16])
	CALL $88($0, $5, $4, *(CALL $38(($3 + [24]), $3)), $2)
	*($0 + [528]) = $2
	*($0 + [520]) = $1
	$global$0 = ($3 + [48])
}

int_32 .FUNC $56 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [544]) + [8])
	CALL memcpy(($4 + [544]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [544]) + [8]))
	$1 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = *($0)
	*($2 + [16]) = [9588]
	*($2 + [20]) = CALL $15([9588])
	*($2 + [8]) = *($2 + [16])
	CALL $88($0, ($0 + [72]), $3, *(CALL $38(($2 + [24]), ($2 + [8]))), (CASTING uint_64)(uint_32 $1))
	$global$0 = ($2 + [32])
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $32($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $152 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [544])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [542])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [542])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10965])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	*(($3 + [20])) = ($2 + [2])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $50($3, *($3 + [542]))
	CALL $77($3)
	$global$0 = ($3 + [544])
}

void .FUNC $153 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [552]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [552]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [544]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy(($3 + [536]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $48($3, *($3 + [552]), *($3 + [544]), *($3 + [536]))
	CALL $77($3)
	$global$0 = ($3 + [560])
}

void .FUNC $150 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [559]), $2, [1])
	*($3 + [544]) = (int_64)0
	$5 = ($2 + [1])
	$6 = ($2 + $4)
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $46(($3 + [8]), *($3 + [559]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $151 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [558])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [558])
	if ( ((uint_32)$4 > (uint_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10965])
	
.LABEL $label$1
	CALL memcpy($5, $2, [2])
	*($3 + [544]) = (int_64)0
	$5 = ($2 + [2])
	if ( ((uint_32)($4 + [-2]) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [10])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $66(($3 + [8]), *($3 + [558]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $156 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [8]), $2, [1])
	$5 = *($3 + [8])
	*(($3 + [28])) = ($2 + [1])
	*(($3 + [32])) = ($2 + $4)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL require_auth($0)
	*($3 + [544]) = [8755]
	$0 = *($3 + [8])
	*($3 + [548]) = CALL $15([8755])
	*($3) = *($3 + [544])
	CALL $88(($3 + [8]), ($3 + [80]), $0, *(CALL $38(($3 + [552]), $3)), (CASTING uint_64)(uint_32 ((int_32)$5 != (int_32)[0])))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $157 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [576])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [552])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [552])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10965])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [36])) = ($2 + [8])
	*(($3 + [40])) = $6
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [136])) = $0
	*($3 + [24]) = $1
	*($3 + [16]) = $0
	*($3 + [32]) = $2
	*($3 + [48]) = $0
	*($3 + [88]) = $0
	*($3 + [128]) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [284])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [364])) = [0]
	*(($3 + [376])) = $0
	*($3 + [288]) = $0
	*($3 + [328]) = $0
	*($3 + [368]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = (int_64)-1
	*(($3 + [512])) = (int_64)0
	*($3 + [408]) = $0
	*($3 + [448]) = $0
	*($3 + [488]) = $0
	*(($3 + [520])) = [0]
	*($3 + [528]) = (int_64)86400
	*($3 + [536]) = (int_64)1
	*($3 + [544]) = (int_64)990000
	$1 = *($3 + [552])
	CALL require_auth($0)
	*($3 + [560]) = [8785]
	$0 = *($3 + [16])
	*($3 + [564]) = CALL $15([8785])
	*($3 + [8]) = *($3 + [560])
	$2 = CALL $38(($3 + [568]), ($3 + [8]))
	$7 = CALL current_time()
	CALL $88(($3 + [16]), ($3 + [88]), $0, *($2), ((int_64)$1 + (int_64)((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295)))
	CALL $77(($3 + [16]))
	$global$0 = ($3 + [576])
}

void .FUNC $154 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [608])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [607]), $2, [1])
	$5 = ($2 + [1])
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [592]), $5, [8])
	*($3 + [584]) = (int_64)0
	$5 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [584]), $5, [8])
	*($3 + [576]) = (int_64)0
	$5 = ($2 + [17])
	if ( ((uint_32)($4 + [-17]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy(($3 + [576]), $5, [8])
	$5 = ($2 + [25])
	if ( ((uint_32)($4 + [-25]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy(($3 + [568]), $5, [8])
	$5 = ($2 + [33])
	if ( ((uint_32)($4 + [-33]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$9
	CALL memcpy(($3 + [560]), $5, [8])
	$5 = ($2 + [41])
	if ( ((uint_32)($4 + [-41]) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$10
	$6 = ($2 + $4)
	CALL memcpy(($3 + [552]), $5, [8])
	$5 = ($2 + [49])
	if ( ((uint_32)($4 + [-49]) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$11
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [57])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $63(($3 + [8]), *($3 + [607]), *($3 + [592]), *($3 + [584]), *($3 + [576]), *($3 + [568]), *($3 + [560]), *($3 + [552]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [608])
}

void .FUNC $155 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [591]), $2, [1])
	$5 = ($2 + [1])
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [576]), $5, [8])
	*($3 + [568]) = (int_64)0
	$5 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [568]), $5, [8])
	*($3 + [560]) = (int_64)0
	$5 = ($2 + [17])
	if ( ((uint_32)($4 + [-17]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy(($3 + [560]), $5, [8])
	$5 = ($2 + [25])
	if ( ((uint_32)($4 + [-25]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy(($3 + [552]), $5, [8])
	$5 = ($2 + [33])
	if ( ((uint_32)($4 + [-33]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$9
	$6 = ($2 + $4)
	CALL memcpy(($3 + [544]), $5, [8])
	$5 = ($2 + [41])
	if ( ((uint_32)($4 + [-41]) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$10
	CALL memcpy(($3 + [536]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [49])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $44($3, *($3 + [591]), *($3 + [576]), *($3 + [568]), *($3 + [560]), *($3 + [552]), *($3 + [544]), *($3 + [536]))
	CALL $77($3)
	$global$0 = ($3 + [592])
}

void .FUNC $158 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [608])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [568])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [568])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10965])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [560]), $5, [8])
	*(($3 + [48])) = $6
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*($3 + [40]) = $2
	*(($3 + [44])) = ($2 + [16])
	*($3 + [32]) = $1
	*($3 + [24]) = $0
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [264])) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [332])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [372])) = [0]
	*(($3 + [384])) = $0
	*($3 + [296]) = $0
	*($3 + [336]) = $0
	*($3 + [376]) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = (int_64)0
	*($3 + [416]) = $0
	*($3 + [456]) = $0
	*($3 + [496]) = $0
	*(($3 + [528])) = [0]
	*($3 + [536]) = (int_64)86400
	*($3 + [544]) = (int_64)1
	*($3 + [552]) = (int_64)990000
	$1 = *($3 + [560])
	$7 = *($3 + [568])
	CALL require_auth($0)
	*($3 + [592]) = [9566]
	$0 = *($3 + [24])
	*($3 + [596]) = CALL $15([9566])
	*($3 + [16]) = *($3 + [592])
	$2 = ($3 + [96])
	CALL $88(($3 + [24]), $2, $0, *(CALL $38(($3 + [600]), ($3 + [16]))), $7)
	*($3 + [576]) = [9577]
	$0 = *($3 + [24])
	*($3 + [580]) = CALL $15([9577])
	*($3 + [8]) = *($3 + [576])
	CALL $88(($3 + [24]), $2, $0, *(CALL $38(($3 + [584]), ($3 + [8]))), $1)
	*($3 + [552]) = $1
	*($3 + [544]) = $7
	CALL $77(($3 + [24]))
	$global$0 = ($3 + [608])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [8]), $2, [1])
	$5 = *($3 + [8])
	*(($3 + [28])) = ($2 + [1])
	*(($3 + [32])) = ($2 + $4)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL require_auth($0)
	*($3 + [544]) = [9588]
	$0 = *($3 + [8])
	*($3 + [548]) = CALL $15([9588])
	*($3) = *($3 + [544])
	CALL $88(($3 + [8]), ($3 + [80]), $0, *(CALL $38(($3 + [552]), $3)), (CASTING uint_64)(uint_32 ((int_32)$5 != (int_32)[0])))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [8942])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $180($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

int_32 .FUNC $69 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [544]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [544]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [32])) = $8
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$8 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($3)
	$1 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $68 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = $2
	*($3 + [24]) = $1
	CALL require_auth($1)
	CALL $78($0)
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [8817])
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $79($4, $7)
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$3
	CALL $80($4, $8, *($0), ($3 + [8]))
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	*($3 + [12]) = ($3 + [16])
	*($3 + [8]) = ($3 + [24])
	CALL $81($3, $4, $1, ($3 + [8]))
	
.LABEL $label$1
	$4 = ($0 + [472])
	$1 = *($3 + [24])
	$6 = *(($0 + [500]))
	$5 = *(($0 + [496]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$10 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8817])
	goto $label$8 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($4), *(($0 + [480])), (int_64)-8279611178955571200, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $82($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$8
	CALL $83($4, $8, *($0), ($3 + [8]))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$7
	$1 = *($0)
	*($3) = ($3 + [24])
	CALL $84(($3 + [8]), $4, $1, $3)
	$global$0 = ($3 + [32])
}

void .FUNC $65 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [432])
	$5 = *(($0 + [460]))
	$4 = *(($0 + [456]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [24]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [440])), (int_64)-4057297648603496448, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $116($3, $6)
	if ( ((int_32)*($7 + [24]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [10120])
	if ( $7 ){ goto $label$5 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$5
	$6 = CALL db_next_i64(*($7 + [28]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $116($3, $6)
	
.LABEL $label$6
	CALL $117($3, $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $64 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [688])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [584]) = (int_64)0
	*($4 + [576]) = [0]
	*($4 + [592]) = (int_64)0
	*($4 + [600]) = (int_64)0
	*($4 + [608]) = (int_64)0
	*($4 + [616]) = (int_64)0
	*($4 + [624]) = (int_64)0
	*($4 + [632]) = (int_64)0
	*($4 + [564]) = $2
	*($4 + [560]) = $2
	*($4 + [568]) = ($2 + $7)
	*($4 + [672]) = ($4 + [560])
	*($4 + [24]) = ($4 + [576])
	CALL $122(($4 + [24]), ($4 + [672]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [568])
	*($4 + [8]) = *($4 + [560])
	$3 = *($3)
	*((($4 + [640]) + [8])) = $3
	*(($8 = (($4 + [656]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [656]) = $9
	*($4 + [640]) = $9
	$3 = *($8)
	*((($4 + [672]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [656])
	*($4 + [40]) = $1
	*($4 + [672]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*(($4 + [184])) = $0
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [292])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [332])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [372])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [448])) = [0]
	*(($4 + [440])) = (int_64)0
	*(($4 + [464])) = $0
	*(($4 + [472])) = (int_64)-1
	*(($4 + [480])) = (int_64)0
	*(($4 + [488])) = [0]
	*(($4 + [504])) = $0
	*(($4 + [512])) = (int_64)-1
	*(($4 + [520])) = (int_64)0
	*(($4 + [528])) = [0]
	*($4 + [456]) = $0
	*($4 + [496]) = $0
	*($4 + [536]) = (int_64)86400
	*($4 + [544]) = (int_64)1
	*($4 + [552]) = (int_64)990000
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [632])
	$1 = *($4 + [624])
	$9 = *($4 + [616])
	$10 = *($4 + [608])
	$11 = *($4 + [600])
	$12 = *($4 + [592])
	$13 = *($4 + [584])
	$8 = *($4 + [576])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 ($8 & [255])), (int_32 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $77(($4 + [24]))
	$global$0 = ($4 + [688])
	return [1]
}

int_32 .FUNC $67 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [552]) = (int_64)0
	*($4 + [544]) = [0]
	if ( ((uint_32)$7 > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$4
	$8 = ($2 + $7)
	CALL memcpy(($4 + [544]), $2, [2])
	$9 = ($2 + [2])
	$3 = (($4 + [544]) + [8])
	if ( ((uint_32)($7 + [-2]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy($3, $9, [8])
	*(($4 + [32])) = $8
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [10])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [276])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [316])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [356])) = [0]
	*(($4 + [368])) = $0
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = (int_64)0
	*(($4 + [392])) = [0]
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [448])) = $0
	*(($4 + [456])) = (int_64)-1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = [0]
	*(($4 + [488])) = $0
	*(($4 + [496])) = (int_64)-1
	*(($4 + [504])) = (int_64)0
	*($4 + [400]) = $0
	*($4 + [440]) = $0
	*($4 + [480]) = $0
	*(($4 + [512])) = [0]
	*($4 + [520]) = (int_64)86400
	*($4 + [528]) = (int_64)1
	*($4 + [536]) = (int_64)990000
	$8 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($3)
	$3 = *($4 + [544])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($8) + $6))
	
.LABEL $label$6
	CALL void $8((int_32 ($3 & [65535])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $77(($4 + [8]))
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [32]) = $2
	CALL require_auth(*($0))
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$34
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$17 }
	
.LOOP $label$35:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$18 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$35 }
	goto $label$17 
	
.LABEL $label$33
	CALL eosio_assert([0], [10054])
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$32
	$5 = ($0 + [112])
	*($3 + [24]) = $5
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	CALL $102(($3 + [40]), ($3 + [24]), ($3 + [32]))
	$1 = *($3 + [44])
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ((int_64)*($3 + [32]) != (int_64)*($1 + [8])) ){ goto $label$23 }
	$2 = *($3 + [40])
	*($3) = $2
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$22 }
	$7 = (($3 + [8]) + [8])
	
.LOOP $label$37:
	if ( ((int_64)*($1 + [8]) != (int_64)*($3 + [32])) ){ goto $label$36 }
	$6 = *($3 + [12])
	if ( ((int_32)$6 == (int_32)*($7)) ){ goto $label$38 }
	*($6) = *($1)
	*($3 + [12]) = ($6 + [8])
	CALL $103($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL $104(($3 + [8]), $1)
	CALL $103($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$37 }
	
.LABEL $label$36
	$1 = *($3 + [8])
	if ( ((int_32)*($3 + [12]) == (int_32)$1) ){ goto $label$39 }
	$8 = ($0 + [140])
	$9 = ($0 + [136])
	$10 = ($0 + [120])
	$11 = ($0 + [112])
	$4 = [0]
	
.LOOP $label$40:
	$2 = *(($1 + ($4 << [3])))
	$1 = *($8)
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$45:
	$0 = ($1 + [-24])
	$6 = *($0)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$44 }
	$1 = $0
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$43 }
	if ( ((int_32)*($6 + [72]) == (int_32)$5) ){ goto $label$46 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$46
	if ( $6 ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$43
	$6 = [0]
	$0 = CALL db_find_i64(*($11), *($10), (int_64)8526770029230817280, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$42 }
	$6 = CALL $105($5, $0)
	if ( ((int_32)*($6 + [72]) == (int_32)$5) ){ goto $label$41 }
	CALL eosio_assert([0], [8817])
	goto $label$41 
	
.LABEL $label$42
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$41
	$0 = CALL db_next_i64(*($6 + [76]), ($3 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$47 }
	CALL $105($5, $0)
	
.LABEL $label$47
	CALL $106($5, $6)
	$1 = *($3 + [8])
	$4 = ($4 + [1])
	if ( ($4 <= int_32((*($3 + [12]) - $1) >> [3])) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ($1 == 0) ){ goto $label$22 }
	*($3 + [12]) = $1
	CALL $9($1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$31
	$5 = ($0 + [152])
	*($3 + [24]) = $5
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	CALL $107(($3 + [40]), ($3 + [24]), ($3 + [32]))
	$1 = *($3 + [44])
	if ( ($1 == 0) ){ goto $label$21 }
	if ( ((int_64)*($3 + [32]) != (int_64)*($1 + [8])) ){ goto $label$21 }
	$2 = *($3 + [40])
	*($3) = $2
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$22 }
	$7 = (($3 + [8]) + [8])
	
.LOOP $label$49:
	if ( ((int_64)*($1 + [8]) != (int_64)*($3 + [32])) ){ goto $label$48 }
	$6 = *($3 + [12])
	if ( ((int_32)$6 == (int_32)*($7)) ){ goto $label$50 }
	*($6) = *($1)
	*($3 + [12]) = ($6 + [8])
	CALL $108($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	CALL $104(($3 + [8]), $1)
	CALL $108($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$49 }
	
.LABEL $label$48
	$1 = *($3 + [8])
	if ( ((int_32)*($3 + [12]) == (int_32)$1) ){ goto $label$51 }
	$8 = ($0 + [180])
	$9 = ($0 + [176])
	$10 = ($0 + [160])
	$11 = ($0 + [152])
	$4 = [0]
	
.LOOP $label$52:
	$2 = *(($1 + ($4 << [3])))
	$1 = *($8)
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$55 }
	
.LOOP $label$57:
	$0 = ($1 + [-24])
	$6 = *($0)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$56 }
	$1 = $0
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$55 }
	if ( ((int_32)*($6 + [72]) == (int_32)$5) ){ goto $label$58 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$58
	if ( $6 ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$55
	$6 = [0]
	$0 = CALL db_find_i64(*($11), *($10), (int_64)7687446833051729920, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$54 }
	$6 = CALL $109($5, $0)
	if ( ((int_32)*($6 + [72]) == (int_32)$5) ){ goto $label$53 }
	CALL eosio_assert([0], [8817])
	goto $label$53 
	
.LABEL $label$54
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$53
	$0 = CALL db_next_i64(*($6 + [76]), ($3 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$59 }
	CALL $109($5, $0)
	
.LABEL $label$59
	CALL $110($5, $6)
	$1 = *($3 + [8])
	$4 = ($4 + [1])
	if ( ($4 <= int_32((*($3 + [12]) - $1) >> [3])) ){ goto $label$52 }
	
.LABEL $label$51
	if ( ($1 == 0) ){ goto $label$22 }
	*($3 + [12]) = $1
	CALL $9($1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$30
	$4 = ($0 + [192])
	$6 = *(($0 + [220]))
	$5 = *(($0 + [216]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$60:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$15 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$60 }
	goto $label$14 
	
.LABEL $label$29
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$61:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$12 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$61 }
	goto $label$11 
	
.LABEL $label$28
	$5 = ($0 + [272])
	*($3 + [24]) = $5
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	CALL $111(($3 + [40]), ($3 + [24]), ($3 + [32]))
	$1 = *($3 + [44])
	if ( ($1 == 0) ){ goto $label$20 }
	if ( ((int_64)*($3 + [32]) != (int_64)*($1 + [8])) ){ goto $label$20 }
	$2 = *($3 + [40])
	*($3) = $2
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$22 }
	$7 = (($3 + [8]) + [8])
	
.LOOP $label$63:
	if ( ((int_64)*($1 + [8]) != (int_64)*($3 + [32])) ){ goto $label$62 }
	$6 = *($3 + [12])
	if ( ((int_32)$6 == (int_32)*($7)) ){ goto $label$64 }
	*($6) = *($1)
	*($3 + [12]) = ($6 + [8])
	CALL $112($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	CALL $104(($3 + [8]), $1)
	CALL $112($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$63 }
	
.LABEL $label$62
	$1 = *($3 + [8])
	if ( ((int_32)*($3 + [12]) == (int_32)$1) ){ goto $label$65 }
	$8 = ($0 + [300])
	$9 = ($0 + [296])
	$10 = ($0 + [280])
	$11 = ($0 + [272])
	$4 = [0]
	
.LOOP $label$66:
	$2 = *(($1 + ($4 << [3])))
	$1 = *($8)
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$69 }
	
.LOOP $label$71:
	$0 = ($1 + [-24])
	$6 = *($0)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$70 }
	$1 = $0
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$69 }
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$72 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$72
	if ( $6 ){ goto $label$67 }
	goto $label$68 
	
.LABEL $label$69
	$6 = [0]
	$0 = CALL db_find_i64(*($11), *($10), (int_64)8526761782998466560, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$68 }
	$6 = CALL $98($5, $0)
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$67 }
	CALL eosio_assert([0], [8817])
	goto $label$67 
	
.LABEL $label$68
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$67
	$0 = CALL db_next_i64(*($6 + [36]), ($3 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$73 }
	CALL $98($5, $0)
	
.LABEL $label$73
	CALL $99($5, $6)
	$1 = *($3 + [8])
	$4 = ($4 + [1])
	if ( ($4 <= int_32((*($3 + [12]) - $1) >> [3])) ){ goto $label$66 }
	
.LABEL $label$65
	if ( ($1 == 0) ){ goto $label$22 }
	*($3 + [12]) = $1
	CALL $9($1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$27
	$5 = ($0 + [312])
	*($3 + [24]) = $5
	*($3 + [16]) = [0]
	*($3 + [8]) = (int_64)0
	CALL $113(($3 + [40]), ($3 + [24]), ($3 + [32]))
	$1 = *($3 + [44])
	if ( ($1 == 0) ){ goto $label$19 }
	if ( ((int_64)*($3 + [32]) != (int_64)*($1 + [8])) ){ goto $label$19 }
	$2 = *($3 + [40])
	*($3) = $2
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($1) == 0) ){ goto $label$22 }
	$7 = (($3 + [8]) + [8])
	
.LOOP $label$75:
	if ( ((int_64)*($1 + [8]) != (int_64)*($3 + [32])) ){ goto $label$74 }
	$6 = *($3 + [12])
	if ( ((int_32)$6 == (int_32)*($7)) ){ goto $label$76 }
	*($6) = *($1)
	*($3 + [12]) = ($6 + [8])
	CALL $114($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	CALL $104(($3 + [8]), $1)
	CALL $114($3)
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$75 }
	
.LABEL $label$74
	$1 = *($3 + [8])
	if ( ((int_32)*($3 + [12]) == (int_32)$1) ){ goto $label$77 }
	$8 = ($0 + [340])
	$9 = ($0 + [336])
	$10 = ($0 + [320])
	$11 = ($0 + [312])
	$4 = [0]
	
.LOOP $label$78:
	$2 = *(($1 + ($4 << [3])))
	$1 = *($8)
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$81 }
	
.LOOP $label$83:
	$0 = ($1 + [-24])
	$6 = *($0)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$82 }
	$1 = $0
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$83 }
	goto $label$81 
	
.LABEL $label$82
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$81 }
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$84 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$84
	if ( $6 ){ goto $label$79 }
	goto $label$80 
	
.LABEL $label$81
	$6 = [0]
	$0 = CALL db_find_i64(*($11), *($10), (int_64)7687438586819379200, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$80 }
	$6 = CALL $100($5, $0)
	if ( ((int_32)*($6 + [32]) == (int_32)$5) ){ goto $label$79 }
	CALL eosio_assert([0], [8817])
	goto $label$79 
	
.LABEL $label$80
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$79
	$0 = CALL db_next_i64(*($6 + [36]), ($3 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$85 }
	CALL $100($5, $0)
	
.LABEL $label$85
	CALL $101($5, $6)
	$1 = *($3 + [8])
	$4 = ($4 + [1])
	if ( ($4 <= int_32((*($3 + [12]) - $1) >> [3])) ){ goto $label$78 }
	
.LABEL $label$77
	if ( ($1 == 0) ){ goto $label$22 }
	*($3 + [12]) = $1
	CALL $9($1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$26
	$4 = ($0 + [352])
	$6 = *(($0 + [380]))
	$5 = *(($0 + [376]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$86:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$9 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$86 }
	goto $label$8 
	
.LABEL $label$25
	$4 = ($0 + [392])
	$6 = *(($0 + [420]))
	$5 = *(($0 + [416]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$87:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$6 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$87 }
	goto $label$5 
	
.LABEL $label$24
	$4 = ($0 + [432])
	$6 = *(($0 + [460]))
	$5 = *(($0 + [456]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$88:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$3 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$88 }
	goto $label$2 
	
.LABEL $label$23
	*($3 + [4]) = [0]
	*($3) = ($3 + [24])
	
.LABEL $label$22
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$21
	*($3 + [4]) = [0]
	*($3) = ($3 + [24])
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$20
	*($3 + [4]) = [0]
	*($3) = ($3 + [24])
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$19
	*($3 + [4]) = [0]
	*($3) = ($3 + [24])
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$18
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$16 }
	CALL eosio_assert([0], [8817])
	goto $label$16 
	
.LABEL $label$17
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3020384829779738624, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$16 }
	$7 = CALL $79($4, $0)
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$16 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9841])
	if ( $7 ){ goto $label$89 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$89
	$0 = CALL db_next_i64(*($7 + [44]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$90 }
	CALL $79($4, $0)
	
.LABEL $label$90
	CALL $115($4, $7)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$15
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$14 }
	if ( ((int_32)*(($7 + [76])) == (int_32)$4) ){ goto $label$13 }
	CALL eosio_assert([0], [8817])
	goto $label$13 
	
.LABEL $label$14
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [200])), (int_64)8526760964941414400, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$7 = CALL $90($4, $0)
	if ( ((int_32)*($7 + [76]) == (int_32)$4) ){ goto $label$13 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9869])
	if ( $7 ){ goto $label$91 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$91
	$0 = CALL db_next_i64(*($7 + [80]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$92 }
	CALL $90($4, $0)
	
.LABEL $label$92
	CALL $91($4, $7)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$12
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$11 }
	if ( ((int_32)*(($7 + [76])) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [8817])
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)7687437768762327040, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$10 }
	$7 = CALL $92($4, $0)
	if ( ((int_32)*($7 + [76]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9905])
	if ( $7 ){ goto $label$93 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$93
	$0 = CALL db_next_i64(*($7 + [80]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$94 }
	CALL $92($4, $0)
	
.LABEL $label$94
	CALL $93($4, $7)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [8817])
	goto $label$7 
	
.LABEL $label$8
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [360])), (int_64)-3020370168519699456, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $94($4, $0)
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9941])
	if ( $7 ){ goto $label$95 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$95
	$0 = CALL db_next_i64(*($7 + [28]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$96 }
	CALL $94($4, $0)
	
.LABEL $label$96
	CALL $95($4, $7)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [400])), (int_64)-3020379700884144128, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $96($4, $0)
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9977])
	if ( $7 ){ goto $label$97 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$97
	$0 = CALL db_next_i64(*($7 + [28]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$98 }
	CALL $96($4, $0)
	
.LABEL $label$98
	CALL $97($4, $7)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$0 = CALL db_find_i64(*($4), *(($0 + [440])), (int_64)-4057297648603496448, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $116($4, $0)
	if ( ((int_32)*($7 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [10014])
	if ( $7 ){ goto $label$99 }
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$99
	$0 = CALL db_next_i64(*($7 + [28]), ($3 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$100 }
	CALL $116($4, $0)
	
.LABEL $label$100
	CALL $117($4, $7)
	$global$0 = ($3 + [48])
	$1
}

int_32 .FUNC $61 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [536]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($4 + [536]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [188])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [268])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*(($4 + [308])) = [0]
	*(($4 + [320])) = $0
	*(($4 + [328])) = (int_64)-1
	*(($4 + [336])) = (int_64)0
	*(($4 + [344])) = [0]
	*(($4 + [348])) = [0]
	*(($4 + [360])) = $0
	*($4 + [272]) = $0
	*($4 + [312]) = $0
	*($4 + [352]) = $0
	*(($4 + [368])) = (int_64)-1
	*(($4 + [376])) = (int_64)0
	*(($4 + [384])) = [0]
	*(($4 + [400])) = $0
	*(($4 + [408])) = (int_64)-1
	*(($4 + [416])) = (int_64)0
	*(($4 + [424])) = [0]
	*(($4 + [440])) = $0
	*(($4 + [448])) = (int_64)-1
	*(($4 + [456])) = (int_64)0
	*(($4 + [464])) = [0]
	*(($4 + [480])) = $0
	*(($4 + [488])) = (int_64)-1
	*(($4 + [496])) = (int_64)0
	*($4 + [392]) = $0
	*($4 + [432]) = $0
	*($4 + [472]) = $0
	*(($4 + [504])) = [0]
	*($4 + [512]) = (int_64)86400
	*($4 + [520]) = (int_64)1
	*($4 + [528]) = (int_64)990000
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [536])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $77($4)
	$global$0 = ($4 + [544])
	return [1]
}

void .FUNC $60 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $79($3, $6)
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	$6 = CALL db_next_i64(*($7 + [44]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $79($3, $6)
	
.LABEL $label$6
	CALL $115($3, $7)
	
.LABEL $label$1
	$global$0 = ($2 + [16])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$9 = ($global$0 - [352])
	$global$0 = $9
	*($9 + [336]) = $4
	*($9 + [344]) = $3
	*($9 + [328]) = $7
	CALL require_auth(*($0))
	$10 = CALL $123($0)
	CALL memset(($9 + [224]), [0], [96])
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$26 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$25 }
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$24 }
	$11 = [0]
	$12 = *([0] + [10360])
	
.LOOP $label$28:
	*((($9 + [192]) + ($1 = $11))) = *(($12 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$11 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$27 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$28 }
	
.LABEL $label$27
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$22 }
	*($9 + [208]) = ($11 << [1])
	$12 = (($9 + [208]) | [1])
	goto $label$21 
	
.LABEL $label$26
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$23 }
	$11 = [0]
	$12 = *([0] + [10360])
	
.LOOP $label$30:
	*((($9 + [192]) + ($1 = $11))) = *(($12 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$11 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$29 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$30 }
	
.LABEL $label$29
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$19 }
	*($9 + [208]) = ($11 << [1])
	$12 = (($9 + [208]) | [1])
	goto $label$18 
	
.LABEL $label$25
	CALL eosio_assert([0], [9694])
	$global$0 = ($9 + [352])
	return (unreachable)
	
.LABEL $label$24
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	*($9 + [208]) = [0]
	$1 = (($9 + [208]) | [1])
	$11 = $1
	goto $label$20 
	
.LABEL $label$23
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	*($9 + [208]) = [0]
	$1 = (($9 + [208]) | [1])
	$11 = $1
	goto $label$17 
	
.LABEL $label$22
	$13 = (($11 + [16]) & [-16])
	$12 = CALL $7($13)
	*($9 + [208]) = ($13 | [1])
	*($9 + [216]) = $12
	*($9 + [212]) = $11
	
.LABEL $label$21
	$13 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$31:
	*(($12 + $1)) = *((($9 + [192]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$31 }
	$11 = ($12 + $11)
	$1 = (($9 + [208]) | [1])
	$7 = *($9 + [328])
	
.LABEL $label$20
	*($11) = [0]
	*(($9 + [64])) = $8
	*(($9 + [56])) = $7
	*(($9 + [48])) = $6
	*($9 + [40]) = $5
	*($9 + [32]) = ( *($9 + [216]) ? $1 : (*($9 + [208]) & [1]) )
	CALL $22(($9 + [224]), [95], [10219], ($9 + [32]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$32 }
	CALL $9(*(($9 + [216])))
	
.LABEL $label$32
	$14 = ($0 + [192])
	$3 = *($9 + [344])
	$11 = *(($0 + [220]))
	$13 = *(($0 + [216]))
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$34 }
	
.LOOP $label$36:
	$1 = ($11 + [-24])
	$12 = *($1)
	if ( ((int_64)*($12 + [8]) == (int_64)$3) ){ goto $label$35 }
	$11 = $1
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$34 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$14) ){ goto $label$33 }
	CALL eosio_assert([0], [8817])
	goto $label$33 
	
.LABEL $label$34
	$12 = [0]
	$1 = CALL db_find_i64(*($14), *(($0 + [200])), (int_64)8526760964941414400, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$33 }
	$12 = CALL $90($14, $1)
	if ( ((int_32)*($12 + [76]) == (int_32)$14) ){ goto $label$33 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$33
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [10258])
	$7 = *($12 + [56])
	$3 = *($12 + [40])
	CALL __multi3(($9 + [16]), $3, (int_64)$3 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	*((($9 + [192]) + [8])) = *(($12 + [48]))
	*($9 + [192]) = $3
	$7 = *((($9 + [16]) + [8]))
	$3 = *($9 + [16])
	if ( (( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$38 }
	if ( ( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$39 }
	CALL eosio_assert([0], [10421])
	
.LABEL $label$39
	*($9 + [192]) = $3
	if ( ($10 == 0) ){ goto $label$37 }
	goto $label$4 
	
.LABEL $label$38
	CALL eosio_assert([0], [10397])
	*($9 + [192]) = $3
	if ( $10 ){ goto $label$4 }
	
.LABEL $label$37
	*($9 + [168]) = [8370]
	*($9 + [172]) = CALL $15([8370])
	*($9 + [8]) = *($9 + [168])
	$13 = CALL $38(($9 + [184]), ($9 + [8]))
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	$1 = CALL $15(($9 + [224]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$10 }
	$10 = ($12 + [16])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*($9 + [208]) = ($1 << [1])
	$11 = (($9 + [208]) | [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$19
	$13 = (($11 + [16]) & [-16])
	$12 = CALL $7($13)
	*($9 + [208]) = ($13 | [1])
	*($9 + [216]) = $12
	*($9 + [212]) = $11
	
.LABEL $label$18
	$13 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$40:
	*(($12 + $1)) = *((($9 + [192]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$40 }
	$11 = ($12 + $11)
	$1 = (($9 + [208]) | [1])
	$7 = *($9 + [328])
	
.LABEL $label$17
	*($11) = [0]
	*(($9 + [144])) = $8
	*(($9 + [136])) = $7
	*(($9 + [128])) = $6
	*($9 + [120]) = $5
	*($9 + [112]) = ( *($9 + [216]) ? $1 : (*($9 + [208]) & [1]) )
	CALL $22(($9 + [224]), [95], [10288], ($9 + [112]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$41 }
	CALL $9(*(($9 + [216])))
	
.LABEL $label$41
	$14 = ($0 + [232])
	$3 = *($9 + [344])
	$11 = *(($0 + [260]))
	$13 = *(($0 + [256]))
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$43 }
	
.LOOP $label$45:
	$1 = ($11 + [-24])
	$12 = *($1)
	if ( ((int_64)*($12 + [8]) == (int_64)$3) ){ goto $label$44 }
	$11 = $1
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$43 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [8817])
	goto $label$42 
	
.LABEL $label$43
	$12 = [0]
	$1 = CALL db_find_i64(*($14), *(($0 + [240])), (int_64)7687437768762327040, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$42 }
	$12 = CALL $92($14, $1)
	if ( ((int_32)*($12 + [76]) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$42
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [10327])
	$7 = *($12 + [56])
	$3 = *($12 + [40])
	CALL __multi3(($9 + [96]), $3, (int_64)$3 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	*((($9 + [192]) + [8])) = *(($12 + [48]))
	*($9 + [192]) = $3
	$7 = *((($9 + [96]) + [8]))
	$3 = *($9 + [96])
	if ( (( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$47 }
	if ( ( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$48 }
	CALL eosio_assert([0], [10421])
	
.LABEL $label$48
	*($9 + [192]) = $3
	if ( ($10 == 0) ){ goto $label$46 }
	goto $label$8 
	
.LABEL $label$47
	CALL eosio_assert([0], [10397])
	*($9 + [192]) = $3
	if ( $10 ){ goto $label$8 }
	
.LABEL $label$46
	*($9 + [192]) = ((int_64)((int_64)$3 * (int_64)98) / (int_64)100)
	*($9 + [152]) = [8370]
	*($9 + [156]) = CALL $15([8370])
	*($9 + [88]) = *($9 + [152])
	$13 = CALL $38(($9 + [184]), ($9 + [88]))
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	$1 = CALL $15(($9 + [224]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	$10 = ($12 + [16])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$13 }
	*($9 + [208]) = ($1 << [1])
	$11 = (($9 + [208]) | [1])
	if ( $1 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$15 = (($1 + [16]) & [-16])
	$11 = CALL $7($15)
	*($9 + [208]) = ($15 | [1])
	*($9 + [216]) = $11
	*($9 + [212]) = $1
	
.LABEL $label$15
	CALL memcpy($11, ($9 + [224]), $1)
	
.LABEL $label$14
	*(($11 + $1)) = [0]
	CALL $87($0, $0, $10, ($9 + [192]), $13, ($9 + [208]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$49 }
	CALL $9(*($9 + [216]))
	
.LABEL $label$49
	if ( $12 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$13
	$15 = (($1 + [16]) & [-16])
	$11 = CALL $7($15)
	*($9 + [208]) = ($15 | [1])
	*($9 + [216]) = $11
	*($9 + [212]) = $1
	
.LABEL $label$12
	CALL memcpy($11, ($9 + [224]), $1)
	
.LABEL $label$11
	*(($11 + $1)) = [0]
	CALL $87($0, $0, $10, ($9 + [192]), $13, ($9 + [208]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$50 }
	CALL $9(*($9 + [216]))
	
.LABEL $label$50
	if ( $12 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$10
	CALL $23(($9 + [208]))
	
.LABEL $label$9
	CALL $23(($9 + [208]))
	
.LABEL $label$8
	*($9 + [192]) = ((int_64)((int_64)$3 * (int_64)93) / (int_64)100)
	*($9 + [160]) = [8370]
	*($9 + [164]) = CALL $15([8370])
	*($9 + [80]) = *($9 + [160])
	$10 = CALL $38(($9 + [184]), ($9 + [80]))
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	$1 = CALL $15(($9 + [224]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$5 }
	$13 = ($12 + [16])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$53 }
	*($9 + [208]) = ($1 << [1])
	$11 = (($9 + [208]) | [1])
	if ( $1 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$15 = (($1 + [16]) & [-16])
	$11 = CALL $7($15)
	*($9 + [208]) = ($15 | [1])
	*($9 + [216]) = $11
	*($9 + [212]) = $1
	
.LABEL $label$52
	CALL memcpy($11, ($9 + [224]), $1)
	
.LABEL $label$51
	*(($11 + $1)) = [0]
	CALL $87($0, $0, $13, ($9 + [192]), $10, ($9 + [208]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$54 }
	CALL $9(*($9 + [216]))
	
.LABEL $label$54
	$7 = ((int_64)$3 / (int_64)20)
	*($9 + [192]) = $7
	CALL $124($0, $13, ($9 + [192]), $7, ($9 + [224]))
	if ( $12 ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$6
	$1 = CALL db_next_i64(*($12 + [80]), ($9 + [208]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$55 }
	CALL $92($14, $1)
	
.LABEL $label$55
	CALL $93($14, $12)
	if ( ((uint_64)*($9 + [328]) <= (uint_64)$3) ){ goto $label$56 }
	*($9 + [328]) = $3
	
.LABEL $label$56
	CALL $86($0, ($9 + [336]), ($9 + [328]))
	CALL $125($0, ($9 + [344]), ( $3 ? $8 : (uint_64)($3 <= $8) ))
	$global$0 = ($9 + [352])
	return (unreachable)
	
.LABEL $label$5
	CALL $23(($9 + [208]))
	
.LABEL $label$4
	*($9 + [192]) = ((int_64)((int_64)$3 * (int_64)95) / (int_64)100)
	*($9 + [176]) = [8370]
	*($9 + [180]) = CALL $15([8370])
	*($9) = *($9 + [176])
	$10 = CALL $38(($9 + [184]), $9)
	*(($9 + [216])) = [0]
	*($9 + [208]) = (int_64)0
	$1 = CALL $15(($9 + [224]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$13 = ($12 + [16])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$59 }
	*($9 + [208]) = ($1 << [1])
	$11 = (($9 + [208]) | [1])
	if ( $1 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$15 = (($1 + [16]) & [-16])
	$11 = CALL $7($15)
	*($9 + [208]) = ($15 | [1])
	*($9 + [216]) = $11
	*($9 + [212]) = $1
	
.LABEL $label$58
	CALL memcpy($11, ($9 + [224]), $1)
	
.LABEL $label$57
	*(($11 + $1)) = [0]
	CALL $87($0, $0, $13, ($9 + [192]), $10, ($9 + [208]))
	if ( ((*($9 + [208]) & [1]) == 0) ){ goto $label$60 }
	CALL $9(*($9 + [216]))
	
.LABEL $label$60
	CALL $124($0, $13, ($9 + [192]), (int_64))($3 - *($9 + [192])), ($9 + [224]))
	if ( $12 ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9139])
	CALL eosio_assert([0], [9173])
	
.LABEL $label$2
	$1 = CALL db_next_i64(*($12 + [80]), ($9 + [208]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$61 }
	CALL $90($14, $1)
	
.LABEL $label$61
	CALL $91($14, $12)
	$global$0 = ($9 + [352])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($9 + [208]))
	(unreachable)
}

void .FUNC $62 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [80]) = $2
	*($3 + [88]) = $1
	CALL require_auth(*($0))
	CALL $86($0, ($3 + [88]), ($3 + [80]))
	$2 = *($3 + [80])
	$4 = CALL $15([8382])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8657])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$1 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($4 + [8381]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$6
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$6 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)4
	
.LABEL $label$1
	*($3 + [72]) = $6
	*($3 + [64]) = $2
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [8431])
	$6 = *(($3 + [72]))
	
.LABEL $label$7
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $2
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $2
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $5 ){ goto $label$12 }
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8480])
	$6 = *(($3 + [72]))
	
.LABEL $label$8
	CALL $37(($3 + [48]), *($0))
	if ( ((int_64)$6 == (int_64)*($3 + [56])) ){ goto $label$13 }
	CALL eosio_assert([0], [9440])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($3 + [64]) <= (int_64)*($3 + [48])), [9351])
	*($3 + [32]) = [8370]
	*($3 + [36]) = CALL $15([8370])
	*($3 + [8]) = *($3 + [32])
	$7 = CALL $38(($3 + [40]), ($3 + [8]))
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $15([9554])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$17 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$8 = (($4 + [16]) & [-16])
	$5 = CALL $7($8)
	*($3 + [16]) = ($8 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$16
	CALL memcpy($5, [9554], $4)
	
.LABEL $label$15
	*(($5 + $4)) = [0]
	CALL $87($0, $0, ($3 + [88]), ($3 + [64]), $7, ($3 + [16]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*($3 + [24]))
	
.LABEL $label$18
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$14
	CALL $23(($3 + [16]))
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [40])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($5 + [16]) = $4
	*($5 + [24]) = $3
	$7 = *(($1 + [28]))
	$6 = *($1 + [24])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [16]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	*($5 + [8]) = ($5 + [16])
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7235159537265672192, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $118($1, $8)
	if ( ((int_32)*($9 + [16]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	*($5 + [8]) = ($5 + [16])
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	*($5 + [4]) = ($5 + [16])
	*($5) = ($5 + [24])
	CALL $182(($5 + [8]), $1, $2, $5)
	$9 = *($5 + [12])
	*($5 + [8]) = ($5 + [16])
	if ( $9 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8948])
	
.LABEL $label$1
	CALL $183($1, $9, $2, ($5 + [8]))
	$global$0 = ($5 + [32])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$6 = ($global$0 - [224])
	$global$0 = $6
	$7 = CALL $15([8382])
	if ( ($7 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8657])
	goto $label$3 
	
.LABEL $label$4
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = (int_64)0
	
.LOOP $label$5:
	$9 = *(($7 + [8381]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$6
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$5 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)4
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$8), [9499])
	if ( (CALL is_account(*($2)) == 0) ){ goto $label$7 }
	$8 = *($3)
	if ( (int_64)($8 == 0) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$8 > (int_64)0), [9524])
	$8 = *($1)
	*($6 + [96]) = [9541]
	*($6 + [100]) = CALL $15([9541])
	*($6 + [24]) = *($6 + [96])
	$7 = CALL $38(($6 + [104]), ($6 + [24]))
	*($6 + [112]) = $8
	*($6 + [120]) = *($7)
	*($6 + [80]) = [8399]
	*($6 + [84]) = CALL $15([8399])
	*($6 + [16]) = *($6 + [80])
	$7 = CALL $38(($6 + [88]), ($6 + [16]))
	*(($6 + [56])) = *(($3 + [8]))
	*($6 + [32]) = *($1)
	*($6 + [40]) = *($2)
	*($6 + [48]) = *($3)
	CALL $24(($6 + [64]), $5)
	$8 = CALL current_time()
	*(($6 + [180])) = (int_64)0
	*(($6 + [196])) = (int_64)0
	*(($6 + [204])) = (int_64)0
	*($6 + [164]) = [0]
	*($6 + [168]) = [0]
	*($6 + [172 align=4]) = (int_64)0
	*($6 + [188 align=4]) = (int_64)0
	*($6 + [152]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	CALL $169(($6 + [188]), ($6 + [112]), $4, $7, ($6 + [32]))
	*($6 + [172]) = [2]
	*($6 + [216]) = [9548]
	*($6 + [220]) = CALL $15([9548])
	*($6 + [8]) = *($6 + [216])
	$8 = CALL $133($0, *(CALL $38(($6 + [128]), ($6 + [8]))))
	*($6 + [136]) = (int_64)0
	*($6 + [128]) = $8
	CALL $170(($6 + [152]), ($6 + [128]), *($0), [0])
	CALL $171(($6 + [152]))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($6 + [72])))
	
.LABEL $label$7
	$global$0 = ($6 + [224])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [32])
	$5 = *($1)
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$3 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3020384829779738624, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $79($4, $1)
	if ( ((int_32)*($8 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9387])
	CALL eosio_assert(((uint_64)*($8 + [16]) >= (uint_64)*($2)), [9406])
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $8 ){ goto $label$5 }
	CALL eosio_assert([0], [8948])
	
.LABEL $label$5
	CALL $168($4, $8, $5, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([32])) + [16]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	*($5 + [8]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL memcpy(($4 + [16]), $5, [8])
	CALL memcpy((($4 + [16]) | [8]), ($5 + [8]), [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-8279611178955571200, $2, $6, ($4 + [16]), [16])
	*($5 + [20]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $164(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [8]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	CALL memcpy(($8 + [-8]), $7, [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = $5
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $164(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $7([56])
	CALL $162($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [44])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $163(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $9($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = ($1 + [32])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [40]) = $7
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $182 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([32])) + [16]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	*($5 + [8]) = *(*($3 + [4]))
	CALL memcpy(($4 + [16]), $5, [8])
	CALL memcpy((($4 + [16]) | [8]), ($5 + [8]), [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, $6, ($4 + [16]), [16])
	*($5 + [20]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $165(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $149 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [544])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [536]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [536]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $65($3, *($3 + [536]))
	CALL $77($3)
	$global$0 = ($3 + [544])
}

void .FUNC $148 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [559]), $2, [1])
	$5 = ($2 + [1])
	$6 = ($2 + $4)
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $42(($3 + [8]), *($3 + [559]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $145 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [552]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [552]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [544]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $62(($3 + [8]), *($3 + [552]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $144 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [552]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [552]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [544]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $58(($3 + [8]), *($3 + [552]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $147 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [10965])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	CALL memcpy(($3 + [559]), $2, [1])
	*($3 + [544]) = (int_64)0
	$5 = ($2 + [1])
	$6 = ($2 + $4)
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $54(($3 + [8]), *($3 + [559]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $146 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [592])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [584])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [584])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10965])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [576]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [576]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy(($3 + [575]), $5, [1])
	$5 = ($2 + [17])
	if ( ((uint_32)($4 + [-17]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy(($3 + [560]), $5, [8])
	$5 = ($2 + [25])
	if ( ((uint_32)($4 + [-25]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$9
	CALL memcpy(($3 + [552]), $5, [8])
	$5 = ($2 + [33])
	if ( ((uint_32)($4 + [-33]) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$10
	CALL memcpy(($3 + [544]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [41])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	$1 = *($3 + [552])
	$7 = *($3 + [544])
	$2 = *($3 + [575])
	CALL require_auth($0)
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [2]), [9598])
	CALL eosio_assert(((int_64)$7 != (int_64)0), [9619])
	CALL eosio_assert(((int_64)$1 != (int_64)0), [9630])
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [592])
}

void .FUNC $141 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$9 = ($global$0 - [144])
	$global$0 = $9
	*($9 + [120]) = $4
	*($9 + [128]) = $1
	*($9 + [112]) = $3
	*($9 + [104]) = $5
	*($9 + [96]) = $7
	*($9 + [88]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$17 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$5 }
	$5 = *($6)
	CALL __multi3(($9 + [8]), $5, (int_64)$5 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	$3 = *($6 + [8])
	$7 = *(($9 + [16]))
	$5 = *($9 + [8])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$16 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$15 }
	CALL eosio_assert([0], [10421])
	if ( ((int_64)$3 != (int_64)*($8 + [8])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	$5 = *($6)
	CALL __multi3(($9 + [32]), $5, (int_64)$5 >> (int_64)63), $7, (int_64)$7 >> (int_64)63))
	$3 = *($6 + [8])
	$7 = *(($9 + [40]))
	$5 = *($9 + [32])
	if ( (( (uint_64)($5 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$12 }
	if ( ( ((uint_64)$5 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$11 }
	CALL eosio_assert([0], [10421])
	if ( ((int_64)$3 != (int_64)*($8 + [8])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$16
	CALL eosio_assert([0], [10397])
	
.LABEL $label$15
	if ( ((int_64)$3 == (int_64)*($8 + [8])) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [9440])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($8) == (int_64)$5), [10752])
	$10 = ($0 + [192])
	$8 = *(($0 + [220]))
	$11 = *(($0 + [216]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$18:
	$2 = ($8 + [-24])
	$12 = *($2)
	if ( ((int_64)*($12 + [8]) == (int_64)$1) ){ goto $label$8 }
	$8 = $2
	if ( ((int_32)$11 != (int_32)$2) ){ goto $label$18 }
	goto $label$7 
	
.LABEL $label$12
	CALL eosio_assert([0], [10397])
	
.LABEL $label$11
	if ( ((int_64)$3 == (int_64)*($8 + [8])) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9440])
	
.LABEL $label$9
	CALL eosio_assert(((int_64)*($8) == (int_64)$5), [10804])
	$10 = ($0 + [232])
	$8 = *(($0 + [260]))
	$11 = *(($0 + [256]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$19:
	$2 = ($8 + [-24])
	$12 = *($2)
	if ( ((int_64)*($12 + [8]) == (int_64)$1) ){ goto $label$3 }
	$8 = $2
	if ( ((int_32)$11 != (int_32)$2) ){ goto $label$19 }
	goto $label$2 
	
.LABEL $label$8
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$7 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$10) ){ goto $label$6 }
	CALL eosio_assert([0], [8817])
	goto $label$6 
	
.LABEL $label$7
	$12 = [0]
	$2 = CALL db_find_i64(*($10), *(($0 + [200])), (int_64)8526760964941414400, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$12 = CALL $90($10, $2)
	if ( ((int_32)*($12 + [76]) == (int_32)$10) ){ goto $label$6 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$6
	*($9 + [136]) = [10834]
	*($9 + [140]) = CALL $15([10834])
	*($9) = *($9 + [136])
	*($9 + [80]) = CALL $133($0, *(CALL $38(($9 + [48]), $9)))
	if ( ($12 == 0) ){ goto $label$4 }
	$7 = *($12 + [64])
	$1 = *($9 + [88])
	CALL eosio_assert((((uint_64)$1 > (uint_64)$7) & ((uint_64)(int_64))($1 - $7) > (uint_64)(int_64)59)), [10782])
	$1 = *($0)
	*($9 + [64]) = $6
	*($9 + [52]) = ($9 + [112])
	*($9 + [48]) = ($9 + [128])
	*($9 + [56]) = ($9 + [120])
	*($9 + [60]) = ($9 + [104])
	*($9 + [68]) = ($9 + [96])
	*($9 + [72]) = ($9 + [88])
	*($9 + [76]) = ($9 + [80])
	CALL $203($10, $12, $1, ($9 + [48]))
	
.LABEL $label$5
	$global$0 = ($9 + [144])
	return 
	
.LABEL $label$4
	$1 = *($0)
	*($9 + [64]) = $6
	*($9 + [52]) = ($9 + [112])
	*($9 + [48]) = ($9 + [128])
	*($9 + [56]) = ($9 + [120])
	*($9 + [60]) = ($9 + [104])
	*($9 + [68]) = ($9 + [96])
	*($9 + [72]) = ($9 + [88])
	*($9 + [76]) = ($9 + [80])
	CALL $204(($9 + [136]), $10, $1, ($9 + [48]))
	$global$0 = ($9 + [144])
	return 
	
.LABEL $label$3
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*(($12 + [76])) == (int_32)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	$2 = CALL db_find_i64(*($10), *(($0 + [240])), (int_64)7687437768762327040, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $92($10, $2)
	if ( ((int_32)*($12 + [76]) == (int_32)$10) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	*($9 + [136]) = [10841]
	*($9 + [140]) = CALL $15([10841])
	*($9 + [24]) = *($9 + [136])
	*($9 + [136]) = CALL $133($0, *(CALL $38(($9 + [48]), ($9 + [24]))))
	if ( ($12 == 0) ){ goto $label$20 }
	$7 = *($12 + [64])
	$1 = *($9 + [88])
	CALL eosio_assert((((uint_64)$1 > (uint_64)$7) & ((uint_64)(int_64))($1 - $7) > (uint_64)(int_64)59)), [10782])
	$1 = *($0)
	*($9 + [64]) = $6
	*($9 + [52]) = ($9 + [112])
	*($9 + [48]) = ($9 + [128])
	*($9 + [56]) = ($9 + [120])
	*($9 + [60]) = ($9 + [104])
	*($9 + [68]) = ($9 + [96])
	*($9 + [72]) = ($9 + [88])
	*($9 + [76]) = ($9 + [136])
	CALL $205($10, $12, $1, ($9 + [48]))
	$global$0 = ($9 + [144])
	return 
	
.LABEL $label$20
	$1 = *($0)
	*($9 + [64]) = $6
	*($9 + [52]) = ($9 + [112])
	*($9 + [48]) = ($9 + [128])
	*($9 + [56]) = ($9 + [120])
	*($9 + [60]) = ($9 + [104])
	*($9 + [68]) = ($9 + [96])
	*($9 + [72]) = ($9 + [88])
	*($9 + [76]) = ($9 + [136])
	CALL $206(($9 + [80]), $10, $1, ($9 + [48]))
	$global$0 = ($9 + [144])
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$9 = ($global$0 - [48])
	$global$0 = $9
	*($9 + [44]) = $2
	$10 = ($1 + [1])
	$2 = ($2 & [1])
	$2 = *($1)
	$11 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $2 )
	if ( ($11 == 0) ){ goto $label$3 }
	$2 = ( *($1 + [8]) ? $10 : $2 )
	$12 = [0]
	
.LOOP $label$4:
	$12 = ($12 + ((int_32)*($2) == (int_32)[45]))
	$2 = ($2 + [1])
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$4 }
	if ( ((uint_32)$12 > (uint_32)[6]) ){ goto $label$2 }
	
.LABEL $label$3
	*(($9 + [40])) = [0]
	*($9 + [32]) = (int_64)0
	$2 = CALL $15([10683])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$7 }
	*($9 + [32]) = ($2 << [1])
	$11 = (($9 + [32]) | [1])
	$12 = $11
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = (($2 + [16]) & [-16])
	$12 = CALL $7($11)
	*($9 + [32]) = ($11 | [1])
	*($9 + [40]) = $12
	*($9 + [36]) = $2
	$11 = (($9 + [32]) | [1])
	
.LABEL $label$6
	CALL memcpy($12, [10683], $2)
	
.LABEL $label$5
	*(($12 + $2)) = [0]
	$2 = *($1)
	$12 = ($2 & [1])
	CALL $28(($9 + [32]), ( *(($1 + [8])) ? $10 : $12 ), ( *(($1 + [4])) ? uint_32($2 >> [1]) : $12 ))
	CALL eosio_assert([0], ( *($9 + [40]) ? $11 : (*($9 + [32]) & [1]) ))
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*((($9 + [32]) + [8])))
	
.LABEL $label$2
	*($9 + [40]) = [0]
	*($9 + [32]) = (int_64)0
	*($9 + [16]) = [45]
	*($9 + [27]) = [1]
	*($9 + [28]) = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [44]), ($9 + [27]))
	$2 = (($9 + [32]) | [1])
	$12 = CALL $31(( *($9 + [40]) ? $2 : (*($9 + [32]) & [1]) ))
	*($3) = $12
	if ( ((($12 & [255]) + [-1]) <= [2]) ){ goto $label$8 }
	CALL eosio_assert([0], [10702])
	
.LABEL $label$8
	*($9 + [16]) = [45]
	*($9 + [28]) = (*($9 + [28]) + [1])
	*($9 + [27]) = [1]
	*($9 + [28]) = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [28]), ($9 + [27]))
	$12 = ($9 + [40])
	*($4) = CALL $33(( *($12) ? $2 : (*($9 + [32]) & [1]) ))
	*($9 + [16]) = [45]
	*($9 + [28]) = (*($9 + [28]) + [1])
	*($9 + [27]) = [1]
	$11 = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [28]), ($9 + [27]))
	*($9 + [28]) = $11
	$10 = ($10 & [1])
	$10 = *($9 + [32])
	$3 = ( *($9 + [36]) ? uint_32($10 >> [1]) : $10 )
	if ( ($3 == 0) ){ goto $label$9 }
	*($9 + [12]) = $3
	*($9 + [8]) = ( *($12) ? $2 : $10 )
	*($9) = *($9 + [8])
	*($5) = *(CALL $38(($9 + [16]), $9))
	$11 = *($9 + [28])
	
.LABEL $label$9
	*($9 + [16]) = [45]
	*($9 + [28]) = ($11 + [1])
	*($9 + [27]) = [1]
	*($9 + [28]) = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [28]), ($9 + [27]))
	*($6) = CALL $33(( *($12) ? $2 : (*($9 + [32]) & [1]) ))
	*($9 + [16]) = [45]
	*($9 + [28]) = (*($9 + [28]) + [1])
	*($9 + [27]) = [1]
	*($9 + [28]) = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [28]), ($9 + [27]))
	$13 = CALL $33(( *($12) ? $2 : (*($9 + [32]) & [1]) ))
	CALL eosio_assert(((int_64)$13 != (int_64)0), [10723])
	*($7) = $13
	*($9 + [16]) = [45]
	*($9 + [28]) = (*($9 + [28]) + [1])
	*($9 + [27]) = [1]
	*($9 + [28]) = CALL $34($1, ($9 + [32]), ($9 + [16]), ($9 + [28]), ($9 + [27]))
	*($8) = (CASTING int_64)(int_32 CALL $31(( *($12) ? $2 : (*($9 + [32]) & [1]) )))
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($9 + [40])))
	
.LABEL $label$10
	$global$0 = ($9 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($9 + [32]))
}

void .FUNC $143 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [544])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [536]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($3 + [536]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [348])) = [0]
	*(($3 + [360])) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = (int_64)0
	*($3 + [392]) = $0
	*($3 + [432]) = $0
	*($3 + [472]) = $0
	*(($3 + [504])) = [0]
	*($3 + [512]) = (int_64)86400
	*($3 + [520]) = (int_64)1
	*($3 + [528]) = (int_64)990000
	CALL $74($3, *($3 + [536]))
	CALL $77($3)
	$global$0 = ($3 + [544])
}

void .FUNC $142 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [560])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [552]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [552]), $2, [8])
	*($3 + [544]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	CALL memcpy(($3 + [544]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [368])) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = (int_64)0
	*($3 + [400]) = $0
	*($3 + [440]) = $0
	*($3 + [480]) = $0
	*(($3 + [512])) = [0]
	*($3 + [520]) = (int_64)86400
	*($3 + [528]) = (int_64)1
	*($3 + [536]) = (int_64)990000
	CALL $68(($3 + [8]), *($3 + [552]), *($3 + [544]))
	CALL $77(($3 + [8]))
	$global$0 = ($3 + [560])
}

void .FUNC $72 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = *($0)
	*($2 + [16]) = [8785]
	*($2 + [20]) = CALL $15([8785])
	*($2 + [8]) = *($2 + [16])
	$4 = CALL $38(($2 + [24]), ($2 + [8]))
	$5 = CALL current_time()
	CALL $88($0, ($0 + [72]), $3, *($4), ((int_64)((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $73 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [536]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($4 + [536]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [188])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [268])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*(($4 + [308])) = [0]
	*(($4 + [320])) = $0
	*(($4 + [328])) = (int_64)-1
	*(($4 + [336])) = (int_64)0
	*(($4 + [344])) = [0]
	*(($4 + [348])) = [0]
	*(($4 + [360])) = $0
	*($4 + [272]) = $0
	*($4 + [312]) = $0
	*($4 + [352]) = $0
	*(($4 + [368])) = (int_64)-1
	*(($4 + [376])) = (int_64)0
	*(($4 + [384])) = [0]
	*(($4 + [400])) = $0
	*(($4 + [408])) = (int_64)-1
	*(($4 + [416])) = (int_64)0
	*(($4 + [424])) = [0]
	*(($4 + [440])) = $0
	*(($4 + [448])) = (int_64)-1
	*(($4 + [456])) = (int_64)0
	*(($4 + [464])) = [0]
	*(($4 + [480])) = $0
	*(($4 + [488])) = (int_64)-1
	*(($4 + [496])) = (int_64)0
	*($4 + [392]) = $0
	*($4 + [432]) = $0
	*($4 + [472]) = $0
	*(($4 + [504])) = [0]
	*($4 + [512]) = (int_64)86400
	*($4 + [520]) = (int_64)1
	*($4 + [528]) = (int_64)990000
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [536])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $77($4)
	$global$0 = ($4 + [544])
	return [1]
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $2
	CALL require_auth(*($0))
	CALL $37(($3 + [40]), *($0))
	$2 = *($3 + [40])
	CALL eosio_assert(((int_64)$2 != (int_64)0), [10459])
	if ( ((int_64)*($1 + [8]) == (int_64)*($3 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [9440])
	
.LABEL $label$1
	$4 = *($1)
	CALL eosio_assert(((int_64)$4 <= (int_64)$2), [9351])
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$2 }
	*($1) = *($3 + [40])
	*(($1 + [8])) = *((($3 + [40]) + [8]))
	
.LABEL $label$2
	*($3 + [24]) = [8370]
	*($3 + [28]) = CALL $15([8370])
	*($3) = *($3 + [24])
	$5 = CALL $38(($3 + [32]), $3)
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$6 = CALL $15([10472])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$6 }
	*($3 + [8]) = ($6 << [1])
	$7 = (($3 + [8]) | [1])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $7($8)
	*($3 + [8]) = ($8 | [1])
	*($3 + [16]) = $7
	*($3 + [12]) = $6
	
.LABEL $label$5
	CALL memcpy($7, [10472], $6)
	
.LABEL $label$4
	*(($7 + $6)) = [0]
	CALL $87($0, $0, ($3 + [56]), $1, $5, ($3 + [8]))
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($3 + [16]))
	
.LABEL $label$7
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$3
	CALL $23(($3 + [8]))
}

int_32 .FUNC $71 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [624])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [560]) = (int_64)0
	*($4 + [552]) = (int_64)0
	*($4 + [568]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$5
	CALL memcpy(($4 + [552]), $2, [8])
	*($4 + [16]) = (int_64)0
	$3 = ($2 + [8])
	$8 = ($7 & [-8])
	if ( ((int_32)$8 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$6
	$9 = ($2 + $7)
	CALL memcpy(($4 + [16]), $3, [8])
	*((($4 + [552]) + [8])) = *($4 + [16])
	$10 = ($2 + [16])
	$3 = (($4 + [552]) + [16])
	if ( ((int_32)$8 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy($3, $10, [8])
	*((($4 + [16]) + [24])) = $9
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*($4 + [32]) = $2
	*(($4 + [36])) = ($2 + [24])
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*($4 + [168]) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [284])) = [0]
	*(($4 + [296])) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [324])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [364])) = [0]
	*(($4 + [376])) = $0
	*($4 + [288]) = $0
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*(($4 + [432])) = (int_64)0
	*(($4 + [440])) = [0]
	*(($4 + [456])) = $0
	*(($4 + [464])) = (int_64)-1
	*(($4 + [472])) = (int_64)0
	*(($4 + [480])) = [0]
	*(($4 + [496])) = $0
	*(($4 + [504])) = (int_64)-1
	*(($4 + [512])) = (int_64)0
	*($4 + [408]) = $0
	*($4 + [448]) = $0
	*($4 + [488]) = $0
	*(($4 + [520])) = [0]
	*($4 + [528]) = (int_64)86400
	*($4 + [536]) = (int_64)1
	*($4 + [544]) = (int_64)990000
	*(($8 = (($4 + [576]) + [8]))) = *((($4 + [552]) + [8]))
	*($4 + [576]) = *($4 + [552])
	$0 = *($3)
	*((($4 + [592]) + [8])) = *($8)
	*($4 + [592]) = *($4 + [576])
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	$6 = *((*($3) + $6))
	
.LABEL $label$8
	$1 = *((($4 + [592]) + [8]))
	*((($4 + [608]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [592])
	*($4) = $1
	*($4 + [608]) = $1
	CALL void $3((int_32 $4), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$9 }
	CALL $2($2)
	
.LABEL $label$9
	CALL $77(($4 + [16]))
	$global$0 = ($4 + [624])
	return [1]
}

int_32 .FUNC $76 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [672])
	$global$0 = $3
	*(($4 = $3) + [616]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [568]) + [24])) = (int_64)0
	*((($4 + [568]) + [40])) = [0]
	*($4 + [576]) = (int_64)0
	*($4 + [568]) = (int_64)0
	*($4 + [584]) = (int_64)0
	*($4 + [600]) = (int_64)0
	*($4 + [556]) = $2
	*($4 + [552]) = $2
	*($4 + [560]) = ($2 + $5)
	*($4 + [656]) = ($4 + [552])
	*($4 + [16]) = ($4 + [568])
	CALL $129(($4 + [16]), ($4 + [656]))
	*(($3 = ($4 + [8]))) = *($4 + [560])
	*($4) = *($4 + [552])
	$3 = *($3)
	*((($4 + [624]) + [8])) = $3
	*(($6 = (($4 + [640]) + [8]))) = $3
	$7 = *($4)
	*($4 + [640]) = $7
	*($4 + [624]) = $7
	$3 = *($6)
	*((($4 + [656]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [640])
	*($4 + [32]) = $1
	*($4 + [656]) = $1
	*((($4 + [16]) + [40])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [284])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [324])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [364])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [440])) = [0]
	*(($4 + [432])) = (int_64)0
	*(($4 + [456])) = $0
	*(($4 + [464])) = (int_64)-1
	*(($4 + [472])) = (int_64)0
	*(($4 + [480])) = [0]
	*(($4 + [496])) = $0
	*(($4 + [504])) = (int_64)-1
	*(($4 + [512])) = (int_64)0
	*(($4 + [520])) = [0]
	*($4 + [448]) = $0
	*($4 + [488]) = $0
	*($4 + [528]) = (int_64)86400
	*($4 + [536]) = (int_64)1
	*($4 + [544]) = (int_64)990000
	*($4 + [660]) = ($4 + [616])
	*($4 + [656]) = ($4 + [16])
	CALL $130(($4 + [656]), ($4 + [568]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $77(($4 + [16]))
	if ( ((*($4 + [600]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [608])))
	
.LABEL $label$5
	$global$0 = ($4 + [672])
	return [1]
}

int_32 .FUNC $77 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [496]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [500])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [496]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [456]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [460])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [456]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *(($0 + [416]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [420])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $9($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [416]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$11
	$1 = *(($0 + [376]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [380])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL $9($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [376]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$16
	$1 = *(($0 + [336]))
	if ( ($1 == 0) ){ goto $label$21 }
	$2 = ($0 + [340])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $9($4)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($0 + [336]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $1
	
.LABEL $label$22
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$21
	$1 = *(($0 + [296]))
	if ( ($1 == 0) ){ goto $label$26 }
	$2 = ($0 + [300])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$30 }
	CALL $9($4)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$29 }
	$3 = *(($0 + [296]))
	goto $label$27 
	
.LABEL $label$28
	$3 = $1
	
.LABEL $label$27
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$26
	$1 = *(($0 + [256]))
	if ( ($1 == 0) ){ goto $label$31 }
	$2 = ($0 + [260])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$35 }
	CALL $9($4)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$34 }
	$3 = *(($0 + [256]))
	goto $label$32 
	
.LABEL $label$33
	$3 = $1
	
.LABEL $label$32
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$31
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$36 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$38 }
	
.LOOP $label$39:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	CALL $9($4)
	
.LABEL $label$40
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$39 }
	$3 = *(($0 + [216]))
	goto $label$37 
	
.LABEL $label$38
	$3 = $1
	
.LABEL $label$37
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$36
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$41 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$45 }
	CALL $9($4)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$44 }
	$3 = *(($0 + [176]))
	goto $label$42 
	
.LABEL $label$43
	$3 = $1
	
.LABEL $label$42
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$41
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$46 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$50 }
	CALL $9($4)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$49 }
	$3 = *(($0 + [136]))
	goto $label$47 
	
.LABEL $label$48
	$3 = $1
	
.LABEL $label$47
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$46
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$51 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$53 }
	
.LOOP $label$54:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$55 }
	CALL $9($4)
	
.LABEL $label$55
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$54 }
	$3 = *(($0 + [96]))
	goto $label$52 
	
.LABEL $label$53
	$3 = $1
	
.LABEL $label$52
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$51
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$56 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$58 }
	
.LOOP $label$59:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$60 }
	CALL $9($4)
	
.LABEL $label$60
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$59 }
	$3 = *(($0 + [56]))
	goto $label$57 
	
.LABEL $label$58
	$3 = $1
	
.LABEL $label$57
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$56
	return $0
}

void .FUNC $74 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [472])
	$5 = *(($0 + [500]))
	$4 = *(($0 + [496]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [480])), (int_64)-8279611178955571200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $82($3, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	$6 = CALL db_next_i64(*($7 + [20]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $82($3, $6)
	
.LABEL $label$6
	CALL $85($3, $7)
	
.LABEL $label$1
	$global$0 = ($2 + [16])
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [96])
	$global$0 = $5
	*($5 + [80]) = $1
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = CALL $15([8382])
	if ( ($7 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8657])
	goto $label$4 
	
.LABEL $label$5
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$8 = *(($7 + [8381]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$6 }
	$2 = ((int_64)$2 << (int_64)8)
	goto $label$2 
	
.LABEL $label$3
	$2 = (int_64)0
	
.LABEL $label$2
	if ( ((int_64)*($3 + [8]) != (int_64)((int_64)$2 | (int_64)4)) ){ goto $label$1 }
	CALL require_auth($1)
	CALL $78($0)
	$2 = *($3)
	CALL eosio_assert(((uint_64)$2 >= (uint_64)*($0 + [520])), [10486])
	CALL eosio_assert(((uint_64)$2 <= (uint_64)*($0 + [528])), [10520])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$9 }
	$7 = uint_32($7 >> [1])
	goto $label$8 
	
.LABEL $label$9
	$7 = *($4 + [4])
	
.LABEL $label$8
	CALL eosio_assert(((uint_32)$7 > (uint_32)[1]), [10552])
	*($5 + [72]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [88]) = [45]
	*($5 + [16]) = [0]
	*($5 + [56]) = [1]
	$9 = CALL $34($4, ($5 + [64]), ($5 + [88]), ($5 + [16]), ($5 + [56]))
	$7 = (CALL $31(( *($5 + [72]) ? (($5 + [64]) | [1]) : (*($5 + [64]) & [1]) )) + [-1])
	if ( ((uint_32)$7 > (uint_32)[4]) ){ goto $label$21 }
	goto $label$24 
	
.LABEL $label$24
	*($5 + [56]) = (int_64)0
	CALL $131($0, $4, ($9 + [1]), ($5 + [56]), ($5 + [52]), ($5 + [40]))
	CALL $132($0, ($5 + [80]), ($5 + [56]))
	if ( ((int_32)*($5 + [52]) != (int_32)[2]) ){ goto $label$18 }
	*($5 + [88]) = [10672]
	*($5 + [92]) = CALL $15([10672])
	*($5 + [8]) = *($5 + [88])
	*($5 + [88]) = CALL $133($0, *(CALL $38(($5 + [16]), ($5 + [8]))))
	$2 = *($0)
	*($5 + [28]) = $3
	*($5 + [20]) = ($5 + [80])
	*($5 + [16]) = ($5 + [88])
	*($5 + [24]) = ($5 + [40])
	CALL $134(($5 + [32]), ($0 + [312]), $2, ($5 + [16]))
	$9 = ($0 + [32])
	$2 = *($5 + [80])
	$8 = *(($0 + [60]))
	$10 = *(($0 + [56]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$25:
	$7 = ($8 + [-24])
	$4 = *($7)
	if ( ((int_64)*($4) == (int_64)$2) ){ goto $label$14 }
	$8 = $7
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$25 }
	goto $label$13 
	
.LABEL $label$23
	*($5 + [56]) = (int_64)0
	$7 = CALL $15([8382])
	if ( ($7 <= [8]) ){ goto $label$17 }
	CALL eosio_assert([0], [8657])
	goto $label$16 
	
.LABEL $label$22
	CALL $135($0, $1, $3)
	
.LABEL $label$21
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$1 }
	goto $label$10 
	
.LABEL $label$20
	CALL $136($0, $1, $3)
	if ( (*($5 + [64]) & [1]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$19
	CALL $137($0, $4, ($9 + [1]), ($5 + [16]))
	CALL $138($0, *($5 + [80]), *($5 + [16]), $3)
	if ( (*($5 + [64]) & [1]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$18
	CALL eosio_assert([0], [10626])
	if ( (*($5 + [64]) & [1]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$17
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$2 = (int_64)0
	
.LOOP $label$26:
	$8 = *(($7 + [8381]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$27
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$26 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$11 
	
.LABEL $label$15
	$2 = (int_64)4
	goto $label$11 
	
.LABEL $label$14
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$13 }
	if ( ((int_32)*($4 + [40]) == (int_32)$9) ){ goto $label$12 }
	CALL eosio_assert([0], [8817])
	goto $label$12 
	
.LABEL $label$13
	$4 = [0]
	$7 = CALL db_find_i64(*($9), *(($0 + [40])), (int_64)-3020384829779738624, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $79($9, $7)
	if ( ((int_32)*($4 + [40]) == (int_32)$9) ){ goto $label$12 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9387])
	CALL eosio_assert(((uint_64)((int_64)*($3) + (int_64)*($4 + [16])) <= (uint_64)*(($0 + [528]))), [10607])
	$2 = *($0)
	*($5 + [16]) = $3
	if ( $4 ){ goto $label$28 }
	CALL eosio_assert([0], [8948])
	
.LABEL $label$28
	CALL $139($9, $4, $2, ($5 + [16]))
	if ( (*($5 + [64]) & [1]) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$11
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$2 = $1
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$2 = $1
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $8 ){ goto $label$33 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [8480])
	
.LABEL $label$29
	CALL $140($0, $4, ($9 + [1]), ($5 + [52]), ($5 + [88]), ($5 + [56]), ($5 + [40]), ($5 + [16]), ($5 + [32]))
	CALL $141($0, *($5 + [80]), *($5 + [52]), *($5 + [88]), *($5 + [56]), *($5 + [40]), ($5 + [16]), *($5 + [32]), $3)
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$10
	CALL $9(*(($5 + [72])))
	
.LABEL $label$1
	$global$0 = ($5 + [96])
	$7
}

void .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [48])
	$global$0 = $1
	*($1 + [32]) = [8755]
	*($1 + [36]) = CALL $15([8755])
	*($1 + [8]) = *($1 + [32])
	$2 = ($0 + [72])
	$3 = *(CALL $38(($1 + [40]), ($1 + [8])))
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [80])), (int_64)7235159537265672192, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $118($2, $5)
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	$6 = ((int_64)*($7 + [8]) == (int_64)1)
	
.LABEL $label$1
	CALL eosio_assert($6, [8765])
	*($1 + [16]) = [8785]
	*($1 + [20]) = CALL $15([8785])
	*($1) = *($1 + [16])
	$3 = *(CALL $38(($1 + [24]), $1))
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$11:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$10 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [8817])
	goto $label$8 
	
.LABEL $label$9
	$6 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)7235159537265672192, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $118($2, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$8
	$3 = *($7 + [8])
	goto $label$6 
	
.LABEL $label$7
	$3 = (int_64)0
	
.LABEL $label$6
	CALL eosio_assert((uint_64)($3 <= ((int_64)((uint_64)CALL $fimport$28() / (uint_64)(int_64)1000000) & (int_64)4294967295)), [8793])
	$global$0 = ($1 + [48])
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $166(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $163(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [32]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $190(($3 + [32]), ($3 + [24]))
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $191(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8526761782998466560, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	CALL $187(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $188(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	CALL $187(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $189(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [76]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [56])
	*($3 + [68]) = ($5 + [64])
	*($3 + [72]) = ($5 + [72])
	CALL $184(($3 + [40]), ($3 + [32]))
	*($5 + [84]) = [-1]
	*($5 + [80]) = $1
	*($3 + [32]) = $5
	$7 = *($5 + [8])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $185(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [8])
	if ( ((int_64)*(*(($5 + [-24])) + [8]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [8]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [80]))
	$9 = *($1 + [84])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8526760964941414400, ($2 + [8]), *(($1 + [8])))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [76]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [56])
	*($3 + [68]) = ($5 + [64])
	*($3 + [72]) = ($5 + [72])
	CALL $184(($3 + [40]), ($3 + [32]))
	*($5 + [84]) = [-1]
	*($5 + [80]) = $1
	*($3 + [32]) = $5
	$7 = *($5 + [8])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $186(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [8])
	if ( ((int_64)*(*(($5 + [-24])) + [8]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [8]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [80]))
	$9 = *($1 + [84])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7687437768762327040, ($2 + [8]), *(($1 + [8])))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $138 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [176])
	$global$0 = $4
	*($4 + [144]) = $2
	*($4 + [152]) = $1
	$5 = ($0 + [432])
	$7 = *(($0 + [460]))
	$6 = *(($0 + [456]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$6:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$5 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($9 + [24]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [8817])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_find_i64(*($5), *(($0 + [440])), (int_64)-4057297648603496448, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $116($5, $8)
	if ( ((int_32)*($9 + [24]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$3
	$1 = *($0)
	*($4 + [116]) = $3
	*($4 + [112]) = ($4 + [144])
	CALL $209($5, $9, $1, ($4 + [112]))
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	*($4 + [120]) = $3
	*($4 + [116]) = ($4 + [144])
	*($4 + [112]) = ($4 + [152])
	CALL $210(($4 + [160]), $5, $1, ($4 + [112]))
	
.LABEL $label$1
	$7 = [0]
	CALL memset(($4 + [112]), [0], [32])
	$1 = *($4 + [152])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$10 }
	$9 = *([0] + [10360])
	
.LOOP $label$12:
	*((($4 + [160]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$11 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$12 }
	
.LABEL $label$11
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$9 }
	*($4 + [96]) = ($7 << [1])
	$9 = (($4 + [96]) | [1])
	goto $label$8 
	
.LABEL $label$10
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	*($4 + [96]) = [0]
	$8 = (($4 + [96]) | [1])
	$7 = $8
	goto $label$7 
	
.LABEL $label$9
	$6 = (($7 + [16]) & [-16])
	$9 = CALL $7($6)
	*($4 + [96]) = ($6 | [1])
	*($4 + [104]) = $9
	*($4 + [100]) = $7
	
.LABEL $label$8
	$6 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$13:
	*(($9 + $8)) = *((($4 + [160]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$13 }
	$7 = ($9 + $7)
	$8 = (($4 + [96]) | [1])
	
.LABEL $label$7
	*($7) = [0]
	*($4 + [40]) = *($4 + [144])
	*($4 + [32]) = ( *($4 + [104]) ? $8 : (*($4 + [96]) & [1]) )
	CALL $22(($4 + [112]), [31], [10941], ($4 + [32]))
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($4 + [104])))
	
.LABEL $label$14
	$1 = *($3)
	$2 = (int_64)0
	*($4 + [96]) = (int_64)0
	CALL $132($0, ($4 + [152]), ($4 + [96]))
	*($4 + [88]) = [10446]
	*($4 + [92]) = CALL $15([10446])
	*($4 + [24]) = *($4 + [88])
	$8 = CALL $38(($4 + [160]), ($4 + [24]))
	if ( ((int_64)*($4 + [96]) != (int_64)*($8)) ){ goto $label$17 }
	*($3) = (int_64)0
	goto $label$16 
	
.LABEL $label$17
	*($3) = ((int_64)$1 / (int_64)20)
	*($4 + [72]) = [8370]
	*($4 + [76]) = CALL $15([8370])
	*($4 + [16]) = *($4 + [72])
	$9 = CALL $38(($4 + [80]), ($4 + [16]))
	*(($4 + [168])) = [0]
	*($4 + [160]) = (int_64)0
	$8 = CALL $15(($4 + [112]))
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$20 }
	*($4 + [160]) = ($8 << [1])
	$7 = (($4 + [160]) | [1])
	if ( $8 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $7($6)
	*($4 + [160]) = ($6 | [1])
	*($4 + [168]) = $7
	*($4 + [164]) = $8
	
.LABEL $label$19
	CALL memcpy($7, ($4 + [112]), $8)
	
.LABEL $label$18
	*(($7 + $8)) = [0]
	CALL $87($0, $0, ($4 + [96]), $3, $9, ($4 + [160]))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*($4 + [168]))
	
.LABEL $label$21
	$2 = *($3)
	
.LABEL $label$16
	*($3) = (int_64))($1 - $2)
	*($4 + [64]) = [10446]
	*($4 + [68]) = CALL $15([10446])
	*($4 + [8]) = *($4 + [64])
	$9 = CALL $38(($4 + [80]), ($4 + [8]))
	*($4 + [48]) = [8370]
	*($4 + [52]) = CALL $15([8370])
	*($4) = *($4 + [48])
	$6 = CALL $38(($4 + [56]), $4)
	*(($4 + [168])) = [0]
	*($4 + [160]) = (int_64)0
	$8 = CALL $15(($4 + [112]))
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($4 + [160]) = ($8 << [1])
	$7 = (($4 + [160]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$5 = (($8 + [16]) & [-16])
	$7 = CALL $7($5)
	*($4 + [160]) = ($5 | [1])
	*($4 + [168]) = $7
	*($4 + [164]) = $8
	
.LABEL $label$24
	CALL memcpy($7, ($4 + [112]), $8)
	
.LABEL $label$23
	*(($7 + $8)) = [0]
	CALL $87($0, $0, $9, $3, $6, ($4 + [160]))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$26 }
	CALL $9(*($4 + [168]))
	
.LABEL $label$26
	$global$0 = ($4 + [176])
	return (unreachable)
	
.LABEL $label$22
	CALL $23(($4 + [160]))
	
.LABEL $label$15
	CALL $23(($4 + [160]))
	(unreachable)
}

void .FUNC $139 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3)))
	$6 = *($1)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = ($1 + [32])
	$7 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $7
	*($5 + [40]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $24(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $24(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [44]) = $2
	$7 = ($1 + [1])
	$2 = ($2 & [1])
	$2 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $2 )
	if ( ($8 == 0) ){ goto $label$3 }
	$2 = ( *($1 + [8]) ? $7 : $2 )
	$9 = [0]
	
.LOOP $label$4:
	$9 = ($9 + ((int_32)*($2) == (int_32)[45]))
	$2 = ($2 + [1])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$4 }
	if ( ((uint_32)$9 > (uint_32)[2]) ){ goto $label$2 }
	
.LABEL $label$3
	*(($6 + [40])) = [0]
	*($6 + [32]) = (int_64)0
	$2 = CALL $15([10650])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$7 }
	*($6 + [32]) = ($2 << [1])
	$8 = (($6 + [32]) | [1])
	$9 = $8
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($2 + [16]) & [-16])
	$9 = CALL $7($8)
	*($6 + [32]) = ($8 | [1])
	*($6 + [40]) = $9
	*($6 + [36]) = $2
	$8 = (($6 + [32]) | [1])
	
.LABEL $label$6
	CALL memcpy($9, [10650], $2)
	
.LABEL $label$5
	*(($9 + $2)) = [0]
	$2 = *($1)
	$9 = ($2 & [1])
	CALL $28(($6 + [32]), ( *(($1 + [8])) ? $7 : $9 ), ( *(($1 + [4])) ? uint_32($2 >> [1]) : $9 ))
	CALL eosio_assert([0], ( *($6 + [40]) ? $8 : (*($6 + [32]) & [1]) ))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*((($6 + [32]) + [8])))
	
.LABEL $label$2
	*($6 + [40]) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [16]) = [45]
	*($6 + [27]) = [1]
	$9 = CALL $34($1, ($6 + [32]), ($6 + [16]), ($6 + [44]), ($6 + [27]))
	*($6 + [28]) = $9
	$8 = ($2 & [1])
	$2 = *($6 + [32])
	$2 = ( *($6 + [36]) ? uint_32($2 >> [1]) : $8 )
	if ( ($2 == 0) ){ goto $label$9 }
	*($6 + [12]) = $2
	$2 = (($6 + [32]) | [1])
	*($6 + [8]) = ( *(($6 + [40])) ? $2 : $8 )
	*($6) = *($6 + [8])
	*($3) = *(CALL $38(($6 + [16]), $6))
	goto $label$8 
	
.LABEL $label$9
	$2 = (($6 + [32]) | [1])
	
.LABEL $label$8
	*($6 + [16]) = [45]
	*($6 + [28]) = ($9 + [1])
	*($6 + [27]) = [1]
	$8 = CALL $34($1, ($6 + [32]), ($6 + [16]), ($6 + [28]), ($6 + [27]))
	$9 = ($6 + [40])
	*($4) = CALL $31(( *($9) ? $2 : (*($6 + [32]) & [1]) ))
	*($6 + [28]) = ($8 + [1])
	*($6 + [16]) = [45]
	*($6 + [27]) = [1]
	*($6 + [28]) = CALL $34($1, ($6 + [32]), ($6 + [16]), ($6 + [28]), ($6 + [27]))
	*($5) = CALL $33(( *($9) ? $2 : (*($6 + [32]) & [1]) ))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*($9))
	
.LABEL $label$10
	$global$0 = ($6 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($6 + [32]))
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = ($0 + [32])
	$5 = *($1)
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [40]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [8817])
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3020384829779738624, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $79($4, $7)
	if ( ((int_32)*($9 + [40]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$6
	*($2) = *($9 + [8])
	$8 = [1]
	$5 = *($2)
	if ( (int_64)($5 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	$5 = *($2)
	if ( (int_64)($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	if ( ($8 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($3 + [32]) = [10446]
	*($3 + [36]) = CALL $15([10446])
	*($3 + [8]) = *($3 + [32])
	*($2) = *(CALL $38(($3 + [40]), ($3 + [8])))
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	$5 = *($0)
	*($3 + [20]) = $2
	*($3 + [16]) = $1
	CALL $199(($3 + [40]), $4, $5, ($3 + [16]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	*($3 + [24]) = [10446]
	*($3 + [28]) = CALL $15([10446])
	*($3) = *($3 + [24])
	$8 = CALL $38(($3 + [40]), $3)
	if ( ((int_64)*($2) == (int_64)*($8)) ){ goto $label$10 }
	$5 = *($0)
	*($3 + [40]) = $2
	if ( $9 ){ goto $label$11 }
	CALL eosio_assert([0], [8948])
	
.LABEL $label$11
	CALL $200($4, $9, $5, ($3 + [40]))
	
.LABEL $label$10
	$global$0 = ($3 + [48])
}

int_64 .FUNC $133 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($0 + [72])
	$4 = *(($0 + [100]))
	$3 = *(($0 + [96]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [80])), (int_64)7235159537265672192, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $118($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	$7 = ((int_64)*($6 + [8]) + (int_64)1)
	CALL $88($0, $2, *($0), $1, $7)
	return $7
	
.LABEL $label$1
	CALL $88($0, $2, *($0), $1, (int_64)1)
	return (int_64)1
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([48])) + [32]) = $1
	*($3 + [8]) = (int_64)0
	CALL $202(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [36])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $192(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $9($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $135 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = $1
	CALL eosio_assert(((int_64)*($2) == (int_64)10000), [10848])
	$4 = ($0 + [352])
	$6 = *(($0 + [380]))
	$5 = *(($0 + [376]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [360])), (int_64)-3020370168519699456, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $94($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(($8 == 0), [10866])
	$1 = *($0)
	*($3 + [20]) = $2
	*($3 + [16]) = ($3 + [24])
	CALL $207(($3 + [8]), $4, $1, ($3 + [16]))
	CALL $125($0, ($3 + [24]), (int_64)10000)
	$global$0 = ($3 + [32])
}

void .FUNC $136 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = $1
	CALL eosio_assert(((int_64)*($2) == (int_64)10000), [10848])
	$4 = ($0 + [392])
	$6 = *(($0 + [420]))
	$5 = *(($0 + [416]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [400])), (int_64)-3020379700884144128, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $96($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(($8 == 0), [10885])
	$1 = *($0)
	*($3 + [20]) = $2
	*($3 + [16]) = ($3 + [24])
	CALL $208(($3 + [8]), $4, $1, ($3 + [16]))
	$global$0 = ($3 + [32])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	*($4 + [28]) = $2
	$5 = ($1 + [1])
	$2 = ($2 & [1])
	$2 = *($1)
	$6 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $2 )
	if ( ($6 == 0) ){ goto $label$3 }
	$2 = ( *($1 + [8]) ? $5 : $2 )
	$7 = [0]
	
.LOOP $label$4:
	$7 = ($7 + ((int_32)*($2) == (int_32)[45]))
	$2 = ($2 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$3
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$2 = CALL $15([10905])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$7 }
	*($4 + [16]) = ($2 << [1])
	$6 = (($4 + [16]) | [1])
	$7 = $6
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = (($2 + [16]) & [-16])
	$7 = CALL $7($6)
	*($4 + [16]) = ($6 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $2
	$6 = (($4 + [16]) | [1])
	
.LABEL $label$6
	CALL memcpy($7, [10905], $2)
	
.LABEL $label$5
	*(($7 + $2)) = [0]
	$2 = *($1)
	$7 = ($2 & [1])
	CALL $28(($4 + [16]), ( *(($1 + [8])) ? $5 : $7 ), ( *(($1 + [4])) ? uint_32($2 >> [1]) : $7 ))
	CALL eosio_assert([0], ( *($4 + [24]) ? $6 : (*($4 + [16]) & [1]) ))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*((($4 + [16]) + [8])))
	
.LABEL $label$2
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	*($4 + [15]) = [45]
	*($4 + [14]) = [1]
	CALL $34($1, ($4 + [16]), ($4 + [15]), ($4 + [28]), ($4 + [14]))
	*($3) = CALL $31(( *($4 + [24]) ? (($4 + [16]) | [1]) : (*($4 + [16]) & [1]) ))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($4 + [24])))
	
.LABEL $label$8
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $23(($4 + [16]))
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1 + [8]) = *(*($3))
	*($1 + [24]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [32]) = *(*($3 + [12]))
	$4 = *($0)
	$5 = *($3 + [16])
	*(($1 + [48])) = *(($5 + [8]))
	*($1 + [40]) = *($5)
	*($1 + [56]) = *(*($3 + [20]))
	*($1 + [64]) = *(*($3 + [24]))
	*($1 + [72]) = [0]
	*($1) = *(*($3 + [28]))
	*($2 + [88]) = ($2 + [73])
	*($2 + [84]) = $2
	*($2 + [80]) = $2
	*($2 + [96]) = ($2 + [80])
	$3 = ($1 + [8])
	*($2 + [108]) = $3
	*($2 + [104]) = $1
	*($2 + [112]) = ($1 + [16])
	$5 = ($1 + [24])
	*($2 + [116]) = $5
	*($2 + [120]) = ($1 + [32])
	*($2 + [124]) = ($1 + [40])
	*($2 + [128]) = ($1 + [56])
	*($2 + [132]) = ($1 + [64])
	*($2 + [136]) = ($1 + [72])
	CALL $201(($2 + [104]), ($2 + [96]))
	$6 = *($1 + [8])
	*($1 + [80]) = CALL db_store_i64(*($4 + [8]), (int_64)7687437768762327040, *(*($0 + [8])), $6, $2, [73])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$1 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$6 = *($3)
	$7 = *(($4 + [8]))
	$8 = *(*(($0 + [8])))
	*($2 + [104]) = *($5)
	*($1 + [84]) = CALL db_idx64_store($7, (int_64)7687437768762327040, $8, $6, ($2 + [104]))
	$global$0 = ($2 + [144])
}

void .FUNC $208 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $1
	*($5) = *(*($3))
	$3 = *($3 + [4])
	*($5 + [8]) = *($3)
	*($5 + [16]) = *(($3 + [8]))
	*($4 + [56]) = (($4 + [16]) + [24])
	*($4 + [52]) = ($4 + [16])
	*($4 + [48]) = ($4 + [16])
	CALL $214(($4 + [48]), $5)
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-3020379700884144128, $2, $6, ($4 + [16]), [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $189(($1 + [24]), ($4 + [48]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $215(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$3 = *($0)
	*($2 + [48]) = ($2 + [32])
	*($2 + [44]) = $2
	*($2 + [40]) = $2
	*($2 + [56]) = ($2 + [40])
	$4 = ($1 + [8])
	*($2 + [68]) = $4
	*($2 + [64]) = $1
	*($2 + [72]) = ($1 + [16])
	*($2 + [76]) = ($1 + [24])
	CALL $211(($2 + [64]), ($2 + [56]))
	$5 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($3 + [8]), (int_64)7687438586819379200, *(*($0 + [8])), $5, $2, [32])
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$5 = *(($3 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($2 + [64]) = *($4)
	*($1 + [40]) = CALL db_idx64_store($5, (int_64)7687438586819379200, $6, $7, ($2 + [64]))
	$global$0 = ($2 + [80])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [24])
	$6 = *($1 + [8])
	$7 = *(*($3))
	*($1 + [8]) = $7
	*($1 + [24]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [32]) = *(*($3 + [12]))
	$8 = *($3 + [16])
	*($1 + [40]) = *($8)
	*(($1 + [48])) = *(($8 + [8]))
	*($1 + [56]) = *(*($3 + [20]))
	*($1 + [64]) = *(*($3 + [24]))
	*($1 + [72]) = [0]
	*($1) = *(*($3 + [28]))
	$9 = ($1 + [72])
	$10 = ($1 + [64])
	$11 = ($1 + [56])
	$12 = ($1 + [40])
	$13 = ($1 + [32])
	$8 = ($1 + [24])
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-7])
	*($5 + [32]) = ($5 + [8])
	*($5 + [52]) = $8
	*($5 + [56]) = $13
	*($5 + [60]) = $12
	*($5 + [64]) = $11
	*($5 + [68]) = $10
	*($5 + [72]) = $9
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	CALL $201(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [80]), $2, $3, [73])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [40]) = *($8)
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$5 }
	$3 = *($1 + [84])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$6 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8526760964941414400, ($5 + [32]), $6)
	*(($1 + [84])) = $3
	
.LABEL $label$6
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$5
	$global$0 = ($5 + [80])
}

void .FUNC $200 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [8942])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [8942])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $206 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([88])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [76]) = $1
	CALL $213(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3 + [8])
	*($4 + [16]) = $2
	$5 = *($3 + [80])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $186(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $207 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $1
	*($5) = *(*($3))
	$3 = *($3 + [4])
	*($5 + [8]) = *($3)
	*($5 + [16]) = *(($3 + [8]))
	*($4 + [56]) = (($4 + [16]) + [24])
	*($4 + [52]) = ($4 + [16])
	*($4 + [48]) = ($4 + [16])
	CALL $214(($4 + [48]), $5)
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-3020370168519699456, $2, $6, ($4 + [16]), [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $188(($1 + [24]), ($4 + [48]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $204 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([88])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [76]) = $1
	CALL $212(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3 + [8])
	*($4 + [16]) = $2
	$5 = *($3 + [80])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $185(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $205 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [24])
	$6 = *($1 + [8])
	$7 = *(*($3))
	*($1 + [8]) = $7
	*($1 + [24]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [32]) = *(*($3 + [12]))
	$8 = *($3 + [16])
	*($1 + [40]) = *($8)
	*(($1 + [48])) = *(($8 + [8]))
	*($1 + [56]) = *(*($3 + [20]))
	*($1 + [64]) = *(*($3 + [24]))
	*($1 + [72]) = [0]
	*($1) = *(*($3 + [28]))
	$9 = ($1 + [72])
	$10 = ($1 + [64])
	$11 = ($1 + [56])
	$12 = ($1 + [40])
	$13 = ($1 + [32])
	$8 = ($1 + [24])
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-7])
	*($5 + [32]) = ($5 + [8])
	*($5 + [52]) = $8
	*($5 + [56]) = $13
	*($5 + [60]) = $12
	*($5 + [64]) = $11
	*($5 + [68]) = $10
	*($5 + [72]) = $9
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	CALL $201(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [80]), $2, $3, [73])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [40]) = *($8)
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$5 }
	$3 = *($1 + [84])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$6 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7687437768762327040, ($5 + [32]), $6)
	*(($1 + [84])) = $3
	
.LABEL $label$6
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$5
	$global$0 = ($5 + [80])
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8942])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8942])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $219(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [72]) = [1]
	*($5 + [24]) = *($1 + [24])
	$6 = *($1 + [8])
	$7 = $4
	$4 = ($7 + [-80])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($7 + [-7])
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = ($1 + [8])
	*($5 + [40]) = $1
	*($5 + [48]) = ($1 + [16])
	$7 = ($1 + [24])
	*($5 + [52]) = $7
	*($5 + [56]) = ($1 + [32])
	*($5 + [60]) = ($1 + [40])
	*($5 + [64]) = ($1 + [56])
	*($5 + [68]) = ($1 + [64])
	*($5 + [72]) = ($1 + [72])
	CALL $201(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [80]), $2, $4, [73])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [40]) = *($7)
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$4 }
	$4 = *($1 + [84])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7687437768762327040, ($5 + [32]), $6)
	*(($1 + [84])) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [40]))
	
.LABEL $label$4
	$global$0 = ($5 + [80])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [16]) = [9588]
	*($1 + [20]) = CALL $15([9588])
	*($1 + [8]) = *($1 + [16])
	$2 = ($0 + [72])
	$3 = *(CALL $38(($1 + [24]), ($1 + [8])))
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [80])), (int_64)7235159537265672192, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $118($2, $5)
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	$6 = ((int_64)*($7 + [8]) == (int_64)1)
	
.LABEL $label$1
	$global$0 = ($1 + [32])
	return $6
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $217(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = ($1 + [32])
	$7 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $7
	*($5 + [40]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $218(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = $2
	$4 = ($0 + [32])
	$2 = *($1)
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$3 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-3020384829779738624, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $79($4, $1)
	if ( ((int_32)*($7 + [40]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9387])
	$2 = *($0)
	*($3) = ($3 + [8])
	if ( $7 ){ goto $label$5 }
	CALL eosio_assert([0], [8948])
	
.LABEL $label$5
	CALL $198($4, $7, $2, $3)
	$global$0 = ($3 + [16])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [128])
	$global$0 = $5
	*($5 + [112]) = [10446]
	*($5 + [116]) = CALL $15([10446])
	*($5 + [40]) = *($5 + [112])
	$6 = CALL $38(($5 + [120]), ($5 + [40]))
	CALL $132($0, $1, $6)
	*($5 + [104]) = [10446]
	*($5 + [108]) = CALL $15([10446])
	*($5 + [32]) = *($5 + [104])
	$1 = CALL $38(($5 + [72]), ($5 + [32]))
	if ( ((int_64)*($6) != (int_64)*($1)) ){ goto $label$3 }
	$7 = (int_64)0
	goto $label$2 
	
.LABEL $label$3
	$7 = ((uint_64)((int_64)$3 * (int_64)5) / (uint_64)(int_64)100)
	*($2) = $7
	*($5 + [88]) = [8370]
	*($5 + [92]) = CALL $15([8370])
	*($5 + [24]) = *($5 + [88])
	$8 = CALL $38(($5 + [96]), ($5 + [24]))
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	$1 = CALL $15($4)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*($5 + [72]) = ($1 << [1])
	$9 = (($5 + [72]) | [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = (($1 + [16]) & [-16])
	$9 = CALL $7($10)
	*($5 + [72]) = ($10 | [1])
	*($5 + [80]) = $9
	*($5 + [76]) = $1
	
.LABEL $label$5
	CALL memcpy($9, $4, $1)
	
.LABEL $label$4
	*(($9 + $1)) = [0]
	CALL $87($0, $0, $6, $2, $8, ($5 + [72]))
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL $9(*($5 + [80]))
	
.LABEL $label$2
	*($2) = (int_64))($3 - $7)
	*($5 + [64]) = [10446]
	*($5 + [68]) = CALL $15([10446])
	*($5 + [16]) = *($5 + [64])
	$9 = CALL $38(($5 + [96]), ($5 + [16]))
	*($5 + [48]) = [8370]
	*($5 + [52]) = CALL $15([8370])
	*($5 + [8]) = *($5 + [48])
	$8 = CALL $38(($5 + [56]), ($5 + [8]))
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	$1 = CALL $15($4)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$10 }
	*($5 + [72]) = ($1 << [1])
	$6 = (($5 + [72]) | [1])
	if ( $1 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = (($1 + [16]) & [-16])
	$6 = CALL $7($10)
	*($5 + [72]) = ($10 | [1])
	*($5 + [80]) = $6
	*($5 + [76]) = $1
	
.LABEL $label$9
	CALL memcpy($6, $4, $1)
	
.LABEL $label$8
	*(($6 + $1)) = [0]
	CALL $87($0, $0, $9, $2, $8, ($5 + [72]))
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*($5 + [80]))
	
.LABEL $label$11
	$global$0 = ($5 + [128])
	return (unreachable)
	
.LABEL $label$7
	CALL $23(($5 + [72]))
	
.LABEL $label$1
	CALL $23(($5 + [72]))
	(unreachable)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $185 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8272]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [10965])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($1, $3, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [16])) = *($2 + [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [40])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [48])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [24]) = $0
	*($5) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $196(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $197(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [40])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9173])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [40])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)7687438586819379200, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [40]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [32]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $100($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)7687438586819379200, $6))
	if ( ((int_32)*($3 + [32]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [40])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $112 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [40])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9173])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [40])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)8526761782998466560, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [40]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [32]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $98($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)8526761782998466560, $6))
	if ( ((int_32)*($3 + [32]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [40])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7687438586819379200, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $100($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)7687438586819379200, $6))
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	*(($4 + [40])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
	$9 = *(($1 + [80]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7687446833051729920, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)8526761782998466560, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $98($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)8526761782998466560, $6))
	if ( ((int_32)*($4 + [32]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	*(($4 + [40])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $165(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $29 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $16(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $26($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $23 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $18([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7687438586819379200, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [32]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $190(($3 + [32]), ($3 + [24]))
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $192(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [80])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9173])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [80])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)8526770029230817280, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [80]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [72]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $105($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)8526770029230817280, $6))
	if ( ((int_32)*($3 + [72]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [80])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)8526770029230817280, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [72]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $105($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)8526770029230817280, $6))
	if ( ((int_32)*($4 + [72]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	*(($4 + [80])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [72]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [64])
	CALL $193(($3 + [32]), ($3 + [24]))
	*($5 + [80]) = [-1]
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $194(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $32($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7687446833051729920, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [72]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $109($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)7687446833051729920, $6))
	if ( ((int_32)*($4 + [72]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$2
	*(($4 + [80])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9203])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9248])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9298])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
	$9 = *(($1 + [80]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8526770029230817280, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [72]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [64])
	CALL $193(($3 + [32]), ($3 + [24]))
	*($5 + [80]) = [-1]
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $195(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $108 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [80])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9173])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [80])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)7687446833051729920, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [80]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [72]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $109($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)7687446833051729920, $6))
	if ( ((int_32)*($3 + [72]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [80])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1 + [8]) = *(*($3))
	*($1 + [24]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [32]) = *(*($3 + [12]))
	$4 = *($0)
	$5 = *($3 + [16])
	*(($1 + [48])) = *(($5 + [8]))
	*($1 + [40]) = *($5)
	*($1 + [56]) = *(*($3 + [20]))
	*($1 + [64]) = *(*($3 + [24]))
	*($1 + [72]) = [0]
	*($1) = *(*($3 + [28]))
	*($2 + [88]) = ($2 + [73])
	*($2 + [84]) = $2
	*($2 + [80]) = $2
	*($2 + [96]) = ($2 + [80])
	$3 = ($1 + [8])
	*($2 + [108]) = $3
	*($2 + [104]) = $1
	*($2 + [112]) = ($1 + [16])
	$5 = ($1 + [24])
	*($2 + [116]) = $5
	*($2 + [120]) = ($1 + [32])
	*($2 + [124]) = ($1 + [40])
	*($2 + [128]) = ($1 + [56])
	*($2 + [132]) = ($1 + [64])
	*($2 + [136]) = ($1 + [72])
	CALL $201(($2 + [104]), ($2 + [96]))
	$6 = *($1 + [8])
	*($1 + [80]) = CALL db_store_i64(*($4 + [8]), (int_64)8526760964941414400, *(*($0 + [8])), $6, $2, [73])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$1 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$6 = *($3)
	$7 = *(($4 + [8]))
	$8 = *(*(($0 + [8])))
	*($2 + [104]) = *($5)
	*($1 + [84]) = CALL db_idx64_store($7, (int_64)8526760964941414400, $8, $6, ($2 + [104]))
	$global$0 = ($2 + [144])
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $220($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $27($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $27($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $23($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8500])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [8605])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8538])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8605])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [432])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)4923678613891764383) ){ goto $label$20 }
	if ( ((int_64)$2 > (int_64)-4417020468240600436) ){ goto $label$19 }
	if ( ((int_64)$2 <= (int_64)-4417161203579617281) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)-4417161203579617280) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-4417085854455431168) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-4417030424788205568) ){ goto $label$1 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [3]
	*($3 + [80]) = *($3 + [392])
	CALL $41($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_64)$2 > (int_64)5378171181306216447) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)4982482360660033535) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)4982482360660033536) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)5377970993635524608) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)5378025029897704448) ){ goto $label$1 }
	*($3 + [340]) = [0]
	*($3 + [336]) = [4]
	*($3 + [136]) = *($3 + [336])
	CALL $43($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$19
	if ( ((int_64)$2 <= (int_64)-2039333636196532225) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-2039333636196532224) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)4851652588268273664) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4852766566149158272) ){ goto $label$1 }
	*($3 + [292]) = [0]
	*($3 + [288]) = [5]
	*($3 + [184]) = *($3 + [288])
	CALL $45($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 <= (int_64)5378300036089247199) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)5378300036089247200) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)5378304850033377280) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)5378331680313725952) ){ goto $label$1 }
	*($3 + [348]) = [0]
	*($3 + [344]) = [6]
	*($3 + [128]) = *($3 + [344])
	CALL $47($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)-8279611178955571200) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-7704836094741600880) ){ goto $label$1 }
	*($3 + [308]) = [0]
	*($3 + [304]) = [7]
	*($3 + [168]) = *($3 + [304])
	CALL $49($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 == (int_64)4923678613891764384) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)4923678923662819328) ){ goto $label$1 }
	*($3 + [316]) = [0]
	*($3 + [312]) = [8]
	*($3 + [160]) = *($3 + [312])
	CALL $51($1, $1, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)-4417020468240600435) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4157639942958219264) ){ goto $label$1 }
	*($3 + [364]) = [0]
	*($3 + [360]) = [9]
	*($3 + [112]) = *($3 + [360])
	CALL $53($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)5378171181306216448) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)5378225553511809024) ){ goto $label$1 }
	*($3 + [356]) = [0]
	*($3 + [352]) = [10]
	*($3 + [120]) = *($3 + [352])
	CALL $47($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [380]) = [0]
	*($3 + [376]) = [11]
	*($3 + [96]) = *($3 + [376])
	CALL $56($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [372]) = [0]
	*($3 + [368]) = [12]
	*($3 + [104]) = *($3 + [368])
	CALL $41($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [412]) = [0]
	*($3 + [408]) = [13]
	*($3 + [64]) = *($3 + [408])
	CALL $59($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [284]) = [0]
	*($3 + [280]) = [14]
	*($3 + [192]) = *($3 + [280])
	CALL $61($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [404]) = [0]
	*($3 + [400]) = [15]
	*($3 + [72]) = *($3 + [400])
	CALL $59($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [300]) = [0]
	*($3 + [296]) = [16]
	*($3 + [176]) = *($3 + [296])
	CALL $64($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [324]) = [0]
	*($3 + [320]) = [17]
	*($3 + [152]) = *($3 + [320])
	CALL $61($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [332]) = [0]
	*($3 + [328]) = [18]
	*($3 + [144]) = *($3 + [328])
	CALL $67($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [428]) = [0]
	*($3 + [424]) = [19]
	*($3 + [48]) = *($3 + [424])
	CALL $69($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [276]) = [0]
	*($3 + [272]) = [20]
	*($3 + [200]) = *($3 + [272])
	CALL $71($1, $1, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [388]) = [0]
	*($3 + [384]) = [21]
	*($3 + [88]) = *($3 + [384])
	CALL $73($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [420]) = [0]
	*($3 + [416]) = [22]
	*($3 + [56]) = *($3 + [416])
	CALL $61($1, $1, ($3 + [56]))
	
.LABEL $label$1
	*($3 + [256]) = [8370]
	*($3 + [260]) = CALL $15([8370])
	*($3 + [40]) = *($3 + [256])
	CALL $38(($3 + [264]), ($3 + [40]))
	$4 = [0]
	if ( ((int_64)$1 == (int_64)6138663591592764928) ){ goto $label$23 }
	*($3 + [240]) = [8386]
	*($3 + [244]) = CALL $15([8386])
	*($3 + [32]) = *($3 + [240])
	CALL $38(($3 + [248]), ($3 + [32]))
	$4 = [1]
	if ( ((int_64)$1 != (int_64)6138681693265272112) ){ goto $label$22 }
	
.LABEL $label$23
	*($3 + [224]) = [8399]
	*($3 + [228]) = CALL $15([8399])
	*($3 + [24]) = *($3 + [224])
	CALL $38(($3 + [232]), ($3 + [24]))
	if ( ($4 == 0) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$22 }
	
.LABEL $label$24
	*($3 + [220]) = [0]
	*($3 + [216]) = [23]
	*($3 + [8]) = *($3 + [216])
	CALL $76($0, $1, ($3 + [8]))
	goto $label$21 
	
.LABEL $label$22
	*($3 + [208]) = [8399]
	*($3 + [212]) = CALL $15([8399])
	*($3 + [16]) = *($3 + [208])
	CALL $38(($3 + [264]), ($3 + [16]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$21 }
	CALL eosio_assert([0], [8408])
	
.LABEL $label$21
	CALL $30([0])
	$global$0 = ($3 + [432])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8868])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $216(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $37 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [8370]
	*($2 + [20]) = CALL $15([8370])
	*($2 + [8]) = *($2 + [16])
	$3 = CALL $38(($2 + [24]), ($2 + [8]))
	$4 = CALL $15([8382])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8657])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($4 + [8381]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$5 = (int_64)4
	
.LABEL $label$1
	CALL $35($0, *($3), $5, $1)
	$global$0 = ($2 + [32])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [16])
	$global$0 = $5
	CALL eosio_assert(((int_32)*($3) != (int_32)[-1]), [8245])
	$2 = CALL $29($0, *($2), *($3))
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	$3 = *($3)
	CALL $25($5, $0, $3, ($2 - $3), $0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($4) ^ (int_32)[1]), [8352])
	$global$0 = ($5 + [16])
	return $2
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	CALL $27($1, [0])
	*(($1 + [8])) = *(($5 + [8]))
	*($1) = *($5)
	$global$0 = ($5 + [16])
	return $2
}

void .FUNC $35 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = [0]
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $3
	*($4 + [8]) = $1
	$6 = (uint_64)$2 >> (uint_64)(int_64)8
	$7 = CALL db_find_i64($1, $3, (int_64)3607749779137757184, $6)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $36(($4 + [8]), $7)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [8817])
	
.LABEL $label$6
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = ($4 + [36])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$7:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$7 }
	$5 = *(($4 + [32]))
	goto $label$1 
	
.LABEL $label$5
	*($0 + [8]) = $2
	*($0) = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $1
	$0 = $5
	$5 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$9 }
	goto $label$4 
	
.LABEL $label$10
	$6 = $1
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$0 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $0 ){ goto $label$11 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	
.LABEL $label$4
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [8480])
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	$5 = $7
	
.LABEL $label$1
	*($8) = $7
	CALL $9($5)
	$global$0 = ($4 + [48])
}

void .FUNC $32 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $33 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	
.LOOP $label$1:
	$1 = *($0)
	$2 = ($1 + [-9])
	$3 = ($0 + [1])
	$0 = $3
	if ( ((int_32)$1 == (int_32)[32]) ){ goto $label$1 }
	$0 = $3
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$1 = *($3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$4 = (int_64)0
	$1 = ($1 + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($3 + [1])
	$4 = (int_64)0
	
.LOOP $label$7:
	$4 = (int_64))(((int_64)$4 * (int_64)10) - (CASTING int_64)(int_32 $1))
	$1 = *($0)
	$0 = ($0 + [1])
	$1 = ($1 + [-48])
	if ( ($1 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $4 ? (int_64))((int_64)0 - $4) : $2 )
}

void .FUNC $30 (int_32 $0)
{
}

int_32 .FUNC $31 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$1 = *($0)
	$2 = ($1 + [-9])
	$3 = ($0 + [1])
	$0 = $3
	if ( ((int_32)$1 == (int_32)[32]) ){ goto $label$1 }
	$0 = $3
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$4 = [1]
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	$1 = *($3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-1])
	$4 = [0]
	
.LABEL $label$2
	$2 = [0]
	$1 = ($1 + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($3 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $1)
	$1 = *($0)
	$0 = ($0 + [1])
	$1 = ($1 + [-48])
	if ( ($1 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $4 )
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [56])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $216 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8942])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8942])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $210 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([40])) + [24]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	*($5 + [8]) = *(*($3 + [4]))
	*($5 + [16]) = *(*($3 + [8]))
	*($4 + [32]) = ($4 + [24])
	*($4 + [28]) = $4
	*($4 + [24]) = $4
	*($4 + [40]) = ($4 + [24])
	*($4 + [52]) = ($5 + [8])
	*($4 + [48]) = $5
	*($4 + [56]) = ($5 + [16])
	CALL $215(($4 + [48]), ($4 + [40]))
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4057297648603496448, $2, $6, $4, [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4) = $6
	*($4 + [24]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $197(($1 + [24]), ($4 + [48]), $4, ($4 + [24]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8983])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3)))
	$6 = *($1)
	*($1 + [32]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = ($1 + [32])
	$7 = ($1 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9080])
	
.LABEL $label$3
	$8 = $4
	$4 = ($8 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $7
	*($5 + [40]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	CALL $167(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8891])
	
.LABEL $label$1
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [40]) = $1
	*($5) = *(*($3))
	*($5 + [8]) = *(*($3 + [4]))
	*($4 + [56]) = ($4 + [40])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [8])
	*($4 + [72]) = $5
	*($4 + [80]) = ($5 + [16])
	*($4 + [84]) = ($5 + [24])
	*($4 + [88]) = ($5 + [32])
	CALL $167(($4 + [72]), ($4 + [64]))
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-3020384829779738624, $2, $6, $4, [40])
	*($5 + [44]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [72]) = $5
	$6 = *($5)
	*($4) = $6
	*($4 + [48]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [72]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $163(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [96])
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $197 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10965])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10965])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $191 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $32($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}