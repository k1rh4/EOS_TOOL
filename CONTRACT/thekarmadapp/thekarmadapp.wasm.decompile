(data (i32.const 8232) "failed to allocate pages\00invalid authority\00")
(data (i32.const 8275) "<Posts>\00")
(data (i32.const 8283) "<\00")
(data (i32.const 8285) ">\00")
(data (i32.const 8287) "<Votes>\00")
(data (i32.const 8295) "reward\00")
(data (i32.const 8302) "transfer\00")
(data (i32.const 8311) "Here\'s your post rewards! Do good, get KARMA!\00")
(data (i32.const 8357) "claim\00")
(data (i32.const 8363) "name cannot be empty!\00")
(data (i32.const 8385) "invalid category id\00")
(data (i32.const 8405) "invalid post id\00")
(data (i32.const 8421) "text cannot be empty\00")
(data (i32.const 8442) "invalid comment id\00")
(data (i32.const 8461) "reason cannot be empty\00")
(data (i32.const 8484) "code\00")
(data (i32.const 8489) "<Post sent>\00")
(data (i32.const 8501) "invalid post\00")
(data (i32.const 8514) "post can only be edited by the same author\00")
(data (i32.const 8557) "cannot close post for 7 days\00")
(data (i32.const 8586) "cannot retire post for 7 days\00")
(data (i32.const 8616) "post description cannot be empty!\00")
(data (i32.const 8650) "need atleast one photo or video\00")
(data (i32.const 8682) "at least one category is required\00")
(data (i32.const 8716) "you need to set at least one category!\00")
(data (i32.const 8755) "bio cannot be empty\00")
(data (i32.const 8775) "displayname cannot be empty\00")
(data (i32.const 8803) "profilepic cannot be empty\00")
(data (i32.const 8830) "this account is already banned\00")
(data (i32.const 8861) "this account is not banned\00")
(data (i32.const 8888) "string is too long to be a valid name\00")
(data (i32.const 8926) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 8993) "character is not in allowed character set for names\00")
(data (i32.const 9045) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9094) "invalid symbol name\00")
(data (i32.const 9114) "write\00")
(data (i32.const 9120) "you have been banned\00")
(data (i32.const 9141) "<Create inflation: \00")
(data (i32.const 9161) "setrewards\00")
(data (i32.const 9172) "<Processing day: \00")
(data (i32.const 9190) "<Adding day>\00")
(data (i32.const 9203) "<Update inflation day>\00")
(data (i32.const 9226) "<Get supply>\00")
(data (i32.const 9239) "unable to find stats\00")
(data (i32.const 9260) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9311) "error reading iterator\00")
(data (i32.const 9334) "read\00")
(data (i32.const 9339) "<Day:\00")
(data (i32.const 9345) "<Day exists>\00")
(data (i32.const 9358) "<Total daily posts:\00")
(data (i32.const 9378) "post does not exist\00")
(data (i32.const 9398) "cannot vote for self\00")
(data (i32.const 9419) "you have already voted on this post\00")
(data (i32.const 9455) "object passed to modify is not in multi_index\00")
(data (i32.const 9501) "cannot modify objects in table of another contract\00")
(data (i32.const 9552) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9611) "<first vote today>\00")
(data (i32.const 9630) "<unique votes: \00")
(data (i32.const 9646) ",total_weight: \00")
(data (i32.const 9662) "<Total weight:\00")
(data (i32.const 9677) "cannot create objects in table of another contract\00")
(data (i32.const 9728) "therealkarma\00")
(data (i32.const 9741) "karmafunding\00")
(data (i32.const 9754) "karmarewards\00")
(data (i32.const 9767) "KARMA\00")
(data (i32.const 9773) "string is too long to be a valid symbol_code\00")
(data (i32.const 9818) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9871) "get\00")
(data (i32.const 9875) "singleton does not exist\00")
(data (i32.const 9900) "<Modify>\00")
(data (i32.const 9909) "cannot increment end iterator\00")
(data (i32.const 9939) "object passed to erase is not in multi_index\00")
(data (i32.const 9984) "cannot erase objects in table of another contract\00")
(data (i32.const 10034) "attempt to remove object that was not in multi_index\00")
(data (i32.const 0) "h\'\00\00")
(import "env" "has_auth" (func $fimport$0 (param i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$2 (param i32 i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$4 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$5 (param i32 i32) (result i64)))
(import "env" "abort" (func $fimport$6))
(import "env" "memset" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$8 (result i64)))
(import "env" "get_active_producers" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_idx64_upperbound" (func $fimport$10 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "prints" (func $fimport$12 (param i32)))
(import "env" "printui" (func $fimport$13 (param i64)))
(import "env" "memmove" (func $fimport$14 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$15 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$16 (param i32 i32)))
(import "env" "__multf3" (func $fimport$17 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$18 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$20 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$21 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$26 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$27 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$28 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$29 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$31 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$32 (param i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$33 (result i64)))
(import "env" "db_update_i64" (func $fimport$34 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$35 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$36 (param i32 i64 i32)))
(import "env" "db_idx64_next" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$38 (param i32 i32)))
(import "env" "require_auth" (func $fimport$39 (param i64)))
(import "env" "printdf" (func $fimport$40 (param f64)))
(import "env" "db_next_i64" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$42 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$43 (param i32)))
(import "env" "action_data_size" (func $fimport$44 (result i32)))
(import "env" "read_action_data" (func $fimport$45 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$46 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$47 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$48 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$49 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$50 (param i64 i64 i64 i64 i32) (result i32)))
(export "apply" (func $96))
(table $0 26 26 anyfunc)
(elem (i32.const 1) $56 $75 $58 $48 $89 $60 $57 $46 $59 $49 $69 $90 $50 $61 $80 $91 $73 $78 $77 $94 $76 $79 $25 $55 $70)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10087))
(global $global$2 i32 (i32.const 10087))


void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9114])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $176 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $28(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL $7([32])) + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $28(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $35($0, $8)
	return 
	
.LABEL $label$1
	$11
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [32])) = *(($5 + [32]))
	*(($1 + [24])) = *(($5 + [24]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $171(($1 + [36]), *($5 + [36]), ($5 + [40]))
	
.LABEL $label$1
	$6 = *(($1 + [44]))
	$7 = [33]
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	$9 = ($1 + [40])
	$8 = *($1 + [36])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$4:
	$10 = $8
	$5 = *($10 + [4])
	if ( ($5 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = $5
	$5 = *($8)
	if ( $5 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$5 }
	$10 = ($10 + [8])
	
.LOOP $label$8:
	$5 = *($10)
	$10 = ($5 + [8])
	$8 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($8)) ){ goto $label$8 }
	
.LABEL $label$5
	$7 = ($7 + [56])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$10 }
	$5 = CALL $1($7)
	goto $label$9 
	
.LABEL $label$10
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$9
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $7)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [36])
	CALL $172(($3 + [24]), ($3 + [16]))
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-9102017834344850240, *(*($0 + [8])), (int_64)-9102017834344850240, $5, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)(int_64)-9102017834344850240) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $2($5)
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-9102017834344850240) ){ goto $label$11 }
	
.LABEL $label$12
	*(($4 + [16])) = (int_64)-9102017834344850239
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$11
	$global$0 = ($3 + [48])
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [64])) = *(($9 + [64]))
	*(($8 + [56])) = *(($9 + [56]))
	*(($8 + [48])) = *(($9 + [48]))
	*(($8 + [40])) = *(($9 + [40]))
	*(($8 + [32])) = *(($9 + [32]))
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $28(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL $7([72])) + [64])) = *(($8 + [64]))
	*(($5 + [56])) = *(($8 + [56]))
	*(($5 + [48])) = *(($8 + [48]))
	*(($5 + [40])) = *(($8 + [40]))
	*(($5 + [32])) = *(($8 + [32]))
	*(($5 + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $28(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $122($0, $8)
	return 
	
.LABEL $label$1
	$11
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [16]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $173(*($1), *($0 + [20]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	CALL $179(*($1), *($0 + [16]))
	CALL $180(*($1), *($0 + [20]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $127 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [512])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [492]) = $2
	*($3 + [488]) = $2
	*($3 + [496]) = ($2 + $4)
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = (int_64)0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = (int_64)0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = (int_64)0
	*($3 + [408]) = (int_64)0
	*($3 + [416]) = (int_64)0
	*($3 + [440]) = (int_64)0
	*($3 + [464]) = (int_64)0
	*($3 + [504]) = ($3 + [488])
	*($3 + [132]) = (($3 + [400]) + [8])
	*($3 + [136]) = ($3 + [416])
	*($3 + [140]) = ($3 + [428])
	*($3 + [144]) = ($3 + [440])
	*($3 + [148]) = ($3 + [452])
	*($3 + [152]) = ($3 + [464])
	*($3 + [156]) = ($3 + [476])
	*($3 + [128]) = ($3 + [400])
	CALL $112(($3 + [128]), ($3 + [504]))
	$2 = *($3 + [496])
	*((($3 + [112]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [488])
	*($3 + [8]) = $5
	*($3 + [112]) = $5
	$4 = CALL $62(($3 + [24]), ($3 + [400]))
	$2 = CALL $110(($3 + [128]), $0, $1, ($3 + [8]))
	CALL $61($2, $4)
	CALL $64($4)
	CALL $111($2)
	CALL $64(($3 + [400]))
	$global$0 = ($3 + [512])
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $49 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth(*($0))
	if ( ((uint_64)*($0 + [184]) >= (uint_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [8385])
	
.LABEL $label$1
}

void .FUNC $48 (int_32 $0, int_64 $1)
{
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $150(CALL $149($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [12]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $157(*($1), *($0 + [16]))
	CALL $158(*($1), *($0 + [20]))
	$global$0 = ($2 + [16])
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = (*($2) + [21])
	*(($2 = *($1))) = $3
	$1 = *($0 + [16])
	$4 = *($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($2) = $3
	$6 = ($1 + [4])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$3:
	$7 = $5
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = $1
	$1 = *($5)
	if ( $1 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($7 + [8])
	if ( ((int_32)*($5) == (int_32)$7) ){ goto $label$4 }
	$7 = ($7 + [8])
	
.LOOP $label$7:
	$1 = *($7)
	$7 = ($1 + [8])
	$5 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($5)) ){ goto $label$7 }
	
.LABEL $label$4
	$3 = ($3 + [8])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$3 }
	*($2) = $3
	
.LABEL $label$2
	$1 = *($0 + [20])
	$4 = *($1 + [8])
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$8 }
	*($2) = $3
	$6 = ($1 + [4])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = $5
	$1 = *($7 + [4])
	if ( ($1 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = $1
	$1 = *($5)
	if ( $1 ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = *($7 + [8])
	if ( ((int_32)*($5) == (int_32)$7) ){ goto $label$11 }
	$7 = ($7 + [8])
	
.LOOP $label$14:
	$1 = *($7)
	$7 = ($1 + [8])
	$5 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($5)) ){ goto $label$14 }
	
.LABEL $label$11
	$3 = ($3 + [16])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$10 }
	*($2) = $3
	
.LABEL $label$9
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $28(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL $7([32])) + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $28(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $32($0, $8)
	return 
	
.LABEL $label$1
	$11
}

void .FUNC $47 (int_64 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [56]) = $3
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [8])) = $5
	*($4) = $7
	*($4 + [4]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [4]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [36])) = $6
	*(($4 + [40])) = $5
	*(($4 + [8])) = [0]
	*(($4 + [52])) = [0]
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [32]) = $7
	*($4) = (int_64)0
	*($4 + [44 align=4]) = (int_64)0
	CALL $37(($4 + [44]), [8])
	$7 = *($4 + [44])
	if ( ((int_32)(*(($4 + [48])) - $7) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	
.LABEL $label$4
	CALL memcpy($7, ($4 + [56]), [8])
	CALL $39(($4 + [16]))
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [48])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [36])) = $7
	CALL $9($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*($4 + [4]) = $7
	CALL $9($7)
	
.LABEL $label$7
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $15($4)
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$3 }
	if ( uint_32($3 >> [1]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( *($1 + [4]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8363])
	
.LABEL $label$1
	$4 = ((int_64)*($0 + [184]) + (int_64)1)
	*($0 + [184]) = $4
	$5 = *($0)
	*(($0 = CALL $7([16]))) = $5
	*($0 + [8]) = (int_64)4977216460058263552
	*($2) = $0
	$0 = ($0 + [16])
	*($2 + [8]) = $0
	*($2 + [4]) = $0
	CALL $47($5, (int_64)4734097396726759424, $2, $4)
	$0 = *($2)
	if ( ($0 == 0) ){ goto $label$4 }
	*($2 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	*($5 + [24]) = *(($1 + [8]))
	$6 = *($1)
	CALL prints([9900])
	$3 = *($3)
	$7 = ($1 + [36])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $40($7, *($3), ($3 + [4]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [9552])
	
.LABEL $label$4
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [60]) = $7
	*($5 + [40]) = $1
	$8 = ($1 + [8])
	*($5 + [44]) = $8
	$9 = ($1 + [16])
	*($5 + [48]) = $9
	$10 = ($1 + [20])
	*($5 + [52]) = $10
	$11 = ($1 + [24])
	*($5 + [56]) = $11
	CALL $41(($5 + [40]), ($5 + [8]))
	$3 = *($5 + [32])
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $1($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $8
	*($5 + [48]) = $9
	*($5 + [52]) = $10
	*($5 + [56]) = $11
	*($5 + [60]) = $7
	*($5 + [40]) = $1
	CALL $42(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $2($4)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $18(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $44 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	float_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	$2 = ($global$0 - [208])
	$global$0 = $2
	$3 = ($0 + [64])
	$4 = ((uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $16() / (int_64)1000000)) / (uint_32)[86400])
	$6 = *(($0 + [92]))
	$5 = *(($0 + [88]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$8:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$7 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($8 + [48]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9260])
	if ( (CALL has_auth(*($8 + [8])) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*($3), *(($0 + [72])), (int_64)-5966816507475263488, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $27($3, $7)
	if ( ((int_32)*($8 + [48]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$5
	if ( CALL has_auth(*($8 + [8])) ){ goto $label$3 }
	
.LABEL $label$4
	if ( CALL has_auth(*($0)) ){ goto $label$3 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$3
	CALL prints([8275])
	CALL prints([8283])
	CALL printui(*($8))
	$9 = (($2 + [160]) | [4])
	*($2 + [160]) = $9
	$10 = (int_64)0
	*($2 + [164 align=4]) = (int_64)0
	$12 = ($8 + [40])
	$11 = *($8 + [36])
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$9 }
	$13 = (CASTING uint_64)(uint_32 $4)
	$14 = [0]
	$4 = [0]
	$15 = ($11 + [16])
	if ( ((int_32)$9 != (int_32)$9) ){ goto $label$10 }
	$16 = [28]
	goto $label$1 
	
.LABEL $label$10
	$16 = [3]
	goto $label$1 
	
.LABEL $label$9
	$16 = [44]
	goto $label$1 
	
.LABEL $label$2
	$16 = [67]
	
.LABEL $label$1
	
.LOOP $label$11:
	goto $label$149 
	
.LABEL $label$176
	$4 = *($2 + [164])
	$11 = $6
	$15 = ($11 + [16])
	if ( ((int_32)*($2 + [160]) == (int_32)$9) ){ goto $label$87 }
	$16 = [3]
	goto $label$11 
	
.LABEL $label$175
	$6 = $4
	$5 = $9
	if ( ($4 == 0) ){ goto $label$70 }
	$16 = [4]
	goto $label$11 
	
.LABEL $label$174
	$7 = $6
	$6 = *($7 + [4])
	if ( $6 ){ goto $label$71 }
	goto $label$72 
	
.LABEL $label$173
	$7 = *($5 + [8])
	$6 = ((int_32)*($7) == (int_32)$5)
	$5 = $7
	if ( $6 ){ goto $label$69 }
	$16 = [5]
	goto $label$11 
	
.LABEL $label$172
	$1 = *($15)
	if ( (uint_64)(*($7 + [16]) <= $1) ){ goto $label$86 }
	$16 = [6]
	goto $label$11 
	
.LABEL $label$171
	if ( ($4 == 0) ){ goto $label$68 }
	$16 = [7]
	goto $label$11 
	
.LABEL $label$170
	$6 = $9
	$10 = *($4 + [16])
	if ( ((uint_64)$1 >= (uint_64)$10) ){ goto $label$66 }
	goto $label$67 
	
.LABEL $label$169
	$6 = $4
	$4 = $7
	$10 = *($4 + [16])
	if ( ((uint_64)$1 >= (uint_64)$10) ){ goto $label$83 }
	$16 = [20]
	goto $label$11 
	
.LABEL $label$168
	$7 = *($4)
	if ( $7 ){ goto $label$58 }
	goto $label$59 
	
.LABEL $label$167
	if ( ((uint_64)$10 >= (uint_64)$1) ){ goto $label$65 }
	$16 = [17]
	goto $label$11 
	
.LABEL $label$166
	$6 = ($4 + [4])
	$7 = *($4 + [4])
	if ( ($7 == 0) ){ goto $label$60 }
	$16 = [18]
	goto $label$11 
	
.LABEL $label$165
	$4 = $6
	goto $label$82 
	
.LABEL $label$164
	$7 = $9
	$16 = [24]
	goto $label$11 
	
.LABEL $label$163
	if ( ($4 == 0) ){ goto $label$57 }
	$16 = [25]
	goto $label$11 
	
.LABEL $label$162
	$4 = ($7 + [4])
	if ( (*($4) == 0) ){ goto $label$62 }
	$16 = [10]
	goto $label$11 
	
.LABEL $label$161
	$7 = *($11 + [4])
	if ( $7 ){ goto $label$79 }
	$16 = [11]
	goto $label$11 
	
.LABEL $label$160
	$6 = *($11 + [8])
	if ( ((int_32)*($6) == (int_32)$11) ){ goto $label$76 }
	$16 = [12]
	goto $label$11 
	
.LABEL $label$159
	$5 = ($11 + [8])
	$16 = [13]
	goto $label$11 
	
.LABEL $label$158
	$7 = *($5)
	$5 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$74 }
	goto $label$75 
	
.LABEL $label$157
	$7 = $9
	$4 = $9
	if ( *($4) ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$156
	$4 = $9
	$7 = $9
	goto $label$85 
	
.LABEL $label$155
	$7 = $4
	goto $label$84 
	
.LABEL $label$154
	$7 = $4
	$4 = $6
	if ( *($4) ){ goto $label$80 }
	goto $label$81 
	
.LABEL $label$153
	$7 = $4
	$4 = $6
	$16 = [14]
	goto $label$11 
	
.LABEL $label$152
	*((($6 = CALL $7([32])) + [24])) = *(($15 + [8]))
	*($6 + [16]) = *($15)
	*($6) = (int_64)0
	*($6 + [8]) = $7
	*($4) = $6
	$7 = *(*($2 + [160]))
	if ( ($7 == 0) ){ goto $label$61 }
	$16 = [15]
	goto $label$11 
	
.LABEL $label$151
	*($2 + [160]) = $7
	$6 = *($4)
	$16 = [16]
	goto $label$11 
	
.LABEL $label$150
	CALL $28(*($2 + [164]), $6)
	$14 = (*($7) + [1])
	*(($7 = (($2 + [160]) + [8]))) = $14
	$7 = *($11 + [4])
	if ( ($7 == 0) ){ goto $label$77 }
	$16 = [0]
	goto $label$11 
	
.LABEL $label$149
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$78 }
	$16 = [1]
	goto $label$11 
	
.LABEL $label$148
	if ( ((int_32)$6 != (int_32)$12) ){ goto $label$73 }
	$16 = [29]
	goto $label$11 
	
.LABEL $label$147
	$10 = (int_64)0
	if ( ($14 == 0) ){ goto $label$56 }
	$16 = [30]
	goto $label$11 
	
.LABEL $label$146
	$5 = *($2 + [160])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$55 }
	$16 = [31]
	goto $label$11 
	
.LABEL $label$145
	$11 = ($0 + [224])
	$10 = (int_64)0
	$15 = ($8 + [20])
	$16 = [32]
	goto $label$11 
	
.LABEL $label$144
	$1 = *($5 + [16])
	if ( ((int_64)$1 != (int_64)$13) ){ goto $label$51 }
	$16 = [83]
	goto $label$11 
	
.LABEL $label$143
	$7 = *($5 + [4])
	if ( ($7 == 0) ){ goto $label$13 }
	$16 = [84]
	goto $label$11 
	
.LABEL $label$142
	$5 = $7
	$7 = *($5)
	if ( $7 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$141
	$7 = *($11)
	if ( ($7 == 0) ){ goto $label$50 }
	$16 = [34]
	goto $label$11 
	
.LABEL $label$140
	$6 = $11
	$16 = [35]
	goto $label$11 
	
.LABEL $label$139
	$4 = (uint_64)(*($7 + [16]) <= $1)
	$6 = ( $6 ? $7 : $4 )
	$7 = *(($7 + ($4 << [2])))
	if ( $7 ){ goto $label$49 }
	$16 = [36]
	goto $label$11 
	
.LABEL $label$138
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$48 }
	$16 = [37]
	goto $label$11 
	
.LABEL $label$137
	if ( ((uint_64)$1 >= (uint_64)*($6 + [16])) ){ goto $label$47 }
	$16 = [82]
	goto $label$11 
	
.LABEL $label$136
	$6 = $11
	$16 = [38]
	goto $label$11 
	
.LABEL $label$135
	$17 = *($6 + [48])
	$1 = *($6 + [56])
	$18 = ((float_64)((float_64)(CASTING float_64)(uint_64 *($5 + [24])) / (float_64)(CASTING float_64)(uint_64 *($6 + [32]))) * (float_64)(CASTING float_64)(uint_64 ( $1 ? ( $1 ? $17 : (int_64)($17 == 0) ) : *($15) )))
	if ( (((float_64)$18 < (float_64)(float_64)18446744073709551615) & ((float_64)$18 >= (float_64)(float_64)0)) ){ goto $label$46 }
	$16 = [81]
	goto $label$11 
	
.LABEL $label$134
	$1 = (int_64)0
	$7 = *($5 + [4])
	if ( $7 ){ goto $label$43 }
	$16 = [78]
	goto $label$11 
	
.LABEL $label$133
	$6 = *($5 + [8])
	if ( ((int_32)*($6) == (int_32)$5) ){ goto $label$42 }
	$16 = [79]
	goto $label$11 
	
.LABEL $label$132
	$4 = ($5 + [8])
	$16 = [80]
	goto $label$11 
	
.LABEL $label$131
	$7 = *($4)
	$4 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$130
	$1 = (Rounds 0)($18)
	$7 = *($5 + [4])
	if ( ($7 == 0) ){ goto $label$44 }
	$16 = [40]
	goto $label$11 
	
.LABEL $label$129
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$45 }
	$16 = [41]
	goto $label$11 
	
.LABEL $label$128
	if ( ((int_32)*($2 + [160]) != (int_32)$5) ){ goto $label$39 }
	$16 = [77]
	goto $label$11 
	
.LABEL $label$127
	*($2 + [160]) = $6
	$16 = [42]
	goto $label$11 
	
.LABEL $label$126
	$10 = ((int_64)$10 + (int_64)$1)
	*(($7 = (($2 + [160]) + [8]))) = (*($7) + [-1])
	CALL $29(*($2 + [164]), $5)
	CALL $9($5)
	$5 = $6
	$16 = [43]
	goto $label$11 
	
.LABEL $label$125
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$124
	$7 = *($5 + [8])
	if ( ((int_32)*($7) == (int_32)$5) ){ goto $label$12 }
	$16 = [86]
	goto $label$11 
	
.LABEL $label$123
	$6 = ($5 + [8])
	$16 = [87]
	goto $label$11 
	
.LABEL $label$122
	$7 = *($6)
	$6 = ($7 + [8])
	$5 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($5)) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$121
	$5 = $7
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$52 }
	$16 = [44]
	goto $label$11 
	
.LABEL $label$120
	CALL prints([8285])
	$1 = *($0)
	*($2 + [40]) = ($2 + [160])
	CALL $45($3, $8, $1, ($2 + [40]))
	if ( (int_64)($10 == 0) ){ goto $label$34 }
	$16 = [45]
	goto $label$11 
	
.LABEL $label$119
	$19 = *($0 + [48])
	*($2 + [104]) = [8295]
	*($2 + [108]) = CALL $17([8295])
	*($2 + [16]) = *($2 + [104])
	$7 = CALL $36(($2 + [112]), ($2 + [16]))
	$20 = *($0 + [32])
	$21 = *($7)
	*($2 + [88]) = [8302]
	*($2 + [92]) = CALL $17([8302])
	*($2 + [8]) = *($2 + [88])
	$4 = CALL $36(($2 + [96]), ($2 + [8]))
	$17 = *($0 + [56])
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$33 }
	$16 = [46]
	goto $label$11 
	
.LABEL $label$118
	CALL eosio_assert([0], [9045])
	$16 = [47]
	goto $label$11 
	
.LABEL $label$117
	$1 = (uint_64)$17 >> (uint_64)(int_64)8)
	$7 = [0]
	$16 = [48]
	goto $label$11 
	
.LABEL $label$116
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$16 = [71]
	goto $label$11 
	
.LABEL $label$115
	$13 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$16 = [72]
	goto $label$11 
	
.LABEL $label$114
	$1 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$113
	$1 = $13
	$16 = [74]
	goto $label$11 
	
.LABEL $label$112
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$16 = [75]
	goto $label$11 
	
.LABEL $label$111
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$14 }
	$16 = [76]
	goto $label$11 
	
.LABEL $label$110
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$109
	CALL eosio_assert([0], [9094])
	$16 = [50]
	goto $label$11 
	
.LABEL $label$108
	*(($2 + [32])) = [0]
	*($2 + [24]) = (int_64)0
	$7 = CALL $17([8311])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$26 }
	$16 = [51]
	goto $label$11 
	
.LABEL $label$107
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$25 }
	$16 = [69]
	goto $label$11 
	
.LABEL $label$106
	*($2 + [24]) = ($7 << [1])
	$6 = (($2 + [24]) | [1])
	if ( $7 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$105
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $7($5)
	*($2 + [24]) = ($5 | [1])
	*($2 + [32]) = $6
	*($2 + [28]) = $7
	$16 = [53]
	goto $label$11 
	
.LABEL $label$104
	CALL memcpy($6, [8311], $7)
	$16 = [54]
	goto $label$11 
	
.LABEL $label$103
	*(($6 + $7)) = [0]
	$1 = *(($8 + [8]))
	*((($2 + [40]) + [24])) = $17
	$7 = (($2 + [24]) + [8])
	*(($2 + [80])) = *($7)
	*($7) = [0]
	*($2 + [40]) = *(($0 + [48]))
	$13 = *($2 + [24])
	*($2 + [24]) = (int_64)0
	*($2 + [56]) = $10
	*($2 + [72]) = $13
	*($2 + [120]) = $20
	*($2 + [128]) = *($4)
	*($2 + [48]) = $1
	*(($7 = CALL $7([16]))) = $19
	*($7 + [8]) = $21
	*((($2 + [120]) + [36])) = [0]
	$6 = ($7 + [16])
	*((($2 + [120]) + [24])) = $6
	*(($2 + [140])) = $6
	*($2 + [136]) = $7
	*($2 + [148 align=4]) = (int_64)0
	$7 = *($2 + [72])
	$6 = ( *((($2 + [40]) + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($6 + [32])
	$1 = (CASTING uint_64)(uint_32 $6)
	$6 = ($2 + [148])
	$16 = [55]
	goto $label$11 
	
.LABEL $label$102
	$7 = ($7 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$22 }
	$16 = [56]
	goto $label$11 
	
.LABEL $label$101
	if ( ($7 == 0) ){ goto $label$21 }
	$16 = [57]
	goto $label$11 
	
.LABEL $label$100
	CALL $37($6, $7)
	$6 = *(($2 + [152]))
	$7 = *(($2 + [148]))
	goto $label$20 
	
.LABEL $label$99
	$6 = [0]
	$7 = [0]
	$16 = [58]
	goto $label$11 
	
.LABEL $label$98
	*($2 + [180]) = $7
	*($2 + [176]) = $7
	*($2 + [184]) = $6
	*($2 + [192]) = ($2 + [176])
	*($2 + [200]) = ($2 + [40])
	CALL $38(($2 + [200]), ($2 + [192]))
	CALL $39(($2 + [120]))
	$7 = *($2 + [148])
	if ( ($7 == 0) ){ goto $label$19 }
	$16 = [59]
	goto $label$11 
	
.LABEL $label$97
	*(($2 + [152])) = $7
	CALL $9($7)
	$16 = [60]
	goto $label$11 
	
.LABEL $label$96
	$7 = *($2 + [136])
	if ( ($7 == 0) ){ goto $label$18 }
	$16 = [61]
	goto $label$11 
	
.LABEL $label$95
	*(($2 + [140])) = $7
	CALL $9($7)
	$16 = [62]
	goto $label$11 
	
.LABEL $label$94
	if ( ((*(($2 + [72])) & [1]) == 0) ){ goto $label$17 }
	$16 = [63]
	goto $label$11 
	
.LABEL $label$93
	CALL $9(*(($2 + [80])))
	$16 = [64]
	goto $label$11 
	
.LABEL $label$92
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$16 }
	$16 = [65]
	goto $label$11 
	
.LABEL $label$91
	CALL $9(*(($2 + [32])))
	$16 = [66]
	goto $label$11 
	
.LABEL $label$90
	CALL $32(($2 + [160]), *($2 + [164]))
	$16 = [67]
	goto $label$11 
	
.LABEL $label$89
	$global$0 = ($2 + [208])
	return (unreachable)
	
.LABEL $label$88
	CALL $19(($2 + [24]))
	
.LABEL $label$87
	$16 = [28]
	goto $label$11 
	
.LABEL $label$86
	$16 = [24]
	goto $label$11 
	
.LABEL $label$85
	$16 = [14]
	goto $label$11 
	
.LABEL $label$84
	$16 = [14]
	goto $label$11 
	
.LABEL $label$83
	$16 = [8]
	goto $label$11 
	
.LABEL $label$82
	$16 = [19]
	goto $label$11 
	
.LABEL $label$81
	$16 = [14]
	goto $label$11 
	
.LABEL $label$80
	$16 = [10]
	goto $label$11 
	
.LABEL $label$79
	$16 = [0]
	goto $label$11 
	
.LABEL $label$78
	$16 = [0]
	goto $label$11 
	
.LABEL $label$77
	$16 = [11]
	goto $label$11 
	
.LABEL $label$76
	$16 = [1]
	goto $label$11 
	
.LABEL $label$75
	$16 = [1]
	goto $label$11 
	
.LABEL $label$74
	$16 = [13]
	goto $label$11 
	
.LABEL $label$73
	$16 = [2]
	goto $label$11 
	
.LABEL $label$72
	$16 = [5]
	goto $label$11 
	
.LABEL $label$71
	$16 = [4]
	goto $label$11 
	
.LABEL $label$70
	$16 = [27]
	goto $label$11 
	
.LABEL $label$69
	$16 = [27]
	goto $label$11 
	
.LABEL $label$68
	$16 = [23]
	goto $label$11 
	
.LABEL $label$67
	$16 = [20]
	goto $label$11 
	
.LABEL $label$66
	$16 = [8]
	goto $label$11 
	
.LABEL $label$65
	$16 = [9]
	goto $label$11 
	
.LABEL $label$64
	$16 = [14]
	goto $label$11 
	
.LABEL $label$63
	$16 = [10]
	goto $label$11 
	
.LABEL $label$62
	$16 = [14]
	goto $label$11 
	
.LABEL $label$61
	$16 = [16]
	goto $label$11 
	
.LABEL $label$60
	$16 = [22]
	goto $label$11 
	
.LABEL $label$59
	$16 = [21]
	goto $label$11 
	
.LABEL $label$58
	$16 = [19]
	goto $label$11 
	
.LABEL $label$57
	$16 = [26]
	goto $label$11 
	
.LABEL $label$56
	$16 = [44]
	goto $label$11 
	
.LABEL $label$55
	$16 = [44]
	goto $label$11 
	
.LABEL $label$54
	$16 = [44]
	goto $label$11 
	
.LABEL $label$53
	$16 = [32]
	goto $label$11 
	
.LABEL $label$52
	$16 = [32]
	goto $label$11 
	
.LABEL $label$51
	$16 = [33]
	goto $label$11 
	
.LABEL $label$50
	$16 = [82]
	goto $label$11 
	
.LABEL $label$49
	$16 = [35]
	goto $label$11 
	
.LABEL $label$48
	$16 = [82]
	goto $label$11 
	
.LABEL $label$47
	$16 = [38]
	goto $label$11 
	
.LABEL $label$46
	$16 = [39]
	goto $label$11 
	
.LABEL $label$45
	$16 = [40]
	goto $label$11 
	
.LABEL $label$44
	$16 = [78]
	goto $label$11 
	
.LABEL $label$43
	$16 = [40]
	goto $label$11 
	
.LABEL $label$42
	$16 = [41]
	goto $label$11 
	
.LABEL $label$41
	$16 = [41]
	goto $label$11 
	
.LABEL $label$40
	$16 = [80]
	goto $label$11 
	
.LABEL $label$39
	$16 = [42]
	goto $label$11 
	
.LABEL $label$38
	$16 = [43]
	goto $label$11 
	
.LABEL $label$37
	$16 = [84]
	goto $label$11 
	
.LABEL $label$36
	$16 = [43]
	goto $label$11 
	
.LABEL $label$35
	$16 = [87]
	goto $label$11 
	
.LABEL $label$34
	$16 = [66]
	goto $label$11 
	
.LABEL $label$33
	$16 = [47]
	goto $label$11 
	
.LABEL $label$32
	$16 = [48]
	goto $label$11 
	
.LABEL $label$31
	$16 = [50]
	goto $label$11 
	
.LABEL $label$30
	$16 = [48]
	goto $label$11 
	
.LABEL $label$29
	$16 = [50]
	goto $label$11 
	
.LABEL $label$28
	$16 = [49]
	goto $label$11 
	
.LABEL $label$27
	$16 = [49]
	goto $label$11 
	
.LABEL $label$26
	$16 = [70]
	goto $label$11 
	
.LABEL $label$25
	$16 = [52]
	goto $label$11 
	
.LABEL $label$24
	$16 = [54]
	goto $label$11 
	
.LABEL $label$23
	$16 = [53]
	goto $label$11 
	
.LABEL $label$22
	$16 = [55]
	goto $label$11 
	
.LABEL $label$21
	$16 = [68]
	goto $label$11 
	
.LABEL $label$20
	$16 = [58]
	goto $label$11 
	
.LABEL $label$19
	$16 = [60]
	goto $label$11 
	
.LABEL $label$18
	$16 = [62]
	goto $label$11 
	
.LABEL $label$17
	$16 = [64]
	goto $label$11 
	
.LABEL $label$16
	$16 = [66]
	goto $label$11 
	
.LABEL $label$15
	$16 = [73]
	goto $label$11 
	
.LABEL $label$14
	$16 = [74]
	goto $label$11 
	
.LABEL $label$13
	$16 = [85]
	goto $label$11 
	
.LABEL $label$12
	$16 = [88]
	goto $label$11 
	$16
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	$2 = ($global$0 - [96])
	$global$0 = $2
	CALL $122($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$6 = (($2 + [8]) + [40])
	$12 = (($2 + [8]) + [32])
	$13 = ($2 + [32])
	$14 = (($2 + [8]) + [16])
	$15 = (($2 + [8]) + [8])
	$16 = ($2 + [84])
	$17 = ($2 + [92])
	$18 = [0]
	
.LOOP $label$4:
	*($15) = (int_64)0
	*($14) = (int_64)0
	*($13) = (int_64)0
	*($12) = (int_64)0
	*($6) = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [56]), $9, [8])
	*(($7 = ($0 + [4]))) = (*($7) + [8])
	*($2 + [64]) = $0
	*((($2 + [72]) + [8])) = $14
	*($16) = $13
	*((($2 + [72]) + [16])) = $12
	*($17) = $6
	*($2 + [76]) = $15
	*($2 + [72]) = ($2 + [8])
	CALL $167(($2 + [72]), ($2 + [64]))
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$19 = *($5 + [16])
	$4 = *($2 + [56])
	if ( ((uint_64)$4 >= (uint_64)$19) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$20 = [3]
	goto $label$6 
	
.LABEL $label$8
	$20 = [10]
	goto $label$6 
	
.LABEL $label$7
	$20 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$29 
	
.LABEL $label$33
	$9 = $5
	$5 = $8
	$19 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$19) ){ goto $label$22 }
	$20 = [10]
	goto $label$11 
	
.LABEL $label$32
	$8 = *($5)
	if ( $8 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$31
	if ( ((uint_64)$19 >= (uint_64)$4) ){ goto $label$17 }
	$20 = [9]
	goto $label$11 
	
.LABEL $label$30
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$20 }
	$20 = [0]
	goto $label$11 
	
.LABEL $label$29
	$5 = $9
	goto $label$21 
	
.LABEL $label$28
	if ( (*($9) == 0) ){ goto $label$16 }
	$20 = [4]
	goto $label$11 
	
.LABEL $label$27
	$18 = ($18 + [1])
	if ( ((int_32)$18 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$26
	$9 = $5
	if ( *($9) ){ goto $label$15 }
	$20 = [6]
	goto $label$11 
	
.LABEL $label$25
	*(($8 = CALL $7([72]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [24]) = *($2 + [8])
	*(($8 + [32])) = *($15)
	*(($8 + [40])) = *($14)
	*(($8 + [48])) = *($13)
	*(($8 + [56])) = *($12)
	*(($8 + [64])) = *($6)
	*($9) = $8
	*($8 + [16]) = *($2 + [56])
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$20 = [7]
	goto $label$11 
	
.LABEL $label$24
	*($1) = $5
	$8 = *($9)
	$20 = [8]
	goto $label$11 
	
.LABEL $label$23
	CALL $28(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$18 = ($18 + [1])
	if ( ((int_32)$18 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$22
	$20 = [2]
	goto $label$11 
	
.LABEL $label$21
	$20 = [1]
	goto $label$11 
	
.LABEL $label$20
	$20 = [3]
	goto $label$11 
	
.LABEL $label$19
	$20 = [11]
	goto $label$11 
	
.LABEL $label$18
	$20 = [1]
	goto $label$11 
	
.LABEL $label$17
	$20 = [3]
	goto $label$11 
	
.LABEL $label$16
	$20 = [6]
	goto $label$11 
	
.LABEL $label$15
	$20 = [4]
	goto $label$11 
	
.LABEL $label$14
	$20 = [5]
	goto $label$11 
	
.LABEL $label$13
	$20 = [5]
	goto $label$11 
	
.LABEL $label$12
	$20 = [8]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [96])
	$20
	return $0
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $122(($1 + [36]), *(($1 + [40])))
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	CALL $166(*($1), *($0 + [20]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	*($0) = *($1)
	*(($0 + [32])) = *(($1 + [32]))
	*(($0 + [24])) = *(($1 + [24]))
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
	*(($2 = ($0 + [40]))) = (int_64)0
	*($0 + [36]) = $2
	$4 = ($1 + [40])
	$3 = *($1 + [36])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	$5 = [0]
	$6 = ($0 + [36])
	$7 = ($0 + [44])
	$8 = ($3 + [16])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$3 }
	$10 = [28]
	goto $label$1 
	
.LABEL $label$3
	$10 = [3]
	goto $label$1 
	
.LABEL $label$2
	$10 = [29]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$38 
	
.LABEL $label$65
	$5 = *(($0 + [40]))
	$3 = $9
	$8 = ($3 + [16])
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$35 }
	$10 = [3]
	goto $label$4 
	
.LABEL $label$64
	$9 = $5
	$11 = $2
	if ( ($5 == 0) ){ goto $label$18 }
	$10 = [4]
	goto $label$4 
	
.LABEL $label$63
	$1 = $9
	$9 = *($1 + [4])
	if ( $9 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$62
	$1 = *($11 + [8])
	$9 = ((int_32)*($1) == (int_32)$11)
	$11 = $1
	if ( $9 ){ goto $label$17 }
	$10 = [5]
	goto $label$4 
	
.LABEL $label$61
	$12 = *($8)
	if ( (uint_64)(*($1 + [16]) <= $12) ){ goto $label$34 }
	$10 = [6]
	goto $label$4 
	
.LABEL $label$60
	if ( ($5 == 0) ){ goto $label$16 }
	$10 = [7]
	goto $label$4 
	
.LABEL $label$59
	$9 = $2
	$13 = *($5 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$58
	$9 = $5
	$5 = $1
	$13 = *($5 + [16])
	if ( ((uint_64)$12 >= (uint_64)$13) ){ goto $label$31 }
	$10 = [20]
	goto $label$4 
	
.LABEL $label$57
	$1 = *($5)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$56
	if ( ((uint_64)$13 >= (uint_64)$12) ){ goto $label$13 }
	$10 = [17]
	goto $label$4 
	
.LABEL $label$55
	$9 = ($5 + [4])
	$1 = *($5 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	$10 = [18]
	goto $label$4 
	
.LABEL $label$54
	$5 = $9
	goto $label$30 
	
.LABEL $label$53
	$1 = $2
	$10 = [24]
	goto $label$4 
	
.LABEL $label$52
	if ( ($5 == 0) ){ goto $label$5 }
	$10 = [25]
	goto $label$4 
	
.LABEL $label$51
	$5 = ($1 + [4])
	if ( (*($5) == 0) ){ goto $label$10 }
	$10 = [10]
	goto $label$4 
	
.LABEL $label$50
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$27 }
	$10 = [11]
	goto $label$4 
	
.LABEL $label$49
	$9 = *($3 + [8])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$24 }
	$10 = [12]
	goto $label$4 
	
.LABEL $label$48
	$11 = ($3 + [8])
	$10 = [13]
	goto $label$4 
	
.LABEL $label$47
	$1 = *($11)
	$11 = ($1 + [8])
	$9 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($9)) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$46
	$1 = $2
	$5 = $2
	if ( *($5) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$45
	$5 = $2
	$1 = $2
	goto $label$33 
	
.LABEL $label$44
	$1 = $5
	goto $label$32 
	
.LABEL $label$43
	$1 = $5
	$5 = $9
	if ( *($5) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$42
	$1 = $5
	$5 = $9
	$10 = [14]
	goto $label$4 
	
.LABEL $label$41
	*((($9 = CALL $7([72])) + [64])) = *(($8 + [48]))
	*(($9 + [56])) = *(($8 + [40]))
	*(($9 + [48])) = *(($8 + [32]))
	*(($9 + [40])) = *(($8 + [24]))
	*(($9 + [32])) = *(($8 + [16]))
	*(($9 + [24])) = *(($8 + [8]))
	*($9 + [16]) = *($8)
	*($9) = (int_64)0
	*($9 + [8]) = $1
	*($5) = $9
	$1 = *(*($6))
	if ( ($1 == 0) ){ goto $label$9 }
	$10 = [15]
	goto $label$4 
	
.LABEL $label$40
	*($6) = $1
	$9 = *($5)
	$10 = [16]
	goto $label$4 
	
.LABEL $label$39
	CALL $28(*(($0 + [40])), $9)
	*($7) = (*($7) + [1])
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$25 }
	$10 = [0]
	goto $label$4 
	
.LABEL $label$38
	$9 = $1
	$1 = *($9)
	if ( $1 ){ goto $label$26 }
	$10 = [1]
	goto $label$4 
	
.LABEL $label$37
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$21 }
	$10 = [29]
	goto $label$4 
	
.LABEL $label$36
	return $0
	
.LABEL $label$35
	$10 = [28]
	goto $label$4 
	
.LABEL $label$34
	$10 = [24]
	goto $label$4 
	
.LABEL $label$33
	$10 = [14]
	goto $label$4 
	
.LABEL $label$32
	$10 = [14]
	goto $label$4 
	
.LABEL $label$31
	$10 = [8]
	goto $label$4 
	
.LABEL $label$30
	$10 = [19]
	goto $label$4 
	
.LABEL $label$29
	$10 = [14]
	goto $label$4 
	
.LABEL $label$28
	$10 = [10]
	goto $label$4 
	
.LABEL $label$27
	$10 = [0]
	goto $label$4 
	
.LABEL $label$26
	$10 = [0]
	goto $label$4 
	
.LABEL $label$25
	$10 = [11]
	goto $label$4 
	
.LABEL $label$24
	$10 = [1]
	goto $label$4 
	
.LABEL $label$23
	$10 = [1]
	goto $label$4 
	
.LABEL $label$22
	$10 = [13]
	goto $label$4 
	
.LABEL $label$21
	$10 = [2]
	goto $label$4 
	
.LABEL $label$20
	$10 = [5]
	goto $label$4 
	
.LABEL $label$19
	$10 = [4]
	goto $label$4 
	
.LABEL $label$18
	$10 = [27]
	goto $label$4 
	
.LABEL $label$17
	$10 = [27]
	goto $label$4 
	
.LABEL $label$16
	$10 = [23]
	goto $label$4 
	
.LABEL $label$15
	$10 = [20]
	goto $label$4 
	
.LABEL $label$14
	$10 = [8]
	goto $label$4 
	
.LABEL $label$13
	$10 = [9]
	goto $label$4 
	
.LABEL $label$12
	$10 = [14]
	goto $label$4 
	
.LABEL $label$11
	$10 = [10]
	goto $label$4 
	
.LABEL $label$10
	$10 = [14]
	goto $label$4 
	
.LABEL $label$9
	$10 = [16]
	goto $label$4 
	
.LABEL $label$8
	$10 = [22]
	goto $label$4 
	
.LABEL $label$7
	$10 = [21]
	goto $label$4 
	
.LABEL $label$6
	$10 = [19]
	goto $label$4 
	
.LABEL $label$5
	$10 = [26]
	goto $label$4 
	return $10
}

int_32 .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$9 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$1 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $7
	$6 = ($8 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$3 = *($5)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	$6 = (*($5) + [8])
	*($5) = $6
	*($2 + [14]) = *($8 + [24])
	if ( ((int_32)(*($1) - $6) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9114])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, ($2 + [14]), [1])
	$3 = (*($5) + [1])
	*($5) = $3
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$7 = *($8 + [8])
	if ( ((int_32)*($7) == (int_32)$8) ){ goto $label$7 }
	$8 = ($8 + [8])
	
.LOOP $label$10:
	$6 = *($8)
	$8 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$10 }
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $35(($1 + [8]), *(($1 + [12])))
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	$7 = ($1 + [12])
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$4 }
	$8 = ($1 + [12])
	$10 = *($4 + [16])
	$9 = *($6)
	if ( ((uint_64)$9 >= (uint_64)$10) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$4 = $7
	$8 = $7
	$12 = [3]
	goto $label$1 
	
.LABEL $label$3
	$12 = [29]
	goto $label$1 
	
.LABEL $label$2
	$12 = [2]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$56 
	
.LABEL $label$60
	$8 = $4
	$4 = $11
	$10 = *($4 + [16])
	if ( ((uint_64)$9 >= (uint_64)$10) ){ goto $label$29 }
	$12 = [29]
	goto $label$5 
	
.LABEL $label$59
	$11 = *($4)
	if ( $11 ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$58
	if ( ((uint_64)$10 >= (uint_64)$9) ){ goto $label$24 }
	$12 = [28]
	goto $label$5 
	
.LABEL $label$57
	$8 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$27 }
	$12 = [0]
	goto $label$5 
	
.LABEL $label$56
	$4 = $8
	goto $label$28 
	
.LABEL $label$55
	$13 = ($1 + [8])
	$11 = *($8)
	if ( ($11 == 0) ){ goto $label$23 }
	$12 = [4]
	goto $label$5 
	
.LABEL $label$54
	$4 = *(($1 + [16]))
	goto $label$21 
	
.LABEL $label$53
	$13 = ($1 + [8])
	$8 = $4
	$11 = *($8)
	if ( $11 ){ goto $label$22 }
	$12 = [25]
	goto $label$5 
	
.LABEL $label$52
	*(($11 = CALL $7([32]))) = (int_64)0
	*($11 + [8]) = $4
	*($8) = $11
	*($11 + [24]) = [0]
	*($11 + [16]) = *($6)
	$4 = $11
	$6 = *(*($13))
	if ( ($6 == 0) ){ goto $label$6 }
	$12 = [26]
	goto $label$5 
	
.LABEL $label$51
	*($13) = $6
	$4 = *($8)
	$12 = [27]
	goto $label$5 
	
.LABEL $label$50
	CALL $28(*(($1 + [12])), $4)
	$4 = (*($4) + [1])
	*(($4 = ($1 + [16]))) = $4
	$12 = [5]
	goto $label$5 
	
.LABEL $label$49
	*(($11 + [24])) = [1]
	$9 = (CASTING uint_64)(uint_32 $4)
	$6 = [8]
	$12 = [6]
	goto $label$5 
	
.LABEL $label$48
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$20 }
	$12 = [7]
	goto $label$5 
	
.LABEL $label$47
	$8 = *($1 + [8])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$19 }
	$12 = [8]
	goto $label$5 
	
.LABEL $label$46
	$12 = [9]
	goto $label$5 
	
.LABEL $label$45
	$11 = $8
	$4 = *($11 + [4])
	if ( ($4 == 0) ){ goto $label$15 }
	$12 = [10]
	goto $label$5 
	
.LABEL $label$44
	$8 = $4
	$4 = *($8)
	if ( $4 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$43
	$8 = *($11 + [8])
	if ( ((int_32)*($8) == (int_32)$11) ){ goto $label$14 }
	$12 = [23]
	goto $label$5 
	
.LABEL $label$42
	$11 = ($11 + [8])
	$12 = [24]
	goto $label$5 
	
.LABEL $label$41
	$4 = *($11)
	$11 = ($4 + [8])
	$8 = *($4 + [8])
	if ( ((int_32)$4 != (int_32)*($8)) ){ goto $label$13 }
	$12 = [11]
	goto $label$5 
	
.LABEL $label$40
	$6 = ($6 + [9])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$18 }
	$12 = [12]
	goto $label$5 
	
.LABEL $label$39
	if ( ($6 <= [513]) ){ goto $label$12 }
	$12 = [21]
	goto $label$5 
	
.LABEL $label$38
	$4 = CALL $1($6)
	goto $label$11 
	
.LABEL $label$37
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$12 = [14]
	goto $label$5 
	
.LABEL $label$36
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	$8 = $4
	if ( ((int_32)$6 > (int_32)[7]) ){ goto $label$10 }
	$12 = [20]
	goto $label$5 
	
.LABEL $label$35
	CALL eosio_assert([0], [9114])
	$8 = *($3 + [4])
	$12 = [15]
	goto $label$5 
	
.LABEL $label$34
	CALL memcpy($8, $1, [8])
	*($3 + [4]) = ($8 + [8])
	CALL $162($3, $13)
	$9 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($5 + [8]), (int_64)-2507753476247781376, *(*($0 + [8])), $9, $4, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$9 }
	$12 = [16]
	goto $label$5 
	
.LABEL $label$33
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$8 }
	$12 = [18]
	goto $label$5 
	
.LABEL $label$32
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$31
	CALL $2($4)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$7 }
	$12 = [17]
	goto $label$5 
	
.LABEL $label$30
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$29
	$12 = [2]
	goto $label$5 
	
.LABEL $label$28
	$12 = [1]
	goto $label$5 
	
.LABEL $label$27
	$12 = [3]
	goto $label$5 
	
.LABEL $label$26
	$12 = [30]
	goto $label$5 
	
.LABEL $label$25
	$12 = [1]
	goto $label$5 
	
.LABEL $label$24
	$12 = [3]
	goto $label$5 
	
.LABEL $label$23
	$12 = [25]
	goto $label$5 
	
.LABEL $label$22
	$12 = [4]
	goto $label$5 
	
.LABEL $label$21
	$12 = [5]
	goto $label$5 
	
.LABEL $label$20
	$12 = [6]
	goto $label$5 
	
.LABEL $label$19
	$12 = [12]
	goto $label$5 
	
.LABEL $label$18
	$12 = [9]
	goto $label$5 
	
.LABEL $label$17
	$12 = [11]
	goto $label$5 
	
.LABEL $label$16
	$12 = [10]
	goto $label$5 
	
.LABEL $label$15
	$12 = [22]
	goto $label$5 
	
.LABEL $label$14
	$12 = [11]
	goto $label$5 
	
.LABEL $label$13
	$12 = [24]
	goto $label$5 
	
.LABEL $label$12
	$12 = [13]
	goto $label$5 
	
.LABEL $label$11
	$12 = [14]
	goto $label$5 
	
.LABEL $label$10
	$12 = [15]
	goto $label$5 
	
.LABEL $label$9
	$12 = [19]
	goto $label$5 
	
.LABEL $label$8
	$12 = [17]
	goto $label$5 
	
.LABEL $label$7
	$12 = [18]
	goto $label$5 
	
.LABEL $label$6
	$12 = [27]
	goto $label$5 
	$12
}

void .FUNC $169 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9677])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([64])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = [1]
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [48]) = $1
	*($3 + [36]) = ($3 + [40])
	CALL $170(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-9102017834344850240
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-9102017834344850240
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $165(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $122(($3 + [36]), *(($3 + [40])))
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [32])) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $171(($1 + [36]), *($3 + [36]), ($3 + [40]))
	
.LABEL $label$3
	$6 = *(($1 + [44]))
	$7 = [33]
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	$9 = ($1 + [40])
	$8 = *($1 + [36])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$6:
	$10 = $8
	$3 = *($10 + [4])
	if ( ($3 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = $3
	$3 = *($8)
	if ( $3 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$7 }
	$10 = ($10 + [8])
	
.LOOP $label$10:
	$3 = *($10)
	$10 = ($3 + [8])
	$8 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($8)) ){ goto $label$10 }
	
.LABEL $label$7
	$7 = ($7 + [56])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($7 <= [513]) ){ goto $label$12 }
	$3 = CALL $1($7)
	goto $label$11 
	
.LABEL $label$12
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$11
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $7)
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [36])
	CALL $172(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)(int_64)-9102017834344850240) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-9102017834344850240) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = (int_64)-9102017834344850239
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [48])
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $35($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$4 }
	$11 = ($1 + [4])
	$6 = [0]
	$12 = ($0 + [8])
	if ( ((uint_32)(*($12) - $9) > (uint_32)[7]) ){ goto $label$5 }
	$13 = [7]
	goto $label$3 
	
.LABEL $label$5
	$13 = [0]
	goto $label$3 
	
.LABEL $label$4
	$13 = [8]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$40 
	
.LABEL $label$42
	$9 = *($7)
	if ( ((uint_32)(*($12) - $9) > (uint_32)[7]) ){ goto $label$22 }
	$13 = [7]
	goto $label$6 
	
.LABEL $label$41
	CALL eosio_assert([0], [9334])
	$9 = *(($0 + [4]))
	$13 = [0]
	goto $label$6 
	
.LABEL $label$40
	CALL memcpy($2, $9, [8])
	$5 = (*($7) + [8])
	*(($7 = ($0 + [4]))) = $5
	if ( ((int_32)*($12) != (int_32)$5) ){ goto $label$23 }
	$13 = [18]
	goto $label$6 
	
.LABEL $label$39
	CALL eosio_assert([0], [9334])
	$5 = *($7)
	$13 = [1]
	goto $label$6 
	
.LABEL $label$38
	CALL memcpy(($2 + [15]), $5, [1])
	*($7) = (*($7) + [1])
	$14 = *($2 + [15])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$21 }
	$13 = [2]
	goto $label$6 
	
.LABEL $label$37
	$9 = $11
	$15 = *($5 + [16])
	$4 = *($2)
	if ( ((uint_64)$4 >= (uint_64)$15) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$36
	$9 = $5
	$5 = $8
	$15 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$15) ){ goto $label$18 }
	$13 = [15]
	goto $label$6 
	
.LABEL $label$35
	$8 = *($5)
	if ( $8 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$34
	if ( ((uint_64)$15 >= (uint_64)$4) ){ goto $label$16 }
	$13 = [12]
	goto $label$6 
	
.LABEL $label$33
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$17 }
	$13 = [13]
	goto $label$6 
	
.LABEL $label$32
	$5 = $9
	goto $label$7 
	
.LABEL $label$31
	$5 = $3
	$9 = $3
	$13 = [4]
	goto $label$6 
	
.LABEL $label$30
	if ( (*($9) == 0) ){ goto $label$15 }
	$13 = [5]
	goto $label$6 
	
.LABEL $label$29
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$28
	$9 = $5
	if ( *($9) ){ goto $label$14 }
	$13 = [9]
	goto $label$6 
	
.LABEL $label$27
	*(($8 = CALL $7([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [24]) = ((int_32)$14 != (int_32)[0])
	*($8 + [16]) = *($2)
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$10 }
	$13 = [10]
	goto $label$6 
	
.LABEL $label$26
	*($1) = $5
	$8 = *($9)
	$13 = [11]
	goto $label$6 
	
.LABEL $label$25
	CALL $28(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$11 }
	$13 = [8]
	goto $label$6 
	
.LABEL $label$24
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$23
	$13 = [1]
	goto $label$6 
	
.LABEL $label$22
	$13 = [0]
	goto $label$6 
	
.LABEL $label$21
	$13 = [17]
	goto $label$6 
	
.LABEL $label$20
	$13 = [15]
	goto $label$6 
	
.LABEL $label$19
	$13 = [3]
	goto $label$6 
	
.LABEL $label$18
	$13 = [3]
	goto $label$6 
	
.LABEL $label$17
	$13 = [4]
	goto $label$6 
	
.LABEL $label$16
	$13 = [4]
	goto $label$6 
	
.LABEL $label$15
	$13 = [9]
	goto $label$6 
	
.LABEL $label$14
	$13 = [5]
	goto $label$6 
	
.LABEL $label$13
	$13 = [8]
	goto $label$6 
	
.LABEL $label$12
	$13 = [6]
	goto $label$6 
	
.LABEL $label$11
	$13 = [6]
	goto $label$6 
	
.LABEL $label$10
	$13 = [11]
	goto $label$6 
	
.LABEL $label$9
	$13 = [16]
	goto $label$6 
	
.LABEL $label$8
	$13 = [14]
	goto $label$6 
	
.LABEL $label$7
	$13 = [14]
	goto $label$6 
	return $13
}

void .FUNC $58 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	CALL require_auth(*($0))
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$6 }
	if ( uint_32($3 >> [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( (*($2 + [4]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_64)($1 == 0) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [8461])
	if ( (int_64)($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_64)*(($0 + [200])) >= (uint_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8442])
	
.LABEL $label$1
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth($1)
	$3 = ($0 + [232])
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($3, $6) + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
}

void .FUNC $50 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL require_auth($3)
	$5 = ($0 + [232])
	$7 = *(($0 + [260]))
	$6 = *(($0 + [256]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($9 + [20]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL db_find_i64(*($5), *(($0 + [240])), (int_64)4344997574076792832, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($5, $8) + [20]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	if ( ((uint_64)*(($0 + [192])) >= (uint_64)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$6
	$8 = *($2)
	if ( ($8 & [1]) ){ goto $label$9 }
	if ( uint_32($8 >> [1]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	if ( *($2 + [4]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8421])
	
.LABEL $label$7
	$1 = ((int_64)*($8) + (int_64)1)
	*(($8 = ($0 + [200]))) = $1
	CALL $52($0)
	$3 = *($0)
	*(($8 = CALL $7([16]))) = $3
	*($8 + [8]) = (int_64)4977216460058263552
	*($4) = $8
	$8 = ($8 + [16])
	*($4 + [8]) = $8
	*($4 + [4]) = $8
	CALL $47($3, (int_64)4946525946610974720, $4, $1)
	$8 = *($4)
	if ( ($8 == 0) ){ goto $label$10 }
	*($4 + [4]) = $8
	CALL $9($8)
	
.LABEL $label$10
	$global$0 = ($4 + [16])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL $7([32]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [20]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $109(($3 + [32]), $8)
	*($5 + [24]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $93(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $52 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	float_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	float_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$1 = ($global$0 - [160])
	$global$0 = $1
	$2 = ((int_64)(CASTING uint_64)(uint_32 ((uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $16() / (int_64)1000000)) / (uint_32)[86400])) + (int_64)-1)
	if ( ((uint_64)$2 <= (uint_64)*(($0 + [208]))) ){ goto $label$2 }
	$3 = CALL $53($0)
	CALL prints([9141])
	$4 = ((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 $3) * (float_64)(float_64)0.009758) * (float_64)(float_64)86400) / (float_64)(float_64)31449600)
	CALL printdf($4)
	CALL prints([8285])
	$3 = *($0 + [32])
	*($1 + [72]) = [8295]
	*($1 + [76]) = CALL $17([8295])
	*($1 + [8]) = *($1 + [72])
	$5 = *(CALL $36(($1 + [80]), ($1 + [8])))
	$6 = *($0 + [32])
	*($1 + [56]) = [9161]
	*($1 + [60]) = CALL $17([9161])
	*($1) = *($1 + [56])
	if ( (((float_64)$4 < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$4 }
	$7 = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$7 = (Rounds 0)($4)
	
.LABEL $label$3
	$8 = CALL $36(($1 + [64]), $1)
	*($1 + [24]) = $7
	*($1 + [16]) = $2
	$9 = ((float_64)$4 * (float_64)(float_64)0.15)
	if ( (((float_64)$9 < (float_64)(float_64)18446744073709551615) & ((float_64)$9 >= (float_64)(float_64)0)) ){ goto $label$6 }
	$7 = (int_64)0
	goto $label$5 
	
.LABEL $label$6
	$7 = (Rounds 0)($9)
	
.LABEL $label$5
	*($1 + [32]) = ((int_64)$7 + (int_64)13000000000)
	$9 = ((float_64)$4 * (float_64)(float_64)0.8)
	if ( (((float_64)$9 < (float_64)(float_64)18446744073709551615) & ((float_64)$9 >= (float_64)(float_64)0)) ){ goto $label$8 }
	$7 = (int_64)0
	goto $label$7 
	
.LABEL $label$8
	$7 = (Rounds 0)($9)
	
.LABEL $label$7
	$7 = ((int_64)$7 + (int_64)7000000000)
	*($1 + [40]) = $7
	$4 = ((float_64)$4 * (float_64)(float_64)0.05)
	if ( (((float_64)$4 < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$10 }
	$10 = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$10 = (Rounds 0)($4)
	
.LABEL $label$9
	*($1 + [48]) = $10
	*($1 + [88]) = $6
	*($1 + [96]) = *($8)
	*(($8 = CALL $7([16]))) = $3
	*($8 + [8]) = $5
	*(($1 + [124])) = [0]
	$11 = ($8 + [16])
	*(($1 + [112])) = $11
	*(($1 + [108])) = $11
	*($1 + [104]) = $8
	*($1 + [116 align=4]) = (int_64)0
	CALL $37(($1 + [116]), [40])
	$12 = ($1 + [120])
	$8 = *($12)
	$11 = *($1 + [116])
	*($1 + [132]) = $11
	*($1 + [128]) = $11
	*($1 + [136]) = $8
	*($1 + [144]) = ($1 + [128])
	*($1 + [152]) = ($1 + [16])
	CALL $54(($1 + [152]), ($1 + [144]))
	CALL $39(($1 + [88]))
	$8 = *($1 + [116])
	if ( ($8 == 0) ){ goto $label$11 }
	*($12) = $8
	CALL $9($8)
	
.LABEL $label$11
	$8 = *($1 + [104])
	if ( ($8 == 0) ){ goto $label$12 }
	*(($1 + [108])) = $8
	CALL $9($8)
	
.LABEL $label$12
	CALL prints([9172])
	CALL printui($2)
	CALL prints([8285])
	$13 = ($0 + [224])
	$8 = *($13)
	if ( ($8 == 0) ){ goto $label$14 }
	$11 = $13
	
.LOOP $label$15:
	$12 = (uint_64)(*($8 + [16]) <= $2)
	$11 = ( $11 ? $8 : $12 )
	$8 = *(($8 + ($12 << [2])))
	if ( $8 ){ goto $label$15 }
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$14 }
	if ( ((uint_64)$2 >= (uint_64)*($11 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	CALL prints([9190])
	$8 = *($13)
	if ( ($8 == 0) ){ goto $label$18 }
	$13 = ($0 + [224])
	$3 = *($8 + [16])
	if ( ((uint_64)$2 >= (uint_64)$3) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$8 = $13
	$14 = [3]
	goto $label$1 
	
.LABEL $label$17
	$14 = [10]
	goto $label$1 
	
.LABEL $label$16
	$14 = [2]
	goto $label$1 
	
.LABEL $label$13
	$14 = [4]
	goto $label$1 
	
.LABEL $label$2
	$14 = [5]
	
.LABEL $label$1
	
.LOOP $label$19:
	goto $label$37 
	
.LABEL $label$41
	$13 = $8
	$8 = $11
	$3 = *($8 + [16])
	if ( ((uint_64)$2 >= (uint_64)$3) ){ goto $label$29 }
	$14 = [10]
	goto $label$19 
	
.LABEL $label$40
	$11 = *($8)
	if ( $11 ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$39
	if ( ((uint_64)$3 >= (uint_64)$2) ){ goto $label$24 }
	$14 = [9]
	goto $label$19 
	
.LABEL $label$38
	$13 = ($8 + [4])
	$11 = *($8 + [4])
	if ( ($11 == 0) ){ goto $label$27 }
	$14 = [0]
	goto $label$19 
	
.LABEL $label$37
	$8 = $13
	goto $label$28 
	
.LABEL $label$36
	$11 = *($13)
	if ( $11 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$35
	$13 = $8
	$11 = *($13)
	if ( $11 ){ goto $label$21 }
	$14 = [6]
	goto $label$19 
	
.LABEL $label$34
	*(($11 = CALL $7([72])) + [24]) = (int_64)0
	*($11 + [32]) = (int_64)0
	*($11 + [40]) = (int_64)0
	*($11 + [48]) = (int_64)0
	*($11 + [56]) = (int_64)0
	*($11 + [64]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [8]) = $8
	*($13) = $11
	*($11 + [16]) = $2
	$8 = $11
	$12 = ($0 + [220])
	$15 = *(*($12))
	if ( ($15 == 0) ){ goto $label$20 }
	$14 = [7]
	goto $label$19 
	
.LABEL $label$33
	*($12) = $15
	$8 = *($13)
	$14 = [8]
	goto $label$19 
	
.LABEL $label$32
	CALL $28(*(($0 + [224])), $8)
	*(($8 = ($0 + [228]))) = (*($8) + [1])
	$14 = [4]
	goto $label$19 
	
.LABEL $label$31
	*(($11 + [48])) = (int_64)0
	*(($11 + [56])) = $7
	*(($11 + [64])) = (int_64)0
	*(($1 + [104])) = *(($11 + [40]))
	*(($1 + [96])) = *(($11 + [32]))
	*($1 + [88]) = *(($11 + [24]))
	CALL prints([9203])
	*(($0 + [208])) = $2
	$14 = [5]
	goto $label$19 
	
.LABEL $label$30
	$global$0 = ($1 + [160])
	return 
	
.LABEL $label$29
	$14 = [2]
	goto $label$19 
	
.LABEL $label$28
	$14 = [1]
	goto $label$19 
	
.LABEL $label$27
	$14 = [3]
	goto $label$19 
	
.LABEL $label$26
	$14 = [11]
	goto $label$19 
	
.LABEL $label$25
	$14 = [1]
	goto $label$19 
	
.LABEL $label$24
	$14 = [3]
	goto $label$19 
	
.LABEL $label$23
	$14 = [6]
	goto $label$19 
	
.LABEL $label$22
	$14 = [4]
	goto $label$19 
	
.LABEL $label$21
	$14 = [4]
	goto $label$19 
	
.LABEL $label$20
	$14 = [8]
	goto $label$19 
	$14
}

int_64 .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL prints([9226])
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0 + [32])
	*($1 + [8]) = $2
	$3 = (uint_64)*($0 + [56]) >> (uint_64)(int_64)8
	*($1 + [16]) = $3)
	$0 = CALL db_find_i64($2, $3, (int_64)-4157508551318700032, $3)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $151(($1 + [8]), $0)
	if ( ((int_32)*($0 + [44]) == (int_32)($1 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	$3 = *($0)
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $9($6)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($1 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($1 + [48])
	return $3
	
.LABEL $label$1
	CALL eosio_assert([0], [9239])
	return (unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [32])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $55 (int_32 $0, int_64 $1)
{
}

void .FUNC $56 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	if ( (int_64)($1 == 0) ){ goto $label$2 }
	if ( ((uint_64)*(($0 + [200])) >= (uint_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8442])
	
.LABEL $label$1
	$0 = *($2)
	if ( ($0 & [1]) ){ goto $label$5 }
	if ( uint_32($0 >> [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( (*($2 + [4]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL require_auth($3)
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [8421])
	CALL require_auth($3)
}

void .FUNC $57 (int_32 $0, int_64 $1, int_64 $2)
{
	if ( (int_64)($1 == 0) ){ goto $label$2 }
	if ( ((uint_64)*(($0 + [200])) >= (uint_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8442])
	
.LABEL $label$1
	CALL require_auth($2)
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [8]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$5 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$1 = ($0 + [8])
	$8 = ($0 + [4])
	$9 = ($2 + [20])
	$10 = ($2 + [28])
	
.LOOP $label$4:
	$6 = ($7 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$3 = *($8)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	*($8) = (*($8) + [8])
	*($2) = $0
	*((($2 + [8]) + [8])) = ($7 + [40])
	*($9) = ($7 + [48])
	*((($2 + [8]) + [16])) = ($7 + [56])
	*($10) = ($7 + [64])
	*($2 + [12]) = ($7 + [32])
	*($2 + [8]) = ($7 + [24])
	CALL $174(($2 + [8]), $2)
	$3 = *($7 + [4])
	if ( ($3 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = $3
	$3 = *($6)
	if ( $3 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$6 }
	$7 = ($7 + [8])
	
.LOOP $label$9:
	$3 = *($7)
	$7 = ($3 + [8])
	$6 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$3 = *($8)
	$7 = $6
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [1]
	*($5 + [44]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	*($3 + [44]) = ($5 + [40])
	CALL $152(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $153(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$1 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$9 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $7
	$6 = ($8 + [16])
	if ( ((int_32)(*($9) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$3 = *($5)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	$3 = (*($5) + [8])
	*($5) = $3
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$7 = *($8 + [8])
	if ( ((int_32)*($7) == (int_32)$8) ){ goto $label$6 }
	$8 = ($8 + [8])
	
.LOOP $label$9:
	$6 = *($8)
	$8 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$9 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$1 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $7
	$6 = ($8 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$3 = *($5)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	$6 = (*($5) + [8])
	*($5) = $6
	$7 = ($8 + [24])
	if ( ((int_32)(*($1) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9114])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, $7, [8])
	$3 = (*($5) + [8])
	*($5) = $3
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$7 = *($8 + [8])
	if ( ((int_32)*($7) == (int_32)$8) ){ goto $label$7 }
	$8 = ($8 + [8])
	
.LOOP $label$10:
	$6 = *($8)
	$8 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$10 }
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = *($0)
	$3 = *(*($0 + [4]))
	$4 = ($1 + [40])
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$4 }
	$4 = ($1 + [40])
	$6 = *($0 + [16])
	$5 = *($2)
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	$8 = [3]
	goto $label$1 
	
.LABEL $label$3
	$8 = [9]
	goto $label$1 
	
.LABEL $label$2
	$8 = [2]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$22 
	
.LABEL $label$26
	$4 = $0
	$0 = $7
	$6 = *($0 + [16])
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$15 }
	$8 = [9]
	goto $label$5 
	
.LABEL $label$25
	$7 = *($0)
	if ( $7 ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$24
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$10 }
	$8 = [8]
	goto $label$5 
	
.LABEL $label$23
	$4 = ($0 + [4])
	$7 = *($0 + [4])
	if ( ($7 == 0) ){ goto $label$13 }
	$8 = [0]
	goto $label$5 
	
.LABEL $label$22
	$0 = $4
	goto $label$14 
	
.LABEL $label$21
	$7 = *($4)
	if ( $7 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$20
	$4 = $0
	$7 = *($4)
	if ( $7 ){ goto $label$7 }
	$8 = [5]
	goto $label$5 
	
.LABEL $label$19
	*(($7 = CALL $7([32]))) = (int_64)0
	*($7 + [8]) = $0
	*($4) = $7
	$5 = *($2)
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = $5
	$0 = $7
	$2 = ($1 + [36])
	$9 = *(*($2))
	if ( ($9 == 0) ){ goto $label$6 }
	$8 = [6]
	goto $label$5 
	
.LABEL $label$18
	*($2) = $9
	$0 = *($4)
	$8 = [7]
	goto $label$5 
	
.LABEL $label$17
	CALL $28(*(($1 + [40])), $0)
	*(($0 = ($1 + [44]))) = (*($0) + [1])
	$8 = [4]
	goto $label$5 
	
.LABEL $label$16
	*(($0 = ($7 + [24]))) = ((int_64)*($0) + (int_64)$3)
	CALL prints([9662])
	CALL printui(*($0))
	CALL prints([8285])
	return 
	
.LABEL $label$15
	$8 = [2]
	goto $label$5 
	
.LABEL $label$14
	$8 = [1]
	goto $label$5 
	
.LABEL $label$13
	$8 = [3]
	goto $label$5 
	
.LABEL $label$12
	$8 = [10]
	goto $label$5 
	
.LABEL $label$11
	$8 = [1]
	goto $label$5 
	
.LABEL $label$10
	$8 = [3]
	goto $label$5 
	
.LABEL $label$9
	$8 = [5]
	goto $label$5 
	
.LABEL $label$8
	$8 = [4]
	goto $label$5 
	
.LABEL $label$7
	$8 = [4]
	goto $label$5 
	
.LABEL $label$6
	$8 = [7]
	goto $label$5 
	$8
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $68($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = ($0 + [8])
	$6 = [0]
	
.LOOP $label$4:
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($12) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $9, [8])
	*(($7 = ($0 + [4]))) = (*($7) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$13 = *($5 + [16])
	$4 = *($2 + [8])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$14 = [3]
	goto $label$6 
	
.LABEL $label$8
	$14 = [10]
	goto $label$6 
	
.LABEL $label$7
	$14 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$29 
	
.LABEL $label$33
	$9 = $5
	$5 = $8
	$13 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$22 }
	$14 = [10]
	goto $label$11 
	
.LABEL $label$32
	$8 = *($5)
	if ( $8 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$31
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$17 }
	$14 = [9]
	goto $label$11 
	
.LABEL $label$30
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$20 }
	$14 = [0]
	goto $label$11 
	
.LABEL $label$29
	$5 = $9
	goto $label$21 
	
.LABEL $label$28
	if ( (*($9) == 0) ){ goto $label$16 }
	$14 = [4]
	goto $label$11 
	
.LABEL $label$27
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$26
	$9 = $5
	if ( *($9) ){ goto $label$15 }
	$14 = [6]
	goto $label$11 
	
.LABEL $label$25
	*(($8 = CALL $7([24]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [16]) = *($2 + [8])
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$14 = [7]
	goto $label$11 
	
.LABEL $label$24
	*($1) = $5
	$8 = *($9)
	$14 = [8]
	goto $label$11 
	
.LABEL $label$23
	CALL $28(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$22
	$14 = [2]
	goto $label$11 
	
.LABEL $label$21
	$14 = [1]
	goto $label$11 
	
.LABEL $label$20
	$14 = [3]
	goto $label$11 
	
.LABEL $label$19
	$14 = [11]
	goto $label$11 
	
.LABEL $label$18
	$14 = [1]
	goto $label$11 
	
.LABEL $label$17
	$14 = [3]
	goto $label$11 
	
.LABEL $label$16
	$14 = [6]
	goto $label$11 
	
.LABEL $label$15
	$14 = [4]
	goto $label$11 
	
.LABEL $label$14
	$14 = [5]
	goto $label$11 
	
.LABEL $label$13
	$14 = [5]
	goto $label$11 
	
.LABEL $label$12
	$14 = [8]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	$14
	return $0
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $185($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9334])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $69 (int_32 $0, int_64 $1)
{
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $68($0, *($1))
	CALL $68($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

void .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = CALL $16()
	CALL prints([9339])
	$2 = (CASTING uint_64)(uint_32 ((uint_32)(CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000)) / (uint_32)[86400]))
	CALL printui($2)
	CALL prints([8285])
	$3 = ($0 + [224])
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = $3
	
.LOOP $label$7:
	$6 = (uint_64)(*($4 + [16]) <= $2)
	$5 = ( $5 ? $4 : $6 )
	$4 = *(($4 + ($6 << [2])))
	if ( $4 ){ goto $label$7 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ((uint_64)*($5 + [16]) <= (uint_64)$2) ){ goto $label$5 }
	
.LABEL $label$6
	CALL prints([9190])
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$8 }
	$3 = ($0 + [224])
	$7 = *($4 + [16])
	if ( ((uint_64)$7 <= (uint_64)$2) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$8
	$4 = $3
	$8 = [3]
	goto $label$1 
	
.LABEL $label$5
	CALL prints([9345])
	goto $label$2 
	
.LABEL $label$4
	$8 = [9]
	goto $label$1 
	
.LABEL $label$3
	$8 = [2]
	goto $label$1 
	
.LABEL $label$2
	$8 = [4]
	
.LABEL $label$1
	
.LOOP $label$9:
	goto $label$26 
	
.LABEL $label$30
	$3 = $4
	$4 = $5
	$7 = *($4 + [16])
	if ( ((uint_64)$7 <= (uint_64)$2) ){ goto $label$19 }
	$8 = [9]
	goto $label$9 
	
.LABEL $label$29
	$5 = *($4)
	if ( $5 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$28
	if ( ((uint_64)$7 >= (uint_64)$2) ){ goto $label$14 }
	$8 = [8]
	goto $label$9 
	
.LABEL $label$27
	$3 = ($4 + [4])
	$5 = *($4 + [4])
	if ( ($5 == 0) ){ goto $label$17 }
	$8 = [0]
	goto $label$9 
	
.LABEL $label$26
	$4 = $3
	goto $label$18 
	
.LABEL $label$25
	$5 = *($3)
	if ( $5 ){ goto $label$13 }
	$8 = [5]
	goto $label$9 
	
.LABEL $label$24
	*(($5 = CALL $7([72])) + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [8]) = $4
	*($3) = $5
	*($5 + [16]) = $2
	$4 = $5
	$6 = ($0 + [220])
	$9 = *(*($6))
	if ( ($9 == 0) ){ goto $label$10 }
	$8 = [6]
	goto $label$9 
	
.LABEL $label$23
	*($6) = $9
	$4 = *($3)
	$8 = [7]
	goto $label$9 
	
.LABEL $label$22
	CALL $28(*(($0 + [224])), $4)
	*(($4 = ($0 + [228]))) = (*($4) + [1])
	goto $label$12 
	
.LABEL $label$21
	$3 = $4
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$11 }
	$8 = [4]
	goto $label$9 
	
.LABEL $label$20
	$4 = ($5 + [24])
	$2 = *($4)
	$3 = ($5 + [64])
	*(($6 = (($1 + [8]) + [32]))) = *($3)
	$9 = ($5 + [56])
	*(($0 = (($1 + [8]) + [24]))) = *($9)
	$2 = ((int_64)$2 + (int_64)1)
	*($4) = $2
	*(($1 + [16])) = *(($5 + [40]))
	*(($1 + [24])) = *(($5 + [48]))
	*($9) = *($0)
	*($3) = *($6)
	*($1 + [8]) = *(($5 + [32]))
	CALL prints([9358])
	CALL printui($2)
	CALL prints([8285])
	$global$0 = ($1 + [48])
	return 
	
.LABEL $label$19
	$8 = [2]
	goto $label$9 
	
.LABEL $label$18
	$8 = [1]
	goto $label$9 
	
.LABEL $label$17
	$8 = [3]
	goto $label$9 
	
.LABEL $label$16
	$8 = [10]
	goto $label$9 
	
.LABEL $label$15
	$8 = [1]
	goto $label$9 
	
.LABEL $label$14
	$8 = [3]
	goto $label$9 
	
.LABEL $label$13
	$8 = [4]
	goto $label$9 
	
.LABEL $label$12
	$8 = [4]
	goto $label$9 
	
.LABEL $label$11
	$8 = [5]
	goto $label$9 
	
.LABEL $label$10
	$8 = [7]
	goto $label$9 
	$8
}

int_32 .FUNC $64 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [76])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($0 + [80])) = $1
	CALL $9($1)
	
.LABEL $label$1
	$2 = *($0 + [64])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = ($0 + [68])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = ($4 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [-4])))
	
.LABEL $label$6
	$4 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$5 }
	$1 = *(($0 + [64]))
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	
.LABEL $label$3
	*($3) = $2
	CALL $9($1)
	
.LABEL $label$2
	$2 = *($0 + [52])
	if ( ($2 == 0) ){ goto $label$7 }
	$3 = ($0 + [56])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($4 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [-4])))
	
.LABEL $label$11
	$4 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$10 }
	$1 = *(($0 + [52]))
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $9($1)
	
.LABEL $label$7
	if ( (*($0 + [40]) & [1]) ){ goto $label$16 }
	if ( (*($0 + [28]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $9(*(($0 + [48])))
	if ( ((*($0 + [28]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $9(*(($0 + [36])))
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( (*($0 + [16]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	return $0
	
.LABEL $label$12
	CALL $9(*(($0 + [24])))
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $32(($1 + [36]), *(($1 + [40])))
	CALL $68(($1 + [24]), *(($1 + [28])))
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	*($1 + [16]) = ((int_64)CALL $16() / (int_64)1000000)
	$3 = *($3 + [8])
	*($1 + [8]) = *($3 + [8])
	*($1 + [20]) = ((int_32)*(($3 + [68])) != (int_32)*($3 + [64]))
	*(($3 = $2) + [16]) = [0]
	*($3) = ($3 + [16])
	$5 = ($1 + [8])
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	$6 = ($1 + [16])
	*($3 + [32]) = $6
	$7 = ($1 + [20])
	*($3 + [36]) = $7
	$8 = ($1 + [24])
	*($3 + [40]) = $8
	$9 = ($1 + [36])
	*($3 + [44]) = $9
	CALL $41(($3 + [24]), $3)
	$10 = *($3 + [16])
	if ( ($10 <= [513]) ){ goto $label$2 }
	$2 = CALL $1($10)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($10 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $10)
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $6
	*($3 + [36]) = $7
	*($3 + [40]) = $8
	*($3 + [44]) = $9
	CALL $42(($3 + [24]), ($3 + [16]))
	$11 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5966816507475263488, *(*($0 + [8])), $11, $2, $10)
	if ( ($10 <= [513]) ){ goto $label$3 }
	CALL $2($2)
	
.LABEL $label$3
	if ( (uint_64)($11 <= *($4 + [16])) ){ goto $label$4 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$11 = *(($4 + [8]))
	$12 = *(*(($0 + [8])))
	$13 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [56]) = CALL db_idx64_store($11, (int_64)-5966816507475263488, $12, $13, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL require_auth(*($1 + [8]))
	$3 = ($0 + [232])
	$4 = *($1 + [8])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)4344997574076792832, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($3, $7) + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	$7 = CALL $62(($2 + [48]), $1)
	CALL $63($0, $7)
	CALL $64($7)
	$4 = ((int_64)*($7) + (int_64)1)
	*(($7 = ($0 + [192]))) = $4
	*($2 + [40]) = $4
	CALL $65($0)
	CALL $52($0)
	$4 = *($0)
	*($2 + [28]) = $0
	*($2 + [32]) = $1
	*($2 + [24]) = ($2 + [40])
	*($2 + [152]) = $4
	$6 = ($0 + [64])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [64])) ){ goto $label$6 }
	CALL eosio_assert([0], [9677])
	
.LABEL $label$6
	*($2 + [160]) = $6
	*($2 + [164]) = ($2 + [24])
	*($2 + [168]) = ($2 + [152])
	*(($7 = CALL $7([64])) + [20]) = [0]
	*($7 + [8]) = (int_64)0
	*($7 + [28 align=4]) = (int_64)0
	*($7 + [40 align=4]) = (int_64)0
	*($7 + [48]) = $6
	*($7 + [24]) = ($7 + [28])
	*($7 + [36]) = ($7 + [40])
	CALL $66(($2 + [160]), $7)
	*($2 + [144]) = $7
	$4 = *($7)
	*($2 + [160]) = $4
	$5 = *($7 + [52])
	*($2 + [140]) = $5
	$8 = ($0 + [92])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [96]))) ){ goto $label$9 }
	*($6 + [8]) = $4
	*($6 + [16]) = $5
	*($2 + [144]) = [0]
	*($6) = $7
	*($8) = ($6 + [24])
	$7 = *($2 + [144])
	*($2 + [144]) = [0]
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $67(($0 + [88]), ($2 + [144]), ($2 + [160]), ($2 + [140]))
	$7 = *($2 + [144])
	*($2 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $32(($7 + [36]), *(($7 + [40])))
	CALL $68(($7 + [24]), *(($7 + [28])))
	CALL $9($7)
	
.LABEL $label$7
	$4 = *($0)
	*($2 + [8]) = [8484]
	*($2 + [12]) = CALL $17([8484])
	*($2) = *($2 + [8])
	$9 = *(CALL $36(($2 + [16]), $2))
	$10 = *($2 + [40])
	*(($7 = CALL $7([16]))) = $4
	*($7 + [8]) = $9
	*($2 + [160]) = $7
	$7 = ($7 + [16])
	*($2 + [168]) = $7
	*($2 + [164]) = $7
	CALL $47($4, (int_64)-5966821850414579712, ($2 + [160]), $10)
	$7 = *($2 + [160])
	if ( ($7 == 0) ){ goto $label$10 }
	*($2 + [164]) = $7
	CALL $9($7)
	
.LABEL $label$10
	CALL prints([8489])
	$global$0 = ($2 + [176])
}

void .FUNC $60 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth($1)
	$3 = ($0 + [232])
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($3, $6) + [20]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($1 + [16])
	if ( ($2 & [1]) ){ goto $label$3 }
	if ( uint_32($2 >> [1]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( *(($1 + [20])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8616])
	
.LABEL $label$1
	if ( ((int_32)*($1 + [52]) != (int_32)*(($1 + [56]))) ){ goto $label$4 }
	if ( ((int_32)*($1 + [64]) != (int_32)*(($1 + [68]))) ){ goto $label$4 }
	CALL eosio_assert([0], [8650])
	
.LABEL $label$4
	$3 = ($1 + [80])
	$4 = *($3)
	$2 = *($1 + [76])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$9 }
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [8682])
	$2 = *(($1 + [76]))
	$4 = *($3)
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8716])
	$4 = *(($1 + [80]))
	$2 = *(($1 + [76]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$1 = ($0 + [184])
	
.LOOP $label$10:
	if ( ((uint_64)*($2) <= (uint_64)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [8385])
	
.LABEL $label$11
	$2 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$5
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	CALL $20(($0 + [16]), ($1 + [16]))
	CALL $20(($0 + [28]), ($1 + [28]))
	CALL $20(($0 + [40]), ($1 + [40]))
	*($0 + [52 align=4]) = (int_64)0
	*(($0 + [60])) = [0]
	$2 = (*(($1 + [56])) - *($1 + [52]))
	$3 = ((int_32)$2 / (int_32)[12])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$3 }
	$5 = CALL $7($2)
	*(($4 = ($0 + [56]))) = $5
	*(($0 + [60])) = ($5 + ((int_32)$3 * (int_32)[12]))
	*(($0 + [52])) = $5
	$3 = *(($1 + [56]))
	$2 = *(($1 + [52]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $20($5, $2)
	$5 = (*($4) + [12])
	*($4) = $5
	$2 = ($2 + [12])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$5 }
	
.LABEL $label$4
	*($0 + [64 align=4]) = (int_64)0
	*(($0 + [72])) = [0]
	$2 = (*(($1 + [68])) - *($1 + [64]))
	$3 = ((int_32)$2 / (int_32)[12])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = CALL $7($2)
	*(($4 = ($0 + [68]))) = $5
	*(($0 + [72])) = ($5 + ((int_32)$3 * (int_32)[12]))
	*(($0 + [64])) = $5
	$3 = *(($1 + [68]))
	$2 = *(($1 + [64]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	CALL $20($5, $2)
	$5 = (*($4) + [12])
	*($4) = $5
	$2 = ($2 + [12])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$6
	*($0 + [76 align=4]) = (int_64)0
	*(($0 + [84])) = [0]
	$2 = (*(($1 + [80])) - *($1 + [76]))
	if ( ($2 == 0) ){ goto $label$8 }
	$5 = int_32($2 >> [3])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $7($2)
	*(($0 + [76])) = $2
	*(($0 + [84])) = ($2 + ($5 << [3]))
	*(($5 = ($0 + [80]))) = $2
	$1 = *(($1 + [76]))
	$4 = (*(($1 + [80])) - $1)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $1, $4)
	*($5) = (*($5) + $4)
	
.LABEL $label$8
	return $0
	
.LABEL $label$3
	CALL $15(($0 + [52]))
	
.LABEL $label$2
	CALL $15(($0 + [64]))
	
.LABEL $label$1
	CALL $15(($0 + [76]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $89 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth($1)
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($4, $7) + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	if ( ((uint_64)*(($0 + [192])) >= (uint_64)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$6
	$4 = ($0 + [64])
	$6 = *(($0 + [92]))
	$5 = *(($0 + [88]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$10 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9260])
	goto $label$8 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($4), *(($0 + [72])), (int_64)-5966816507475263488, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	if ( ((int_32)*(CALL $27($4, $7) + [48]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$8
	*($3 + [8]) = $1
	$8 = CALL $71($4, $2, [9378])
	if ( ((int_64)*($8 + [8]) != (int_64)$1) ){ goto $label$12 }
	CALL eosio_assert([0], [9398])
	
.LABEL $label$12
	$9 = ($8 + [28])
	$7 = *($9)
	if ( ($7 == 0) ){ goto $label$13 }
	$6 = $9
	
.LOOP $label$14:
	$5 = (uint_64)(*($7 + [16]) <= $1)
	$6 = ( $6 ? $7 : $5 )
	$7 = *(($7 + ($5 << [2])))
	if ( $7 ){ goto $label$14 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$13 }
	if ( ((uint_64)*($6 + [16]) > (uint_64)$1) ){ goto $label$13 }
	CALL eosio_assert([0], [9419])
	
.LABEL $label$13
	$1 = *($0)
	*($3) = ($3 + [8])
	CALL $82($4, $8, $1, $3)
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9677])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([32]))) = (int_64)0
	*($3 + [12 align=4]) = (int_64)0
	*($3 + [20]) = $1
	*($3 + [8]) = ($3 + [12])
	CALL $160(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [24])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $161(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $35(($3 + [8]), *(($3 + [12])))
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	$6 = *($3)
	$7 = *($1)
	$8 = ($1 + [12])
	$3 = *($8)
	if ( ($3 == 0) ){ goto $label$6 }
	$9 = ($1 + [12])
	$11 = *($3 + [16])
	$10 = *($6)
	if ( ((uint_64)$10 >= (uint_64)$11) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$3 = $8
	$9 = $8
	$13 = [3]
	goto $label$3 
	
.LABEL $label$5
	$13 = [30]
	goto $label$3 
	
.LABEL $label$4
	$13 = [2]
	
.LABEL $label$3
	
.LOOP $label$7:
	goto $label$60 
	
.LABEL $label$64
	$9 = $3
	$3 = $12
	$11 = *($3 + [16])
	if ( ((uint_64)$10 >= (uint_64)$11) ){ goto $label$32 }
	$13 = [30]
	goto $label$7 
	
.LABEL $label$63
	$12 = *($3)
	if ( $12 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$62
	if ( ((uint_64)$11 >= (uint_64)$10) ){ goto $label$27 }
	$13 = [29]
	goto $label$7 
	
.LABEL $label$61
	$9 = ($3 + [4])
	$12 = *($3 + [4])
	if ( ($12 == 0) ){ goto $label$30 }
	$13 = [0]
	goto $label$7 
	
.LABEL $label$60
	$3 = $9
	goto $label$31 
	
.LABEL $label$59
	$14 = ($1 + [8])
	$12 = *($9)
	if ( ($12 == 0) ){ goto $label$26 }
	$13 = [4]
	goto $label$7 
	
.LABEL $label$58
	*(($12 + [24])) = [1]
	goto $label$24 
	
.LABEL $label$57
	$14 = ($1 + [8])
	$9 = $3
	$12 = *($9)
	if ( $12 ){ goto $label$25 }
	$13 = [25]
	goto $label$7 
	
.LABEL $label$56
	*(($12 = CALL $7([32]))) = (int_64)0
	*($12 + [8]) = $3
	*($9) = $12
	*($12 + [24]) = [0]
	*($12 + [16]) = *($6)
	$3 = $12
	$6 = *(*($14))
	if ( ($6 == 0) ){ goto $label$8 }
	$13 = [26]
	goto $label$7 
	
.LABEL $label$55
	*($14) = $6
	$3 = *($9)
	$13 = [27]
	goto $label$7 
	
.LABEL $label$54
	CALL $28(*(($1 + [12])), $3)
	*($12 + [24]) = [1]
	*(($3 = ($1 + [16]))) = (*($3) + [1])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$23 }
	$13 = [28]
	goto $label$7 
	
.LABEL $label$53
	CALL eosio_assert([0], [9552])
	$13 = [5]
	goto $label$7 
	
.LABEL $label$52
	$10 = *(($1 + [16]))
	$6 = [8]
	$13 = [6]
	goto $label$7 
	
.LABEL $label$51
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$22 }
	$13 = [7]
	goto $label$7 
	
.LABEL $label$50
	$9 = *($1 + [8])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$21 }
	$13 = [8]
	goto $label$7 
	
.LABEL $label$49
	$13 = [9]
	goto $label$7 
	
.LABEL $label$48
	$12 = $9
	$3 = *($12 + [4])
	if ( ($3 == 0) ){ goto $label$17 }
	$13 = [10]
	goto $label$7 
	
.LABEL $label$47
	$9 = $3
	$3 = *($9)
	if ( $3 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$46
	$9 = *($12 + [8])
	if ( ((int_32)*($9) == (int_32)$12) ){ goto $label$16 }
	$13 = [23]
	goto $label$7 
	
.LABEL $label$45
	$12 = ($12 + [8])
	$13 = [24]
	goto $label$7 
	
.LABEL $label$44
	$3 = *($12)
	$12 = ($3 + [8])
	$9 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($9)) ){ goto $label$15 }
	$13 = [11]
	goto $label$7 
	
.LABEL $label$43
	$6 = ($6 + [9])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$20 }
	$13 = [12]
	goto $label$7 
	
.LABEL $label$42
	if ( ($6 <= [513]) ){ goto $label$14 }
	$13 = [21]
	goto $label$7 
	
.LABEL $label$41
	$3 = CALL $1($6)
	goto $label$13 
	
.LABEL $label$40
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	$13 = [14]
	goto $label$7 
	
.LABEL $label$39
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	$9 = $3
	if ( ((int_32)$6 > (int_32)[7]) ){ goto $label$12 }
	$13 = [20]
	goto $label$7 
	
.LABEL $label$38
	CALL eosio_assert([0], [9114])
	$9 = *($5 + [4])
	$13 = [15]
	goto $label$7 
	
.LABEL $label$37
	CALL memcpy($9, $1, [8])
	*($5 + [4]) = ($9 + [8])
	CALL $162($5, $14)
	CALL db_update_i64(*($1 + [24]), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$11 }
	$13 = [16]
	goto $label$7 
	
.LABEL $label$36
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	$13 = [18]
	goto $label$7 
	
.LABEL $label$35
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$34
	CALL $2($3)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	$13 = [17]
	goto $label$7 
	
.LABEL $label$33
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$32
	$13 = [2]
	goto $label$7 
	
.LABEL $label$31
	$13 = [1]
	goto $label$7 
	
.LABEL $label$30
	$13 = [3]
	goto $label$7 
	
.LABEL $label$29
	$13 = [31]
	goto $label$7 
	
.LABEL $label$28
	$13 = [1]
	goto $label$7 
	
.LABEL $label$27
	$13 = [3]
	goto $label$7 
	
.LABEL $label$26
	$13 = [25]
	goto $label$7 
	
.LABEL $label$25
	$13 = [4]
	goto $label$7 
	
.LABEL $label$24
	$13 = [5]
	goto $label$7 
	
.LABEL $label$23
	$13 = [5]
	goto $label$7 
	
.LABEL $label$22
	$13 = [6]
	goto $label$7 
	
.LABEL $label$21
	$13 = [12]
	goto $label$7 
	
.LABEL $label$20
	$13 = [9]
	goto $label$7 
	
.LABEL $label$19
	$13 = [11]
	goto $label$7 
	
.LABEL $label$18
	$13 = [10]
	goto $label$7 
	
.LABEL $label$17
	$13 = [22]
	goto $label$7 
	
.LABEL $label$16
	$13 = [11]
	goto $label$7 
	
.LABEL $label$15
	$13 = [24]
	goto $label$7 
	
.LABEL $label$14
	$13 = [13]
	goto $label$7 
	
.LABEL $label$13
	$13 = [14]
	goto $label$7 
	
.LABEL $label$12
	$13 = [15]
	goto $label$7 
	
.LABEL $label$11
	$13 = [19]
	goto $label$7 
	
.LABEL $label$10
	$13 = [17]
	goto $label$7 
	
.LABEL $label$9
	$13 = [18]
	goto $label$7 
	
.LABEL $label$8
	$13 = [27]
	goto $label$7 
	$13
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	$6 = *($1)
	CALL $159($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9552])
	
.LABEL $label$3
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [40]) = $1
	$7 = ($1 + [8])
	*($5 + [44]) = $7
	$8 = ($1 + [16])
	*($5 + [48]) = $8
	$9 = ($1 + [20])
	*($5 + [52]) = $9
	$10 = ($1 + [24])
	*($5 + [56]) = $10
	$11 = ($1 + [36])
	*($5 + [60]) = $11
	CALL $41(($5 + [40]), ($5 + [8]))
	$3 = *($5 + [32])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $1($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $8
	*($5 + [52]) = $9
	*($5 + [56]) = $10
	*($5 + [60]) = $11
	*($5 + [40]) = $1
	CALL $42(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $2($4)
	
.LABEL $label$6
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $18(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $155(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $156(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $154(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $83 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [56]) = $2
	*($4 + [48]) = $3
	if ( (uint_64)($3 <= (int_64)1000000000) ){ goto $label$2 }
	$3 = (CASTING uint_64)(uint_32 ((uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $16() / (int_64)1000000)) / (uint_32)[86400]))
	*($4 + [40]) = $3
	CALL prints([9339])
	CALL printui($3)
	CALL prints([8285])
	$5 = ($0 + [64])
	$6 = CALL $71($5, $1, [9378])
	$3 = *($0)
	*($4 + [12]) = ($4 + [48])
	*($4 + [8]) = ($4 + [40])
	CALL $86($5, $6, $3, ($4 + [8]))
	$7 = ($0 + [104])
	$6 = *(($0 + [132]))
	$8 = *(($0 + [128]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$5 = ($6 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$8 }
	$6 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($9 + [20]) == (int_32)$7) ){ goto $label$10 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$10
	if ( $9 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($7), *(($0 + [112])), (int_64)-2507753476247781376, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $33($7, $5)
	if ( ((int_32)*($9 + [20]) == (int_32)$7) ){ goto $label$6 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$6
	$10 = ($9 + [12])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$11 }
	$2 = *($4 + [40])
	$6 = $10
	
.LOOP $label$12:
	$8 = (uint_64)(*($5 + [16]) <= $2)
	$6 = ( $6 ? $5 : $8 )
	$5 = *(($5 + ($8 << [2])))
	if ( $5 ){ goto $label$12 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$11 }
	$10 = [0]
	if ( ((uint_64)$2 >= (uint_64)*($6 + [16])) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = *($0)
	*($4 + [8]) = ($4 + [40])
	CALL $87($7, $9, $2, ($4 + [8]))
	goto $label$4 
	
.LABEL $label$5
	$2 = *($0)
	*($4 + [12]) = ($4 + [40])
	*($4 + [8]) = ($4 + [56])
	CALL $88(($4 + [32]), $7, $2, ($4 + [8]))
	
.LABEL $label$4
	$10 = [1]
	
.LABEL $label$3
	$9 = ($0 + [224])
	$5 = *($9)
	if ( ($5 == 0) ){ goto $label$17 }
	$2 = *($4 + [40])
	$6 = $9
	
.LOOP $label$18:
	$8 = (uint_64)(*($5 + [16]) <= $2)
	$6 = ( $6 ? $5 : $8 )
	$5 = *(($5 + ($8 << [2])))
	if ( $5 ){ goto $label$18 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$17 }
	if ( ((uint_64)$2 >= (uint_64)*($6 + [16])) ){ goto $label$16 }
	
.LABEL $label$17
	CALL prints([9190])
	$5 = *($9)
	if ( ($5 == 0) ){ goto $label$19 }
	$9 = ($0 + [224])
	$3 = *($5 + [16])
	$2 = *($4 + [40])
	if ( ((uint_64)$2 >= (uint_64)$3) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$19
	$5 = $9
	$11 = [3]
	goto $label$1 
	
.LABEL $label$16
	CALL prints([9345])
	goto $label$13 
	
.LABEL $label$15
	$11 = [12]
	goto $label$1 
	
.LABEL $label$14
	$11 = [2]
	goto $label$1 
	
.LABEL $label$13
	$11 = [4]
	goto $label$1 
	
.LABEL $label$2
	$11 = [6]
	
.LABEL $label$1
	
.LOOP $label$20:
	goto $label$41 
	
.LABEL $label$45
	$9 = $5
	$5 = $6
	$3 = *($5 + [16])
	if ( ((uint_64)$2 >= (uint_64)$3) ){ goto $label$31 }
	$11 = [12]
	goto $label$20 
	
.LABEL $label$44
	$6 = *($5)
	if ( $6 ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$43
	if ( ((uint_64)$3 >= (uint_64)$2) ){ goto $label$26 }
	$11 = [11]
	goto $label$20 
	
.LABEL $label$42
	$9 = ($5 + [4])
	$6 = *($5 + [4])
	if ( ($6 == 0) ){ goto $label$29 }
	$11 = [0]
	goto $label$20 
	
.LABEL $label$41
	$5 = $9
	goto $label$30 
	
.LABEL $label$40
	$6 = *($9)
	if ( $6 ){ goto $label$25 }
	$11 = [8]
	goto $label$20 
	
.LABEL $label$39
	*(($6 = CALL $7([72])) + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [64]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [8]) = $5
	*($9) = $6
	*($6 + [16]) = *($4 + [40])
	$5 = $6
	$8 = ($0 + [220])
	$7 = *(*($8))
	if ( ($7 == 0) ){ goto $label$21 }
	$11 = [9]
	goto $label$20 
	
.LABEL $label$38
	*($8) = $7
	$5 = *($9)
	$11 = [10]
	goto $label$20 
	
.LABEL $label$37
	CALL $28(*(($0 + [224])), $5)
	*(($5 = ($0 + [228]))) = (*($5) + [1])
	goto $label$24 
	
.LABEL $label$36
	$9 = $5
	$6 = *($9)
	if ( ($6 == 0) ){ goto $label$23 }
	$11 = [4]
	goto $label$20 
	
.LABEL $label$35
	*(($8 = (($4 + [8]) + [8]))) = *(($6 + [56]))
	*(($9 = (($4 + [8]) + [16]))) = *(($6 + [64]))
	$5 = ($6 + [48])
	*($4 + [8]) = *($5)
	$0 = ($6 + [32])
	$3 = ((int_64)*($4 + [48]) + (int_64)*($0))
	$7 = ($6 + [40])
	$2 = *($7)
	$6 = ($6 + [24])
	$1 = *($6)
	if ( ($10 == 0) ){ goto $label$22 }
	$11 = [7]
	goto $label$20 
	
.LABEL $label$34
	CALL prints([9611])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = [5]
	goto $label$20 
	
.LABEL $label$33
	*($7) = $2
	*($0) = $3
	*($6) = $1
	*(($5 + [16])) = *($9)
	*(($5 + [8])) = *($8)
	*($5) = *($4 + [8])
	CALL prints([9630])
	CALL printui($2)
	CALL prints([9646])
	CALL printui($3)
	CALL prints([8285])
	$11 = [6]
	goto $label$20 
	
.LABEL $label$32
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$31
	$11 = [2]
	goto $label$20 
	
.LABEL $label$30
	$11 = [1]
	goto $label$20 
	
.LABEL $label$29
	$11 = [3]
	goto $label$20 
	
.LABEL $label$28
	$11 = [13]
	goto $label$20 
	
.LABEL $label$27
	$11 = [1]
	goto $label$20 
	
.LABEL $label$26
	$11 = [3]
	goto $label$20 
	
.LABEL $label$25
	$11 = [4]
	goto $label$20 
	
.LABEL $label$24
	$11 = [4]
	goto $label$20 
	
.LABEL $label$23
	$11 = [8]
	goto $label$20 
	
.LABEL $label$22
	$11 = [5]
	goto $label$20 
	
.LABEL $label$21
	$11 = [10]
	goto $label$20 
	$11
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	$6 = *($3)
	$7 = *($1)
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ($3 == 0) ){ goto $label$6 }
	$8 = ($1 + [28])
	$10 = *($3 + [16])
	$9 = *($6)
	if ( ((uint_64)$9 >= (uint_64)$10) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$3 = $8
	$12 = [3]
	goto $label$3 
	
.LABEL $label$5
	$12 = [21]
	goto $label$3 
	
.LABEL $label$4
	$12 = [2]
	
.LABEL $label$3
	
.LOOP $label$7:
	goto $label$43 
	
.LABEL $label$47
	$8 = $3
	$3 = $11
	$10 = *($3 + [16])
	if ( ((uint_64)$9 >= (uint_64)$10) ){ goto $label$24 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$46
	$11 = *($3)
	if ( $11 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$45
	if ( ((uint_64)$10 >= (uint_64)$9) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$44
	$8 = ($3 + [4])
	$11 = *($3 + [4])
	if ( ($11 == 0) ){ goto $label$22 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$43
	$3 = $8
	goto $label$23 
	
.LABEL $label$42
	$11 = ($1 + [24])
	if ( *($8) ){ goto $label$18 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$41
	*(($13 = CALL $7([24]))) = (int_64)0
	*($13 + [8]) = $3
	*($8) = $13
	*($13 + [16]) = *($6)
	$3 = *(*($11))
	if ( ($3 == 0) ){ goto $label$8 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$40
	*($11) = $3
	$13 = *($8)
	$12 = [18]
	goto $label$7 
	
.LABEL $label$39
	CALL $28(*(($1 + [28])), $13)
	*(($3 = ($1 + [32]))) = (*($3) + [1])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$17 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$38
	CALL eosio_assert([0], [9552])
	goto $label$16 
	
.LABEL $label$37
	$11 = ($1 + [24])
	$8 = $3
	if ( (*($8) == 0) ){ goto $label$15 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$36
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [56]) = $11
	*($5 + [40]) = $1
	$13 = ($1 + [8])
	*($5 + [44]) = $13
	$6 = ($1 + [16])
	*($5 + [48]) = $6
	$14 = ($1 + [20])
	*($5 + [52]) = $14
	$15 = ($1 + [36])
	*($5 + [60]) = $15
	CALL $41(($5 + [40]), ($5 + [8]))
	$8 = *($5 + [32])
	if ( ($8 <= [513]) ){ goto $label$14 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$35
	$3 = CALL $1($8)
	goto $label$13 
	
.LABEL $label$34
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	$12 = [6]
	goto $label$7 
	
.LABEL $label$33
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $13
	*($5 + [48]) = $6
	*($5 + [52]) = $14
	*($5 + [56]) = $11
	*($5 + [60]) = $15
	*($5 + [40]) = $1
	CALL $42(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$12 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$32
	CALL $2($3)
	$12 = [7]
	goto $label$7 
	
.LABEL $label$31
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$11 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$30
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$12 = [9]
	goto $label$7 
	
.LABEL $label$29
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $18(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$10 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$28
	$8 = ($1 + [56])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($5 + [32]), $7)
	*($8) = $3
	$12 = [11]
	goto $label$7 
	
.LABEL $label$26
	CALL db_idx64_update($3, $2, ($5 + [40]))
	$12 = [12]
	goto $label$7 
	
.LABEL $label$25
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$24
	$12 = [2]
	goto $label$7 
	
.LABEL $label$23
	$12 = [1]
	goto $label$7 
	
.LABEL $label$22
	$12 = [3]
	goto $label$7 
	
.LABEL $label$21
	$12 = [22]
	goto $label$7 
	
.LABEL $label$20
	$12 = [1]
	goto $label$7 
	
.LABEL $label$19
	$12 = [3]
	goto $label$7 
	
.LABEL $label$18
	$12 = [4]
	goto $label$7 
	
.LABEL $label$17
	$12 = [4]
	goto $label$7 
	
.LABEL $label$16
	$12 = [4]
	goto $label$7 
	
.LABEL $label$15
	$12 = [16]
	goto $label$7 
	
.LABEL $label$14
	$12 = [5]
	goto $label$7 
	
.LABEL $label$13
	$12 = [6]
	goto $label$7 
	
.LABEL $label$12
	$12 = [7]
	goto $label$7 
	
.LABEL $label$11
	$12 = [9]
	goto $label$7 
	
.LABEL $label$10
	$12 = [12]
	goto $label$7 
	
.LABEL $label$9
	$12 = [11]
	goto $label$7 
	
.LABEL $label$8
	$12 = [18]
	goto $label$7 
	$12
}

int_64 .FUNC $81 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*((($2 + [40]) + [32])) = [0]
	*($2 + [48]) = $1
	*($2 + [56]) = (int_64)-1
	$3 = (int_64)0
	*($2 + [64]) = (int_64)0
	$4 = *($0 + [32])
	*($2 + [40]) = $4
	*(($2 + [32])) = [0]
	*($2 + [8]) = $1
	*($2) = $4
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$5 = CALL db_find_i64($4, $1, (int_64)-5964829140208058368, (uint_64)*($0 + [56]) >> (uint_64)(int_64)8)
	if ( ((int_32)$5) <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $84(($2 + [40]), $5)
	if ( ((int_32)*($5 + [24]) == (int_32)($2 + [40])) ){ goto $label$6 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$6
	$1 = (uint_64)*(($0 + [56])) >> (uint_64)(int_64)8)
	$3 = *($5)
	$5 = *(($2 + [28]))
	$6 = *(($2 + [24]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$7:
	$0 = ($5 + [-24])
	$7 = *($0)
	if ( ((int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$4 }
	$5 = $0
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$5
	$1 = (uint_64)*(($0 + [56])) >> (uint_64)(int_64)8)
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [32]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$0 = CALL db_find_i64(*($2), *(($2 + [8])), (int_64)-5964828963577528320, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $85($2, $0)
	if ( ((int_32)*($7 + [32]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	$3 = ((int_64)*($7) + (int_64)$3)
	
.LABEL $label$1
	$7 = *($2 + [24])
	if ( ($7 == 0) ){ goto $label$8 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($2 + [24]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $7
	
.LABEL $label$9
	*($6) = $7
	CALL $9($0)
	
.LABEL $label$8
	$7 = *($2 + [64])
	if ( ($7 == 0) ){ goto $label$13 }
	$6 = ($2 + [68])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$17 }
	CALL $9($5)
	
.LABEL $label$17
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($2 + [64]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $7
	
.LABEL $label$14
	*($6) = $7
	CALL $9($0)
	
.LABEL $label$13
	$global$0 = ($2 + [80])
	return $3
}

void .FUNC $80 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth($1)
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($4, $7) + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	if ( ((uint_64)*(($0 + [192])) >= (uint_64)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$6
	$4 = ($0 + [64])
	$6 = *(($0 + [92]))
	$5 = *(($0 + [88]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$10 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9260])
	goto $label$8 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($4), *(($0 + [72])), (int_64)-5966816507475263488, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	if ( ((int_32)*(CALL $27($4, $7) + [48]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$8
	$9 = CALL $81($0, $1)
	*($3 + [8]) = $1
	$8 = CALL $71($4, $2, [9378])
	if ( ((int_64)*($8 + [8]) != (int_64)$1) ){ goto $label$12 }
	CALL eosio_assert([0], [9398])
	
.LABEL $label$12
	$10 = ($8 + [28])
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$13 }
	$6 = $10
	
.LOOP $label$14:
	$5 = (uint_64)(*($7 + [16]) <= $1)
	$6 = ( $6 ? $7 : $5 )
	$7 = *(($7 + ($5 << [2])))
	if ( $7 ){ goto $label$14 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$13 }
	if ( ((uint_64)*($6 + [16]) > (uint_64)$1) ){ goto $label$13 }
	CALL eosio_assert([0], [9419])
	
.LABEL $label$13
	$11 = *($0)
	*($3) = ($3 + [8])
	CALL $82($4, $8, $11, $3)
	CALL $83($0, $2, $1, $9)
	CALL $52($0)
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[12])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $184($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($5 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($7 + [-4])))
	
.LABEL $label$9
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$7 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$10:
	CALL $109($0, $2)
	$2 = ($2 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9114])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9114])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $148 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$0 = *($3 + [344])
	$4 = CALL $20(($3 + [24]), ($3 + [328]))
	CALL $94($2, $0, $3)
	if ( (*($4) & [1]) ){ goto $label$8 }
	CALL $111($2)
	if ( (*($3 + [328]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($4 + [8]))
	CALL $111($2)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

void .FUNC $145 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $110(($3 + [32]), $0, $1, $3)
	CALL $89($2, *($3 + [312]), *($3 + [304]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $144 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $110(($3 + [32]), $0, $1, $3)
	CALL $80($2, *($3 + [312]), *($3 + [304]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $147 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $20(($3 + [24]), ($3 + [328]))
	$4 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	CALL $91($4, *($3 + [344]), $2)
	if ( (*($2) & [1]) ){ goto $label$8 }
	CALL $111($4)
	if ( (*($3 + [328]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($2 + [8]))
	CALL $111($4)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

void .FUNC $146 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $110(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $25($2, *($3 + [312]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $141 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$4 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$6 = *($2)
	$2 = CALL $20(($3 + [24]), ($3 + [328]))
	if ( ( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) ){ goto $label$6 }
	CALL eosio_assert([0], [8461])
	
.LABEL $label$6
	CALL require_auth(*($4))
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$7
	CALL $111($4)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($3 + [336])))
	
.LABEL $label$8
	$global$0 = ($3 + [368])
}

void .FUNC $140 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*((($3 + [8]) + [8])) = $5
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $110(($3 + [40]), $0, $1, ($3 + [8]))
	CALL require_auth(*($3 + [312]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $143 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [304]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $110(($3 + [32]), $0, $1, $3)
	CALL $60($2, *($3 + [312]), $0)
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $142 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [304]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $110(($3 + [32]), $0, $1, $3)
	CALL $59($2, *($3 + [312]), $0)
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [20]) = ((int_32)*(($3 + [68])) != (int_32)*($3 + [64]))
	$6 = ($1 + [8])
	*($5 + [24]) = *($6)
	$7 = *($1)
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [44]) = $6
	*($5 + [40]) = $1
	$8 = ($1 + [16])
	*($5 + [48]) = $8
	$9 = ($1 + [20])
	*($5 + [52]) = $9
	$10 = ($1 + [24])
	*($5 + [56]) = $10
	$11 = ($1 + [36])
	*($5 + [60]) = $11
	CALL $41(($5 + [40]), ($5 + [8]))
	$3 = *($5 + [32])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$4 = CALL $1($3)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [48]) = $8
	*($5 + [52]) = $9
	*($5 + [56]) = $10
	*($5 + [60]) = $11
	*($5 + [40]) = $1
	CALL $42(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL $2($4)
	
.LABEL $label$5
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $18(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$7 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($5 + [32]), $7)
	*($4) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$7
	$global$0 = ($5 + [64])
}

void .FUNC $73 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((uint_64)*(($0 + [192])) >= (uint_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$1
	$3 = ($0 + [64])
	$5 = *(($0 + [92]))
	$4 = *(($0 + [88]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9260])
	if ( (CALL has_auth(*($7 + [8])) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*($3), *(($0 + [72])), (int_64)-5966816507475263488, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $27($3, $6)
	if ( ((int_32)*($7 + [48]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$5
	if ( CALL has_auth(*($7 + [8])) ){ goto $label$3 }
	
.LABEL $label$4
	if ( CALL has_auth(*($0)) ){ goto $label$3 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$3
	if ( (CALL has_auth(*($0)) == 0) ){ goto $label$9 }
	if ( ((uint_64)((int_64)*($7 + [16]) + (int_64)604800) <= (uint_64)((int_64)((int_64)CALL $16() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$9 }
	CALL eosio_assert([0], [8557])
	
.LABEL $label$9
	CALL $44($0, $1)
	$6 = CALL db_next_i64(*($7 + [52]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	CALL $27($3, $6)
	
.LABEL $label$10
	CALL $74($3, $7)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = ($0 + [64])
	$4 = CALL $71($3, *($1), [8501])
	CALL require_auth(*($4 + [8]))
	$5 = ($0 + [232])
	$6 = *($4 + [8])
	$8 = *(($0 + [260]))
	$7 = *(($0 + [256]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$5:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	if ( ((int_32)*($10 + [20]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$9 = CALL db_find_i64(*($5), *(($0 + [240])), (int_64)4344997574076792832, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($5, $9) + [20]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	if ( ((int_64)*($1 + [8]) == (int_64)*(($4 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [8514])
	
.LABEL $label$6
	$9 = CALL $62(($2 + [8]), $1)
	CALL $63($0, $9)
	CALL $64($9)
	$6 = *($0)
	*($2) = $1
	CALL $72($3, $4, $6, $2)
	$global$0 = ($2 + [96])
}

int_32 .FUNC $71 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9260])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5966816507475263488, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $27($0, $5)
	if ( ((int_32)*($6 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9260])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $76 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	if ( ((uint_64)*(($0 + [192])) >= (uint_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [8405])
	
.LABEL $label$1
	$4 = ($0 + [64])
	$6 = *(($0 + [92]))
	$5 = *(($0 + [88]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9260])
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_find_i64(*($4), *(($0 + [72])), (int_64)-5966816507475263488, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $27($4, $7)
	if ( ((int_32)*($8 + [48]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$3
	$7 = CALL db_next_i64(*($8 + [52]), ($3 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	CALL $27($4, $7)
	
.LABEL $label$7
	CALL $74($4, $8)
	
.LABEL $label$2
	$global$0 = ($3 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth(*($1))
	$2 = ($0 + [232])
	$3 = *($1)
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [20]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($2), *(($0 + [240])), (int_64)4344997574076792832, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($2, $6) + [20]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [9120])
	
.LABEL $label$1
	$6 = *($1 + [20])
	if ( ($6 & [1]) ){ goto $label$16 }
	if ( uint_32($6 >> [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*(($1 + [24])) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$6 = [1]
	$5 = *($1 + [8])
	if ( ($5 & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [8755])
	$6 = [1]
	$5 = *($1 + [8])
	if ( (($5 & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*(($1 + [12])) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( (uint_32($5 >> $6) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$6 = [1]
	$5 = *($1 + [32])
	if ( ($5 & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8775])
	$6 = [1]
	$5 = *($1 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*(($1 + [36])) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( (uint_32($5 >> $6) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	return 
	
.LABEL $label$6
	CALL eosio_assert([0], [8803])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9939])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9984])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10034])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $32(($6 + [36]), *(($6 + [40])))
	CALL $68(($6 + [24]), *(($6 + [28])))
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $32(($9 + [36]), *(($9 + [40])))
	CALL $68(($9 + [24]), *(($9 + [28])))
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$9 = *(($1 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $75 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($0 + [64])
	$3 = CALL $71($2, $1, [8501])
	if ( ((uint_64)((int_64)*($3 + [16]) + (int_64)604800) <= (uint_64)((int_64)((int_64)CALL $16() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$1 }
	CALL eosio_assert([0], [8586])
	
.LABEL $label$1
	CALL $44($0, $1)
	CALL $74($2, $3)
}

void .FUNC $78 (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
}

void .FUNC $79 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$3 }
	if ( uint_32($3 >> [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($2 + [4]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL require_auth(*($0))
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [8461])
	CALL require_auth(*($0))
}

int_32 .FUNC $98 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	CALL memcpy(($4 + [312]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $110(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [312])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $111($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $99 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$3 = *($4 + [316])
	
.LABEL $label$4
	CALL memcpy(($4 + [328]), $3, [8])
	*($4 + [316]) = ($3 + [8])
	$8 = (($4 + [328]) + [8])
	CALL $109(($4 + [312]), $8)
	$3 = *((($4 + [312]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [312])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $110(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [328])
	$8 = CALL $20(($4 + [352]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $20(($4 + [368]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [368]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [352]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [352]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $2($2)
	
.LABEL $label$6
	CALL $111($10)
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [344])))
	
.LABEL $label$11
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $94 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth(*($0))
	$3 = ($0 + [232])
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9260])
	CALL $95($3, $7)
	return 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $51($3, $6)
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9260])
	CALL $95($3, $7)
	return 
	
.LABEL $label$5
	CALL eosio_assert([0], [8861])
	
.LABEL $label$1
	CALL $95($3, $7)
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9939])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9984])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10034])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [16])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [16])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [400])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)5031766157096796159) ){ goto $label$25 }
	if ( ((int_64)$2 <= (int_64)5371821094808322047) ){ goto $label$24 }
	if ( ((int_64)$2 <= (int_64)5935062728166080511) ){ goto $label$22 }
	if ( ((int_64)$2 > (int_64)5935070115392389119) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)5935062728166080512) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)5935062930985844736) ){ goto $label$1 }
	*($3 + [308]) = [0]
	*($3 + [304]) = [1]
	*($3 + [88]) = *($3 + [304])
	CALL $97($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$25
	if ( ((int_64)$2 > (int_64)-3064896736964116481) ){ goto $label$23 }
	if ( ((int_64)$2 > (int_64)-4149656565466005505) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-5966821850414579712) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)-4995815919012806656) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)-4993669918390599680) ){ goto $label$1 }
	*($3 + [332]) = [0]
	*($3 + [328]) = [2]
	*($3 + [64]) = *($3 + [328])
	CALL $98($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$24
	if ( ((int_64)$2 > (int_64)5094016106174951823) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)5031766157096796160) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)5031766164112818176) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)5094016106168100240) ){ goto $label$1 }
	*($3 + [292]) = [0]
	*($3 + [288]) = [3]
	*($3 + [104]) = *($3 + [288])
	CALL $99($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$2 > (int_64)4921564679018381311) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-3064896736964116480) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)4154007706295861248) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)4734097396726759424) ){ goto $label$1 }
	*($3 + [388]) = [0]
	*($3 + [384]) = [4]
	*($3 + [8]) = *($3 + [384])
	CALL $98($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$22
	if ( ((int_64)$2 == (int_64)5371821094808322048) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)5371821139234390016) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)5564546791744995328) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [5]
	*($3 + [160]) = *($3 + [232])
	CALL $100($1, $1, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-4149656565466005504) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-3112434293989703680) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-3109936999818067968) ){ goto $label$1 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [6]
	*($3 + [144]) = *($3 + [248])
	CALL $101($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)5094016106174951824) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)5094016106174994192) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)5371813910401777664) ){ goto $label$1 }
	*($3 + [300]) = [0]
	*($3 + [296]) = [7]
	*($3 + [96]) = *($3 + [296])
	CALL $102($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$19
	if ( ((int_64)$2 == (int_64)4921564679018381312) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)4946525946610974720) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)5031766156898729984) ){ goto $label$1 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [8]
	*($3) = *($3 + [392])
	CALL $103($1, $1, $3)
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)5935070115392389120) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)6711236938050830336) ){ goto $label$1 }
	*($3 + [260]) = [0]
	*($3 + [256]) = [9]
	*($3 + [136]) = *($3 + [256])
	CALL $101($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [380]) = [0]
	*($3 + [376]) = [10]
	*($3 + [16]) = *($3 + [376])
	CALL $99($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [364]) = [0]
	*($3 + [360]) = [11]
	*($3 + [32]) = *($3 + [360])
	CALL $98($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [220]) = [0]
	*($3 + [216]) = [12]
	*($3 + [176]) = *($3 + [216])
	CALL $104($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [324]) = [0]
	*($3 + [320]) = [13]
	*($3 + [72]) = *($3 + [320])
	CALL $97($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [372]) = [0]
	*($3 + [368]) = [14]
	*($3 + [24]) = *($3 + [368])
	CALL $105($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [244]) = [0]
	*($3 + [240]) = [15]
	*($3 + [152]) = *($3 + [240])
	CALL $100($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [212]) = [0]
	*($3 + [208]) = [16]
	*($3 + [184]) = *($3 + [208])
	CALL $106($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [348]) = [0]
	*($3 + [344]) = [17]
	*($3 + [48]) = *($3 + [344])
	CALL $98($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [276]) = [0]
	*($3 + [272]) = [18]
	*($3 + [120]) = *($3 + [272])
	CALL $107($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [284]) = [0]
	*($3 + [280]) = [19]
	*($3 + [112]) = *($3 + [280])
	CALL $108($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [204]) = [0]
	*($3 + [200]) = [20]
	*($3 + [192]) = *($3 + [200])
	CALL $106($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [340]) = [0]
	*($3 + [336]) = [21]
	*($3 + [56]) = *($3 + [336])
	CALL $99($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [268]) = [0]
	*($3 + [264]) = [22]
	*($3 + [128]) = *($3 + [264])
	CALL $106($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [228]) = [0]
	*($3 + [224]) = [23]
	*($3 + [168]) = *($3 + [224])
	CALL $107($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [316]) = [0]
	*($3 + [312]) = [24]
	*($3 + [80]) = *($3 + [312])
	CALL $98($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [356]) = [0]
	*($3 + [352]) = [25]
	*($3 + [40]) = *($3 + [352])
	CALL $105($1, $1, ($3 + [40]))
	
.LABEL $label$1
	CALL $24([0])
	$global$0 = ($3 + [400])
}

int_32 .FUNC $97 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [16]) = ($4 + [312])
	*($4 + [40]) = ($4 + [328])
	CALL $113(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [320])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [312])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $110(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [360])
	CALL $114(($4 + [16]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $111($3)
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [344])))
	
.LABEL $label$5
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $90 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
}

void .FUNC $91 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [16]) = $1
	CALL require_auth(*($0))
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $51($4, $7) + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL eosio_assert([0], [8830])
	
.LABEL $label$1
	$1 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [16])
	*($3 + [56]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [232]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9677])
	
.LABEL $label$6
	*($3 + [32]) = $4
	*($3 + [36]) = ($3 + [8])
	*($3 + [40]) = ($3 + [56])
	*(($7 = CALL $7([32]))) = (int_64)0
	*($7 + [8 align=4]) = (int_64)0
	*($7 + [16]) = [0]
	*($7 + [20]) = $4
	CALL $92(($3 + [32]), $7)
	*($3 + [48]) = $7
	$1 = *($7)
	*($3 + [32]) = $1
	$5 = *($7 + [24])
	*($3 + [28]) = $5
	$8 = ($0 + [260])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [264]))) ){ goto $label$9 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($3 + [48]) = [0]
	*($6) = $7
	*($8) = ($6 + [24])
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $93(($0 + [256]), ($3 + [48]), ($3 + [32]), ($3 + [28]))
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( $7 ){ goto $label$7 }
	
.LABEL $label$8
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($7 + [16])))
	
.LABEL $label$10
	CALL $9($7)
	$global$0 = ($3 + [64])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $21($6, *($4 + [4]))
	$4 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	$7 = $2
	if ( ((int_32)$4 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$7 = *($3 + [4])
	
.LABEL $label$4
	CALL memcpy($7, $1, [8])
	*($3 + [4]) = ($7 + [8])
	CALL $177($3, $6)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($5 + [8]), (int_64)4344997574076792832, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $138 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$4 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$0 = *($3 + [344])
	$2 = CALL $20(($3 + [24]), ($3 + [328]))
	CALL require_auth(*($4))
	$6 = *($2)
	if ( (( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$12 }
	if ( ((int_64)($0 == 0) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8461])
	if ( (int_64)($0 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( (uint_64)(*(($4 + [200])) <= $0) ){ goto $label$10 }
	$6 = [1]
	if ( (*($2) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8442])
	$6 = [1]
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	CALL $111($4)
	if ( ((*($3 + [328]) & $6) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $111($4)
	if ( (*($3 + [328]) & $6) ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
}

void .FUNC $139 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [404]) = $4
	*($3 + [400]) = $4
	*($3 + [408]) = ($4 + $5)
	*(($3 + [368])) = (int_64)0
	*(($3 + [376])) = (int_64)0
	*(($3 + [392])) = [0]
	*($3 + [352]) = (int_64)0
	*($3 + [360]) = (int_64)0
	*($3 + [384]) = (int_64)0
	$2 = (($3 + [352]) + [32])
	$6 = (($3 + [352]) + [20])
	$7 = (($3 + [352]) + [8])
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$4 = *($3 + [404])
	
.LABEL $label$4
	CALL memcpy(($3 + [352]), $4, [8])
	*($3 + [404]) = ($4 + [8])
	CALL $109(($3 + [400]), $7)
	CALL $109(($3 + [400]), $6)
	CALL $109(($3 + [400]), $2)
	$4 = *((($3 + [400]) + [8]))
	*((($3 + [64]) + [8])) = $4
	*(($3 + [8])) = $4
	$8 = *($3 + [400])
	*($3) = $8
	*($3 + [64]) = $8
	$4 = CALL $110(($3 + [80]), $0, $1, $3)
	*($3 + [16]) = *($3 + [352])
	$7 = CALL $20((($3 + [16]) + [8]), $7)
	$6 = CALL $20((($3 + [16]) + [20]), $6)
	$5 = CALL $20((($3 + [16]) + [32]), $2)
	CALL $77($4, ($3 + [16]))
	if ( (*($5) & [1]) ){ goto $label$9 }
	if ( (*($6) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($3 + [56])))
	if ( ((*($6) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [44])))
	$5 = [1]
	if ( (*($7) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$5 = [1]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($3 + [32])))
	
.LABEL $label$5
	CALL $111($4)
	if ( ((*(($3 + [384])) & $5) == 0) ){ goto $label$10 }
	CALL $9(*(($3 + [392])))
	
.LABEL $label$10
	if ( ((*(($3 + [372])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($3 + [380])))
	
.LABEL $label$11
	if ( ((*(($3 + [360])) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($3 + [368])))
	
.LABEL $label$12
	$global$0 = ($3 + [416])
}

void .FUNC $130 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $110(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $73($2, *($3 + [312]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $131 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $110(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $44($2, *($3 + [312]))
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $132 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	$0 = *($3 + [312])
	$2 = CALL $110(($3 + [40]), $0, $1, ($3 + [8]))
	$4 = ($2 + [64])
	$6 = CALL $71($4, $0, [8501])
	if ( ((uint_64)((int_64)*($6 + [16]) + (int_64)604800) <= (uint_64)((int_64)((int_64)CALL $16() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$6 }
	CALL eosio_assert([0], [8586])
	
.LABEL $label$6
	CALL $44($2, $0)
	CALL $74($4, $6)
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $133 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$0 = *($3 + [344])
	$4 = CALL $20(($3 + [24]), ($3 + [328]))
	CALL $76($2, $0, $3)
	if ( (*($4) & [1]) ){ goto $label$8 }
	CALL $111($2)
	if ( (*($3 + [328]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($4 + [8]))
	CALL $111($2)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

void .FUNC $134 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	*($3 + [320]) = (int_64)0
	$2 = *($3 + [356])
	$4 = (($3 + [352]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$6
	CALL memcpy(($3 + [320]), $2, [8])
	*($3 + [356]) = (*($3 + [356]) + [8])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [352])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $20(($3 + [16]), ($3 + [328]))
	$4 = CALL $110(($3 + [48]), $0, $1, $3)
	CALL $50($4, *($3 + [344]), $2, *($3 + [320]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	CALL $111($4)
	if ( (*($3 + [328]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	CALL $111($4)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [368])
}

void .FUNC $135 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	CALL $111(CALL $110(($3 + [40]), $0, $1, ($3 + [8])))
	$global$0 = ($3 + [320])
}

void .FUNC $136 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	*($3 + [320]) = (int_64)0
	$2 = *($3 + [356])
	$4 = (($3 + [352]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$6
	CALL memcpy(($3 + [320]), $2, [8])
	*($3 + [356]) = (*($3 + [356]) + [8])
	$2 = *($4)
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [352])
	*($3) = $5
	*($3 + [32]) = $5
	$4 = CALL $110(($3 + [48]), $0, $1, $3)
	$0 = *($3 + [344])
	$2 = CALL $20(($3 + [16]), ($3 + [328]))
	$1 = *($3 + [320])
	if ( (int_64)($0 == 0) ){ goto $label$8 }
	if ( ((uint_64)*(($4 + [200])) >= (uint_64)$0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8442])
	
.LABEL $label$7
	$6 = *($2)
	if ( (( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$11 }
	CALL require_auth($1)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8421])
	CALL require_auth($1)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	
.LABEL $label$9
	CALL $111($4)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($3 + [336])))
	
.LABEL $label$12
	$global$0 = ($3 + [368])
}

void .FUNC $137 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [304]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $110(($3 + [32]), $0, $1, $3)
	$0 = *($3 + [304])
	$1 = *($3 + [312])
	if ( (int_64)($1 == 0) ){ goto $label$8 }
	if ( ((uint_64)*(($2 + [200])) >= (uint_64)$1) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [8442])
	
.LABEL $label$7
	CALL require_auth($0)
	CALL $111($2)
	$global$0 = ($3 + [320])
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$4 = (*($0) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($4) + $0))
	
.LABEL $label$1
	*($2) = *($1)
	$3 = CALL $20(($2 + [8]), ($1 + [8]))
	$5 = CALL $20(($2 + [20]), ($1 + [20]))
	$1 = CALL $20(($2 + [32]), ($1 + [32]))
	CALL void $4((int_32 $2), (int_32 $0))
	if ( (*($1) & [1]) ){ goto $label$6 }
	if ( (*($5) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*(($2 + [40])))
	if ( ((*($5) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($2 + [28])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($3) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$2
	CALL $9(*(($2 + [16])))
	$global$0 = ($2 + [48])
}

void .FUNC $129 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [512])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [492]) = $2
	*($3 + [488]) = $2
	*($3 + [496]) = ($2 + $4)
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = (int_64)0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = (int_64)0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = (int_64)0
	*($3 + [408]) = (int_64)0
	*($3 + [416]) = (int_64)0
	*($3 + [440]) = (int_64)0
	*($3 + [464]) = (int_64)0
	*($3 + [504]) = ($3 + [488])
	*($3 + [132]) = (($3 + [400]) + [8])
	*($3 + [136]) = ($3 + [416])
	*($3 + [140]) = ($3 + [428])
	*($3 + [144]) = ($3 + [440])
	*($3 + [148]) = ($3 + [452])
	*($3 + [152]) = ($3 + [464])
	*($3 + [156]) = ($3 + [476])
	*($3 + [128]) = ($3 + [400])
	CALL $112(($3 + [128]), ($3 + [504]))
	$2 = *($3 + [496])
	*((($3 + [112]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [488])
	*($3 + [8]) = $5
	*($3 + [112]) = $5
	$4 = CALL $62(($3 + [24]), ($3 + [400]))
	$2 = CALL $110(($3 + [128]), $0, $1, ($3 + [8]))
	CALL $70($2, $4)
	CALL $64($4)
	CALL $111($2)
	CALL $64(($3 + [400]))
	$global$0 = ($3 + [512])
}

void .FUNC $128 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	CALL $111(CALL $110(($3 + [40]), $0, $1, ($3 + [8])))
	$global$0 = ($3 + [320])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-9102017834344850240, (int_64)-9102017834344850240)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $120($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	*($3) = $1
	CALL $168($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $169($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $122($0, *($1))
	CALL $122($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$4
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-9102017834344850240, (int_64)-9102017834344850240)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $120($1, $2)
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	CALL $163($0, $2)
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [9875])
	CALL $163($0, [0])
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = [1]
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = $0
	*($5 + [36]) = ($5 + [40])
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [36])
	CALL $164(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)-9102017834344850240
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-9102017834344850240
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $165(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $122(($1 + [36]), *(($1 + [40])))
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $126 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [352])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$0 = *($3 + [344])
	$4 = CALL $20(($3 + [24]), ($3 + [328]))
	CALL require_auth(*($2))
	if ( (uint_64)(*($2 + [184]) <= $0) ){ goto $label$10 }
	$6 = [1]
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8385])
	$6 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($4 + [8]))
	CALL $111($2)
	if ( ((*($3 + [328]) & $6) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $111($2)
	if ( (*($3 + [328]) & $6) ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
}

void .FUNC $125 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [312])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [312])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9334])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [28]) = ($2 + [8])
	*($3 + [24]) = $2
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	CALL $111(CALL $110(($3 + [40]), $0, $1, ($3 + [8])))
	$global$0 = ($3 + [320])
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [340]) = $4
	*($3 + [336]) = $4
	*($3 + [344]) = ($4 + $5)
	*($3 + [328]) = [0]
	*($3 + [320]) = (int_64)0
	CALL $109(($3 + [336]), ($3 + [320]))
	$4 = *($3 + [344])
	*((($3 + [32]) + [8])) = $4
	*(($3 + [8])) = $4
	$6 = *($3 + [336])
	*($3) = $6
	*($3 + [32]) = $6
	$4 = CALL $110(($3 + [48]), $0, $1, $3)
	$5 = CALL $20(($3 + [16]), ($3 + [320]))
	CALL require_auth(*($4))
	$2 = *($5)
	if ( ( *($5 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) ) ){ goto $label$4 }
	CALL eosio_assert([0], [8363])
	
.LABEL $label$4
	$1 = ((int_64)*($4 + [184]) + (int_64)1)
	*($4 + [184]) = $1
	$0 = *($4)
	*(($2 = CALL $7([16]))) = $0
	*($2 + [8]) = (int_64)4977216460058263552
	*($3 + [352]) = $2
	$2 = ($2 + [16])
	*($3 + [360]) = $2
	*($3 + [356]) = $2
	CALL $47($0, (int_64)4734097396726759424, ($3 + [352]), $1)
	$2 = *($3 + [352])
	if ( ($2 == 0) ){ goto $label$5 }
	*($3 + [356]) = $2
	CALL $9($2)
	
.LABEL $label$5
	if ( (*($5) & [1]) ){ goto $label$8 }
	CALL $111($4)
	if ( (*($3 + [320]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($5 + [8]))
	CALL $111($4)
	if ( ((*($3 + [320]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [328])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $16 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

int_32 .FUNC $17 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $19 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[12])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $7(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[12]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$3 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$5 = ($3 + ((int_32)$1 * (int_32)[12]))
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($6 + [-4])
	*(($3 + [-4])) = *($1)
	$6 = ($6 + [-12])
	*(($3 = ($3 + [-12]))) = *($6)
	*($6) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($2 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$13
	$2 = $6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $9($1)
	
.LABEL $label$14
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $32($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$4 }
	$11 = ($1 + [4])
	$6 = [0]
	$12 = ($0 + [8])
	if ( ((uint_32)(*($12) - $9) > (uint_32)[7]) ){ goto $label$5 }
	$13 = [7]
	goto $label$3 
	
.LABEL $label$5
	$13 = [0]
	goto $label$3 
	
.LABEL $label$4
	$13 = [8]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$40 
	
.LABEL $label$42
	$9 = *($7)
	if ( ((uint_32)(*($12) - $9) > (uint_32)[7]) ){ goto $label$22 }
	$13 = [7]
	goto $label$6 
	
.LABEL $label$41
	CALL eosio_assert([0], [9334])
	$9 = *(($0 + [4]))
	$13 = [0]
	goto $label$6 
	
.LABEL $label$40
	CALL memcpy(($2 + [8]), $9, [8])
	$5 = (*($7) + [8])
	*(($7 = ($0 + [4]))) = $5
	if ( ((uint_32)(*($12) - $5) > (uint_32)[7]) ){ goto $label$23 }
	$13 = [18]
	goto $label$6 
	
.LABEL $label$39
	CALL eosio_assert([0], [9334])
	$5 = *($7)
	$13 = [1]
	goto $label$6 
	
.LABEL $label$38
	CALL memcpy($2, $5, [8])
	*($7) = (*($7) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$21 }
	$13 = [2]
	goto $label$6 
	
.LABEL $label$37
	$9 = $11
	$14 = *($5 + [16])
	$4 = *($2 + [8])
	if ( ((uint_64)$4 >= (uint_64)$14) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$36
	$9 = $5
	$5 = $8
	$14 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$14) ){ goto $label$18 }
	$13 = [15]
	goto $label$6 
	
.LABEL $label$35
	$8 = *($5)
	if ( $8 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$34
	if ( ((uint_64)$14 >= (uint_64)$4) ){ goto $label$16 }
	$13 = [12]
	goto $label$6 
	
.LABEL $label$33
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$17 }
	$13 = [13]
	goto $label$6 
	
.LABEL $label$32
	$5 = $9
	goto $label$7 
	
.LABEL $label$31
	$5 = $3
	$9 = $3
	$13 = [4]
	goto $label$6 
	
.LABEL $label$30
	if ( (*($9) == 0) ){ goto $label$15 }
	$13 = [5]
	goto $label$6 
	
.LABEL $label$29
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$28
	$9 = $5
	if ( *($9) ){ goto $label$14 }
	$13 = [9]
	goto $label$6 
	
.LABEL $label$27
	*(($8 = CALL $7([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [16]) = *($2 + [8])
	*($8 + [24]) = *($2)
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$10 }
	$13 = [10]
	goto $label$6 
	
.LABEL $label$26
	*($1) = $5
	$8 = *($9)
	$13 = [11]
	goto $label$6 
	
.LABEL $label$25
	CALL $28(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$11 }
	$13 = [8]
	goto $label$6 
	
.LABEL $label$24
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$23
	$13 = [1]
	goto $label$6 
	
.LABEL $label$22
	$13 = [0]
	goto $label$6 
	
.LABEL $label$21
	$13 = [17]
	goto $label$6 
	
.LABEL $label$20
	$13 = [15]
	goto $label$6 
	
.LABEL $label$19
	$13 = [3]
	goto $label$6 
	
.LABEL $label$18
	$13 = [3]
	goto $label$6 
	
.LABEL $label$17
	$13 = [4]
	goto $label$6 
	
.LABEL $label$16
	$13 = [4]
	goto $label$6 
	
.LABEL $label$15
	$13 = [9]
	goto $label$6 
	
.LABEL $label$14
	$13 = [5]
	goto $label$6 
	
.LABEL $label$13
	$13 = [8]
	goto $label$6 
	
.LABEL $label$12
	$13 = [6]
	goto $label$6 
	
.LABEL $label$11
	$13 = [6]
	goto $label$6 
	
.LABEL $label$10
	$13 = [11]
	goto $label$6 
	
.LABEL $label$9
	$13 = [16]
	goto $label$6 
	
.LABEL $label$8
	$13 = [14]
	goto $label$6 
	
.LABEL $label$7
	$13 = [14]
	goto $label$6 
	return $13
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $109(*($1), ($0 + [24]))
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $20($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$6 = CALL $20(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $20($2, ($1 + [8]))
	$5 = *($1 + [24])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $20(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 $5), (int_64 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2) = *($1)
	$3 = CALL $20(($2 + [8]), ($1 + [8]))
	$4 = CALL $20(($2 + [20]), ($1 + [20]))
	$1 = CALL $20(($2 + [32]), ($1 + [32]))
	CALL $181($0, $2)
	if ( (*($1) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*(($2 + [40])))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*(($2 + [28])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL $9(*(($2 + [16])))
	$global$0 = ($2 + [48])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $109(*($1), *($0 + [8]))
	CALL $109(*($1), *($0 + [12]))
	CALL $109(*($1), *($0 + [16]))
	CALL $182(*($1), *($0 + [20]))
	CALL $182(*($1), *($0 + [24]))
	CALL $183(*($1), *($0 + [28]))
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $109(*($1), ($3 + [8]))
	$0 = ($3 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9334])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

int_32 .FUNC $110 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($5 = (($4 + [96]) + [8]))) = *(($3 + [8]))
	*($4 + [96]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [24]) + [8])) = $3
	$2 = *($4 + [96])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [24]) = $2
	*($4 + [88]) = [9728]
	*($4 + [92]) = CALL $17([9728])
	*($4 + [16]) = *($4 + [88])
	CALL $36(($0 + [32]), ($4 + [16]))
	*($4 + [80]) = [9741]
	*($4 + [84]) = CALL $17([9741])
	*($4 + [8]) = *($4 + [80])
	CALL $36(($0 + [40]), ($4 + [8]))
	*($4 + [72]) = [9754]
	*($4 + [76]) = CALL $17([9754])
	*($4) = *($4 + [72])
	CALL $36(($0 + [48]), $4)
	$3 = CALL $17([9767])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9773])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [9766]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9818])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*(($0 + [56])) = $2
	$2 = *($0)
	*($0 + [64]) = $2
	*(($0 + [72])) = $2
	*(($0 + [80])) = (int_64)-1
	*(($0 + [88])) = (int_64)0
	*(($0 + [96])) = [0]
	*(($0 + [100])) = [0]
	*($0 + [104]) = $2
	*(($0 + [112])) = $2
	*(($0 + [120])) = (int_64)-1
	*(($0 + [128])) = (int_64)0
	*(($0 + [136])) = [0]
	*($0 + [144]) = $2
	*(($0 + [152])) = $2
	*(($0 + [160])) = (int_64)-1
	*(($0 + [168])) = (int_64)0
	*(($0 + [176])) = [0]
	*(($0 + [192])) = (int_64)0
	*($0 + [184]) = (int_64)0
	*(($0 + [200])) = (int_64)0
	*(($0 + [208])) = (int_64)0
	*(($0 + [216])) = [1]
	*(($5 = ($0 + [224]))) = (int_64)0
	*(($0 + [220])) = $5
	*($0 + [232]) = $2
	*(($0 + [240])) = $2
	*(($0 + [248])) = (int_64)-1
	*(($0 + [256])) = (int_64)0
	*(($0 + [264])) = [0]
	$3 = ($0 + [184])
	$6 = CALL db_find_i64($2, $2, (int_64)-9102017834344850240, (int_64)-9102017834344850240)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$7 = ($0 + [144])
	if ( ((int_32)*(CALL $120($7, $6) + [48]) == (int_32)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$9
	CALL $121(($4 + [24]), $7)
	$7 = ($4 + [64])
	goto $label$7 
	
.LABEL $label$8
	*(($7 = ($4 + [64]))) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = [1]
	*($4 + [60]) = $7
	*($4 + [48]) = ((int_64)(CASTING uint_64)(uint_32 ((uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $16() / (int_64)1000000)) / (uint_32)[86400])) + (int_64)-1)
	
.LABEL $label$7
	*($3) = *($4 + [24])
	*(($3 + [32])) = *((($4 + [24]) + [32]))
	*(($3 + [24])) = *((($4 + [24]) + [24]))
	*(($3 + [16])) = *((($4 + [24]) + [16]))
	*(($3 + [8])) = *((($4 + [24]) + [8]))
	$8 = ($0 + [224])
	$6 = ($0 + [220])
	CALL $122($6, *($8))
	*($6) = *($4 + [60])
	$3 = *($7)
	*($8) = $3
	$8 = *(($4 + [68]))
	*(($0 + [228])) = $8
	if ( ($8 == 0) ){ goto $label$11 }
	*($3 + [8]) = $5
	*(($4 + [60])) = $7
	*(($4 + [64])) = (int_64)0
	$3 = [0]
	goto $label$10 
	
.LABEL $label$11
	*($6) = $5
	
.LABEL $label$10
	CALL $122(($4 + [60]), $3)
	$global$0 = ($4 + [112])
	return $0
}

int_32 .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $123(($0 + [144]), ($0 + [184]), *($0))
	$1 = *(($0 + [256]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [260])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [16])))
	
.LABEL $label$6
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [256]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	CALL $122(($0 + [220]), *(($0 + [224])))
	$1 = *(($0 + [168]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [172])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $122(($4 + [36]), *(($4 + [40])))
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [168]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$7
	$1 = *(($0 + [128]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [132])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $35(($4 + [8]), *(($4 + [12])))
	CALL $9($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [128]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	$1 = *(($0 + [88]))
	if ( ($1 == 0) ){ goto $label$17 }
	$2 = ($0 + [92])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$21 }
	CALL $32(($3 + [36]), *(($3 + [40])))
	CALL $68(($3 + [24]), *(($3 + [28])))
	CALL $9($3)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$20 }
	$3 = *(($0 + [88]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $1
	
.LABEL $label$18
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$17
	return $0
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	$5 = ($2 + $4)
	*($3 + [376]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$5 = *(($3 + [376]))
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [372]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	$5 = *((($3 + [368]) + [8]))
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [372]) = $2
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [372])
	
.LABEL $label$7
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $109(($3 + [368]), ($3 + [328]))
	$2 = *((($3 + [368]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [368])
	*($3 + [8]) = $6
	*($3 + [40]) = $6
	$2 = CALL $110(($3 + [56]), $0, $1, ($3 + [8]))
	$4 = CALL $20(($3 + [24]), ($3 + [328]))
	if ( (*($4) & [1]) ){ goto $label$10 }
	CALL $111($2)
	if ( (*($3 + [328]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($4 + [8]))
	CALL $111($2)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [384])
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9871])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $37($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = $1
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = $4
	$4 = *($2)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	$3 = *($2 + [4])
	if ( $3 ){ goto $label$2 }
	$5 = ($2 + [8])
	$6 = [0]
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3 + [8]) = *($2 + [8])
	$5 = ($2 + [8])
	$6 = [1]
	
.LABEL $label$1
	$7 = *(($2 + [8]))
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	*($7 + [4]) = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($7) = $3
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$11 }
	$4 = *($7 + [4])
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = [0]
	$0 = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = *($1 + [8])
	*($5) = $8
	*(($8 + ( [0] ? [4] : ((int_32)*(*($1 + [8])) == (int_32)$1) ))) = $2
	*(($5 = *($1)) + [8]) = $2
	*($2) = $5
	$5 = *($1 + [4])
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*(($2 + [12])) = *($1 + [12])
	$0 = ( $2 ? $0 : ((int_32)$0 == (int_32)$1) )
	if ( ($7 & [255]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (($7 & [255]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$13 }
	*($3 + [12]) = [1]
	return 
	
.LABEL $label$13
	
.LOOP $label$21:
	$1 = *($4 + [12])
	$2 = *($4 + [8])
	if ( ((int_32)*($2) == (int_32)$4) ){ goto $label$33 }
	if ( (($1 & [255]) == 0) ){ goto $label$32 }
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$33
	if ( (($1 & [255]) == 0) ){ goto $label$31 }
	$1 = $4
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	*(($4 + [12])) = [1]
	*($2 + [12]) = [0]
	$1 = *($2 + [4])
	$3 = *($1)
	*($2 + [4]) = $3
	if ( ($3 == 0) ){ goto $label$34 }
	*($3 + [8]) = $2
	
.LABEL $label$34
	*($1 + [8]) = *($2 + [8])
	*((($3 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$2) ))) = $1
	*($1) = $2
	*($2 + [8]) = $1
	$2 = *($4)
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$4 = *($2 + [4])
	$2 = *($4)
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*(($4 + [12])) = [1]
	$1 = *($4 + [4])
	*($2) = $1
	*($2 + [12]) = [0]
	if ( ($1 == 0) ){ goto $label$35 }
	*($1 + [8]) = $2
	
.LABEL $label$35
	*(($4 + [8])) = *($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)*($3) == (int_32)$2) ){ goto $label$37 }
	*($3 + [4]) = $4
	goto $label$36 
	
.LABEL $label$37
	*($3) = $4
	$1 = *($2)
	
.LABEL $label$36
	*(($2 + [8])) = $4
	*(($4 + [4])) = $2
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($2 + [12]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$38 }
	if ( (*($4 + [12]) == 0) ){ goto $label$27 }
	
.LABEL $label$38
	*($1 + [12]) = [0]
	$4 = *($1 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$39 }
	if ( (*($4 + [12]) & [255]) ){ goto $label$22 }
	
.LABEL $label$39
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$28
	$3 = ($2 + [12])
	goto $label$26 
	
.LABEL $label$27
	if ( ($2 == 0) ){ goto $label$41 }
	if ( (*($2 + [12]) == 0) ){ goto $label$40 }
	$4 = *($1 + [4])
	
.LABEL $label$41
	*($4 + [12]) = [1]
	*($1 + [12]) = [0]
	$2 = *($4)
	*(($1 + [4])) = $2
	if ( ($2 == 0) ){ goto $label$42 }
	*($2 + [8]) = $1
	
.LABEL $label$42
	$3 = ($1 + [12])
	$2 = ($4 + [12])
	*($4 + [8]) = *($1 + [8])
	*((($0 = *($1 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$1) ))) = $4
	*($1 + [8]) = $4
	*($4) = $1
	$4 = ($4 + [8])
	goto $label$25 
	
.LABEL $label$40
	$3 = ($2 + [12])
	
.LABEL $label$26
	$2 = ($1 + [12])
	$4 = ($1 + [8])
	
.LABEL $label$25
	$4 = *($4)
	*($2) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4)
	$0 = *($2 + [4])
	*($4) = $0
	*($3) = [1]
	if ( ($0 == 0) ){ goto $label$43 }
	*($0 + [8]) = $4
	
.LABEL $label$43
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	return 
	
.LABEL $label$24
	if ( (*($2 + [12]) == 0) ){ goto $label$18 }
	
.LABEL $label$23
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$44 }
	if ( (*($1 + [12]) == 0) ){ goto $label$17 }
	
.LABEL $label$44
	*($4 + [12]) = [0]
	$4 = *($4 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$20 }
	if ( (*($4 + [12]) == 0) ){ goto $label$19 }
	
.LABEL $label$22
	$2 = *($4 + [8])
	$4 = *(($2 + (((int_32)*($2) == (int_32)$4) << [2])))
	goto $label$21 
	
.LABEL $label$20
	$4 = $0
	
.LABEL $label$19
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$18
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($1 + [12]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*($2 + [12]) = [1]
	*($4 + [12]) = [0]
	$0 = *($2 + [4])
	*($4) = $0
	if ( ($0 == 0) ){ goto $label$45 }
	*($0 + [8]) = $4
	
.LABEL $label$45
	$1 = ($4 + [12])
	$0 = ($2 + [12])
	*($2 + [8]) = *($4 + [8])
	*((($3 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	$4 = ($2 + [8])
	goto $label$14 
	
.LABEL $label$15
	$1 = ($1 + [12])
	$0 = ($4 + [12])
	$4 = ($4 + [8])
	
.LABEL $label$14
	$4 = *($4)
	*($0) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4 + [4])
	$0 = *($2)
	*($4 + [4]) = $0
	*($1) = [1]
	if ( ($0 == 0) ){ goto $label$46 }
	*($0 + [8]) = $4
	
.LABEL $label$46
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*($2) = $4
	return 
	
.LABEL $label$6
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $22($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	float_64 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_64 $23
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($2 + [216]) = $1
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$1 = CALL $16()
	$3 = ($0 + [64])
	*($2 + [208]) = $3
	$4 = ((uint_32)(CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000)) / (uint_32)[86400])
	CALL $26(($2 + [80]), ($2 + [208]), ($2 + [216]))
	$5 = *($2 + [84])
	if ( ($5 == 0) ){ goto $label$4 }
	$1 = *($2 + [216])
	if ( ((int_64)$1 != (int_64)*($5 + [8])) ){ goto $label$3 }
	*($2 + [200]) = *($2 + [80])
	goto $label$2 
	
.LABEL $label$4
	*($2 + [204]) = [0]
	*($2 + [200]) = ($2 + [208])
	$1 = *($2 + [216])
	goto $label$2 
	
.LABEL $label$3
	*($2 + [204]) = [0]
	*($2 + [200]) = ($2 + [208])
	
.LABEL $label$2
	$6 = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [160]) = $1
	$7 = [0]
	$5 = *($2 + [208])
	$8 = CALL db_idx64_upperbound(*($5), *($5 + [8]), (int_64)-5966816507475263488, ($2 + [160]), ($2 + [80]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$1 = *($2 + [80])
	$11 = *(($9 + [28]))
	$9 = *($2 + [208])
	$10 = *($9 + [24])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$7 }
	
.LOOP $label$9:
	$5 = ($11 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$8 }
	$11 = $5
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$7 }
	if ( ((int_32)*($7 + [48]) == (int_32)$9) ){ goto $label$6 }
	CALL eosio_assert([0], [9260])
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL $27($9, CALL $fimport$11(*($9), *($9 + [8]), (int_64)-5966816507475263488, $1))
	if ( ((int_32)*($7 + [48]) == (int_32)$9) ){ goto $label$6 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$6
	*(($7 + [56])) = $8
	
.LABEL $label$5
	$12 = (CASTING uint_64)(uint_32 $4)
	if ( (*($2 + [204]) == 0) ){ goto $label$10 }
	CALL prints([8275])
	$5 = *($2 + [204])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$10 }
	$13 = ($0 + [224])
	$8 = (($2 + [80]) | [4])
	$6 = (int_64)0
	
.LOOP $label$11:
	CALL prints([8283])
	CALL printui(*($5))
	*($2 + [84 align=4]) = (int_64)0
	*($2 + [80]) = $8
	$14 = ($5 + [40])
	$5 = *($2 + [204])
	$4 = *($5 + [36])
	if ( ((int_32)$4 == (int_32)$14) ){ goto $label$13 }
	$15 = [0]
	$9 = [0]
	$16 = ($4 + [16])
	if ( ((int_32)$8 != (int_32)$8) ){ goto $label$14 }
	$17 = [28]
	goto $label$12 
	
.LABEL $label$14
	$17 = [3]
	goto $label$12 
	
.LABEL $label$13
	$17 = [43]
	
.LABEL $label$12
	
.LOOP $label$15:
	goto $label$99 
	
.LABEL $label$126
	$9 = *($2 + [84])
	$4 = $11
	$16 = ($4 + [16])
	if ( ((int_32)*($2 + [80]) == (int_32)$8) ){ goto $label$70 }
	$17 = [3]
	goto $label$15 
	
.LABEL $label$125
	$11 = $9
	$10 = $8
	if ( ($9 == 0) ){ goto $label$53 }
	$17 = [4]
	goto $label$15 
	
.LABEL $label$124
	$5 = $11
	$11 = *($5 + [4])
	if ( $11 ){ goto $label$54 }
	goto $label$55 
	
.LABEL $label$123
	$5 = *($10 + [8])
	$11 = ((int_32)*($5) == (int_32)$10)
	$10 = $5
	if ( $11 ){ goto $label$52 }
	$17 = [5]
	goto $label$15 
	
.LABEL $label$122
	$1 = *($16)
	if ( (uint_64)(*($5 + [16]) <= $1) ){ goto $label$69 }
	$17 = [6]
	goto $label$15 
	
.LABEL $label$121
	if ( ($9 == 0) ){ goto $label$51 }
	$17 = [7]
	goto $label$15 
	
.LABEL $label$120
	$11 = $8
	$18 = *($9 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$119
	$11 = $9
	$9 = $5
	$18 = *($9 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$66 }
	$17 = [20]
	goto $label$15 
	
.LABEL $label$118
	$5 = *($9)
	if ( $5 ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$117
	if ( ((uint_64)$18 >= (uint_64)$1) ){ goto $label$48 }
	$17 = [17]
	goto $label$15 
	
.LABEL $label$116
	$11 = ($9 + [4])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$43 }
	$17 = [18]
	goto $label$15 
	
.LABEL $label$115
	$9 = $11
	goto $label$65 
	
.LABEL $label$114
	$5 = $8
	$17 = [24]
	goto $label$15 
	
.LABEL $label$113
	if ( ($9 == 0) ){ goto $label$40 }
	$17 = [25]
	goto $label$15 
	
.LABEL $label$112
	$9 = ($5 + [4])
	if ( (*($9) == 0) ){ goto $label$45 }
	$17 = [10]
	goto $label$15 
	
.LABEL $label$111
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$62 }
	$17 = [11]
	goto $label$15 
	
.LABEL $label$110
	$11 = *($4 + [8])
	if ( ((int_32)*($11) == (int_32)$4) ){ goto $label$59 }
	$17 = [12]
	goto $label$15 
	
.LABEL $label$109
	$10 = ($4 + [8])
	$17 = [13]
	goto $label$15 
	
.LABEL $label$108
	$5 = *($10)
	$10 = ($5 + [8])
	$11 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($11)) ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$107
	$5 = $8
	$9 = $8
	if ( *($9) ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$106
	$9 = $8
	$5 = $8
	goto $label$68 
	
.LABEL $label$105
	$5 = $9
	goto $label$67 
	
.LABEL $label$104
	$5 = $9
	$9 = $11
	if ( *($9) ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$103
	$5 = $9
	$9 = $11
	$17 = [14]
	goto $label$15 
	
.LABEL $label$102
	*((($11 = CALL $7([32])) + [24])) = *(($16 + [8]))
	*($11 + [16]) = *($16)
	*($11) = (int_64)0
	*($11 + [8]) = $5
	*($9) = $11
	$5 = *(*($2 + [80]))
	if ( ($5 == 0) ){ goto $label$44 }
	$17 = [15]
	goto $label$15 
	
.LABEL $label$101
	*($2 + [80]) = $5
	$11 = *($9)
	$17 = [16]
	goto $label$15 
	
.LABEL $label$100
	CALL $28(*($2 + [84]), $11)
	$15 = (*($5) + [1])
	*(($5 = (($2 + [80]) + [8]))) = $15
	$5 = *($4 + [4])
	if ( ($5 == 0) ){ goto $label$60 }
	$17 = [0]
	goto $label$15 
	
.LABEL $label$99
	$11 = $5
	$5 = *($11)
	if ( $5 ){ goto $label$61 }
	$17 = [1]
	goto $label$15 
	
.LABEL $label$98
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$56 }
	$17 = [29]
	goto $label$15 
	
.LABEL $label$97
	if ( ($15 == 0) ){ goto $label$39 }
	$17 = [30]
	goto $label$15 
	
.LABEL $label$96
	$10 = *($2 + [80])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$36 }
	$17 = [31]
	goto $label$15 
	
.LABEL $label$95
	$1 = *($10 + [16])
	if ( ((int_64)$1 != (int_64)$12) ){ goto $label$34 }
	$17 = [50]
	goto $label$15 
	
.LABEL $label$94
	$5 = *($10 + [4])
	if ( ($5 == 0) ){ goto $label$17 }
	$17 = [51]
	goto $label$15 
	
.LABEL $label$93
	$10 = $5
	$5 = *($10)
	if ( $5 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$92
	$5 = *($13)
	if ( ($5 == 0) ){ goto $label$33 }
	$17 = [33]
	goto $label$15 
	
.LABEL $label$91
	$11 = $13
	$17 = [34]
	goto $label$15 
	
.LABEL $label$90
	$9 = (uint_64)(*($5 + [16]) <= $1)
	$11 = ( $11 ? $5 : $9 )
	$5 = *(($5 + ($9 << [2])))
	if ( $5 ){ goto $label$32 }
	$17 = [35]
	goto $label$15 
	
.LABEL $label$89
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$31 }
	$17 = [36]
	goto $label$15 
	
.LABEL $label$88
	if ( ((uint_64)$1 >= (uint_64)*($11 + [16])) ){ goto $label$30 }
	$17 = [49]
	goto $label$15 
	
.LABEL $label$87
	$11 = $13
	$17 = [37]
	goto $label$15 
	
.LABEL $label$86
	$18 = *($11 + [48])
	$1 = *($11 + [56])
	$19 = ((float_64)((float_64)(CASTING float_64)(uint_64 *($10 + [24])) / (float_64)(CASTING float_64)(uint_64 *($11 + [32]))) * (float_64)(CASTING float_64)(uint_64 ( $1 ? ( $1 ? $18 : (int_64)($18 == 0) ) : *(*($2 + [204]) + [20]) )))
	if ( (((float_64)$19 < (float_64)(float_64)18446744073709551615) & ((float_64)$19 >= (float_64)(float_64)0)) ){ goto $label$29 }
	$17 = [48]
	goto $label$15 
	
.LABEL $label$85
	$1 = (int_64)0
	$5 = *($10 + [4])
	if ( $5 ){ goto $label$26 }
	$17 = [45]
	goto $label$15 
	
.LABEL $label$84
	$11 = *($10 + [8])
	if ( ((int_32)*($11) == (int_32)$10) ){ goto $label$25 }
	$17 = [46]
	goto $label$15 
	
.LABEL $label$83
	$9 = ($10 + [8])
	$17 = [47]
	goto $label$15 
	
.LABEL $label$82
	$5 = *($9)
	$9 = ($5 + [8])
	$11 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($11)) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$81
	$1 = (Rounds 0)($19)
	$5 = *($10 + [4])
	if ( ($5 == 0) ){ goto $label$27 }
	$17 = [39]
	goto $label$15 
	
.LABEL $label$80
	$11 = $5
	$5 = *($11)
	if ( $5 ){ goto $label$28 }
	$17 = [40]
	goto $label$15 
	
.LABEL $label$79
	if ( ((int_32)*($2 + [80]) != (int_32)$10) ){ goto $label$22 }
	$17 = [44]
	goto $label$15 
	
.LABEL $label$78
	*($2 + [80]) = $11
	$17 = [41]
	goto $label$15 
	
.LABEL $label$77
	$6 = ((int_64)$6 + (int_64)$1)
	*(($5 = (($2 + [80]) + [8]))) = (*($5) + [-1])
	CALL $29(*($2 + [84]), $10)
	CALL $9($10)
	$10 = $11
	$17 = [42]
	goto $label$15 
	
.LABEL $label$76
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$75
	$5 = *($10 + [8])
	if ( ((int_32)*($5) == (int_32)$10) ){ goto $label$16 }
	$17 = [53]
	goto $label$15 
	
.LABEL $label$74
	$11 = ($10 + [8])
	$17 = [54]
	goto $label$15 
	
.LABEL $label$73
	$5 = *($11)
	$11 = ($5 + [8])
	$10 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($10)) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$72
	$10 = $5
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$35 }
	$17 = [43]
	goto $label$15 
	
.LABEL $label$71
	CALL prints([8285])
	$1 = *($0)
	$5 = *($2 + [204])
	*($2 + [160]) = ($2 + [80])
	CALL $30($3, $5, $1, ($2 + [160]))
	CALL $31(($2 + [200]))
	CALL $32(($2 + [80]), *($2 + [84]))
	$5 = *($2 + [204])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$70
	$17 = [28]
	goto $label$15 
	
.LABEL $label$69
	$17 = [24]
	goto $label$15 
	
.LABEL $label$68
	$17 = [14]
	goto $label$15 
	
.LABEL $label$67
	$17 = [14]
	goto $label$15 
	
.LABEL $label$66
	$17 = [8]
	goto $label$15 
	
.LABEL $label$65
	$17 = [19]
	goto $label$15 
	
.LABEL $label$64
	$17 = [14]
	goto $label$15 
	
.LABEL $label$63
	$17 = [10]
	goto $label$15 
	
.LABEL $label$62
	$17 = [0]
	goto $label$15 
	
.LABEL $label$61
	$17 = [0]
	goto $label$15 
	
.LABEL $label$60
	$17 = [11]
	goto $label$15 
	
.LABEL $label$59
	$17 = [1]
	goto $label$15 
	
.LABEL $label$58
	$17 = [1]
	goto $label$15 
	
.LABEL $label$57
	$17 = [13]
	goto $label$15 
	
.LABEL $label$56
	$17 = [2]
	goto $label$15 
	
.LABEL $label$55
	$17 = [5]
	goto $label$15 
	
.LABEL $label$54
	$17 = [4]
	goto $label$15 
	
.LABEL $label$53
	$17 = [27]
	goto $label$15 
	
.LABEL $label$52
	$17 = [27]
	goto $label$15 
	
.LABEL $label$51
	$17 = [23]
	goto $label$15 
	
.LABEL $label$50
	$17 = [20]
	goto $label$15 
	
.LABEL $label$49
	$17 = [8]
	goto $label$15 
	
.LABEL $label$48
	$17 = [9]
	goto $label$15 
	
.LABEL $label$47
	$17 = [14]
	goto $label$15 
	
.LABEL $label$46
	$17 = [10]
	goto $label$15 
	
.LABEL $label$45
	$17 = [14]
	goto $label$15 
	
.LABEL $label$44
	$17 = [16]
	goto $label$15 
	
.LABEL $label$43
	$17 = [22]
	goto $label$15 
	
.LABEL $label$42
	$17 = [21]
	goto $label$15 
	
.LABEL $label$41
	$17 = [19]
	goto $label$15 
	
.LABEL $label$40
	$17 = [26]
	goto $label$15 
	
.LABEL $label$39
	$17 = [43]
	goto $label$15 
	
.LABEL $label$38
	$17 = [43]
	goto $label$15 
	
.LABEL $label$37
	$17 = [31]
	goto $label$15 
	
.LABEL $label$36
	$17 = [43]
	goto $label$15 
	
.LABEL $label$35
	$17 = [31]
	goto $label$15 
	
.LABEL $label$34
	$17 = [32]
	goto $label$15 
	
.LABEL $label$33
	$17 = [49]
	goto $label$15 
	
.LABEL $label$32
	$17 = [34]
	goto $label$15 
	
.LABEL $label$31
	$17 = [49]
	goto $label$15 
	
.LABEL $label$30
	$17 = [37]
	goto $label$15 
	
.LABEL $label$29
	$17 = [38]
	goto $label$15 
	
.LABEL $label$28
	$17 = [39]
	goto $label$15 
	
.LABEL $label$27
	$17 = [45]
	goto $label$15 
	
.LABEL $label$26
	$17 = [39]
	goto $label$15 
	
.LABEL $label$25
	$17 = [40]
	goto $label$15 
	
.LABEL $label$24
	$17 = [40]
	goto $label$15 
	
.LABEL $label$23
	$17 = [47]
	goto $label$15 
	
.LABEL $label$22
	$17 = [41]
	goto $label$15 
	
.LABEL $label$21
	$17 = [42]
	goto $label$15 
	
.LABEL $label$20
	$17 = [51]
	goto $label$15 
	
.LABEL $label$19
	$17 = [42]
	goto $label$15 
	
.LABEL $label$18
	$17 = [54]
	goto $label$15 
	
.LABEL $label$17
	$17 = [52]
	goto $label$15 
	
.LABEL $label$16
	$17 = [55]
	goto $label$15 
	
.LABEL $label$10
	CALL prints([8287])
	$7 = ($0 + [104])
	$1 = *($2 + [216])
	$11 = *(($0 + [132]))
	$10 = *(($0 + [128]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$131 }
	
.LOOP $label$133:
	$5 = ($11 + [-24])
	$13 = *($5)
	if ( ((int_64)*($13) == (int_64)$1) ){ goto $label$132 }
	$11 = $5
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$133 }
	goto $label$131 
	
.LABEL $label$132
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$131 }
	if ( ((int_32)*($13 + [20]) == (int_32)$7) ){ goto $label$134 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$134
	if ( $13 ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$131
	$5 = CALL db_find_i64(*($7), *(($0 + [112])), (int_64)-2507753476247781376, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$128 }
	$13 = CALL $33($7, $5)
	if ( ((int_32)*($13 + [20]) == (int_32)$7) ){ goto $label$130 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$130
	*($2 + [84 align=4]) = (int_64)0
	$8 = (($2 + [80]) | [4])
	*($2 + [80]) = $8
	$14 = ($13 + [12])
	$4 = *($13 + [8])
	if ( ((int_32)$4 == (int_32)$14) ){ goto $label$135 }
	$15 = [0]
	$9 = [0]
	$16 = ($4 + [16])
	if ( ((int_32)$8 != (int_32)$8) ){ goto $label$136 }
	$20 = [28]
	goto $label$127 
	
.LABEL $label$136
	$20 = [3]
	goto $label$127 
	
.LABEL $label$135
	$20 = [37]
	goto $label$127 
	
.LABEL $label$129
	$20 = [38]
	goto $label$127 
	
.LABEL $label$128
	$20 = [38]
	
.LABEL $label$127
	
.LOOP $label$137:
	goto $label$270 
	
.LABEL $label$297
	$9 = *($2 + [84])
	$4 = $11
	$16 = ($4 + [16])
	if ( ((int_32)*($2 + [80]) == (int_32)$8) ){ goto $label$210 }
	$20 = [3]
	goto $label$137 
	
.LABEL $label$296
	$11 = $9
	$10 = $8
	if ( ($9 == 0) ){ goto $label$193 }
	$20 = [4]
	goto $label$137 
	
.LABEL $label$295
	$5 = $11
	$11 = *($5 + [4])
	if ( $11 ){ goto $label$194 }
	goto $label$195 
	
.LABEL $label$294
	$5 = *($10 + [8])
	$11 = ((int_32)*($5) == (int_32)$10)
	$10 = $5
	if ( $11 ){ goto $label$192 }
	$20 = [5]
	goto $label$137 
	
.LABEL $label$293
	$1 = *($16)
	if ( (uint_64)(*($5 + [16]) <= $1) ){ goto $label$209 }
	$20 = [6]
	goto $label$137 
	
.LABEL $label$292
	if ( ($9 == 0) ){ goto $label$191 }
	$20 = [7]
	goto $label$137 
	
.LABEL $label$291
	$11 = $8
	$18 = *($9 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$189 }
	goto $label$190 
	
.LABEL $label$290
	$11 = $9
	$9 = $5
	$18 = *($9 + [16])
	if ( ((uint_64)$1 >= (uint_64)$18) ){ goto $label$206 }
	$20 = [20]
	goto $label$137 
	
.LABEL $label$289
	$5 = *($9)
	if ( $5 ){ goto $label$181 }
	goto $label$182 
	
.LABEL $label$288
	if ( ((uint_64)$18 >= (uint_64)$1) ){ goto $label$188 }
	$20 = [17]
	goto $label$137 
	
.LABEL $label$287
	$11 = ($9 + [4])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$183 }
	$20 = [18]
	goto $label$137 
	
.LABEL $label$286
	$9 = $11
	goto $label$205 
	
.LABEL $label$285
	$5 = $8
	$20 = [24]
	goto $label$137 
	
.LABEL $label$284
	if ( ($9 == 0) ){ goto $label$180 }
	$20 = [25]
	goto $label$137 
	
.LABEL $label$283
	$9 = ($5 + [4])
	if ( (*($9) == 0) ){ goto $label$185 }
	$20 = [10]
	goto $label$137 
	
.LABEL $label$282
	$5 = *($4 + [4])
	if ( $5 ){ goto $label$202 }
	$20 = [11]
	goto $label$137 
	
.LABEL $label$281
	$11 = *($4 + [8])
	if ( ((int_32)*($11) == (int_32)$4) ){ goto $label$199 }
	$20 = [12]
	goto $label$137 
	
.LABEL $label$280
	$10 = ($4 + [8])
	$20 = [13]
	goto $label$137 
	
.LABEL $label$279
	$5 = *($10)
	$10 = ($5 + [8])
	$11 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($11)) ){ goto $label$197 }
	goto $label$198 
	
.LABEL $label$278
	$5 = $8
	$9 = $8
	if ( *($9) ){ goto $label$186 }
	goto $label$187 
	
.LABEL $label$277
	$9 = $8
	$5 = $8
	goto $label$208 
	
.LABEL $label$276
	$5 = $9
	goto $label$207 
	
.LABEL $label$275
	$5 = $9
	$9 = $11
	if ( *($9) ){ goto $label$203 }
	goto $label$204 
	
.LABEL $label$274
	$5 = $9
	$9 = $11
	$20 = [14]
	goto $label$137 
	
.LABEL $label$273
	*((($11 = CALL $7([32])) + [24])) = *(($16 + [8]))
	*($11 + [16]) = *($16)
	*($11) = (int_64)0
	*($11 + [8]) = $5
	*($9) = $11
	$5 = *(*($2 + [80]))
	if ( ($5 == 0) ){ goto $label$184 }
	$20 = [15]
	goto $label$137 
	
.LABEL $label$272
	*($2 + [80]) = $5
	$11 = *($9)
	$20 = [16]
	goto $label$137 
	
.LABEL $label$271
	CALL $28(*($2 + [84]), $11)
	$15 = (*($5) + [1])
	*(($5 = (($2 + [80]) + [8]))) = $15
	$5 = *($4 + [4])
	if ( ($5 == 0) ){ goto $label$200 }
	$20 = [0]
	goto $label$137 
	
.LABEL $label$270
	$11 = $5
	$5 = *($11)
	if ( $5 ){ goto $label$201 }
	$20 = [1]
	goto $label$137 
	
.LABEL $label$269
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$196 }
	$20 = [29]
	goto $label$137 
	
.LABEL $label$268
	if ( ($15 == 0) ){ goto $label$179 }
	$20 = [30]
	goto $label$137 
	
.LABEL $label$267
	$11 = *($2 + [80])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$178 }
	$20 = [31]
	goto $label$137 
	
.LABEL $label$266
	$20 = [32]
	goto $label$137 
	
.LABEL $label$265
	$9 = $11
	$5 = *($9 + [4])
	if ( ((int_64)*($9 + [16]) != (int_64)$12) ){ goto $label$174 }
	$20 = [81]
	goto $label$137 
	
.LABEL $label$264
	if ( ($5 == 0) ){ goto $label$140 }
	$20 = [82]
	goto $label$137 
	
.LABEL $label$263
	$11 = $5
	$5 = *($11)
	if ( $5 ){ goto $label$141 }
	goto $label$142 
	
.LABEL $label$262
	if ( ($5 == 0) ){ goto $label$171 }
	$20 = [34]
	goto $label$137 
	
.LABEL $label$261
	$11 = $5
	$5 = *($11)
	if ( $5 ){ goto $label$172 }
	goto $label$173 
	
.LABEL $label$260
	$11 = *($9 + [8])
	if ( ((int_32)*($11) == (int_32)$9) ){ goto $label$139 }
	$20 = [85]
	goto $label$137 
	
.LABEL $label$259
	$10 = ($9 + [8])
	$20 = [86]
	goto $label$137 
	
.LABEL $label$258
	$5 = *($10)
	$10 = ($5 + [8])
	$11 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($11)) ){ goto $label$138 }
	$20 = [83]
	goto $label$137 
	
.LABEL $label$257
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$176 }
	goto $label$177 
	
.LABEL $label$256
	$11 = *($9 + [8])
	if ( ((int_32)*($11) == (int_32)$9) ){ goto $label$170 }
	$20 = [79]
	goto $label$137 
	
.LABEL $label$255
	$10 = ($9 + [8])
	$20 = [80]
	goto $label$137 
	
.LABEL $label$254
	$5 = *($10)
	$10 = ($5 + [8])
	$11 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($11)) ){ goto $label$169 }
	$20 = [35]
	goto $label$137 
	
.LABEL $label$253
	if ( ((int_32)*($2 + [80]) != (int_32)$9) ){ goto $label$168 }
	$20 = [77]
	goto $label$137 
	
.LABEL $label$252
	*($2 + [80]) = $11
	$20 = [36]
	goto $label$137 
	
.LABEL $label$251
	*(($5 = (($2 + [80]) + [8]))) = (*($5) + [-1])
	CALL $29(*($2 + [84]), $9)
	CALL $9($9)
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$175 }
	$20 = [37]
	goto $label$137 
	
.LABEL $label$250
	$1 = *($0)
	*($2 + [160]) = ($2 + [80])
	CALL $34($7, $13, $1, ($2 + [160]))
	CALL $35(($2 + [80]), *($2 + [84]))
	$20 = [38]
	goto $label$137 
	
.LABEL $label$249
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$167 }
	$20 = [39]
	goto $label$137 
	
.LABEL $label$248
	$21 = *($0 + [48])
	*($2 + [144]) = [8295]
	*($2 + [148]) = CALL $17([8295])
	*($2 + [24]) = *($2 + [144])
	$5 = CALL $36(($2 + [152]), ($2 + [24]))
	$22 = *($0 + [32])
	$23 = *($5)
	*($2 + [128]) = [8302]
	*($2 + [132]) = CALL $17([8302])
	*($2 + [16]) = *($2 + [128])
	$4 = CALL $36(($2 + [136]), ($2 + [16]))
	$12 = *($0 + [56])
	if ( (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$166 }
	$20 = [40]
	goto $label$137 
	
.LABEL $label$247
	CALL eosio_assert([0], [9045])
	$20 = [41]
	goto $label$137 
	
.LABEL $label$246
	$9 = ($0 + [32])
	$1 = (uint_64)$12 >> (uint_64)(int_64)8)
	$5 = [0]
	$20 = [42]
	goto $label$137 
	
.LABEL $label$245
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$161 }
	$20 = [70]
	goto $label$137 
	
.LABEL $label$244
	$18 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$144 }
	$20 = [71]
	goto $label$137 
	
.LABEL $label$243
	$1 = $18
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$242
	$1 = $18
	$20 = [73]
	goto $label$137 
	
.LABEL $label$241
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$160 }
	$20 = [74]
	goto $label$137 
	
.LABEL $label$240
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$11 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $11 ){ goto $label$143 }
	$20 = [75]
	goto $label$137 
	
.LABEL $label$239
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$238
	CALL eosio_assert([0], [9094])
	$20 = [44]
	goto $label$137 
	
.LABEL $label$237
	*(($2 + [72])) = [0]
	*($2 + [64]) = (int_64)0
	$5 = CALL $17([8311])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$159 }
	$20 = [45]
	goto $label$137 
	
.LABEL $label$236
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$158 }
	$20 = [68]
	goto $label$137 
	
.LABEL $label$235
	*($2 + [64]) = ($5 << [1])
	$11 = (($2 + [64]) | [1])
	if ( $5 ){ goto $label$156 }
	goto $label$157 
	
.LABEL $label$234
	$9 = ($0 + [32])
	goto $label$148 
	
.LABEL $label$233
	$10 = (($5 + [16]) & [-16])
	$11 = CALL $7($10)
	*($2 + [64]) = ($10 | [1])
	*($2 + [72]) = $11
	*($2 + [68]) = $5
	$20 = [47]
	goto $label$137 
	
.LABEL $label$232
	CALL memcpy($11, [8311], $5)
	$20 = [48]
	goto $label$137 
	
.LABEL $label$231
	*(($11 + $5)) = [0]
	*((($2 + [80]) + [24])) = $12
	$5 = ($2 + [72])
	*(($2 + [120])) = *($5)
	*($5) = [0]
	*($2 + [96]) = $6
	*($2 + [160]) = $22
	*($2 + [80]) = *(($0 + [48]))
	*($2 + [88]) = *($2 + [216])
	*($2 + [112]) = *($2 + [64])
	*($2 + [64]) = (int_64)0
	*($2 + [168]) = *($4)
	*(($5 = CALL $7([16]))) = $21
	*($5 + [8]) = $23
	*((($2 + [160]) + [36])) = [0]
	$11 = ($5 + [16])
	*((($2 + [160]) + [24])) = $11
	*(($2 + [180])) = $11
	*($2 + [176]) = $5
	*($2 + [188 align=4]) = (int_64)0
	$5 = *($2 + [112])
	$11 = ( *((($2 + [80]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($11 + [32])
	$1 = (CASTING uint_64)(uint_32 $11)
	$11 = ($2 + [188])
	$20 = [49]
	goto $label$137 
	
.LABEL $label$230
	$5 = ($5 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$155 }
	$20 = [50]
	goto $label$137 
	
.LABEL $label$229
	if ( ($5 == 0) ){ goto $label$154 }
	$20 = [51]
	goto $label$137 
	
.LABEL $label$228
	CALL $37($11, $5)
	$11 = *(($2 + [192]))
	$5 = *(($2 + [188]))
	goto $label$153 
	
.LABEL $label$227
	$11 = [0]
	$5 = [0]
	$20 = [52]
	goto $label$137 
	
.LABEL $label$226
	*($2 + [228]) = $5
	*($2 + [224]) = $5
	*($2 + [232]) = $11
	*($2 + [240]) = ($2 + [224])
	*($2 + [248]) = ($2 + [80])
	CALL $38(($2 + [248]), ($2 + [240]))
	CALL $39(($2 + [160]))
	$5 = *($2 + [188])
	if ( ($5 == 0) ){ goto $label$152 }
	$20 = [53]
	goto $label$137 
	
.LABEL $label$225
	*(($2 + [192])) = $5
	CALL $9($5)
	$20 = [54]
	goto $label$137 
	
.LABEL $label$224
	$5 = *($2 + [176])
	if ( ($5 == 0) ){ goto $label$151 }
	$20 = [55]
	goto $label$137 
	
.LABEL $label$223
	*(($2 + [180])) = $5
	CALL $9($5)
	$20 = [56]
	goto $label$137 
	
.LABEL $label$222
	if ( ((*(($2 + [112])) & [1]) == 0) ){ goto $label$150 }
	$20 = [57]
	goto $label$137 
	
.LABEL $label$221
	CALL $9(*(($2 + [120])))
	$20 = [58]
	goto $label$137 
	
.LABEL $label$220
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$149 }
	$20 = [59]
	goto $label$137 
	
.LABEL $label$219
	CALL $9(*(($2 + [72])))
	$20 = [60]
	goto $label$137 
	
.LABEL $label$218
	$1 = *($9)
	*($2 + [48]) = [8295]
	*($2 + [52]) = CALL $17([8295])
	*($2 + [8]) = *($2 + [48])
	$18 = *(CALL $36(($2 + [56]), ($2 + [8])))
	$12 = *($9)
	*($2 + [32]) = [8357]
	*($2 + [36]) = CALL $17([8357])
	*($2) = *($2 + [32])
	$5 = CALL $36(($2 + [40]), $2)
	*($2 + [80]) = $12
	*($2 + [160]) = *($2 + [216])
	*($2 + [88]) = *($5)
	*(($5 = CALL $7([16]))) = $1
	*($5 + [8]) = $18
	*(($2 + [116])) = [0]
	$11 = ($5 + [16])
	*(($2 + [104])) = $11
	*(($2 + [100])) = $11
	*($2 + [96]) = $5
	*($2 + [108 align=4]) = (int_64)0
	CALL $37(($2 + [108]), [8])
	$5 = *($2 + [108])
	if ( ((int_32)(*(($2 + [112])) - $5) > (int_32)[7]) ){ goto $label$147 }
	$20 = [66]
	goto $label$137 
	
.LABEL $label$217
	CALL eosio_assert([0], [9114])
	$20 = [61]
	goto $label$137 
	
.LABEL $label$216
	CALL memcpy($5, ($2 + [160]), [8])
	CALL $39(($2 + [80]))
	$5 = *($2 + [108])
	if ( ($5 == 0) ){ goto $label$146 }
	$20 = [62]
	goto $label$137 
	
.LABEL $label$215
	*(($2 + [112])) = $5
	CALL $9($5)
	$20 = [63]
	goto $label$137 
	
.LABEL $label$214
	$5 = *($2 + [96])
	if ( ($5 == 0) ){ goto $label$145 }
	$20 = [64]
	goto $label$137 
	
.LABEL $label$213
	*(($2 + [100])) = $5
	CALL $9($5)
	$20 = [65]
	goto $label$137 
	
.LABEL $label$212
	$global$0 = ($2 + [256])
	return (unreachable)
	
.LABEL $label$211
	CALL $19(($2 + [64]))
	
.LABEL $label$210
	$20 = [28]
	goto $label$137 
	
.LABEL $label$209
	$20 = [24]
	goto $label$137 
	
.LABEL $label$208
	$20 = [14]
	goto $label$137 
	
.LABEL $label$207
	$20 = [14]
	goto $label$137 
	
.LABEL $label$206
	$20 = [8]
	goto $label$137 
	
.LABEL $label$205
	$20 = [19]
	goto $label$137 
	
.LABEL $label$204
	$20 = [14]
	goto $label$137 
	
.LABEL $label$203
	$20 = [10]
	goto $label$137 
	
.LABEL $label$202
	$20 = [0]
	goto $label$137 
	
.LABEL $label$201
	$20 = [0]
	goto $label$137 
	
.LABEL $label$200
	$20 = [11]
	goto $label$137 
	
.LABEL $label$199
	$20 = [1]
	goto $label$137 
	
.LABEL $label$198
	$20 = [1]
	goto $label$137 
	
.LABEL $label$197
	$20 = [13]
	goto $label$137 
	
.LABEL $label$196
	$20 = [2]
	goto $label$137 
	
.LABEL $label$195
	$20 = [5]
	goto $label$137 
	
.LABEL $label$194
	$20 = [4]
	goto $label$137 
	
.LABEL $label$193
	$20 = [27]
	goto $label$137 
	
.LABEL $label$192
	$20 = [27]
	goto $label$137 
	
.LABEL $label$191
	$20 = [23]
	goto $label$137 
	
.LABEL $label$190
	$20 = [20]
	goto $label$137 
	
.LABEL $label$189
	$20 = [8]
	goto $label$137 
	
.LABEL $label$188
	$20 = [9]
	goto $label$137 
	
.LABEL $label$187
	$20 = [14]
	goto $label$137 
	
.LABEL $label$186
	$20 = [10]
	goto $label$137 
	
.LABEL $label$185
	$20 = [14]
	goto $label$137 
	
.LABEL $label$184
	$20 = [16]
	goto $label$137 
	
.LABEL $label$183
	$20 = [22]
	goto $label$137 
	
.LABEL $label$182
	$20 = [21]
	goto $label$137 
	
.LABEL $label$181
	$20 = [19]
	goto $label$137 
	
.LABEL $label$180
	$20 = [26]
	goto $label$137 
	
.LABEL $label$179
	$20 = [37]
	goto $label$137 
	
.LABEL $label$178
	$20 = [37]
	goto $label$137 
	
.LABEL $label$177
	$20 = [37]
	goto $label$137 
	
.LABEL $label$176
	$20 = [32]
	goto $label$137 
	
.LABEL $label$175
	$20 = [32]
	goto $label$137 
	
.LABEL $label$174
	$20 = [33]
	goto $label$137 
	
.LABEL $label$173
	$20 = [35]
	goto $label$137 
	
.LABEL $label$172
	$20 = [34]
	goto $label$137 
	
.LABEL $label$171
	$20 = [78]
	goto $label$137 
	
.LABEL $label$170
	$20 = [35]
	goto $label$137 
	
.LABEL $label$169
	$20 = [80]
	goto $label$137 
	
.LABEL $label$168
	$20 = [36]
	goto $label$137 
	
.LABEL $label$167
	$20 = [76]
	goto $label$137 
	
.LABEL $label$166
	$20 = [41]
	goto $label$137 
	
.LABEL $label$165
	$20 = [42]
	goto $label$137 
	
.LABEL $label$164
	$20 = [44]
	goto $label$137 
	
.LABEL $label$163
	$20 = [42]
	goto $label$137 
	
.LABEL $label$162
	$20 = [44]
	goto $label$137 
	
.LABEL $label$161
	$20 = [43]
	goto $label$137 
	
.LABEL $label$160
	$20 = [43]
	goto $label$137 
	
.LABEL $label$159
	$20 = [69]
	goto $label$137 
	
.LABEL $label$158
	$20 = [46]
	goto $label$137 
	
.LABEL $label$157
	$20 = [48]
	goto $label$137 
	
.LABEL $label$156
	$20 = [47]
	goto $label$137 
	
.LABEL $label$155
	$20 = [49]
	goto $label$137 
	
.LABEL $label$154
	$20 = [67]
	goto $label$137 
	
.LABEL $label$153
	$20 = [52]
	goto $label$137 
	
.LABEL $label$152
	$20 = [54]
	goto $label$137 
	
.LABEL $label$151
	$20 = [56]
	goto $label$137 
	
.LABEL $label$150
	$20 = [58]
	goto $label$137 
	
.LABEL $label$149
	$20 = [60]
	goto $label$137 
	
.LABEL $label$148
	$20 = [60]
	goto $label$137 
	
.LABEL $label$147
	$20 = [61]
	goto $label$137 
	
.LABEL $label$146
	$20 = [63]
	goto $label$137 
	
.LABEL $label$145
	$20 = [65]
	goto $label$137 
	
.LABEL $label$144
	$20 = [72]
	goto $label$137 
	
.LABEL $label$143
	$20 = [73]
	goto $label$137 
	
.LABEL $label$142
	$20 = [83]
	goto $label$137 
	
.LABEL $label$141
	$20 = [82]
	goto $label$137 
	
.LABEL $label$140
	$20 = [84]
	goto $label$137 
	
.LABEL $label$139
	$20 = [83]
	goto $label$137 
	
.LABEL $label$138
	$20 = [86]
	goto $label$137 
	$17
	$20
}

void .FUNC $24 (int_32 $0)
{
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([64])) + [20]) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = $0
	*($5 + [24]) = ($5 + [28])
	*($5 + [36]) = ($5 + [40])
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [20])
	*($3 + [56]) = ($5 + [24])
	*($3 + [60]) = ($5 + [36])
	CALL $178(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $67(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $32(($1 + [36]), *(($1 + [40])))
	CALL $68(($1 + [24]), *(($1 + [28])))
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5966816507475263488, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $27($7, CALL $fimport$11(*($7), *($7 + [8]), (int_64)-5966816507475263488, $6))
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$2
	*(($4 + [56])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $101 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [304]), $2, [8])
	$8 = ($2 + [8])
	$9 = (($4 + [304]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy($9, $8, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $110(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($9)
	$1 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $111($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $100 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [304]) + [8])
	CALL memcpy(($4 + [304]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $110(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [304]) + [8]))
	$1 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $111($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $103 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [328]) = [0]
	*($4 + [320]) = (int_64)0
	*($4 + [308]) = $2
	*($4 + [304]) = $2
	*($4 + [312]) = ($2 + $7)
	CALL $109(($4 + [304]), ($4 + [320]))
	$3 = *($4 + [312])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [304])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $110(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$10 = CALL $20(($4 + [336]), ($4 + [320]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$5 = CALL $20(($4 + [352]), $10)
	CALL void $3((int_32 $5), (int_32 $6))
	if ( (*($4 + [352]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [336]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*($10 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $2($2)
	
.LABEL $label$5
	CALL $111($9)
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [328])))
	
.LABEL $label$10
	$global$0 = ($4 + [368])
	return [1]
}

int_32 .FUNC $102 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [304]), $2, [8])
	$8 = ($2 + [8])
	$9 = (($4 + [304]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$6
	CALL memcpy($9, $8, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $110(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($9)
	$1 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $111($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $105 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [592])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = (int_64)0
	*(($4 + [376])) = (int_64)0
	*(($4 + [384])) = (int_64)0
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	*($4 + [504]) = ($4 + [312])
	*($4 + [44]) = (($4 + [328]) + [8])
	*($4 + [48]) = ($4 + [344])
	*($4 + [52]) = ($4 + [356])
	*($4 + [56]) = ($4 + [368])
	*($4 + [60]) = ($4 + [380])
	*($4 + [64]) = ($4 + [392])
	*($4 + [68]) = ($4 + [404])
	*($4 + [40]) = ($4 + [328])
	CALL $112(($4 + [40]), ($4 + [504]))
	$3 = *($4 + [320])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [312])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $110(($4 + [40]), $0, $1, ($4 + [8]))
	$10 = (($4 + [40]) + int_32($5 >> [1]))
	$3 = CALL $62(($4 + [416]), ($4 + [328]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($10) + $6))
	
.LABEL $label$5
	$5 = CALL $62(($4 + [504]), $3)
	CALL void $10((int_32 $5), (int_32 $6))
	CALL $64($5)
	CALL $64($3)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $111($9)
	CALL $64(($4 + [328]))
	$global$0 = ($4 + [592])
	return [1]
}

int_32 .FUNC $104 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [368])) = [0]
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [24]) = ($4 + [320])
	*($4 + [48]) = ($4 + [336])
	CALL $116(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [328])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [320])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $110(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [376])
	CALL $117(($4 + [24]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $111($3)
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [368])))
	
.LABEL $label$5
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $107 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9334])
	
.LABEL $label$5
	CALL memcpy(($4 + [312]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $110(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [312])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $111($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $106 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$3 = *($4 + [316])
	
.LABEL $label$4
	CALL memcpy(($4 + [328]), $3, [8])
	*($4 + [316]) = ($3 + [8])
	$8 = (($4 + [328]) + [8])
	CALL $109(($4 + [312]), $8)
	$3 = *((($4 + [312]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [312])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $110(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [328])
	$8 = CALL $20(($4 + [352]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $20(($4 + [368]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [368]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [352]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [352]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $2($2)
	
.LABEL $label$6
	CALL $111($10)
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [344])))
	
.LABEL $label$11
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $119($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $23($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $23($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $19($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $108 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($3 = ($4 + [368]))) = (int_64)0
	*(($6 = (($4 + [328]) + [8]))) = (int_64)0
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*(($7 = ($4 + [360]))) = (int_64)0
	*($3) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	$8 = ($4 + [348])
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9334])
	$3 = *($4 + [316])
	
.LABEL $label$4
	CALL memcpy(($4 + [328]), $3, [8])
	*($4 + [316]) = ($3 + [8])
	CALL $109(($4 + [312]), $6)
	CALL $109(($4 + [312]), $8)
	CALL $109(($4 + [312]), $7)
	$3 = *((($4 + [312]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$9 = *($4 + [312])
	*($4) = $9
	*($4 + [24]) = $9
	$3 = CALL $110(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [376])
	CALL $115(($4 + [16]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $111($3)
	if ( ((*(($4 + [360])) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [368])))
	
.LABEL $label$6
	if ( ((*(($4 + [348])) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($4 + [356])))
	
.LABEL $label$7
	if ( ((*(($4 + [336])) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($4 + [344])))
	
.LABEL $label$8
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9114])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9114])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9114])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9114])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $177(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $39 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $37($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $43(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8888])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [8993])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8926])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8993])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	$6 = [8]
	$7 = *($1)
	$3 = *($3)
	$8 = ($1 + [8])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$3 }
	CALL $176($8, *($3), ($3 + [4]))
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9552])
	
.LABEL $label$3
	$9 = *(($1 + [16]))
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	$11 = ($1 + [12])
	$10 = *($1 + [8])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$5 }
	
.LOOP $label$6:
	$12 = $10
	$3 = *($12 + [4])
	if ( ($3 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = $3
	$3 = *($10)
	if ( $3 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$10 = *($12 + [8])
	if ( ((int_32)*($10) == (int_32)$12) ){ goto $label$7 }
	$12 = ($12 + [8])
	
.LOOP $label$10:
	$3 = *($12)
	$12 = ($3 + [8])
	$10 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($10)) ){ goto $label$10 }
	
.LABEL $label$7
	$6 = ($6 + [9])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($6 <= [513]) ){ goto $label$12 }
	$3 = CALL $1($6)
	goto $label$11 
	
.LABEL $label$12
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$11
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	$10 = $3
	if ( ((int_32)$6 > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9114])
	$10 = *($5 + [4])
	
.LABEL $label$13
	CALL memcpy($10, $1, [8])
	*($5 + [4]) = ($10 + [8])
	CALL $162($5, $8)
	CALL db_update_i64(*($1 + [24]), $2, $3, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$16 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $2($3)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [16])
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $35($0, *($1))
	CALL $35($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $32($0, *($1))
	CALL $32($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9311])
	
.LABEL $label$5
	$4 = CALL $1($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL $7([32]))) = (int_64)0
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [20]) = $0
	*($5 + [8]) = ($5 + [12])
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9334])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $175(($3 + [32]), $8)
	*($5 + [24]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $161(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $35(($1 + [8]), *(($1 + [12])))
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9501])
	
.LABEL $label$2
	*($5 + [24]) = *(($1 + [8]))
	$6 = *($1)
	CALL prints([9900])
	$3 = *($3)
	$7 = ($1 + [36])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $40($7, *($3), ($3 + [4]))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [9552])
	
.LABEL $label$4
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [60]) = $7
	*($5 + [40]) = $1
	$8 = ($1 + [8])
	*($5 + [44]) = $8
	$9 = ($1 + [16])
	*($5 + [48]) = $9
	$10 = ($1 + [20])
	*($5 + [52]) = $10
	$11 = ($1 + [24])
	*($5 + [56]) = $11
	CALL $41(($5 + [40]), ($5 + [8]))
	$3 = *($5 + [32])
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $1($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $8
	*($5 + [48]) = $9
	*($5 + [52]) = $10
	*($5 + [56]) = $11
	*($5 + [60]) = $7
	*($5 + [40]) = $1
	CALL $42(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $2($4)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $18(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$4 = ($1 + [56])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5966816507475263488, ($5 + [32]), $6)
	*($4) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

int_32 .FUNC $31 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [56])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9909])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [56])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-5966816507475263488, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [56]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9260])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $27($7, CALL $fimport$11(*($7), *($7 + [8]), (int_64)-5966816507475263488, $6))
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9260])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [56])) = $5
	$global$0 = ($1 + [16])
	return $0
}