(data (i32.const 4) "pk\00\00")
(data (i32.const 16) "dfdiceroll\00")
(data (i32.const 32) "dbetonedice1\00")
(data (i32.const 64) "eosio\00")
(data (i32.const 80) "onerror\00")
(data (i32.const 96) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 160) "eosio.token\00")
(data (i32.const 176) "dbetminepool\00")
(data (i32.const 192) "betdicetoken\00")
(data (i32.const 208) "bitpietokens\00")
(data (i32.const 224) "transfer\00")
(data (i32.const 240) "diceroll\00")
(data (i32.const 256) "clear\00")
(data (i32.const 272) "clearcandy\00")
(data (i32.const 288) "maintain\00")
(data (i32.const 304) "unlockuser\00")
(data (i32.const 320) "candy\00")
(data (i32.const 336) "read\00")
(data (i32.const 352) "get\00")
(data (i32.const 368) "dbetonesicbo\00")
(data (i32.const 384) "dbetbaccarat\00")
(data (i32.const 400) "bobinghotbag\00")
(data (i32.const 416) "GAME ERROR\00")
(data (i32.const 432) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 496) "notify\00")
(data (i32.const 512) "active\00")
(data (i32.const 528) "prochaintech\00")
(data (i32.const 544) "cannot create objects in table of another contract\00")
(data (i32.const 608) "write\00")
(data (i32.const 624) "cannot pass end iterator to modify\00")
(data (i32.const 672) "object passed to modify is not in multi_index\00")
(data (i32.const 720) "cannot modify objects in table of another contract\00")
(data (i32.const 784) "updater cannot change primary key when modifying an object\00")
(data (i32.const 848) "error reading iterator\00")
(data (i32.const 880) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 944) "invalid symbol name\00")
(data (i32.const 976) "cannot pass end iterator to erase\00")
(data (i32.const 1024) "cannot increment end iterator\00")
(data (i32.const 1056) "object passed to erase is not in multi_index\00")
(data (i32.const 1104) "cannot erase objects in table of another contract\00")
(data (i32.const 1168) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1232) "Invalid token transfer\00")
(data (i32.const 1264) "Quantity must be positive\00")
(data (i32.const 1296) "-\00")
(data (i32.const 1312) "Game already exists\00")
(data (i32.const 1344) "attempt to add asset with different symbol\00")
(data (i32.const 1392) "addition underflow\00")
(data (i32.const 1424) "addition overflow\00")
(data (i32.const 1456) "attempt to subtract asset with different symbol\00")
(data (i32.const 1504) "subtraction underflow\00")
(data (i32.const 1536) "subtraction overflow\00")
(data (i32.const 1568) "dBet Dice (https://tt.dbet.one \e6\9c\80\e9\ab\98\e8\b5\94\e7\8e\87\e6\9c\80\e9\ab\98\e5\88\86\e7\ba\a2Dice\e6\b8\b8\e6\88\8f) \e9\82\80\e8\af\b7\e7\94\a8\e6\88\b7\00")
(data (i32.const 1648) "\e5\a5\96\e5\8a\b1!\00")
(data (i32.const 1664) "setdivpool\00")
(data (i32.const 1680) "addenergy\00")
(data (i32.const 1696) "dbetactivity\00")
(data (i32.const 1712) "We do not support this token currently\00")
(data (i32.const 1752) "\e0\06\00\00")
(data (i32.const 1760) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1808) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1872) "System error!\00")
(data (i32.const 1888) "GAME UNDER MAINTAIN\00")
(data (i32.const 1920) "GAME UNDER MAINTAIN!\00")
(data (i32.const 1952) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2016) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2080) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2128) "Quantity must be biger than 0.1 EOS\00")
(data (i32.const 2176) "Quantity must be little than 100 EOS\00")
(data (i32.const 2224) "Quantity must be biger than 100 DBET\00")
(data (i32.const 2272) "Quantity must be little than 100000 DBET\00")
(data (i32.const 2320) "Quantity must be biger than 10 DICE\00")
(data (i32.const 2368) "Quantity must be little than 10000 DICE\00")
(data (i32.const 2416) "Quantity must be biger than 0.1 EUSD\00")
(data (i32.const 2464) "Quantity must be little than 100 EUSD\00")
(data (i32.const 2512) "Game is under maintenance!\00")
(data (i32.const 2544) "diceroll-\00")
(data (i32.const 2560) "dice\e6\b8\b8\e6\88\8f\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e8\bf\98\00")
(data (i32.const 2592) "Invalid name\00")
(data (i32.const 2608) "Invalid account\00")
(data (i32.const 11024) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$8 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$14 (param i32)))
(import "env" "db_store_i64" (func $fimport$15 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$16 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$17 (param i32 i32)))
(import "env" "is_account" (func $fimport$18 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$23 (param i64)))
(import "env" "require_auth2" (func $fimport$24 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$25 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$26 (param i32 i32)))
(import "env" "sha512" (func $fimport$27 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$28 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$29 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN11dbetonedice13transfer_args8get_nameEv" (func $5))
(export "_ZN11dbetonedice13transfer_args11get_accountEv" (func $6))
(export "_ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_" (func $7))
(export "_ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $10))
(export "_ZN11dbetonedice8isdecnumEPKc" (func $11))
(export "_ZN11dbetonedice16_generateRandNumEyPt" (func $12))
(export "apply" (func $13))
(export "_ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $16))
(export "_ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $18))
(export "_ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $20))
(export "_ZN11dbetonedice8dbetdice5clearEy" (func $21))
(export "_ZN11dbetonedice8dbetdice10clearcandyEy" (func $23))
(export "_ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE" (func $24))
(export "_ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE" (func $26))
(export "_ZN11dbetonedice8dbetdice5candyEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $28))
(export "_ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy" (func $62))
(export "_ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy" (func $64))
(export "_ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_" (func $65))
(export "_ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y" (func $66))
(export "_ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo" (func $68))
(export "malloc" (func $94))
(export "free" (func $97))
(export "isdigit" (func $111))
(export "atoll" (func $112))
(export "memchr" (func $113))
(export "memcmp" (func $114))
(export "strlen" (func $115))
(table $0 9 9 anyfunc)
(elem (i32.const 0) $116 $16 $23 $28 $18 $24 $21 $26 $20)



int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11116])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $99 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $95([2624], $0)
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $96($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11024])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11110]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11112])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11110]) = [1]
	$7 = ($7 << [16])
	*([0] + [11112]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11112])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11112]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11110]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11110]) = [1]
	$3 = ($3 << [16])
	*([0] + [11112]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11112])
	
.LABEL $label$8
	*([0] + [11112]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11008])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10816]
	$1 = (((int_32)$2 * (int_32)[12]) + [10816])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $98(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $108($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $99($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $99($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $108($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $99($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $99($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $99($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [352])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $93($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [336])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [336])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $98(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $108($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $99($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $99($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $99($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1056])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1104])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1168])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $99($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [608])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [608])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [608])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [608])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $43($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [608])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [608])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [608])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $43(CALL $44($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [608])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [608])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [608])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [608])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [848])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $98([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $49(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $50(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [608])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [608])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $98([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [16])
	$1 = ( *(($4 + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [16])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [16])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $33($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [608])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [608])
	CALL memcpy($6, ($4 + [8]), [8])
	*($9 + [4]) = ($8 + [16])
	CALL $46($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [608])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [608])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [608])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $98($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $102($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $100($0)
}

void .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $98(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $109($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $99($4)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC _ZN11dbetonedice13transfer_args11get_accountEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [32]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$0 = ($0 + [165])
	goto $label$3 
	
.LABEL $label$4
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

void .FUNC _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [48])
	*([0] + [4]) = $15
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$8 = *($1)
	$14 = CALL strlen([48])
	if ( ((int_32)$14 != (int_32)( *($1 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$2 }
	if ( (CALL $107($1, [0], [-1], [48], $14) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $8(($15 + [32]), $1, $2)
	$4 = ($2 + [1])
	$14 = *($15 + [32])
	$3 = (($15 + [32]) | [1])
	$9 = ($1 & [1])
	$1 = *($2)
	$1 = ( *($2 + [4]) ? uint_32($1 >> [1]) : $9 )
	if ( ($1 == 0) ){ goto $label$6 }
	$13 = (($15 + [32]) | [4])
	$10 = ($14 & [1])
	$8 = ( *($15 + [36]) ? uint_32($14 >> [1]) : $10 )
	if ( ((int_32)$8 < (int_32)$1) ){ goto $label$4 }
	$12 = ( *($15 + [40]) ? $3 : $10 )
	$7 = ($12 + $8)
	$10 = ( *($2 + [8]) ? $4 : $9 )
	$9 = *($10)
	$14 = $12
	
.LOOP $label$8:
	$8 = (($8 - $1) + [1])
	if ( ($8 == 0) ){ goto $label$7 }
	$8 = CALL memchr($14, $9, $8)
	if ( ($8 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($8, $10, $1) == 0) ){ goto $label$5 }
	$14 = ($8 + [1])
	$8 = ($7 - $14)
	if ( ((int_32)$8 >= (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$7
	$14 = *($15 + [32])
	goto $label$4 
	
.LABEL $label$6
	$13 = (($15 + [32]) | [4])
	$1 = [0]
	goto $label$3 
	
.LABEL $label$5
	$14 = *($15 + [32])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$1 = ($8 - $12)
	goto $label$3 
	
.LABEL $label$4
	$1 = [-1]
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$9 }
	$5 = ( *($13) ? uint_32(($14 & [254]) >> [1]) : ($14 & [1]) )
	$11 = ($0 + [8])
	$12 = ($0 + [4])
	
.LOOP $label$10:
	CALL $110(($15 + [16]), ($15 + [32]), [0], $1, ($15 + [32]))
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)*($11)) ){ goto $label$12 }
	CALL $109($8, ($15 + [16]))
	*($12) = (*($12) + [12])
	goto $label$11 
	
.LABEL $label$12
	CALL $9($0, ($15 + [16]))
	
.LABEL $label$11
	CALL $110($15, ($15 + [32]), ($1 + [1]), $5, ($15 + [32]))
	if ( (*($15 + [32]) & [1]) ){ goto $label$14 }
	*($15 + [32]) = [0]
	goto $label$13 
	
.LABEL $label$14
	*(*((($15 + [32]) + [8]))) = [0]
	*($13) = [0]
	
.LABEL $label$13
	$1 = [0]
	CALL $101(($15 + [32]), [0])
	$14 = *(($15 + [8]))
	*((($15 + [32]) + [8])) = $14
	*($15 + [32]) = *($15)
	$10 = ($8 & [1])
	$8 = *($2)
	$8 = ( *(($2 + [4])) ? uint_32($8 >> [1]) : $10 )
	if ( ($8 == 0) ){ goto $label$15 }
	$14 = ( *($13) ? uint_32($1 >> [1]) : $9 )
	$1 = *($15 + [32])
	$9 = ($1 & [1])
	$6 = ( $14 ? $3 : $9 )
	$9 = ($6 + $14)
	$1 = $9
	if ( ((int_32)$14 < (int_32)$8) ){ goto $label$16 }
	$7 = ( *(($2 + [8])) ? $4 : $10 )
	$10 = *($7)
	$1 = $6
	
.LOOP $label$18:
	$14 = (($14 - $8) + [1])
	if ( ($14 == 0) ){ goto $label$17 }
	$1 = CALL memchr($1, $10, $14)
	if ( ($1 == 0) ){ goto $label$17 }
	if ( (CALL memcmp($1, $7, $8) == 0) ){ goto $label$16 }
	$1 = ($1 + [1])
	$14 = ($9 - $1)
	if ( ((int_32)$14 >= (int_32)$8) ){ goto $label$18 }
	
.LABEL $label$17
	$1 = $9
	
.LABEL $label$16
	$1 = ( [-1] ? ($1 - $6) : ((int_32)$1 == (int_32)$9) )
	
.LABEL $label$15
	if ( ((*($15 + [16]) & [1]) == 0) ){ goto $label$19 }
	CALL $99(*((($15 + [16]) + [8])))
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$10 }
	$14 = *($15 + [32])
	
.LABEL $label$9
	if ( (($14 & [1]) == 0) ){ goto $label$1 }
	CALL $99(*(($15 + [40])))
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [48])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_64 .FUNC _ZN11dbetonedice13transfer_args8get_nameEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [16]
	$4 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$3 > (uint_64)(int_64)9) ){ goto $label$6 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$0 = ($0 + [165])
	goto $label$4 
	
.LABEL $label$6
	$5 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($3 + [8]) = ($2 + $1)
	*($3) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [336])
	CALL memcpy($0, $2, [16])
	*($3 + [4]) = ($2 + [16])
	CALL $32($3, ($0 + [16]))
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [288])
	*([0] + [4]) = $20
	$7 = *(($1 + [20]))
	$1 = *($1 + [16])
	$16 = CALL current_time()
	*(($20 + [236])) = [0]
	*(($20 + [240])) = [0]
	*($20 + [220]) = [0]
	*($20 + [224]) = [0]
	*($20 + [228]) = [0]
	*($20 + [232]) = [0]
	*($20 + [208]) = ((CASTING uint_32)(uint_64 ((uint_64)$16 / (uint_64)(int_64)1000000)) + [60])
	*($20 + [244]) = [0]
	*(($20 + [248])) = [0]
	*(($20 + [252])) = [0]
	*($20 + [256]) = [0]
	*(($20 + [260])) = [0]
	*(($20 + [264])) = [0]
	*($20 + [108]) = $1
	*($20 + [104]) = $1
	*($20 + [112]) = $7
	CALL $83(($20 + [104]), ($20 + [208]))
	CALL $85(CALL $84(CALL $84(($20 + [104]), ($20 + [232])), ($20 + [244])), ($20 + [256]))
	*(($20 + [200])) = [0]
	*($20 + [192]) = (int_64)0
	$1 = CALL strlen([2560])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($20 + [192]) = ($1 << [1])
	$7 = (($20 + [192]) | [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$14 = (($1 + [16]) & [-16])
	$7 = CALL $98($14)
	*($20 + [192]) = ($14 | [1])
	*($20 + [200]) = $7
	*($20 + [196]) = $1
	
.LABEL $label$3
	CALL memcpy($7, [2560], $1)
	
.LABEL $label$2
	*(($7 + $1)) = [0]
	$2 = *((($20 + [208]) + [40]))
	$14 = *(($20 + [244]))
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$5 }
	$5 = ($20 + [32])
	$4 = ($20 + [16])
	$3 = (($20 + [104]) + [16])
	$9 = (($20 + [152]) + [8])
	$10 = ($20 + [128])
	$11 = (($20 + [64]) + [28])
	$13 = ($20 + [40])
	$12 = (($20 + [64]) + [20])
	
.LOOP $label$6:
	$6 = CALL $86(($20 + [152]), $14)
	$19 = *($9)
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [16]
	$17 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$16 > (uint_64)(int_64)9) ){ goto $label$12 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$8
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$7 }
	if ( ((int_64)$19 != (int_64)$17) ){ goto $label$13 }
	CALL $87(($20 + [104]), $6)
	$16 = *($10)
	if ( ((int_64)$16 > (int_64)297481618435) ){ goto $label$18 }
	if ( ((int_64)$16 == (int_64)1397703940) ){ goto $label$16 }
	if ( ((int_64)$16 != (int_64)293455873288) ){ goto $label$17 }
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [512]
	$17 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$24 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$7 = ($7 + [165])
	goto $label$22 
	
.LABEL $label$24
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$20
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$19 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [208]
	$17 = (int_64)0
	
.LOOP $label$25:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$26 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$7 = ($7 + [165])
	goto $label$27 
	
.LABEL $label$28
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$26
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$25 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [224]
	$19 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$34 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$7 = ($7 + [165])
	goto $label$32 
	
.LABEL $label$34
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$30
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$29 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $109($5, ($20 + [192]))
	CALL $69(($20 + [272]), CALL $73(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$35 }
	*($20 + [276]) = $1
	CALL $99($1)
	
.LABEL $label$35
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$36 }
	*((($20 + [64]) + [32])) = $1
	CALL $99($1)
	
.LABEL $label$36
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$37 }
	*($12) = $1
	CALL $99($1)
	
.LABEL $label$37
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $99(*($13))
	goto $label$14 
	
.LABEL $label$18
	if ( ((int_64)$16 == (int_64)297481618436) ){ goto $label$15 }
	if ( ((int_64)$16 != (int_64)361939223556) ){ goto $label$17 }
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [512]
	$17 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$43 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$7 = ($7 + [165])
	goto $label$41 
	
.LABEL $label$43
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$39
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$38 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [176]
	$17 = (int_64)0
	
.LOOP $label$44:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$45 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$7 = ($7 + [165])
	goto $label$46 
	
.LABEL $label$47
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$45
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$44 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [224]
	$19 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$53 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$7 = ($7 + [165])
	goto $label$51 
	
.LABEL $label$53
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$49
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$48 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $109($5, ($20 + [192]))
	CALL $69(($20 + [272]), CALL $73(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$54 }
	*($20 + [276]) = $1
	CALL $99($1)
	
.LABEL $label$54
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$55 }
	*((($20 + [64]) + [32])) = $1
	CALL $99($1)
	
.LABEL $label$55
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$56 }
	*($12) = $1
	CALL $99($1)
	
.LABEL $label$56
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $99(*($13))
	goto $label$14 
	
.LABEL $label$17
	CALL eosio_assert([0], [1712])
	goto $label$14 
	
.LABEL $label$16
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [512]
	$17 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$62 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$7 = ($7 + [165])
	goto $label$60 
	
.LABEL $label$62
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$58
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$57 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [160]
	$17 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$68 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$7 = ($7 + [165])
	goto $label$66 
	
.LABEL $label$68
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$64
	$1 = ($1 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$17 = ((int_64)$18 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$63 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [224]
	$19 = (int_64)0
	
.LOOP $label$69:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$74 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$7 = ($7 + [165])
	goto $label$72 
	
.LABEL $label$74
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$73
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$71
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$70
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$69 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $109($5, ($20 + [192]))
	CALL $69(($20 + [272]), CALL $73(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$75 }
	*($20 + [276]) = $1
	CALL $99($1)
	
.LABEL $label$75
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$76 }
	*((($20 + [64]) + [32])) = $1
	CALL $99($1)
	
.LABEL $label$76
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$77 }
	*($12) = $1
	CALL $99($1)
	
.LABEL $label$77
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $99(*($13))
	goto $label$14 
	
.LABEL $label$15
	$8 = *((($20 + [104]) + [8]))
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [512]
	$17 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$83 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$7 = ($7 + [165])
	goto $label$81 
	
.LABEL $label$83
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$79
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$78 }
	*((($20 + [48]) + [8])) = $17
	*($20 + [48]) = $8
	$16 = (int_64)0
	$18 = (int_64)59
	$1 = [192]
	$17 = (int_64)0
	
.LOOP $label$84:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$85 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$7 = ($7 + [165])
	goto $label$86 
	
.LABEL $label$87
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$85
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$15 | (int_64)$17)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$84 }
	$16 = (int_64)0
	$15 = (int_64)59
	$1 = [224]
	$19 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$16 > (uint_64)(int_64)7) ){ goto $label$93 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$7 = ($7 + [165])
	goto $label$91 
	
.LABEL $label$93
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$89
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$88 }
	*($4) = *($3)
	*($20) = $8
	*(($20 + [8])) = *($20 + [104])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $109($5, ($20 + [192]))
	CALL $69(($20 + [272]), CALL $73(($20 + [64]), ($20 + [48]), $17, $19, $20))
	$1 = *($20 + [272])
	CALL send_inline($1, (*($20 + [276]) - $1))
	$1 = *($20 + [272])
	if ( ($1 == 0) ){ goto $label$94 }
	*($20 + [276]) = $1
	CALL $99($1)
	
.LABEL $label$94
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$95 }
	*((($20 + [64]) + [32])) = $1
	CALL $99($1)
	
.LABEL $label$95
	$1 = *((($20 + [64]) + [16]))
	if ( ($1 == 0) ){ goto $label$96 }
	*($12) = $1
	CALL $99($1)
	
.LABEL $label$96
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $99(*($13))
	
.LABEL $label$14
	if ( ((*((($20 + [104]) + [32])) & [1]) == 0) ){ goto $label$13 }
	CALL $99(*((($20 + [104]) + [40])))
	
.LABEL $label$13
	$1 = *((($20 + [152]) + [28]))
	if ( ($1 == 0) ){ goto $label$97 }
	*((($20 + [152]) + [32])) = $1
	CALL $99($1)
	
.LABEL $label$97
	$1 = *((($20 + [152]) + [16]))
	if ( ($1 == 0) ){ goto $label$98 }
	*((($20 + [152]) + [20])) = $1
	CALL $99($1)
	
.LABEL $label$98
	$14 = ($14 + [40])
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$99 }
	CALL $99(*($20 + [200]))
	
.LABEL $label$99
	CALL $38(($20 + [208]))
	*([0] + [4]) = ($20 + [288])
	return (unreachable)
	
.LABEL $label$1
	CALL $100(($20 + [192]))
}

void .FUNC _ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [272])
	*([0] + [4]) = $15
	$11 = *($0)
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$11 != (int_64)$2) ){ goto $label$1 }
	$14 = *($4)
	$6 = ($14 & [1])
	if ( $6 ){ goto $label$3 }
	if ( uint_32($14 >> [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($4 + [4]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = uint_32($14 >> [1])
	$8 = ($4 + [1])
	goto $label$4 
	
.LABEL $label$5
	$6 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$4
	$14 = CALL strlen([1296])
	if ( ($14 == 0) ){ goto $label$6 }
	if ( ((int_32)$6 < (int_32)$14) ){ goto $label$1 }
	$5 = ($8 + $6)
	$9 = $8
	
.LOOP $label$7:
	$6 = (($6 - $14) + [1])
	if ( ($6 == 0) ){ goto $label$1 }
	$6 = CALL memchr($9, [45], $6)
	if ( ($6 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($6, [1296], $14) == 0) ){ goto $label$8 }
	$9 = ($6 + [1])
	$6 = ($5 - $9)
	if ( ((int_32)$6 >= (int_32)$14) ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$1 }
	if ( ((int_32)($6 - $8) == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$6
	$13 = *($3 + [8])
	$6 = [0]
	$10 = *($3)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$11 = (uint_64)$13 >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = [0]
	
.LABEL $label$9
	CALL eosio_assert($6, [1232])
	CALL eosio_assert(((int_64)$10 > (int_64)0), [1264])
	CALL eosio_assert([0], [2512])
	*((($15 + [232]) + [32])) = [0]
	$11 = (uint_64)$13 >> (uint_64)(int_64)8
	*($15 + [240]) = $11)
	*($15 + [248]) = (int_64)-1
	*($15 + [256]) = (int_64)0
	$13 = *($0)
	*($15 + [232]) = $13
	$14 = CALL db_find_i64($13, $11, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$14 }
	$14 = CALL $47(($15 + [232]), $14)
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)($15 + [232])), [432])
	if ( ((uint_64)*($14 + [16]) > (uint_64)(int_64)2) ){ goto $label$15 }
	if ( ((((uint_64)*($14 + [8]) > (uint_64)(int_64)9) & ((float_64)*($14 + [24]) >= (float_64)(float_64)10)) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [1888])
	
.LABEL $label$14
	*((($15 + [192]) + [32])) = [0]
	*($15 + [208]) = (int_64)-1
	*($15 + [216]) = (int_64)0
	$13 = *($0)
	*($15 + [192]) = $13
	*($15 + [200]) = $11
	$14 = CALL db_find_i64($13, $11, (int_64)-5918304704032407552, $11)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$16 }
	$14 = CALL $52(($15 + [192]), $14)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($15 + [192])), [432])
	if ( (uint_64)(*($14 + [16]) <= (int_64)3) ){ goto $label$16 }
	CALL eosio_assert([0], [1920])
	
.LABEL $label$16
	$14 = *($4)
	if ( ($14 & [1]) ){ goto $label$18 }
	$6 = uint_32($14 >> [1])
	$8 = ($4 + [1])
	goto $label$17 
	
.LABEL $label$18
	$6 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$17
	$14 = CALL strlen([2544])
	if ( ($14 == 0) ){ goto $label$20 }
	if ( ((int_32)$6 < (int_32)$14) ){ goto $label$19 }
	$5 = ($8 + $6)
	$9 = $8
	
.LOOP $label$21:
	$6 = (($6 - $14) + [1])
	if ( ($6 == 0) ){ goto $label$19 }
	$6 = CALL memchr($9, [100], $6)
	if ( ($6 == 0) ){ goto $label$19 }
	if ( (CALL memcmp($6, [2544], $14) == 0) ){ goto $label$22 }
	$9 = ($6 + [1])
	$6 = ($5 - $9)
	if ( ((int_32)$6 >= (int_32)$14) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$19 }
	if ( ((int_32)($6 - $8) == (int_32)[-1]) ){ goto $label$19 }
	
.LABEL $label$20
	$11 = CALL current_time()
	*(($15 + [156])) = [0]
	*(($15 + [160])) = [0]
	*($15 + [140]) = [0]
	*($15 + [144]) = [0]
	*($15 + [148]) = [0]
	*($15 + [152]) = [0]
	*($15 + [128]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($15 + [164]) = [0]
	*(($15 + [168])) = [0]
	*(($15 + [172])) = [0]
	*($15 + [176]) = [0]
	*(($15 + [180])) = [0]
	*(($15 + [184])) = [0]
	$13 = CALL current_time()
	$11 = (int_64)0
	*($15 + [120]) = (int_64)0
	*($15 + [112]) = ((int_64)((int_64)((uint_64)$13 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1)
	$9 = ($15 + [164])
	$7 = *($0)
	$10 = (int_64)59
	$14 = [512]
	$12 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$28 }
	$6 = *($14)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$6 = ($6 + [165])
	goto $label$26 
	
.LABEL $label$28
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$24
	$14 = ($14 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$23 }
	*($15 + [64]) = $12
	*($15 + [56]) = $7
	$11 = (int_64)0
	$10 = (int_64)59
	$14 = [240]
	$12 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$34 }
	$6 = *($14)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$6 = ($6 + [165])
	goto $label$32 
	
.LABEL $label$34
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$30
	$14 = ($14 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$29 }
	*(($15 + [36])) = *(($3 + [12]))
	*(($15 + [32])) = *(($3 + [8]))
	*(($15 + [28])) = *(($3 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = *($3)
	CALL $109((($15 + [8]) + [32]), $4)
	$14 = CALL $73(($15 + [72]), ($15 + [56]), $7, $12, ($15 + [8]))
	CALL $81($9, $14)
	$4 = *($14 + [28])
	if ( ($4 == 0) ){ goto $label$35 }
	*(($14 + [32])) = $4
	CALL $99($4)
	
.LABEL $label$35
	$4 = *($14 + [16])
	if ( ($4 == 0) ){ goto $label$36 }
	*(($14 + [20])) = $4
	CALL $99($4)
	
.LABEL $label$36
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$37 }
	CALL $99(*(($15 + [48])))
	
.LABEL $label$37
	*(($15 + [148])) = [1]
	$11 = *($0)
	CALL $36(($15 + [8]), ($15 + [128]))
	$14 = *($15 + [8])
	CALL send_deferred(($15 + [112]), $11, $14, (*($15 + [12]) - $14), [0])
	$14 = *($15 + [8])
	if ( ($14 == 0) ){ goto $label$38 }
	*($15 + [12]) = $14
	CALL $99($14)
	
.LABEL $label$38
	CALL $38(($15 + [128]))
	
.LABEL $label$19
	$0 = *($15 + [216])
	if ( ($0 == 0) ){ goto $label$39 }
	$6 = ($15 + [220])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$41 }
	
.LOOP $label$42:
	$14 = ($14 + [-24])
	$4 = *($14)
	*($14) = [0]
	if ( ($4 == 0) ){ goto $label$43 }
	CALL $99($4)
	
.LABEL $label$43
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$42 }
	$14 = *(($15 + [216]))
	goto $label$40 
	
.LABEL $label$41
	$14 = $0
	
.LABEL $label$40
	*($6) = $0
	CALL $99($14)
	
.LABEL $label$39
	$0 = *($15 + [256])
	if ( ($0 == 0) ){ goto $label$1 }
	$6 = ($15 + [260])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$45 }
	
.LOOP $label$46:
	$14 = ($14 + [-24])
	$4 = *($14)
	*($14) = [0]
	if ( ($4 == 0) ){ goto $label$47 }
	CALL $99($4)
	
.LABEL $label$47
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$46 }
	$14 = *(($15 + [256]))
	goto $label$44 
	
.LABEL $label$45
	$14 = $0
	
.LABEL $label$44
	*($6) = $0
	CALL $99($14)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [272])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [944])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $79(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $82(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC _ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($0 + [1])
	$5 = [0]
	$4 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	$6 = *($0)
	$2 = ($6 & [1])
	if ( $2 ){ goto $label$4 }
	if ( ($5 <= uint_32($6 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)*($3)) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = $1
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = *($4)
	
.LABEL $label$5
	$6 = ($6 + $5)
	$5 = ($5 + [1])
	if ( CALL isdigit(*($6)) ){ goto $label$2 }
	return [0]
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC _ZN11dbetonedice8isdecnumEPKc (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($6 + [16]) = ($4 << [1])
	$2 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = [0]
	goto $label$2 
	
.LABEL $label$5
	$1 = (($4 + [16]) & [-16])
	$2 = CALL $98($1)
	*($6 + [16]) = ($1 | [1])
	*($6 + [24]) = $2
	*($6 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($2, $0, $4)
	
.LABEL $label$3
	$0 = [0]
	*(($2 + $4)) = [0]
	CALL $109($6, ($6 + [16]))
	$5 = [1]
	$1 = ($6 | [1])
	$3 = ($6 + [8])
	
.LOOP $label$8:
	$2 = ($4 & [1])
	$4 = *($6)
	if ( ((uint_32)$0 >= (uint_32)( *($6 + [4]) ? uint_32($4 >> [1]) : $2 )) ){ goto $label$7 }
	$4 = (( *($3) ? $1 : $2 ) + $0)
	$0 = ($0 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$8 }
	$5 = [0]
	$4 = *($6)
	
.LABEL $label$7
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	CALL $99(*(($6 + [8])))
	
.LABEL $label$9
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $99(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
	return $5
	
.LABEL $label$1
	CALL $100(($6 + [16]))
	return (unreachable)
}

void .FUNC _ZN11dbetonedice16_generateRandNumEyPt (int_64 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [80])
	*([0] + [4]) = $2
	*($2 + [8]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$0 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$0 & (int_64)1048575)) + (int_64)(uint_64)$0 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$29())))
	CALL sha512(($2 + [8]), [4], ($2 + [16]))
	*($1) = *($2 + [16])
	*($1 + [4]) = *($2 + [20])
	*($1 + [6]) = *($2 + [22])
	*($1 + [8]) = *($2 + [24])
	*($1 + [10]) = *($2 + [26])
	*($1 + [12]) = *($2 + [28])
	*($1 + [14]) = *($2 + [30])
	*($1 + [16]) = *($2 + [32])
	*($1 + [18]) = *($2 + [34])
	*([0] + [4]) = ($2 + [80])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [256])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [64]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [80]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [64]
	$9 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$19 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$15
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$14 }
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [96])
	*(($11 + [184])) = $0
	*(($11 + [192])) = (int_64)-1
	*(($11 + [200])) = (int_64)0
	*(($11 + [208])) = [0]
	*($11 + [176]) = $0
	*($11 + [168]) = $0
	*(($11 + [212])) = [0]
	*($11 + [216]) = $0
	*(($11 + [224])) = $0
	*(($11 + [232])) = (int_64)-1
	*(($3 = ($11 + [240]))) = [0]
	*(($11 + [244])) = [0]
	*(($11 + [248])) = [0]
	CALL $14(($11 + [128]))
	CALL $15(($11 + [168]), ($11 + [128]))
	$6 = *($11 + [144])
	if ( ($6 == 0) ){ goto $label$20 }
	*(($11 + [148])) = $6
	CALL $99($6)
	
.LABEL $label$20
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$21 }
	$5 = ($11 + [244])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$25 }
	CALL $99($3)
	
.LABEL $label$25
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($11 + [240]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $4
	
.LABEL $label$22
	*($5) = $4
	CALL $99($6)
	
.LABEL $label$21
	$4 = *(($11 + [200]))
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($11 + [204])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL $99($3)
	
.LABEL $label$29
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($11 + [200]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $4
	
.LABEL $label$26
	*($5) = $4
	CALL $99($6)
	
.LABEL $label$7
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [160]
	$9 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$35 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$31
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$30 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [176]
	$9 = (int_64)0
	
.LOOP $label$40:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$41 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$3 = ($3 + [165])
	goto $label$42 
	
.LABEL $label$43
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$41
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [192]
	$9 = (int_64)0
	
.LOOP $label$44:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$45 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$45
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$44 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [208]
	$9 = (int_64)0
	
.LOOP $label$48:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$49 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$3 = ($3 + [165])
	goto $label$50 
	
.LABEL $label$51
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$49
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$48 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$38 }
	
.LABEL $label$39
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [224]
	$9 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$57 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$3 = ($3 + [165])
	goto $label$55 
	
.LABEL $label$57
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$53
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$52 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$36 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [240]
	$9 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$63 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$3 = ($3 + [165])
	goto $label$61 
	
.LABEL $label$63
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$59
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$58 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [16]
	$9 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$69 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$3 = ($3 + [165])
	goto $label$67 
	
.LABEL $label$69
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$65
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$64 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [256]
	$9 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$75 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$3 = ($3 + [165])
	goto $label$73 
	
.LABEL $label$75
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$71
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$70 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [272]
	$9 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$81 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$3 = ($3 + [165])
	goto $label$79 
	
.LABEL $label$81
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$77
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$76 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [288]
	$9 = (int_64)0
	
.LOOP $label$82:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$87 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$3 = ($3 + [165])
	goto $label$85 
	
.LABEL $label$87
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$86
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$84
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$83
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$82 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$93 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$3 = ($3 + [165])
	goto $label$91 
	
.LABEL $label$93
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$89
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$88 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [320]
	$9 = (int_64)0
	
.LOOP $label$94:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$99 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$98 }
	$3 = ($3 + [165])
	goto $label$97 
	
.LABEL $label$99
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$98
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$97
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$96
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$95
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$94 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$36 }
	
.LABEL $label$37
	*(($11 + [184])) = $0
	*(($11 + [192])) = (int_64)-1
	*(($11 + [200])) = (int_64)0
	*(($11 + [208])) = [0]
	*($11 + [176]) = $0
	*($11 + [168]) = $0
	*(($11 + [212])) = [0]
	*($11 + [216]) = $0
	*(($11 + [224])) = $0
	*(($11 + [232])) = (int_64)-1
	*(($11 + [240])) = [0]
	*(($11 + [244])) = [0]
	*(($11 + [248])) = [0]
	if ( ((int_64)$2 > (int_64)4923678490122780671) ){ goto $label$107 }
	if ( ((int_64)$2 > (int_64)-3106564261919997953) ){ goto $label$106 }
	if ( ((int_64)$2 == (int_64)-7954134735498772480) ){ goto $label$104 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$100 }
	*($11 + [124]) = [0]
	*($11 + [120]) = [1]
	*($11) = *($11 + [120])
	CALL $17(($11 + [168]), $11)
	goto $label$100 
	
.LABEL $label$107
	if ( ((int_64)$2 > (int_64)5391622577058496511) ){ goto $label$105 }
	if ( ((int_64)$2 == (int_64)4923678490122780672) ){ goto $label$103 }
	if ( ((int_64)$2 != (int_64)4923678631106936832) ){ goto $label$100 }
	*($11 + [92]) = [0]
	*($11 + [88]) = [2]
	*($11 + [32 align=4]) = *($11 + [88])
	CALL $22(($11 + [168]), ($11 + [32]))
	goto $label$100 
	
.LABEL $label$106
	if ( ((int_64)$2 == (int_64)-3106564261919997952) ){ goto $label$102 }
	if ( ((int_64)$2 != (int_64)4730643280948101120) ){ goto $label$100 }
	*($11 + [68]) = [0]
	*($11 + [64]) = [3]
	*($11 + [56 align=4]) = *($11 + [64])
	CALL $29(($11 + [168]), ($11 + [56]))
	goto $label$100 
	
.LABEL $label$105
	if ( ((int_64)$2 == (int_64)5391622577058496512) ){ goto $label$101 }
	if ( ((int_64)$2 != (int_64)5445040868744495104) ){ goto $label$100 }
	*($11 + [116]) = [0]
	*($11 + [112]) = [4]
	*($11 + [8 align=4]) = *($11 + [112])
	CALL $19(($11 + [168]), ($11 + [8]))
	goto $label$100 
	
.LABEL $label$104
	*($11 + [84]) = [0]
	*($11 + [80]) = [5]
	*($11 + [40 align=4]) = *($11 + [80])
	CALL $25(($11 + [168]), ($11 + [40]))
	goto $label$100 
	
.LABEL $label$103
	*($11 + [100]) = [0]
	*($11 + [96]) = [6]
	*($11 + [24 align=4]) = *($11 + [96])
	CALL $22(($11 + [168]), ($11 + [24]))
	goto $label$100 
	
.LABEL $label$102
	*($11 + [76]) = [0]
	*($11 + [72]) = [7]
	*($11 + [48 align=4]) = *($11 + [72])
	CALL $27(($11 + [168]), ($11 + [48]))
	goto $label$100 
	
.LABEL $label$101
	*($11 + [108]) = [0]
	*($11 + [104]) = [8]
	*($11 + [16 align=4]) = *($11 + [104])
	CALL $19(($11 + [168]), ($11 + [16]))
	
.LABEL $label$100
	$4 = *(($11 + [240]))
	if ( ($4 == 0) ){ goto $label$108 }
	$5 = ($11 + [244])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$110 }
	
.LOOP $label$111:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$112 }
	CALL $99($3)
	
.LABEL $label$112
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$111 }
	$6 = *(($11 + [240]))
	goto $label$109 
	
.LABEL $label$110
	$6 = $4
	
.LABEL $label$109
	*($5) = $4
	CALL $99($6)
	
.LABEL $label$108
	$4 = *(($11 + [200]))
	if ( ($4 == 0) ){ goto $label$36 }
	$5 = ($11 + [204])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$114 }
	
.LOOP $label$115:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$116 }
	CALL $99($3)
	
.LABEL $label$116
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$115 }
	$6 = *(($11 + [200]))
	goto $label$113 
	
.LABEL $label$114
	$6 = $4
	
.LABEL $label$113
	*($5) = $4
	CALL $99($6)
	
.LABEL $label$36
	*([0] + [4]) = ($11 + [256])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [192])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$10 = CALL current_time()
	*(($13 + [156])) = [0]
	*(($13 + [160])) = [0]
	*($13 + [140]) = [0]
	*($13 + [144]) = [0]
	*($13 + [148]) = [0]
	*($13 + [152]) = [0]
	*($13 + [128]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [164]) = [0]
	*(($13 + [168])) = [0]
	*(($13 + [172])) = [0]
	*($13 + [176]) = [0]
	*(($13 + [180])) = [0]
	*(($13 + [184])) = [0]
	$12 = CALL current_time()
	$10 = (int_64)0
	*($13 + [120]) = (int_64)0
	*($13 + [112]) = ((int_64)((int_64)$1 + (int_64)((int_64)((uint_64)$12 / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)99)
	$6 = ($13 + [164])
	$5 = *($0)
	$9 = (int_64)59
	$8 = [512]
	$11 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$6 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	*($13 + [64]) = $11
	*($13 + [56]) = $5
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [16]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$12 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$8
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$7 }
	*(($13 + [36])) = *(($3 + [12]))
	*(($13 + [32])) = *(($3 + [8]))
	*(($13 + [28])) = *(($3 + [4]))
	*($13 + [16]) = $2
	*($13 + [8]) = $1
	*($13 + [24]) = *($3)
	CALL $109((($13 + [8]) + [32]), $4)
	$8 = CALL $73(($13 + [72]), ($13 + [56]), $5, $11, ($13 + [8]))
	CALL $81($6, $8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($8 + [32])) = $7
	CALL $99($7)
	
.LABEL $label$13
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($8 + [20])) = $7
	CALL $99($7)
	
.LABEL $label$14
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$15 }
	CALL $99(*(($13 + [48])))
	
.LABEL $label$15
	*(($13 + [148])) = [0]
	$10 = *($0)
	CALL $36(($13 + [8]), ($13 + [128]))
	$8 = *($13 + [8])
	CALL send_deferred(($13 + [112]), $10, $8, (*($13 + [12]) - $8), [0])
	$8 = *($13 + [8])
	if ( ($8 == 0) ){ goto $label$16 }
	*($13 + [12]) = $8
	CALL $99($8)
	
.LABEL $label$16
	CALL $38(($13 + [128]))
	*([0] + [4]) = ($13 + [192])
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [944])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $79(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $80(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1056])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1104])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1168])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $99($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	$7 = *(($1 + [96]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445040692176502784, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [100]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445040692176502785, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $59 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [944])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [944])
	*($0 + [80]) = [0]
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $99($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [336])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [336])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [848])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $98([40])
	$6 = CALL $54($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $55(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1056])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1104])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1168])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $99($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [944])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [336])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [336])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [848])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $98([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [336])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [336])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $37(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1056])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1104])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1168])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $99($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [848])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $98([104])
	$4 = CALL $59($6)
	*($6 + [88]) = $0
	CALL $60(($8 + [32]), $4)
	*($6 + [96]) = [-1]
	*($6 + [92]) = $1
	*($6 + [100]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $61(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $116 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $45($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $99($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $99($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $99($1)
	
.LABEL $label$12
	(unreachable)
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $98($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [336])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [336])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $30(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $31(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $99(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice5candyEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [144])
	*([0] + [4]) = $14
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$3 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [368]
	$12 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$5 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$6 = ($6 + [165])
	goto $label$6 
	
.LABEL $label$7
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$5
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$4 }
	if ( ((int_64)$12 == (int_64)$1) ){ goto $label$3 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [384]
	$12 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$9 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$9
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$12 == (int_64)$1) ){ goto $label$3 }
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [400]
	$12 = (int_64)0
	
.LOOP $label$12:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$13 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$6 = ($6 + [165])
	goto $label$14 
	
.LABEL $label$15
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$12 }
	if ( ((int_64)$12 != (int_64)$1) ){ goto $label$2 }
	
.LABEL $label$3
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [416])
	
.LABEL $label$1
	$1 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$16 }
	$9 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$17:
	if ( ((int_64)*(*($9)) == (int_64)$2) ){ goto $label$16 }
	$8 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$5 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$21 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$5), [432])
	if ( $8 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$9 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)5445032382844370944, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	$8 = CALL $34($5, $9)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$5), [432])
	
.LABEL $label$20
	$7 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$12 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$27 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$6 = ($6 + [165])
	goto $label$25 
	
.LABEL $label$27
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$23
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$22 }
	$11 = CALL current_time()
	*($14 + [136]) = ((int_64)$12 + (int_64)$7)
	*($14 + [128]) = ((int_64)((int_64)((uint_64)$11 / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$2 << (int_64)32))
	$11 = CALL current_time()
	*(($14 + [92])) = [0]
	*(($14 + [96])) = [0]
	*($14 + [76]) = [0]
	*($14 + [80]) = [0]
	*($14 + [84]) = [0]
	*($14 + [88]) = [0]
	*($14 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [100]) = [0]
	*(($14 + [104])) = [0]
	*(($14 + [108])) = [0]
	*($14 + [112]) = [0]
	*(($14 + [116])) = [0]
	*(($14 + [120])) = [0]
	$4 = ($14 + [100])
	$7 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$12 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$33 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$33
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$29
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$28 }
	*($14 + [56]) = $12
	*($14 + [48]) = $7
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [528]
	$12 = (int_64)0
	
.LOOP $label$34:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$35 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$6 = ($6 + [165])
	goto $label$36 
	
.LABEL $label$37
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$34 }
	*($14 + [40]) = $12
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$12 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$43 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$6 = ($6 + [165])
	goto $label$41 
	
.LABEL $label$43
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$39
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$38 }
	*($14 + [32]) = $12
	*($14 + [8]) = $2
	*($14) = $7
	CALL $109(($14 + [16]), $3)
	CALL $35($4, ($14 + [48]), ($14 + [40]), ($14 + [32]), $14)
	if ( ((*($14 + [16]) & [1]) == 0) ){ goto $label$44 }
	CALL $99(*(($14 + [24])))
	
.LABEL $label$44
	*(($14 + [84])) = [0]
	$11 = *($0)
	CALL $36($14, ($14 + [64]))
	$9 = *($14)
	CALL send_deferred(($14 + [128]), $11, $9, (*($14 + [4]) - $9), [0])
	$9 = *($14)
	if ( ($9 == 0) ){ goto $label$45 }
	*($14 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$45
	CALL eosio_assert([1], [624])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$5), [672])
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [720])
	*($8 + [8]) = ((int_64)$1 & (int_64)4294967295)
	$11 = *($8)
	CALL eosio_assert([1], [784])
	CALL eosio_assert([1], [608])
	CALL memcpy($14, $8, [8])
	CALL eosio_assert([1], [608])
	CALL memcpy(($14 | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, $14, [16])
	$9 = ($0 + [64])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$46 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$46
	CALL $38(($14 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$7 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$12 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$52 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$6 = ($6 + [165])
	goto $label$50 
	
.LABEL $label$52
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$48
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$47 }
	$11 = CALL current_time()
	*($14 + [136]) = ((int_64)$12 + (int_64)$7)
	*($14 + [128]) = ((int_64)((int_64)((uint_64)$11 / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$2 << (int_64)32))
	$11 = CALL current_time()
	*(($14 + [92])) = [0]
	*(($14 + [96])) = [0]
	*($14 + [76]) = [0]
	*($14 + [80]) = [0]
	*($14 + [84]) = [0]
	*($14 + [88]) = [0]
	*($14 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [100]) = [0]
	*(($14 + [104])) = [0]
	*(($14 + [108])) = [0]
	*($14 + [112]) = [0]
	*(($14 + [116])) = [0]
	*(($14 + [120])) = [0]
	$8 = ($14 + [100])
	$7 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$12 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$58 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$6 = ($6 + [165])
	goto $label$56 
	
.LABEL $label$58
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$54
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$53 }
	*($14 + [56]) = $12
	*($14 + [48]) = $7
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [528]
	$12 = (int_64)0
	
.LOOP $label$59:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$60 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$6 = ($6 + [165])
	goto $label$61 
	
.LABEL $label$62
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$60
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$59 }
	*($14 + [40]) = $12
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$12 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$68 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$6 = ($6 + [165])
	goto $label$66 
	
.LABEL $label$68
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$64
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$63 }
	*($14 + [32]) = $12
	*($14 + [8]) = $2
	*($14) = $7
	CALL $109(($14 + [16]), $3)
	CALL $35($8, ($14 + [48]), ($14 + [40]), ($14 + [32]), $14)
	if ( ((*($14 + [16]) & [1]) == 0) ){ goto $label$69 }
	CALL $99(*(($14 + [24])))
	
.LABEL $label$69
	*(($14 + [84])) = [0]
	$11 = *($0)
	CALL $36($14, ($14 + [64]))
	$9 = *($14)
	CALL send_deferred(($14 + [128]), $11, $9, (*($14 + [4]) - $9), [0])
	$9 = *($14)
	if ( ($9 == 0) ){ goto $label$70 }
	*($14 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$70
	$13 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [544])
	*(($9 = CALL $98([32])) + [16]) = $5
	*($9 + [8]) = ((int_64)$1 & (int_64)4294967295)
	*($9) = $2
	CALL eosio_assert([1], [608])
	CALL memcpy($14, $9, [8])
	CALL eosio_assert([1], [608])
	CALL memcpy(($14 | [8]), ($9 + [8]), [8])
	$11 = *($9)
	$8 = CALL db_store_i64(*(($0 + [56])), (int_64)5445032382844370944, $13, $11, $14, [16])
	*($9 + [20]) = $8
	$6 = ($0 + [64])
	if ( (uint_64)($11 <= *($6)) ){ goto $label$71 }
	*($6) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$71
	*($14 + [48]) = $9
	$11 = *($9)
	*($14) = $11
	*($14 + [40]) = $8
	$5 = ($0 + [76])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [80]))) ){ goto $label$73 }
	*($6 + [8]) = $11
	*($6 + [16]) = $8
	*($14 + [48]) = [0]
	*($6) = $9
	*($5) = ($6 + [24])
	goto $label$72 
	
.LABEL $label$73
	CALL $37(($0 + [72]), ($14 + [48]), $14, ($14 + [40]))
	
.LABEL $label$72
	$9 = *($14 + [48])
	*($14 + [48]) = [0]
	if ( ($9 == 0) ){ goto $label$74 }
	CALL $99($9)
	
.LABEL $label$74
	CALL $38(($14 + [64]))
	
.LABEL $label$18
	*([0] + [4]) = ($14 + [144])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $99($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $107 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $103($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice5clearEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)5445040692176502784, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [8])
	$0 = CALL $57($2, $4)
	
.LOOP $label$2:
	if ( ((uint_64)*($0) > (uint_64)$1) ){ goto $label$1 }
	$4 = [0]
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [976])
	CALL eosio_assert($3, [1024])
	$3 = CALL db_next_i64(*($0 + [92]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $57($2, $3)
	
.LABEL $label$3
	CALL $58($2, $0)
	$0 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC _ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [432])
	*([0] + [4]) = $19
	CALL require_auth(*($0))
	$9 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$15 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [1232])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [1264])
	*(($19 + [376])) = [0]
	*($19 + [368]) = (int_64)0
	$16 = CALL strlen([1296])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$9 }
	*($19 + [368]) = ($16 << [1])
	$9 = (($19 + [368]) | [1])
	if ( $16 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = (($16 + [16]) & [-16])
	$9 = CALL $98($5)
	*($19 + [368]) = ($5 | [1])
	*($19 + [376]) = $9
	*($19 + [372]) = $16
	
.LABEL $label$8
	CALL memcpy($9, [1296], $16)
	
.LABEL $label$7
	*(($9 + $16)) = [0]
	CALL _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(($19 + [352]), $4, ($19 + [368]))
	if ( ((*($19 + [368]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*($19 + [376]))
	
.LABEL $label$10
	$4 = *($19 + [352])
	if ( ((int_32)(*($19 + [356]) - $4) != (int_32)[72]) ){ goto $label$14 }
	CALL $109(($19 + [336]), $4)
	CALL $109(($19 + [320]), (*($19 + [352]) + [12]))
	CALL $109(($19 + [304]), (*($19 + [352]) + [24]))
	CALL $109(($19 + [288]), (*($19 + [352]) + [36]))
	CALL $109(($19 + [272]), (*($19 + [352]) + [48]))
	CALL $109(($19 + [256]), (*($19 + [352]) + [60]))
	CALL $109(($19 + [240]), ($19 + [320]))
	$5 = (($19 + [240]) | [1])
	$16 = [0]
	$11 = ($19 + [248])
	
.LOOP $label$17:
	$9 = ($9 & [1])
	$9 = *($19 + [240])
	if ( ((uint_32)$16 >= (uint_32)( *($19 + [244]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$16 }
	$9 = (( *($11) ? $5 : $9 ) + $16)
	$4 = [1]
	$16 = ($16 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	CALL $109(($19 + [224]), ($19 + [304]))
	$5 = (($19 + [224]) | [1])
	$16 = [0]
	$11 = ($19 + [232])
	
.LOOP $label$20:
	$9 = ($9 & [1])
	$9 = *($19 + [224])
	if ( ((uint_32)$16 >= (uint_32)( *($19 + [228]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$19 }
	$9 = (( *($11) ? $5 : $9 ) + $16)
	$4 = [1]
	$16 = ($16 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL $109(($19 + [208]), ($19 + [272]))
	$5 = (($19 + [208]) | [1])
	$16 = [0]
	$11 = ($19 + [216])
	
.LOOP $label$23:
	$9 = ($9 & [1])
	$9 = *($19 + [208])
	if ( ((uint_32)$16 >= (uint_32)( *($19 + [212]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$22 }
	$9 = (( *($11) ? $5 : $9 ) + $16)
	$4 = [1]
	$16 = ($16 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	CALL $109(($19 + [192]), ($19 + [256]))
	$11 = (($19 + [192]) | [1])
	$4 = [0]
	$10 = ($19 + [200])
	$16 = [0]
	
.LOOP $label$25:
	$5 = ($9 & [1])
	$9 = *($19 + [192])
	if ( ((uint_32)$16 >= (uint_32)( *($19 + [196]) ? uint_32($9 >> [1]) : $5 )) ){ goto $label$24 }
	$9 = (( *($10) ? $11 : $5 ) + $16)
	$16 = ($16 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$25 }
	$4 = [1]
	$9 = *($19 + [192])
	
.LABEL $label$24
	if ( (($9 & [1]) == 0) ){ goto $label$21 }
	CALL $99(*(($19 + [200])))
	
.LABEL $label$21
	if ( ((*($19 + [208]) & [1]) == 0) ){ goto $label$18 }
	CALL $99(*(($19 + [216])))
	
.LABEL $label$18
	if ( ((*($19 + [224]) & [1]) == 0) ){ goto $label$15 }
	CALL $99(*(($19 + [232])))
	
.LABEL $label$15
	if ( ((*($19 + [240]) & [1]) == 0) ){ goto $label$26 }
	CALL $99(*(($19 + [248])))
	
.LABEL $label$26
	if ( $4 ){ goto $label$27 }
	$18 = (int_64)0
	$16 = ($16 & [1])
	$16 = *($19 + [288])
	if ( ((int_32)( *($19 + [292]) ? uint_32($16 >> [1]) : $16 ) != (int_32)[12]) ){ goto $label$28 }
	$16 = ( *($19 + [296]) ? (($19 + [288]) | [1]) : $16 )
	$9 = [-1]
	
.LOOP $label$29:
	$4 = ($16 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($4 + [1])) ){ goto $label$29 }
	$17 = (CASTING uint_64)(uint_32 $5)
	$15 = (int_64)0
	$12 = (int_64)59
	$13 = (int_64)0
	
.LOOP $label$30:
	$14 = (int_64)0
	if ( ((uint_64)$15 >= (uint_64)$17) ){ goto $label$31 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$9 = ($9 + [165])
	goto $label$32 
	
.LABEL $label$33
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$35 }
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$34 
	
.LABEL $label$35
	$14 = ((int_64)$14 & (int_64)15)
	
.LABEL $label$34
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$30 }
	$18 = ( $13 ? (int_64)0 : CALL is_account($13) )
	
.LABEL $label$28
	$17 = CALL atoll(( *($19 + [328]) ? (($19 + [320]) | [1]) : (*($19 + [320]) & [1]) ))
	*($19 + [184]) = CALL atoll(( *($19 + [312]) ? (($19 + [304]) | [1]) : (*($19 + [304]) & [1]) ))
	$14 = CALL atoll(( *($19 + [280]) ? (($19 + [272]) | [1]) : (*($19 + [272]) & [1]) ))
	CALL atoll(( *($19 + [264]) ? (($19 + [256]) | [1]) : (*($19 + [256]) & [1]) ))
	if ( ((uint_64)((int_64)$14 + (int_64)-2) > (uint_64)(int_64)98) ){ goto $label$27 }
	if ( ((int_64)$17 == (int_64)10) ){ goto $label$36 }
	if ( ((int_64)$17 != (int_64)1) ){ goto $label$27 }
	
.LABEL $label$36
	CALL _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy($3, $17)
	*($19 + [176]) = ($0 + [8])
	CALL $63(($19 + [368]), ($19 + [176]), ($19 + [184]))
	$9 = [0]
	$16 = [0]
	$4 = *($19 + [372])
	if ( ($4 == 0) ){ goto $label$37 }
	$16 = ( $4 ? [0] : ((int_64)*($19 + [184]) == (int_64)*($4 + [24])) )
	
.LABEL $label$37
	CALL eosio_assert(($16 == 0), [1312])
	$15 = *($19 + [184])
	*($19 + [24]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$15 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$15 & (int_64)1048575)) + (int_64)(uint_64)$15 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$29())))
	CALL sha512(($19 + [24]), [4], ($19 + [368]))
	$11 = *($19 + [368])
	*($19 + [144]) = $11
	*($19 + [146]) = *($19 + [370])
	*($19 + [148]) = *($19 + [372])
	*($19 + [150]) = *($19 + [374])
	*($19 + [152]) = *($19 + [376])
	*($19 + [154]) = *($19 + [378])
	*($19 + [156]) = *($19 + [380])
	*($19 + [158]) = *($19 + [382])
	*($19 + [160]) = *($19 + [384])
	*($19 + [162]) = *($19 + [386])
	$6 = *($3 + [8])
	CALL eosio_assert([1], [880])
	$15 = (uint_64)$6 >> (uint_64)(int_64)8)
	
.LOOP $label$40:
	$16 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$4 = [0]
	
.LABEL $label$38
	CALL eosio_assert($4, [944])
	$15 = *($3)
	*($19 + [128]) = (int_64)0
	*($19 + [136]) = *(($3 + [8]))
	CALL eosio_assert([1], [880])
	$7 = ((uint_64)((uint_64)((uint_64)((int_64)$15 * (int_64)985000) / (uint_64)$17) / (uint_64)((int_64)$14 + (int_64)-1)) / (uint_64)(int_64)10000)
	$15 = (uint_64)*($19 + [136]) >> (uint_64)(int_64)8)
	
.LOOP $label$45:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	
.LOOP $label$47:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$47 }
	
.LABEL $label$46
	$4 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	$4 = [0]
	
.LABEL $label$43
	CALL eosio_assert($4, [944])
	*($19 + [128]) = ((uint_64)*($3) / (uint_64)$17)
	*($19 + [112]) = (int_64)0
	$8 = *(($3 + [8]))
	*($19 + [120]) = $8
	CALL eosio_assert([1], [880])
	$15 = (uint_64)$8 >> (uint_64)(int_64)8)
	
.LOOP $label$49:
	$16 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$50 }
	
.LOOP $label$51:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$48 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$51 }
	
.LABEL $label$50
	$16 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$49 }
	
.LABEL $label$48
	CALL eosio_assert($16, [944])
	if ( ((int_64)$17 == (int_64)10) ){ goto $label$53 }
	$13 = (int_64)0
	if ( ((int_64)$17 != (int_64)1) ){ goto $label$52 }
	
.LABEL $label$53
	$10 = ((int_64)$6 == (int_64)$8)
	$4 = [0]
	$13 = (int_64)0
	
.LOOP $label$54:
	$15 = CALL current_time()
	*(($5 = (($19 + [368]) + [8]))) = *(($3 + [8]))
	*($19 + [368]) = (int_64)0
	CALL eosio_assert([1], [880])
	$12 = (CASTING uint_64)(uint_32 (((uint_32)((($4 + ($11 & [65535])) + (CASTING uint_32)(uint_64 ((uint_64)$15 / (uint_64)(int_64)1000000))) + [99]) % (uint_32)[100]) + [1]))
	$15 = (uint_64)*($5) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$56:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$55 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$57 }
	
.LOOP $label$58:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$55 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$58 }
	
.LABEL $label$57
	$9 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$56 }
	
.LABEL $label$55
	CALL eosio_assert($9, [944])
	if ( ((uint_64)$12 >= (uint_64)$14) ){ goto $label$59 }
	CALL eosio_assert($10, [1344])
	$13 = ((int_64)$13 + (int_64)$7)
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [1392])
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [1424])
	*($5) = $6
	*($19 + [368]) = $7
	
.LABEL $label$59
	CALL _ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy($0, $1, $18, *($19 + [184]), ($19 + [128]), ($19 + [368]), $14, $12)
	$4 = ($4 + [1])
	if ( ((uint_64)(CASTING uint_64)(uint_32 $4) >= (uint_64)$17) ){ goto $label$60 }
	$11 = *((($19 + [144]) + ($4 << [1])))
	goto $label$54 
	
.LABEL $label$60
	*($19 + [112]) = $13
	
.LABEL $label$52
	*($19 + [96]) = (int_64)0
	$15 = *(($3 + [8]))
	*($19 + [104]) = $15
	CALL eosio_assert([1], [880])
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$64 }
	
.LOOP $label$65:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$65 }
	
.LABEL $label$64
	$9 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	$9 = [0]
	
.LABEL $label$61
	CALL eosio_assert($9, [944])
	$15 = *($3)
	$12 = *(($3 + [8]))
	CALL eosio_assert(((int_64)$8 == (int_64)$12), [1456])
	$7 = (int_64)
	CALL eosio_assert(((int_64)$7($15 - $13)) > (int_64)-4611686018427387904), [1504])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [1536])
	*((($19 + [96]) + [8])) = $12
	*($19 + [96]) = $7
	CALL _ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_($0, $1, $3, ($19 + [96]))
	if ( (int_64)($18 == 0) ){ goto $label$66 }
	if ( ((int_64)$18 == (int_64)$1) ){ goto $label$66 }
	*($19 + [376]) = (int_64)1398362884
	*($19 + [368]) = (int_64)0
	CALL eosio_assert([1], [880])
	$15 = (int_64)5462355
	$16 = [0]
	
.LOOP $label$69:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$68 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	
.LOOP $label$71:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$68 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$71 }
	
.LABEL $label$70
	$9 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$68
	$9 = [0]
	
.LABEL $label$67
	CALL eosio_assert($9, [944])
	CALL _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y($3, ($19 + [368]), $17)
	*($19 + [8]) = $1
	$15 = CALL current_time()
	CALL $67(($19 + [64]), ($19 + [8]))
	$16 = CALL $105(($19 + [64]), [0], [1568])
	$9 = ($16 + [8])
	*((($19 + [80]) + [8])) = *($9)
	*($19 + [80]) = *($16)
	*($16) = [0]
	*(($16 + [4])) = [0]
	*($9) = [0]
	$16 = CALL $104(($19 + [80]), [1648])
	$9 = ($16 + [8])
	*((($19 + [24]) + [8])) = *($9)
	*($19 + [24]) = *($16)
	*($16) = [0]
	*(($16 + [4])) = [0]
	*($9) = [0]
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $18, ($19 + [368]), ($19 + [24]), ((int_64)((int_64)((uint_64)$15 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1), $18)
	if ( ((*($19 + [24]) & [1]) == 0) ){ goto $label$72 }
	CALL $99(*($19 + [32]))
	
.LABEL $label$72
	if ( ((*($19 + [80]) & [1]) == 0) ){ goto $label$73 }
	CALL $99(*($19 + [88]))
	
.LABEL $label$73
	if ( ((*($19 + [64]) & [1]) == 0) ){ goto $label$74 }
	CALL $99(*($19 + [72]))
	
.LABEL $label$74
	CALL eosio_assert(((int_64)*(($19 + [376])) == (int_64)$12), [1456])
	$7 = (int_64)
	*($19 + [96]) = $7($7 - *($19 + [368])))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1504])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [1536])
	
.LABEL $label$66
	$6 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [512]
	$13 = (int_64)0
	
.LOOP $label$75:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$80 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$79 }
	$9 = ($9 + [165])
	goto $label$78 
	
.LABEL $label$80
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$79
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$78
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$77
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$76
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$75 }
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [368]
	$17 = (int_64)0
	
.LOOP $label$81:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$82 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$9 = ($9 + [165])
	goto $label$83 
	
.LABEL $label$84
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$82
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$17 = ((int_64)$14 | (int_64)$17)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$81 }
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [1664]
	$18 = (int_64)0
	
.LOOP $label$85:
	if ( ((uint_64)$15 > (uint_64)(int_64)9) ){ goto $label$90 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$9 = ($9 + [165])
	goto $label$88 
	
.LABEL $label$90
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$87
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$86
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$12 | (int_64)$18)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$85 }
	*((($19 + [24]) + [12])) = *($19 + [100])
	*((($19 + [24]) + [20])) = *((($19 + [96]) + [12]))
	*(($4 = (($19 + [24]) + [16]))) = *((($19 + [96]) + [8]))
	*($19 + [24]) = $6
	*($19 + [32]) = *($19 + [96])
	*($19 + [368]) = $17
	*($19 + [376]) = $18
	*($19 + [384]) = [0]
	*(($9 = (($19 + [368]) + [20]))) = [0]
	*(($5 = (($19 + [368]) + [24]))) = [0]
	*(($16 = CALL $98([16]))) = $6
	*($16 + [8]) = $13
	*(($11 = ($19 + [400]))) = [0]
	$10 = ($16 + [16])
	*($5) = $10
	*($9) = $10
	*($19 + [384]) = $16
	*($19 + [396]) = [0]
	*(($19 + [404])) = [0]
	CALL $33(($19 + [396]), [24])
	$16 = *($19 + [396])
	$9 = (*($11) - $16)
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [608])
	CALL memcpy($16, ($19 + [24]), [8])
	CALL eosio_assert(((int_32)($9 + [-8]) > (int_32)[7]), [608])
	CALL memcpy(($16 + [8]), (($19 + [24]) + [8]), [8])
	CALL eosio_assert(((int_32)($9 + [-16]) > (int_32)[7]), [608])
	CALL memcpy(($16 + [16]), $4, [8])
	CALL $69(($19 + [80]), ($19 + [368]))
	$16 = *($19 + [80])
	CALL send_inline($16, (*($19 + [84]) - $16))
	$16 = *($19 + [80])
	if ( ($16 == 0) ){ goto $label$91 }
	*($19 + [84]) = $16
	CALL $99($16)
	
.LABEL $label$91
	$16 = *($19 + [396])
	if ( ($16 == 0) ){ goto $label$92 }
	*(($19 + [400])) = $16
	CALL $99($16)
	
.LABEL $label$92
	$16 = *($19 + [384])
	if ( ($16 == 0) ){ goto $label$93 }
	*(($19 + [388])) = $16
	CALL $99($16)
	
.LABEL $label$93
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$94 }
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [368]
	$13 = (int_64)0
	
.LOOP $label$95:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$96 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$98 }
	$9 = ($9 + [165])
	goto $label$97 
	
.LABEL $label$98
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$97
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$96
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$95 }
	*(($19 + [376])) = [0]
	*($19 + [368]) = (int_64)0
	$16 = CALL strlen([48])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$101 }
	*($19 + [368]) = ($16 << [1])
	$9 = (($19 + [368]) | [1])
	if ( $16 ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$101
	$4 = (($16 + [16]) & [-16])
	$9 = CALL $98($4)
	*($19 + [368]) = ($4 | [1])
	*($19 + [376]) = $9
	*($19 + [372]) = $16
	
.LABEL $label$100
	CALL memcpy($9, [48], $16)
	
.LABEL $label$99
	*(($9 + $16)) = [0]
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [368]
	$17 = (int_64)0
	
.LOOP $label$102:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$103 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$9 = ($9 + [165])
	goto $label$104 
	
.LABEL $label$105
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$103
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$17 = ((int_64)$14 | (int_64)$17)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$102 }
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $13, ($19 + [96]), ($19 + [368]), ((int_64)((int_64)((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$17), (int_64)0)
	if ( ((*($19 + [368]) & [1]) == 0) ){ goto $label$94 }
	CALL $99(*($19 + [376]))
	
.LABEL $label$94
	$15 = *(($3 + [8]))
	if ( ((int_64)$15 != (int_64)1397703940) ){ goto $label$107 }
	$17 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [1680]
	$13 = (int_64)0
	
.LOOP $label$108:
	if ( ((uint_64)$15 > (uint_64)(int_64)8) ){ goto $label$113 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$9 = ($9 + [165])
	goto $label$111 
	
.LABEL $label$113
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$112
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$110
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$109
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$108 }
	$15 = (int_64)0
	*($19 + [80]) = (int_64)0
	*($19 + [88]) = ((int_64)$13 + (int_64)$17)
	$13 = *($19 + [80])
	$14 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$12 = ((int_64)$14 + (int_64)$13)
	*($19 + [80]) = $12
	*($19 + [88]) = ((int_64)*($19 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($12 <= $14)) : (uint_64)($12 <= $13) ))
	$12 = CALL current_time()
	*(($19 + [396])) = [0]
	*(($19 + [400])) = [0]
	*($19 + [380]) = [0]
	*($19 + [384]) = [0]
	*($19 + [388]) = [0]
	*($19 + [392]) = [0]
	*($19 + [368]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($19 + [404]) = [0]
	*(($19 + [408])) = [0]
	*(($19 + [412])) = [0]
	*($19 + [416]) = [0]
	*(($19 + [420])) = [0]
	*(($19 + [424])) = [0]
	$4 = ($19 + [404])
	$17 = *($0)
	$14 = (int_64)59
	$16 = [512]
	$13 = (int_64)0
	
.LOOP $label$114:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$119 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$118 }
	$9 = ($9 + [165])
	goto $label$117 
	
.LABEL $label$119
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$118
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$117
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$116
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$115
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$114 }
	*($19 + [72]) = $13
	*($19 + [64]) = $17
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [1696]
	$13 = (int_64)0
	
.LOOP $label$120:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$121 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$9 = ($9 + [165])
	goto $label$122 
	
.LABEL $label$123
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$121
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$120 }
	*($19 + [8]) = $13
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [1680]
	$13 = (int_64)0
	
.LOOP $label$124:
	if ( ((uint_64)$15 > (uint_64)(int_64)8) ){ goto $label$129 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$9 = ($9 + [165])
	goto $label$127 
	
.LABEL $label$129
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$128
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$126
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$125
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$124 }
	*($19 + [56]) = $13
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [32]
	$13 = (int_64)0
	
.LOOP $label$130:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$131 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$133 }
	$9 = ($9 + [165])
	goto $label$132 
	
.LABEL $label$133
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$132
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$131
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$130 }
	*($19 + [24]) = $13
	*($19 + [32]) = $1
	*($19 + [40]) = *($3)
	CALL $70($4, ($19 + [64]), ($19 + [8]), ($19 + [56]), ($19 + [24]))
	$15 = *($0)
	*(($19 + [388])) = [0]
	CALL $36(($19 + [24]), ($19 + [368]))
	$16 = *($19 + [24])
	CALL send_deferred(($19 + [80]), $15, $16, (*($19 + [28]) - $16), [0])
	$16 = *($19 + [24])
	if ( ($16 == 0) ){ goto $label$134 }
	*($19 + [28]) = $16
	CALL $99($16)
	
.LABEL $label$134
	CALL $38(($19 + [368]))
	goto $label$106 
	
.LABEL $label$107
	if ( ((int_64)$15 != (int_64)293455873288) ){ goto $label$106 }
	$17 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [1680]
	$13 = (int_64)0
	
.LOOP $label$135:
	if ( ((uint_64)$15 > (uint_64)(int_64)8) ){ goto $label$140 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$139 }
	$9 = ($9 + [165])
	goto $label$138 
	
.LABEL $label$140
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$139
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$138
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$137
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$136
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$135 }
	$15 = (int_64)0
	*($19 + [80]) = (int_64)0
	*($19 + [88]) = ((int_64)$13 + (int_64)$17)
	$13 = *($19 + [80])
	$14 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$12 = ((int_64)$14 + (int_64)$13)
	*($19 + [80]) = $12
	*($19 + [88]) = ((int_64)*($19 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($12 <= $14)) : (uint_64)($12 <= $13) ))
	$12 = CALL current_time()
	*(($19 + [396])) = [0]
	*(($19 + [400])) = [0]
	*($19 + [380]) = [0]
	*($19 + [384]) = [0]
	*($19 + [388]) = [0]
	*($19 + [392]) = [0]
	*($19 + [368]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($19 + [404]) = [0]
	*(($19 + [408])) = [0]
	*(($19 + [412])) = [0]
	*($19 + [416]) = [0]
	*(($19 + [420])) = [0]
	*(($19 + [424])) = [0]
	$4 = ($19 + [404])
	$17 = *($0)
	$14 = (int_64)59
	$16 = [512]
	$13 = (int_64)0
	
.LOOP $label$141:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$146 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$9 = ($9 + [165])
	goto $label$144 
	
.LABEL $label$146
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$145
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$143
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$142
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$141 }
	*($19 + [72]) = $13
	*($19 + [64]) = $17
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [1696]
	$13 = (int_64)0
	
.LOOP $label$147:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$148 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$150 }
	$9 = ($9 + [165])
	goto $label$149 
	
.LABEL $label$150
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$149
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$148
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$147 }
	*($19 + [8]) = $13
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [1680]
	$13 = (int_64)0
	
.LOOP $label$151:
	if ( ((uint_64)$15 > (uint_64)(int_64)8) ){ goto $label$156 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$155 }
	$9 = ($9 + [165])
	goto $label$154 
	
.LABEL $label$156
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$153 }
	goto $label$152 
	
.LABEL $label$155
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$154
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$153
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$152
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$151 }
	*($19 + [56]) = $13
	$15 = (int_64)0
	$12 = (int_64)59
	$16 = [32]
	$13 = (int_64)0
	
.LOOP $label$157:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$158 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$160 }
	$9 = ($9 + [165])
	goto $label$159 
	
.LABEL $label$160
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$159
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$158
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$157 }
	*($19 + [24]) = $13
	*($19 + [32]) = $1
	*($19 + [40]) = ((uint_32)*($3) / (uint_32)[20000])
	CALL $70($4, ($19 + [64]), ($19 + [8]), ($19 + [56]), ($19 + [24]))
	$15 = *($0)
	*(($19 + [388])) = [0]
	CALL $36(($19 + [24]), ($19 + [368]))
	$16 = *($19 + [24])
	CALL send_deferred(($19 + [80]), $15, $16, (*($19 + [28]) - $16), [0])
	$16 = *($19 + [24])
	if ( ($16 == 0) ){ goto $label$161 }
	*($19 + [28]) = $16
	CALL $99($16)
	
.LABEL $label$161
	CALL $38(($19 + [368]))
	
.LABEL $label$106
	$17 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [320]
	$13 = (int_64)0
	
.LOOP $label$162:
	if ( ((uint_64)$15 > (uint_64)(int_64)4) ){ goto $label$167 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$166 }
	$9 = ($9 + [165])
	goto $label$165 
	
.LABEL $label$167
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$166
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$165
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$164
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$163
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$162 }
	$15 = (int_64)0
	*($19 + [80]) = (int_64)0
	*($19 + [88]) = ((int_64)$13 + (int_64)$17)
	$13 = *($19 + [80])
	$14 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$12 = ((int_64)$14 + (int_64)$13)
	*($19 + [80]) = $12
	*($19 + [88]) = ((int_64)*($19 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($12 <= $14)) : (uint_64)($12 <= $13) ))
	$12 = CALL current_time()
	*(($19 + [396])) = [0]
	*(($19 + [400])) = [0]
	*($19 + [380]) = [0]
	*($19 + [384]) = [0]
	*($19 + [388]) = [0]
	*($19 + [392]) = [0]
	*($19 + [368]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($19 + [404]) = [0]
	*(($19 + [408])) = [0]
	*(($19 + [412])) = [0]
	*($19 + [416]) = [0]
	*(($19 + [420])) = [0]
	*(($19 + [424])) = [0]
	$4 = ($19 + [404])
	$17 = *($0)
	$14 = (int_64)59
	$16 = [512]
	$13 = (int_64)0
	
.LOOP $label$168:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$173 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$172 }
	$9 = ($9 + [165])
	goto $label$171 
	
.LABEL $label$173
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$170 }
	goto $label$169 
	
.LABEL $label$172
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$171
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$170
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$169
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$168 }
	*($19 + [72]) = $13
	*($19 + [64]) = $17
	$15 = (int_64)0
	$14 = (int_64)59
	$16 = [320]
	$13 = (int_64)0
	
.LOOP $label$174:
	if ( ((uint_64)$15 > (uint_64)(int_64)4) ){ goto $label$179 }
	$9 = *($16)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$178 }
	$9 = ($9 + [165])
	goto $label$177 
	
.LABEL $label$179
	$12 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$176 }
	goto $label$175 
	
.LABEL $label$178
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$177
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$176
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$175
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$174 }
	*($19 + [56]) = $13
	*(($19 + [16])) = [0]
	*($19 + [8]) = (int_64)0
	$16 = CALL strlen([48])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$182 }
	*($19 + [8]) = ($16 << [1])
	$9 = (($19 + [8]) | [1])
	if ( $16 ){ goto $label$181 }
	goto $label$180 
	
.LABEL $label$182
	$5 = (($16 + [16]) & [-16])
	$9 = CALL $98($5)
	*($19 + [8]) = ($5 | [1])
	*($19 + [16]) = $9
	*($19 + [12]) = $16
	
.LABEL $label$181
	CALL memcpy($9, [48], $16)
	
.LABEL $label$180
	*(($9 + $16)) = [0]
	*(($19 + [44])) = *($19 + [12])
	*($19 + [32]) = $1
	$16 = ($19 + [16])
	*(($19 + [48])) = *($16)
	$15 = *($0)
	*($19 + [24]) = $15
	*($19 + [40]) = *($19 + [8])
	*($19 + [8]) = [0]
	*($19 + [12]) = [0]
	*($16) = [0]
	$16 = (($19 + [368]) + [40])
	$9 = *($16)
	if ( ((uint_32)$9 >= (uint_32)*(($19 + [412]))) ){ goto $label$184 }
	CALL $45($9, ($19 + [64]), $15, *($19 + [56]), ($19 + [24]))
	*($16) = (*($16) + [40])
	goto $label$183 
	
.LABEL $label$184
	CALL $71($4, ($19 + [64]), $0, ($19 + [56]), ($19 + [24]))
	
.LABEL $label$183
	if ( ((*(($19 + [40])) & [1]) == 0) ){ goto $label$185 }
	CALL $99(*(($19 + [48])))
	
.LABEL $label$185
	if ( ((*($19 + [8]) & [1]) == 0) ){ goto $label$186 }
	CALL $99(*(($19 + [16])))
	
.LABEL $label$186
	*(($19 + [388])) = [0]
	$15 = *($0)
	CALL $36(($19 + [24]), ($19 + [368]))
	$16 = *($19 + [24])
	CALL send_deferred(($19 + [80]), $15, $16, (*($19 + [28]) - $16), [0])
	$16 = *($19 + [24])
	if ( ($16 == 0) ){ goto $label$187 }
	*($19 + [28]) = $16
	CALL $99($16)
	
.LABEL $label$187
	if ( ((int_64)*($19 + [112]) < (int_64)1) ){ goto $label$188 }
	*(($19 + [32])) = [0]
	*($19 + [24]) = (int_64)0
	$16 = CALL strlen([48])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$191 }
	*($19 + [24]) = ($16 << [1])
	$9 = (($19 + [24]) | [1])
	if ( $16 ){ goto $label$190 }
	goto $label$189 
	
.LABEL $label$191
	$4 = (($16 + [16]) & [-16])
	$9 = CALL $98($4)
	*($19 + [24]) = ($4 | [1])
	*($19 + [32]) = $9
	*($19 + [28]) = $16
	
.LABEL $label$190
	CALL memcpy($9, [48], $16)
	
.LABEL $label$189
	*(($9 + $16)) = [0]
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $1, ($19 + [112]), ($19 + [24]), ((int_64)*($19 + [184]) + (int_64)((int_64)((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000) & (int_64)4294967295)), (int_64)0)
	if ( ((*($19 + [24]) & [1]) == 0) ){ goto $label$188 }
	CALL $99(*($19 + [32]))
	
.LABEL $label$188
	CALL $38(($19 + [368]))
	
.LABEL $label$27
	if ( ((*($19 + [256]) & [1]) == 0) ){ goto $label$192 }
	CALL $99(*($19 + [264]))
	
.LABEL $label$192
	if ( ((*($19 + [272]) & [1]) == 0) ){ goto $label$193 }
	CALL $99(*($19 + [280]))
	
.LABEL $label$193
	if ( ((*($19 + [288]) & [1]) == 0) ){ goto $label$194 }
	CALL $99(*($19 + [296]))
	
.LABEL $label$194
	if ( ((*($19 + [304]) & [1]) == 0) ){ goto $label$195 }
	CALL $99(*($19 + [312]))
	
.LABEL $label$195
	if ( ((*($19 + [320]) & [1]) == 0) ){ goto $label$196 }
	CALL $99(*($19 + [328]))
	
.LABEL $label$196
	if ( ((*($19 + [336]) & [1]) == 0) ){ goto $label$197 }
	CALL $99(*($19 + [344]))
	
.LABEL $label$197
	$4 = *($19 + [352])
	
.LABEL $label$14
	if ( ($4 == 0) ){ goto $label$198 }
	$16 = *($19 + [356])
	if ( ((int_32)$16 == (int_32)$4) ){ goto $label$200 }
	$9 = ([0] - $4)
	$16 = ($16 + [-12])
	
.LOOP $label$201:
	if ( ((*($16) & [1]) == 0) ){ goto $label$202 }
	CALL $99(*(($16 + [8])))
	
.LABEL $label$202
	$16 = ($16 + [-12])
	if ( ((int_32)($16 + $9) != (int_32)[-12]) ){ goto $label$201 }
	$16 = *($19 + [352])
	goto $label$199 
	
.LABEL $label$200
	$16 = $4
	
.LABEL $label$199
	*($19 + [356]) = $4
	CALL $99($16)
	
.LABEL $label$198
	*([0] + [4]) = ($19 + [432])
	return (unreachable)
	
.LABEL $label$13
	CALL $100(($19 + [8]))
	
.LABEL $label$12
	CALL $100(($19 + [368]))
	
.LABEL $label$11
	CALL $100(($19 + [24]))
	
.LABEL $label$6
	CALL $100(($19 + [368]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice10clearcandyEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)5445032382844370944, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [48])
	$4 = CALL $34($2, $4)
	
.LOOP $label$2:
	CALL eosio_assert([1], [976])
	CALL eosio_assert([1], [1024])
	$0 = [0]
	$3 = CALL db_next_i64(*($4 + [20]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $34($2, $3)
	
.LABEL $label$3
	CALL $56($2, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [336])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $51(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$4 = *($1 + [8])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$3 = *($0)
	*($6) = $3
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($6 + [8]) = $4)
	$0 = CALL db_find_i64($3, $4, (int_64)-5918304704032407552, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $52($6, $0)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$6), [432])
	CALL eosio_assert([1], [976])
	CALL eosio_assert([1], [1024])
	$1 = CALL db_next_i64(*($0 + [28]), ($6 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $52($6, $1)
	
.LABEL $label$2
	CALL $53($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $99($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $99($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [880])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [944])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [336])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [336])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [336])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$4 = *($2 + [8])
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($7 + [8]) = $4)
	$0 = CALL db_find_i64($5, $4, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $47($7, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$7), [432])
	CALL eosio_assert([1], [976])
	CALL eosio_assert([1], [1024])
	$2 = CALL db_next_i64(*($0 + [36]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $47($7, $2)
	
.LABEL $label$2
	CALL $48($7, $0)
	
.LABEL $label$1
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $99($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $99($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $98($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $33($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [608])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [608])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $43(CALL $44($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	*($12 + [152]) = $5
	*($12 + [144]) = $4
	$4 = *($2 + [8])
	if ( ((int_64)$4 != (int_64)1397703940) ){ goto $label$2 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$11 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$8 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$8 = ($8 + [165])
	goto $label$6 
	
.LABEL $label$8
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$3 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [160]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$14 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$8 = ($8 + [165])
	goto $label$12 
	
.LABEL $label$14
	$5 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$5 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$9 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [224]
	$11 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$20 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$20
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $109(($12 + [32]), $3)
	CALL $72($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$21 }
	CALL $99(*(($12 + [40])))
	
.LABEL $label$21
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $36($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$22 }
	*($12 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$22
	CALL $38(($12 + [80]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$4 != (int_64)361939223556) ){ goto $label$23 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$29 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [165])
	goto $label$27 
	
.LABEL $label$29
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$25
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$24 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [176]
	$11 = (int_64)0
	
.LOOP $label$30:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [165])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [224]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$39 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$8 = ($8 + [165])
	goto $label$37 
	
.LABEL $label$39
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$34 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $109(($12 + [32]), $3)
	CALL $72($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$40 }
	CALL $99(*(($12 + [40])))
	
.LABEL $label$40
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $36($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$41 }
	*($12 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$41
	CALL $38(($12 + [80]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$4 != (int_64)297481618436) ){ goto $label$42 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$11 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$48 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$8 = ($8 + [165])
	goto $label$46 
	
.LABEL $label$48
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$44
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$43 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [192]
	$11 = (int_64)0
	
.LOOP $label$49:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$50 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$8 = ($8 + [165])
	goto $label$51 
	
.LABEL $label$52
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [224]
	$11 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$58 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$8 = ($8 + [165])
	goto $label$56 
	
.LABEL $label$58
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$54
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$53 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $109(($12 + [32]), $3)
	CALL $72($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$59 }
	CALL $99(*(($12 + [40])))
	
.LABEL $label$59
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $36($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$60 }
	*($12 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$60
	CALL $38(($12 + [80]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$4 != (int_64)293455873288) ){ goto $label$61 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [512]
	$11 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$67 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$8 = ($8 + [165])
	goto $label$65 
	
.LABEL $label$67
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$63
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$62 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [208]
	$11 = (int_64)0
	
.LOOP $label$68:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$69 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$8 = ($8 + [165])
	goto $label$70 
	
.LABEL $label$71
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$69
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$68 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [224]
	$11 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$77 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$8 = ($8 + [165])
	goto $label$75 
	
.LABEL $label$77
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$73
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$72 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $109(($12 + [32]), $3)
	CALL $72($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$78 }
	CALL $99(*(($12 + [40])))
	
.LABEL $label$78
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $36($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$79 }
	*($12 + [4]) = $9
	CALL $99($9)
	
.LABEL $label$79
	CALL $38(($12 + [80]))
	goto $label$1 
	
.LABEL $label$61
	CALL eosio_assert([0], [1712])
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [160])
}

void .FUNC $108 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	float_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	*([0] + [4]) = $9
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($9 + [56]) = $5)
	$8 = [0]
	*(($9 + [48])) = [0]
	*($9 + [24]) = $5
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$6 = *($0)
	*($9 + [16]) = $6
	$4 = CALL db_find_i64($6, $5, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $47(($9 + [16]), $4)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($9 + [16])), [432])
	
.LABEL $label$1
	$5 = *($3)
	if ( ((int_64)$5 <= (int_64)-1) ){ goto $label$5 }
	if ( ($8 == 0) ){ goto $label$4 }
	if ( ((uint_64)*($8 + [16]) > (uint_64)(int_64)2) ){ goto $label$4 }
	if ( (((uint_64)*($8 + [8]) > (uint_64)(int_64)9) & ((float_64)*($8 + [24]) >= (float_64)(float_64)10)) ){ goto $label$4 }
	CALL eosio_assert([1], [976])
	CALL eosio_assert([1], [1024])
	$2 = CALL db_next_i64(*($8 + [36]), ($9 + [64]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $47(($9 + [16]), $2)
	
.LABEL $label$6
	CALL $48(($9 + [16]), $8)
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ((float_64)(CASTING float_64)(int_64 $5) / (float_64)(CASTING float_64)(int_64 *($2)))
	*($9 + [8]) = (CASTING uint_64)(uint_32 ((float_64)$7 < (float_64)(float_64)-10))
	*($9) = !(float_64)$7
	if ( ($8 == 0) ){ goto $label$10 }
	if ( ((uint_64)*($8 + [16]) > (uint_64)(int_64)2) ){ goto $label$9 }
	if ( (((uint_64)*($8 + [8]) > (uint_64)(int_64)9) & ((float_64)*($8 + [24]) >= (float_64)(float_64)10)) ){ goto $label$9 }
	*($9 + [72]) = $0
	*($9 + [80]) = $2
	*($9 + [68]) = $9
	*($9 + [64]) = ($9 + [8])
	*($9 + [76]) = ($9 + [56])
	CALL eosio_assert([1], [624])
	CALL $76(($9 + [16]), $8, ($9 + [64]))
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$10
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9 + [16]) == (int_64)CALL $fimport$2()), [544])
	*(($8 = CALL $98([48])) + [32]) = ($9 + [16])
	*($8 + [8]) = (int_64)1
	*($8) = $1
	*($8 + [16]) = *($9 + [8])
	*($8 + [24]) = *($9)
	*($9 + [112]) = (($9 + [64]) + [32])
	*($9 + [108]) = ($9 + [64])
	*($9 + [104]) = ($9 + [64])
	*($9 + [120]) = ($9 + [104])
	*($9 + [132]) = ($8 + [8])
	*($9 + [128]) = $8
	*($9 + [136]) = ($8 + [16])
	*($9 + [140]) = ($8 + [24])
	CALL $75(($9 + [128]), ($9 + [120]))
	$5 = *($8)
	$0 = CALL db_store_i64(*((($9 + [16]) + [8])), (int_64)-3020376800539705344, $6, $5, ($9 + [64]), [32])
	*($8 + [36]) = $0
	$2 = (($9 + [16]) + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$11 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($9 + [128]) = $8
	$5 = *($8)
	*($9 + [64]) = $5
	*($9 + [104]) = $0
	$3 = ($9 + [44])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*((($9 + [16]) + [32]))) ){ goto $label$8 }
	*($2 + [8]) = $5
	*($2 + [16]) = $0
	*($9 + [128]) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [1888])
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$8
	CALL $50(($9 + [40]), ($9 + [128]), ($9 + [64]), ($9 + [104]))
	
.LABEL $label$7
	$8 = *($9 + [128])
	*($9 + [128]) = [0]
	if ( ($8 == 0) ){ goto $label$4 }
	CALL $99($8)
	
.LABEL $label$4
	$0 = *($9 + [40])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = ($9 + [44])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $99($2)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $0
	
.LABEL $label$12
	*($3) = $0
	CALL $99($8)
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [144])
}

void .FUNC _ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6, int_64 $7)
{
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [112])
	*([0] + [4]) = $16
	$8 = ($0 + [8])
	$14 = ($0 + [24])
	$10 = *($14)
	if ( ((int_64)$10 != (int_64)-1) ){ goto $label$1 }
	$10 = (int_64)0
	$13 = CALL db_lowerbound_i64(*($8), *(($0 + [16])), (int_64)5445040692176502784, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$2 }
	CALL $57($8, $13)
	*($16 + [4]) = [0]
	*($16) = $8
	$10 = *(*(CALL $77($16) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($0 + [24])) = $10
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [1952])
	$9 = *($14)
	if ( (uint_64)($9 <= (int_64)100000) ){ goto $label$6 }
	$10 = ((int_64)$9 + (int_64)-100000)
	$11 = *(($0 + [32]))
	$15 = *(($0 + [36]))
	if ( ((int_32)$15 == (int_32)$11) ){ goto $label$7 }
	$14 = ($15 + [-24])
	$12 = ([0] - $11)
	
.LOOP $label$8:
	if ( ((int_64)*(*($14)) == (int_64)$10) ){ goto $label$7 }
	$15 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $12) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$15 == (int_32)$11) ){ goto $label$10 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [88]) == (int_32)$8), [432])
	if ( $14 ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$10
	$14 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)5445040692176502784, $10)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$6 }
	$14 = CALL $57($8, $14)
	CALL eosio_assert(((int_32)*($14 + [88]) == (int_32)$8), [432])
	
.LABEL $label$9
	CALL eosio_assert([1], [976])
	CALL eosio_assert([1], [1024])
	$13 = CALL db_next_i64(*($14 + [92]), $16)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	CALL $57($8, $13)
	
.LABEL $label$11
	CALL $58($8, $14)
	$10 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [544])
	$14 = CALL $98([104])
	$13 = CALL $59($14)
	*($14 + [88]) = $8
	*($14 + [8]) = $1
	*($14) = $9
	*($14 + [16]) = ( (int_64)0 ? $2 : ((int_64)$2 == (int_64)$1) )
	*($14 + [24]) = $3
	*(($14 + [44])) = *(($4 + [12]))
	*(($14 + [40])) = *(($4 + [8]))
	*(($14 + [36])) = *(($4 + [4]))
	*($14 + [32]) = *($4)
	*(($14 + [56])) = *(($5 + [8]))
	*($14 + [48]) = *($5)
	*($14 + [64]) = $6
	*($14 + [72]) = $7
	$1 = CALL current_time()
	*($14 + [84]) = [0]
	*($14 + [80]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	*($16 + [96]) = ($16 + [85])
	*($16 + [92]) = $16
	*($16 + [88]) = $16
	CALL $78(($16 + [88]), $13)
	$1 = *($14)
	$13 = ($0 + [16])
	*($14 + [92]) = CALL db_store_i64(*($13), (int_64)5445040692176502784, $10, $1, $16, [85])
	$15 = ($0 + [24])
	if ( (uint_64)($1 <= *($15)) ){ goto $label$12 }
	*($15) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [24]))
	*($14 + [96]) = CALL db_idx64_store($1, (int_64)5445040692176502784, $10, $2, ($16 + [104]))
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [8]))
	*($14 + [100]) = CALL db_idx64_store($1, (int_64)5445040692176502785, $10, $2, ($16 + [104]))
	*($16 + [88]) = $14
	$10 = *($14)
	*($16) = $10
	$15 = *(($14 + [92]))
	*($16 + [104]) = $15
	$13 = *(($0 + [36]))
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [40]))) ){ goto $label$5 }
	*($13 + [8]) = $10
	*($13 + [16]) = $15
	*($16 + [88]) = [0]
	*($13) = $14
	*(($0 + [36])) = ($13 + [24])
	goto $label$4 
	
.LABEL $label$6
	$10 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [544])
	$14 = CALL $98([104])
	$13 = CALL $59($14)
	*($14 + [88]) = $8
	*($14 + [8]) = $1
	*($14) = $9
	*($14 + [16]) = ( (int_64)0 ? $2 : ((int_64)$2 == (int_64)$1) )
	*($14 + [24]) = $3
	*(($14 + [44])) = *(($4 + [12]))
	*(($14 + [40])) = *(($4 + [8]))
	*(($14 + [36])) = *(($4 + [4]))
	*($14 + [32]) = *($4)
	*(($14 + [56])) = *(($5 + [8]))
	*($14 + [48]) = *($5)
	*($14 + [64]) = $6
	*($14 + [72]) = $7
	$1 = CALL current_time()
	*($14 + [84]) = [0]
	*($14 + [80]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	*($16 + [96]) = ($16 + [85])
	*($16 + [92]) = $16
	*($16 + [88]) = $16
	CALL $78(($16 + [88]), $13)
	$1 = *($14)
	$13 = ($0 + [16])
	*($14 + [92]) = CALL db_store_i64(*($13), (int_64)5445040692176502784, $10, $1, $16, [85])
	$15 = ($0 + [24])
	if ( (uint_64)($1 <= *($15)) ){ goto $label$13 }
	*($15) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [24]))
	*($14 + [96]) = CALL db_idx64_store($1, (int_64)5445040692176502784, $10, $2, ($16 + [104]))
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [8]))
	*($14 + [100]) = CALL db_idx64_store($1, (int_64)5445040692176502785, $10, $2, ($16 + [104]))
	*($16 + [88]) = $14
	$10 = *($14)
	*($16) = $10
	$15 = *(($14 + [92]))
	*($16 + [104]) = $15
	$13 = *(($0 + [36]))
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [40]))) ){ goto $label$15 }
	*($13 + [8]) = $10
	*($13 + [16]) = $15
	*($16 + [88]) = [0]
	*($13) = $14
	*(($0 + [36])) = ($13 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $61(($0 + [32]), ($16 + [88]), $16, ($16 + [104]))
	
.LABEL $label$14
	$14 = *($16 + [88])
	*($16 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $99($14)
	goto $label$3 
	
.LABEL $label$5
	CALL $61(($0 + [32]), ($16 + [88]), $16, ($16 + [104]))
	
.LABEL $label$4
	$14 = *($16 + [88])
	*($16 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $99($14)
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [112])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $98([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1752]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $110($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $101($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	*($1) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($0)) * (float_64)(float_64)0.002))
	*($1 + [8]) = *($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$12 }
	$3 = ((int_64)$2 * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_64)$3 != (int_64)361939223556) ){ goto $label$9 }
	$3 = ((int_64)$2 * (int_64)10000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$2 = (int_64)1413825092
	$0 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$16 }
	goto $label$7 
	
.LABEL $label$11
	$4 = [0]
	
.LABEL $label$10
	CALL eosio_assert($4, [944])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)1397703940), [1808])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [1872])
	return 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)297481618436) ){ goto $label$6 }
	$3 = ((int_64)$2 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$2 = (int_64)1162037572
	$0 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$19 }
	goto $label$4 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [944])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)361939223556), [1808])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [1872])
	return 
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$3 }
	$3 = ((int_64)$2 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$2 = (int_64)1146312005
	$0 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [944])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)297481618436), [1808])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [1872])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [1712])
	return 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [944])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)293455873288), [1808])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [1872])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $99($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [336])
	CALL memcpy(($1 + [80]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [336])
	CALL memcpy(($1 + [84]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)5445040692176502784, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [432])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $57($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)5445040692176502784, $5))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [432])
	
.LABEL $label$4
	*($2 + [96]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$12 }
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e3))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_64)$3 != (int_64)361939223556) ){ goto $label$9 }
	$2 = ((int_64)$1 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1413825092
	$4 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$16 }
	goto $label$7 
	
.LABEL $label$11
	$5 = [0]
	
.LABEL $label$10
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [1808])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [2128])
	$1 = ((int_64)$1 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$5 = [0]
	
.LABEL $label$19
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [1808])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [2176])
	return 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)297481618436) ){ goto $label$6 }
	$2 = ((int_64)$1 * (int_64)100000)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1162037572
	$4 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$24 }
	goto $label$4 
	
.LABEL $label$8
	$5 = [0]
	
.LABEL $label$7
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)361939223556), [1808])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [2224])
	$1 = ((int_64)$1 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1413825092
	$4 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$5 = [0]
	
.LABEL $label$27
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)361939223556), [1808])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [2272])
	return 
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$3 }
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e7))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$32 }
	goto $label$1 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)297481618436), [1808])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [2320])
	$1 = ((int_64)$1 * (int_64)10000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1162037572
	$4 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	
.LOOP $label$39:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$39 }
	
.LABEL $label$38
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	$5 = [0]
	
.LABEL $label$35
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)297481618436), [1808])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [2368])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [1712])
	return 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)293455873288), [1808])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [2416])
	$1 = ((int_64)$1 * (int_64)10000000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [880])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$5 = [0]
	
.LABEL $label$40
	CALL eosio_assert($5, [944])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)293455873288), [1808])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [2464])
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $98(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $99($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $100 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $98($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $99($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $103($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $105 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $106($0, $1, $2, CALL $115($2))
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	return CALL $102($0, $1, CALL $115($1))
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [336])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $30(*($1), *($0 + [12]))
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [944])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $89(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = *($1 + [8])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [2592])
	$2 = *($1)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$3 = ($3 + [165])
	goto $label$9 
	
.LABEL $label$10
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [2608])
	$4 = *($1 + [28])
	CALL $88($0, $4, (*(($1 + [32])) - $4))
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$4 = (*(($1 + [20])) - *($1 + [16]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL $98($4)
	*(($0 + [16])) = $4
	*(($0 + [24])) = ($4 + ($5 << [4]))
	*(($5 = ($0 + [20]))) = $4
	$2 = *(($1 + [16]))
	$3 = (*(($1 + [20])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL $98($4)
	*(($0 + [28])) = $5
	*(($0 + [36])) = ($5 + $4)
	*(($4 = ($0 + [32]))) = $5
	$3 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $3, $1)
	*($4) = (*($4) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $108(($0 + [16]))
	
.LABEL $label$1
	CALL $108(($0 + [28]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [352])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $90($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $99($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [336])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $32($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [352])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $91($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $99($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $99($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [336])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [336])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $32(CALL $92($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [336])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [336])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [336])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [352])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [336])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [352])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $109(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $109(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $99(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $99(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($1)
	*($8 + [16]) = *($1 + [16])
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [20])
	*(($8 + [20])) = *($7)
	*($7) = [0]
	$7 = ($1 + [24])
	$3 = *($7)
	*($7) = [0]
	*(($8 + [24])) = $3
	*($1 + [16]) = [0]
	*($8 + [28]) = *($1 + [28])
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$3 = ($1 + [36])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [36])) = $4
	*($7) = [0]
	*($1 + [28]) = [0]
	$4 = ($6 + ((int_32)$5 * (int_32)[40]))
	$2 = ($8 + [40])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$3 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($5 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($1 + [-4])
	*($5) = *($7)
	*(($8 + [-20])) = *($1)
	$5 = ($1 + [4])
	*($6) = *($5)
	*($5) = [0]
	*(($5 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($1 + [8])
	*($5) = *($7)
	*(($8 + [-8])) = *(($1 + [12]))
	$5 = ($1 + [16])
	*($6) = *($5)
	*($5) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $4
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$8 = ($1 + [-24])
	
.LOOP $label$9:
	$1 = *(($8 + [12]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $1
	CALL $99($1)
	
.LABEL $label$10
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $1
	CALL $99($1)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $99($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*(($5 + [28])) = *(($1 + [28]))
	*(($4 = (($5 + [16]) + [8]))) = *(($1 + [24]))
	*($5 + [16]) = *($1 + [16])
	*($5 + [20]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $109($5, ($1 + [32]))
	*((($5 + [32]) + [8])) = *($4)
	*($5 + [32]) = *($5 + [16])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $109(($5 + [48]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [32])), (int_32 ($5 + [48])), (int_32 $1))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$2 }
	CALL $99(*($5 + [56]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $99(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $73($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $99($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $99($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $99($1)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $98([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $33($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $74(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $98([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $33(($8 + [28]), [20])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [608])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [608])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	CALL eosio_assert(((int_32)($1 + [-16]) > (int_32)[3]), [608])
	CALL memcpy(($2 + [16]), ($4 + [16]), [4])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($4 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$1 = ([0] - $4)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $99($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $99($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $99($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $45($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $99($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $99($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $99($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	$15 = $16
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [672])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [720])
	$10 = ((int_64)*($1 + [8]) + (int_64)1)
	*($1 + [8]) = $10
	$13 = ((int_64)*($1 + [16]) + (int_64)*(*($2)))
	*($1 + [16]) = $13
	$9 = *($2 + [8])
	$3 = *($1)
	$11 = ((float_64)*(*($2 + [4])) + (float_64)*($1 + [24]))
	*($1 + [24]) = $11
	$6 = ($1 + [24])
	$5 = ($1 + [16])
	$4 = ($1 + [8])
	if ( ((uint_64)$13 > (uint_64)(int_64)2) ){ goto $label$2 }
	$13 = $3
	if ( ((((uint_64)$10 > (uint_64)(int_64)9) & ((float_64)$11 >= (float_64)(float_64)10)) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$12 = *($2 + [12])
	$13 = *($12)
	$10 = *($9)
	*($15 + [8]) = $10
	*($15 + [16]) = $13
	*($15 + [24]) = (int_64)-1
	$14 = [0]
	*($15 + [32]) = [0]
	*(($15 + [36])) = [0]
	*(($15 + [40])) = [0]
	$12 = CALL db_find_i64($10, $13, (int_64)-5918304704032407552, *($12))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $52(($15 + [8]), $12)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($15 + [8])), [432])
	if ( (uint_64)(*($14 + [16]) <= (int_64)3) ){ goto $label$8 }
	CALL eosio_assert([0], [1920])
	$9 = *($15 + [32])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$12 = *($2 + [16])
	$7 = *($9)
	CALL eosio_assert(((int_64)$10 == (int_64)CALL $fimport$2()), [544])
	*(($2 = CALL $98([40])) + [8]) = (int_64)1398362884
	*($2) = (int_64)0
	CALL eosio_assert([1], [880])
	$8 = ($2 + [8])
	$13 = (int_64)5462355
	
.LOOP $label$11:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$9 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($9, [944])
	*($2 + [24]) = ($15 + [8])
	$13 = *(($12 + [8]))
	*($2 + [16]) = (int_64)1
	*(($14 = ($2 + [8]))) = $13
	CALL eosio_assert([1], [608])
	CALL memcpy(($15 + [48]), $2, [8])
	CALL eosio_assert([1], [608])
	CALL memcpy((($15 + [48]) | [8]), $8, [8])
	CALL eosio_assert([1], [608])
	CALL memcpy((($15 + [48]) + [16]), ($2 + [16]), [8])
	$13 = (uint_64)*($14) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($15 + [8]) + [8])), (int_64)-5918304704032407552, $7, $13), ($15 + [48]), [24]
	*($2 + [28]) = $9)
	$12 = (($15 + [8]) + [16])
	if ( (uint_64)($13 <= *($12)) ){ goto $label$14 }
	*($12) = ((int_64)$13 + (int_64)1)
	
.LABEL $label$14
	*($15 + [88]) = $2
	$13 = (uint_64)*($14) >> (uint_64)(int_64)8
	*($15 + [48]) = $13)
	*($15 + [84]) = $9
	$12 = ($15 + [36])
	$14 = *($12)
	if ( ((uint_32)$14 >= (uint_32)*(($15 + [40]))) ){ goto $label$7 }
	*($14 + [8]) = $13
	*($14 + [16]) = $9
	*($15 + [88]) = [0]
	*($14) = $2
	*($12) = ($14 + [24])
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([1], [624])
	CALL eosio_assert(((int_32)*(($14 + [24])) == (int_32)($15 + [8])), [672])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$2()), [720])
	*(($2 = ($14 + [16]))) = ((int_64)*($2) + (int_64)1)
	$13 = *($14 + [8])
	CALL eosio_assert([1], [784])
	CALL eosio_assert([1], [608])
	CALL memcpy(($15 + [48]), $14, [8])
	CALL eosio_assert([1], [608])
	CALL memcpy((($15 + [48]) | [8]), ($14 + [8]), [8])
	CALL eosio_assert([1], [608])
	CALL memcpy((($15 + [48]) + [16]), $2, [8])
	CALL db_update_i64(*($14 + [28]), (int_64)0, ($15 + [48]), [24])
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( (uint_64)($13) <= *((($15 + [8]) + [16]))) ){ goto $label$5 }
	*(($15 + [24])) = ((int_64)$13 + (int_64)1)
	$9 = *($15 + [32])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	CALL $55(($15 + [32]), ($15 + [88]), ($15 + [48]), ($15 + [84]))
	
.LABEL $label$6
	$14 = *($15 + [88])
	*($15 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$5 }
	CALL $99($14)
	
.LABEL $label$5
	$9 = *($15 + [32])
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$12 = ($15 + [36])
	$14 = *($12)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$16 }
	
.LOOP $label$17:
	$14 = ($14 + [-24])
	$2 = *($14)
	*($14) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	CALL $99($2)
	
.LABEL $label$18
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$17 }
	$14 = *(($15 + [32]))
	goto $label$15 
	
.LABEL $label$16
	$14 = $9
	
.LABEL $label$15
	*($12) = $9
	CALL $99($14)
	
.LABEL $label$3
	$13 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$13), [784])
	$2 = $16
	$14 = ($2 + [-32])
	*([0] + [4]) = $14
	*($15 + [52]) = $14
	*($15 + [48]) = $14
	*($15 + [56]) = $2
	*($15 + [88]) = ($15 + [48])
	*($15 + [12]) = $4
	*($15 + [16]) = $5
	*($15 + [20]) = $6
	*($15 + [8]) = $1
	CALL $75(($15 + [8]), ($15 + [88]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $14, [32])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*([0] + [4]) = ($15 + [96])
}

int_32 .FUNC $77 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [92]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2080])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5445040692176502784)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2016])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2016])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $57(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $46(*($1), ($0 + [32]))
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $39($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $33($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $40($4, $1)
	CALL $42(CALL $41(CALL $41($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $108($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $99($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [608])
	CALL memcpy(*($0 + [4]), ($1 + [84]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [336])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [336])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [336])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [336])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $30(*($1), ($0 + [32]))
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [352])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $33($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [336])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $98($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $108($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $99($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $32($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $101($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $98($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $101($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $99($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $100($7)
	return (unreachable)
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $109($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $109(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $99(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $99(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}