(data (i32.const 4) "\f0o\00\00")
(data (i32.const 12) "\10\0e\00\00")
(data (i32.const 16) "is not debug version.\00")
(data (i32.const 80) "invalid symbol name\00")
(data (i32.const 112) "pool_bonus:\00")
(data (i32.const 128) "|\00")
(data (i32.const 144) "attempt to subtract asset with different symbol\00")
(data (i32.const 192) "subtraction underflow\00")
(data (i32.const 224) "subtraction overflow\00")
(data (i32.const 256) "i:\00")
(data (i32.const 272) ";\00")
(data (i32.const 288) "qua:\00")
(data (i32.const 304) "attempt to add asset with different symbol\00")
(data (i32.const 352) "addition underflow\00")
(data (i32.const 384) "addition overflow\00")
(data (i32.const 416) "active\00")
(data (i32.const 432) "goldplayergp\00")
(data (i32.const 448) "issue\00")
(data (i32.const 464) "bonus for play\00")
(data (i32.const 480) "bonus for invite\00")
(data (i32.const 512) "divide by zero\00")
(data (i32.const 528) "signed division overflow\00")
(data (i32.const 560) "channel_bonus:\00")
(data (i32.const 576) "surplus:\00")
(data (i32.const 592) "playerInvitEos:\00")
(data (i32.const 608) "eosio.token\00")
(data (i32.const 624) "transfer\00")
(data (i32.const 640) "golddevloper\00")
(data (i32.const 656) "bonus for team\00")
(data (i32.const 672) "plat bonus\00")
(data (i32.const 688) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 752) "write\00")
(data (i32.const 768) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 832) "player need register for increase_invite.\00")
(data (i32.const 880) "cannot pass end iterator to modify\00")
(data (i32.const 928) "object passed to modify is not in multi_index\00")
(data (i32.const 976) "cannot modify objects in table of another contract\00")
(data (i32.const 1040) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1104) "error reading iterator\00")
(data (i32.const 1136) "read\00")
(data (i32.const 1152) "get\00")
(data (i32.const 1168) "cannot create objects in table of another contract\00")
(data (i32.const 1232) "in:\00")
(data (i32.const 1248) "out:\00")
(data (i32.const 1264) "over max amount.\00")
(data (i32.const 1296) "unsupported select.\00")
(data (i32.const 1328) ".\00")
(data (i32.const 1344) " \00")
(data (i32.const 1360) ",\00")
(data (i32.const 1376) "res.capital:\00")
(data (i32.const 1392) "parseMemo end\00")
(data (i32.const 1408) "over max amount..\00")
(data (i32.const 1440) "channelId:\00")
(data (i32.const 1456) "player need register for get_player_iter..\00")
(data (i32.const 1504) "player need register for get_channelId..\00")
(data (i32.const 1552) "player need register for get_referral..\00")
(data (i32.const 1600) "cleanall begin\00")
(data (i32.const 1616) "cannot pass end iterator to erase\00")
(data (i32.const 1664) "cannot increment end iterator\00")
(data (i32.const 1696) "object passed to erase is not in multi_index\00")
(data (i32.const 1744) "cannot erase objects in table of another contract\00")
(data (i32.const 1808) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1872) "pool is null.\00")
(data (i32.const 1888) "do not satisfy declared authorizations\00")
(data (i32.const 1936) "bonus\00")
(data (i32.const 1952) "owner have not create.\00")
(data (i32.const 1984) "must active status.\00")
(data (i32.const 2016) "fund is null.\00")
(data (i32.const 2032) "can not found pool_eos_line rule\00")
(data (i32.const 2080) "wait pool\'s eos pass muster.\00")
(data (i32.const 2112) "wait pool\'s pledge pass muster.\00")
(data (i32.const 2144) "curr_pool\00")
(data (i32.const 2160) "index over scope.\00")
(data (i32.const 2192) "can not found vt_dividend_num rule\00")
(data (i32.const 2240) "count:\00")
(data (i32.const 2256) "s:\00")
(data (i32.const 2272) "over pool\'s eos.|\00")
(data (i32.const 2304) "player need register for increase_dividend.\00")
(data (i32.const 2352) "dividend\00")
(data (i32.const 2368) "||\00")
(data (i32.const 2384) "need init pool.\00")
(data (i32.const 2400) "pool_eos overdrawn balance..\00")
(data (i32.const 2432) "pledge overdrawn balance..\00")
(data (i32.const 2464) "the batch had been finished.\00")
(data (i32.const 2496) "last batch hasn\'t been finished.\00")
(data (i32.const 2544) "is not system contract..\00")
(data (i32.const 2576) "ref need regist.\00")
(data (i32.const 2608) "reg must new player.\00")
(data (i32.const 2640) "symbol error..\00")
(data (i32.const 2656) "quantity must a positive amount.\00")
(data (i32.const 2704) "undelegatebw\00")
(data (i32.const 2720) "player need register for undelegatebw.\00")
(data (i32.const 2768) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2832) "must purchase a positive amount.\00")
(data (i32.const 2880) "issue4game\00")
(data (i32.const 2896) "issue4game begin.\00")
(data (i32.const 2928) "is not system contract.\00")
(data (i32.const 2960) "end on..\00")
(data (i32.const 2976) "symbol error.\00")
(data (i32.const 2992) "normal transfer.\00")
(data (i32.const 3024) "delegatebw\00")
(data (i32.const 3040) "delegatebw begin.\00")
(data (i32.const 3072) "player need register for order_push.\00")
(data (i32.const 3120) "channel have not create for erase_channel.\00")
(data (i32.const 3168) "channel fund must be null\00")
(data (i32.const 3200) "channel must in disabled status\00")
(data (i32.const 3232) "erase channel must not be system channel\00")
(data (i32.const 3280) "channel have not exist.\00")
(data (i32.const 3312) "register player over maximum.\00")
(data (i32.const 3344) "channel have not create for check_channel_id.\00")
(data (i32.const 3392) "channel_id and channel mismatch.\00")
(data (i32.const 3440) "channel have not create for upgrade.\00")
(data (i32.const 3488) "channel had max level.\00")
(data (i32.const 3520) "same owner.\00")
(data (i32.const 3536) "channel have not create for change_channel_owner.\00")
(data (i32.const 3600) "channel must in disabled status.\00")
(data (i32.const 3648) "channel have not create for change_channel_status.\00")
(data (i32.const 3712) "level not define.\00")
(data (i32.const 3744) "variable\00")
(data (i32.const 3760) "gcontract\00")
(data (i32.const 12176) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$6 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$7 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$14 (param i32)))
(import "env" "db_store_i64" (func $fimport$15 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$16 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$17 (param i32 i32)))
(import "env" "has_auth" (func $fimport$18 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$21 (param i64)))
(import "env" "prints" (func $fimport$22 (param i32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "printui" (func $fimport$24 (param i64)))
(import "env" "read_action_data" (func $fimport$25 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$26 (param i64)))
(import "env" "require_auth2" (func $fimport$27 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$28 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$29 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z12assert_debugv" (func $5))
(export "_Z18current_time_pointv" (func $6))
(export "_Z22current_time_point_secv" (func $7))
(export "_Z16current_time_addm" (func $8))
(export "_Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_" (func $9))
(export "_ZN9bonusplat11issue_bonusERKNS_5shareE" (func $11))
(export "_ZN9bonusplat8caltokenERKN5eosio5assetE" (func $14))
(export "_ZN9bonusplat9parseMemoENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $70))
(export "_ZN9bonusplat8cleanallEv" (func $79))
(export "_ZN9bonusplat12chanbonuspayERKy" (func $85))
(export "_ZN9bonusplat8dividendEy" (func $89))
(export "_ZN9bonusplat8referralEyyy" (func $112))
(export "_ZN9bonusplat12undelegatebwEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $115))
(export "_ZN9bonusplat2onERKN5eosio8currency8transferEy" (func $121))
(export "_ZN9bonusplat10delegatebwERKN5eosio8currency8transferEy" (func $122))
(export "_ZN9bonusplat5applyEyy" (func $126))
(export "apply" (func $188))
(export "malloc" (func $191))
(export "free" (func $194))
(export "atoll" (func $203))
(export "memcmp" (func $204))
(export "strlen" (func $205))
(export "memchr" (func $206))
(table $0 14 14 anyfunc)
(elem (i32.const 0) $207 $138 $112 $79 $141 $89 $144 $140 $136 $134 $85 $142 $115 $132)



void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*(($4 = CALL $195([24])) + [8]) = $1
	*($4) = *(*(*($3)))
	CALL eosio_assert([1], [752])
	CALL memcpy(($8 + [16]), $4, [8])
	$5 = *($4)
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)7073251608721096704, $2, $5, ($8 + [16]), [8])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [8]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [12])
	*($8 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $114(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $196($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

int_64 .FUNC _Z18current_time_pointv ()
{
	int_64 $0
	if ( (*([0] + [38]) == 0) ){ goto $label$1 }
	return *([0] + [40])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $0
	return $0
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $177($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1136])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [1136])
	CALL memcpy(($7 + [8]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $195(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $200($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $196($6)
	
.LABEL $label$8
	(unreachable)
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $195(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $200($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $196($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	CALL require_auth(*($0 + [40]))
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $172($0, [9999])
	
.LABEL $label$1
	$2 = *($1)
	*($12 + [24]) = $2
	if ( ((int_32)$2 == (int_32)*($1 + [4])) ){ goto $label$2 }
	$6 = ($0 + [24])
	$7 = ($0 + [28])
	$8 = ($0 + [8])
	$9 = ($0 + [40])
	$10 = ($1 + [4])
	
.LOOP $label$3:
	$3 = *($2)
	$4 = *($6)
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$4 }
	$2 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$5:
	if ( ((int_64)*(*($2)) == (int_64)$3) ){ goto $label$4 }
	$11 = $2
	$1 = ($2 + [-24])
	$2 = $1
	if ( ((int_32)($1 + $5) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$10 }
	$2 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [768])
	$3 = *($9)
	if ( $2 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = CALL db_find_i64(*($0), *($8), (int_64)7073251608721096704, $3)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL $113($0, $2)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [768])
	$3 = *($9)
	
.LABEL $label$9
	*($12 + [8]) = ($12 + [24])
	CALL eosio_assert([1], [880])
	CALL $173($0, $2, $3, ($12 + [8]))
	goto $label$6 
	
.LABEL $label$8
	$3 = *($9)
	
.LABEL $label$7
	*($12 + [16]) = ($12 + [24])
	CALL $174(($12 + [8]), $0, $3, ($12 + [16]))
	
.LABEL $label$6
	$2 = (*($12 + [24]) + [8])
	*($12 + [24]) = $2
	if ( ((int_32)$2 != (int_32)*($10)) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($12 + [32])
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL require_auth(*($0 + [40]))
	$4 = [0]
	$3 = [0]
	$5 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)7073251608721096704, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $113($0, $5)
	
.LABEL $label$1
	
.LOOP $label$3:
	if ( ($3 == 0) ){ goto $label$2 }
	CALL eosio_assert([1], [1616])
	CALL eosio_assert([1], [1664])
	$5 = [0]
	$2 = CALL db_next_i64(*($3 + [12]), ($6 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $113($0, $2)
	
.LABEL $label$4
	CALL $175($0, $3)
	$3 = $5
	$4 = ($4 + [1])
	if ( ((int_32)($4 & [65535]) != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC _Z22current_time_point_secv ()
{
	int_64 $0
	int_32 $1
	if ( (*([0] + [48]) == 0) ){ goto $label$1 }
	return *([0] + [52])
	
.LABEL $label$1
	if ( (*([0] + [38]) == 0) ){ goto $label$3 }
	$0 = *([0] + [40])
	goto $label$2 
	
.LABEL $label$3
	$0 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $0
	
.LABEL $label$2
	*([0] + [48]) = [1]
	$1 = (CASTING uint_32)(uint_64 ((int_64)$0 / (int_64)1000000))
	*([0] + [52]) = $1
	return $1
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	CALL require_auth(*($0 + [40]))
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $179($0, [9999])
	
.LABEL $label$1
	$2 = *($1)
	*($12 + [24]) = $2
	if ( ((int_32)$2 == (int_32)*($1 + [4])) ){ goto $label$2 }
	$6 = ($0 + [24])
	$7 = ($0 + [28])
	$8 = ($0 + [8])
	$9 = ($0 + [40])
	$10 = ($1 + [4])
	
.LOOP $label$3:
	$3 = *($2)
	$4 = *($6)
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$4 }
	$2 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$5:
	if ( ((int_64)*(*($2)) == (int_64)$3) ){ goto $label$4 }
	$11 = $2
	$1 = ($2 + [-24])
	$2 = $1
	if ( ((int_32)($1 + $5) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$10 }
	$2 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)$0), [768])
	$3 = *($9)
	if ( $2 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = CALL db_find_i64(*($0), *($8), (int_64)-4697967887266086912, $3)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL $90($0, $2)
	CALL eosio_assert(((int_32)*($2 + [12]) == (int_32)$0), [768])
	$3 = *($9)
	
.LABEL $label$9
	*($12 + [8]) = ($12 + [24])
	CALL eosio_assert([1], [880])
	CALL $180($0, $2, $3, ($12 + [8]))
	goto $label$6 
	
.LABEL $label$8
	$3 = *($9)
	
.LABEL $label$7
	*($12 + [16]) = ($12 + [24])
	CALL $181(($12 + [8]), $0, $3, ($12 + [16]))
	
.LABEL $label$6
	$2 = (*($12 + [24]) + [16])
	*($12 + [24]) = $2
	if ( ((int_32)$2 != (int_32)*($10)) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($12 + [32])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _Z12assert_debugv ()
{
	CALL eosio_assert([0], [16])
}

void .FUNC $127 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [688])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [80])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $187($6, $0)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC $189 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [520]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [524])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $196($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [520]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$1
	$1 = *(($0 + [480]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [484])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $196($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [480]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$6
	$1 = *(($0 + [440]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [444])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $196($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [440]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$11
	CALL $190(($0 + [184]))
	$1 = *(($0 + [168]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [172])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $196($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [168]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$16
	$1 = *(($0 + [104]))
	if ( ($1 == 0) ){ goto $label$21 }
	$3 = ($0 + [108])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $196($2)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($0 + [104]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $1
	
.LABEL $label$22
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$21
	$1 = *(($0 + [40]))
	if ( ($1 == 0) ){ goto $label$26 }
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$28 }
	
.LOOP $label$29:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $196($2)
	
.LABEL $label$30
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$29 }
	$4 = *(($0 + [40]))
	goto $label$27 
	
.LABEL $label$28
	$4 = $1
	
.LABEL $label$27
	*($3) = $1
	CALL $196($4)
	
.LABEL $label$26
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [544])
	*([0] + [4]) = $9
	*($9 + [16]) = $0
	*($9 + [8]) = $0
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [3744]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*(($9 + [32])) = $0
	*(($9 + [24])) = $0
	*(($9 + [40])) = (int_64)-1
	$6 = (int_64)0
	*(($9 + [48])) = (int_64)0
	*(($9 + [56])) = [0]
	*(($9 + [64])) = $0
	*(($9 + [72])) = $7
	*($9 + [80]) = $0
	$5 = (int_64)59
	$4 = [3760]
	$7 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$12 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$7 }
	*(($9 + [96])) = $0
	*(($9 + [88])) = $0
	*(($9 + [104])) = (int_64)-1
	*(($9 + [112])) = (int_64)0
	*(($9 + [120])) = [0]
	*(($9 + [128])) = $0
	*(($9 + [136])) = $7
	*($9 + [144]) = $0
	*(($9 + [152])) = $0
	*(($9 + [160])) = $0
	*(($9 + [168])) = (int_64)-1
	*(($9 + [176])) = [0]
	*(($9 + [180])) = [0]
	*(($9 + [184])) = [0]
	*($9 + [192]) = $0
	*(($9 + [200])) = $0
	*(($9 + [208])) = $0
	*(($9 + [216])) = (int_64)-1
	*(($9 + [224])) = [0]
	*(($9 + [228])) = [0]
	*(($9 + [232])) = [0]
	*(($9 + [240])) = $0
	*(($9 + [248])) = $0
	*(($9 + [256])) = (int_64)-1
	*(($9 + [264])) = [0]
	*(($9 + [268])) = [0]
	*(($9 + [272])) = [0]
	*(($9 + [276])) = [0]
	*(($9 + [280])) = $0
	*(($9 + [288])) = $0
	*(($9 + [296])) = $0
	*(($9 + [304])) = (int_64)-1
	*(($9 + [312])) = [0]
	*(($9 + [316])) = [0]
	*(($9 + [320])) = [0]
	*(($9 + [328])) = $0
	*(($9 + [336])) = $0
	*(($9 + [344])) = $0
	*(($9 + [352])) = (int_64)-1
	*(($9 + [360])) = [0]
	*(($9 + [364])) = [0]
	*(($9 + [368])) = [0]
	*(($9 + [376])) = $0
	*(($9 + [384])) = $0
	*(($9 + [392])) = (int_64)-1
	*(($9 + [400])) = [0]
	*(($9 + [404])) = [0]
	*(($9 + [408])) = [0]
	*(($9 + [412])) = [0]
	*($9 + [416]) = $0
	*(($9 + [424])) = $0
	*(($9 + [432])) = $0
	*(($9 + [440])) = (int_64)-1
	*(($9 + [448])) = [0]
	*(($9 + [452])) = [0]
	*(($9 + [456])) = [0]
	*(($9 + [464])) = $0
	*(($9 + [472])) = $0
	*(($9 + [480])) = (int_64)-1
	*(($9 + [488])) = [0]
	*(($9 + [492])) = [0]
	*(($9 + [496])) = [0]
	*(($9 + [500])) = [0]
	*($9 + [504]) = $0
	*(($9 + [512])) = $0
	*(($9 + [520])) = (int_64)-1
	*(($9 + [528])) = [0]
	*(($9 + [532])) = [0]
	*(($9 + [536])) = [0]
	CALL _ZN9bonusplat5applyEyy(($9 + [8]), $1, $2)
	CALL $189(($9 + [8]))
	*([0] + [4]) = ($9 + [544])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $195([120])
	CALL $36($3)
	*($3 + [108]) = $1
	CALL $50(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [112])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $38(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [96])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [100])) = $3
	CALL $196($3)
	
.LABEL $label$4
	CALL $196($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1104])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $195([104])
	$4 = CALL $46($6)
	*($6 + [88]) = $0
	CALL $47(($8 + [32]), $4)
	*($6 + [96]) = [-1]
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $48(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [752])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [752])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $42(*($1), ($0 + [32]))
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)((int_32)($7 - $6) / (int_32)[24]) >= (uint_32)$1) ){ goto $label$5 }
	$8 = *($0)
	$2 = ((int_32)($6 - $8) / (int_32)[24])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$3 }
	$6 = [178956970]
	$7 = ((int_32)($7 - $8) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$6 }
	$6 = ($7 << [1])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$7 = CALL $195(((int_32)$6 * (int_32)[24]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6) = [0]
	*(($6 = ($6 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [688])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	
.LABEL $label$8
	CALL eosio_assert($7, [80])
	$6 = (*($8) + [24])
	*($8) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $200($0)
	
.LABEL $label$2
	$3 = ($7 + ((int_32)$6 * (int_32)[24]))
	$2 = ($7 + ((int_32)$2 * (int_32)[24]))
	$7 = $2
	
.LOOP $label$13:
	*($7) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7) = [0]
	*(($6 = ($7 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [688])
	$5 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$8 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$8 = [0]
	
.LABEL $label$14
	CALL eosio_assert($8, [80])
	$7 = ($7 + [24])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$6 = *($0)
	$4 = ($0 + [4])
	$8 = (*($4) - $6)
	$1 = ($2 + ((int_32)((int_32)$8 / (int_32)[-24]) * (int_32)[24]))
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$19 }
	CALL memcpy($1, $6, $8)
	$6 = *($0)
	
.LABEL $label$19
	*($0) = $1
	*($4) = $7
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $196($6)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1136])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1136])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [32]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $46 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [40]) = (int_64)0
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	return $0
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [752])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($7 + [104]) = *($1 + [8])
	$4 = *($1)
	$5 = *($3)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [48]))), [304])
	$6 = ((int_64)*($1 + [40]) + (int_64)*($5))
	*($1 + [40]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [384])
	$5 = *($3)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [64]))), [304])
	$6 = ((int_64)*($1 + [56]) + (int_64)*($5))
	*($1 + [56]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [384])
	*($1 + [72]) = ((int_64)*($1 + [72]) + (int_64)*(*($3 + [4])))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	*($7 + [96]) = ($7 + [81])
	*($7 + [92]) = $7
	*($7 + [88]) = $7
	CALL $45(($7 + [88]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $7, [81])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [120]) = *(($1 + [8]))
	if ( (CALL memcmp(($7 + [104]), ($7 + [120]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [96])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($7 + [112]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($7 + [120]))
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [128])
}

void .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1) = ((int_64)*($1) + (int_64)1)
	CALL eosio_assert([1], [1040])
	CALL eosio_assert([1], [752])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $166 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*(($4 = CALL $195([24])) + [8]) = $1
	*($4) = (int_64)0
	CALL eosio_assert([1], [752])
	CALL memcpy(($8 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)4849595776831586304, $2, (int_64)0, ($8 + [16]), [8])
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)1
	
.LABEL $label$1
	*($8 + [8]) = $4
	*($8 + [16]) = (int_64)0
	$5 = *($4 + [12])
	*($8 + [4]) = $5
	$7 = ($1 + [28])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = $5
	*($8 + [8]) = [0]
	*($6) = $4
	*($7) = ($6 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $168(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $196($1)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1104])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $195([24])) + [8]) = $0
	*($5) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1136])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)0
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)0
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $168(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_64 .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$1 = ($0 + [8])
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4849595776831586304, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $165($1, $2)
	goto $label$1 
	
.LABEL $label$2
	CALL $166(($4 + [24]), $1, *($0), ($4 + [16]))
	$0 = *($4 + [28])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [880])
	CALL $167($1, $0, (int_64)0, ($4 + [8]))
	$3 = *($0)
	*([0] + [4]) = ($4 + [32])
	return $3
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	CALL eosio_assert([1], [688])
	$4 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	*($1) = *(*($0))
	*($1 + [8]) = CALL $164($2)
	*($1 + [24]) = *(*($0 + [8]))
	*($1 + [16]) = *(*($0 + [12]))
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = (int_64)1397703940
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = (int_64)1397703940
	*($1 + [32]) = [1]
	*($1 + [72]) = (int_64)0
	*($1 + [80]) = (int_64)0
}

int_32 .FUNC $162 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	$4 = CALL $46($0)
	*($0 + [88]) = $1
	$1 = *($2)
	CALL $163(*($2 + [4]), $4)
	*($7 + [96]) = ($7 + [81])
	*($7 + [92]) = $7
	*($7 + [88]) = $7
	CALL $45(($7 + [88]), $4)
	$3 = *($0)
	*($0 + [92]) = CALL db_store_i64(*($1 + [8]), (int_64)4849595776591986688, *(*($2 + [8])), $3, $7, [81])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($1 + [8]))
	$5 = *(*(($2 + [8])))
	$6 = *($0)
	*($7 + [104]) = *($0 + [8])
	*($0 + [96]) = CALL db_idx64_store($3, (int_64)4849595776591986688, $5, $6, ($7 + [104]))
	*([0] + [4]) = ($7 + [112])
	return $0
}

void .FUNC $161 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $195([104])
	CALL $162($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [92])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $48(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $196($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$7 = (uint_64)($3 <= (int_64)3)
	$3 = ((int_64)*($2) + (int_64)-1)
	*($9 + [24]) = ( ((int_64)((int_64)$3 * (int_64)-4000) + (int_64)9500) ? (int_64)0 : $7 )
	CALL eosio_assert($7, [3712])
	$3 = *($1)
	$4 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [768])
	if ( $6 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $43($7, $6) + [88]) == (int_32)$7), [768])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0)
	*($9 + [4]) = $0
	*($9) = $1
	*($9 + [12]) = $2
	*($9 + [8]) = ($9 + [24])
	CALL $161(($9 + [16]), $7, $3, $9)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $170($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [1136])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1808])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $196($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $196($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1104])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $195([128])
	$4 = CALL $60($5)
	*($5 + [112]) = $0
	CALL $64(($7 + [32]), $4)
	*($5 + [116]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)0
	$6 = *($5 + [116])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)0
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $63(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	$4 = CALL $195([128])
	$5 = CALL $60($4)
	*($4 + [112]) = $1
	CALL $61($3, $5)
	*($7 + [136]) = (($7 + [16]) + [112])
	*($7 + [132]) = ($7 + [16])
	*($7 + [128]) = ($7 + [16])
	CALL $62(($7 + [128]), $5)
	*($4 + [116]) = CALL db_store_i64(*($1 + [8]), (int_64)-5969222238916837376, $2, (int_64)0, ($7 + [16]), [112])
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)1
	
.LABEL $label$1
	*($7 + [128]) = $4
	*($7 + [16]) = (int_64)0
	$3 = *($4 + [116])
	*($7 + [12]) = $3
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = $3
	*($7 + [128]) = [0]
	*($5) = $4
	*($6) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $63(($1 + [24]), ($7 + [128]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [128])
	*($7 + [128]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $196($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [144])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [32])
	$11 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	CALL $51(*($0 + [4]), $1)
	$4 = *($1 + [96])
	$3 = *(($1 + [100]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	$8 = [96]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $8) + [20])
	
.LABEL $label$2
	if ( ($8 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11 + [12]) = $10
	*($11 + [8]) = $10
	*($11 + [16]) = ($10 + $8)
	CALL $34(($11 + [8]), $1)
	$9 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-6030912142679474176, *(*($0 + [8])), $9, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$9 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($11 + [24]) = *($1 + [8])
	*($1 + [116]) = CALL db_idx64_store($9, (int_64)-6030912142679474176, $6, $7, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	CALL eosio_assert([1], [688])
	$4 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	CALL eosio_assert([1], [688])
	$3 = (int_64)20551
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [80])
	*($1) = *(*($0))
	$3 = CALL $52($2)
	*($1 + [16]) = (int_64)1
	*($1 + [8]) = $3
	$3 = *(*($0 + [8]))
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = $3
	*(($1 + [40])) = (int_64)5261060
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = (int_64)1397703940
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)5261060
}

int_64 .FUNC $52 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$1 = ($0 + [8])
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-6030912135012286464, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $53($1, $2)
	goto $label$1 
	
.LABEL $label$2
	CALL $54(($4 + [24]), $1, *($0), ($4 + [16]))
	$0 = *($4 + [28])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [880])
	CALL $55($1, $0, (int_64)0, ($4 + [8]))
	$3 = *($0)
	*([0] + [4]) = ($4 + [32])
	return $3
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1104])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $195([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1136])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)0
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)0
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $56(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*(($4 = CALL $195([24])) + [8]) = $1
	*($4) = (int_64)0
	CALL eosio_assert([1], [752])
	CALL memcpy(($8 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-6030912135012286464, $2, (int_64)0, ($8 + [16]), [8])
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)1
	
.LABEL $label$1
	*($8 + [8]) = $4
	*($8 + [16]) = (int_64)0
	$5 = *($4 + [12])
	*($8 + [4]) = $5
	$7 = ($1 + [28])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = $5
	*($8 + [8]) = [0]
	*($6) = $4
	*($7) = ($6 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $56(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $196($1)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1) = ((int_64)*($1) + (int_64)1)
	CALL eosio_assert([1], [1040])
	CALL eosio_assert([1], [752])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = ($1 + [8])
	$4 = [0]
	$5 = ($1 + [16])
	$3 = CALL db_lowerbound_i64(*($1 + [8]), *($5), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $58($7, $3)
	
.LABEL $label$1
	$5 = CALL db_lowerbound_i64(*($7), *($5), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	CALL $58($7, $5)
	goto $label$2 
	
.LABEL $label$3
	CALL $59(($8 + [8]), $7, *($1), $8)
	$4 = *($8 + [12])
	
.LABEL $label$2
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$6 = (int_64)5462355
	$1 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$4
	CALL eosio_assert($7, [80])
	$6 = ((int_64)*($2) + (int_64)-1)
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$11 }
	goto $label$16 
	
.LABEL $label$16
	*($0) = *($4)
	*(($0 + [8])) = *(($4 + [8]))
	goto $label$9 
	
.LABEL $label$15
	*($0) = *($4 + [16])
	*(($0 + [8])) = *(($4 + [24]))
	goto $label$9 
	
.LABEL $label$14
	*($0) = *($4 + [32])
	*(($0 + [8])) = *(($4 + [40]))
	goto $label$9 
	
.LABEL $label$13
	*($0) = *($4 + [48])
	*(($0 + [8])) = *(($4 + [56]))
	goto $label$9 
	
.LABEL $label$12
	*($0) = *($4 + [64])
	*(($0 + [8])) = *(($4 + [72]))
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [1296])
	goto $label$9 
	
.LABEL $label$10
	*($0) = *($4 + [96])
	*(($0 + [8])) = *(($4 + [104]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [16])
	(CASTING uint_32)(uint_64 $6)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	$4 = *($1)
	$5 = *(*(*($3)))
	*($1) = $5
	CALL eosio_assert(((int_64)$4 == (int_64)$5), [1040])
	CALL eosio_assert([1], [752])
	CALL memcpy($6, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $6, [8])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	CALL eosio_assert([1], [688])
	$4 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	CALL eosio_assert([1], [688])
	$3 = (int_64)20551
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [80])
	*($1) = *(*($0))
	*($1 + [8]) = CALL $52($2)
	*($1 + [16]) = *(*($0 + [8]))
	$3 = *(*($0 + [12]))
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = $3
	*(($1 + [40])) = (int_64)5261060
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = (int_64)1397703940
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)5261060
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)1)
	*($6 + [104]) = *($1 + [8])
	$4 = *($1)
	CALL eosio_assert([1], [1040])
	*($6 + [96]) = ($6 + [81])
	*($6 + [92]) = $6
	*($6 + [88]) = $6
	CALL $45(($6 + [88]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $6, [81])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [120]) = *(($1 + [8]))
	if ( (CALL memcmp(($6 + [104]), ($6 + [120]), [8]) == 0) ){ goto $label$2 }
	$5 = ($1 + [96])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($6 + [112]), $4)
	*($5) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($6 + [120]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $195([120])
	CALL $36($3)
	*($3 + [108]) = $1
	CALL $151(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [112])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $38(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [96])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [100])) = $3
	CALL $196($3)
	
.LABEL $label$4
	CALL $196($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [32])
	$11 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	CALL $152(*($0 + [4]), $1)
	$4 = *($1 + [96])
	$3 = *(($1 + [100]))
	$5 = ($3 - $4)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	$8 = [96]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$8 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $8) + [20])
	
.LABEL $label$2
	if ( ($8 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11 + [12]) = $10
	*($11 + [8]) = $10
	*($11 + [16]) = ($10 + $8)
	CALL $34(($11 + [8]), $1)
	$9 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-6030912142679474176, *(*($0 + [8])), $9, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$9 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($11 + [24]) = *($1 + [8])
	*($1 + [116]) = CALL db_idx64_store($9, (int_64)-6030912142679474176, $6, $7, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$3 = *($1)
	$4 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [768])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $3)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $43($7, $6)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$7), [768])
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	
.LABEL $label$3
	*($9 + [20]) = $6
	*($9 + [16]) = $7
	CALL eosio_assert(((int_64)*($1) != (int_64)*($2)), [3520])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3536])
	CALL eosio_assert(((int_32)*($6 + [32]) ^ (int_32)[1]), [3600])
	$3 = *($0)
	*($9 + [24]) = $2
	*($9 + [28]) = ($9 + [16])
	CALL $157(($9 + [8]), $7, $3, ($9 + [24]))
	$3 = *($9 + [16])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$8 = ((int_32)$6) != (int_32)[0]
	CALL eosio_assert($8), [1616])
	CALL eosio_assert($8, [1664])
	$8 = CALL db_next_i64(*($6 + [92]), ($9 + [24]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	CALL $43((CASTING uint_32)(uint_64 $3), $8)
	
.LABEL $label$6
	CALL $146($7, $6)
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $157 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $195([104])
	CALL $46($3)
	*($3 + [88]) = $1
	CALL $158(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [92])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $48(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $196($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$2 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $43($5, $6)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	
.LABEL $label$3
	$6 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($6, [3440])
	CALL eosio_assert(((uint_64)*($1 + [16]) > (uint_64)(int_64)1), [3488])
	$2 = *($1 + [16])
	*($7 + [24]) = ((int_64)$2 + (int_64)-1)
	$2 = ((int_64)$2 + (int_64)-2)
	*($7 + [16]) = ( ((int_64)((int_64)$2 * (int_64)-4000) + (int_64)9500) ? (int_64)0 : (uint_64)($2 <= (int_64)3) )
	*($7 + [12]) = ($7 + [16])
	*($7 + [8]) = ($7 + [24])
	CALL eosio_assert($6, [880])
	CALL $155($5, $1, (int_64)0, ($7 + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [128])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [16]) = *(*($3))
	*($5 + [104]) = *($1 + [8])
	$4 = *($1)
	*($1 + [24]) = *(*($3 + [4]))
	CALL eosio_assert([1], [1040])
	*($5 + [96]) = ($5 + [81])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	CALL $45(($5 + [88]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $5, [81])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [120]) = *(($1 + [8]))
	if ( (CALL memcmp(($5 + [104]), ($5 + [120]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [96])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($5 + [112]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($5 + [120]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [128])
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$2 = *($0)
	*($1 + [8]) = *(*(*($4 + [4]) + [4]) + [8])
	*($1 + [24]) = *(*(*($4 + [4]) + [4]) + [24])
	*($1 + [32]) = [1]
	$5 = *(*($4 + [4]) + [4])
	*($1 + [40]) = *($5 + [40])
	*(($1 + [48])) = *(($5 + [48]))
	$5 = *(*($4 + [4]) + [4])
	*($1 + [56]) = *($5 + [56])
	*(($1 + [64])) = *(($5 + [64]))
	*($1 + [72]) = *(*(*($4 + [4]) + [4]) + [72])
	*($8 + [96]) = ($8 + [81])
	*($8 + [92]) = $8
	*($8 + [88]) = $8
	CALL $45(($8 + [88]), $1)
	$3 = *($1)
	*($1 + [92]) = CALL db_store_i64(*($2 + [8]), (int_64)4849595776591986688, *(*($0 + [8])), $3, $8, [81])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($8 + [104]) = *(($1 + [8]))
	*($1 + [96]) = CALL db_idx64_store($3, (int_64)4849595776591986688, $6, $7, ($8 + [104]))
	*([0] + [4]) = ($8 + [112])
}

void .FUNC $159 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [128])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [32]) = *(*($3))
	*($5 + [104]) = *($1 + [8])
	$4 = *($1)
	CALL eosio_assert([1], [1040])
	*($5 + [96]) = ($5 + [81])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	CALL $45(($5 + [88]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $5, [81])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($5 + [120]) = *(($1 + [8]))
	if ( (CALL memcmp(($5 + [104]), ($5 + [120]), [8]) == 0) ){ goto $label$2 }
	$3 = ($1 + [96])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($5 + [112]), $4)
	*($3) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($5 + [120]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [128])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL require_auth(*($0 + [40]))
	$4 = [0]
	$3 = [0]
	$5 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-4697967887266086912, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $90($0, $5)
	
.LABEL $label$1
	
.LOOP $label$3:
	if ( ($3 == 0) ){ goto $label$2 }
	CALL eosio_assert([1], [1616])
	CALL eosio_assert([1], [1664])
	$5 = [0]
	$2 = CALL db_next_i64(*($3 + [16]), ($6 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $90($0, $2)
	
.LABEL $label$4
	CALL $183($0, $3)
	$3 = $5
	$4 = ($4 + [1])
	if ( ((int_32)($4 & [65535]) != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1808])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $196($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $196($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [16]))
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([1360])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	CALL eosio_assert([1], [688])
	$3 = [0]
	$2 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	CALL eosio_assert([1], [688])
	$2 = (int_64)20551
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [80])
	*(($1 + [56])) = (int_64)5261060
	*($1 + [48]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = (int_64)1397703940
	*($1) = (int_64)0
	*($1 + [8]) = (int_64)1397703940
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = (int_64)5261060
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [96]) = (int_64)0
	*(($1 + [104])) = (int_64)5261060
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)1397703940
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	$4 = CALL $195([128])
	$5 = CALL $60($4)
	*($4 + [112]) = $1
	CALL $68($3, $5)
	*($7 + [136]) = (($7 + [16]) + [112])
	*($7 + [132]) = ($7 + [16])
	*($7 + [128]) = ($7 + [16])
	CALL $62(($7 + [128]), $5)
	*($4 + [116]) = CALL db_store_i64(*($1 + [8]), (int_64)-5969222238916837376, $2, (int_64)0, ($7 + [16]), [112])
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)1
	
.LABEL $label$1
	*($7 + [128]) = $4
	*($7 + [16]) = (int_64)0
	$3 = *($4 + [116])
	*($7 + [12]) = $3
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = $3
	*($7 + [128]) = [0]
	*($5) = $4
	*($6) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $63(($1 + [24]), ($7 + [128]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [128])
	*($7 + [128]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $196($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [144])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1136])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_64 $2
	$2 = ((int_64)*(*($0)) + (int_64)-1)
	if ( ((uint_64)$2 > (uint_64)(int_64)6) ){ goto $label$3 }
	goto $label$7 
	
.LABEL $label$7
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*($1 + [8])), [304])
	$2 = ((int_64)*($1) + (int_64)*($0))
	*($1) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [384])
	return 
	
.LABEL $label$6
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [24]))), [304])
	$2 = ((int_64)*($1 + [16]) + (int_64)*($0))
	*($1 + [16]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [384])
	return 
	
.LABEL $label$5
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [40]))), [304])
	$2 = ((int_64)*($1 + [32]) + (int_64)*($0))
	*($1 + [32]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [384])
	return 
	
.LABEL $label$4
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [56]))), [304])
	$2 = ((int_64)*($1 + [48]) + (int_64)*($0))
	*($1 + [48]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [384])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [1296])
	return 
	
.LABEL $label$2
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [88]))), [304])
	$2 = ((int_64)*($1 + [80]) + (int_64)*($0))
	*($1 + [80]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [80]) < (int_64)4611686018427387904), [384])
	return 
	
.LABEL $label$1
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [104]))), [304])
	$2 = ((int_64)*($1 + [96]) + (int_64)*($0))
	*($1 + [96]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [96]) < (int_64)4611686018427387904), [384])
	(CASTING uint_32)(uint_64 $2)
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [128])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	CALL $67($3, $1)
	CALL eosio_assert([1], [1040])
	*($4 + [120]) = ($4 + [112])
	*($4 + [116]) = $4
	*($4 + [112]) = $4
	CALL $62(($4 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [128])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	CALL eosio_assert([1], [688])
	$3 = [0]
	$2 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	CALL eosio_assert([1], [688])
	$2 = (int_64)20551
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [80])
	*(($1 + [56])) = (int_64)5261060
	*($1 + [48]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = (int_64)1397703940
	*($1) = (int_64)0
	*($1 + [8]) = (int_64)1397703940
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = (int_64)5261060
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [96]) = (int_64)0
	*(($1 + [104])) = (int_64)5261060
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)1397703940
}

int_32 .FUNC $60 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [88]))) = (int_64)1398362884
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [104]))) = (int_64)1398362884
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [80])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN9bonusplat8dividendEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	$30 = (*([0] + [4]) - [304])
	*([0] + [4]) = $30
	*($30 + [296]) = $1
	CALL require_auth(*($0))
	*($30 + [288]) = (int_64)1397703940
	*($30 + [280]) = (int_64)0
	CALL eosio_assert([1], [688])
	$24 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	
.LABEL $label$1
	CALL eosio_assert($11, [80])
	$7 = *(($0 + [40]))
	$25 = *(($0 + [44]))
	if ( ((int_32)$25 == (int_32)$7) ){ goto $label$6 }
	$24 = ($25 + [-24])
	$10 = ([0] - $7)
	
.LOOP $label$7:
	if ( ((int_64)*(*($24)) == (int_64)1) ){ goto $label$6 }
	$25 = $24
	$11 = ($24 + [-24])
	$24 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$14 = ($0 + [16])
	if ( ((int_32)$25 == (int_32)$7) ){ goto $label$9 }
	$24 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($24 + [12]) == (int_32)$14), [768])
	goto $label$8 
	
.LABEL $label$9
	$24 = [0]
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4697967887266086912, (int_64)1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$8 }
	$24 = CALL $90($14, $11)
	CALL eosio_assert(((int_32)*($24 + [12]) == (int_32)$14), [768])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$24 != (int_32)[0]), [2032])
	$28 = *($24 + [8])
	$2 = ($0 + [232])
	$24 = CALL db_lowerbound_i64(*($2), *(($0 + [240])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$24 <= (int_32)[-1]) ){ goto $label$11 }
	*($30 + [276]) = CALL $32($2, $24)
	*($30 + [272]) = $2
	$11 = ($0 + [184])
	CALL $76($11, ($30 + [272]))
	CALL eosio_assert(((int_32)*($30 + [276]) != (int_32)[0]), [1664])
	$24 = CALL db_next_i64(*(*($30 + [276]) + [112]), ($30 + [160]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$12 }
	
.LOOP $label$13:
	*($30 + [276]) = CALL $32(*($30 + [272]), $24)
	CALL $76($11, ($30 + [272]))
	CALL eosio_assert(((int_32)*($30 + [276]) != (int_32)[0]), [1664])
	$24 = CALL db_next_i64(*(*($30 + [276]) + [112]), ($30 + [160]))
	if ( ((int_32)$24 > (int_32)[-1]) ){ goto $label$13 }
	
.LABEL $label$12
	*($30 + [276]) = [0]
	goto $label$10 
	
.LABEL $label$11
	*($30 + [276]) = [0]
	*($30 + [272]) = $2
	
.LABEL $label$10
	*($30 + [160]) = (int_64)2
	$12 = ($0 + [136])
	CALL $57(($30 + [256]), $12, ($30 + [160]))
	*($30 + [248]) = (int_64)1397703940
	*($30 + [240]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($30 + [248]) >> (uint_64)(int_64)8)
	$24 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$11 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$11 = [0]
	
.LABEL $label$14
	CALL eosio_assert($11, [80])
	if ( ((int_64)*($30 + [296]) != (int_64)1) ){ goto $label$20 }
	CALL $91($0)
	*($30 + [16]) = (int_64)1
	CALL $57(($30 + [160]), $12, ($30 + [16]))
	*((($30 + [240]) + [8])) = *((($30 + [160]) + [8]))
	*($30 + [240]) = *($30 + [160])
	CALL $92($12, ($30 + [240]))
	CALL eosio_assert(((int_64)*($30 + [240]) >= (int_64)$28), [2080])
	CALL eosio_assert(((int_64)*($30 + [256]) >= (int_64)$28), [2112])
	goto $label$19 
	
.LABEL $label$20
	*($30 + [16]) = (int_64)5
	CALL $57(($30 + [160]), $12, ($30 + [16]))
	*((($30 + [240]) + [8])) = *((($30 + [160]) + [8]))
	*($30 + [240]) = *($30 + [160])
	CALL $93($0)
	
.LABEL $label$19
	*($30 + [160]) = (int_64)1
	CALL $57(($30 + [224]), $12, ($30 + [160]))
	CALL prints([2144])
	CALL printi(*($30 + [224]))
	CALL prints([128])
	$1 = CALL current_time()
	*(($30 + [188])) = [0]
	*(($30 + [192])) = [0]
	*($30 + [172]) = [0]
	*($30 + [176]) = [0]
	*($30 + [180]) = [0]
	*($30 + [184]) = [0]
	*($30 + [160]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	*($30 + [196]) = [0]
	*(($30 + [200])) = [0]
	*(($30 + [204])) = [0]
	*($30 + [208]) = [0]
	*(($30 + [212])) = [0]
	*(($30 + [216])) = [0]
	$24 = ($0 + [192])
	CALL eosio_assert(((uint_64)*($30 + [296]) <= (uint_64)*(CALL $53($24, CALL $fimport$12(*($24), *(($0 + [200])), (int_64)-6030912135012286464, (int_64)0)))), [2160])
	*($30 + [152]) = $2
	CALL $94(($30 + [16]), ($30 + [152]), ($30 + [296]))
	$24 = *($30 + [20])
	if ( ($24 == 0) ){ goto $label$23 }
	if ( ((int_64)*($30 + [296]) != (int_64)*($24 + [8])) ){ goto $label$22 }
	*($30 + [144]) = *($30 + [16])
	goto $label$21 
	
.LABEL $label$23
	*($30 + [148]) = [0]
	*($30 + [144]) = ($30 + [152])
	goto $label$21 
	
.LABEL $label$22
	*($30 + [148]) = [0]
	*($30 + [144]) = ($30 + [152])
	
.LABEL $label$21
	$7 = *(($0 + [40]))
	$25 = *(($0 + [44]))
	if ( ((int_32)$25 == (int_32)$7) ){ goto $label$24 }
	$24 = ($25 + [-24])
	$10 = ([0] - $7)
	
.LOOP $label$25:
	if ( ((int_64)*(*($24)) == (int_64)2) ){ goto $label$24 }
	$25 = $24
	$11 = ($24 + [-24])
	$24 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	if ( ((int_32)$25 == (int_32)$7) ){ goto $label$27 }
	$24 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($24 + [12]) == (int_32)$14), [768])
	goto $label$26 
	
.LABEL $label$27
	$24 = [0]
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4697967887266086912, (int_64)2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$26 }
	$24 = CALL $90($14, $11)
	CALL eosio_assert(((int_32)*($24 + [12]) == (int_32)$14), [768])
	
.LABEL $label$26
	$7 = [0]
	CALL eosio_assert(((int_32)$24 != (int_32)[0]), [2192])
	if ( (*($30 + [148]) == 0) ){ goto $label$30 }
	$6 = ($30 + [196])
	$5 = (($30 + [16]) + [32])
	$3 = ($30 | [1])
	$13 = ($24 + [8])
	$15 = ($0 + [256])
	$16 = ($0 + [260])
	$17 = ($0 + [240])
	$18 = ($0 + [232])
	$4 = (($30 + [16]) + [16])
	$19 = ($4 + [4])
	$20 = ($30 + [204])
	$21 = (($30 + [160]) + [40])
	$22 = ($30 + [116])
	$23 = ($30 + [108])
	$7 = [0]
	$8 = (int_64)0
	
.LOOP $label$31:
	if ( ((uint_64)$8 >= (uint_64)*($13)) ){ goto $label$29 }
	*(($14 = (($30 + [128]) + [8]))) = (int_64)1397703940
	*($30 + [128]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($14) >> (uint_64)(int_64)8)
	$24 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$11 = [1]
	$24 = ($24 + [1])
	if ( ((int_32)$24 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$11 = [0]
	
.LABEL $label$32
	CALL eosio_assert($11, [80])
	$1 = ((int_64)((int_64)*(*($30 + [148]) + [32]) * (int_64)*($30 + [240])) / (int_64)*($30 + [256]))
	*($30 + [128]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1264])
	CALL prints([2240])
	CALL printui($8)
	CALL prints([288])
	CALL printi(*($30 + [128]))
	CALL prints([2256])
	CALL printi(*($30 + [280]))
	$1 = *($30 + [128])
	if ( ((int_64)((int_64)*($30 + [280]) + (int_64)$1) <= (int_64)*($30 + [224])) ){ goto $label$37 }
	CALL prints([2272])
	$1 = *($30 + [224])
	$28 = *((($30 + [224]) + [8]))
	CALL eosio_assert(((int_64)*((($30 + [280]) + [8])) == (int_64)$28), [144])
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($1 - *($30 + [280]))) > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [224])
	*($14) = $28
	*($30 + [128]) = $1
	
.LABEL $label$37
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$38 }
	$1 = *(*($30 + [148]))
	$9 = *($15)
	$25 = *($16)
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$39 }
	$24 = ($25 + [-24])
	$10 = ([0] - $9)
	
.LOOP $label$40:
	if ( ((int_64)*(*($24)) == (int_64)$1) ){ goto $label$39 }
	$25 = $24
	$11 = ($24 + [-24])
	$24 = $11
	if ( ((int_32)($11 + $10) != (int_32)[-24]) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ((int_32)$25 == (int_32)$9) ){ goto $label$42 }
	$24 = *(($25 + [-24]))
	CALL eosio_assert(((int_32)*($24 + [108]) == (int_32)$2), [768])
	goto $label$41 
	
.LABEL $label$42
	$24 = [0]
	$11 = CALL db_find_i64(*($18), *($17), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$41 }
	$24 = CALL $32($2, $11)
	CALL eosio_assert(((int_32)*($24 + [108]) == (int_32)$2), [768])
	
.LABEL $label$41
	$11 = ((int_32)$24 != (int_32)[0])
	CALL eosio_assert($11, [2304])
	if ( ((int_64)*($30 + [128]) < (int_64)1) ){ goto $label$43 }
	*($30 + [16]) = ($30 + [128])
	CALL eosio_assert($11, [880])
	CALL $95($2, $24, (int_64)0, ($30 + [16]))
	
.LABEL $label$43
	$29 = *($0)
	$1 = (int_64)0
	$26 = (int_64)59
	$24 = [416]
	$27 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$49 }
	$11 = *($24)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$11 = ($11 + [165])
	goto $label$47 
	
.LABEL $label$49
	$28 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$45
	$24 = ($24 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$27 = ((int_64)$28 | (int_64)$27)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$44 }
	*((($30 + [72]) + [8])) = $27
	*($30 + [72]) = $29
	$1 = (int_64)0
	$26 = (int_64)59
	$24 = [608]
	$27 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$55 }
	$11 = *($24)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$11 = ($11 + [165])
	goto $label$53 
	
.LABEL $label$55
	$28 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$51
	$24 = ($24 + [1])
	$26 = ((int_64)$26 + (int_64)-5)
	$27 = ((int_64)$28 | (int_64)$27)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$50 }
	$1 = (int_64)0
	$26 = (int_64)59
	$24 = [624]
	$29 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$61 }
	$11 = *($24)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$11 = ($11 + [165])
	goto $label$59 
	
.LABEL $label$61
	$28 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$28 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$28 = ((int_64)((int_64)$28 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$57
	$24 = ($24 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$29 = ((int_64)$28 | (int_64)$29)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$56 }
	$10 = *($30 + [148])
	*(($11 = ($30 + [8]))) = [0]
	*($30) = (int_64)0
	$24 = CALL strlen([2352])
	if ( ((uint_32)$24 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$24 >= (uint_32)[11]) ){ goto $label$64 }
	*($30) = ($24 << [1])
	$25 = $3
	if ( $24 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$9 = (($24 + [16]) & [-16])
	$25 = CALL $195($9)
	*($11) = $25
	*($30) = ($9 | [1])
	*($30 + [4]) = $24
	
.LABEL $label$63
	CALL memcpy($25, [2352], $24)
	
.LABEL $label$62
	*(($25 + $24)) = [0]
	*((($30 + [16]) + [8])) = *($10)
	*($19) = *($30 + [132])
	*(($4 + [8])) = *($14)
	*($30 + [16]) = *($0)
	*($4) = *($30 + [128])
	*(($4 + [12])) = *((($30 + [128]) + [12]))
	*(($5 + [8])) = *($11)
	*($5) = *($30)
	*($30) = [0]
	*($30 + [4]) = [0]
	*($11) = [0]
	$24 = CALL $21(($30 + [88]), ($30 + [72]), $27, $29, ($30 + [16]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$65 }
	CALL $196(*((($30 + [16]) + [40])))
	
.LABEL $label$65
	if ( ((*($30) & [1]) == 0) ){ goto $label$66 }
	CALL $196(*($11))
	
.LABEL $label$66
	$11 = *($21)
	if ( ((uint_32)$11 >= (uint_32)*($20)) ){ goto $label$68 }
	CALL $17($11, $24)
	*($21) = (*($21) + [40])
	goto $label$67 
	
.LABEL $label$68
	CALL $18($6, $24)
	
.LABEL $label$67
	CALL prints([256])
	CALL printi((CASTING int_64)(int_32 $7))
	$24 = *($22)
	if ( ($24 == 0) ){ goto $label$69 }
	*((($30 + [88]) + [32])) = $24
	CALL $196($24)
	
.LABEL $label$69
	$24 = *((($30 + [88]) + [16]))
	if ( ($24 == 0) ){ goto $label$70 }
	*($23) = $24
	CALL $196($24)
	
.LABEL $label$70
	$7 = ($7 + [1])
	
.LABEL $label$38
	CALL eosio_assert(((int_64)*($14) == (int_64)*((($30 + [280]) + [8]))), [304])
	$1 = ((int_64)*($30 + [280]) + (int_64)*($30 + [128]))
	*($30 + [280]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($30 + [280]) < (int_64)4611686018427387904), [384])
	$8 = ((int_64)$8 + (int_64)1)
	CALL $96(($30 + [144]))
	if ( *($30 + [148]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$8 = (int_64)0
	
.LABEL $label$29
	CALL prints([2240])
	CALL printui($8)
	CALL prints([2256])
	CALL $12(($30 + [280]))
	CALL prints([2368])
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$71 }
	$1 = *($0)
	$28 = CALL current_time()
	*($30 + [24]) = $1
	*($30 + [16]) = $28
	$1 = *($0)
	CALL $23(($30 + [88]), ($30 + [160]))
	$24 = *($30 + [88])
	CALL send_deferred(($30 + [16]), $1, $24, (*($30 + [92]) - $24), [1])
	$24 = *($30 + [88])
	if ( ($24 == 0) ){ goto $label$71 }
	*($30 + [92]) = $24
	CALL $196($24)
	
.LABEL $label$71
	if ( ((int_64)*($30 + [280]) < (int_64)1) ){ goto $label$72 }
	*($30 + [16]) = (int_64)1
	CALL $97($12, ($30 + [280]), ($30 + [16]))
	*($30 + [16]) = (int_64)3
	CALL $13($12, ($30 + [280]), ($30 + [16]))
	
.LABEL $label$72
	CALL $24(($30 + [160]))
	*([0] + [4]) = ($30 + [304])
	return (unreachable)
	
.LABEL $label$28
	CALL $197($30)
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [40]) = (int_64)0
	*($6 + [104]) = *($1 + [8])
	$4 = *($1)
	CALL eosio_assert([1], [1040])
	*($6 + [96]) = ($6 + [81])
	*($6 + [92]) = $6
	*($6 + [88]) = $6
	CALL $45(($6 + [88]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $6, [81])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($6 + [120]) = *(($1 + [8]))
	if ( (CALL memcmp(($6 + [104]), ($6 + [120]), [8]) == 0) ){ goto $label$2 }
	$5 = ($1 + [96])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($6 + [112]), $4)
	*($5) = $1
	
.LABEL $label$3
	CALL db_idx64_update($1, $2, ($6 + [120]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $26($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [752])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [752])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $30(CALL $31($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$7 = [0]
	$6 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [80])
	$6 = *($2)
	$3 = *(($1 + [72]))
	$2 = *(($1 + [76]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$7 = ($2 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$6) ){ goto $label$6 }
	$2 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($1 + [48])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$9 }
	$7 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$5), [768])
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	$2 = CALL db_find_i64(*(($1 + [48])), *(($1 + [56])), (int_64)4849595776591986688, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $43($5, $2)
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$5), [768])
	
.LABEL $label$8
	$2 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($2, [1952])
	CALL eosio_assert(*($7 + [32]), [1984])
	CALL eosio_assert(((int_64)*($7 + [40]) > (int_64)0), [2016])
	*(($0 + [8])) = *(($7 + [48]))
	*($0) = *($7 + [40])
	CALL eosio_assert($2, [880])
	CALL $88($5, $7, (int_64)0, ($8 + [8]))
	*([0] + [4]) = ($8 + [16])
}

void .FUNC _ZN9bonusplat12chanbonuspayERKy (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [144])
	*([0] + [4]) = $12
	CALL eosio_assert([1], [688])
	$6 = [0]
	$8 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	if ( CALL has_auth(*($0)) ){ goto $label$6 }
	if ( CALL has_auth(*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [1888])
	
.LABEL $label$6
	CALL $86(($12 + [24]), ($0 + [408]), $1)
	$2 = *($12 + [24])
	if ( ((int_64)$2 < (int_64)1) ){ goto $label$8 }
	$3 = *($12 + [32])
	$11 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [416]
	$9 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$14 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$4 = ($4 + [165])
	goto $label$12 
	
.LABEL $label$14
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$10
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$9 }
	*($12 + [80]) = $9
	*($12 + [72]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [608]
	$9 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$20 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$4 = ($4 + [165])
	goto $label$18 
	
.LABEL $label$20
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$16
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [624]
	$11 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$26 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$4 = ($4 + [165])
	goto $label$24 
	
.LABEL $label$26
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$22
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$21 }
	*(($12 + [16])) = [0]
	*($12 + [8]) = (int_64)0
	$6 = CALL strlen([1936])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$29 }
	*($12 + [8]) = ($6 << [1])
	$4 = (($12 + [8]) | [1])
	if ( $6 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$5 = (($6 + [16]) & [-16])
	$4 = CALL $195($5)
	*($12 + [8]) = ($5 | [1])
	*($12 + [16]) = $4
	*($12 + [12]) = $6
	
.LABEL $label$28
	CALL memcpy($4, [1936], $6)
	
.LABEL $label$27
	*(($4 + $6)) = [0]
	*(($12 + [48])) = $3
	*($12 + [32]) = *($1)
	$6 = ($12 + [16])
	*(($12 + [64])) = *($6)
	*($12 + [24]) = *($0)
	*($12 + [40]) = $2
	*($12 + [56]) = *($12 + [8])
	*($12 + [8]) = [0]
	*($12 + [12]) = [0]
	*($6) = [0]
	$6 = CALL $21(($12 + [88]), ($12 + [72]), $9, $11, ($12 + [24]))
	CALL $87(($12 + [128]), $6)
	$4 = *($12 + [128])
	CALL send_inline($4, (*($12 + [132]) - $4))
	$4 = *($12 + [128])
	if ( ($4 == 0) ){ goto $label$30 }
	*($12 + [132]) = $4
	CALL $196($4)
	
.LABEL $label$30
	$4 = *($6 + [28])
	if ( ($4 == 0) ){ goto $label$31 }
	*(($6 + [32])) = $4
	CALL $196($4)
	
.LABEL $label$31
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$32 }
	*(($6 + [20])) = $4
	CALL $196($4)
	
.LABEL $label$32
	if ( ((*(($12 + [56])) & [1]) == 0) ){ goto $label$33 }
	CALL $196(*(($12 + [64])))
	
.LABEL $label$33
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $196(*(($12 + [16])))
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [144])
	return (unreachable)
	
.LABEL $label$7
	CALL $197(($12 + [8]))
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [1808])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $196($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $196($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [116]))
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [1808])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $196($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $196($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1808])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [96])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [100])) = $6
	CALL $196($6)
	
.LABEL $label$7
	CALL $196($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [96])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [100])) = $6
	CALL $196($6)
	
.LABEL $label$10
	CALL $196($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [112]))
	$7 = *($1 + [116])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $81 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL prints([1600])
	CALL eosio_assert([0], [16])
	$4 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$1 = ($0 + [48])
	$3 = CALL $32($1, $4)
	
.LOOP $label$2:
	CALL eosio_assert([1], [1616])
	CALL eosio_assert([1], [1664])
	$4 = [0]
	$2 = CALL db_next_i64(*($3 + [112]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $32($1, $2)
	
.LABEL $label$3
	CALL $82($1, $3)
	$3 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-6030912135012286464, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$1 = ($0 + [8])
	$3 = CALL $53($1, $4)
	
.LOOP $label$5:
	CALL eosio_assert([1], [1616])
	CALL eosio_assert([1], [1664])
	$4 = [0]
	$2 = CALL db_next_i64(*($3 + [12]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $53($1, $2)
	
.LABEL $label$6
	CALL $83($1, $3)
	$3 = $4
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL prints([1600])
	CALL eosio_assert([0], [16])
	$3 = ($0 + [16])
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *($3), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$1 = ($0 + [8])
	CALL $58($1, $2)
	$0 = CALL db_lowerbound_i64(*($1), *($3), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $58($1, $0)
	
.LOOP $label$3:
	CALL eosio_assert([1], [1616])
	CALL eosio_assert([1], [1664])
	$0 = [0]
	$2 = CALL db_next_i64(*($3 + [116]), ($4 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $58($1, $2)
	
.LABEL $label$4
	CALL $84($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL prints([1872])
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($0 + [12]) = $1
	$1 = *($2)
	$4 = *(*(*($2 + [4])))
	*($0) = *($4)
	*(($5 = ($0 + [8]))) = *(($4 + [8]))
	CALL eosio_assert([1], [752])
	CALL memcpy($6, $0, [8])
	CALL eosio_assert([1], [752])
	CALL memcpy(($6 | [8]), $5, [4])
	$3 = *($0)
	*($0 + [16]) = CALL db_store_i64(*($1 + [8]), (int_64)-4697967887266086912, *(*($2 + [8])), $3, $6, [12])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $43($5, $6)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	
.LABEL $label$3
	$6 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($6, [3280])
	$2 = ((int_64)*($1 + [16]) + (int_64)-1)
	CALL eosio_assert((uint_64)(*($1 + [80]) <= ( ((int_64)((int_64)$2 * (int_64)-400) + (int_64)1000) ? (int_64)0 : (uint_64)($2 <= (int_64)3) )), [3312])
	CALL eosio_assert($6, [880])
	CALL $153($5, $1, (int_64)0, ($7 + [8]))
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1)
	$4 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$3) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$6), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $43($6, $7)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$6), [768])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [3344])
	CALL eosio_assert(((int_64)*($1 + [8]) == (int_64)*($2)), [3392])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $43($5, $6)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	
.LABEL $label$3
	$6 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($6, [3120])
	CALL eosio_assert((int_64)(*($1 + [40]) == 0), [3168])
	CALL eosio_assert(((int_32)*($1 + [32]) ^ (int_32)[1]), [3200])
	CALL eosio_assert(((int_64)*($1) != (int_64)*($0)), [3232])
	CALL eosio_assert($6, [1616])
	CALL eosio_assert($6, [1664])
	$6 = CALL db_next_i64(*($1 + [92]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $43($5, $6)
	
.LABEL $label$5
	CALL $146($5, $1)
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
	CALL $145(($0 + [408]), $1)
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$4 = ($0 + [136])
	CALL $148($4, $2, $3)
	$5 = *($1)
	$6 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$1 }
	$9 = ($10 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$5) ){ goto $label$1 }
	$10 = $9
	$8 = ($9 + [-24])
	$9 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$9 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$5 }
	$8 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [108]) == (int_32)$9), [768])
	if ( $8 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $32($9, $8) + [108]) == (int_32)$9), [768])
	goto $label$3 
	
.LABEL $label$4
	*($11 + [8]) = *($0)
	CALL $15($0, $2, ($11 + [8]))
	CALL $149($4, $2)
	$5 = *($0)
	*($11 + [12]) = $0
	*($11 + [8]) = $1
	*($11 + [16]) = $3
	*($11 + [20]) = $2
	CALL $150(($11 + [24]), $9, $5, ($11 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1696])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1744])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1808])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $196($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $196($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	$7 = *(($1 + [96]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849595776591986688, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
	CALL $154(($0 + [408]), $1)
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL $156(($0 + [408]), $1, $2)
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [48])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	$7 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	CALL read_action_data($7, $1)
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [16]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1136])
	CALL memcpy($9, $7, [8])
	$3 = ($1 & [-8])
	CALL eosio_assert(((int_32)$3 != (int_32)[8]), [1136])
	$4 = ($9 + [8])
	CALL memcpy($4, ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$3 != (int_32)[16]), [1136])
	$3 = ($9 + [16])
	CALL memcpy($3, ($7 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	$5 = *($3)
	$6 = *($4)
	*($9 + [40]) = *($9)
	*($9 + [32]) = $6
	*($9 + [24]) = $5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	CALL void $1((int_32 ($9 + [40])), (int_32 ($9 + [32])), (int_32 ($9 + [24])), (int_32 $8))
	*([0] + [4]) = ($9 + [48])
	return [1]
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	CALL require_auth(*($0))
	CALL $147(($0 + [184]), $1, $2, $3)
}

int_64 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $32($5, $6)
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$5), [768])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [1552])
	return *($1 + [24])
}

int_64 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $32($5, $6)
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$5), [768])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [1504])
	return *($1 + [16])
}

void .FUNC _ZN9bonusplat9parseMemoENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_32 $28
	$28 = (*([0] + [4]) - [96])
	*([0] + [4]) = $28
	$3 = CALL $71($0)
	CALL eosio_assert([1], [688])
	$0 = [0]
	$25 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$23 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$23 = [0]
	
.LABEL $label$1
	CALL eosio_assert($23, [80])
	CALL eosio_assert([1], [688])
	$25 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$23 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$23 = [0]
	
.LABEL $label$6
	CALL eosio_assert($23, [80])
	*(($28 + [16])) = [0]
	*($28 + [8]) = (int_64)0
	$0 = CALL strlen([1360])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$14 }
	*($28 + [8]) = ($0 << [1])
	$23 = (($28 + [8]) | [1])
	if ( $0 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$12 = (($0 + [16]) & [-16])
	$23 = CALL $195($12)
	*($28 + [8]) = ($12 | [1])
	*($28 + [16]) = $23
	*($28 + [12]) = $0
	
.LABEL $label$13
	CALL memcpy($23, [1360], $0)
	
.LABEL $label$12
	*(($23 + $0)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_(($28 + [64]), $2, ($28 + [8]))
	if ( ((*($28 + [8]) & [1]) == 0) ){ goto $label$15 }
	CALL $196(*($28 + [16]))
	
.LABEL $label$15
	$23 = *($28 + [64])
	if ( ((uint_32)((int_32)(*($28 + [68]) - $23) / (int_32)[12]) <= (uint_32)[1]) ){ goto $label$18 }
	$9 = ((int_64)1397703940 == (int_64)1397703940)
	$8 = ($1 + [232])
	$7 = ($3 + [32])
	$6 = ($1 + [456])
	$5 = ($1 + [184])
	$4 = (($28 + [8]) | [1])
	$15 = (($28 + [8]) + [8])
	$16 = (($28 + [8]) + [16])
	$17 = ($1 + [408])
	$18 = ($3 + [40])
	$19 = ($3 + [36])
	$20 = ($1 + [256])
	$21 = ($1 + [260])
	$22 = ($1 + [240])
	$10 = [1]
	$11 = (int_64)0
	
.LOOP $label$19:
	*($15) = [0]
	*($28 + [8]) = (int_64)0
	$0 = CALL strlen([128])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$16 }
	$2 = ($23 + ((int_32)$10 * (int_32)[12]))
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$22 }
	*($28 + [8]) = ($0 << [1])
	$23 = $4
	if ( $0 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$12 = (($0 + [16]) & [-16])
	$23 = CALL $195($12)
	*($15) = $23
	*($28 + [8]) = ($12 | [1])
	*($28 + [12]) = $0
	
.LABEL $label$21
	CALL memcpy($23, [128], $0)
	
.LABEL $label$20
	*(($23 + $0)) = [0]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_(($28 + [48]), $2, ($28 + [8]))
	if ( ((*($28 + [8]) & [1]) == 0) ){ goto $label$23 }
	CALL $196(*($15))
	
.LABEL $label$23
	*($16) = (int_64)1398362884
	*($15) = (int_64)0
	CALL eosio_assert([1], [688])
	$25 = (uint_64)*($16) >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$23 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$23 = [0]
	
.LABEL $label$24
	CALL eosio_assert($23, [80])
	$0 = *($28 + [48])
	if ( (*($0) & [1]) ){ goto $label$30 }
	$0 = ($0 + [1])
	goto $label$29 
	
.LABEL $label$30
	$0 = *($0 + [8])
	
.LABEL $label$29
	$23 = [-1]
	
.LOOP $label$31:
	$2 = ($0 + $23)
	$12 = ($23 + [1])
	$23 = $12
	if ( *(($2 + [1])) ){ goto $label$31 }
	$13 = (CASTING uint_64)(uint_32 $12)
	$25 = (int_64)0
	$24 = (int_64)59
	$26 = (int_64)0
	
.LOOP $label$32:
	$27 = (int_64)0
	if ( ((uint_64)$25 >= (uint_64)$13) ){ goto $label$33 }
	$23 = *($0)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$23 = ($23 + [165])
	goto $label$34 
	
.LABEL $label$35
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$33
	if ( ((uint_64)$25 > (uint_64)(int_64)11) ){ goto $label$37 }
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	goto $label$36 
	
.LABEL $label$37
	$27 = ((int_64)$27 & (int_64)15)
	
.LABEL $label$36
	$0 = ($0 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$26 = ((int_64)$27 | (int_64)$26)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$32 }
	*($28 + [8]) = $26
	CALL eosio_assert([1], [688])
	$25 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$23 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$23 = [0]
	
.LABEL $label$38
	CALL eosio_assert($23, [80])
	$0 = *($28 + [48])
	if ( (*($0 + [12]) & [1]) ){ goto $label$44 }
	$0 = (($0 + [12]) + [1])
	goto $label$43 
	
.LABEL $label$44
	$0 = *(($0 + [20]))
	
.LABEL $label$43
	$25 = CALL atoll($0)
	CALL eosio_assert((uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1408])
	*($16) = (int_64)1397703940
	*($15) = $25
	CALL eosio_assert($9, [304])
	$11 = ((int_64)$25 + (int_64)$11)
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [384])
	CALL $15($5, ($28 + [8]), $1)
	*((($28 + [8]) + [24])) = CALL $72($5, ($28 + [8]))
	*($28) = CALL $73($5, ($28 + [8]))
	$25 = *($17)
	*($28 + [80]) = $6
	CALL $74(($28 + [88]), ($28 + [80]), $28)
	$0 = *($28 + [92])
	if ( ($0 == 0) ){ goto $label$45 }
	if ( ((int_64)*($28) != (int_64)*($0 + [8])) ){ goto $label$45 }
	if ( (*($0 + [32]) == 0) ){ goto $label$45 }
	$25 = *($0)
	
.LABEL $label$45
	*((($28 + [8]) + [32])) = $25
	CALL prints([288])
	CALL printi(*($15))
	CALL prints([1440])
	CALL printui(*($28))
	$0 = *($19)
	if ( ((int_32)$0 == (int_32)*($18)) ){ goto $label$47 }
	CALL memcpy($0, ($28 + [8]), [40])
	*($19) = (*($19) + [40])
	goto $label$46 
	
.LABEL $label$47
	CALL $75($7, ($28 + [8]))
	
.LABEL $label$46
	$25 = *($28 + [8])
	$14 = *($20)
	$2 = *($21)
	if ( ((int_32)$2 == (int_32)$14) ){ goto $label$48 }
	$0 = ($2 + [-24])
	$12 = ([0] - $14)
	
.LOOP $label$49:
	if ( ((int_64)*(*($0)) == (int_64)$25) ){ goto $label$48 }
	$2 = $0
	$23 = ($0 + [-24])
	$0 = $23
	if ( ((int_32)($23 + $12) != (int_32)[-24]) ){ goto $label$49 }
	
.LABEL $label$48
	if ( ((int_32)$2 == (int_32)$14) ){ goto $label$51 }
	$0 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [108]) == (int_32)$8), [768])
	goto $label$50 
	
.LABEL $label$51
	$0 = CALL db_find_i64(*($8), *($22), (int_64)-6030912142679474176, $25)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$52 }
	$0 = CALL $32($8, $0)
	CALL eosio_assert(((int_32)*($0 + [108]) == (int_32)$8), [768])
	goto $label$50 
	
.LABEL $label$52
	$0 = [0]
	
.LABEL $label$50
	*($28 + [92]) = $0
	*($28 + [88]) = $8
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1456])
	CALL $76($5, ($28 + [88]))
	$2 = *($28 + [48])
	if ( ($2 == 0) ){ goto $label$53 }
	$0 = *($28 + [52])
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$55 }
	$23 = ([0] - $2)
	$0 = ($0 + [-12])
	
.LOOP $label$56:
	if ( ((*($0) & [1]) == 0) ){ goto $label$57 }
	CALL $196(*(($0 + [8])))
	
.LABEL $label$57
	$0 = ($0 + [-12])
	if ( ((int_32)($0 + $23) != (int_32)[-12]) ){ goto $label$56 }
	$0 = *($28 + [48])
	goto $label$54 
	
.LABEL $label$55
	$0 = $2
	
.LABEL $label$54
	*($28 + [52]) = $2
	CALL $196($0)
	
.LABEL $label$53
	$23 = *($28 + [64])
	$10 = ($10 + [1])
	if ( ($10 <= ((int_32)(*($28 + [68]) - $23) / (int_32)[12])) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$11 = (int_64)0
	
.LABEL $label$17
	*($3 + [16]) = $11
	*(($3 + [24])) = (int_64)1397703940
	CALL prints([1376])
	CALL printi(*($3 + [16]))
	CALL prints([1392])
	$2 = *($28 + [64])
	if ( ($2 == 0) ){ goto $label$58 }
	$0 = *($28 + [68])
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$60 }
	$23 = ([0] - $2)
	$0 = ($0 + [-12])
	
.LOOP $label$61:
	if ( ((*($0) & [1]) == 0) ){ goto $label$62 }
	CALL $196(*(($0 + [8])))
	
.LABEL $label$62
	$0 = ($0 + [-12])
	if ( ((int_32)($0 + $23) != (int_32)[-12]) ){ goto $label$61 }
	$0 = *($28 + [64])
	goto $label$59 
	
.LABEL $label$60
	$0 = $2
	
.LABEL $label$59
	*($28 + [68]) = $2
	CALL $196($0)
	
.LABEL $label$58
	*([0] + [4]) = ($28 + [96])
	return (unreachable)
	
.LABEL $label$16
	CALL $197(($28 + [8]))
	
.LABEL $label$11
	CALL $197(($28 + [8]))
	(unreachable)
}

int_32 .FUNC $71 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	return $0
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5 + [24]) = (int_64)5261060
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [688])
	$3 = [0]
	$2 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	if ( (*([0] + [48]) == 0) ){ goto $label$7 }
	$3 = *([0] + [52])
	goto $label$6 
	
.LABEL $label$7
	if ( (*([0] + [38]) == 0) ){ goto $label$9 }
	$2 = *([0] + [40])
	goto $label$8 
	
.LABEL $label$9
	$2 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $2
	
.LABEL $label$8
	*([0] + [48]) = [1]
	$3 = (CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000))
	*([0] + [52]) = $3
	
.LABEL $label$6
	*($5 + [8]) = $3
	$3 = *($1 + [4])
	*($5 + [4]) = ($5 + [16])
	*($5) = ($5 + [8])
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [880])
	CALL $77(($0 + [48]), $3, (int_64)0, $5)
	if ( ((int_64)*($5 + [16]) < (int_64)1) ){ goto $label$10 }
	*($5) = (int_64)2
	CALL $13(($0 + [88]), ($5 + [16]), $5)
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($10 = $9) + [24]) = *($1 + [8])
	$4 = *($1)
	CALL $78($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$6 = *($1 + [96])
	$5 = *(($1 + [100]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $34(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($10 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4849595776591986688, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [768])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $43($4, CALL $fimport$4(*($4), *($4 + [8]), (int_64)4849595776591986688, $5))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [768])
	
.LABEL $label$4
	*(($2 + [96])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[40])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[40])
	if ( ((uint_32)$3 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $195(((int_32)$6 * (int_32)[40]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[40])), $1, [40])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($7 + ((int_32)$6 * (int_32)[40]))
	$7 = ($2 + [40])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $196($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($1 + [100])
	$11 = *($1 + [96])
	if ( ((int_32)$11 == (int_32)*($5)) ){ goto $label$1 }
	$6 = ($1 + [40])
	$7 = ($1 + [32])
	$9 = ($0 + [4])
	$10 = ($1 + [96])
	
.LOOP $label$2:
	if ( ((uint_32)*($11) > (uint_32)*(*($0))) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($11 + [16])) == (int_64)*($6)), [304])
	$8 = ((int_64)*($7) + (int_64)*($11 + [8]))
	*($7) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [384])
	$11 = *($9)
	$1 = *($10)
	CALL eosio_assert(((int_64)*(($1 + [16])) == (int_64)*($11 + [8])), [304])
	$8 = ((int_64)*($11) + (int_64)*($1 + [8]))
	*($11) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($11) < (int_64)4611686018427387904), [384])
	$1 = *($10)
	$2 = ($1 + [24])
	$3 = (*($5) - $2)
	$4 = ((int_32)$3 / (int_32)[24])
	$11 = $1
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memmove($1, $2, $3)
	$11 = *($10)
	
.LABEL $label$3
	$1 = ($1 + ((int_32)$4 * (int_32)[24]))
	*($5) = $1
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _ZN9bonusplat8cleanallEv (int_32 $0)
{
	CALL prints([1600])
	CALL eosio_assert([0], [16])
	CALL require_auth(*($0))
	CALL $80(($0 + [136]))
	CALL $81(($0 + [184]))
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [128])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	CALL $99($3, $1)
	CALL eosio_assert([1], [1040])
	*($4 + [120]) = ($4 + [112])
	*($4 + [116]) = $4
	*($4 + [112]) = $4
	CALL $62(($4 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [128])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_64 $2
	$2 = *(*($0))
	if ( ((int_64)$2 == (int_64)2) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*($1) >= (int_64)*(*($0 + [4]))), [2400])
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*($1 + [8])), [144])
	$2 = (int_64)
	*($1) = $2(*($1) - *($0)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [224])
	return 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($1 + [16]) >= (int_64)*(*($0 + [4]))), [2432])
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [24]))), [144])
	$2 = (int_64)
	*($1 + [16]) = $2(*($1 + [16]) - *($0)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [224])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [1296])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-6030912142679474176, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [108]) == (int_32)$4), [768])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-6030912142679474176, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $32($4, $8)
	CALL eosio_assert(((int_32)*($2 + [108]) == (int_32)$4), [768])
	
.LABEL $label$4
	*($2 + [116]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($10 = $9) + [24]) = *($1 + [8])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))), [304])
	$8 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [384])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$6 = *($1 + [96])
	$5 = *(($1 + [100]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $34(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($10 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$7 = [0]
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [1664])
	$8 = *($0 + [4])
	$6 = *($8 + [116])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$1 }
	$6 = *(*($0))
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-6030912142679474176, ($9 + [8]), *($8))
	*(*(($0 + [4])) + [116]) = $6
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($6, ($9 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$3 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$2), [768])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL $32($2, CALL $fimport$4(*($2), *($2 + [8]), (int_64)-6030912142679474176, $3))
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$2), [768])
	
.LABEL $label$5
	*($7 + [116]) = $1
	
.LABEL $label$2
	*(($0 + [4])) = $7
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = ($0 + [8])
	$5 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	CALL $58($3, $4)
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [2384])
	if ( ((int_64)*($1) < (int_64)1) ){ goto $label$2 }
	$5 = [0]
	$0 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $58($3, $0)
	
.LABEL $label$3
	*($6 + [12]) = $1
	*($6 + [8]) = $2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [880])
	CALL $98($3, $5, (int_64)0, ($6 + [8]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1104])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $195([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1136])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [1136])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $111(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $91 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*($7 + [56]) = [0]
	$1 = *(($0 + [40]))
	$6 = *(($0 + [44]))
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)2) ){ goto $label$1 }
	$6 = $5
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [16])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)$3), [768])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4697967887266086912, (int_64)2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $90($3, $6)
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)$3), [768])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [2192])
	$5 = *($5 + [8])
	*($7 + [52]) = $5
	$3 = ($0 + [192])
	$4 = *(CALL $53($3, CALL $fimport$12(*($3), *(($0 + [200])), (int_64)-6030912135012286464, (int_64)0)))
	*($7 + [40]) = $4
	*($7 + [32]) = (CASTING uint_64)(uint_32 ((int_64)((uint_64)$4 % (uint_64)(CASTING uint_64)(uint_32 $5)) != (int_64)0))
	$3 = ($0 + [496])
	$5 = CALL db_lowerbound_i64(*($0 + [496]), *(($0 + [504])), (int_64)-2730689629261922304, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL $100($3, $5)
	CALL eosio_assert(*($5), [2496])
	*($7 + [12]) = ($7 + [52])
	*($7 + [8]) = ($7 + [40])
	*($7 + [16]) = ($7 + [32])
	*($7 + [20]) = ($7 + [56])
	CALL eosio_assert([1], [880])
	CALL $108($3, $5, (int_64)0, ($7 + [8]))
	goto $label$5 
	
.LABEL $label$6
	$4 = *($0)
	*($7 + [12]) = ($7 + [52])
	*($7 + [8]) = ($7 + [40])
	*($7 + [16]) = ($7 + [32])
	*($7 + [20]) = ($7 + [56])
	CALL $107(($7 + [24]), $3, $4, ($7 + [8]))
	$5 = *($7 + [28])
	
.LABEL $label$5
	if ( (uint_64)(*($5 + [8]) <= *($5 + [16])) ){ goto $label$7 }
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [880])
	CALL $109($3, $5, (int_64)0, ($7 + [8]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$2 = ($0 + [8])
	$4 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	CALL $58($2, $3)
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [2384])
	if ( ((int_64)*($1) < (int_64)0) ){ goto $label$2 }
	$4 = [0]
	$0 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $58($2, $0)
	
.LABEL $label$3
	*($5 + [8]) = $1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [880])
	CALL $106($2, $4, (int_64)0, ($5 + [8]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $93 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$1 = *(($0 + [40]))
	$6 = *(($0 + [44]))
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)2) ){ goto $label$1 }
	$6 = $5
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_32)($3 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [16])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	$6 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)-4697967887266086912, (int_64)2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $90($5, $6)
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)$5), [768])
	
.LABEL $label$3
	$5 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [2192])
	$3 = ($0 + [496])
	$6 = CALL db_lowerbound_i64(*($0 + [496]), *(($0 + [504])), (int_64)-2730689629261922304, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $100($3, $6)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)*($5) ^ (int_32)[1]), [2464])
	$4 = ((int_64)*($5 + [8]) + (int_64)1)
	*($7 + [8]) = $4
	if ( ((uint_64)$4 >= (uint_64)*($5 + [16])) ){ goto $label$7 }
	*($7) = ($7 + [8])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [880])
	CALL $102($3, $5, (int_64)0, $7)
	goto $label$6 
	
.LABEL $label$7
	*($7) = ($7 + [8])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [880])
	CALL $101($3, $5, (int_64)0, $7)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*($7 + [7]) = [0]
	$2 = *($1)
	$3 = *(($0 + [480]))
	$6 = *(($0 + [484]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [456])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$6 = CALL db_find_i64(*(($0 + [456])), *(($0 + [464])), (int_64)4849595776591986688, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $43($5, $6)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$5), [768])
	
.LABEL $label$3
	$6 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($6, [3648])
	*($7 + [8]) = ($7 + [7])
	CALL eosio_assert($6, [880])
	CALL $159($5, $1, (int_64)0, ($7 + [8]))
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1136])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*($6 + [8]) = $3
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 ($6 + [8])), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1136])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [1136])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [1136])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [688])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [80])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [1136])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1136])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1136])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $184(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $185(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $196(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	CALL $178(($0 + [16]), $1, $2)
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [16]) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $176(($5 + [32]), ($5 + [8]))
	CALL eosio_assert(((int_32)*($5 + [40]) != (int_32)*($5 + [36])), [1136])
	CALL memcpy(($5 + [31]), *($5 + [36]), [1])
	*($5 + [20]) = ((int_32)*($5 + [31]) != (int_32)[0])
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	$1 = (*($5 + [12]) - *($5 + [8]))
	$3 = int_32($1 >> [4])
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$5 }
	$1 = CALL $195($1)
	*(($5 + [40])) = ($1 + ($3 << [4]))
	*($5 + [32]) = $1
	*($5 + [36]) = $1
	$6 = *($5 + [8])
	$3 = (*($5 + [12]) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $3)
	*($5 + [36]) = (*($5 + [36]) + $3)
	
.LABEL $label$6
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($5 + [20]))
	if ( (($2 & [1]) == 0) ){ goto $label$7 }
	$4 = *((*($1) + $4))
	
.LABEL $label$7
	CALL void $1((int_32 ($5 + [32])), (int_32 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $4))
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	*($5 + [36]) = $1
	CALL $196($1)
	
.LABEL $label$8
	$1 = *($5 + [8])
	if ( ($1 == 0) ){ goto $label$9 }
	*($5 + [12]) = $1
	CALL $196($1)
	
.LABEL $label$9
	*([0] + [4]) = ($5 + [48])
	return [1]
	
.LABEL $label$5
	CALL $200(($5 + [32]))
	return (unreachable)
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2)
{
	CALL $171(($0 + [80]), $1, $2)
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [16]) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $169(($5 + [32]), ($5 + [8]))
	CALL eosio_assert(((int_32)*($5 + [40]) != (int_32)*($5 + [36])), [1136])
	CALL memcpy(($5 + [31]), *($5 + [36]), [1])
	*($5 + [20]) = ((int_32)*($5 + [31]) != (int_32)[0])
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	$1 = (*($5 + [12]) - *($5 + [8]))
	$3 = int_32($1 >> [3])
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL $195($1)
	*(($5 + [40])) = ($1 + ($3 << [3]))
	*($5 + [32]) = $1
	*($5 + [36]) = $1
	$6 = *($5 + [8])
	$3 = (*($5 + [12]) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $3)
	*($5 + [36]) = (*($5 + [36]) + $3)
	
.LABEL $label$6
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($5 + [20]))
	if ( (($2 & [1]) == 0) ){ goto $label$7 }
	$4 = *((*($1) + $4))
	
.LABEL $label$7
	CALL void $1((int_32 ($5 + [32])), (int_32 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $4))
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	*($5 + [36]) = $1
	CALL $196($1)
	
.LABEL $label$8
	$1 = *($5 + [8])
	if ( ($1 == 0) ){ goto $label$9 }
	*($5 + [12]) = $1
	CALL $196($1)
	
.LABEL $label$9
	*([0] + [4]) = ($5 + [48])
	return [1]
	
.LABEL $label$5
	CALL $200(($5 + [32]))
	return (unreachable)
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL $160(($0 + [408]), $1, $2)
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [32])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1136])
	CALL memcpy($7, $5, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1136])
	$3 = ($7 + [8])
	CALL memcpy($3, ($5 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	$4 = *($3)
	*($7 + [24]) = *($7)
	*($7 + [16]) = $4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 ($7 + [24])), (int_32 ($7 + [16])), (int_32 $6))
	*([0] + [4]) = ($7 + [32])
	return [1]
}

int_32 .FUNC $202 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $195($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

void .FUNC $200 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $195($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC $207 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $181 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $195([24])
	CALL $182($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [16])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $111(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $196($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1136])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC _Z16current_time_addm (int_32 $0)
{
	int_64 $1
	int_32 $2
	if ( *([0] + [56]) ){ goto $label$1 }
	if ( (*([0] + [48]) == 0) ){ goto $label$3 }
	$2 = *([0] + [52])
	goto $label$2 
	
.LABEL $label$3
	if ( (*([0] + [38]) == 0) ){ goto $label$5 }
	$1 = *([0] + [40])
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $1
	
.LABEL $label$4
	*([0] + [48]) = [1]
	$2 = (CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000))
	*([0] + [52]) = $2
	
.LABEL $label$2
	*([0] + [56]) = [1]
	*([0] + [60]) = $2
	
.LABEL $label$1
	if ( (*([0] + [64]) == 0) ){ goto $label$6 }
	return *([0] + [68])
	
.LABEL $label$6
	*([0] + [64]) = [1]
	$0 = (*([0] + [60]) + $0)
	*([0] + [68]) = $0
	return $0
}

void .FUNC _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	*([0] + [4]) = $14
	$11 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($2 + [1])
	$3 = ($1 + [1])
	$12 = *($1 + [4])
	$7 = *($1)
	$8 = ($2 + [4])
	
.LOOP $label$1:
	$9 = ($7 & [1])
	$12 = ( $12 ? uint_32(($7 & [254]) >> [1]) : $9 )
	if ( ($12 <= $11) ){ goto $label$3 }
	$13 = $11
	$10 = ($7 & [1])
	$7 = *($2)
	$7 = ( *($8) ? uint_32($7 >> [1]) : $10 )
	if ( ($7 == 0) ){ goto $label$2 }
	$12 = ($5 + $11)
	$5 = ( *(($1 + [8])) ? $3 : $9 )
	$9 = ($5 + $12)
	$13 = ($9 - $12)
	if ( ((int_32)$13 < (int_32)$7) ){ goto $label$3 }
	$6 = ( *(($2 + [8])) ? $4 : $10 )
	$10 = *($6)
	
.LOOP $label$4:
	$13 = (($13 - $7) + [1])
	if ( ($13 == 0) ){ goto $label$3 }
	$13 = CALL memchr($12, $10, $13)
	if ( ($13 == 0) ){ goto $label$3 }
	if ( (CALL memcmp($13, $6, $7) == 0) ){ goto $label$5 }
	$12 = ($13 + [1])
	$13 = ($9 - $12)
	if ( ((int_32)$13 >= (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$3 }
	$13 = ($13 - $5)
	if ( ((int_32)$13 != (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$6 }
	$13 = uint_32($7 >> [1])
	goto $label$2 
	
.LABEL $label$6
	$13 = *(($1 + [4]))
	
.LABEL $label$2
	CALL $202($14, $1, $11, ($13 - $11), $1)
	$11 = ($0 + [4])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)*(($0 + [8]))) ){ goto $label$8 }
	CALL $201($7, $14)
	*($11) = (*($11) + [12])
	goto $label$7 
	
.LABEL $label$8
	CALL $10($0, $14)
	
.LABEL $label$7
	$11 = *($2)
	$9 = *($8)
	if ( ((*($14) & [1]) == 0) ){ goto $label$9 }
	CALL $196(*(($14 + [8])))
	
.LABEL $label$9
	$7 = *($1)
	$12 = *(($1 + [4]))
	$10 = ( $12 ? uint_32($7 >> [1]) : ($7 & [1]) )
	if ( ((uint_32)$13 >= (uint_32)$10) ){ goto $label$10 }
	$11 = (( $9 ? uint_32($11 >> [1]) : ($11 & [1]) ) + $13)
	if ( ($11 <= $10) ){ goto $label$1 }
	
.LABEL $label$10
	*([0] + [4]) = ($14 + [16])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$7 = *($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$1 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$7) ){ goto $label$1 }
	$6 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [108]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $7)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $32($5, $1)
	CALL eosio_assert(((int_32)*($6 + [108]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	
.LABEL $label$3
	*($8 + [44]) = $6
	*($8 + [40]) = $5
	$1 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3072])
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$6 }
	CALL $76($0, ($8 + [40]))
	*(($8 + [32])) = (int_64)1398362884
	*($8 + [24]) = (int_64)0
	*($8 + [16]) = [0]
	CALL eosio_assert([1], [688])
	$7 = (int_64)5462355
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$6 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	
.LABEL $label$7
	CALL eosio_assert($6, [80])
	$1 = *([0] + [12])
	if ( *([0] + [56]) ){ goto $label$12 }
	if ( (*([0] + [48]) == 0) ){ goto $label$14 }
	$6 = *([0] + [52])
	goto $label$13 
	
.LABEL $label$14
	if ( (*([0] + [38]) == 0) ){ goto $label$16 }
	$7 = *([0] + [40])
	goto $label$15 
	
.LABEL $label$16
	$7 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $7
	
.LABEL $label$15
	*([0] + [48]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((int_64)$7 / (int_64)1000000))
	*([0] + [52]) = $6
	
.LABEL $label$13
	*([0] + [56]) = [1]
	*([0] + [60]) = $6
	
.LABEL $label$12
	if ( (*([0] + [64]) == 0) ){ goto $label$18 }
	$1 = *([0] + [68])
	goto $label$17 
	
.LABEL $label$18
	*([0] + [64]) = [1]
	$1 = (*([0] + [60]) + $1)
	*([0] + [68]) = $1
	
.LABEL $label$17
	*(($8 + [36])) = *(($2 + [12]))
	*(($8 + [32])) = *(($2 + [8]))
	*((($8 + [16]) + [12])) = *(($2 + [4]))
	*($8 + [16]) = $1
	*($8 + [24]) = *($2)
	$1 = *($8 + [44])
	*($8 + [8]) = ($8 + [16])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [880])
	CALL $124($5, $1, (int_64)0, ($8 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN9bonusplat10delegatebwERKN5eosio8currency8transferEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert([1], [688])
	$5 = [0]
	$4 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [80])
	CALL eosio_assert(((int_64)5261060 == (int_64)*(($1 + [24]))), [2976])
	$4 = *($0)
	if ( ((int_64)*($1) != (int_64)$4) ){ goto $label$7 }
	CALL prints([2992])
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_64)*($1 + [8]) != (int_64)$4) ){ goto $label$8 }
	CALL eosio_assert(((int_64)*(($1 + [16])) > (int_64)0), [2832])
	$6 = [0]
	$5 = ($1 + [32])
	CALL $202($7, $5, [0], [10], $5)
	$5 = *($7)
	$3 = CALL strlen([3024])
	if ( ((int_32)$3 != (int_32)( *($7 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$9 }
	$6 = (CALL $199($7, [0], [-1], [3024], $3) == 0)
	$5 = *($7)
	
.LABEL $label$9
	if ( (($5 & [1]) == 0) ){ goto $label$10 }
	CALL $196(*($7 + [8]))
	
.LABEL $label$10
	if ( ($6 == 0) ){ goto $label$11 }
	CALL prints([3040])
	$5 = ($0 + [184])
	CALL $15($5, $1, $0)
	CALL $123($5, $1, ($1 + [16]))
	
.LABEL $label$11
	CALL prints([2960])
	goto $label$6 
	
.LABEL $label$8
	CALL prints([2992])
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN9bonusplat2onERKN5eosio8currency8transferEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [688])
	$7 = [0]
	$6 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [80])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*(($1 + [24]))), [2640])
	$6 = *($0)
	if ( ((int_64)*($1) == (int_64)$6) ){ goto $label$6 }
	if ( ((int_64)*($1 + [8]) != (int_64)$6) ){ goto $label$6 }
	CALL eosio_assert(((int_64)*(($1 + [16])) > (int_64)0), [2832])
	$8 = [0]
	$3 = ($1 + [32])
	CALL $202(($10 + [64]), $3, [0], [10], $3)
	$7 = *($10 + [64])
	$9 = CALL strlen([2880])
	if ( ((int_32)$9 != (int_32)( *($10 + [68]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$7 }
	$8 = (CALL $199(($10 + [64]), [0], [-1], [2880], $9) == 0)
	$7 = *($10 + [64])
	
.LABEL $label$7
	if ( (($7 & [1]) == 0) ){ goto $label$8 }
	CALL $196(*($10 + [72]))
	
.LABEL $label$8
	if ( ($8 == 0) ){ goto $label$9 }
	CALL prints([2896])
	$6 = *($1)
	$4 = *(($0 + [104]))
	$9 = *(($0 + [108]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$10 }
	$7 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$11:
	if ( ((int_64)*(*($7)) == (int_64)$6) ){ goto $label$10 }
	$9 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = ($0 + [80])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$13 }
	$7 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [8]) == (int_32)$8), [768])
	goto $label$12 
	
.LABEL $label$13
	$7 = [0]
	$9 = CALL db_find_i64(*(($0 + [80])), *(($0 + [88])), (int_64)7073251608721096704, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$7 = CALL $113($8, $9)
	CALL eosio_assert(((int_32)*($7 + [8]) == (int_32)$8), [768])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2928])
	$7 = CALL $71(($10 + [64]))
	CALL $201($10, $3)
	CALL _ZN9bonusplat9parseMemoENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($10 + [16]), $0, $10)
	*((($10 + [64]) + [24])) = *((($10 + [16]) + [24]))
	*((($10 + [64]) + [16])) = *((($10 + [16]) + [16]))
	*((($10 + [64]) + [8])) = *((($10 + [16]) + [8]))
	*($10 + [64]) = *($10 + [16])
	$8 = *($7 + [32])
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [36])) = $8
	CALL $196($8)
	*(($3 = ($7 + [40]))) = [0]
	*(($7 + [32])) = (int_64)0
	goto $label$14 
	
.LABEL $label$15
	$3 = ($7 + [40])
	
.LABEL $label$14
	$8 = ($1 + [16])
	$1 = (($10 + [16]) + [32])
	*(($7 + [32])) = *($1)
	*(($10 + [52])) = [0]
	$9 = ($10 + [56])
	$5 = *($9)
	*($9) = [0]
	*($3) = $5
	*($1) = [0]
	if ( ((*($10) & [1]) == 0) ){ goto $label$16 }
	CALL $196(*($10 + [8]))
	
.LABEL $label$16
	*((($10 + [64]) + [8])) = *(($8 + [8]))
	*($10 + [64]) = *($8)
	CALL _ZN9bonusplat11issue_bonusERKNS_5shareE($0, $7)
	$8 = *($7 + [32])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($7 + [36])) = $8
	CALL $196($8)
	
.LABEL $label$9
	CALL prints([2960])
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [112])
}

void .FUNC $120 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($10 = $9) + [24]) = *($1 + [8])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))), [144])
	$8 = (int_64)
	*($1 + [32]) = $8(*($1 + [32]) - *($3)))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [224])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$6 = *($1 + [96])
	$5 = *(($1 + [100]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $34(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($10 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC _ZN9bonusplat5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [256])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [624]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$8 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [608]
	$7 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$14 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$3 = ($3 + [165])
	goto $label$12 
	
.LABEL $label$14
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$10
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$9 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$8 }
	CALL $127(($9 + [208]))
	CALL _ZN9bonusplat2onERKN5eosio8currency8transferEy($0, ($9 + [208]), $6)
	if ( ((*($9 + [240]) & [1]) == 0) ){ goto $label$7 }
	CALL $196(*(($9 + [248])))
	goto $label$7 
	
.LABEL $label$8
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [624]
	$7 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$20 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$20
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$16
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$15 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$21 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [432]
	$7 = (int_64)0
	
.LOOP $label$22:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$23 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$23
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$21 }
	CALL $127(($9 + [208]))
	CALL _ZN9bonusplat10delegatebwERKN5eosio8currency8transferEy($0, ($9 + [208]), $6)
	if ( ((*($9 + [240]) & [1]) == 0) ){ goto $label$7 }
	CALL $196(*(($9 + [248])))
	goto $label$7 
	
.LABEL $label$21
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$2 <= (int_64)4832725131199922175) ){ goto $label$37 }
	if ( ((int_64)$2 <= (int_64)4923678634651997455) ){ goto $label$36 }
	if ( ((int_64)$2 > (int_64)5101864901892112383) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)4923678634651997456) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)4929617646709429520) ){ goto $label$7 }
	*($9 + [148]) = [0]
	*($9 + [144]) = [1]
	*($9 + [56 align=4]) = *($9 + [144])
	CALL $139($0, ($9 + [56]))
	goto $label$7 
	
.LABEL $label$37
	if ( ((int_64)$2 > (int_64)-5001099388276948993) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-7704948014533257872) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-7297935198235901952) ){ goto $label$31 }
	if ( ((int_64)$2 != (int_64)-5001621371260764160) ){ goto $label$7 }
	*($9 + [188]) = [0]
	*($9 + [184]) = [2]
	*($9 + [16 align=4]) = *($9 + [184])
	CALL $130($0, ($9 + [16]))
	goto $label$7 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)4832725131199922176) ){ goto $label$30 }
	if ( ((int_64)$2 == (int_64)4849589352843791840) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)4923676403590758400) ){ goto $label$7 }
	*($9 + [204]) = [0]
	*($9 + [200]) = [3]
	*($9) = *($9 + [200])
	CALL $128($0, $9)
	goto $label$7 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-5001099388276948992) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)-3111238946495230016) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)-3075726212814167552) ){ goto $label$7 }
	*($9 + [132]) = [0]
	*($9 + [128]) = [4]
	*($9 + [72 align=4]) = *($9 + [128])
	CALL $139($0, ($9 + [72]))
	goto $label$7 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)5101864901892112384) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)5455799419163115520) ){ goto $label$7 }
	*($9 + [196]) = [0]
	*($9 + [192]) = [5]
	*($9 + [8 align=4]) = *($9 + [192])
	CALL $129($0, ($9 + [8]))
	goto $label$7 
	
.LABEL $label$33
	*($9 + [108]) = [0]
	*($9 + [104]) = [6]
	*($9 + [96 align=4]) = *($9 + [104])
	CALL $139($0, ($9 + [96]))
	goto $label$7 
	
.LABEL $label$32
	*($9 + [140]) = [0]
	*($9 + [136]) = [7]
	*($9 + [64 align=4]) = *($9 + [136])
	CALL $137($0, ($9 + [64]))
	goto $label$7 
	
.LABEL $label$31
	*($9 + [156]) = [0]
	*($9 + [152]) = [8]
	*($9 + [48 align=4]) = *($9 + [152])
	CALL $137($0, ($9 + [48]))
	goto $label$7 
	
.LABEL $label$30
	*($9 + [164]) = [0]
	*($9 + [160]) = [9]
	*($9 + [40 align=4]) = *($9 + [160])
	CALL $135($0, ($9 + [40]))
	goto $label$7 
	
.LABEL $label$29
	*($9 + [124]) = [0]
	*($9 + [120]) = [10]
	*($9 + [80 align=4]) = *($9 + [120])
	CALL $139($0, ($9 + [80]))
	goto $label$7 
	
.LABEL $label$28
	*($9 + [116]) = [0]
	*($9 + [112]) = [11]
	*($9 + [88 align=4]) = *($9 + [112])
	CALL $143($0, ($9 + [88]))
	goto $label$7 
	
.LABEL $label$27
	*($9 + [180]) = [0]
	*($9 + [176]) = [12]
	*($9 + [24 align=4]) = *($9 + [176])
	CALL $131($0, ($9 + [24]))
	goto $label$7 
	
.LABEL $label$26
	*($9 + [172]) = [0]
	*($9 + [168]) = [13]
	*($9 + [32 align=4]) = *($9 + [168])
	CALL $133($0, ($9 + [32]))
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [256])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ((int_32)($5 - $4) / (int_32)[24])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$2 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $195(((int_32)$6 * (int_32)[24]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$3 * (int_32)[24])))) = *($1)
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($5 - $4)
	$5 = ($3 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($7 + ((int_32)$6 * (int_32)[24]))
	$3 = ($3 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $1)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $3
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $196($4)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($9 = $10) + [24]) = *($1 + [8])
	$3 = *($3)
	$4 = *($1)
	$5 = ($1 + [100])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)*(($1 + [104]))) ){ goto $label$2 }
	*($8) = *($3)
	*(($8 + [16])) = *(($3 + [16]))
	*(($8 + [8])) = *(($3 + [8]))
	*($5) = (*($5) + [24])
	$5 = ($1 + [96])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [96])
	CALL $125($5, $3)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$5 = *($5)
	$8 = *(($1 + [100]))
	$6 = ($8 - $5)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$4 }
	$3 = ((((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($3)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($9 + [12]) = $8
	*($9 + [8]) = $8
	*($9 + [16]) = ($8 + $3)
	CALL $34(($9 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL free($8)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($9 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($9 + [24]), ($9 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($9 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($9 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [48])
}

void .FUNC _ZN9bonusplat8caltokenERKN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	float_64 $5
	float_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($9 + [8]) = (int_64)4
	CALL $57(($9 + [16]), ($1 + [136]), ($9 + [8]))
	*($0 + [8]) = (int_64)5261060
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = [0]
	$7 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [80])
	$7 = *($9 + [16])
	CALL prints([1232])
	CALL $12($2)
	CALL prints([128])
	$3 = ((int_64)$7 / (int_64)10000)
	if ( ((int_64)$7 > (int_64)999999999999) ){ goto $label$15 }
	$7 = *($2)
	$4 = ((int_64)((int_64)$7 / (int_64)1000) + (int_64)$3)
	if ( ((int_64)$4 > (int_64)100000000) ){ goto $label$14 }
	$7 = ((int_64)$7 * (int_64)10)
	goto $label$7 
	
.LABEL $label$15
	if ( ((int_64)$7 > (int_64)2999999999999) ){ goto $label$13 }
	$7 = *($2)
	$4 = ((int_64)((int_64)$7 / (int_64)2000) + (int_64)$3)
	if ( ((int_64)$4 > (int_64)300000000) ){ goto $label$12 }
	$7 = ((int_64)$7 * (int_64)5)
	goto $label$7 
	
.LABEL $label$14
	$7 = ((int_64))((int_64)100000000 - $3) * (int_64)10000
	*($0) = $7)
	$7 = ((int_64)((int_64)((int_64)((int_64)((int_64)$4 * (int_64)10000) + (int_64)-1000000000000) / (int_64)10) * (int_64)5) + (int_64)$7)
	goto $label$7 
	
.LABEL $label$13
	if ( ((int_64)$7 > (int_64)4999999999999) ){ goto $label$11 }
	$5 = ((float_64)(CASTING float_64)(int_64 *($2)) * (float_64)(float_64)2.5)
	$6 = ((float_64)(CASTING float_64)(int_64 $3) + (float_64)((float_64)$5 / (float_64)(float_64)1e4))
	if ( ((((float_64)$6 > (float_64)(float_64)5e8) | ((float_64)$6 != (float_64)$6)) == 0) ){ goto $label$10 }
	$7 = ((int_64))((int_64)500000000 - $3) * (int_64)10000
	*($0) = $7)
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $7) + (float_64)((float_64)((float_64)((float_64)((float_64)$6 + (float_64)(float_64)-5e8) * (float_64)(float_64)1e4) / (float_64)(float_64)2.5) * (float_64)(float_64)1.25)))
	goto $label$7 
	
.LABEL $label$12
	$7 = ((int_64))((int_64)300000000 - $3) * (int_64)10000
	*($0) = $7)
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $7) + (float_64)((float_64)(CASTING float_64)(int_64 ((int_64)((int_64)((int_64)$4 * (int_64)10000) + (int_64)-3000000000000) / (int_64)5)) * (float_64)(float_64)2.5)))
	goto $label$7 
	
.LABEL $label$11
	if ( ((int_64)$7 > (int_64)6999999999999) ){ goto $label$9 }
	$5 = ((float_64)(CASTING float_64)(int_64 *($2)) * (float_64)(float_64)1.25)
	$6 = ((float_64)(CASTING float_64)(int_64 $3) + (float_64)((float_64)$5 / (float_64)(float_64)1e4))
	if ( ((((float_64)$6 > (float_64)(float_64)7e8) | ((float_64)$6 != (float_64)$6)) == 0) ){ goto $label$8 }
	$7 = ((int_64))((int_64)700000000 - $3) * (int_64)10000
	*($0) = $7)
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $7) + (float_64)((float_64)((float_64)((float_64)((float_64)$6 + (float_64)(float_64)-7e8) * (float_64)(float_64)1e4) / (float_64)(float_64)1.25) * (float_64)(float_64)0.625)))
	goto $label$7 
	
.LABEL $label$10
	$7 = (Rounds 0)($5)
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$7 > (int_64)9999999999999) ){ goto $label$6 }
	$6 = ((float_64)(CASTING float_64)(int_64 $3) + (float_64)((float_64)$6 / (float_64)(float_64)1e4))
	$6 = ((float_64)(CASTING float_64)(int_64 *($2)) * (float_64)(float_64)0.625)
	$7 = ( ((int_64))((int_64)1000000000 - $3) * (int_64)10000) ? (Rounds 0)($6) : (((float_64)$6 > (float_64)(float_64)1e9) | ((float_64)$6 != (float_64)$6)) )
	goto $label$7 
	
.LABEL $label$8
	$7 = (Rounds 0)($5)
	
.LABEL $label$7
	*($0) = $7
	
.LABEL $label$6
	CALL prints([1248])
	CALL $12($0)
	CALL prints([128])
	CALL eosio_assert((uint_64)(((int_64)*($0) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1264])
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$3 = *($1)
	$4 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [108]) == (int_32)$7), [768])
	if ( $6 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $32($7, $6) + [108]) == (int_32)$7), [768])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0)
	*($9 + [12]) = $0
	*($9 + [8]) = $1
	*($9 + [16]) = $2
	CALL $49(($9 + [24]), $7, $3, ($9 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $195([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $26($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [752])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [752])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [752])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $42($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$4 = (*(($1 + [20])) - *($1 + [16]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL $195($4)
	*(($0 + [16])) = $4
	*(($0 + [24])) = ($4 + ($5 << [4]))
	*(($5 = ($0 + [20]))) = $4
	$2 = *(($1 + [16]))
	$3 = (*(($1 + [20])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL $195($4)
	*(($0 + [28])) = $5
	*(($0 + [36])) = ($5 + $4)
	*(($4 = ($0 + [32]))) = $5
	$3 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $3, $1)
	*($4) = (*($4) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $200(($0 + [16]))
	
.LABEL $label$1
	CALL $200(($0 + [28]))
	(unreachable)
	return (unreachable)
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $195(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $201($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $196(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $196($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN9bonusplat11issue_bonusERKNS_5shareE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_64 $37
	int_64 $38
	int_32 $39
	int_32 $40
	$40 = (*([0] + [4]) - [448])
	*([0] + [4]) = $40
	$35 = CALL current_time()
	$33 = [0]
	*((($40 + [384]) + [28])) = [0]
	*((($40 + [384]) + [32])) = [0]
	*($40 + [396]) = [0]
	*($40 + [400]) = [0]
	*($40 + [404]) = [0]
	*($40 + [408]) = [0]
	*($40 + [384]) = ((CASTING uint_32)(uint_64 ((uint_64)$35 / (uint_64)(int_64)1000000)) + [60])
	*($40 + [420]) = [0]
	*((($40 + [384]) + [40])) = [0]
	*((($40 + [384]) + [44])) = [0]
	*($40 + [432]) = [0]
	*((($40 + [384]) + [52])) = [0]
	*((($40 + [384]) + [56])) = [0]
	$35 = CALL current_time()
	*((($40 + [320]) + [28])) = [0]
	*((($40 + [320]) + [32])) = [0]
	*($40 + [332]) = [0]
	*($40 + [336]) = [0]
	*($40 + [340]) = [0]
	*($40 + [344]) = [0]
	*($40 + [320]) = ((CASTING uint_32)(uint_64 ((uint_64)$35 / (uint_64)(int_64)1000000)) + [60])
	*($40 + [356]) = [0]
	*((($40 + [320]) + [40])) = [0]
	*((($40 + [320]) + [44])) = [0]
	*($40 + [368]) = [0]
	*((($40 + [320]) + [52])) = [0]
	*((($40 + [320]) + [56])) = [0]
	$35 = CALL current_time()
	*((($40 + [256]) + [28])) = [0]
	*((($40 + [256]) + [32])) = [0]
	*($40 + [268]) = [0]
	*($40 + [272]) = [0]
	*($40 + [276]) = [0]
	*($40 + [280]) = [0]
	*($40 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$35 / (uint_64)(int_64)1000000)) + [60])
	*($40 + [292]) = [0]
	*((($40 + [256]) + [40])) = [0]
	*((($40 + [256]) + [44])) = [0]
	*($40 + [304]) = [0]
	*((($40 + [256]) + [52])) = [0]
	*((($40 + [256]) + [56])) = [0]
	*((($40 + [240]) + [8])) = *(($1 + [8]))
	*($40 + [240]) = *($1)
	*($40 + [232]) = (int_64)5261060
	*($40 + [224]) = (int_64)0
	CALL eosio_assert([1], [688])
	$35 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $35) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$17 = [1]
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$17 = [0]
	
.LABEL $label$1
	CALL eosio_assert($17, [80])
	*($40 + [216]) = (int_64)5261060
	*($40 + [208]) = (int_64)0
	CALL eosio_assert([1], [688])
	$35 = (int_64)20551
	$33 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $35) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$17 = [1]
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$17 = [0]
	
.LABEL $label$6
	CALL eosio_assert($17, [80])
	*($40 + [200]) = (int_64)1397703940
	*($40 + [192]) = (int_64)0
	CALL eosio_assert([1], [688])
	$35 = (int_64)5459781
	$33 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $35) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$17 = [1]
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$17 = [0]
	
.LABEL $label$11
	CALL eosio_assert($17, [80])
	*($40 + [192]) = ((int_64)((int_64)*($1 + [16]) * (int_64)12000) / (int_64)1000000)
	CALL prints([112])
	CALL $12(($40 + [192]))
	CALL prints([128])
	if ( ((int_64)*($40 + [192]) <= (int_64)*($40 + [240])) ){ goto $label$17 }
	*((($40 + [192]) + [8])) = *((($40 + [240]) + [8]))
	*($40 + [192]) = *($40 + [240])
	*($40 + [240]) = (int_64)0
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)*(($40 + [200])) == (int_64)*($40 + [248])), [144])
	$35 = (int_64)
	*($40 + [240]) = $35(*($40 + [240]) - *($40 + [192])))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($40 + [240]) < (int_64)4611686018427387904), [224])
	
.LABEL $label$16
	*($40) = (int_64)1
	$2 = ($0 + [136])
	CALL $13($2, ($40 + [192]), $40)
	$39 = [0]
	$27 = [0]
	$19 = [0]
	$21 = ($1 + [36])
	if ( ((int_32)*($21) == (int_32)*($1 + [32])) ){ goto $label$23 }
	$12 = ($0 + [408])
	$3 = ($0 + [184])
	$16 = (($40 + [384]) + [36])
	$15 = ($40 + [32])
	$14 = ($40 + [16])
	$13 = (($40 + [48]) | [1])
	$11 = (($40 + [320]) + [36])
	$10 = (($40 + [256]) + [36])
	$9 = (($40 + [64]) + [24])
	$8 = (($40 + [64]) + [8])
	$7 = (($40 + [48]) | [1])
	$6 = (($40 + [120]) + [24])
	$4 = (($40 + [104]) | [1])
	$5 = (($40 + [120]) + [8])
	$29 = ($5 + [4])
	$30 = (($40 + [320]) + [44])
	$31 = ($40 + [28])
	$32 = ($40 + [20])
	$20 = (int_64)0
	$19 = [0]
	$27 = [0]
	$39 = [0]
	
.LOOP $label$24:
	*(($22 = (($40 + [176]) + [8]))) = (int_64)5261060
	*($40 + [176]) = (int_64)0
	CALL eosio_assert([1], [688])
	$35 = (uint_64)*($22) >> (uint_64)(int_64)8)
	$33 = [0]
	
.LOOP $label$26:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $35) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$17 = [1]
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	CALL eosio_assert($17, [80])
	$23 = ((int_32)(CASTING uint_32)(uint_64 $20) * (int_32)[40])
	$24 = ($1 + [32])
	CALL _ZN9bonusplat8caltokenERKN5eosio5assetE(($40 + [160]), $0, ((*($24) + $23) + [8]))
	CALL prints([256])
	CALL printi($20)
	CALL prints([272])
	CALL prints([288])
	CALL printi(*($40 + [160]))
	CALL prints([128])
	CALL $15($3, (*($24) + $23), $0)
	if ( ((int_64)*($40 + [160]) < (int_64)1) ){ goto $label$29 }
	$25 = (($40 + [224]) + [8])
	$26 = (($40 + [160]) + [8])
	CALL eosio_assert(((int_64)*($26) == (int_64)*($25)), [304])
	$35 = ((int_64)*($40 + [224]) + (int_64)*($40 + [160]))
	*($40 + [224]) = $35
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($40 + [224]) < (int_64)4611686018427387904), [384])
	$38 = *($0)
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [416]
	$36 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$35 > (uint_64)(int_64)5) ){ goto $label$35 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$17 = ($17 + [165])
	goto $label$33 
	
.LABEL $label$35
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$31
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$37 | (int_64)$36)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$30 }
	*($8) = $36
	*($40 + [64]) = $38
	$35 = (int_64)0
	$37 = (int_64)59
	$33 = [432]
	$36 = (int_64)0
	
.LOOP $label$36:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$37 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$17 = ($17 + [165])
	goto $label$38 
	
.LABEL $label$39
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($17 & [31])) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$37
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$34 | (int_64)$36)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$36 }
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [448]
	$38 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$35 > (uint_64)(int_64)4) ){ goto $label$45 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$17 = ($17 + [165])
	goto $label$43 
	
.LABEL $label$45
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$41
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$38 = ((int_64)$37 | (int_64)$38)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$40 }
	$17 = *($24)
	*(($27 = (($40 + [104]) + [8]))) = [0]
	*($40 + [104]) = (int_64)0
	$33 = CALL strlen([464])
	if ( ((uint_32)$33 >= (uint_32)[-16]) ){ goto $label$22 }
	$18 = ($17 + $23)
	if ( ((uint_32)$33 >= (uint_32)[11]) ){ goto $label$48 }
	*($40 + [104]) = ($33 << [1])
	$17 = $4
	if ( $33 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$28 = (($33 + [16]) & [-16])
	$17 = CALL $195($28)
	*($27) = $17
	*($40 + [104]) = ($28 | [1])
	*($40 + [108]) = $33
	
.LABEL $label$47
	CALL memcpy($17, [464], $33)
	
.LABEL $label$46
	*(($17 + $33)) = [0]
	$35 = *($18)
	*(($5 + [12])) = *((($40 + [160]) + [12]))
	*(($5 + [8])) = *($26)
	*($29) = *($40 + [164])
	*($40 + [120]) = $35
	*($5) = *($40 + [160])
	*(($6 + [8])) = *($27)
	*($6) = *($40 + [104])
	*($40 + [104]) = [0]
	*($40 + [108]) = [0]
	*($27) = [0]
	$33 = CALL $16($40, ($40 + [64]), $36, $38, ($40 + [120]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$49 }
	CALL $196(*((($40 + [120]) + [32])))
	
.LABEL $label$49
	if ( ((*($40 + [104]) & [1]) == 0) ){ goto $label$50 }
	CALL $196(*($27))
	
.LABEL $label$50
	$17 = (($40 + [320]) + [40])
	$18 = *($17)
	if ( ((uint_32)$18 >= (uint_32)*($30)) ){ goto $label$52 }
	CALL $17($18, $33)
	*($17) = (*($17) + [40])
	goto $label$51 
	
.LABEL $label$52
	CALL $18($11, $33)
	
.LABEL $label$51
	if ( ((int_64)*((*($24) + $23) + [24]) == (int_64)*($0)) ){ goto $label$53 }
	$35 = *($40 + [160])
	*($40 + [176]) = ((int_64)$35 / (int_64)10)
	if ( ((int_64)$35 < (int_64)10) ){ goto $label$53 }
	CALL eosio_assert(((int_64)*($22) == (int_64)*($25)), [304])
	$35 = ((int_64)*($40 + [224]) + (int_64)*($40 + [176]))
	*($40 + [224]) = $35
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($40 + [224]) < (int_64)4611686018427387904), [384])
	$38 = *($0)
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [416]
	$36 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$35 > (uint_64)(int_64)5) ){ goto $label$59 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$17 = ($17 + [165])
	goto $label$57 
	
.LABEL $label$59
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$55
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$37 | (int_64)$36)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$54 }
	*($27) = $36
	*($40 + [104]) = $38
	$35 = (int_64)0
	$37 = (int_64)59
	$33 = [432]
	$36 = (int_64)0
	
.LOOP $label$60:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$61 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$17 = ($17 + [165])
	goto $label$62 
	
.LABEL $label$63
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($17 & [31])) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$61
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$34 | (int_64)$36)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$60 }
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [448]
	$38 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$35 > (uint_64)(int_64)4) ){ goto $label$69 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$17 = ($17 + [165])
	goto $label$67 
	
.LABEL $label$69
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$65
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$38 = ((int_64)$37 | (int_64)$38)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$64 }
	$27 = *($24)
	*(($17 = (($40 + [48]) + [8]))) = [0]
	*($40 + [48]) = (int_64)0
	$33 = CALL strlen([480])
	if ( ((uint_32)$33 >= (uint_32)[-16]) ){ goto $label$21 }
	$18 = (($27 + $23) + [24])
	if ( ((uint_32)$33 >= (uint_32)[11]) ){ goto $label$72 }
	*($40 + [48]) = ($33 << [1])
	$27 = $7
	if ( $33 ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$25 = (($33 + [16]) & [-16])
	$27 = CALL $195($25)
	*($17) = $27
	*($40 + [48]) = ($25 | [1])
	*($40 + [52]) = $33
	
.LABEL $label$71
	CALL memcpy($27, [480], $33)
	
.LABEL $label$70
	*(($27 + $33)) = [0]
	*(($8 + [12])) = *((($40 + [176]) + [12]))
	*(($8 + [8])) = *($22)
	*(($8 + [4])) = *($40 + [180])
	*($40 + [64]) = *($18)
	*($8) = *($40 + [176])
	*(($9 + [8])) = *($17)
	*($9) = *($40 + [48])
	*($40 + [48]) = [0]
	*($40 + [52]) = [0]
	*($17) = [0]
	$33 = CALL $16(($40 + [120]), ($40 + [104]), $36, $38, ($40 + [64]))
	if ( ((*($9) & [1]) == 0) ){ goto $label$73 }
	CALL $196(*((($40 + [64]) + [32])))
	
.LABEL $label$73
	if ( ((*($40 + [48]) & [1]) == 0) ){ goto $label$74 }
	CALL $196(*($17))
	
.LABEL $label$74
	$17 = (($40 + [256]) + [40])
	$27 = *($17)
	if ( ((uint_32)$27 >= (uint_32)*((($40 + [256]) + [44]))) ){ goto $label$76 }
	CALL $17($27, $33)
	*($17) = (*($17) + [40])
	goto $label$75 
	
.LABEL $label$76
	CALL $18($10, $33)
	
.LABEL $label$75
	$33 = *((($40 + [120]) + [28]))
	if ( ($33 == 0) ){ goto $label$77 }
	*((($40 + [120]) + [32])) = $33
	CALL $196($33)
	
.LABEL $label$77
	$33 = *((($40 + [120]) + [16]))
	if ( ($33 == 0) ){ goto $label$78 }
	*((($40 + [120]) + [20])) = $33
	CALL $196($33)
	
.LABEL $label$78
	$19 = [1]
	
.LABEL $label$53
	$35 = *($40 + [160])
	$37 = *($26)
	CALL eosio_assert(((int_64)*($22) == (int_64)$37), [304])
	$35 = ((int_64)$35 + (int_64)*($40 + [176]))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)$35 < (int_64)4611686018427387904), [384])
	CALL eosio_assert([1], [512])
	CALL eosio_assert([1], [528])
	CALL eosio_assert(((int_64)$37 == (int_64)*((($40 + [208]) + [8]))), [304])
	$35 = ((int_64)*($40 + [208]) + (int_64)((int_64)$35 / (int_64)5))
	*($40 + [208]) = $35
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($40 + [208]) < (int_64)4611686018427387904), [384])
	$33 = *($31)
	if ( ($33 == 0) ){ goto $label$79 }
	*($15) = $33
	CALL $196($33)
	
.LABEL $label$79
	$33 = *($14)
	if ( ($33 == 0) ){ goto $label$80 }
	*($32) = $33
	CALL $196($33)
	
.LABEL $label$80
	$27 = [1]
	
.LABEL $label$29
	$33 = (*($24) + $23)
	if ( ((int_64)*($33 + [32]) == (int_64)*($0)) ){ goto $label$81 }
	CALL $19($40, $12, ($33 + [8]), ($33 + [32]))
	CALL prints([560])
	CALL printi(*($40))
	CALL prints([576])
	CALL printi(*($40 + [240]))
	if ( ((int_64)*($40) <= (int_64)*($40 + [240])) ){ goto $label$83 }
	*(($40 + [8])) = *((($40 + [240]) + [8]))
	*($40) = *($40 + [240])
	*($40 + [240]) = (int_64)0
	goto $label$82 
	
.LABEL $label$83
	CALL eosio_assert(((int_64)*(($40 + [8])) == (int_64)*((($40 + [240]) + [8]))), [144])
	$35 = (int_64)
	*($40 + [240]) = $35(*($40 + [240]) - *($40)))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($40 + [240]) < (int_64)4611686018427387904), [224])
	
.LABEL $label$82
	CALL $20($12, $40, ((*($24) + $23) + [32]), [1])
	
.LABEL $label$81
	*($8) = (int_64)1397703940
	*($40 + [64]) = (int_64)0
	CALL eosio_assert([1], [688])
	$35 = (uint_64)*($8) >> (uint_64)(int_64)8)
	$33 = [0]
	
.LOOP $label$86:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $35) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$87 }
	
.LOOP $label$88:
	$35 = (uint_64)$35 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$35) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$88 }
	
.LABEL $label$87
	$17 = [1]
	$33 = ($33 + [1])
	if ( ((int_32)$33 < (int_32)[7]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	$17 = [0]
	
.LABEL $label$84
	CALL eosio_assert($17, [80])
	$33 = (*($24) + $23)
	if ( ((int_64)*($33 + [24]) == (int_64)*($0)) ){ goto $label$92 }
	*($40 + [64]) = ((int_64)*($33 + [8]) / (int_64)2000)
	CALL prints([592])
	CALL printi(*($40 + [64]))
	if ( ((int_64)*($40 + [64]) <= (int_64)*($40 + [240])) ){ goto $label$94 }
	*($8) = *((($40 + [240]) + [8]))
	*($40 + [64]) = *($40 + [240])
	*($40 + [240]) = (int_64)0
	goto $label$93 
	
.LABEL $label$94
	CALL eosio_assert(((int_64)*($8) == (int_64)*((($40 + [240]) + [8]))), [144])
	$35 = (int_64)
	*($40 + [240]) = $35(*($40 + [240]) - *($40 + [64])))
	CALL eosio_assert(((int_64)$35 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($40 + [240]) < (int_64)4611686018427387904), [224])
	
.LABEL $label$93
	if ( ((int_64)*($40 + [64]) < (int_64)1) ){ goto $label$91 }
	$33 = (*($24) + $23)
	if ( ((int_64)*($33 + [24]) != (int_64)*($33 + [32])) ){ goto $label$95 }
	CALL $20($12, ($40 + [64]), ($33 + [32]), [0])
	goto $label$92 
	
.LABEL $label$95
	$26 = ($33 + [24])
	$38 = *($0)
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [416]
	$36 = (int_64)0
	
.LOOP $label$96:
	if ( ((uint_64)$35 > (uint_64)(int_64)5) ){ goto $label$101 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$100 }
	$17 = ($17 + [165])
	goto $label$99 
	
.LABEL $label$101
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$100
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$99
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$98
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$97
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$37 | (int_64)$36)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$96 }
	*((($40 + [104]) + [8])) = $36
	*($40 + [104]) = $38
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [608]
	$36 = (int_64)0
	
.LOOP $label$102:
	if ( ((uint_64)$35 > (uint_64)(int_64)10) ){ goto $label$107 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$106 }
	$17 = ($17 + [165])
	goto $label$105 
	
.LABEL $label$107
	$37 = (int_64)0
	if ( ((int_64)$35 == (int_64)11) ){ goto $label$104 }
	goto $label$103 
	
.LABEL $label$106
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$105
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$104
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$103
	$33 = ($33 + [1])
	$34 = ((int_64)$34 + (int_64)-5)
	$36 = ((int_64)$37 | (int_64)$36)
	$35 = ((int_64)$35 + (int_64)1)
	if ( ((int_64)$35 != (int_64)13) ){ goto $label$102 }
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [624]
	$38 = (int_64)0
	
.LOOP $label$108:
	if ( ((uint_64)$35 > (uint_64)(int_64)7) ){ goto $label$113 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$17 = ($17 + [165])
	goto $label$111 
	
.LABEL $label$113
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$112
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$110
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$109
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$38 = ((int_64)$37 | (int_64)$38)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$108 }
	*(($17 = (($40 + [48]) + [8]))) = [0]
	*($40 + [48]) = (int_64)0
	$33 = CALL strlen([480])
	if ( ((uint_32)$33 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$33 >= (uint_32)[11]) ){ goto $label$116 }
	*($40 + [48]) = ($33 << [1])
	$22 = $13
	if ( $33 ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$116
	$18 = (($33 + [16]) & [-16])
	$22 = CALL $195($18)
	*($17) = $22
	*($40 + [48]) = ($18 | [1])
	*($40 + [52]) = $33
	
.LABEL $label$115
	CALL memcpy($22, [480], $33)
	
.LABEL $label$114
	*(($22 + $33)) = [0]
	*(($40 + [8])) = *($26)
	*(($14 + [4])) = *($40 + [68])
	*(($14 + [12])) = *((($40 + [64]) + [12]))
	*(($14 + [8])) = *($8)
	*($40) = *($0)
	*($14) = *($40 + [64])
	*(($15 + [8])) = *($17)
	*($15) = *($40 + [48])
	*($40 + [48]) = [0]
	*($40 + [52]) = [0]
	*($17) = [0]
	$33 = CALL $21(($40 + [120]), ($40 + [104]), $36, $38, $40)
	if ( ((*($15) & [1]) == 0) ){ goto $label$117 }
	CALL $196(*(($40 + [40])))
	
.LABEL $label$117
	if ( ((*($40 + [48]) & [1]) == 0) ){ goto $label$118 }
	CALL $196(*($17))
	
.LABEL $label$118
	$17 = (($40 + [384]) + [40])
	$22 = *($17)
	if ( ((uint_32)$22 >= (uint_32)*((($40 + [384]) + [44]))) ){ goto $label$120 }
	CALL $17($22, $33)
	*($17) = (*($17) + [40])
	goto $label$119 
	
.LABEL $label$120
	CALL $18($16, $33)
	
.LABEL $label$119
	$33 = *((($40 + [120]) + [28]))
	if ( ($33 == 0) ){ goto $label$121 }
	*((($40 + [120]) + [32])) = $33
	CALL $196($33)
	
.LABEL $label$121
	$33 = *((($40 + [120]) + [16]))
	if ( ($33 == 0) ){ goto $label$122 }
	*((($40 + [120]) + [20])) = $33
	CALL $196($33)
	
.LABEL $label$122
	$39 = [1]
	
.LABEL $label$92
	if ( ((int_64)*($40 + [64]) > (int_64)0) ){ goto $label$90 }
	
.LABEL $label$91
	if ( ((int_64)*($40 + [176]) < (int_64)1) ){ goto $label$89 }
	
.LABEL $label$90
	CALL $22($3, ((*($24) + $23) + [24]), ($40 + [64]), ($40 + [176]))
	
.LABEL $label$89
	$20 = ((int_64)$20 + (int_64)1)
	if ( ((CASTING uint_32)(uint_64 $20) <= ((int_32)(*($21) - *($24)) / (int_32)[40])) ){ goto $label$24 }
	
.LABEL $label$23
	$35 = (int_64)0
	if ( ((int_64)*($40 + [208]) <= (int_64)0) ){ goto $label$123 }
	CALL eosio_assert(((int_64)*((($40 + [208]) + [8])) == (int_64)*((($40 + [224]) + [8]))), [304])
	$37 = ((int_64)*($40 + [224]) + (int_64)*($40 + [208]))
	*($40 + [224]) = $37
	CALL eosio_assert(((int_64)$37 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($40 + [224]) < (int_64)4611686018427387904), [384])
	*($40) = (int_64)7
	CALL $13($2, ($40 + [208]), $40)
	$38 = *($0)
	$34 = (int_64)59
	$33 = [416]
	$36 = (int_64)0
	
.LOOP $label$124:
	if ( ((uint_64)$35 > (uint_64)(int_64)5) ){ goto $label$129 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$17 = ($17 + [165])
	goto $label$127 
	
.LABEL $label$129
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$128
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$126
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$125
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$37 | (int_64)$36)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$124 }
	*($40 + [72]) = $36
	*($40 + [64]) = $38
	$35 = (int_64)0
	$37 = (int_64)59
	$33 = [432]
	$36 = (int_64)0
	
.LOOP $label$130:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$131 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$133 }
	$17 = ($17 + [165])
	goto $label$132 
	
.LABEL $label$133
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$132
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($17 & [31])) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$131
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$34 | (int_64)$36)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$130 }
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [448]
	$38 = (int_64)0
	
.LOOP $label$134:
	if ( ((uint_64)$35 > (uint_64)(int_64)4) ){ goto $label$139 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$138 }
	$17 = ($17 + [165])
	goto $label$137 
	
.LABEL $label$139
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$136 }
	goto $label$135 
	
.LABEL $label$138
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$137
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$136
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$135
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$38 = ((int_64)$37 | (int_64)$38)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$134 }
	$35 = (int_64)0
	$37 = (int_64)59
	$33 = [640]
	$20 = (int_64)0
	
.LOOP $label$140:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$141 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$17 = ($17 + [165])
	goto $label$142 
	
.LABEL $label$143
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($17 & [31])) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$141
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$20 = ((int_64)$34 | (int_64)$20)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$140 }
	*(($40 + [184])) = [0]
	*($40 + [176]) = (int_64)0
	$33 = CALL strlen([656])
	if ( ((uint_32)$33 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$33 >= (uint_32)[11]) ){ goto $label$146 }
	*($40 + [176]) = ($33 << [1])
	$17 = (($40 + [176]) | [1])
	if ( $33 ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$146
	$24 = (($33 + [16]) & [-16])
	$17 = CALL $195($24)
	*($40 + [176]) = ($24 | [1])
	*($40 + [184]) = $17
	*($40 + [180]) = $33
	
.LABEL $label$145
	CALL memcpy($17, [656], $33)
	
.LABEL $label$144
	*(($17 + $33)) = [0]
	*(($40 + [140])) = *((($40 + [208]) + [12]))
	*(($40 + [136])) = *((($40 + [208]) + [8]))
	*((($40 + [120]) + [12])) = *($40 + [212])
	*($40 + [120]) = $20
	*($40 + [128]) = *($40 + [208])
	$33 = (($40 + [176]) + [8])
	*(($17 = ($40 + [152]))) = *($33)
	*($40 + [144]) = *($40 + [176])
	*($40 + [176]) = [0]
	*($40 + [180]) = [0]
	*($33) = [0]
	$33 = CALL $16($40, ($40 + [64]), $36, $38, ($40 + [120]))
	if ( ((*($40 + [144]) & [1]) == 0) ){ goto $label$147 }
	CALL $196(*($17))
	
.LABEL $label$147
	if ( ((*($40 + [176]) & [1]) == 0) ){ goto $label$148 }
	CALL $196(*(($40 + [184])))
	
.LABEL $label$148
	$17 = (($40 + [320]) + [40])
	$24 = *($17)
	if ( ((uint_32)$24 >= (uint_32)*(($40 + [364]))) ){ goto $label$151 }
	CALL $17($24, $33)
	*($17) = (*($17) + [40])
	$17 = *($33 + [28])
	if ( $17 ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$151
	CALL $18(($40 + [356]), $33)
	$17 = *($33 + [28])
	if ( ($17 == 0) ){ goto $label$149 }
	
.LABEL $label$150
	*(($33 + [32])) = $17
	CALL $196($17)
	
.LABEL $label$149
	$17 = *($33 + [16])
	if ( ($17 == 0) ){ goto $label$152 }
	*(($33 + [20])) = $17
	CALL $196($17)
	
.LABEL $label$152
	$27 = [1]
	
.LABEL $label$123
	*($40) = (int_64)4
	CALL $13($2, ($40 + [224]), $40)
	CALL prints([576])
	$35 = *($40 + [240])
	CALL printi($35)
	if ( ((int_64)$35 < (int_64)1) ){ goto $label$158 }
	$38 = *($0)
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [416]
	$36 = (int_64)0
	
.LOOP $label$159:
	if ( ((uint_64)$35 > (uint_64)(int_64)5) ){ goto $label$164 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$163 }
	$17 = ($17 + [165])
	goto $label$162 
	
.LABEL $label$164
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$163
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$162
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$161
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$160
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$36 = ((int_64)$37 | (int_64)$36)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$159 }
	*($40 + [72]) = $36
	*($40 + [64]) = $38
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [608]
	$36 = (int_64)0
	
.LOOP $label$165:
	if ( ((uint_64)$35 > (uint_64)(int_64)10) ){ goto $label$170 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$169 }
	$17 = ($17 + [165])
	goto $label$168 
	
.LABEL $label$170
	$37 = (int_64)0
	if ( ((int_64)$35 == (int_64)11) ){ goto $label$167 }
	goto $label$166 
	
.LABEL $label$169
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$168
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$167
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$166
	$33 = ($33 + [1])
	$34 = ((int_64)$34 + (int_64)-5)
	$36 = ((int_64)$37 | (int_64)$36)
	$35 = ((int_64)$35 + (int_64)1)
	if ( ((int_64)$35 != (int_64)13) ){ goto $label$165 }
	$35 = (int_64)0
	$34 = (int_64)59
	$33 = [624]
	$38 = (int_64)0
	
.LOOP $label$171:
	if ( ((uint_64)$35 > (uint_64)(int_64)7) ){ goto $label$176 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$175 }
	$17 = ($17 + [165])
	goto $label$174 
	
.LABEL $label$176
	$37 = (int_64)0
	if ( ((uint_64)$35 <= (uint_64)(int_64)11) ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$175
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$174
	$37 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$173
	$37 = ((int_64)((int_64)$37 & (int_64)31) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$172
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$38 = ((int_64)$37 | (int_64)$38)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$171 }
	$35 = (int_64)0
	$37 = (int_64)59
	$33 = [640]
	$20 = (int_64)0
	
.LOOP $label$177:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$178 }
	$17 = *($33)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$180 }
	$17 = ($17 + [165])
	goto $label$179 
	
.LABEL $label$180
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$179
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($17 & [31])) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$178
	$33 = ($33 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$20 = ((int_64)$34 | (int_64)$20)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$177 }
	*(($40 + [184])) = [0]
	*($40 + [176]) = (int_64)0
	$33 = CALL strlen([672])
	if ( ((uint_32)$33 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$33 >= (uint_32)[11]) ){ goto $label$157 }
	*($40 + [176]) = ($33 << [1])
	$17 = (($40 + [176]) | [1])
	if ( $33 ){ goto $label$156 }
	goto $label$155 
	
.LABEL $label$158
	if ( ($39 & [1]) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$157
	$24 = (($33 + [16]) & [-16])
	$17 = CALL $195($24)
	*($40 + [176]) = ($24 | [1])
	*($40 + [184]) = $17
	*($40 + [180]) = $33
	
.LABEL $label$156
	CALL memcpy($17, [672], $33)
	
.LABEL $label$155
	*(($17 + $33)) = [0]
	*(($40 + [20])) = *($40 + [244])
	*($40 + [8]) = $20
	*(($40 + [28])) = *(($40 + [252]))
	*(($40 + [24])) = *((($40 + [240]) + [8]))
	*($40) = *($0)
	*($40 + [16]) = *($40 + [240])
	$33 = (($40 + [176]) + [8])
	*(($17 = ($40 + [40]))) = *($33)
	*($40 + [32]) = *($40 + [176])
	*($40 + [176]) = [0]
	*($40 + [180]) = [0]
	*($33) = [0]
	$33 = CALL $21(($40 + [120]), ($40 + [64]), $36, $38, $40)
	if ( ((*($40 + [32]) & [1]) == 0) ){ goto $label$181 }
	CALL $196(*($17))
	
.LABEL $label$181
	if ( ((*($40 + [176]) & [1]) == 0) ){ goto $label$182 }
	CALL $196(*(($40 + [184])))
	
.LABEL $label$182
	$17 = (($40 + [384]) + [40])
	$24 = *($17)
	if ( ((uint_32)$24 >= (uint_32)*(($40 + [428]))) ){ goto $label$184 }
	CALL $17($24, $33)
	*($17) = (*($17) + [40])
	goto $label$183 
	
.LABEL $label$184
	CALL $18(($40 + [420]), $33)
	
.LABEL $label$183
	*($40) = (int_64)6
	CALL $13($2, ($40 + [240]), $40)
	$17 = *($33 + [28])
	if ( ($17 == 0) ){ goto $label$185 }
	*(($33 + [32])) = $17
	CALL $196($17)
	
.LABEL $label$185
	$17 = *($33 + [16])
	if ( ($17 == 0) ){ goto $label$154 }
	*(($33 + [20])) = $17
	CALL $196($17)
	
.LABEL $label$154
	$35 = *($0)
	$37 = CALL current_time()
	*($40 + [8]) = $35
	*($40) = $37
	$35 = *($0)
	CALL $23(($40 + [120]), ($40 + [384]))
	$33 = *($40 + [120])
	CALL send_deferred($40, $35, $33, (*($40 + [124]) - $33), [1])
	$33 = *($40 + [120])
	if ( ($33 == 0) ){ goto $label$153 }
	*($40 + [124]) = $33
	CALL $196($33)
	
.LABEL $label$153
	if ( (($27 & [1]) == 0) ){ goto $label$186 }
	$37 = *($0)
	$34 = CALL current_time()
	$35 = ((int_64)$34 + (int_64)1)
	*($40) = $35
	*($40 + [8]) = ((int_64)$37 + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($35 <= $34)) : (int_64)($35 == 0) ))
	$35 = *($0)
	CALL $23(($40 + [120]), ($40 + [320]))
	$33 = *($40 + [120])
	CALL send_deferred($40, $35, $33, (*($40 + [124]) - $33), [1])
	$33 = *($40 + [120])
	if ( ($33 == 0) ){ goto $label$186 }
	*($40 + [124]) = $33
	CALL $196($33)
	
.LABEL $label$186
	if ( (($19 & [1]) == 0) ){ goto $label$187 }
	$37 = *($0)
	$34 = CALL current_time()
	$35 = ((int_64)$34 + (int_64)2)
	*($40) = $35
	*($40 + [8]) = ((int_64)$37 + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($35 <= $34)) : (uint_64)($35 <= (int_64)2) ))
	$35 = *($0)
	CALL $23(($40 + [120]), ($40 + [256]))
	$33 = *($40 + [120])
	CALL send_deferred($40, $35, $33, (*($40 + [124]) - $33), [1])
	$33 = *($40 + [120])
	if ( ($33 == 0) ){ goto $label$187 }
	*($40 + [124]) = $33
	CALL $196($33)
	
.LABEL $label$187
	CALL $24(($40 + [256]))
	CALL $24(($40 + [320]))
	CALL $24(($40 + [384]))
	*([0] + [4]) = ($40 + [448])
	return (unreachable)
	
.LABEL $label$22
	CALL $197(($40 + [104]))
	
.LABEL $label$21
	CALL $197(($40 + [48]))
	
.LABEL $label$20
	CALL $197(($40 + [48]))
	
.LABEL $label$19
	CALL $197(($40 + [176]))
	
.LABEL $label$18
	CALL $197(($40 + [176]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $12 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([1328])
	CALL prints_l($2, $3)
	CALL prints([1344])
	CALL $69($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	if ( ((int_64)*($1) < (int_64)1) ){ goto $label$1 }
	$3 = ($0 + [8])
	$4 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $58($3, $4)
	goto $label$2 
	
.LABEL $label$3
	CALL $65($5, $3, *($0), ($5 + [8]))
	
.LABEL $label$2
	$4 = [0]
	$0 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-5969222238916837376, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $58($3, $0)
	
.LABEL $label$4
	*($5 + [4]) = $1
	*($5) = $2
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [880])
	CALL $66($3, $4, (int_64)0, $5)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $201(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $201(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $196(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $196(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $195(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $17($9, $1)
	$3 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($7 + [-4])
	*($1) = *($6)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($5) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($7 + [8])
	*($1) = *($6)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($5) = *($8)
	*($8) = [0]
	*($6) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $196($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $196($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $196($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [688])
	$8 = [0]
	$7 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [80])
	$7 = *($3)
	$4 = *($2)
	$5 = *(($1 + [72]))
	$2 = *(($1 + [76]))
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	$8 = ($2 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$7) ){ goto $label$6 }
	$2 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $3) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = ($1 + [48])
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	$8 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$6), [768])
	goto $label$8 
	
.LABEL $label$9
	$8 = CALL $43($6, CALL $fimport$4(*(($1 + [48])), *(($1 + [56])), (int_64)4849595776591986688, $7))
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$6), [768])
	
.LABEL $label$8
	*($0) = ((uint_64)((int_64)( ( $4 ? (int_64)0 : *($8 + [32]) ) ? (int_64)0 : $8 ) * (int_64)*($8 + [24])) / (uint_64)(int_64)1000000)
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $186($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $198($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $195($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $198($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $196($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $197($7)
	return (unreachable)
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $184($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1136])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $26($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1136])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $180 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	$4 = *($1)
	$3 = *(*($3))
	*($1) = *($3)
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	CALL eosio_assert([1], [752])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [752])
	CALL memcpy(($6 | [8]), $5, [4])
	CALL db_update_i64(*($1 + [16]), $2, $6, [12])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [688])
	$7 = [0]
	$6 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	CALL eosio_assert(((int_64)5261060 == (int_64)*($2 + [8])), [2640])
	*($10 + [40]) = (int_64)5261060
	*($10 + [32]) = (int_64)0
	CALL eosio_assert([1], [688])
	$6 = (int_64)20551
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [80])
	CALL eosio_assert([1], [688])
	$6 = (int_64)20551
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [80])
	*((($10 + [32]) + [8])) = *(($2 + [8]))
	*($10 + [32]) = *($2)
	*($10 + [28]) = [0]
	$6 = *($1)
	$8 = *(($0 + [72]))
	$1 = *(($0 + [76]))
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$16 }
	$7 = ($1 + [-24])
	$3 = ([0] - $8)
	
.LOOP $label$17:
	if ( ((int_64)*(*($7)) == (int_64)$6) ){ goto $label$16 }
	$1 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$3 = ($0 + [48])
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$19 }
	$7 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [768])
	*($10 + [20]) = $7
	*($10 + [16]) = $3
	$8 = (($10 + [16]) | [4])
	goto $label$18 
	
.LABEL $label$19
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $6)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$20 }
	$7 = CALL $32($3, $7)
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [768])
	*($10 + [20]) = $7
	*($10 + [16]) = $3
	$8 = (($10 + [16]) | [4])
	goto $label$18 
	
.LABEL $label$20
	$7 = [0]
	*($10 + [20]) = [0]
	*($10 + [16]) = $3
	$8 = (($10 + [16]) | [4])
	
.LABEL $label$18
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2720])
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$21 }
	CALL $76($0, ($10 + [16]))
	$4 = *($8)
	$1 = (*(($4 + [100])) - *($4 + [96]))
	$7 = (((int_32)$1 / (int_32)[24]) + [-1])
	*($10 + [12]) = $7
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$22 }
	$9 = *($10 + [32])
	$4 = *($4 + [96])
	$1 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = *($1 + [8])
	if ( ((int_64)$6 > (int_64)$9) ){ goto $label$25 }
	$1 = ($1 + [8])
	$5 = (($10 + [32]) + [8])
	
.LOOP $label$26:
	if ( ((int_64)$6 == (int_64)$9) ){ goto $label$24 }
	*($10 + [28]) = (*($10 + [28]) + [1])
	CALL eosio_assert(((int_64)*((($4 + ((int_32)$7 * (int_32)[24])) + [16])) == (int_64)*($5)), [144])
	$6 = (int_64)
	*($10 + [32]) = $6(*($10 + [32]) - *($1)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($10 + [32]) < (int_64)4611686018427387904), [224])
	$7 = (*($10 + [12]) + [-1])
	*($10 + [12]) = $7
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$22 }
	$4 = *(*($8) + [96])
	$2 = ($4 + ((int_32)$7 * (int_32)[24]))
	$1 = ($2 + [8])
	$9 = *($10 + [32])
	$6 = *($2 + [8])
	if ( ((int_64)$6 <= (int_64)$9) ){ goto $label$26 }
	
.LABEL $label$25
	$7 = *($10 + [20])
	*($10 + [4]) = ($10 + [32])
	*($10) = ($10 + [12])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [880])
	CALL $117($3, $7, (int_64)0, $10)
	goto $label$23 
	
.LABEL $label$24
	$7 = *($10 + [20])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [880])
	CALL $118($3, $7, (int_64)0, $10)
	
.LABEL $label$23
	*($10 + [32]) = (int_64)0
	
.LABEL $label$22
	if ( ((int_32)*($10 + [28]) < (int_32)[1]) ){ goto $label$27 }
	$7 = *($10 + [20])
	*($10) = ($10 + [28])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [880])
	CALL $119($3, $7, (int_64)0, $10)
	
.LABEL $label$27
	if ( ((int_64)*($10 + [32]) < (int_64)1) ){ goto $label$21 }
	$7 = *($8)
	CALL eosio_assert(((int_64)*(($7 + [40])) == (int_64)*(($10 + [40]))), [2768])
	CALL eosio_assert(((int_64)*($7 + [32]) >= (int_64)*($10 + [32])), [2432])
	$7 = *($10 + [20])
	*($10) = ($10 + [32])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [880])
	CALL $120($3, $7, (int_64)0, $10)
	*($10) = (int_64)2
	CALL $97(($0 + [88]), ($10 + [32]), $10)
	
.LABEL $label$21
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($10 = $9) + [24]) = *($1 + [8])
	$4 = *($1)
	$3 = (*($1 + [96]) + ((int_32)*(*($3)) * (int_32)[24]))
	$6 = *($3 + [4])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($3 + [16]))), [144])
	$8 = (int_64)
	*($3 + [8]) = $8(*($3 + [8]) - *($6)))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [192])
	CALL eosio_assert(((int_64)*($3 + [8]) < (int_64)4611686018427387904), [224])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$5 = *($1 + [96])
	$6 = *(($1 + [100]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $34(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($10 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN9bonusplat12undelegatebwEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	*($11 + [120]) = $1
	CALL require_auth($1)
	CALL eosio_assert([1], [688])
	$6 = [0]
	$1 = (int_64)20551
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [80])
	CALL eosio_assert(((int_64)5261060 == (int_64)*($2 + [8])), [2640])
	$1 = (int_64)0
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [2656])
	CALL $116(($0 + [184]), ($11 + [120]), $2)
	$10 = *($0)
	$7 = (int_64)59
	$6 = [416]
	$8 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$11 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$11
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$7
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$6 }
	*($11 + [72]) = $8
	*($11 + [64]) = $10
	$1 = (int_64)0
	$9 = (int_64)59
	$6 = [432]
	$8 = (int_64)0
	
.LOOP $label$12:
	$7 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$13 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$13
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$12 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [624]
	$10 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$21 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$4 = ($4 + [165])
	goto $label$19 
	
.LABEL $label$21
	$9 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	*(($11 + [8])) = [0]
	*($11) = (int_64)0
	$6 = CALL strlen([2704])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$25 }
	*($11) = ($6 << [1])
	$4 = ($11 | [1])
	if ( $6 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$5 = (($6 + [16]) & [-16])
	$4 = CALL $195($5)
	*($11) = ($5 | [1])
	*($11 + [8]) = $4
	*($11 + [4]) = $6
	
.LABEL $label$24
	CALL memcpy($4, [2704], $6)
	
.LABEL $label$23
	*(($4 + $6)) = [0]
	*(($11 + [44])) = *(($2 + [12]))
	*(($11 + [40])) = *(($2 + [8]))
	*(($11 + [36])) = *(($2 + [4]))
	*($11 + [16]) = *($0)
	*($11 + [32]) = *($2)
	*($11 + [24]) = *($11 + [120])
	$6 = ($11 + [8])
	*(($11 + [56])) = *($6)
	*($11 + [48]) = *($11)
	*($11) = [0]
	*($11 + [4]) = [0]
	*($6) = [0]
	$6 = CALL $21(($11 + [80]), ($11 + [64]), $8, $10, ($11 + [16]))
	CALL $87(($11 + [128]), $6)
	$4 = *($11 + [128])
	CALL send_inline($4, (*($11 + [132]) - $4))
	$4 = *($11 + [128])
	if ( ($4 == 0) ){ goto $label$26 }
	*($11 + [132]) = $4
	CALL $196($4)
	
.LABEL $label$26
	$4 = *($6 + [28])
	if ( ($4 == 0) ){ goto $label$27 }
	*(($6 + [32])) = $4
	CALL $196($4)
	
.LABEL $label$27
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$28 }
	*(($6 + [20])) = $4
	CALL $196($4)
	
.LABEL $label$28
	if ( ((*(($11 + [48])) & [1]) == 0) ){ goto $label$29 }
	CALL $196(*(($11 + [56])))
	
.LABEL $label$29
	if ( ((*($11) & [1]) == 0) ){ goto $label$30 }
	CALL $196(*(($11 + [8])))
	
.LABEL $label$30
	*([0] + [4]) = ($11 + [144])
	return (unreachable)
	
.LABEL $label$22
	CALL $197($11)
}

void .FUNC _ZN9bonusplat8referralEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = $2
	*($10) = $3
	$6 = *(($0 + [104]))
	$9 = *(($0 + [108]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$1 }
	$8 = ($9 + [-24])
	$4 = ([0] - $6)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$9 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [80])
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$4 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$5), [768])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$9 = CALL db_find_i64(*(($0 + [80])), *(($0 + [88])), (int_64)7073251608721096704, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $113($5, $9)
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$5), [768])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2544])
	CALL require_auth($1)
	$7 = *(($0 + [256]))
	$9 = *(($0 + [260]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$5 }
	$8 = ($9 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$6:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$5 }
	$9 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = ($0 + [232])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$8 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [108]) == (int_32)$6), [768])
	goto $label$7 
	
.LABEL $label$8
	$8 = [0]
	$5 = CALL db_find_i64(*(($0 + [232])), *(($0 + [240])), (int_64)-6030912142679474176, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $32($6, $5)
	CALL eosio_assert(((int_32)*($8 + [108]) == (int_32)$6), [768])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2576])
	$7 = *(($0 + [256]))
	$9 = *(($0 + [260]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$9 }
	$8 = ($9 + [-24])
	$4 = ([0] - $7)
	
.LOOP $label$10:
	if ( ((int_64)*(*($8)) == (int_64)$3) ){ goto $label$9 }
	$9 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = ($0 + [184])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$12 }
	$8 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [108]) == (int_32)$6), [768])
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	$9 = CALL db_find_i64(*(($0 + [232])), *(($0 + [240])), (int_64)-6030912142679474176, $3)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	$8 = CALL $32($6, $9)
	CALL eosio_assert(((int_32)*($8 + [108]) == (int_32)$6), [768])
	
.LABEL $label$11
	CALL eosio_assert(($8 == 0), [2608])
	CALL $15($5, $10, ($10 + [8]))
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1104])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $195([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1136])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $114(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$3 = *($0 + [4])
	*($1) = [0]
	*($1 + [8]) = (int_64)1
	$2 = *($0)
	*($1 + [16]) = ((int_64)*(*($3 + [8])) + (int_64)((uint_64)*(*($3)) / (uint_64)*(*($3 + [4]))))
	if ( (*([0] + [48]) == 0) ){ goto $label$2 }
	$5 = *([0] + [52])
	goto $label$1 
	
.LABEL $label$2
	if ( (*([0] + [38]) == 0) ){ goto $label$4 }
	$4 = *([0] + [40])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $4
	
.LABEL $label$3
	*([0] + [48]) = [1]
	$5 = (CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000))
	*([0] + [52]) = $5
	
.LABEL $label$1
	*($1 + [24]) = $5
	*($1 + [28]) = *(*($3 + [12]))
	$7 = $7
	$3 = ($7 + [-32])
	*([0] + [4]) = $3
	*($6 + [4]) = $3
	*($6) = $3
	*($6 + [8]) = ($7 + [-7])
	CALL $103($6, $1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-2730689629261922304, *(*($0 + [8])), (int_64)0, $3, [25])
	if ( ((int_64)*($2 + [16]) != (int_64)0) ){ goto $label$5 }
	*(($2 + [16])) = (int_64)1
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($8 = ($1 + [100]))) = (*($8) + [-24])
	*(($11 = $10) + [24]) = *($1 + [8])
	$4 = *($1)
	CALL eosio_assert([1], [1040])
	$6 = *($1 + [96])
	$5 = *($8)
	$7 = ($5 - $6)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$8 = [96]
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$8 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $8) + [20])
	
.LABEL $label$2
	if ( ($8 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11 + [12]) = $10
	*($11 + [8]) = $10
	*($11 + [16]) = ($10 + $8)
	CALL $34(($11 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($11 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($11 + [24]), ($11 + [40]), [8]) == 0) ){ goto $label$7 }
	$8 = *($1 + [116])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$8 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($11 + [32]), $4)
	*(($1 + [116])) = $8
	
.LABEL $label$8
	CALL db_idx64_update($8, $2, ($11 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $119 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($9 = $10) + [24]) = *($1 + [8])
	$4 = *($1)
	if ( ((int_32)*(*($3)) < (int_32)[1]) ){ goto $label$1 }
	$5 = ($1 + [100])
	$7 = (*($5) + [-24])
	$6 = [0]
	
.LOOP $label$2:
	*($5) = $7
	$7 = ($7 + [-24])
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)*(*($3))) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert([1], [1040])
	$3 = *($1 + [96])
	$6 = *(($1 + [100]))
	$5 = ($6 - $3)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	$7 = [96]
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$4 }
	$7 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $7) + [20])
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	*($9 + [12]) = $6
	*($9 + [8]) = $6
	*($9 + [16]) = ($6 + $7)
	CALL $34(($9 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $6, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($6)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($9 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($9 + [24]), ($9 + [40]), [8]) == 0) ){ goto $label$9 }
	$7 = *($1 + [116])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($9 + [32]), $4)
	*(($1 + [116])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, $2, ($9 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [48])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [752])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [752])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $30($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [752])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [752])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [752])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $30(CALL $31($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $195([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $26($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $41(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*((($8 + [16]) + [8])) = *(($1 + [8]))
	*($8 + [16]) = *($1)
	*($8 + [12]) = [0]
	$4 = *($2)
	$5 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$4) ){ goto $label$1 }
	$7 = $1
	$2 = ($1 + [-24])
	$1 = $2
	if ( ((int_32)($2 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$7 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$2), [768])
	if ( $1 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$1 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4849595776591986688, $4)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $43($2, $1)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$2), [768])
	if ( *($1 + [32]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	*($8 + [16]) = (int_64)0
	$1 = [0]
	
.LABEL $label$5
	if ( *($1 + [32]) ){ goto $label$3 }
	
.LABEL $label$4
	*($8 + [16]) = (int_64)0
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$8 }
	*($8 + [12]) = [1]
	
.LABEL $label$8
	if ( ((int_64)*($8 + [16]) < (int_64)1) ){ goto $label$9 }
	*($8 + [4]) = ($8 + [12])
	*($8) = ($8 + [16])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [880])
	CALL $44($2, $1, (int_64)0, $8)
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $25($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $26($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $27($4, $1)
	CALL $29(CALL $28(CALL $28($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$4 = *($1)
	$5 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$1 }
	$1 = ($8 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$4) ){ goto $label$1 }
	$8 = $1
	$7 = ($1 + [-24])
	$1 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$4 }
	$1 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$7), [768])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $32($7, $8)
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$7), [768])
	
.LABEL $label$3
	$8 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($8, [832])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$6 }
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$5 }
	
.LABEL $label$6
	*($9 + [12]) = $3
	*($9 + [8]) = $2
	CALL eosio_assert($8, [880])
	CALL $33($7, $1, (int_64)0, ($9 + [8]))
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $196($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $196($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $196($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $196($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $196($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $196($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $196($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $196($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [752])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [752])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [752])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [752])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $195($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $200($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $196($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = (*([0] + [4]) - [16])
	$7 = $4
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1) = [1]
	if ( (*([0] + [48]) == 0) ){ goto $label$2 }
	$6 = *([0] + [52])
	goto $label$1 
	
.LABEL $label$2
	if ( (*([0] + [38]) == 0) ){ goto $label$4 }
	$5 = *([0] + [40])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $5
	
.LABEL $label$3
	*([0] + [48]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000))
	*([0] + [52]) = $6
	
.LABEL $label$1
	*($1 + [28]) = $6
	*($1 + [8]) = *(*($3))
	CALL eosio_assert([1], [1040])
	$3 = $4
	$4 = ($3 + [-32])
	*([0] + [4]) = $4
	*($7 + [4]) = $4
	*($7) = $4
	*($7 + [8]) = ($3 + [-7])
	CALL $103($7, $1)
	CALL db_update_i64(*($1 + [36]), $2, $4, [25])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$5 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1104])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $195([48])) + [8]) = (int_64)0
	*($5) = [1]
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = $0
	CALL $104(($7 + [32]), $5)
	*($5 + [36]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)0
	$6 = *($5 + [36])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)0
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $105(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [15]) = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [752])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [8]) = *(*($3))
	CALL eosio_assert([1], [1040])
	*($4 + [40]) = ($4 + [25])
	*($4 + [36]) = $4
	*($4 + [32]) = $4
	CALL $103(($4 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $4, [25])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $196($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [1136])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1136])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1136])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $107 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [1168])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $195([48])) + [8]) = (int_64)0
	*($3) = [1]
	*($3 + [16]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = $1
	CALL $110(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)0
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $105(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $196($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [128])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	$3 = *($3)
	*($1 + [64]) = *($3)
	*(($1 + [72])) = *(($3 + [8]))
	CALL eosio_assert([1], [1040])
	*($4 + [120]) = ($4 + [112])
	*($4 + [116]) = $4
	*($4 + [112]) = $4
	CALL $62(($4 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [128])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = (*([0] + [4]) - [16])
	$7 = $4
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1) = [1]
	if ( (*([0] + [48]) == 0) ){ goto $label$2 }
	$6 = *([0] + [52])
	goto $label$1 
	
.LABEL $label$2
	if ( (*([0] + [38]) == 0) ){ goto $label$4 }
	$5 = *([0] + [40])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $5
	
.LABEL $label$3
	*([0] + [48]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000))
	*([0] + [52]) = $6
	
.LABEL $label$1
	*($1 + [28]) = $6
	CALL eosio_assert([1], [1040])
	$6 = $4
	$4 = ($6 + [-32])
	*([0] + [4]) = $4
	*($7 + [4]) = $4
	*($7) = $4
	*($7 + [8]) = ($6 + [-7])
	CALL $103($7, $1)
	CALL db_update_i64(*($1 + [36]), $2, $4, [25])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$5 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*($1 + [8]) = (int_64)1
	*($1) = [0]
	*($1 + [16]) = ((int_64)*(*($3 + [8])) + (int_64)((uint_64)*(*($3)) / (uint_64)*(*($3 + [4]))))
	if ( (*([0] + [48]) == 0) ){ goto $label$2 }
	$5 = *([0] + [52])
	goto $label$1 
	
.LABEL $label$2
	if ( (*([0] + [38]) == 0) ){ goto $label$4 }
	$4 = *([0] + [40])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL current_time()
	*([0] + [38]) = [1]
	*([0] + [40]) = $4
	
.LABEL $label$3
	*([0] + [48]) = [1]
	$5 = (CASTING uint_32)(uint_64 ((int_64)$4 / (int_64)1000000))
	*([0] + [52]) = $5
	
.LABEL $label$1
	*($1 + [24]) = $5
	*($1 + [28]) = *(*($3 + [12]))
	CALL eosio_assert([1], [1040])
	$7 = $7
	$3 = ($7 + [-32])
	*([0] + [4]) = $3
	*($6 + [4]) = $3
	*($6) = $3
	*($6 + [8]) = ($7 + [-7])
	CALL $103($6, $1)
	CALL db_update_i64(*($1 + [36]), $2, $3, [25])
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$5 }
	*(($0 + [16])) = (int_64)1
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $195(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $200($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [96])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [100])) = $6
	CALL $196($6)
	
.LABEL $label$11
	CALL $196($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $196($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = ((int_32)($2 - $7) / (int_32)[24])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $40($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ((int_32)$4 * (int_32)[24]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$3 = *($4)
	
.LOOP $label$6:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[3]), [1136])
	CALL memcpy($7, *($4), [4])
	$3 = (*($4) + [4])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1136])
	CALL memcpy(($7 + [8]), *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1136])
	CALL memcpy(($7 + [16]), *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	$7 = ($7 + [24])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $36 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [80])
	*(($2 = ($0 + [88]))) = (int_64)1398362884
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [688])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [80])
	*(($0 + [104])) = [0]
	*($0 + [96 align=4]) = (int_64)0
	return $0
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $39($0, ($1 + [96]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1136])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1136])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $35($0, ($1 + [96]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [752])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[24]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [752])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[3]), [752])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, [4])
	$6 = (*($4) + [4])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [752])
	CALL memcpy(*($4), ($7 + [8]), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [752])
	CALL memcpy(*($4), ($7 + [16]), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [24])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1104])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $195([120])
	$4 = CALL $36($6)
	*($6 + [108]) = $0
	CALL $37(($8 + [32]), $4)
	*($6 + [116]) = [-1]
	*($6 + [112]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [112])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $38(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [96])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [100])) = $7
	CALL $196($7)
	
.LABEL $label$10
	CALL $196($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [928])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [976])
	*(($10 = $9) + [24]) = *($1 + [8])
	$4 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [72]))), [304])
	$8 = ((int_64)*($1 + [64]) + (int_64)*($6))
	*($1 + [64]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [384])
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [88]))), [304])
	$8 = ((int_64)*($1 + [80]) + (int_64)*($3))
	*($1 + [80]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [352])
	CALL eosio_assert(((int_64)*($1 + [80]) < (int_64)4611686018427387904), [384])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1040])
	$5 = *($1 + [96])
	$6 = *(($1 + [100]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [96]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[20]) + $3) + [20])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $34(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [112]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = *($1 + [116])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$8 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6030912142679474176, ($10 + [32]), $4)
	*(($1 + [116])) = $3
	
.LABEL $label$8
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [752])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [752])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [752])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [752])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [752])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $195(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $196($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $196 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $197 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12156])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11964]
	$1 = (((int_32)$2 * (int_32)[12]) + [11964])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $195 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12268])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $193($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12176])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $193 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12262]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12264])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12262]) = [1]
	$7 = ($7 << [16])
	*([0] + [12264]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12264])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12264]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12262]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12262]) = [1]
	$3 = ($3 << [16])
	*([0] + [12264]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12264])
	
.LABEL $label$8
	*([0] + [12264]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $190 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($0 + [208]))
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [212])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $196($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	$5 = *(($0 + [208]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $196($5)
	
.LABEL $label$1
	$3 = *(($0 + [168]))
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($0 + [172])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $196($2)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($0 + [168]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $3
	
.LABEL $label$7
	*($1) = $3
	CALL $196($5)
	
.LABEL $label$6
	$3 = *(($0 + [120]))
	if ( ($3 == 0) ){ goto $label$11 }
	$1 = ($0 + [124])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $196($2)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($0 + [120]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $3
	
.LABEL $label$12
	*($1) = $3
	CALL $196($5)
	
.LABEL $label$11
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$16 }
	$4 = ($0 + [76])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	$3 = *($2 + [96])
	if ( ($3 == 0) ){ goto $label$21 }
	*(($2 + [100])) = $3
	CALL $196($3)
	
.LABEL $label$21
	CALL $196($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$19 }
	$5 = *(($0 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $1
	
.LABEL $label$17
	*($4) = $1
	CALL $196($5)
	
.LABEL $label$16
	$3 = *(($0 + [32]))
	if ( ($3 == 0) ){ goto $label$22 }
	$1 = ($0 + [36])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$26 }
	CALL $196($2)
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($0 + [32]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $3
	
.LABEL $label$23
	*($1) = $3
	CALL $196($5)
	
.LABEL $label$22
	return $0
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $192([3772], $0)
}