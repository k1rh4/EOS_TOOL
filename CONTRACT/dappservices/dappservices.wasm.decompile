(data (i32.const 8232) "failed to allocate pages\00DAPP\00")
(data (i32.const 8272) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8352) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 8368) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 8384) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 8400) "string is too long to be a valid symbol_code\00")
(data (i32.const 8445) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8498) "write\00")
(data (i32.const 8504) "{\00")
(data (i32.const 8506) "version\00")
(data (i32.const 8514) "1.4\00")
(data (i32.const 8518) ",\00")
(data (i32.const 8520) "etype\00")
(data (i32.const 8526) "usage_report\00")
(data (i32.const 8539) "payer\00")
(data (i32.const 8545) "service\00")
(data (i32.const 8553) "provider\00")
(data (i32.const 8562) "quantity\00")
(data (i32.const 8571) "success\00")
(data (i32.const 8579) "package\00")
(data (i32.const 8587) "}\n\00")
(data (i32.const 8590) "token with symbol does not exist\00")
(data (i32.const 8623) "object passed to modify is not in multi_index\00")
(data (i32.const 8669) "cannot modify objects in table of another contract\00")
(data (i32.const 8720) "updater cannot change primary key when modifying an object\00")
(data (i32.const 8779) "attempt to add asset with different symbol\00")
(data (i32.const 8822) "addition underflow\00")
(data (i32.const 8841) "addition overflow\00")
(data (i32.const 8859) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8910) "error reading iterator\00")
(data (i32.const 8933) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 8992) "token with symbol does not exist, create token before issue\00")
(data (i32.const 9052) "invalid quantity\00")
(data (i32.const 9069) "must issue positive quantity\00")
(data (i32.const 9098) "symbol precision mismatch\00")
(data (i32.const 9124) "quantity exceeds available supply\00")
(data (i32.const 9158) "cannot pass end iterator to modify\00")
(data (i32.const 9193) "cannot create objects in table of another contract\00")
(data (i32.const 9244) "no quota for this provider\00")
(data (i32.const 9271) "not enough quota for this provider\00")
(data (i32.const 9306) "attempt to subtract asset with different symbol\00")
(data (i32.const 9354) "subtraction underflow\00")
(data (i32.const 9376) "subtraction overflow\00")
(data (i32.const 9397) "%lld%s%s %s\00")
(data (i32.const 9409) ".\00")
(data (i32.const 9412) "true\00")
(data (i32.const 9417) "false\00")
(data (i32.const 9423) "third party staking only allowed for AirHODL\00")
(data (i32.const 9468) "must choose package first\00")
(data (i32.const 9494) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9546) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 9600) "cannot decrement iterator at beginning of table\00")
(data (i32.const 9648) "no balance object found\00")
(data (i32.const 9672) "overdrawn balance\00")
(data (i32.const 9690) "must stake positive quantity\00")
(data (i32.const 9719) "wrong symbol or precision\00")
(data (i32.const 9745) "stake not found\00")
(data (i32.const 9761) "you cannot unstake more than you have staked\00")
(data (i32.const 9806) "cannot pass end iterator to erase\00")
(data (i32.const 9840) "cannot increment end iterator\00")
(data (i32.const 9870) "object passed to erase is not in multi_index\00")
(data (i32.const 9915) "cannot erase objects in table of another contract\00")
(data (i32.const 9965) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10018) "refund request not found\00")
(data (i32.const 10043) "no balance object for provider\00")
(data (i32.const 10074) "provider not found\00")
(data (i32.const 10093) "must unstake positive quantity\00")
(data (i32.const 10124) "no pending rewards\00")
(data (i32.const 10143) "already claimed in the last 24h\00")
(data (i32.const 10175) "rewards\00")
(data (i32.const 10183) "max-supply must be positive\00")
(data (i32.const 10211) "token with symbol already exists\00")
(data (i32.const 10244) "invalid symbol name\00")
(data (i32.const 10264) "memo has more than 256 bytes\00")
(data (i32.const 10293) "cannot transfer to self\00")
(data (i32.const 10317) "to account does not exist\00")
(data (i32.const 10343) "unable to find key\00")
(data (i32.const 10362) "must transfer positive quantity\00")
(data (i32.const 10394) "symbol does not exist\00")
(data (i32.const 10416) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 10492) "Cannot close because the balance is not zero.\00")
(data (i32.const 10538) "must retire positive quantity\00")
(data (i32.const 10568) "QUOTA\00")
(data (i32.const 10574) "already exists\00")
(data (i32.const 10589) "wrong symbol\00")
(data (i32.const 10602) "missing package\00")
(data (i32.const 10618) "1.1\00")
(data (i32.const 10622) "service_signal\00")
(data (i32.const 10637) "action\00")
(data (i32.const 10644) "data\00")
(data (i32.const 10649) "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00")
(data (i32.const 10714) "read\00")
(data (i32.const 10719) "get\00")
(data (i32.const 0) "\e8)\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "abort" (func $fimport$1))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "send_inline" (func $fimport$4 (param i32 i32)))
(import "env" "send_deferred" (func $fimport$5 (param i32 i64 i32 i32 i32)))
(import "env" "eosio_exit" (func $fimport$6 (param i32)))
(import "env" "action_data_size" (func $fimport$7 (result i32)))
(import "env" "read_action_data" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$9 (param i64)))
(import "env" "require_recipient" (func $fimport$10 (param i64)))
(import "env" "prints" (func $fimport$11 (param i32)))
(import "env" "prints_l" (func $fimport$12 (param i32 i32)))
(import "env" "printn" (func $fimport$13 (param i64)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$14 (param i32 i32)))
(import "env" "memcpy" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$17 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$18 (result i64)))
(import "env" "get_active_producers" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$21 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$22 (param i32 i32)))
(import "env" "__multf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$24 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$27 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$32 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$34 (param i64 i64) (result f32)))
(import "env" "__unordtf2" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$36 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "is_account" (func $fimport$39 (param i64) (result i32)))
(import "env" "has_auth" (func $fimport$40 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$42 (param i32 i64)))
(import "env" "db_idx256_lowerbound" (func $fimport$43 (param i64 i64 i64 i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$44 (param i32 i64 i32 i32)))
(import "env" "db_get_i64" (func $fimport$45 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$46 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx256_find_primary" (func $fimport$47 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_update" (func $fimport$48 (param i32 i64 i32 i32)))
(import "env" "db_idx128_find_primary" (func $fimport$49 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_update" (func $fimport$50 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$51 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_idx256_store" (func $fimport$52 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$53 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$54 (param i64 i64 i64) (result i32)))
(import "env" "cancel_deferred" (func $fimport$55 (param i32) (result i32)))
(import "env" "db_idx256_next" (func $fimport$56 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$57 (param i32)))
(import "env" "db_idx256_remove" (func $fimport$58 (param i32)))
(import "env" "db_idx128_store" (func $fimport$59 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$60 (param i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$61 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_next" (func $fimport$62 (param i32 i32) (result i32)))
(export "apply" (func $40))
(table $0 23 23 anyfunc)
(elem (i32.const 1) $22 $24 $41 $43 $45 $47 $49 $51 $53 $55 $57 $59 $60 $62 $64 $66 $68 $70 $72 $73 $75 $77)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10723))
(global $global$2 i32 (i32.const 10723))


int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$2 = (int_64)0
	*(($5 = CALL $8([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $1
	CALL $187(($4 + [16]), $5)
	*($4 + [32]) = $5
	$3 = CALL $1([8257])
	if ( ($3 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8400])
	goto $label$4 
	
.LABEL $label$5
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($3 + [8256]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	$6 = *($4 + [32])
	goto $label$2 
	
.LABEL $label$3
	$6 = $5
	
.LABEL $label$2
	*($4 + [16]) = $2
	$7 = *($6 + [52])
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$9 }
	*($3 + [8]) = $2
	*($3 + [16]) = $7
	*($4 + [32]) = [0]
	*($3) = $6
	*($8) = ($3 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $178(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$8
	*($0 + [4]) = $5
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $10($3)
	
.LABEL $label$10
	$global$0 = ($4 + [48])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($6 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [12])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$0 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $170 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	*($1 + [24]) = *(*($3))
	$6 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [16])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $176(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	$2 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

int_32 .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$2 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $5)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	$7 = (int_64)0
	*(($4 = CALL $8([64])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($4 + [16])
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + [24])
	*($3 + [44]) = ($4 + [40])
	CALL $177(($3 + [32]), ($3 + [24]))
	*($4 + [52]) = $1
	*($3 + [24]) = $4
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [8400])
	goto $label$9 
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$7 = (int_64)0
	
.LOOP $label$11:
	$1 = *(($5 + [8256]))
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$12
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$11 }
	$7 = ((int_64)$7 & (int_64)72057594037927935)
	$1 = *($3 + [24])
	goto $label$7 
	
.LABEL $label$8
	$1 = $4
	
.LABEL $label$7
	*($3 + [32]) = $7
	$8 = *($1 + [52])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$15 }
	*($5 + [8]) = $7
	*($5 + [16]) = $8
	*($3 + [24]) = [0]
	*($5) = $1
	*($9) = ($5 + [24])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $178(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $3($2)
	
.LABEL $label$13
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $10($5)
	
.LABEL $label$16
	$global$0 = ($3 + [48])
	return $4
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([128])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [112]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [64])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [96])
	*($3 + [76]) = ($5 + [104])
	CALL $179(($3 + [32]), ($3 + [24]))
	*($5 + [116]) = $1
	*($5 + [120 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $180(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $223($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $39($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $39($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $224($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $5 ()
{
	return [8208]
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [8]))
	*($2 + [32]) = *($1)
	$1 = CALL $27(($2 + [16]), ($1 + [16]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($5 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$4 = CALL $27(($2 + [64]), $1)
	*(($2 + [8])) = *($5)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $10(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $10(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8498])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [8498])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $6, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [12])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$0 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $49 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL require_auth($3)
	*((($4 + [56]) + [32])) = [0]
	*($4 + [64]) = $2
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	*($4 + [56]) = *($0)
	$5 = CALL $121(($4 + [56]), $2, [10394])
	if ( ((int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8) == (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9098])
	
.LABEL $label$1
	*((($4 + [16]) + [32])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$6 = *($0)
	*($4 + [16]) = $6
	*($4 + [24]) = $1
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $123(($4 + [16]), $0) + [16]) == (int_32)($4 + [16])) ){ goto $label$7 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($4 + [8]) = $5
	CALL $124($4, ($4 + [16]), $3, ($4 + [8]))
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = ($4 + [44])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $10($5)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($4 + [40]))
	*($8) = $7
	CALL $10($0)
	$7 = *($4 + [80])
	if ( $7 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$8
	*($8) = $7
	CALL $10($7)
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($4 + [80])
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($4 + [96])
	return 
	
.LABEL $label$2
	$8 = ($4 + [84])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $10($5)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($4 + [80]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $7
	
.LABEL $label$11
	*($8) = $7
	CALL $10($0)
	$global$0 = ($4 + [96])
}

int_32 .FUNC $48 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [96])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	$6 = ($2 + $5)
	*($4 + [72]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$6 = *(($4 + [72]))
	$3 = *($4 + [68])
	
.LABEL $label$4
	CALL memcpy(($4 + [80]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [68]) = $3
	$7 = (($4 + [80]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$6 = *((($4 + [64]) + [8]))
	$3 = *($4 + [68])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [68]) = $3
	*($4 + [24]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$3 = *($4 + [68])
	
.LABEL $label$6
	CALL memcpy(($4 + [24]), $3, [8])
	*(($4 + [96])) = *($4 + [24])
	*($4 + [68]) = ($3 + [8])
	CALL $115(($4 + [64]), (($4 + [80]) + [24]))
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [64]) + [8]))
	*($4 + [8]) = *($4 + [64])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [56]) = (int_64)5308428098346312208
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $116(($4 + [144]), ($4 + [80]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$7
	$global$0 = ($4 + [160])
	return $2
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC $236 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	$6 = *($4 + [4])
	*(($3 + [56])) = *($6 + [16])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6 + [8])
	*($3 + [48]) = *($6 + [24])
	if ( (CALL $18(*($4 + [8]), ($3 + [32]), [32]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($5), *($5 + [8]), (int_64)3607749778918490112, $3, [2], *(*($4 + [16])))
	*(*(($4 + [12])) + [120]) = $6
	
.LABEL $label$2
	CALL db_idx256_update($6, *(*($4 + [20])), ($3 + [32]), [2])
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	$0 = *($4 + [4])
	*($3 + [32]) = *($0 + [16])
	*($3 + [40]) = *($0 + [8])
	if ( (CALL $18((*($4 + [8]) + [32]), ($3 + [32]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490113, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [124])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($4 + [20])), ($3 + [32]))
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $43 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$6 = ($global$0 - [48])
	$global$0 = $6
	CALL require_auth(*($0 + [8]))
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$5 = *($5)
	$7 = *($5 + [4])
	$8 = ($7 - $5)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$6 }
	*($6 + [16]) = ($8 << [1])
	$9 = (($6 + [16]) | [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $8($10)
	*($6 + [16]) = ($10 | [1])
	*($6 + [24]) = $9
	*($6 + [20]) = $8
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$4 }
	
.LABEL $label$5
	$10 = $9
	
.LOOP $label$7:
	*($10) = *($5)
	$10 = ($10 + [1])
	$5 = ($5 + [1])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$7 }
	$9 = ($9 + $8)
	
.LABEL $label$4
	*($9) = [0]
	$8 = *($6 + [24])
	$10 = *($6 + [20])
	$5 = *($6 + [16])
	*(($6 + [40])) = [0]
	*($6 + [32]) = (int_64)0
	$7 = CALL $1([10649])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	$11 = ($5 & [1])
	$10 = ( $10 ? uint_32($5 >> [1]) : $11 )
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$10 }
	*($6 + [32]) = ($7 << [1])
	$9 = (($6 + [32]) | [1])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = (($7 + [16]) & [-16])
	$9 = CALL $8($5)
	*($6 + [32]) = ($5 | [1])
	*($6 + [40]) = $9
	*($6 + [36]) = $7
	
.LABEL $label$9
	CALL memcpy($9, [10649], $7)
	
.LABEL $label$8
	$5 = [0]
	*(($9 + $7)) = [0]
	$9 = CALL $2([3])
	$12 = CALL $2([4])
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	if ( ($10 == 0) ){ goto $label$11 }
	$7 = ( $8 ? (($6 + [16]) | [1]) : $11 )
	$8 = (($6 + [32]) | [1])
	$11 = ($6 + [40])
	
.LOOP $label$13:
	*(($9 + $5)) = *($7)
	$10 = ($10 + [-1])
	$5 = ($5 + [1])
	if ( ((int_32)$5 == (int_32)[3]) ){ goto $label$14 }
	$7 = ($7 + [1])
	if ( $10 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$5 = uint_32(*($9) >> [2])
	*($12) = $5
	$14 = ($9 + [1])
	*(($13 = ($12 + [1]))) = (((*($9) << [4]) & [48]) | uint_32(*($14) >> [4]))
	$14 = ($9 + [2])
	*(($15 = ($12 + [2]))) = (((*($14) << [2]) & [60]) | uint_32(*($14) >> [6]))
	*(($16 = ($12 + [3]))) = (*($14) & [63])
	CALL $32($6, *((( *($11) ? $8 : (*($6 + [32]) & [1]) ) + $5)))
	CALL $32($6, *((( *($11) ? $8 : (*($6 + [32]) & [1]) ) + *($13))))
	CALL $32($6, *((( *($11) ? $8 : (*($6 + [32]) & [1]) ) + *($15))))
	CALL $32($6, *((( *($11) ? $8 : (*($6 + [32]) & [1]) ) + *($16))))
	$5 = [0]
	$7 = ($7 + [1])
	if ( $10 ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 > (int_32)[2]) ){ goto $label$15 }
	$10 = $5
	
.LOOP $label$16:
	*(($9 + $10)) = [0]
	$7 = ((int_32)$10 < (int_32)[2])
	$10 = ($10 + [1])
	if ( $7 ){ goto $label$16 }
	
.LABEL $label$15
	$11 = uint_32(*($9) >> [2])
	*($12) = $11
	$7 = ($9 + [1])
	*(($10 = ($12 + [1]))) = (((*($9) << [4]) & [48]) | uint_32(*($7) >> [4]))
	$7 = ($9 + [2])
	*(($12 + [2])) = (((*($7) << [2]) & [60]) | uint_32(*($7) >> [6]))
	*(($12 + [3])) = (*($7) & [63])
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	$9 = ($6 + [40])
	CALL $32($6, *((( *($9) ? $8 : (*($6 + [32]) & [1]) ) + ($11 & [255]))))
	$7 = $5
	
.LOOP $label$18:
	CALL $32($6, *((( *($9) ? $8 : (*($6 + [32]) & [1]) ) + *($10))))
	$10 = ($10 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((int_32)$5 > (int_32)[2]) ){ goto $label$11 }
	$5 = ($5 + [-1])
	
.LOOP $label$19:
	CALL $32($6, [61])
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[2]) ){ goto $label$19 }
	
.LABEL $label$11
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$20 }
	CALL $10(*($6 + [40]))
	
.LABEL $label$20
	CALL prints([8504])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8506])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([10618])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8520])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([10622])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8539])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL printn(*(($0 + [8])))
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8545])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL printn($1)
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([10637])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL printn($2)
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8553])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL printn($3)
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8579])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL printn($4)
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8518])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([10644])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [58]
	CALL prints_l(($6 + [32]), [1])
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	$5 = ($6 + [8])
	CALL prints(( *($5) ? ($6 | [1]) : (*($6) & [1]) ))
	*($6 + [32]) = [34]
	CALL prints_l(($6 + [32]), [1])
	CALL prints([8587])
	CALL require_recipient($1)
	CALL require_recipient($3)
	if ( (*($6) & [1]) ){ goto $label$22 }
	if ( (*($6 + [16]) & [1]) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$22
	CALL $10(*($5))
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$21
	CALL $10(*(($6 + [24])))
	$global$0 = ($6 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $26(($6 + [16]))
	
.LABEL $label$2
	CALL $26(($6 + [32]))
	
.LABEL $label$1
	$global$0 = ($6 + [48])
	(unreachable)
}

int_32 .FUNC $42 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$3 = ($global$0 - [352])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [128]) + [48]))) = (int_64)0
	*(($8 = (($4 + [128]) + [8]))) = (int_64)0
	*(($9 = (($4 + [128]) + [16]))) = (int_64)0
	*(($10 = (($4 + [128]) + [24]))) = (int_64)0
	*(($11 = (($4 + [128]) + [32]))) = (int_64)0
	*(($12 = (($4 + [128]) + [40]))) = (int_64)0
	*($3) = [0]
	*($4 + [128]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $7)
	*($4 + [240]) = ($4 + [112])
	*($4 + [300]) = $9
	*($4 + [304]) = $10
	*($4 + [308]) = $11
	*($4 + [312]) = $12
	*($4 + [316]) = $3
	*($4 + [296]) = ($4 + [128])
	CALL $79(($4 + [296]), ($4 + [240]))
	*(($13 = (($4 + [56]) + [8]))) = *($4 + [120])
	*($4 + [56]) = *($4 + [112])
	*(($14 = (($4 + [240]) + [8]))) = *($13)
	*($4 + [240]) = *($4 + [56])
	$13 = *($14)
	*((($4 + [296]) + [8])) = $13
	*((($4 + [72]) + [24])) = $13
	*($4 + [72]) = $0
	*($4 + [80]) = $1
	$0 = *($4 + [240])
	*($4 + [88]) = $0
	*($4 + [296]) = $0
	*($4 + [104]) = (int_64)5308428098346312208
	*(($13 = (($4 + [184]) + [48]))) = *($3)
	*(($3 = (($4 + [184]) + [40]))) = *($12)
	*(($12 = (($4 + [184]) + [32]))) = *($11)
	*(($11 = (($4 + [184]) + [24]))) = *($10)
	*(($10 = (($4 + [184]) + [16]))) = *($9)
	*(($9 = (($4 + [184]) + [8]))) = *($8)
	*($4 + [184]) = *($4 + [128])
	*((($4 + [240]) + [48])) = *($13)
	*((($4 + [240]) + [40])) = *($3)
	*((($4 + [240]) + [32])) = *($12)
	*((($4 + [240]) + [24])) = *($11)
	*((($4 + [240]) + [16])) = *($10)
	*($14) = *($9)
	*($4 + [240]) = *($4 + [184])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$0 = *((($4 + [240]) + [48]))
	*((($4 + [296]) + [48])) = $0
	$1 = *((($4 + [240]) + [40]))
	*((($4 + [296]) + [40])) = $1
	$15 = *((($4 + [240]) + [32]))
	*((($4 + [296]) + [32])) = $15
	$16 = *((($4 + [240]) + [24]))
	*((($4 + [296]) + [24])) = $16
	$17 = *((($4 + [240]) + [16]))
	*((($4 + [296]) + [16])) = $17
	$18 = *((($4 + [240]) + [8]))
	*((($4 + [296]) + [8])) = $18
	*(($4 + [8])) = $18
	*(($4 + [16])) = $17
	*(($4 + [24])) = $16
	*(($4 + [32])) = $15
	*(($4 + [40])) = $1
	*(($4 + [48])) = $0
	$0 = *($4 + [240])
	*($4) = $0
	*($4 + [296]) = $0
	CALL void $3((int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	$global$0 = ($4 + [352])
	return [1]
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($1 + [32])
	CALL require_auth($3)
	$4 = *($1 + [24])
	$5 = *($1 + [16])
	*(($6 = (($2 + [32]) + [8]))) = *(($1 + [8]))
	*($2 + [32]) = *($1)
	CALL require_recipient($5)
	CALL require_recipient($3)
	CALL require_recipient($4)
	*(($7 = (($2 + [16]) + [8]))) = *($6)
	*($2 + [16]) = *($2 + [32])
	*(($6 = (($2 + [48]) + [8]))) = *($7)
	*($2 + [48]) = *($2 + [16])
	CALL $80($0, $4, $5, $3)
	$8 = *($6)
	*(($7 = (($2 + [64]) + [8]))) = $8
	*(($2 + [8])) = $8
	$8 = *($2 + [48])
	*($2) = $8
	*($2 + [64]) = $8
	*($1 + [48]) = CALL $81($0, $4, $3, $5, $2)
	CALL prints([8504])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8506])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8514])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8520])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8526])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8539])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL printn($4)
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8545])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL printn(*($1 + [32]))
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8553])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL printn(*($1 + [16]))
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8562])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL $82(($2 + [64]), $1)
	$0 = *($2 + [64])
	$6 = ($0 & [1])
	CALL prints_l(( *($2 + [72]) ? (($2 + [64]) | [1]) : $6 ), ( *($2 + [68]) ? uint_32($0 >> [1]) : $6 ))
	if ( ((*($2 + [64]) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*($7))
	
.LABEL $label$1
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8571])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints(( [9412] ? [9417] : *(($1 + [48])) ))
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8518])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8579])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [58]
	CALL prints_l(($2 + [64]), [1])
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL printn(*($1 + [40]))
	*($2 + [64]) = [34]
	CALL prints_l(($2 + [64]), [1])
	CALL prints([8587])
	$global$0 = ($2 + [80])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [320])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$20 }
	if ( ((int_64)$2 <= (int_64)-4157660943200813057) ){ goto $label$19 }
	if ( ((int_64)$2 > (int_64)4921565079997371263) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)-3102536759825661953) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-3102536759395745792) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-3022824646081773568) ){ goto $label$1 }
	*($3 + [316]) = [0]
	*($3 + [312]) = [3]
	*($3) = *($3 + [312])
	CALL $42($1, $1, $3)
	CALL eosio_exit([0])
	
.LABEL $label$20
	if ( ((int_64)$2 != (int_64)-1288933729535787008) ){ goto $label$1 }
	*($3 + [164]) = [0]
	*($3 + [160]) = [4]
	*($3 + [152]) = *($3 + [160])
	CALL $44($0, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$19
	if ( ((int_64)$2 <= (int_64)-5001342325574598657) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)-4993669930013425665) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-4993669930013425664) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4421791123171704832) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$1 }
	*($3 + [308]) = [0]
	*($3 + [304]) = [5]
	*($3 + [8]) = *($3 + [304])
	CALL $46($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$18
	if ( ((int_64)$2 <= (int_64)4929617875758481407) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)4929617875758481408) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [6]
	*($3 + [80]) = *($3 + [232])
	CALL $48($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$17
	if ( ((int_64)$2 > (int_64)-5001400075257233409) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-7704843147613831168) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-6533262907872903168) ){ goto $label$1 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [7]
	*($3 + [96]) = *($3 + [216])
	CALL $50($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$16
	if ( ((int_64)$2 == (int_64)-4157660943200813056) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [8]
	*($3 + [88]) = *($3 + [224])
	CALL $52($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)-5001342325574598656) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-5000868948036550656) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [9]
	*($3 + [128]) = *($3 + [184])
	CALL $54($1, $1, ($3 + [128]))
	CALL eosio_exit([0])
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)4921565079997371264) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)4929617502180212736) ){ goto $label$1 }
	*($3 + [212]) = [0]
	*($3 + [208]) = [10]
	*($3 + [104]) = *($3 + [208])
	CALL $56($1, $1, ($3 + [104]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-5001400075257233408) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$1 }
	*($3 + [292]) = [0]
	*($3 + [288]) = [11]
	*($3 + [24]) = *($3 + [288])
	CALL $58($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [300]) = [0]
	*($3 + [296]) = [12]
	*($3 + [16]) = *($3 + [296])
	CALL $46($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [276]) = [0]
	*($3 + [272]) = [13]
	*($3 + [40]) = *($3 + [272])
	CALL $61($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [204]) = [0]
	*($3 + [200]) = [14]
	*($3 + [112]) = *($3 + [200])
	CALL $63($1, $1, ($3 + [112]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [196]) = [0]
	*($3 + [192]) = [15]
	*($3 + [120]) = *($3 + [192])
	CALL $65($1, $1, ($3 + [120]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [180]) = [0]
	*($3 + [176]) = [16]
	*($3 + [136]) = *($3 + [176])
	CALL $67($1, $1, ($3 + [136]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [244]) = [0]
	*($3 + [240]) = [17]
	*($3 + [72]) = *($3 + [240])
	CALL $69($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [172]) = [0]
	*($3 + [168]) = [18]
	*($3 + [144]) = *($3 + [168])
	CALL $71($1, $1, ($3 + [144]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [284]) = [0]
	*($3 + [280]) = [19]
	*($3 + [32]) = *($3 + [280])
	CALL $61($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [268]) = [0]
	*($3 + [264]) = [20]
	*($3 + [48]) = *($3 + [264])
	CALL $74($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [252]) = [0]
	*($3 + [248]) = [21]
	*($3 + [64]) = *($3 + [248])
	CALL $76($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$2
	*($3 + [260]) = [0]
	*($3 + [256]) = [22]
	*($3 + [56]) = *($3 + [256])
	CALL $78($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$1
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $47 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10244])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [10264])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [152])) = [0]
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	$7 = *($0)
	*($4 + [120]) = $7
	*($4 + [128]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $111(($4 + [120]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [120])) ){ goto $label$8 }
	CALL eosio_assert([0], [8859])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8992])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$12 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$7 = $8
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$16 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_64)$6 <= (int_64)0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [9052])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9069])
	
.LABEL $label$10
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$17 }
	CALL eosio_assert([0], [9098])
	
.LABEL $label$17
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$18 }
	CALL eosio_assert([0], [9124])
	
.LABEL $label$18
	*($4 + [16]) = $2
	CALL $117(($4 + [120]), $11, (int_64)0, ($4 + [16]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [104]) + [8]))) = *($10)
	$8 = *($2)
	*(($4 + [8])) = *($9)
	*($4 + [104]) = $8
	*($4) = *($4 + [104])
	CALL $102($0, $7, $4, $7)
	CALL $118($0)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$19 }
	$8 = *($0)
	*((($4 + [16]) + [24])) = *($10)
	*($4 + [24]) = $1
	*($4 + [16]) = $7
	*($4 + [32]) = *($2)
	$9 = CALL $27((($4 + [16]) + [32]), $3)
	*($4 + [72]) = (int_64)-3617168760277827584
	*($4 + [64]) = $8
	*(($5 = CALL $8([16]))) = $7
	*($5 + [8]) = (int_64)3617214756542218240
	*((($4 + [64]) + [36])) = [0]
	$10 = ($5 + [16])
	*((($4 + [64]) + [24])) = $10
	*(($4 + [84])) = $10
	*($4 + [80]) = $5
	*($4 + [92 align=4]) = (int_64)0
	$5 = *($9)
	$9 = ( *((($4 + [16]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($9 + [32])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($4 + [92])
	
.LOOP $label$20:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$20 }
	if ( ($5 == 0) ){ goto $label$22 }
	CALL $37($9, $5)
	$9 = *(($4 + [96]))
	$5 = *(($4 + [92]))
	goto $label$21 
	
.LABEL $label$22
	$9 = [0]
	$5 = [0]
	
.LABEL $label$21
	*($4 + [164]) = $5
	*($4 + [160]) = $5
	*($4 + [168]) = $9
	*($4 + [176]) = ($4 + [160])
	*($4 + [184]) = ($4 + [16])
	CALL $109(($4 + [184]), ($4 + [176]))
	CALL $38(($4 + [64]))
	$5 = *($4 + [92])
	if ( ($5 == 0) ){ goto $label$23 }
	*(($4 + [96])) = $5
	CALL $10($5)
	
.LABEL $label$23
	$5 = *($4 + [80])
	if ( ($5 == 0) ){ goto $label$24 }
	*(($4 + [84])) = $5
	CALL $10($5)
	
.LABEL $label$24
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $10(*(($4 + [56])))
	
.LABEL $label$19
	$10 = *($4 + [144])
	if ( ($10 == 0) ){ goto $label$25 }
	$2 = ($4 + [148])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$27 }
	
.LOOP $label$28:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$29 }
	CALL $10($9)
	
.LABEL $label$29
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$28 }
	$5 = *(($4 + [144]))
	goto $label$26 
	
.LABEL $label$27
	$5 = $10
	
.LABEL $label$26
	*($2) = $10
	CALL $10($5)
	
.LABEL $label$25
	$global$0 = ($4 + [192])
}

int_32 .FUNC $46 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [120]))) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [160]) = ($4 + [72])
	*($4 + [32]) = ($4 + [88])
	CALL $83(($4 + [32]), ($4 + [160]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [80])
	*($4 + [16]) = *($4 + [72])
	*(($3 = (($4 + [144]) + [8]))) = *($9)
	*($4 + [144]) = *($4 + [16])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*(($4 + [56])) = $9
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [144])
	*($4 + [48]) = $0
	*($4 + [160]) = $0
	*($4 + [64]) = (int_64)5308428098346312208
	*(($9 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [112])
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$10 = *($4 + [88])
	*($3) = *($9)
	*($4 + [144]) = *($4 + [128])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$11 = *((($4 + [144]) + [8]))
	*((($4 + [160]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [144])
	*($4) = $11
	*($4 + [160]) = $11
	CALL void $3((int_32 $10), (int_64 $1), (int_64 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return [1]
}

void .FUNC $45 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *(($4 + [8]))
	*((($5 + [16]) + [8])) = $6
	$7 = *($4)
	*(($5 + [8])) = $6
	*($5 + [16]) = $7
	*($5) = $7
	CALL $72($0, $1, $1, $2, $3, $5)
	$global$0 = ($5 + [32])
}

int_32 .FUNC $44 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $140(($4 + [16]), ($4 + [144]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4)
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [128])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [16])
	CALL $141(($4 + [144]), ($4 + [72]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	$2 = *(($4 + [104]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [108])) = $2
	CALL $10($2)
	
.LABEL $label$5
	$global$0 = ($4 + [160])
	return [1]
}

void .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$1 = *($1)
	*($2 + [8]) = *($4 + [32])
	$4 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $234 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([128])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [112]) = $1
	CALL $235(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [116])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $180(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $233 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$2 = *($1 + [16])
	*((($5 + [32]) + [24])) = $2
	$6 = *($1 + [8])
	*(($5 + [72])) = $6
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $6
	*($5 + [48]) = *($1 + [24])
	*($5 + [64]) = $2
	$2 = *($1)
	*($5 + [24]) = $2
	*($1 + [88]) = *(*($3))
	$3 = $4
	$4 = ($3 + [-112])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [88]) = ($5 + [8])
	*($5 + [100]) = ($1 + [8])
	*($5 + [96]) = $1
	*($5 + [104]) = ($1 + [16])
	*($5 + [108]) = ($1 + [24])
	*($5 + [112]) = ($1 + [32])
	*($5 + [116]) = ($1 + [48])
	*($5 + [120]) = ($1 + [64])
	*($5 + [124]) = ($1 + [72])
	*($5 + [128]) = ($1 + [80])
	*($5 + [132]) = ($1 + [88])
	*($5 + [136]) = ($1 + [96])
	*($5 + [140]) = ($1 + [104])
	CALL $189(($5 + [96]), ($5 + [88]))
	CALL db_update_i64(*($1 + [116]), *($5 + [80]), $4, [112])
	$4 = ($0 + [36])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [100]) = $1
	*($5 + [96]) = $0
	*($5 + [108]) = $1
	*($5 + [104]) = ($5 + [32])
	*($5 + [112]) = ($5 + [24])
	*($5 + [116]) = ($5 + [80])
	*($5 + [88]) = ($5 + [96])
	CALL $236(($5 + [88]), $4, ($4 + [1]))
	$global$0 = ($5 + [144])
}

void .FUNC $226 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8400])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)0
	
.LABEL $label$3
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$9 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$9
	$7 = (int_64)
	*($1 + [24]) = $7(*($1 + [24]) - *($6)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9354])
	$7 = *(($1 + [24]))
	
.LABEL $label$10
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9376])
	
.LABEL $label$11
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8400])
	goto $label$15 
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (int_64)0
	
.LOOP $label$17:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$17 }
	if ( ((int_64)$9 == (int_64)((int_64)$7 & (int_64)72057594037927935)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8720])
	
.LABEL $label$12
	$8 = $4
	$6 = ($8 + [-48])
	$global$0 = $6
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = $8
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	*($5 + [44]) = ($1 + [40])
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $6, [48])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$2 = *($1 + [16])
	*((($5 + [32]) + [24])) = $2
	$6 = *($1 + [8])
	*((($5 + [32]) + [40])) = $6
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $6
	*($5 + [48]) = *($1 + [24])
	*($5 + [64]) = $2
	$7 = *($3)
	*($1 + [32]) = *($7 + [32])
	*(($1 + [40])) = *(($7 + [40]))
	$7 = *($3)
	*($1 + [96]) = *($7 + [96])
	*($1 + [80]) = *($7 + [80])
	*($1 + [104]) = *($7 + [104])
	*($1 + [72]) = *($7 + [72])
	*($5 + [24]) = *($1)
	*($1 + [64]) = *(*($3 + [4]))
	$7 = $4
	$3 = ($7 + [-112])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $7
	*($5 + [88]) = ($5 + [8])
	*($5 + [100]) = ($1 + [8])
	*($5 + [96]) = $1
	*($5 + [104]) = ($1 + [16])
	*($5 + [108]) = ($1 + [24])
	*($5 + [112]) = ($1 + [32])
	*($5 + [116]) = ($1 + [48])
	*($5 + [120]) = ($1 + [64])
	*($5 + [124]) = ($1 + [72])
	*($5 + [128]) = ($1 + [80])
	*($5 + [132]) = ($1 + [88])
	*($5 + [136]) = ($1 + [96])
	*($5 + [140]) = ($1 + [104])
	CALL $189(($5 + [96]), ($5 + [88]))
	CALL db_update_i64(*($1 + [116]), *($5 + [80]), $3, [112])
	$3 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [100]) = $1
	*($5 + [96]) = $0
	*($5 + [108]) = $1
	*($5 + [104]) = ($5 + [32])
	*($5 + [112]) = ($5 + [24])
	*($5 + [116]) = ($5 + [80])
	*($5 + [88]) = ($5 + [96])
	CALL $190(($5 + [88]), $3, ($3 + [1]))
	$global$0 = ($5 + [144])
}

void .FUNC $166 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [112])
	$global$0 = $4
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	*($4 + [104]) = ((int_64)CALL $17() / (int_64)1000)
	$8 = [0]
	*(($4 + [96])) = [0]
	*($4 + [80]) = (int_64)-1
	*($4 + [88]) = (int_64)0
	$9 = *($0)
	*($4 + [64]) = $9
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	*($4 + [72]) = $6
	$5 = CALL db_find_i64($9, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $111(($4 + [64]), $5)
	if ( ((int_32)*($8 + [40]) == (int_32)($4 + [64])) ){ goto $label$7 }
	CALL eosio_assert([0], [8859])
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [8992])
	
.LABEL $label$7
	$10 = *($3)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$13 }
	$6 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$6 = $9
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	$6 = $9
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $7 ){ goto $label$17 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9052])
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [9069])
	if ( ((int_64)*($3 + [8]) != (int_64)*($8 + [8])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_64)*($3 + [8]) == (int_64)*($8 + [8])) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9098])
	
.LABEL $label$9
	if ( ((int_64)*($3) <= (int_64))(*($8 + [16]) - *($8))) ){ goto $label$18 }
	CALL eosio_assert([0], [9124])
	
.LABEL $label$18
	*(($4 + [56])) = [0]
	*($4 + [32]) = $1
	*($4 + [40]) = (int_64)-1
	$6 = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [24]) = *($0)
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$21 }
	CALL eosio_assert([0], [8400])
	goto $label$20 
	
.LABEL $label$21
	if ( ($5 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$6 = (int_64)0
	
.LOOP $label$22:
	$7 = *(($5 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$23 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$23
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$22 }
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	
.LABEL $label$19
	CALL $107(($4 + [16]), ($4 + [24]), $6)
	if ( (*($4 + [20]) == 0) ){ goto $label$26 }
	$6 = *($0)
	$5 = *($4 + [20])
	*($4 + [8]) = $3
	*($4 + [12]) = ($4 + [104])
	if ( $5 ){ goto $label$27 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$27
	CALL $173(($4 + [24]), $5, $6, ($4 + [8]))
	$11 = *($4 + [48])
	if ( $11 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$6 = *($0)
	*($4 + [8]) = $3
	*($4 + [12]) = ($4 + [104])
	CALL $174($4, ($4 + [24]), $6, ($4 + [8]))
	$11 = *($4 + [48])
	if ( ($11 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$3 = ($4 + [52])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$29 }
	
.LOOP $label$30:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$31 }
	CALL $10($7)
	
.LABEL $label$31
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$30 }
	$5 = *(($4 + [48]))
	goto $label$28 
	
.LABEL $label$29
	$5 = $11
	
.LABEL $label$28
	*($3) = $11
	CALL $10($5)
	
.LABEL $label$24
	$11 = *($4 + [88])
	if ( ($11 == 0) ){ goto $label$32 }
	$3 = ($4 + [92])
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$34 }
	
.LOOP $label$35:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$36 }
	CALL $10($7)
	
.LABEL $label$36
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$35 }
	$5 = *(($4 + [88]))
	goto $label$33 
	
.LABEL $label$34
	$5 = $11
	
.LABEL $label$33
	*($3) = $11
	CALL $10($5)
	
.LABEL $label$32
	$global$0 = ($4 + [112])
}

void .FUNC $165 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [208])
	$global$0 = $5
	$6 = CALL $17()
	$6 = ((int_64)$6 / (int_64)1000)
	if ( ((uint_64)*($4 + [104]) > (uint_64)$6) ){ goto $label$1 }
	*($4 + [32]) = (int_64)0
	*($4 + [96]) = $6
	*($4 + [80]) = (int_64)0
	*(($4 + [104])) = $6
	$6 = *($4 + [88])
	if ( (int_64)($6 == 0) ){ goto $label$1 }
	*((($5 + [168]) + [32])) = [0]
	*($5 + [184]) = (int_64)-1
	*($5 + [192]) = (int_64)0
	*($5 + [204]) = [0]
	$7 = *($0)
	*($5 + [168]) = $7
	*($5 + [176]) = $7
	*(($5 + [152])) = $3
	*($5 + [144]) = $2
	*($5 + [136]) = (int_64)0
	*($5 + [128]) = $6
	*($5 + [120]) = ($5 + [168])
	CALL $132(($5 + [112]), ($5 + [120]), ($5 + [128]))
	$0 = *($5 + [116])
	if ( ($0 == 0) ){ goto $label$2 }
	*($5 + [8]) = *($0)
	$8 = CALL $27((($5 + [8]) + [8]), ($0 + [8]))
	$9 = CALL $27((($5 + [8]) + [20]), ($0 + [20]))
	CALL memcpy((($5 + [8]) + [32]), ($0 + [32]), [69])
	if ( ((int_64)*(($5 + [96])) != (int_64)*(($4 + [56]))) ){ goto $label$8 }
	if ( ((int_64)*($5 + [88]) <= (int_64)*($4 + [48])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [8933])
	if ( ((int_64)*($5 + [88]) > (int_64)*($4 + [48])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($4 + [32])) = *($5 + [64])
	*(($4 + [80])) = *(($4 + [88]))
	*(($4 + [104])) = ((int_64)*(($4 + [96])) + (int_64)(CASTING uint_64)(uint_32 ((int_32)*($5 + [80]) * (int_32)[1000])))
	$4 = [1]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [1]
	if ( (*($9) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($8) & $4) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL $10(*(($5 + [36])))
	if ( ((*($8) & $4) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $10(*(($5 + [24])))
	
.LABEL $label$2
	$8 = *($5 + [192])
	if ( ($8 == 0) ){ goto $label$1 }
	$9 = (($5 + [168]) + [28])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($4 + [28])))
	
.LABEL $label$13
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*(($4 + [16])))
	
.LABEL $label$14
	CALL $10($4)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$11 }
	$4 = *(($5 + [192]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $8
	
.LABEL $label$9
	*($9) = $8
	CALL $10($4)
	
.LABEL $label$1
	$global$0 = ($5 + [208])
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $162 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [40]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = (int_64)5308428098346312208
	CALL $75($3, *($3 + [40]))
	$global$0 = ($3 + [48])
}

void .FUNC $161 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [228]) = $4
	*($3 + [224]) = $4
	*($3 + [232]) = ($4 + $5)
	*($3 + [176]) = (int_64)0
	*($3 + [168]) = (int_64)0
	*($3 + [184]) = (int_64)0
	*($3 + [192]) = (int_64)0
	*($3 + [200]) = (int_64)0
	*($3 + [208]) = (int_64)0
	*($3 + [216]) = [0]
	*($3 + [256]) = ($3 + [224])
	*($3 + [132]) = (($3 + [168]) + [16])
	*($3 + [136]) = (($3 + [168]) + [24])
	*($3 + [140]) = (($3 + [168]) + [32])
	*($3 + [144]) = (($3 + [168]) + [40])
	*($3 + [148]) = (($3 + [168]) + [48])
	*($3 + [128]) = ($3 + [168])
	CALL $79(($3 + [128]), ($3 + [256]))
	*(($4 = (($3 + [112]) + [8]))) = *($3 + [232])
	*($3 + [112]) = *($3 + [224])
	*(($5 = (($3 + [240]) + [8]))) = *($4)
	*($3 + [240]) = *($3 + [112])
	$4 = *($5)
	*((($3 + [256]) + [8])) = $4
	*((($3 + [128]) + [24])) = $4
	*($3 + [128]) = $0
	*($3 + [136]) = $1
	$0 = *($3 + [240])
	*($3 + [144]) = $0
	*($3 + [256]) = $0
	*($3 + [160]) = (int_64)5308428098346312208
	$0 = *($3 + [216])
	*((($3 + [56]) + [48])) = $0
	$1 = *($3 + [208])
	*((($3 + [56]) + [40])) = $1
	$6 = *($3 + [200])
	*((($3 + [56]) + [32])) = $6
	$7 = *($3 + [192])
	*((($3 + [56]) + [24])) = $7
	$8 = *($3 + [184])
	*((($3 + [56]) + [16])) = $8
	$9 = *($3 + [176])
	*((($3 + [56]) + [8])) = $9
	*(($3 + [8])) = $9
	*(($3 + [16])) = $8
	*(($3 + [24])) = $7
	*(($3 + [32])) = $6
	*(($3 + [40])) = $1
	*(($3 + [48])) = $0
	$0 = *($3 + [168])
	*($3) = $0
	*($3 + [56]) = $0
	CALL $41(($3 + [128]), $3)
	$global$0 = ($3 + [272])
}

void .FUNC $160 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	*($3 + [32]) = (int_64)0
	$2 = [0]
	$5 = ($3 + [32])
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	*($3 + [32]) = (int_64)0
	$5 = ($3 + [32])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10714])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [24]), $5, [8])
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*($3 + [40]) = (int_64)0
	$2 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $2, [8])
	*((($3 + [8]) + [8])) = *($3 + [40])
	$6 = *($3 + [24])
	$7 = *($3 + [32])
	CALL require_auth($0)
	CALL require_recipient($7)
	CALL require_recipient($6)
	$global$0 = ($3 + [48])
}

void .FUNC $230 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	$6 = *($4 + [4])
	*(($3 + [56])) = *($6 + [16])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6 + [8])
	*($3 + [48]) = *($6 + [24])
	if ( (CALL $18(*($4 + [8]), ($3 + [32]), [32]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($5), *($5 + [8]), (int_64)3607749778918490112, $3, [2], *(*($4 + [16])))
	*(*(($4 + [12])) + [120]) = $6
	
.LABEL $label$2
	CALL db_idx256_update($6, *(*($4 + [20])), ($3 + [32]), [2])
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	$0 = *($4 + [4])
	*($3 + [32]) = *($0 + [16])
	*($3 + [40]) = *($0 + [8])
	if ( (CALL $18((*($4 + [8]) + [32]), ($3 + [32]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490113, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [124])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($4 + [20])), ($3 + [32]))
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($2)
	$3 = CALL $1([9411])
	if ( ((int_32)$3 != (int_32)( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$2 }
	if ( (CALL $33($2, [0], [-1], [9411], $3) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $28(($1 + [20]), *($0))
	
.LABEL $label$1
	$2 = *($0 + [4])
	$4 = *($2)
	$3 = CALL $1([9411])
	if ( ((int_32)$3 != (int_32)( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$4 }
	if ( (CALL $33($2, [0], [-1], [9411], $3) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $28(($1 + [8]), *(($0 + [4])))
	
.LABEL $label$3
}

void .FUNC $169 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8822])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $175(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [16])
	*(($5 + [56])) = $6
	$7 = *($1 + [8])
	*((($5 + [32]) + [40])) = $7
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $7
	*($5 + [48]) = *($1 + [24])
	*($5 + [64]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9354])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9376])
	$3 = [36]
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [36]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$3 = ($0 + $3)
	$8 = $4
	$4 = ($8 + [-112])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($5 + [88]) = ($5 + [8])
	*($5 + [96]) = $1
	*($5 + [100]) = ($1 + [8])
	*($5 + [104]) = ($1 + [16])
	*($5 + [108]) = ($1 + [24])
	*($5 + [112]) = ($1 + [32])
	*($5 + [116]) = ($1 + [48])
	*($5 + [120]) = ($1 + [64])
	*($5 + [124]) = ($1 + [72])
	*($5 + [128]) = ($1 + [80])
	*($5 + [132]) = ($1 + [88])
	*($5 + [136]) = ($1 + [96])
	*($5 + [140]) = ($1 + [104])
	CALL $189(($5 + [96]), ($5 + [88]))
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [100]) = $1
	*($5 + [96]) = $0
	*($5 + [108]) = $1
	*($5 + [104]) = ($5 + [32])
	*($5 + [112]) = ($5 + [24])
	*($5 + [116]) = ($5 + [80])
	*($5 + [88]) = ($5 + [96])
	CALL $191(($5 + [88]), $3, ($3 + [1]))
	$global$0 = ($5 + [144])
}

void .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$global$0 = $2
	$0 = *($0)
	$3 = *($0)
	$4 = *($0 + [4])
	*(($2 + [56])) = *($4 + [40])
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = *($4 + [32])
	*($2 + [48]) = *($4 + [48])
	if ( (CALL $18(*($0 + [8]), ($2 + [32]), [32]) == 0) ){ goto $label$1 }
	$4 = *(*($0 + [12]) + [112])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$2 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$4 = CALL db_idx256_find_primary(*($3), *($3 + [8]), (int_64)-6228193299614662656, $2, [2], *(*($0 + [16])))
	*(*(($0 + [12])) + [112]) = $4
	
.LABEL $label$2
	CALL db_idx256_update($4, *(*($0 + [20])), ($2 + [32]), [2])
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $242 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [108]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9600])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6228193299614662656)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $181(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $243 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4 + [4])
	$6 = *($5 + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($4)
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490112, $3, [2], *($5))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx256_remove($6)
	
.LABEL $label$1
	$6 = *($0)
	$4 = *($6 + [4])
	$0 = *(($4 + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = *($6)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)3607749778918490113, $3, *($4))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx128_remove($0)
	
.LABEL $label$3
	$global$0 = ($3 + [32])
}

int_32 .FUNC $58 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [128]) = ($4 + [64])
	*($4 + [24]) = ($4 + [80])
	CALL $84(($4 + [24]), ($4 + [128]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [72])
	*($4 + [8]) = *($4 + [64])
	*(($8 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	*($4 + [56]) = (int_64)5308428098346312208
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$9 = *($4 + [88])
	$10 = *($4 + [80])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *(($4 + [8]))
	*((($5 + [16]) + [8])) = $6
	$7 = *($4)
	*(($5 + [8])) = $6
	*($5 + [16]) = $7
	*($5) = $7
	CALL $60($0, $1, $1, $2, $3, $5)
	$global$0 = ($5 + [32])
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($3 + [16])
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)-6228193299614662656, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $181($3, $5)
	*($2 + [12]) = [0]
	*($2 + [8]) = $3
	$4 = *(*(CALL $242(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [16])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9494])
	$4 = *(($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	$3 = *($0 + [4])
	*($1 + [48]) = *($3 + [48])
	*($1 + [40]) = *($3 + [40])
	*($1 + [32]) = *($3 + [32])
	*(($1 + [64])) = *(($3 + [64]))
	*($1 + [56]) = *($3 + [56])
	$3 = *($0 + [4])
	*($1 + [80]) = *($3 + [80])
	*(($1 + [88])) = *(($3 + [88]))
	$3 = *($0 + [4])
	*($1 + [96]) = *($3 + [96])
	CALL $28(($1 + [20]), ($3 + [20]))
	CALL $28(($1 + [8]), (*($0 + [4]) + [8]))
	*($1 + [72]) = *(*($0 + [4]) + [72])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $50 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $122(($4 + [16]), ($4 + [112]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4)
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [112])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10293])
	
.LABEL $label$1
	CALL require_auth($1)
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [10317])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [104])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [80]) = $7)
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [72]) = *($0)
	$8 = CALL $121(($5 + [72]), $7, [10343])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$7 = $11
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$7 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9052])
	
.LABEL $label$3
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$12 }
	if ( ((int_64)$6 != (int_64)*($8 + [8])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [10362])
	if ( ((int_64)$6 == (int_64)*($8 + [8])) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9098])
	if ( (*($4) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4 + [4]) <= [257]) ){ goto $label$8 }
	CALL eosio_assert([0], [10264])
	
.LABEL $label$8
	$10 = CALL has_auth($2)
	CALL $118($0)
	$12 = ($3 + [8])
	$11 = *($12)
	*((($5 + [56]) + [8])) = $11
	$7 = *($3)
	*((($5 + [24]) + [8])) = $11
	*($5 + [24]) = $7
	*($5 + [56]) = $7
	CALL $87($0, $1, ($5 + [24]))
	$11 = *($12)
	*((($5 + [40]) + [8])) = $11
	$7 = *($3)
	*((($5 + [8]) + [8])) = $11
	*($5 + [8]) = $7
	*($5 + [40]) = $7
	CALL $102($0, $2, ($5 + [8]), ( $2 ? $1 : $10 ))
	$13 = *($5 + [96])
	if ( ($13 == 0) ){ goto $label$13 }
	$3 = ($5 + [100])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$15 }
	
.LOOP $label$16:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$17 }
	CALL $10($12)
	
.LABEL $label$17
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$16 }
	$10 = *(($5 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$10 = $13
	
.LABEL $label$14
	*($3) = $13
	CALL $10($10)
	
.LABEL $label$13
	$global$0 = ($5 + [112])
}

int_32 .FUNC $52 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $119(($4 + [16]), ($4 + [144]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4)
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [128])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [16])
	CALL $120(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$global$0 = $2
	CALL require_auth(*($1 + [48]))
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	*($2 + [108]) = [0]
	$3 = *($0)
	*($2 + [72]) = $3
	*($2 + [80]) = $3
	*(($2 + [56])) = *($1 + [40])
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = *($1 + [32])
	*($2 + [48]) = *($1 + [48])
	*($2 + [24]) = ($2 + [72])
	CALL $132(($2 + [16]), ($2 + [24]), ($2 + [32]))
	if ( (*($2 + [20]) == 0) ){ goto $label$1 }
	CALL eosio_assert([0], [10574])
	
.LABEL $label$1
	$0 = CALL $1([10568])
	if ( ($0 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8400])
	goto $label$4 
	
.LABEL $label$5
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = (int_64)0
	
.LOOP $label$6:
	$4 = *(($0 + [10567]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$7
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$6 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$2 
	
.LABEL $label$3
	$3 = (int_64)4
	
.LABEL $label$2
	if ( ((int_64)*(($1 + [64])) == (int_64)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [10589])
	
.LABEL $label$8
	$3 = *(($1 + [48]))
	*($2 + [12]) = $1
	*($2 + [8]) = ($2 + [72])
	CALL $133($2, ($2 + [72]), $3, ($2 + [8]))
	$1 = *($2 + [96])
	if ( ($1 == 0) ){ goto $label$9 }
	$5 = (($2 + [72]) + [28])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*(($0 + [28])))
	
.LABEL $label$14
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*(($0 + [16])))
	
.LABEL $label$15
	CALL $10($0)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$12 }
	$0 = *(($2 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $1
	
.LABEL $label$10
	*($5) = $1
	CALL $10($0)
	
.LABEL $label$9
	$global$0 = ($2 + [112])
}

int_32 .FUNC $54 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memset(($4 + [72]), [0], [104])
	*(($4 + [88])) = (int_64)0
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [136])) = (int_64)0
	*(($4 + [160])) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [176]) = ($4 + [56])
	$8 = (($4 + [72]) + [32])
	*($4 + [292]) = $8
	*($4 + [296]) = ($4 + [112])
	*($4 + [300]) = ($4 + [120])
	*($4 + [304]) = ($4 + [128])
	*($4 + [308]) = ($4 + [144])
	*($4 + [312]) = ($4 + [152])
	*($4 + [316]) = ($4 + [168])
	*($4 + [320]) = ($4 + [172])
	*($4 + [280]) = ($4 + [72])
	$9 = (($4 + [72]) + [20])
	*($4 + [288]) = $9
	$10 = (($4 + [72]) + [8])
	*($4 + [284]) = $10
	CALL $131(($4 + [280]), ($4 + [176]))
	*(($11 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($3 = (($4 + [176]) + [8]))) = *($11)
	*($4 + [176]) = *($4)
	$11 = *($3)
	*((($4 + [280]) + [8])) = $11
	*((($4 + [16]) + [24])) = $11
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [176])
	*($4 + [32]) = $0
	*($4 + [280]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	*($4 + [176]) = *($4 + [72])
	$3 = CALL $27($3, $10)
	$9 = CALL $27((($4 + [176]) + [20]), $9)
	$10 = CALL memcpy((($4 + [176]) + [32]), $8, [69])
	$8 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($8) + $6))
	
.LABEL $label$4
	*($4 + [280]) = *($4 + [176])
	$11 = CALL $27(($4 + [288]), $3)
	$5 = CALL $27(($4 + [300]), $9)
	CALL memcpy(($4 + [312]), $10, [69])
	CALL void $8((int_32 ($4 + [280])), (int_32 $6))
	if ( (*($5) & [1]) ){ goto $label$13 }
	if ( (*($11) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $10(*(($4 + [308])))
	if ( ((*($11) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $10(*(($4 + [296])))
	$5 = [1]
	if ( ((*($9) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = [1]
	if ( (*($9) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($3) & $5) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*(($4 + [204])))
	if ( ((*($3) & $5) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($4 + [192])))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $3($2)
	
.LABEL $label$5
	if ( ((*(($4 + [92])) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*(($4 + [100])))
	
.LABEL $label$14
	if ( ((*(($4 + [80])) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*(($4 + [88])))
	
.LABEL $label$15
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$5 = *($0)
	*($3) = $5
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, $2)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $123($3, $0)
	if ( ((int_32)*($4 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10416])
	if ( (int_64)(*([0]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10492])
	
.LABEL $label$1
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [9806])
	CALL eosio_assert([0], [9840])
	
.LABEL $label$5
	$0 = CALL db_next_i64(*($4 + [20]), ($3 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	CALL $123($3, $0)
	
.LABEL $label$6
	CALL $125($3, $4)
	$6 = *($3 + [24])
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = ($3 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $10($0)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL $10($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

int_32 .FUNC $56 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [56]) = (int_64)0
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [48]), $2, [8])
	*($4 + [8]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($4 + [8]), $8, [8])
	$9 = *($4 + [8])
	*((($4 + [48]) + [8])) = $9
	*(($4 + [32])) = $3
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = (int_64)5308428098346312208
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [48])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $0), (int_64 $9), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	$global$0 = ($4 + [64])
	return [1]
}

void .FUNC $57 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	CALL $73($0, $1, $1, $2, $3, $4)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8400])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)0
	
.LABEL $label$3
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)*($1 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$9
	$7 = ((int_64)*($1) + (int_64)*($6))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [8822])
	$7 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$11
	*($1 + [40]) = *(*($3 + [4]))
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8400])
	goto $label$15 
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (int_64)0
	
.LOOP $label$17:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$17 }
	$8 = ($1 + [40])
	if ( ((int_64)$9 == (int_64)((int_64)$7 & (int_64)72057594037927935)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$8 = ($1 + [40])
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8720])
	
.LABEL $label$12
	$3 = $4
	$6 = ($3 + [-48])
	$global$0 = $6
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $6, [48])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $152 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [132]) = $2
	*($3 + [128]) = $2
	$5 = ($2 + $4)
	*($3 + [136]) = $5
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [136]))
	$2 = *($3 + [132])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [132]) = $2
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *((($3 + [128]) + [8]))
	$2 = *($3 + [132])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [132]) = $2
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [136]))
	$2 = *($3 + [132])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [132]) = $2
	*($3 + [96]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	$2 = *($3 + [132])
	
.LABEL $label$8
	CALL memcpy(($3 + [96]), $2, [8])
	*($3 + [132]) = ($2 + [8])
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	CALL $145(($3 + [128]), ($3 + [80]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [128]) + [8]))
	*($3 + [24]) = *($3 + [128])
	*(($5 = (($3 + [144]) + [8]))) = *($2)
	*($3 + [144]) = *($3 + [24])
	$2 = *($5)
	*((($3 + [160]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$0 = *($3 + [144])
	*($3 + [56]) = $0
	*($3 + [160]) = $0
	*($3 + [72]) = (int_64)5308428098346312208
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = [0]
	$0 = *($3 + [96])
	$1 = *($3 + [104])
	$6 = *($3 + [112])
	$7 = *($3 + [120])
	$2 = (*($3 + [84]) - *($3 + [80]))
	if ( ($2 == 0) ){ goto $label$10 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$9 }
	$5 = CALL $8($2)
	*(($3 + [16])) = ($5 + $2)
	*($3 + [8]) = $5
	*($3 + [12]) = $5
	$4 = *($3 + [80])
	$2 = (*($3 + [84]) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $4, $2)
	*($3 + [12]) = (*($3 + [12]) + $2)
	
.LABEL $label$10
	CALL $43(($3 + [40]), $7, $6, $1, $0, ($3 + [8]))
	$2 = *($3 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*($3 + [12]) = $2
	CALL $10($2)
	
.LABEL $label$11
	$2 = *($3 + [80])
	if ( ($2 == 0) ){ goto $label$12 }
	*($3 + [84]) = $2
	CALL $10($2)
	
.LABEL $label$12
	$global$0 = ($3 + [176])
	return (unreachable)
	
.LABEL $label$9
	CALL $16(($3 + [8]))
}

void .FUNC $153 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [72]), $2, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $5, [8])
	*($3 + [56]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [56]), $5, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [32])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = (int_64)5308428098346312208
	$0 = *($3 + [64])
	$1 = *($3 + [56])
	$7 = *($3 + [48])
	$8 = *($3 + [72])
	CALL require_auth($8)
	CALL $130(($3 + [8]), $8, $1, $0, $7)
	CALL require_recipient($0)
	$global$0 = ($3 + [80])
}

void .FUNC $150 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy($3, $6, [8])
	$7 = *($3)
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = (int_64)5308428098346312208
	CALL $55($3, *($3 + [40]), $7)
	$global$0 = ($3 + [48])
}

void .FUNC $151 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [48]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = (int_64)5308428098346312208
	CALL $66($3, *($3 + [56]), *($3 + [48]), *($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $156 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $5, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$9
	CALL memcpy(($3 + [32]), $5, [8])
	*(($6 = (($3 + [72]) + [8]))) = *($3 + [32])
	*(($3 + [56])) = $4
	*(($4 = (($3 + [16]) + [8]))) = *($6)
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [40])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = (int_64)5308428098346312208
	*($3 + [16]) = *($3 + [72])
	$0 = *($3 + [104])
	$7 = *($3 + [96])
	$8 = *($3 + [88])
	$1 = *($4)
	*((($3 + [112]) + [8])) = $1
	*((($3 + [128]) + [8])) = $1
	*(($3 + [8])) = $1
	$1 = *($3 + [16])
	*($3 + [128]) = $1
	*($3 + [112]) = $1
	*($3) = $1
	CALL $60(($3 + [32]), $0, $0, $7, $8, $3)
	$global$0 = ($3 + [144])
}

void .FUNC $157 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	*($3 + [80]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$9
	$4 = ($2 + $4)
	CALL memcpy(($3 + [80]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$10
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [80]) + [8]))) = *($3 + [40])
	*(($3 + [64])) = $4
	$7 = *($6)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [48])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = (int_64)5308428098346312208
	$0 = *($3 + [80])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $60(($3 + [40]), *($3 + [120]), *($3 + [112]), *($3 + [104]), *($3 + [96]), ($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $154 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $5, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$9
	CALL memcpy(($3 + [32]), $5, [8])
	*(($6 = (($3 + [72]) + [8]))) = *($3 + [32])
	*(($3 + [56])) = $4
	*(($4 = (($3 + [16]) + [8]))) = *($6)
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [40])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = (int_64)5308428098346312208
	*($3 + [16]) = *($3 + [72])
	$0 = *($3 + [104])
	$7 = *($3 + [96])
	$8 = *($3 + [88])
	$1 = *($4)
	*((($3 + [112]) + [8])) = $1
	*((($3 + [128]) + [8])) = $1
	*(($3 + [8])) = $1
	$1 = *($3 + [16])
	*($3 + [128]) = $1
	*($3 + [112]) = $1
	*($3) = $1
	CALL $72(($3 + [32]), $0, $0, $7, $8, $3)
	$global$0 = ($3 + [144])
}

void .FUNC $155 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy(($3 + [96]), $5, [8])
	*($3 + [88]) = (int_64)0
	*($3 + [80]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$9
	$4 = ($2 + $4)
	CALL memcpy(($3 + [80]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$10
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [80]) + [8]))) = *($3 + [40])
	*(($3 + [64])) = $4
	$7 = *($6)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [48])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = (int_64)5308428098346312208
	$0 = *($3 + [80])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $72(($3 + [40]), *($3 + [120]), *($3 + [112]), *($3 + [104]), *($3 + [96]), ($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $158 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [48]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$7 = *($3)
	*(($3 + [24])) = $4
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [32])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = (int_64)5308428098346312208
	$0 = *($3 + [56])
	CALL $73($3, $0, $0, *($3 + [48]), *($3 + [40]), $7)
	$global$0 = ($3 + [64])
}

void .FUNC $159 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [72]), $2, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $5, [8])
	*($3 + [56]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [56]), $5, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [48]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$9
	CALL memcpy(($3 + [8]), $5, [8])
	$7 = *($3 + [8])
	*(($3 + [32])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [40])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = (int_64)5308428098346312208
	CALL $73(($3 + [8]), *($3 + [72]), *($3 + [64]), *($3 + [56]), *($3 + [48]), $7)
	$global$0 = ($3 + [80])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10714])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [8498])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $164($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $69 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $110(($4 + [16]), ($4 + [112]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4)
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$9 = *($4 + [80])
	$1 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $1), (int_64 $9), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $68 (int_32 $0, int_64 $1, float_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($4 + [128]) = $3
	*($4 + [136]) = $2
	CALL require_auth(*($0))
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [10183])
	
.LABEL $label$1
	*($4 + [120]) = *($0)
	*($4 + [112]) = (int_64)0
	*($4 + [104]) = (int_64)0
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8400])
	goto $label$4 
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($5 + [8256]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$7
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$3 = (int_64)0
	
.LABEL $label$2
	*(($4 + [112])) = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	*($4 + [104]) = $1
	$7 = [0]
	*((($4 + [64]) + [32])) = [0]
	$3 = ((int_64)$3 & (int_64)72057594037927935)
	*($4 + [72]) = $3
	*($4 + [80]) = (int_64)-1
	*($4 + [88]) = (int_64)0
	$1 = *($0)
	*($4 + [64]) = $1
	*((($4 + [24]) + [32])) = [0]
	*($4 + [32]) = $3
	*($4 + [24]) = $1
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = CALL db_find_i64($1, $3, (int_64)-4157508551318700032, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $111(($4 + [64]), $5)
	if ( ((int_32)*($7 + [40]) == (int_32)($4 + [64])) ){ goto $label$8 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$8
	$6 = *(($4 + [52]))
	$8 = *(($4 + [48]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$14:
	$5 = ($6 + [-24])
	$9 = *($5)
	if ( ((int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8) == (int_64)$3) ){ goto $label$13 }
	$6 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$12 }
	if ( ((int_32)*($9 + [32]) == (int_32)($4 + [24])) ){ goto $label$11 }
	CALL eosio_assert([0], [8859])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$9 = [0]
	$5 = CALL db_find_i64(*($4 + [24]), *(($4 + [32])), (int_64)-4157502542122582016, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$9 = CALL $112(($4 + [24]), $5)
	if ( ((int_32)*($9 + [32]) == (int_32)($4 + [24])) ){ goto $label$11 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$11
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10211])
	
.LABEL $label$9
	if ( ($9 == 0) ){ goto $label$15 }
	CALL eosio_assert([0], [10211])
	
.LABEL $label$15
	$3 = *($0)
	*($4 + [12]) = ($4 + [136])
	*($4 + [8]) = ($4 + [104])
	*($4 + [16]) = ($4 + [128])
	CALL $113($4, ($4 + [24]), $3, ($4 + [8]))
	$3 = *($0)
	*($4 + [12]) = ($4 + [120])
	*($4 + [8]) = ($4 + [104])
	CALL $114($4, ($4 + [64]), $3, ($4 + [8]))
	$9 = *($4 + [48])
	if ( ($9 == 0) ){ goto $label$16 }
	$8 = ($4 + [52])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	CALL $10($6)
	
.LABEL $label$20
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$19 }
	$5 = *(($4 + [48]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $9
	
.LABEL $label$17
	*($8) = $9
	CALL $10($5)
	
.LABEL $label$16
	$9 = *($4 + [88])
	if ( ($9 == 0) ){ goto $label$21 }
	$8 = ($4 + [92])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $10($6)
	
.LABEL $label$25
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [88]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $9
	
.LABEL $label$22
	*($8) = $9
	CALL $10($5)
	
.LABEL $label$21
	$global$0 = ($4 + [144])
}

void .FUNC $225 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [16])
	*(($5 + [56])) = $6
	$7 = *($1 + [8])
	*(($5 + [72])) = $7
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $7
	*($5 + [48]) = *($1 + [24])
	*($5 + [64]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [48]) = $7(*($1 + [48]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9354])
	if ( ((int_64)*(($1 + [48])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9376])
	$3 = [36]
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [36]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$3 = ($0 + $3)
	$8 = $4
	$4 = ($8 + [-112])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($5 + [88]) = ($5 + [8])
	*($5 + [96]) = $1
	*($5 + [100]) = ($1 + [8])
	*($5 + [104]) = ($1 + [16])
	*($5 + [108]) = ($1 + [24])
	*($5 + [112]) = ($1 + [32])
	*($5 + [116]) = ($1 + [48])
	*($5 + [120]) = ($1 + [64])
	*($5 + [124]) = ($1 + [72])
	*($5 + [128]) = ($1 + [80])
	*($5 + [132]) = ($1 + [88])
	*($5 + [136]) = ($1 + [96])
	*($5 + [140]) = ($1 + [104])
	CALL $189(($5 + [96]), ($5 + [88]))
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [100]) = $1
	*($5 + [96]) = $0
	*($5 + [108]) = $1
	*($5 + [104]) = ($5 + [32])
	*($5 + [112]) = ($5 + [24])
	*($5 + [116]) = ($5 + [80])
	*($5 + [88]) = ($5 + [96])
	CALL $230(($5 + [88]), $3, ($3 + [1]))
	$global$0 = ($5 + [144])
}

int_32 .FUNC $65 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($2 + $7)
	*($4 + [128]) = ($4 + [64])
	*($4 + [24]) = ($4 + [80])
	CALL $129(($4 + [24]), ($4 + [128]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [72])
	*($4 + [8]) = *($4 + [64])
	*(($8 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	*($4 + [56]) = (int_64)5308428098346312208
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$9 = *($4 + [88])
	$10 = *($4 + [80])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $64 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	CALL require_auth($1)
	CALL $130($0, $1, $3, $2, $4)
	CALL require_recipient($2)
}

int_32 .FUNC $67 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $134(($4 + [16]), ($4 + [112]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4)
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $66 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	$5 = *($0)
	$0 = CALL $1([8257])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($0 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	*(($4 + [80])) = [0]
	*($4 + [56]) = $6
	*($4 + [48]) = $5
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [84]) = [0]
	*(($4 + [40])) = $2
	*($4 + [32]) = $3
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $1
	*($4 + [8]) = ($4 + [48])
	CALL $99($4, ($4 + [8]), ($4 + [16]))
	$0 = *($4 + [4])
	if ( ($0 == 0) ){ goto $label$9 }
	if ( (int_64)(*($0 + [48]) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [10416])
	if ( (int_64)(*(*($4 + [4]) + [48]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10492])
	
.LABEL $label$7
	$6 = *($4)
	*($4 + [88]) = $6
	$0 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$10 }
	CALL eosio_assert([0], [9806])
	$0 = *($4 + [92])
	
.LABEL $label$10
	CALL $135(($4 + [88]))
	CALL $136(*($4 + [8]), $0)
	$8 = *($4 + [72])
	if ( ($8 == 0) ){ goto $label$11 }
	$9 = ($4 + [76])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $10($7)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($4 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $8
	
.LABEL $label$12
	*($9) = $8
	CALL $10($0)
	
.LABEL $label$11
	$global$0 = ($4 + [96])
}

int_32 .FUNC $61 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [136]))) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	*($4 + [176]) = ($4 + [80])
	*($4 + [40]) = ($4 + [96])
	CALL $85(($4 + [40]), ($4 + [176]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [88])
	*($4 + [24]) = *($4 + [80])
	*(($3 = (($4 + [160]) + [8]))) = *($9)
	*($4 + [160]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [176]) + [8])) = $9
	*(($4 + [64])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [160])
	*($4 + [56]) = $0
	*($4 + [176]) = $0
	*($4 + [72]) = (int_64)5308428098346312208
	*(($9 = (($4 + [144]) + [8]))) = *($8)
	*($4 + [144]) = *($4 + [128])
	$0 = *($4 + [120])
	$1 = *($4 + [112])
	$10 = *($4 + [104])
	$11 = *($4 + [96])
	*($3) = *($9)
	*($4 + [160]) = *($4 + [144])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$12 = *((($4 + [160]) + [8]))
	*((($4 + [176]) + [8])) = $12
	*((($4 + [8]) + [8])) = $12
	$12 = *($4 + [160])
	*($4 + [8]) = $12
	*($4 + [176]) = $12
	CALL void $3((int_32 $11), (int_64 $10), (int_64 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $60 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [256])
	$global$0 = $6
	*($6 + [240]) = $3
	*($6 + [248]) = $2
	*($6 + [232]) = $4
	CALL require_auth($1)
	CALL require_recipient($3)
	CALL require_recipient($4)
	CALL require_recipient($2)
	CALL $80($0, $2, $3, $4)
	$7 = CALL $17()
	$8 = ((int_64)$7 / (int_64)1000)
	*($6 + [224]) = ((int_64)CALL $89($0, $2, $3, $4) + (int_64)$8)
	$9 = *($5 + [8])
	$10 = CALL $1([8257])
	if ( ($10 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($10 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$11 = *(($10 + [8256]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	if ( ((int_64)((int_64)((int_64)$7 << (int_64)8) | (int_64)4) == (int_64)$9) ){ goto $label$7 }
	CALL eosio_assert([0], [9719])
	
.LABEL $label$7
	*(($6 + [216])) = [0]
	*($6 + [192]) = $1
	*($6 + [200]) = (int_64)-1
	*($6 + [208]) = (int_64)0
	*($6 + [220]) = [0]
	*($6 + [184]) = *($0)
	*(($6 + [168])) = $4
	*($6 + [160]) = $3
	*($6 + [152]) = (int_64)0
	*($6 + [144]) = $2
	*($6 + [136]) = ($6 + [184])
	CALL $90(($6 + [128]), ($6 + [136]), ($6 + [144]))
	$10 = *($6 + [132])
	if ( ($10 == 0) ){ goto $label$10 }
	$7 = *($5)
	if ( ((int_64)$7 <= (int_64)*($10 + [16])) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [9745])
	$7 = *($5)
	if ( ((int_64)$7 <= (int_64)*(*($6 + [132]) + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [9761])
	$7 = *($5)
	
.LABEL $label$8
	$4 = *($6 + [128])
	if ( ((int_64)$7 >= (int_64)*(*($6 + [132]) + [16])) ){ goto $label$12 }
	*($6 + [88]) = $5
	$10 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $10) ){ goto $label$13 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$13
	CALL $91(*($6 + [136]), $10, (int_64)0, ($6 + [88]))
	goto $label$11 
	
.LABEL $label$12
	*($6 + [88]) = $4
	$10 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $10) ){ goto $label$14 }
	CALL eosio_assert([0], [9806])
	$10 = *($6 + [92])
	
.LABEL $label$14
	CALL $92(($6 + [88]))
	CALL $93(*($6 + [136]), $10)
	
.LABEL $label$11
	*(($6 + [120])) = [0]
	*($6 + [96]) = $1
	*($6 + [104]) = (int_64)-1
	*($6 + [112]) = (int_64)0
	*($6 + [124]) = [0]
	*($6 + [88]) = *($0)
	*(($6 + [72])) = *($6 + [232])
	*($6 + [48]) = *($6 + [248])
	*($6 + [64]) = *($6 + [240])
	*($6 + [56]) = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8)
	*($6 + [40]) = ($6 + [88])
	CALL $94(($6 + [32]), ($6 + [40]), ($6 + [48]))
	if ( (*($6 + [36]) == 0) ){ goto $label$16 }
	$10 = *($6 + [36])
	*($6 + [12]) = $5
	*($6 + [8]) = ($6 + [224])
	if ( $10 ){ goto $label$17 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$17
	CALL $95(*($6 + [40]), $10, (int_64)0, ($6 + [8]))
	goto $label$15 
	
.LABEL $label$16
	*($6 + [20]) = $5
	*($6 + [12]) = ($6 + [224])
	*($6 + [8]) = ($6 + [88])
	*($6 + [16]) = ($6 + [248])
	*($6 + [24]) = ($6 + [240])
	*($6 + [28]) = ($6 + [232])
	CALL $96($6, ($6 + [88]), $1, ($6 + [8]))
	
.LABEL $label$15
	$7 = *($6 + [224])
	$4 = (int_64)
	CALL $97($0, ( [1] ? ( [1] ? (CASTING uint_32)(uint_64 ((uint_64)$4($7 - $8)) / (uint_64)(int_64)1000)) : (uint_64)($4 <= (int_64)1000) ) : (uint_64)($7 <= $8) ), $1, *($6 + [248]), *($6 + [240]), *($6 + [232]), (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8))
	$5 = *($6 + [112])
	if ( ($5 == 0) ){ goto $label$18 }
	$0 = ($6 + [116])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$22 }
	CALL $10($11)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$21 }
	$10 = *(($6 + [112]))
	goto $label$19 
	
.LABEL $label$20
	$10 = $5
	
.LABEL $label$19
	*($0) = $5
	CALL $10($10)
	
.LABEL $label$18
	$5 = *($6 + [208])
	if ( ($5 == 0) ){ goto $label$23 }
	$0 = ($6 + [212])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$25 }
	
.LOOP $label$26:
	$10 = ($10 + [-24])
	$11 = *($10)
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$27 }
	CALL $10($11)
	
.LABEL $label$27
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$26 }
	$10 = *(($6 + [208]))
	goto $label$24 
	
.LABEL $label$25
	$10 = $5
	
.LABEL $label$24
	*($0) = $5
	CALL $10($10)
	
.LABEL $label$23
	$global$0 = ($6 + [256])
}

int_32 .FUNC $63 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($4 = $3) + [104]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [128]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $126(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($6 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4)
	$3 = *($6)
	*((($4 + [128]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	*($4 + [132]) = ($4 + [104])
	*($4 + [128]) = ($4 + [16])
	CALL $127(($4 + [128]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($2)
	$2 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $10(*(($4 + [96])))
	$global$0 = ($4 + [144])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [144])
	return $2
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10244])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [10264])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $111(($3 + [40]), $4)
	if ( ((int_32)*($2 + [40]) == (int_32)($3 + [40])) ){ goto $label$8 }
	CALL eosio_assert([0], [8859])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8590])
	
.LABEL $label$8
	CALL require_auth(*($2 + [32]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9052])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [10538])
	
.LABEL $label$15
	$4 = ($1 + [8])
	if ( ((int_64)*($4) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [9098])
	
.LABEL $label$16
	*($3 + [32]) = $1
	CALL $128(($3 + [40]), $2, (int_64)0, ($3 + [32]))
	$6 = *(($2 + [32]))
	*(($8 = (($3 + [16]) + [8]))) = *($4)
	$7 = *($1)
	*(($3 + [8])) = *($8)
	*($3 + [16]) = $7
	*($3) = *($3 + [16])
	CALL $87($0, $6, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [68])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $10($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL $10($4)
	
.LABEL $label$17
	$global$0 = ($3 + [80])
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $227 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9354])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9376])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	CALL $176(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $228 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8822])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $229 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($5 + [8])
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, $2, $6), ($4 + [16]), [16]
	*($5 + [20]) = $7)
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$2
	*($4 + [40]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [16]) = $6)
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [40]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $208(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $10($5)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

int_64 .FUNC $89 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	$8 = CALL $17()
	*(($4 + [184])) = [0]
	*($4 + [160]) = $6
	*($4 + [168]) = (int_64)-1
	$6 = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [188]) = [0]
	*($4 + [152]) = *($0)
	*(($4 + [136])) = $3
	*($4 + [128]) = $2
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = $1
	$1 = ((int_64)$8 / (int_64)1000)
	*($4 + [104]) = ($4 + [152])
	CALL $99(($4 + [96]), ($4 + [104]), ($4 + [112]))
	$5 = *($4 + [100])
	if ( ($5 == 0) ){ goto $label$7 }
	$8 = *($5 + [80])
	if ( (int_64)($8 == 0) ){ goto $label$7 }
	$6 = *($5 + [104])
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	*($4 + [92]) = [0]
	$9 = *($0)
	*($4 + [56]) = $9
	*($4 + [64]) = $9
	*(($4 + [40])) = $3
	*($4 + [32]) = $2
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $8
	$6 = (int_64))($6 - $1)
	*($4 + [8]) = ($4 + [56])
	CALL $132($4, ($4 + [8]), ($4 + [16]))
	$5 = *($4 + [4])
	if ( ($5 == 0) ){ goto $label$8 }
	$5 = *($5 + [96])
	if ( ((uint_64)$6 >= (uint_64)(CASTING uint_64)(uint_32 $5)) ){ goto $label$8 }
	$6 = (CASTING uint_64)(uint_32 ((int_32)$5 * (int_32)[1000]))
	
.LABEL $label$8
	$0 = *($4 + [80])
	if ( ($0 == 0) ){ goto $label$7 }
	$10 = (($4 + [56]) + [28])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($5 + [28])))
	
.LABEL $label$13
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*(($5 + [16])))
	
.LABEL $label$14
	CALL $10($5)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$11 }
	$5 = *(($4 + [80]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $0
	
.LABEL $label$9
	*($10) = $0
	CALL $10($5)
	
.LABEL $label$7
	$0 = *($4 + [176])
	if ( ($0 == 0) ){ goto $label$15 }
	$10 = ($4 + [180])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$19 }
	CALL $10($7)
	
.LABEL $label$19
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$18 }
	$5 = *(($4 + [176]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $0
	
.LABEL $label$16
	*($10) = $0
	CALL $10($5)
	
.LABEL $label$15
	$global$0 = ($4 + [192])
	return $6
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($2 + [16]) = $5)
	$0 = CALL db_find_i64($4, $5, (int_64)-4157502542122582016, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $112(($2 + [8]), $0)
	if ( ((int_32)*($3 + [32]) == (int_32)($2 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	$5 = (int_64)0
	if ( ((int_64)*($1) <= (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [8590])
	$5 = (int_64)0
	if ( ((int_64)*($1) > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9690])
	
.LABEL $label$1
	*($2) = $1
	CALL $198(($2 + [8]), $3, $5, $2)
	$0 = *($2 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$6 = ($2 + [36])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $10($3)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$8 }
	$1 = *(($2 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$1 = $0
	
.LABEL $label$6
	*($6) = $0
	CALL $10($1)
	
.LABEL $label$5
	$global$0 = ($2 + [48])
}

void .FUNC $87 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $123(($3 + [8]), $0)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	if ( ((int_64)*($4) >= (int_64)*($2)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9648])
	if ( ((int_64)*([0]) >= (int_64)*($2)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9672])
	
.LABEL $label$1
	*($3) = $2
	CALL $197(($3 + [8]), $4, $1, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $10($4)
	
.LABEL $label$9
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $0
	
.LABEL $label$6
	*($6) = $0
	CALL $10($2)
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $86 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$6 = ($global$0 - [288])
	$global$0 = $6
	*($6 + [272]) = $3
	*($6 + [280]) = $2
	*($6 + [264]) = $4
	$7 = *($0)
	$8 = CALL $1([8257])
	if ( ($8 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($8 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = (int_64)0
	
.LOOP $label$5:
	$10 = *(($8 + [8256]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)0
	
.LABEL $label$1
	*(($6 + [256])) = [0]
	*($6 + [224]) = $7
	*($6 + [240]) = (int_64)-1
	*($6 + [248]) = (int_64)0
	*($6 + [260]) = [0]
	*($6 + [232]) = ((int_64)$9 & (int_64)72057594037927935)
	*(($6 + [216])) = $3
	*($6 + [208]) = $4
	*($6 + [200]) = (int_64)0
	*($6 + [192]) = $2
	*($6 + [184]) = ($6 + [224])
	CALL $99(($6 + [176]), ($6 + [184]), ($6 + [192]))
	if ( (*($6 + [180]) == 0) ){ goto $label$9 }
	$8 = *($6 + [180])
	*($6 + [136]) = $5
	if ( ($8 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [9468])
	$8 = *($6 + [180])
	*($6 + [136]) = $5
	if ( $8 ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9158])
	
.LABEL $label$7
	CALL $192(*($6 + [184]), $8, (int_64)0, ($6 + [136]))
	*(($6 + [168])) = [0]
	*($6 + [144]) = $1
	*($6 + [152]) = (int_64)-1
	*($6 + [160]) = (int_64)0
	*($6 + [172]) = [0]
	*($6 + [136]) = *($0)
	*(($6 + [120])) = *($6 + [272])
	*($6 + [104]) = (int_64)0
	*($6 + [96]) = *($6 + [280])
	*($6 + [112]) = *($6 + [264])
	*($6 + [88]) = ($6 + [136])
	CALL $90(($6 + [80]), ($6 + [88]), ($6 + [96]))
	if ( (*($6 + [84]) == 0) ){ goto $label$11 }
	$8 = *($6 + [84])
	*($6 + [32]) = $5
	if ( $8 ){ goto $label$12 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$12
	CALL $193(*($6 + [88]), $8, (int_64)0, ($6 + [32]))
	goto $label$10 
	
.LABEL $label$11
	*($6 + [40]) = $5
	*($6 + [36]) = ($6 + [280])
	*($6 + [32]) = ($6 + [136])
	*($6 + [44]) = ($6 + [272])
	*($6 + [48]) = ($6 + [264])
	CALL $194(($6 + [72]), ($6 + [136]), $1, ($6 + [32]))
	
.LABEL $label$10
	*($6 + [72]) = ((int_64)CALL $17() / (int_64)1000)
	*(($6 + [64])) = [0]
	*($6 + [48]) = (int_64)-1
	$9 = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [32]) = *($0)
	*($6 + [40]) = *($6 + [264])
	$8 = CALL $1([8257])
	if ( ($8 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8400])
	goto $label$14 
	
.LABEL $label$15
	if ( ($8 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$9 = (int_64)0
	
.LOOP $label$16:
	$10 = *(($8 + [8256]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$17
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$16 }
	$9 = ((int_64)$9 & (int_64)72057594037927935)
	
.LABEL $label$13
	CALL $107(($6 + [24]), ($6 + [32]), $9)
	if ( (*($6 + [28]) == 0) ){ goto $label$20 }
	$9 = *($0)
	$8 = *($6 + [28])
	*($6 + [16]) = $5
	if ( $8 ){ goto $label$21 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$21
	CALL $195(($6 + [32]), $8, $9, ($6 + [16]))
	$0 = *($6 + [56])
	if ( $0 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$9 = *($0)
	*($6 + [16]) = $5
	*($6 + [20]) = ($6 + [72])
	CALL $196(($6 + [8]), ($6 + [32]), $9, ($6 + [16]))
	$0 = *($6 + [56])
	if ( ($0 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$5 = ($6 + [60])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$25 }
	CALL $10($10)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$24 }
	$8 = *(($6 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$8 = $0
	
.LABEL $label$22
	*($5) = $0
	CALL $10($8)
	
.LABEL $label$18
	$0 = *($6 + [160])
	if ( ($0 == 0) ){ goto $label$26 }
	$5 = ($6 + [164])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$30 }
	CALL $10($10)
	
.LABEL $label$30
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$29 }
	$8 = *(($6 + [160]))
	goto $label$27 
	
.LABEL $label$28
	$8 = $0
	
.LABEL $label$27
	*($5) = $0
	CALL $10($8)
	
.LABEL $label$26
	$0 = *($6 + [248])
	if ( ($0 == 0) ){ goto $label$31 }
	$5 = ($6 + [252])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$35 }
	CALL $10($10)
	
.LABEL $label$35
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($6 + [248]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $0
	
.LABEL $label$32
	*($5) = $0
	CALL $10($8)
	
.LABEL $label$31
	$global$0 = ($6 + [288])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [40])) = *($2 + [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$1 = *($1)
	*($2 + [8]) = (int_64)0
	$4 = *($1 + [4])
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$4 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*($0 + [24]) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [9409] ? [9411] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $8($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $25($11, $15, [9397], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $10(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $1($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $8($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $26($0)
}

int_32 .FUNC $81 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [112])
	$global$0 = $5
	$6 = *($0)
	$0 = CALL $1([8257])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($0 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$7 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	*(($5 + [104])) = [0]
	*($5 + [80]) = $7
	*($5 + [72]) = $6
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	*($5 + [108]) = [0]
	*(($5 + [56])) = $2
	*($5 + [48]) = $3
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $1
	*($5 + [24]) = ($5 + [72])
	CALL $99(($5 + [16]), ($5 + [24]), ($5 + [32]))
	$0 = *($5 + [20])
	if ( $0 ){ goto $label$7 }
	CALL eosio_assert([0], [9244])
	$0 = *($5 + [20])
	
.LABEL $label$7
	if ( ((int_64)*(($0 + [40])) == (int_64)*($4 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [8933])
	
.LABEL $label$8
	if ( ((int_64)*($0 + [32]) >= (int_64)*($4)) ){ goto $label$9 }
	CALL eosio_assert([0], [9271])
	
.LABEL $label$9
	$0 = *($5 + [20])
	if ( ((int_64)*(($0 + [40])) == (int_64)*(($4 + [8]))) ){ goto $label$10 }
	CALL eosio_assert([0], [8933])
	
.LABEL $label$10
	$9 = [0]
	if ( ((int_64)*($0 + [32]) < (int_64)*($4)) ){ goto $label$11 }
	$0 = *($5 + [20])
	*($5 + [8]) = $4
	if ( $0 ){ goto $label$12 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$12
	CALL $168(*($5 + [24]), $0, (int_64)0, ($5 + [8]))
	$9 = [1]
	
.LABEL $label$11
	$4 = *($5 + [96])
	if ( ($4 == 0) ){ goto $label$13 }
	$10 = ($5 + [100])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $10($8)
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($5 + [96]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $4
	
.LABEL $label$14
	*($10) = $4
	CALL $10($0)
	
.LABEL $label$13
	$global$0 = ($5 + [112])
	return $9
}

void .FUNC $80 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	float_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [256])
	$global$0 = $4
	CALL $118($0)
	*($4 + [248]) = ((int_64)CALL $17() / (int_64)1000)
	*(($4 + [240])) = [0]
	*($4 + [216]) = $2
	*($4 + [224]) = (int_64)-1
	$5 = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [208]) = *($0)
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [8400])
	goto $label$2 
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$4:
	$7 = *(($6 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	
.LABEL $label$1
	CALL $107(($4 + [200]), ($4 + [208]), ((int_64)$5 & (int_64)72057594037927935))
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [8400])
	goto $label$8 
	
.LABEL $label$9
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = (int_64)0
	
.LOOP $label$10:
	$7 = *(($6 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$10 }
	goto $label$6 
	
.LABEL $label$7
	$5 = (int_64)0
	
.LABEL $label$6
	*(($4 + [192])) = [0]
	*($4 + [176]) = (int_64)-1
	*($4 + [184]) = (int_64)0
	*($4 + [196]) = [0]
	*($4 + [160]) = *($0)
	$5 = ((int_64)$5 & (int_64)72057594037927935)
	*($4 + [168]) = $5
	*(($4 + [152])) = $3
	*($4 + [144]) = $2
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = $1
	*($4 + [120]) = ($4 + [160])
	CALL $99(($4 + [112]), ($4 + [120]), ($4 + [128]))
	$8 = *($4 + [116])
	if ( ($8 == 0) ){ goto $label$12 }
	CALL $165($0, $1, $2, $3, $8)
	if ( (*($4 + [204]) == 0) ){ goto $label$13 }
	$6 = [0]
	*(($4 + [104])) = [0]
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	$1 = *($0)
	*($4 + [72]) = $1
	*($4 + [80]) = $5
	$7 = CALL db_find_i64($1, $5, (int_64)-4157502542122582016, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	$6 = CALL $112(($4 + [72]), $7)
	if ( ((int_32)*($6 + [32]) == (int_32)($4 + [72])) ){ goto $label$14 }
	CALL eosio_assert([0], [8859])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8590])
	
.LABEL $label$14
	$1 = (int_64)0
	$7 = *($4 + [204])
	$9 = (int_64)
	if ( (uint_64)($9(*($4 + [248]) - *($7 + [40]))) <= (int_64)500) ){ goto $label$19 }
	$10 = *($6 + [16])
	$1 = *($7 + [24])
	*(($4 + [64])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	$11 = *($0)
	*($4 + [32]) = $11
	*($4 + [40]) = $5
	$9 = ((uint_64)$9 / (uint_64)(int_64)500)
	$7 = CALL db_find_i64($11, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$18 }
	$7 = CALL $111(($4 + [32]), $7)
	if ( ((int_32)*($7 + [40]) == (int_32)($4 + [32])) ){ goto $label$20 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$20
	$5 = *($7)
	$11 = *($6)
	$10 = ((float_64)((float_64)CALL $36(((float_64)$10 + (float_64)(float_64)1), (CASTING float_64)(int_64 $9)) + (float_64)(float_64)-1) * (float_64)((float_64)((float_64)(CASTING float_64)(int_64 $5) / (float_64)(CASTING float_64)(int_64 $11)) * (float_64)(CASTING float_64)(int_64 $1)))
	$12 = *($4 + [56])
	if ( ($12 == 0) ){ goto $label$21 }
	$13 = ($4 + [60])
	$6 = *($13)
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	CALL $10($7)
	
.LABEL $label$25
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($4 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $12
	
.LABEL $label$22
	*($13) = $12
	CALL $10($6)
	
.LABEL $label$21
	if ( ((float_64)(float_64)|$10| < (float_64)(float_64)9223372036854775808) ){ goto $label$26 }
	$1 = (int_64)-9223372036854775808
	goto $label$19 
	
.LABEL $label$26
	$1 = (Rounds 0)($10)
	
.LABEL $label$19
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$29 }
	CALL eosio_assert([0], [8400])
	goto $label$28 
	
.LABEL $label$29
	if ( ($6 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$5 = (int_64)0
	
.LOOP $label$30:
	$7 = *(($6 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$31 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$31
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$30 }
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$27
	$5 = (int_64)4
	if ( ((int_64)$1 >= (int_64)1) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], [8590])
	
.LABEL $label$17
	*($8 + [72]) = *($4 + [248])
	*($4 + [24]) = $5
	*(($4 + [8])) = *($4 + [24])
	*($4 + [16]) = $1
	*($4) = $1
	CALL $166($0, $2, $3, $4)
	
.LABEL $label$16
	$0 = *($4 + [96])
	if ( ($0 == 0) ){ goto $label$13 }
	$12 = ($4 + [100])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$33 }
	
.LOOP $label$34:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL $10($7)
	
.LABEL $label$35
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$34 }
	$6 = *(($4 + [96]))
	goto $label$32 
	
.LABEL $label$33
	$6 = $0
	
.LABEL $label$32
	*($12) = $0
	CALL $10($6)
	
.LABEL $label$13
	$6 = *($4 + [116])
	*($4 + [72]) = $8
	*($4 + [76]) = ($4 + [248])
	if ( $6 ){ goto $label$36 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$36
	CALL $167(*($4 + [120]), $6, (int_64)0, ($4 + [72]))
	
.LABEL $label$12
	$0 = *($4 + [184])
	if ( ($0 == 0) ){ goto $label$37 }
	$12 = ($4 + [188])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$39 }
	
.LOOP $label$40:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$41 }
	CALL $10($7)
	
.LABEL $label$41
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$40 }
	$6 = *(($4 + [184]))
	goto $label$38 
	
.LABEL $label$39
	$6 = $0
	
.LABEL $label$38
	*($12) = $0
	CALL $10($6)
	
.LABEL $label$37
	$0 = *($4 + [232])
	if ( ($0 == 0) ){ goto $label$42 }
	$12 = ($4 + [236])
	$6 = *($12)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$44 }
	
.LOOP $label$45:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$46 }
	CALL $10($7)
	
.LABEL $label$46
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$45 }
	$6 = *(($4 + [232]))
	goto $label$43 
	
.LABEL $label$44
	$6 = $0
	
.LABEL $label$43
	*($12) = $0
	CALL $10($6)
	
.LABEL $label$42
	$global$0 = ($4 + [256])
	(unreachable)
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($1 + [16])))
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $10($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $149 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [8]), $5, [8])
	$7 = *($3 + [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [48]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = (int_64)5308428098346312208
	CALL $49(($3 + [8]), *($3 + [56]), $7, *($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $148 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [164]) = $2
	*($3 + [160]) = $2
	$5 = ($2 + $4)
	*($3 + [168]) = $5
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [168]))
	$2 = *($3 + [164])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [144]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *((($3 + [160]) + [8]))
	$2 = *($3 + [164])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [136]) = (int_64)0
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [168]))
	$2 = *($3 + [164])
	
.LABEL $label$7
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	$2 = *($3 + [164])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [128]) + [8]))) = *($3 + [72])
	*($3 + [164]) = ($2 + [8])
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL $115(($3 + [160]), ($3 + [112]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [160]) + [8]))
	*($3 + [56]) = *($3 + [160])
	*(($4 = (($3 + [176]) + [8]))) = *($2)
	*($3 + [176]) = *($3 + [56])
	$2 = *($4)
	*((($3 + [192]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [176])
	*($3 + [88]) = $0
	*($3 + [192]) = $0
	*($3 + [104]) = (int_64)5308428098346312208
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [128])
	$0 = *($3 + [144])
	$1 = *($3 + [152])
	$2 = CALL $27(($3 + [24]), ($3 + [112]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $51(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [112]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*(($3 + [120])))
	$global$0 = ($3 + [208])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [208])
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10719])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $37($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $144 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $115(($3 + [144]), ($3 + [104]))
	*($3 + [96]) = [0]
	*($3 + [88]) = (int_64)0
	CALL $115(($3 + [144]), ($3 + [88]))
	*(($2 = (($3 + [32]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [32]) = *($3 + [144])
	*(($4 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [32])
	$2 = *($4)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [72])) = $2
	*($3 + [48]) = $0
	*($3 + [56]) = $1
	$0 = *($3 + [160])
	*($3 + [64]) = $0
	*($3 + [176]) = $0
	*($3 + [80]) = (int_64)5308428098346312208
	$2 = CALL $27($3, ($3 + [88]))
	$4 = CALL $27(($3 + [16]), ($3 + [104]))
	CALL $70(($3 + [48]), *($3 + [136]), *($3 + [128]), *($3 + [120]), $4, $2)
	if ( (*($2) & [1]) ){ goto $label$14 }
	if ( (*($4) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $10(*($2 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $10(*($4 + [8]))
	$2 = [1]
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = [1]
	if ( (*($3 + [88]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( (*($3 + [104]) & $2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*(($3 + [96])))
	if ( ((*($3 + [104]) & $2) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

void .FUNC $147 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [128]) + [8]))) = *($3 + [72])
	*($3 + [148]) = ($2 + [8])
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL $115(($3 + [144]), ($3 + [112]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [56]) = *($3 + [144])
	*(($5 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [56])
	$2 = *($5)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [160])
	*($3 + [88]) = $0
	*($3 + [176]) = $0
	*($3 + [104]) = (int_64)5308428098346312208
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [128])
	$2 = CALL $27(($3 + [24]), ($3 + [112]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $62(($3 + [72]), ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [112]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [120])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [192])
}

void .FUNC $146 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [120]) + [8]))) = *($3 + [64])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $115(($3 + [144]), ($3 + [104]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [48]) = *($3 + [144])
	*(($5 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [160])
	*($3 + [80]) = $0
	*($3 + [176]) = $0
	*($3 + [96]) = (int_64)5308428098346312208
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [120])
	$0 = *($3 + [136])
	$2 = CALL $27(($3 + [16]), ($3 + [104]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $47(($3 + [64]), $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2) = (int_64)0
	$3 = [0]
	*($2 + [8]) = [0]
	$4 = *($1 + [24])
	$5 = *($1 + [16])
	$6 = *($1 + [8])
	$7 = *($1)
	$8 = (*(($1 + [36])) - *($1 + [32]))
	if ( ($8 == 0) ){ goto $label$6 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL $8($8)
	*(($2 + [8])) = ($9 + $8)
	*($2) = $9
	*($2 + [4]) = $9
	$3 = *(($1 + [32]))
	$1 = (*(($1 + [36])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($9, $3, $1)
	$3 = ($9 + $1)
	*($2 + [4]) = $3
	goto $label$4 
	
.LABEL $label$6
	$9 = [0]
	$8 = [0]
	goto $label$3 
	
.LABEL $label$5
	$3 = $9
	
.LABEL $label$4
	$8 = $9
	
.LABEL $label$3
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$10 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($10) + $1))
	
.LABEL $label$7
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $8)
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$1 }
	$8 = CALL $8($0)
	*(($2 + [24])) = ($8 + $0)
	*($2 + [16]) = $8
	*($2 + [20]) = $8
	$3 = ($3 - $9)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($8, $9, $3)
	*($2 + [20]) = ($8 + $3)
	
.LABEL $label$8
	CALL void $10((int_32 $7), (int_64 $6), (int_64 $5), (int_64 $4), (int_64 ($2 + [16])), (int_32 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [20]) = $1
	CALL $10($1)
	
.LABEL $label$9
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [4]) = $1
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $16($2)
	
.LABEL $label$1
	CALL $16(($2 + [16]))
	(unreachable)
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $145(*($1), ($3 + [32]))
}

void .FUNC $143 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [228]) = $2
	*($3 + [224]) = $2
	*($3 + [232]) = ($2 + $4)
	*(($3 + [136])) = (int_64)0
	*((($3 + [120]) + [24])) = (int_64)0
	*(($3 + [184])) = (int_64)0
	*(($3 + [208])) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [152]) = (int_64)0
	*($3 + [160]) = (int_64)0
	*($3 + [168]) = (int_64)0
	*($3 + [176]) = (int_64)0
	*($3 + [200]) = (int_64)0
	*($3 + [304]) = ($3 + [224])
	$2 = (($3 + [120]) + [32])
	*($3 + [252]) = $2
	*($3 + [256]) = ($3 + [160])
	*($3 + [260]) = ($3 + [168])
	*($3 + [264]) = ($3 + [176])
	*($3 + [268]) = ($3 + [192])
	*($3 + [272]) = ($3 + [200])
	*($3 + [276]) = ($3 + [216])
	*($3 + [280]) = ($3 + [220])
	*($3 + [240]) = ($3 + [120])
	$4 = (($3 + [120]) + [20])
	*($3 + [248]) = $4
	$5 = (($3 + [120]) + [8])
	*($3 + [244]) = $5
	CALL $131(($3 + [240]), ($3 + [304]))
	*(($6 = (($3 + [104]) + [8]))) = *($3 + [232])
	*($3 + [104]) = *($3 + [224])
	*(($7 = (($3 + [288]) + [8]))) = *($6)
	*($3 + [288]) = *($3 + [104])
	$6 = *($7)
	*((($3 + [304]) + [8])) = $6
	*((($3 + [240]) + [24])) = $6
	*($3 + [240]) = $0
	*($3 + [248]) = $1
	$0 = *($3 + [288])
	*($3 + [256]) = $0
	*($3 + [304]) = $0
	*($3 + [272]) = (int_64)5308428098346312208
	*($3) = *($3 + [120])
	$5 = CALL $27(($3 + [8]), $5)
	$4 = CALL $27(($3 + [20]), $4)
	CALL memcpy(($3 + [32]), $2, [69])
	CALL $53(($3 + [240]), $3)
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*(($3 + [28])))
	
.LABEL $label$5
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL $10(*(($3 + [16])))
	
.LABEL $label$6
	if ( ((*(($3 + [140])) & [1]) == 0) ){ goto $label$7 }
	CALL $10(*(($3 + [148])))
	
.LABEL $label$7
	if ( ((*(($3 + [128])) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*(($3 + [136])))
	
.LABEL $label$8
	$global$0 = ($3 + [320])
}

void .FUNC $142 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [56])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [56])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10714])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$6
	CALL memcpy(($3 + [48]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($3 + [24])) = $6
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = (int_64)5308428098346312208
	CALL $68($3, *($3 + [56]), *($3 + [48]), *($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$6 = ($global$0 - [96])
	$global$0 = $6
	if ( ((int_64)$1 == (int_64)$2) ){ goto $label$1 }
	if ( ((int_64)*($0 + [32]) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9423])
	
.LABEL $label$1
	CALL require_auth($1)
	CALL require_recipient($3)
	CALL require_recipient($4)
	CALL require_recipient($2)
	CALL $80($0, $2, $3, $4)
	$7 = ($5 + [8])
	$8 = *($7)
	*((($6 + [80]) + [8])) = $8
	$9 = *($5)
	*((($6 + [32]) + [8])) = $8
	*($6 + [32]) = $9
	*($6 + [80]) = $9
	CALL $86($0, $1, $2, $4, $3, ($6 + [32]))
	$3 = *($7)
	*((($6 + [64]) + [8])) = $3
	$2 = *($5)
	*((($6 + [16]) + [8])) = $3
	*($6 + [16]) = $2
	*($6 + [64]) = $2
	CALL $87($0, $1, ($6 + [16]))
	$2 = *($7)
	*((($6 + [48]) + [8])) = $2
	$1 = *($5)
	*(($6 + [8])) = $2
	*($6) = $1
	*($6 + [48]) = $1
	CALL $88($0, $6)
	$global$0 = ($6 + [96])
}

void .FUNC $73 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [400])
	$global$0 = $6
	$7 = CALL $17()
	*(($6 + [360])) = [0]
	*($6 + [336]) = $1
	*($6 + [344]) = (int_64)-1
	*($6 + [352]) = (int_64)0
	*($6 + [364]) = [0]
	*($6 + [328]) = *($0)
	*(($6 + [312])) = $4
	*($6 + [304]) = $3
	*($6 + [296]) = $5
	*($6 + [288]) = $2
	$7 = ((int_64)$7 / (int_64)1000)
	*($6 + [280]) = ($6 + [328])
	CALL $94(($6 + [272]), ($6 + [280]), ($6 + [288]))
	if ( *($6 + [276]) ){ goto $label$1 }
	CALL eosio_assert([0], [10018])
	
.LABEL $label$1
	CALL $80($0, $2, $3, $4)
	$8 = *($6 + [276])
	$9 = *($8 + [48])
	if ( (uint_64)($9 <= $7) ){ goto $label$4 }
	$7 = (int_64)
	if ( (uint_64)($7($9 - $7)) <= (int_64)1000) ){ goto $label$4 }
	CALL $97($0, (CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000)), $1, $2, $3, $4, $5)
	$0 = *($6 + [352])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = *(($8 + [24]))
	$9 = *($8 + [16])
	$10 = *($0)
	$8 = CALL $1([8257])
	if ( ($8 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8400])
	goto $label$7 
	
.LABEL $label$8
	if ( ($8 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = (int_64)0
	
.LOOP $label$9:
	$11 = *(($8 + [8256]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$10
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$9 }
	$7 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$5 
	
.LABEL $label$6
	$7 = (int_64)0
	
.LABEL $label$5
	*(($6 + [264])) = [0]
	*($6 + [240]) = $7
	*($6 + [232]) = $10
	*($6 + [248]) = (int_64)-1
	*($6 + [256]) = (int_64)0
	*($6 + [268]) = [0]
	*(($6 + [216])) = $4
	*($6 + [208]) = $3
	*($6 + [200]) = (int_64)0
	*($6 + [192]) = $2
	*($6 + [184]) = ($6 + [232])
	CALL $99(($6 + [176]), ($6 + [184]), ($6 + [192]))
	if ( (*($6 + [180]) == 0) ){ goto $label$11 }
	$8 = CALL $1([8257])
	if ( ($8 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8400])
	goto $label$14 
	
.LABEL $label$15
	if ( ($8 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$7 = (int_64)0
	
.LOOP $label$16:
	$11 = *(($8 + [8256]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$17
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$16 }
	if ( ((int_64)((int_64)((int_64)$7 << (int_64)8) | (int_64)4) != (int_64)$5) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_64)4 != (int_64)$5) ){ goto $label$11 }
	
.LABEL $label$12
	CALL require_recipient($3)
	CALL require_recipient($4)
	*((($6 + [40]) + [8])) = $5
	*($6 + [168]) = $5
	*($6 + [40]) = $9
	*($6 + [160]) = $9
	CALL $100($0, $2, $4, $3, ($6 + [40]))
	*((($6 + [24]) + [8])) = $5
	*($6 + [152]) = $5
	*($6 + [24]) = $9
	*($6 + [144]) = $9
	CALL $101($0, ($6 + [24]))
	*((($6 + [8]) + [8])) = $5
	*($6 + [136]) = $5
	*($6 + [8]) = $9
	*($6 + [128]) = $9
	CALL $102($0, $1, ($6 + [8]), $1)
	$7 = *($0)
	*((($6 + [56]) + [24])) = $5
	*($6 + [64]) = $2
	*($6 + [56]) = $1
	*($6 + [72]) = $9
	*($6 + [88]) = $7
	*($6 + [96]) = (int_64)-5001400075257233408
	*(($8 = CALL $8([16]))) = $7
	*($8 + [8]) = (int_64)3617214756542218240
	*(($6 + [124])) = [0]
	$11 = ($8 + [16])
	*((($6 + [88]) + [24])) = $11
	*(($6 + [108])) = $11
	*($6 + [104]) = $8
	*($6 + [116 align=4]) = (int_64)0
	CALL $37(($6 + [116]), [32])
	$0 = (($6 + [88]) + [32])
	$8 = *($0)
	$11 = *($6 + [116])
	*($6 + [372]) = $11
	*($6 + [368]) = $11
	*($6 + [376]) = $8
	*($6 + [384]) = ($6 + [368])
	*($6 + [392]) = ($6 + [56])
	CALL $103(($6 + [392]), ($6 + [384]))
	CALL $38(($6 + [88]))
	$8 = *($6 + [116])
	if ( ($8 == 0) ){ goto $label$18 }
	*($0) = $8
	CALL $10($8)
	
.LABEL $label$18
	$8 = *($6 + [104])
	if ( ($8 == 0) ){ goto $label$11 }
	*(($6 + [108])) = $8
	CALL $10($8)
	
.LABEL $label$11
	$7 = *($6 + [272])
	*($6 + [88]) = $7
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $8) ){ goto $label$19 }
	CALL eosio_assert([0], [9806])
	$8 = *($6 + [92])
	
.LABEL $label$19
	CALL $104(($6 + [88]))
	CALL $105(*($6 + [280]), $8)
	$0 = *($6 + [256])
	if ( ($0 == 0) ){ goto $label$20 }
	$12 = ($6 + [260])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$22 }
	
.LOOP $label$23:
	$8 = ($8 + [-24])
	$11 = *($8)
	*($8) = [0]
	if ( ($11 == 0) ){ goto $label$24 }
	CALL $10($11)
	
.LABEL $label$24
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$23 }
	$8 = *(($6 + [256]))
	goto $label$21 
	
.LABEL $label$22
	$8 = $0
	
.LABEL $label$21
	*($12) = $0
	CALL $10($8)
	
.LABEL $label$20
	$0 = *($6 + [352])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$12 = ($6 + [356])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$8 = ($8 + [-24])
	$11 = *($8)
	*($8) = [0]
	if ( ($11 == 0) ){ goto $label$28 }
	CALL $10($11)
	
.LABEL $label$28
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$27 }
	$8 = *(($6 + [352]))
	goto $label$25 
	
.LABEL $label$26
	$8 = $0
	
.LABEL $label$25
	*($12) = $0
	CALL $10($8)
	
.LABEL $label$2
	$global$0 = ($6 + [400])
}

void .FUNC $70 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$6 = ($global$0 - [112])
	$global$0 = $6
	CALL require_auth($1)
	*(($6 + [104])) = [0]
	*($6 + [88]) = (int_64)-1
	*($6 + [96]) = (int_64)0
	*($6 + [108]) = [0]
	$7 = *($0)
	*($6 + [72]) = $7
	*($6 + [80]) = $7
	*(($6 + [56])) = $3
	*($6 + [48]) = $1
	*($6 + [40]) = (int_64)0
	*($6 + [32]) = $2
	*($6 + [24]) = ($6 + [72])
	CALL $132(($6 + [16]), ($6 + [24]), ($6 + [32]))
	if ( (*($6 + [20]) == 0) ){ goto $label$3 }
	$0 = *($6 + [20])
	*($6 + [12]) = $4
	*($6 + [8]) = $5
	if ( ($0 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10602])
	$0 = *($6 + [20])
	*($6 + [12]) = $4
	*($6 + [8]) = $5
	if ( $0 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9158])
	
.LABEL $label$1
	CALL $139(*($6 + [24]), $0, (int_64)0, ($6 + [8]))
	$5 = *($6 + [96])
	if ( ($5 == 0) ){ goto $label$4 }
	$8 = (($6 + [72]) + [28])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($0 + [28])))
	
.LABEL $label$9
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($0 + [16])))
	
.LABEL $label$10
	CALL $10($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$7 }
	$0 = *(($6 + [96]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($8) = $5
	CALL $10($0)
	
.LABEL $label$4
	$global$0 = ($6 + [112])
}

int_32 .FUNC $71 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $2($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [60]) = $3
	*($4 + [56]) = $3
	*($4 + [64]) = ($3 + $2)
	*($4 + [144]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $137(($4 + [16]), ($4 + [144]))
	*(($5 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($5)
	*($4 + [128]) = *($4)
	$5 = *($6)
	*((($4 + [144]) + [8])) = $5
	*(($4 + [40])) = $5
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [128])
	*($4 + [32]) = $0
	*($4 + [144]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [16])
	CALL $138(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$9 }
	$3 = [1]
	if ( (*($4 + [108]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $3($3)
	$3 = [1]
	if ( ((*($4 + [108]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($4 + [116])))
	if ( (*($4 + [96]) & $3) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($4 + [96]) & $3) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $10(*(($4 + [104])))
	
.LABEL $label$5
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $76 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = (int_64)5308428098346312208
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $3($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $77 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
	CALL require_recipient($2)
}

int_32 .FUNC $74 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [128]) = ($4 + [56])
	*($4 + [16]) = ($4 + [72])
	CALL $98(($4 + [16]), ($4 + [128]))
	*(($3 = ($4 + [8]))) = *($4 + [64])
	*($4) = *($4 + [56])
	*(($8 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4)
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [112])
	*($4 + [32]) = $0
	*($4 + [128]) = $0
	*($4 + [48]) = (int_64)5308428098346312208
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$9 = *($4 + [88])
	$10 = *($4 + [80])
	$11 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $11), (int_64 $10), (int_64 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $75 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL require_auth($1)
	$3 = ((int_64)CALL $17() / (int_64)1000)
	*($2 + [200]) = $3
	*(($2 + [192])) = [0]
	*($2 + [168]) = $1
	*($2 + [176]) = (int_64)-1
	$4 = (int_64)0
	*($2 + [184]) = (int_64)0
	*($2 + [160]) = *($0)
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [8400])
	goto $label$2 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = (int_64)0
	
.LOOP $label$4:
	$6 = *(($5 + [8256]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$5
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$4 }
	
.LABEL $label$1
	CALL $107(($2 + [152]), ($2 + [160]), ((int_64)$4 & (int_64)72057594037927935))
	$5 = *($2 + [156])
	if ( $5 ){ goto $label$6 }
	CALL eosio_assert([0], [10124])
	$3 = *($2 + [200])
	$5 = *($2 + [156])
	
.LABEL $label$6
	if ( (uint_64)(((int_64)*($5 + [16]) + (int_64)86400000) <= $3) ){ goto $label$7 }
	CALL eosio_assert([0], [10143])
	
.LABEL $label$7
	*($2 + [144]) = (int_64)0
	*($2 + [136]) = (int_64)0
	$5 = *($2 + [156])
	*($2 + [36]) = ($2 + [200])
	*($2 + [32]) = ($2 + [136])
	if ( $5 ){ goto $label$8 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$8
	CALL $108(($2 + [160]), $5, (int_64)0, ($2 + [32]))
	$3 = *((($2 + [136]) + [8]))
	*((($2 + [120]) + [8])) = $3
	$4 = *($0)
	*(($2 + [8])) = $3
	$3 = *($2 + [136])
	*($2 + [120]) = $3
	*($2) = $3
	CALL $102($0, $4, $2, $4)
	$4 = *($0)
	*((($2 + [16]) + [8])) = [0]
	*($2 + [16]) = (int_64)0
	$5 = CALL $1([10175])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$15 }
	*($2 + [16]) = ($5 << [1])
	$6 = (($2 + [16]) | [1])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($2 + [16]) = ($7 | [1])
	*($2 + [24]) = $6
	*($2 + [20]) = $5
	
.LABEL $label$14
	CALL memcpy($6, [10175], $5)
	
.LABEL $label$13
	*(($6 + $5)) = [0]
	*((($2 + [32]) + [24])) = *((($2 + [136]) + [8]))
	$5 = (($2 + [16]) + [8])
	*(($2 + [72])) = *($5)
	*($5) = [0]
	*($2 + [40]) = $1
	*($2 + [80]) = $4
	*($2 + [88]) = (int_64)-3617168760277827584
	*($2 + [32]) = *($0)
	*($2 + [48]) = *($2 + [136])
	*($2 + [64]) = *($2 + [16])
	*($2 + [16]) = (int_64)0
	*(($5 = CALL $8([16]))) = $4
	*($5 + [8]) = (int_64)3617214756542218240
	*((($2 + [80]) + [36])) = [0]
	$6 = ($5 + [16])
	*((($2 + [80]) + [24])) = $6
	*(($2 + [100])) = $6
	*($2 + [96]) = $5
	*($2 + [108 align=4]) = (int_64)0
	$5 = *($2 + [64])
	$6 = ( *((($2 + [32]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [32])
	$4 = (CASTING uint_64)(uint_32 $6)
	$6 = ($2 + [108])
	
.LOOP $label$16:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$16 }
	if ( ($5 == 0) ){ goto $label$18 }
	CALL $37($6, $5)
	$6 = *(($2 + [112]))
	$5 = *(($2 + [108]))
	goto $label$17 
	
.LABEL $label$18
	$6 = [0]
	$5 = [0]
	
.LABEL $label$17
	*($2 + [212]) = $5
	*($2 + [208]) = $5
	*($2 + [216]) = $6
	*($2 + [224]) = ($2 + [208])
	*($2 + [232]) = ($2 + [32])
	CALL $109(($2 + [232]), ($2 + [224]))
	CALL $38(($2 + [80]))
	$5 = *($2 + [108])
	if ( ($5 == 0) ){ goto $label$19 }
	*(($2 + [112])) = $5
	CALL $10($5)
	
.LABEL $label$19
	$5 = *($2 + [96])
	if ( ($5 == 0) ){ goto $label$20 }
	*(($2 + [100])) = $5
	CALL $10($5)
	
.LABEL $label$20
	if ( (*(($2 + [64])) & [1]) ){ goto $label$22 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$21 }
	goto $label$11 
	
.LABEL $label$22
	CALL $10(*(($2 + [72])))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$21
	CALL $10(*(($2 + [24])))
	$0 = *($2 + [184])
	if ( ($0 == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	CALL $26(($2 + [16]))
	
.LABEL $label$11
	$0 = *($2 + [184])
	if ( $0 ){ goto $label$9 }
	
.LABEL $label$10
	$global$0 = ($2 + [240])
	return 
	
.LABEL $label$9
	$7 = ($2 + [188])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL $10($6)
	
.LABEL $label$26
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($2 + [184]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $0
	
.LABEL $label$23
	*($7) = $0
	CALL $10($5)
	$global$0 = ($2 + [240])
	(unreachable)
}

int_32 .FUNC $78 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [96]) + [24]))) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	*($4 + [160]) = ($4 + [80])
	*($4 + [40]) = ($4 + [96])
	CALL $106(($4 + [40]), ($4 + [160]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [88])
	*($4 + [24]) = *($4 + [80])
	*(($3 = (($4 + [144]) + [8]))) = *($9)
	*($4 + [144]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*((($4 + [40]) + [24])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [144])
	*($4 + [56]) = $0
	*($4 + [160]) = $0
	*($4 + [72]) = (int_64)5308428098346312208
	*(($9 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [112])
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	*($3) = *($9)
	*($4 + [144]) = *($4 + [128])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$10 = *((($4 + [144]) + [8]))
	*((($4 + [160]) + [8])) = $10
	*((($4 + [8]) + [8])) = $10
	$10 = *($4 + [144])
	*($4 + [8]) = $10
	*($4 + [160]) = $10
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return [1]
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [7]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [7]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $231(*($1), *($0 + [4]))
	CALL $231(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$1 = *($1)
	*($2 + [8]) = *(*($0 + [40]))
	$0 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [8498])
	$0 = *(($1 + [4]))
	
.LABEL $label$11
	CALL memcpy($0, ($2 + [8]), [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [8498])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$1 = *($1)
	*($2 + [8]) = (int_64)0
	$0 = *($1 + [4])
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*($4 + [32]) = *($2 + [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)3607749778918490112, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL $172($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)3607749778918490112, $6))
	if ( ((int_32)*($10 + [112]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$2
	*(($10 + [120])) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	if ( ((int_64)((int_64)((int_64)*($2) ^ (int_64)*($10 + [8])) | (int_64)*(($2 + [8]))) != (int_64)0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($10 + [24])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*($10 + [16]))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $240(*($0 + [4]), $1)
	$5 = *($1 + [8])
	$6 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [73])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [8])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	$8 = *($1 + [20])
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$5 = ($8 + $5)
	$7 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [20])
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$2 = CALL $2($5)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $8
	*($3 + [44]) = ($1 + [32])
	*($3 + [48]) = ($1 + [40])
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = ($1 + [56])
	*($3 + [60]) = ($1 + [72])
	*($3 + [64]) = ($1 + [80])
	*($3 + [68]) = ($1 + [96])
	*($3 + [72]) = ($1 + [100])
	CALL $241(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($4 + [8]), (int_64)-6228193299614662656, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL $3($2)
	
.LABEL $label$5
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*(($3 + [56])) = *($1 + [40])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($1 + [32])
	*($3 + [48]) = *($1 + [48])
	*($1 + [112]) = CALL db_idx256_store($7, (int_64)-6228193299614662656, $9, $10, ($3 + [32]), [2])
	$global$0 = ($3 + [80])
}

int_32 .FUNC $238 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [116]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9600])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)3607749778918490112)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $172(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-5001342326447013888, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [56]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL $209($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)-5001342326447013888, $6))
	if ( ((int_32)*($10 + [56]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$2
	*(($10 + [64])) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	if ( ((int_64)((int_64)((int_64)*($2) ^ (int_64)*($10 + [8])) | (int_64)((int_64)*(($2 + [8])) ^ (int_64)(uint_64)*(($10 + [24])) >> (uint_64)(int_64)8))) != (int_64)0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($10 + [32])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*($10 + [40]))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	*((($5 + [32]) + [24])) = *($1 + [40])
	*($5 + [32]) = *($1 + [8])
	*($5 + [48]) = *($1 + [32])
	$6 = *(($1 + [24]))
	*($5 + [40]) = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = *($1)
	*($5 + [24]) = $7
	*($1 + [48]) = *(*($3))
	$3 = *($3 + [4])
	if ( ((int_64)$6 == (int_64)*($3 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$6 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [48]
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [8822])
	$3 = [48]
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [8841])
	$8 = ($1 + $3)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($1 + $3)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [80]) = ($5 + [8])
	*($5 + [108]) = $8
	*($5 + [88]) = $1
	*($5 + [92]) = ($1 + [8])
	*($5 + [96]) = ($1 + [16])
	*($5 + [100]) = ($1 + [32])
	*($5 + [104]) = ($1 + [40])
	CALL $217(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [92]) = $1
	*($5 + [100]) = $1
	*($5 + [88]) = $0
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $218(($5 + [80]), ($0 + [36]))
	$global$0 = ($5 + [112])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([72])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56]) = $1
	CALL $210(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [60])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $211(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_64 $8
	int_32 $9
	$7 = ($global$0 - [144])
	$global$0 = $7
	$8 = CALL $17()
	*(($7 + [108])) = (int_64)0
	*(($7 + [124])) = (int_64)0
	*(($7 + [132])) = (int_64)0
	*($7 + [92]) = [0]
	*($7 + [96]) = [0]
	*($7 + [100 align=4]) = (int_64)0
	*($7 + [116 align=4]) = (int_64)0
	*($7 + [80]) = ((CASTING uint_32)(uint_64 ((int_64)$8 / (int_64)1000000)) + [60])
	$8 = CALL current_receiver()
	*($7 + [56]) = (int_64)3617214756542218240
	*($7 + [48]) = $8
	*(($9 = CALL $8([16]))) = *($7 + [48])
	*(($9 + [8])) = *($7 + [56])
	*($7 + [64]) = $9
	$9 = ($9 + [16])
	*($7 + [72]) = $9
	*($7 + [68]) = $9
	*($7 + [40]) = (int_64)-5001342325574598656
	*($7 + [8]) = $3
	*($7) = $2
	*($7 + [16]) = $4
	*($7 + [24]) = $5
	*($7 + [32]) = $6
	CALL $212(($7 + [116]), ($7 + [64]), $0, ($7 + [40]), $7)
	$9 = *($7 + [64])
	if ( ($9 == 0) ){ goto $label$1 }
	*($7 + [68]) = $9
	CALL $10($9)
	
.LABEL $label$1
	*(($7 + [100])) = $1
	*($7 + [8]) = $2
	*($7) = $3
	CALL cancel_deferred($7)
	CALL $213(($7 + [80]), $7, *($0), [1])
	CALL $214(($7 + [80]))
	$global$0 = ($7 + [144])
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-4157658851551739904, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL $199($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)-4157658851551739904, $6))
	if ( ((int_32)*($10 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$2
	*(($10 + [56])) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	if ( ((int_64)((int_64)((int_64)*($2) ^ (int_64)*($10 + [8])) | (int_64)*(($2 + [8]))) != (int_64)0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($10 + [32])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*($10 + [40]))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [96])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	*((($5 + [48]) + [24])) = *($1 + [40])
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = *($1 + [8])
	*($5 + [64]) = *($1 + [32])
	$6 = *($1)
	*($5 + [40]) = $6
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9354])
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9376])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [28]) = $4
	*($5 + [24]) = $4
	*($5 + [32]) = $3
	*($5 + [88]) = ($5 + [24])
	*($5) = $1
	*($5 + [4]) = ($1 + [8])
	*($5 + [8]) = ($1 + [16])
	*($5 + [12]) = ($1 + [32])
	*($5 + [16]) = ($1 + [40])
	CALL $205($5, ($5 + [88]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [4]) = $1
	*($5 + [12]) = $1
	*($5) = $0
	*($5 + [8]) = ($5 + [48])
	*($5 + [16]) = ($5 + [40])
	*($5 + [20]) = ($5 + [80])
	*($5 + [88]) = $5
	CALL $215(($5 + [88]), ($0 + [36]))
	$global$0 = ($5 + [96])
}

int_32 .FUNC $92 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [56])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9840])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [56])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	*(($1 + [24])) = (int_64)0
	*(($1 + [16])) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1) = (int_64)0
	$4 = *(*($0))
	$4 = CALL db_idx256_find_primary(*($4), *($4 + [8]), (int_64)-4157658851551739904, $1, [2], *($2))
	*(*(($0 + [4])) + [56]) = $4
	
.LABEL $label$1
	*($1) = (int_64)0
	$5 = CALL db_idx256_next($4, $1)
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1)
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [32])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $199($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)-4157658851551739904, $6))
	if ( ((int_32)*($3 + [48]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [56])) = $5
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9870])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9915])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9965])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$9 = *(($1 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$9 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-4157658851551739904, $2, [2], *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx256_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [32])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $27(($2 + [16]), ($1 + [24]))
	$1 = CALL $27($2, ($1 + [36]))
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$8 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($8) + $0))
	
.LABEL $label$1
	$9 = CALL $27(($2 + [32]), $1)
	$7 = CALL $27(($2 + [48]), $6)
	CALL void $8((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $7), (int_32 $9), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $10(*($9 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $10(*($7 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($6) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $10(*($1 + [8]))
	if ( ((*($6) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $10(*($6 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [128])
	$global$0 = $4
	*(($5 = $4) + [64]) = $2
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	*(($5 + [56])) = *($1 + [40])
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = *($1 + [32])
	*($5 + [48]) = *($1 + [48])
	$6 = *($1)
	*($5 + [24]) = $6
	CALL $244($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$3
	$3 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [73])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [8])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$9 = *($1 + [20])
	$9 = ( *(($1 + [24])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$8 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [20])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $2($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [72]) = ($5 + [8])
	*($5 + [84]) = $7
	*($5 + [88]) = $9
	*($5 + [80]) = $1
	*($5 + [92]) = ($1 + [32])
	*($5 + [96]) = ($1 + [40])
	*($5 + [100]) = ($1 + [48])
	*($5 + [104]) = ($1 + [56])
	*($5 + [108]) = ($1 + [72])
	*($5 + [112]) = ($1 + [80])
	*($5 + [116]) = ($1 + [96])
	*($5 + [120]) = ($1 + [100])
	CALL $241(($5 + [80]), ($5 + [72]))
	CALL db_update_i64(*($1 + [108]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $3($4)
	$6 = *($5 + [24])
	
.LABEL $label$8
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [84]) = $1
	*($5 + [92]) = $1
	*($5 + [80]) = $0
	*($5 + [88]) = ($5 + [32])
	*($5 + [96]) = ($5 + [24])
	*($5 + [100]) = ($5 + [64])
	*($5 + [72]) = ($5 + [80])
	CALL $245(($5 + [72]), ($0 + [36]))
	$global$0 = ($5 + [128])
}

void .FUNC $130 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [160])
	$global$0 = $5
	*($5 + [144]) = $2
	*($5 + [152]) = $1
	*($5 + [136]) = $3
	*($5 + [128]) = $4
	$6 = *($0)
	$0 = CALL $1([8257])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($0 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)0
	
.LABEL $label$1
	*(($5 + [120])) = [0]
	*($5 + [96]) = $4
	*($5 + [88]) = $6
	*($5 + [104]) = (int_64)-1
	*($5 + [112]) = (int_64)0
	*($5 + [124]) = [0]
	*(($5 + [72])) = $2
	*($5 + [64]) = $3
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = $1
	*($5 + [40]) = ($5 + [88])
	CALL $99(($5 + [32]), ($5 + [40]), ($5 + [48]))
	if ( (*($5 + [36]) == 0) ){ goto $label$9 }
	$0 = *($5 + [36])
	*($5 + [8]) = ($5 + [128])
	if ( $0 ){ goto $label$10 }
	CALL eosio_assert([0], [9158])
	
.LABEL $label$10
	CALL $233(*($5 + [40]), $0, (int_64)0, ($5 + [8]))
	$8 = *($5 + [112])
	if ( $8 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	*($5 + [12]) = ($5 + [128])
	*($5 + [8]) = ($5 + [88])
	*($5 + [16]) = ($5 + [136])
	*($5 + [20]) = ($5 + [144])
	*($5 + [24]) = ($5 + [152])
	CALL $234($5, ($5 + [88]), $1, ($5 + [8]))
	$8 = *($5 + [112])
	if ( ($8 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$9 = ($5 + [116])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$14 }
	CALL $10($7)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($5 + [112]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $8
	
.LABEL $label$11
	*($9) = $8
	CALL $10($0)
	$global$0 = ($5 + [160])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [160])
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $115(*($1), *($0 + [4]))
	CALL $115(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [10714])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-6228193299614662656, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	
.LOOP $label$7:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$5 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [0]
	goto $label$1 
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	if ( ((int_32)*($10 + [104]) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [8859])
	*($10 + [112]) = $5
	$4 = [0]
	if ( $10 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$10 = CALL $181($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)-6228193299614662656, $6))
	if ( ((int_32)*($10 + [104]) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$3
	*($10 + [112]) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_64)((int_64)((int_64)*($2) ^ (int_64)*($10 + [32])) | (int_64)*(($2 + [8]))) != (int_64)0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($10 + [48])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*($10 + [40]))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([120])) + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [104]) = $1
	CALL $239(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [108])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $182(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*(($3 + [28])))
	
.LABEL $label$5
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $10(*(($3 + [16])))
	
.LABEL $label$6
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [120])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9840])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [120])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	*(($1 + [24])) = (int_64)0
	*(($1 + [16])) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1) = (int_64)0
	$4 = *(*($0))
	$4 = CALL db_idx256_find_primary(*($4), *($4 + [8]), (int_64)3607749778918490112, $1, [2], *($2))
	*(*(($0 + [4])) + [120]) = $4
	
.LABEL $label$1
	*($1) = (int_64)0
	$5 = CALL db_idx256_next($4, $1)
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1)
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [32])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [112]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $172($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)3607749778918490112, $6))
	if ( ((int_32)*($3 + [112]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [120])) = $5
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9870])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9915])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9965])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [116]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $243(($2 + [8]), ($0 + [36]), ($0 + [37]))
	$global$0 = ($2 + [16])
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $115(*($1), ($3 + [24]))
	CALL $115(*($1), ($3 + [36]))
}

void .FUNC $213 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $220(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $37($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $221(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $10($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $208 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([72])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [48])
	CALL $216(($3 + [40]), ($3 + [32]))
	*($5 + [64]) = [-1]
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $211(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	$4 = *($0 + [4])
	$5 = *($4)
	*($1 + [24]) = *($5)
	*(($1 + [32])) = *(($5 + [8]))
	*($1 + [40]) = *(*($4 + [4]))
	*($1 + [8]) = *(*($4) + [8])
	*($2 + [64]) = ($2 + [48])
	*($2 + [60]) = $2
	*($2 + [56]) = $2
	*($2 + [72]) = ($2 + [56])
	*($2 + [84]) = ($1 + [16])
	*($2 + [80]) = $1
	*($2 + [88]) = ($1 + [24])
	*($2 + [92]) = ($1 + [40])
	CALL $188(($2 + [80]), ($2 + [72]))
	$4 = CALL $1([8257])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($4 + [8256]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	*($1 + [52]) = CALL db_store_i64(*($3 + [8]), (int_64)-4992121834821386240, *(*($0 + [8])), $6, $2, [48])
	if ( (uint_64)($6 <= *($3 + [16])) ){ goto $label$7 }
	*(($3 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($2 + [96])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	$6 = *($4 + [4])
	*(($3 + [56])) = *($6 + [16])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6 + [8])
	*($3 + [48]) = *($6 + [24])
	if ( (CALL $18(*($4 + [8]), ($3 + [32]), [32]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($5), *($5 + [8]), (int_64)3607749778918490112, $3, [2], *(*($4 + [16])))
	*(*(($4 + [12])) + [120]) = $6
	
.LABEL $label$2
	CALL db_idx256_update($6, *(*($4 + [20])), ($3 + [32]), [2])
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	$0 = *($4 + [4])
	*($3 + [32]) = *($0 + [16])
	*($3 + [40]) = *($0 + [8])
	if ( (CALL $18((*($4 + [8]) + [32]), ($3 + [32]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490113, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [124])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($4 + [20])), ($3 + [32]))
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4157658851551739904, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $199($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $207(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9494])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	*($1 + [40]) = *(*($5 + [12]))
	*($1 + [32]) = *(*($5 + [16]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	$2 = ($1 + [32])
	*($3 + [44]) = $2
	$8 = ($1 + [40])
	*($3 + [48]) = $8
	CALL $205(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157658851551739904, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*((($3 + [32]) + [24])) = *($8)
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6)
	*($3 + [48]) = *($2)
	*($1 + [56]) = CALL db_idx256_store($7, (int_64)-4157658851551739904, $9, $10, ($3 + [32]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$global$0 = $2
	$0 = *($0)
	$3 = *($0)
	$4 = *($0 + [4])
	*(($2 + [56])) = *($4 + [40])
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = *($4 + [8])
	*($2 + [48]) = *($4 + [32])
	if ( (CALL $18(*($0 + [8]), ($2 + [32]), [32]) == 0) ){ goto $label$1 }
	$4 = *(*($0 + [12]) + [56])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$2 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$4 = CALL db_idx256_find_primary(*($3), *($3 + [8]), (int_64)-4157658851551739904, $2, [2], *(*($0 + [16])))
	*(*(($0 + [12])) + [56]) = $4
	
.LABEL $label$2
	CALL db_idx256_update($4, *(*($0 + [20])), ($2 + [32]), [2])
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

int_32 .FUNC $207 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9600])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4157658851551739904)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $199(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([120])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [104]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [20])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [100])
	CALL $131(($3 + [32]), ($3 + [24]))
	*($5 + [112]) = [-1]
	*($5 + [108]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $182(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*(($1 + [16])))
	
.LABEL $label$12
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9354])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9376])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $175(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10714])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $208(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [16])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$1 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $121 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8859])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $111($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8859])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $27(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $27(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $10(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $10(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $115(*($1), (*($0) + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9870])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9915])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9965])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([32])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = $1
	CALL $232(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	*($4 + [16]) = $2)
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $208(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

void .FUNC $16 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $17 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_64 .FUNC $19 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

void .FUNC $184 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	$4 = *($0 + [4])
	$5 = *($4)
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	*($1 + [40]) = *(*($4 + [4]))
	*($2 + [64]) = ($2 + [48])
	*($2 + [60]) = $2
	*($2 + [56]) = $2
	*($2 + [72]) = ($2 + [56])
	*($2 + [84]) = ($1 + [16])
	*($2 + [80]) = $1
	*($2 + [88]) = ($1 + [24])
	*($2 + [92]) = ($1 + [40])
	CALL $188(($2 + [80]), ($2 + [72]))
	$4 = CALL $1([8257])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($4 + [8256]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	*($1 + [52]) = CALL db_store_i64(*($3 + [8]), (int_64)-4992121834821386240, *(*($0 + [8])), $6, $2, [48])
	if ( (uint_64)($6 <= *($3 + [16])) ){ goto $label$7 }
	*(($3 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($2 + [96])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$global$0 = $2
	$0 = *($0)
	$3 = *($0)
	$4 = *($0 + [4])
	*((($2 + [32]) + [24])) = *($4 + [40])
	*($2 + [32]) = *($4 + [8])
	*($2 + [48]) = *($4 + [32])
	*($2 + [40]) = (uint_64)*(($4 + [24])) >> (uint_64)(int_64)8)
	if ( (CALL $18(*($0 + [8]), ($2 + [32]), [32]) == 0) ){ goto $label$1 }
	$4 = *(*($0 + [12]) + [64])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$2 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$4 = CALL db_idx256_find_primary(*($3), *($3 + [8]), (int_64)-5001342326447013888, $2, [2], *(*($0 + [16])))
	*(*(($0 + [12])) + [64]) = $4
	
.LABEL $label$2
	CALL db_idx256_update($4, *(*($0 + [20])), ($2 + [32]), [2])
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $27(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $27(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $10(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $10(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8822])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $175(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*(($5 = CALL $8([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $1
	$6 = *($3)
	*($5 + [8]) = *($6 + [8])
	*($5 + [24]) = *($6 + [8])
	*($5 + [16]) = *($6)
	*($5 + [32]) = *(*($3 + [4]))
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($5 + [16])
	*($4 + [64]) = $5
	*($4 + [72]) = ($5 + [32])
	CALL $175(($4 + [64]), ($4 + [56]))
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)-4157508551318700032, $2, $7), $4, [40]
	*($5 + [44]) = $6)
	if ( (uint_64)($7 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$2
	*($4 + [64]) = $5
	$7 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4) = $7)
	*($4 + [40]) = $6
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $186(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $10($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $145($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $30($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $30($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $26($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $183(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $184(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*(($5 = CALL $8([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = $1
	*($5 + [8]) = *(*($3) + [8])
	*($5 + [16]) = *(*($3 + [4]))
	*($5 + [24]) = *(*($3 + [8]))
	*($4 + [48]) = ($4 + [32])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($5 + [16])
	*($4 + [64]) = $5
	*($4 + [72]) = ($5 + [24])
	CALL $176(($4 + [64]), ($4 + [56]))
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4157502542122582016, $2, $6), $4, [32]
	*($5 + [36]) = $7)
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$2
	*($4 + [64]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4) = $6)
	*($4 + [40]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [64]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $184(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $10($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $185(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $186(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($3 + [16])
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)3607749778918490112, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $172($3, $5)
	*($2 + [12]) = [0]
	*($2 + [8]) = $3
	$4 = *(*(CALL $238(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [16])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9494])
	$4 = *(($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [88]) = *(*($0 + [4]))
	*($1 + [24]) = *(*($0 + [8]))
	*($1 + [16]) = *(*($0 + [12]))
	*($1 + [8]) = *(*($0 + [16]))
	$0 = CALL $1([8257])
	if ( ($0 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8400])
	goto $label$7 
	
.LABEL $label$8
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = (int_64)0
	
.LOOP $label$9:
	$3 = *(($0 + [8256]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$10
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$9 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$4 = (int_64)4
	
.LABEL $label$5
	*(($1 + [56])) = $4
	$0 = CALL $1([10568])
	if ( ($0 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [8400])
	goto $label$13 
	
.LABEL $label$14
	if ( ($0 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$4 = (int_64)0
	
.LOOP $label$15:
	$3 = *(($0 + [10567]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$16
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$15 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$11 
	
.LABEL $label$12
	$4 = (int_64)4
	
.LABEL $label$11
	*(($1 + [40])) = $4
	$global$0 = ($2 + [16])
}

void .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	float_64 $9
	$1 = ($global$0 - [112])
	$global$0 = $1
	$2 = CALL $1([8257])
	if ( ($2 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = (int_64)0
	
.LOOP $label$5:
	$4 = *(($2 + [8256]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$3 = (int_64)0
	
.LABEL $label$1
	$5 = [0]
	*((($1 + [72]) + [32])) = [0]
	*($1 + [88]) = (int_64)-1
	*($1 + [96]) = (int_64)0
	$6 = *($0)
	*($1 + [72]) = $6
	$7 = ((int_64)$3 & (int_64)72057594037927935)
	*($1 + [80]) = $7
	*((($1 + [32]) + [32])) = [0]
	*($1 + [40]) = $7
	*($1 + [32]) = $6
	*($1 + [48]) = (int_64)-1
	*($1 + [56]) = (int_64)0
	$2 = CALL db_find_i64($6, $7, (int_64)-4157502542122582016, $7)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $112(($1 + [72]), $2)
	if ( ((int_32)*($5 + [32]) == (int_32)($1 + [72])) ){ goto $label$7 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$7
	$4 = *(($1 + [60]))
	$8 = *(($1 + [56]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$15:
	$2 = ($4 + [-24])
	$0 = *($2)
	if ( ((int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8) == (int_64)$7) ){ goto $label$14 }
	$4 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$13 }
	if ( ((int_32)*($0 + [40]) == (int_32)($1 + [32])) ){ goto $label$12 }
	CALL eosio_assert([0], [8859])
	if ( $5 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$0 = [0]
	$2 = CALL db_find_i64(*($1 + [32]), *(($1 + [40])), (int_64)-4157508551318700032, $7)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$12 }
	$0 = CALL $111(($1 + [32]), $2)
	if ( ((int_32)*($0 + [40]) == (int_32)($1 + [32])) ){ goto $label$12 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ($0 == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8590])
	if ( $0 ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [8590])
	
.LABEL $label$8
	$9 = *($5 + [16])
	$7 = ((int_64)CALL $17() / (int_64)1000)
	*($1 + [24]) = $7
	$6 = *($5 + [24])
	if ( ((uint_64)$7 <= (uint_64)((int_64)$6 + (int_64)500)) ){ goto $label$16 }
	$7 = (int_64)
	if ( (uint_64)($7($7 - $6)) <= (int_64)500) ){ goto $label$16 }
	$9 = CALL $36(((float_64)$9 + (float_64)(float_64)1), (CASTING float_64)(int_64 ((uint_64)$7 / (uint_64)(int_64)500)))
	$7 = *($0)
	*($1 + [16]) = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	$9 = ((float_64)((float_64)$9 + (float_64)(float_64)-1) * (float_64)(CASTING float_64)(int_64 $7))
	if ( ((float_64)(float_64)|$9| < (float_64)(float_64)9223372036854775808) ){ goto $label$18 }
	*($1 + [8]) = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 >= (int_64)1) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$3 = (Rounds 0)($9)
	*($1 + [8]) = $3
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$16 }
	
.LABEL $label$17
	*($1) = ($1 + [8])
	CALL $169(($1 + [32]), $0, (int_64)0, $1)
	*($1) = ($1 + [24])
	CALL $170(($1 + [72]), $5, (int_64)0, $1)
	
.LABEL $label$16
	$0 = *($1 + [56])
	if ( ($0 == 0) ){ goto $label$19 }
	$8 = ($1 + [60])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$23 }
	CALL $10($4)
	
.LABEL $label$23
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$22 }
	$2 = *(($1 + [56]))
	goto $label$20 
	
.LABEL $label$21
	$2 = $0
	
.LABEL $label$20
	*($8) = $0
	CALL $10($2)
	
.LABEL $label$19
	$0 = *($1 + [96])
	if ( ($0 == 0) ){ goto $label$24 }
	$8 = ($1 + [100])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$26 }
	
.LOOP $label$27:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$28 }
	CALL $10($4)
	
.LABEL $label$28
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$27 }
	$2 = *(($1 + [96]))
	goto $label$25 
	
.LABEL $label$26
	$2 = $0
	
.LABEL $label$25
	*($8) = $0
	CALL $10($2)
	
.LABEL $label$24
	$global$0 = ($1 + [112])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $115(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $29($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [192])
	$global$0 = $2
	$3 = *($0)
	CALL $237(*($0 + [4]), $1)
	*($2 + [128]) = ($2 + [112])
	*($2 + [124]) = $2
	*($2 + [120]) = $2
	*($2 + [136]) = ($2 + [120])
	*($2 + [148]) = ($1 + [8])
	*($2 + [144]) = $1
	*($2 + [152]) = ($1 + [16])
	*($2 + [156]) = ($1 + [24])
	*($2 + [160]) = ($1 + [32])
	*($2 + [164]) = ($1 + [48])
	*($2 + [168]) = ($1 + [64])
	*($2 + [172]) = ($1 + [72])
	*($2 + [176]) = ($1 + [80])
	*($2 + [180]) = ($1 + [88])
	*($2 + [184]) = ($1 + [96])
	*($2 + [188]) = ($1 + [104])
	CALL $189(($2 + [144]), ($2 + [136]))
	$4 = *($1)
	*($1 + [116]) = CALL db_store_i64(*($3 + [8]), (int_64)3607749778918490112, *(*($0 + [8])), $4, $2, [112])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$4 = *($3)
	$0 = *(($0 + [8]))
	$5 = *($0)
	$6 = *($1)
	*((($2 + [144]) + [24])) = *($1 + [16])
	*($2 + [152]) = (int_64)0
	*($2 + [144]) = *($1 + [8])
	*($2 + [160]) = *($1 + [24])
	*($1 + [120]) = CALL db_idx256_store($4, (int_64)3607749778918490112, $5, $6, ($2 + [144]), [2])
	$4 = *($0)
	$5 = *($3)
	$6 = *($1)
	*($2 + [152]) = *($1 + [8])
	*($2 + [144]) = *($1 + [16])
	*(($1 + [124])) = CALL db_idx128_store($5, (int_64)3607749778918490113, $4, $6, ($2 + [144]))
	$global$0 = ($2 + [192])
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8272]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $23($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_64 .FUNC $20 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $21([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $26 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*(*($0 + [4])) + [8])
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = *($0)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10244])
	
.LABEL $label$1
	*($1 + [8]) = $4
	*($1) = (int_64)0
	$9 = $2
	$7 = ($9 + [-16])
	$global$0 = $7
	CALL memcpy($7, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL memcpy(($9 + [-8]), ($3 + [8]), [8])
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($6 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $7, [16])
	if ( (uint_64)($5 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($2 + [16]) = $5)
	$0 = CALL db_find_i64($4, $5, (int_64)-4157502542122582016, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $112(($2 + [8]), $0)
	if ( ((int_32)*($3 + [32]) == (int_32)($2 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$6
	$5 = *($1)
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8590])
	$5 = *($1)
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10093])
	if ( ((int_64)*($1) > (int_64)*($3)) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$5 <= (int_64)*($3)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9124])
	
.LABEL $label$1
	*($2) = $1
	CALL $227(($2 + [8]), $3, (int_64)0, $2)
	$0 = *($2 + [32])
	if ( ($0 == 0) ){ goto $label$7 }
	$6 = ($2 + [36])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($1 + [-24])
	$3 = *($1)
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $10($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$10 }
	$1 = *(($2 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$1 = $0
	
.LABEL $label$8
	*($6) = $0
	CALL $10($1)
	
.LABEL $label$7
	$global$0 = ($2 + [48])
}

void .FUNC $100 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$5 = ($global$0 - [160])
	$global$0 = $5
	$6 = *($0)
	$7 = CALL $1([8257])
	if ( ($7 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8400])
	goto $label$3 
	
.LABEL $label$4
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = (int_64)0
	
.LOOP $label$5:
	$9 = *(($7 + [8256]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$6
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LABEL $label$1
	*(($5 + [152])) = [0]
	*($5 + [120]) = $6
	*($5 + [136]) = (int_64)-1
	*($5 + [144]) = (int_64)0
	*($5 + [156]) = [0]
	*($5 + [128]) = ((int_64)$8 & (int_64)72057594037927935)
	*(($5 + [104])) = $2
	*($5 + [96]) = $3
	*($5 + [88]) = (int_64)0
	*($5 + [80]) = $1
	*($5 + [72]) = ($5 + [120])
	CALL $99(($5 + [64]), ($5 + [72]), ($5 + [80]))
	$7 = *($5 + [68])
	if ( $7 ){ goto $label$7 }
	CALL eosio_assert([0], [10043])
	$7 = *($5 + [68])
	
.LABEL $label$7
	if ( ((int_64)*(($7 + [56])) != (int_64)*($4 + [8])) ){ goto $label$12 }
	if ( ((int_64)*($7 + [48]) < (int_64)*($4)) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8933])
	if ( ((int_64)*($7 + [48]) >= (int_64)*($4)) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9672])
	$7 = *($5 + [68])
	*($5 + [24]) = $4
	if ( $7 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$7 = *($5 + [68])
	*($5 + [24]) = $4
	if ( $7 ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [9158])
	
.LABEL $label$8
	$8 = (int_64)0
	CALL $225(*($5 + [72]), $7, (int_64)0, ($5 + [24]))
	CALL $17()
	*(($5 + [56])) = [0]
	*($5 + [32]) = $3
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	*($5 + [24]) = *($0)
	$7 = CALL $1([8257])
	if ( ($7 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [8400])
	goto $label$14 
	
.LABEL $label$15
	if ( ($7 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$8 = (int_64)0
	
.LOOP $label$16:
	$9 = *(($7 + [8256]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$17
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$16 }
	$8 = ((int_64)$8 & (int_64)72057594037927935)
	
.LABEL $label$13
	CALL $107(($5 + [16]), ($5 + [24]), $8)
	if ( (*($5 + [20]) == 0) ){ goto $label$20 }
	$8 = *($0)
	$7 = *($5 + [20])
	*($5 + [8]) = $4
	if ( ($7 == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], [10074])
	$8 = *($0)
	$7 = *($5 + [20])
	*($5 + [8]) = $4
	if ( $7 ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert([0], [9158])
	
.LABEL $label$18
	CALL $226(($5 + [24]), $7, $8, ($5 + [8]))
	$4 = *($5 + [48])
	if ( ($4 == 0) ){ goto $label$21 }
	$0 = ($5 + [52])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $10($9)
	
.LABEL $label$25
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$24 }
	$7 = *(($5 + [48]))
	goto $label$22 
	
.LABEL $label$23
	$7 = $4
	
.LABEL $label$22
	*($0) = $4
	CALL $10($7)
	
.LABEL $label$21
	$4 = *($5 + [144])
	if ( ($4 == 0) ){ goto $label$26 }
	$0 = ($5 + [148])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$28 }
	
.LOOP $label$29:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $10($9)
	
.LABEL $label$30
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$29 }
	$7 = *(($5 + [144]))
	goto $label$27 
	
.LABEL $label$28
	$7 = $4
	
.LABEL $label$27
	*($0) = $4
	CALL $10($7)
	
.LABEL $label$26
	$global$0 = ($5 + [160])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $102 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*(($4 + [56])) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = *($0)
	*($4 + [24]) = $5
	$6 = *($2 + [8])
	*($4 + [32]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $123(($4 + [24]), $0)
	if ( ((int_32)*($0 + [16]) == (int_32)($4 + [24])) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	*($4 + [8]) = $2
	CALL $228(($4 + [24]), $0, (int_64)0, ($4 + [8]))
	$7 = *($4 + [48])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($4 + [16]) = $2
	CALL $229(($4 + [8]), ($4 + [24]), $3, ($4 + [16]))
	$7 = *($4 + [48])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [52])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $10($0)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($4 + [48]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL $10($2)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9870])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9915])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9965])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $10($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $10($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$9 = *(($1 + [64]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$9 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-5001342326447013888, $2, [2], *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx256_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [32])
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [64])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9840])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [64])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	*(($1 + [24])) = (int_64)0
	*(($1 + [16])) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1) = (int_64)0
	$4 = *(*($0))
	$4 = CALL db_idx256_find_primary(*($4), *($4 + [8]), (int_64)-5001342326447013888, $1, [2], *($2))
	*(*(($0 + [4])) + [64]) = $4
	
.LABEL $label$1
	*($1) = (int_64)0
	$5 = CALL db_idx256_next($4, $1)
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1)
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [32])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [56]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $209($7, CALL $fimport$38(*($7), *($7 + [8]), (int_64)-5001342326447013888, $6))
	if ( ((int_32)*($3 + [56]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [64])) = $5
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $107 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$5 = CALL $1([8257])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [8400])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = (int_64)0
	
.LOOP $label$8:
	$7 = *(($5 + [8256]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$9
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	if ( ((int_64)((int_64)$6 & (int_64)72057594037927935) == (int_64)$2) ){ goto $label$1 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)0 == (int_64)$2) ){ goto $label$1 }
	
.LABEL $label$4
	$4 = ($4 + [-24])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = $3
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)*(($1 + [24]))) ){ goto $label$10 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$11
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$10
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4992121834821386240, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$12 }
	$5 = CALL $171($1, $5)
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$13 }
	CALL eosio_assert([0], [8859])
	
.LABEL $label$13
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$12
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $231(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8400])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)0
	
.LABEL $label$3
	*(($6 = *($3))) = *($1)
	$6 = ($1 + [8])
	*(($6 + [8])) = *($6)
	*($1 + [16]) = *(*($3 + [4]))
	$8 = *($3)
	if ( ((int_64)*($8 + [8]) == (int_64)*($6)) ){ goto $label$9 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$9
	$7 = (int_64)
	*($1) = $7(*($1) - *($8)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9354])
	$7 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9376])
	
.LABEL $label$11
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8400])
	goto $label$15 
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (int_64)0
	
.LOOP $label$17:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$17 }
	$8 = ($1 + [16])
	if ( ((int_64)$9 == (int_64)((int_64)$7 & (int_64)72057594037927935)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$8 = ($1 + [16])
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8720])
	
.LABEL $label$12
	$3 = $4
	$6 = ($3 + [-48])
	$global$0 = $6
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	*($5 + [44]) = ($1 + [40])
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $6, [48])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $8(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$8 = *($1 + [8])
	*($1 + [8]) = [0]
	$10 = *($1)
	*($1) = (int_64)0
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40]))) + [16 align=4]) = $10
	*($7 + [28 align=4]) = (int_64)0
	*($7) = *($2)
	*($7 + [8]) = *($3)
	*(($7 + [24])) = $8
	*(($7 + [36])) = [0]
	CALL $37(($7 + [28]), [40])
	$1 = *(($7 + [32]))
	$2 = *($7 + [28])
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$11 = ($6 + ((int_32)$9 * (int_32)[40]))
	$12 = ($7 + [40])
	CALL $222(($5 + [24]), ($5 + [16]))
	$1 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $8)
	$6 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $6)
	*((($1 = ($7 + $6)) + [-32])) = *(($9 + [-32]))
	*(($1 + [-40])) = *(($9 + [-40]))
	*(($2 = ($1 + [-24]))) = (int_64)0
	*(($3 = ($1 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($2) = *($4)
	$2 = ($9 + [-16])
	*($3) = *($2)
	*($2) = [0]
	*(($2 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($2) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($1) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$6 = ($6 + [-40])
	if ( ((int_32)$13 != (int_32)$6) ){ goto $label$7 }
	$7 = ($7 + $6)
	$1 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $1
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $12
	*(($0 + [8])) = $11
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($1 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $9
	CALL $10($9)
	
.LABEL $label$10
	$9 = ($1 + [-40])
	$6 = *(($1 + [-24]))
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $6
	CALL $10($6)
	
.LABEL $label$11
	$1 = $9
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

int_32 .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $219 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9600])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5001342326447013888)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9546])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $209(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $37($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $39(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $164(CALL $163($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_64 .FUNC $36 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $35($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $20($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [8368])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [8352]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [8384]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $19($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $34 (int_32 $0)
{
}

int_64 .FUNC $35 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $31($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $18(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $10($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$global$0 = $2
	$0 = *($0)
	$3 = *($0)
	$4 = *($0 + [4])
	*(($2 + [56])) = *($4 + [40])
	*($2 + [40]) = (int_64)0
	*($2 + [32]) = *($4 + [8])
	*($2 + [48]) = *($4 + [32])
	if ( (CALL $18(*($0 + [8]), ($2 + [32]), [32]) == 0) ){ goto $label$1 }
	$4 = *(*($0 + [12]) + [56])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$2 }
	*(($2 + [24])) = (int_64)0
	*(($2 + [16])) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)0
	$4 = CALL db_idx256_find_primary(*($3), *($3 + [8]), (int_64)-4157658851551739904, $2, [2], *(*($0 + [16])))
	*(*(($0 + [12])) + [56]) = $4
	
.LABEL $label$2
	CALL db_idx256_update($4, *(*($0 + [20])), ($2 + [32]), [2])
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

int_32 .FUNC $214 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $10($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $10($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8498])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8498])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8498])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10714])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10714])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10714])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-5001342326447013888, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $209($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $219(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9494])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [48]) = *(*($5 + [4]))
	*($1 + [8]) = *(*($5 + [8]))
	$8 = *($5 + [12])
	*(($6 = ($1 + [24]))) = *(($8 + [8]))
	*($1 + [16]) = *($8)
	*($1 + [32]) = *(*($5 + [16]))
	*($1 + [40]) = *(*($5 + [20]))
	$2 = $2
	$5 = ($2 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	$8 = ($1 + [32])
	*($3 + [44]) = $8
	$9 = ($1 + [40])
	*($3 + [48]) = $9
	*($3 + [52]) = ($1 + [48])
	CALL $217(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*((($3 + [32]) + [24])) = *($9)
	*($3 + [32]) = *($2)
	*($3 + [48]) = *($8)
	*($3 + [40]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	*($1 + [64]) = CALL db_idx256_store($7, (int_64)-5001342326447013888, $10, $11, ($3 + [32]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [8822])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	CALL $176(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8910])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	CALL $204(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $201(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $196 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$2 = (int_64)0
	*(($5 = CALL $8([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $1
	CALL $202(($4 + [16]), $5)
	*($4 + [32]) = $5
	$3 = CALL $1([8257])
	if ( ($3 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8400])
	goto $label$4 
	
.LABEL $label$5
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($3 + [8256]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	$6 = *($4 + [32])
	goto $label$2 
	
.LABEL $label$3
	$6 = $5
	
.LABEL $label$2
	*($4 + [16]) = $2
	$7 = *($6 + [52])
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$9 }
	*($3 + [8]) = $2
	*($3 + [16]) = $7
	*($4 + [32]) = [0]
	*($3) = $6
	*($8) = ($3 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $178(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$8
	*($0 + [4]) = $5
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $10($3)
	
.LABEL $label$10
	$global$0 = ($4 + [48])
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9306])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9354])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9376])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [8720])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9193])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $8([64])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = $1
	CALL $200(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $201(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $10($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $195 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8400])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)0
	
.LABEL $label$3
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$9 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$9
	$7 = ((int_64)*($1 + [24]) + (int_64)*($6))
	*($1 + [24]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [8822])
	$7 = *(($1 + [24]))
	
.LABEL $label$10
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [8841])
	
.LABEL $label$11
	$6 = CALL $1([8257])
	if ( ($6 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [8400])
	goto $label$15 
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (int_64)0
	
.LOOP $label$17:
	$8 = *(($6 + [8256]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [8445])
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$17 }
	if ( ((int_64)$9 == (int_64)((int_64)$7 & (int_64)72057594037927935)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8720])
	
.LABEL $label$12
	$8 = $4
	$6 = ($8 + [-48])
	$global$0 = $6
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = $8
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	*($5 + [44]) = ($1 + [40])
	CALL $188(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $6, [48])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $192 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	$6 = *($1 + [16])
	*(($5 + [56])) = $6
	$7 = *($1 + [8])
	*(($5 + [72])) = $7
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = $7
	*($5 + [48]) = *($1 + [24])
	*($5 + [64]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [8822])
	if ( ((int_64)*(($1 + [48])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [8841])
	$3 = [36]
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [36]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$3 = ($0 + $3)
	$8 = $4
	$4 = ($8 + [-112])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($5 + [88]) = ($5 + [8])
	*($5 + [96]) = $1
	*($5 + [100]) = ($1 + [8])
	*($5 + [104]) = ($1 + [16])
	*($5 + [108]) = ($1 + [24])
	*($5 + [112]) = ($1 + [32])
	*($5 + [116]) = ($1 + [48])
	*($5 + [120]) = ($1 + [64])
	*($5 + [124]) = ($1 + [72])
	*($5 + [128]) = ($1 + [80])
	*($5 + [132]) = ($1 + [88])
	*($5 + [136]) = ($1 + [96])
	*($5 + [140]) = ($1 + [104])
	CALL $189(($5 + [96]), ($5 + [88]))
	CALL db_update_i64(*($1 + [116]), $2, $4, [112])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [100]) = $1
	*($5 + [96]) = $0
	*($5 + [108]) = $1
	*($5 + [104]) = ($5 + [32])
	*($5 + [112]) = ($5 + [24])
	*($5 + [116]) = ($5 + [80])
	*($5 + [88]) = ($5 + [96])
	CALL $203(($5 + [88]), $3, ($3 + [1]))
	$global$0 = ($5 + [144])
}

void .FUNC $193 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [96])
	$global$0 = $4
	*(($5 = $4) + [80]) = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8623])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [8669])
	
.LABEL $label$2
	*((($5 + [48]) + [24])) = *($1 + [40])
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = *($1 + [8])
	*($5 + [64]) = *($1 + [32])
	$6 = *($1)
	*($5 + [40]) = $6
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [8779])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [8822])
	if ( ((int_64)*(($1 + [16])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [8841])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [8720])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [28]) = $4
	*($5 + [24]) = $4
	*($5 + [32]) = $3
	*($5 + [88]) = ($5 + [24])
	*($5) = $1
	*($5 + [4]) = ($1 + [8])
	*($5 + [8]) = ($1 + [16])
	*($5 + [12]) = ($1 + [32])
	*($5 + [16]) = ($1 + [40])
	CALL $205($5, ($5 + [88]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [4]) = $1
	*($5 + [12]) = $1
	*($5) = $0
	*($5 + [8]) = ($5 + [48])
	*($5 + [16]) = ($5 + [40])
	*($5 + [20]) = ($5 + [80])
	*($5 + [88]) = $5
	CALL $206(($5 + [88]), ($0 + [36]))
	$global$0 = ($5 + [96])
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	$6 = *($4 + [4])
	*(($3 + [56])) = *($6 + [16])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6 + [8])
	*($3 + [48]) = *($6 + [24])
	if ( (CALL $18(*($4 + [8]), ($3 + [32]), [32]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($5), *($5 + [8]), (int_64)3607749778918490112, $3, [2], *(*($4 + [16])))
	*(*(($4 + [12])) + [120]) = $6
	
.LABEL $label$2
	CALL db_idx256_update($6, *(*($4 + [20])), ($3 + [32]), [2])
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	$0 = *($4 + [4])
	*($3 + [32]) = *($0 + [16])
	*($3 + [40]) = *($0 + [8])
	if ( (CALL $18((*($4 + [8]) + [32]), ($3 + [32]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490113, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [124])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($4 + [20])), ($3 + [32]))
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $191 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	$6 = *($4 + [4])
	*(($3 + [56])) = *($6 + [16])
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = *($6 + [8])
	*($3 + [48]) = *($6 + [24])
	if ( (CALL $18(*($4 + [8]), ($3 + [32]), [32]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [120])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL db_idx256_find_primary(*($5), *($5 + [8]), (int_64)3607749778918490112, $3, [2], *(*($4 + [16])))
	*(*(($4 + [12])) + [120]) = $6
	
.LABEL $label$2
	CALL db_idx256_update($6, *(*($4 + [20])), ($3 + [32]), [2])
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	$0 = *($4 + [4])
	*($3 + [32]) = *($0 + [16])
	*($3 + [40]) = *($0 + [8])
	if ( (CALL $18((*($4 + [8]) + [32]), ($3 + [32]), [16]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [124]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx128_find_primary(*($6), *($6 + [8]), (int_64)3607749778918490113, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [124])) = $0
	
.LABEL $label$4
	CALL db_idx128_update($0, *(*($4 + [20])), ($3 + [32]))
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}