(data (i32.const 16880) "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\00")
(data (i32.const 16939) "EOS\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 16952) "unrecognized public key format\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 17069) "\e5\8f\82\e6\95\b0\e8\ae\be\e7\bd\ae\e9\94\99\e8\af\af\00")
(data (i32.const 17088) "\e6\94\b6\e6\ac\be\e5\b8\90\e5\8f\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 17110) "\e6\94\b6\e6\ac\be\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e6\98\af\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\00")
(data (i32.const 17144) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c, TOKEN\e7\ac\a6\e5\8f\b7\e4\b8\8d\e4\b8\80\e8\87\b4\00stoull\00")
(data (i32.const 17186) "PRICE \e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e7\ac\a6\e5\8f\b7\00")
(data (i32.const 17216) "DEPOSIT \e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e7\ac\a6\e5\8f\b7\00")
(data (i32.const 17248) "\e5\94\ae\e4\bb\b7\e9\9c\80\e8\a6\81>=0.1\00")
(data (i32.const 17266) "\e8\af\b4\e6\98\8e\e6\96\87\e5\ad\97\e4\b8\8d\e8\83\bd\e8\b6\85\e8\bf\87256\e5\ad\97\e8\8a\82\00")
(data (i32.const 17300) "\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e5\b7\b2\e7\bb\8f\e5\87\ba\e5\94\ae,\e7\ad\89\e5\be\85\e6\9d\83\e9\99\90\e8\bd\ac\e8\ae\a9\00")
(data (i32.const 17344) "\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e6\ad\a3\e5\9c\a8\e5\87\ba\e5\94\ae\00")
(data (i32.const 17369) "\e6\8a\bc\e9\87\91\e9\9c\80\e8\a6\81>=0.1\00")
(data (i32.const 17387) "\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e6\9c\aa\e5\87\ba\e5\94\ae\00")
(data (i32.const 17409) "\e7\ab\9e\e6\8b\8d\e7\b1\bb\e5\9e\8b\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e4\bf\ae\e6\94\b9\00")
(data (i32.const 17440) "\e9\9d\9e\e6\94\b6\e6\ac\be\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e6\93\8d\e4\bd\9c\00")
(data (i32.const 17468) "active\00")
(data (i32.const 17475) "transfer\00")
(data (i32.const 17484) "[namedex.io]: \e6\92\a4\e9\94\80\e5\b8\90\e6\88\b7\e5\87\ba\e5\94\ae, \e9\80\80\e8\bf\98\e6\8a\bc\e9\87\91\00")
(data (i32.const 17532) "\e4\b8\8d\e5\ad\98\e5\9c\a8\e6\ad\a4\e7\ab\9e\e6\8b\8d\e6\95\b0\e6\8d\ae\00")
(data (i32.const 17557) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c, TOKEN\e5\90\88\e7\ba\a6\e4\b8\8d\e4\b8\80\e8\87\b4\00")
(data (i32.const 17592) "|\00")
(data (i32.const 17594) "[namedex.io]: \e5\b8\90\e6\88\b7\e5\87\ba\e5\94\ae\e8\a2\ab\e6\92\a4\e9\94\80, \e9\80\80\e8\bf\98\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\00")
(data (i32.const 17650) "\e6\92\a4\e9\94\80\e7\ab\9e\e6\8b\8d\e5\87\ba\e5\94\ae, \e6\89\a3\e9\99\a4\e6\8a\bc\e9\87\9150%\00")
(data (i32.const 17686) "\e6\82\a8\e5\87\ba\e5\94\ae\e7\9a\84\e5\b8\90\e6\88\b7\e5\90\8d \00: no conversion\00")
(data (i32.const 17725) " \e6\92\a4\e9\94\80\e7\ab\9e\e6\8b\8d\e5\87\ba\e5\94\ae, \e6\89\a3\e9\99\a4\e6\8a\bc\e9\87\9150%\00: out of range\00")
(data (i32.const 17777) "exchangename\00")
(data (i32.const 17790) "dividend\00")
(data (i32.const 17799) "[namedex.io]: \e5\8f\82\e4\b8\8e\e7\ab\9e\e6\8b\8d\e8\8e\b7\e5\be\97\e6\94\b6\e7\9b\8a\00")
(data (i32.const 17838) "\e8\b4\ad\e4\b9\b0\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e6\98\af\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\00")
(data (i32.const 17872) "\e8\b4\ad\e4\b9\b0\e5\b8\90\e6\88\b7\e5\b7\b2\e7\bb\8f\e5\87\ba\e5\94\ae,\e7\ad\89\e5\be\85\e6\9d\83\e9\99\90\e8\bd\ac\e8\ae\a9\00")
(data (i32.const 17916) "\e8\b4\ad\e4\b9\b0\e5\b8\90\e6\88\b7\e6\9c\aa\e5\87\ba\e5\94\ae\00")
(data (i32.const 17938) "\e6\9d\83\e9\99\90\e8\bd\ac\e8\ae\a9\e5\85\ac\e9\92\a5\e4\b8\8d\e8\83\bd\e4\b8\8e\e8\b4\ad\e4\b9\b0\e5\b8\90\e6\88\b7\e5\85\ac\e9\92\a5\e7\9b\b8\e5\90\8c\00")
(data (i32.const 17990) "\e8\af\b7\e8\be\93\e5\85\a5\e9\87\91\e9\a2\9d\00")
(data (i32.const 18006) "\e8\af\b7\e8\be\93\e5\85\a5\e8\b4\ad\e4\b9\b0\e5\b8\90\e6\88\b7\e5\94\ae\e4\bb\b7\00")
(data (i32.const 18034) "\e5\b8\90\e6\88\b7\e7\ab\9e\e6\8b\8d\e5\b7\b2\e7\bb\8f\e7\bb\93\e6\9d\9f\00")
(data (i32.const 18059) "\e5\b7\b2\e7\bb\8f\e5\8f\82\e4\b8\8e\e4\ba\86\e6\ad\a4\e5\b8\90\e6\88\b7\e7\ab\9e\e6\8b\8d\00")
(data (i32.const 18090) "\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\e5\bf\85\e9\a1\bb>=\e7\ab\9e\e6\8b\8d\e8\b4\a6\e6\88\b7\e6\9c\80\e9\ab\98\e7\ab\9e\e6\8b\8d\e4\bb\b7+\e7\ab\9e\e6\8b\8d\e5\b8\90\e6\88\b7\e6\8a\bc\e9\87\91, \e9\a6\96\e4\bd\8d\e7\ab\9e\e6\8b\8d\e7\94\a8\e6\88\b7\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\e5\bf\85\e9\a1\bb>=\e7\ab\9e\e6\8b\8d\e6\8a\bc\e9\87\91(\e5\a6\82\e6\9e\9c\e6\b2\a1\e6\9c\89\e5\94\ae\e4\bb\b7)\e6\88\96\e5\94\ae\e4\bb\b7(\e5\a6\82\e6\9e\9c\e6\9c\89\e5\94\ae\e4\bb\b7)\00")
(data (i32.const 18255) "\e9\87\91\e9\a2\9d\e5\bc\82\e5\b8\b8\00")
(data (i32.const 18268) "\e9\87\91\e9\a2\9d\e8\be\93\e5\85\a5\e6\9c\89\e8\af\af\00")
(data (i32.const 18287) " \e5\b7\b2\e8\a2\ab\e4\b8\8b\e5\8d\95, \e8\af\b7\e5\9c\a824\e5\b0\8f\e6\97\b6\e5\86\85\e8\bf\87\e6\88\b7\00")
(data (i32.const 18326) "\e8\b6\85\e6\97\b6\e6\9c\aa\e5\ae\8c\e6\88\90\e5\b8\90\e6\88\b7\e6\9d\83\e9\99\90\e8\bd\ac\e7\a7\bb, \e7\b3\bb\e7\bb\9f\e8\87\aa\e5\8a\a8\e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\00")
(data (i32.const 18386) " \e5\b7\b2\e6\9c\89\e4\ba\ba\e5\8f\82\e4\b8\8e\e7\ab\9e\e6\8b\8d, \e8\af\b7\e5\9c\a824\e5\b0\8f\e6\97\b6\e5\86\85\e9\80\89\e5\ae\9a\e6\9c\80\e9\ab\98\e7\ab\9e\e4\bb\b7\e4\ba\ba\00")
(data (i32.const 18449) "\e8\af\b7\e8\be\93\e5\85\a5\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\00")
(data (i32.const 18471) "\e7\ab\9e\e6\8b\8d\e5\b8\90\e6\88\b7\e6\9c\aa\e5\87\ba\e5\94\ae\00")
(data (i32.const 18493) "\e6\ad\a4\e5\b8\90\e6\88\b7\e9\9d\9e\e7\ab\9e\e6\8b\8d\e7\b1\bb\e5\9e\8b\00")
(data (i32.const 18518) "\e8\bf\bd\e5\8a\a0\e9\87\91\e9\a2\9d\e4\b8\8d\e8\83\bd\e5\b0\8f\e4\ba\8e\e5\8a\a0\e4\bb\b7\e5\b9\85\e5\ba\a6\00")
(data (i32.const 18555) "\e4\b8\8d\e5\ad\98\e5\9c\a8\e7\ab\9e\e6\8b\8d\e5\b8\90\e6\88\b7\e7\9b\b8\e5\85\b3\e7\ab\9e\e6\8b\8d\e6\95\b0\e6\8d\ae\00")
(data (i32.const 18595) "\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e6\9c\aa\e5\8f\82\e4\b8\8e\e7\ab\9e\e6\8b\8d\e5\b8\90\e6\88\b7\e7\ab\9e\e6\8b\8d\00")
(data (i32.const 18635) "\e6\9c\80\e9\ab\98\e7\ab\9e\e4\bb\b7\e4\ba\ba\e4\b8\8d\e8\83\bd\e5\8f\96\e6\b6\88\e7\ab\9e\e6\8b\8d\00")
(data (i32.const 18669) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c,TOKEN\e5\90\88\e7\ba\a6\e4\b8\8d\e4\b8\80\e8\87\b4\00")
(data (i32.const 18703) "[namedex.io]: \e6\92\a4\e9\94\80\e5\8f\82\e4\b8\8e\e7\ab\9e\e6\8b\8d, \e9\80\80\e8\bf\98\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\00")
(data (i32.const 18756) "\e8\b6\85\e6\97\b6\e6\9c\aa\e8\bf\87\e6\88\b7, \e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\e6\92\a4\e9\94\80\e8\ae\a2\e5\8d\95\00")
(data (i32.const 18798) " \e8\b6\85\e6\97\b6\e6\9c\aa\e8\bf\87\e6\88\b7, \e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\e6\92\a4\e9\94\80\e8\ae\a2\e5\8d\95\00")
(data (i32.const 18841) "[namedex.io]: \e5\b8\90\e6\88\b7\e5\87\ba\e5\94\ae\e8\ae\a2\e5\8d\95\e6\af\81\e7\ba\a6, \e9\80\80\e8\bf\98\e9\87\91\e9\a2\9d\00")
(data (i32.const 18894) "\e8\b6\85\e6\97\b6\e6\9c\aa\e8\bf\87\e6\88\b7, \e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\e6\92\a4\e9\94\80\e8\ae\a2\e5\8d\95\e5\b9\b6\e6\89\a3\e9\99\a4\e6\8a\bc\e9\87\91\00")
(data (i32.const 18951) " \e8\b6\85\e6\97\b6\e6\9c\aa\e8\bf\87\e6\88\b7, \e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\e6\92\a4\e9\94\80\e8\ae\a2\e5\8d\95\e5\b9\b6\e6\89\a3\e9\99\a4\e6\8a\bc\e9\87\91\00")
(data (i32.const 19009) "namedexiofee\00")
(data (i32.const 19022) "[namedex.io]: \e8\8e\b7\e5\be\97\e8\bf\9d\e7\ba\a6\e9\87\91\00")
(data (i32.const 19052) "eosio.token\00")
(data (i32.const 19064) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c\00")
(data (i32.const 19077) "\e4\b8\8d\e5\ad\98\e5\9c\a8\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e7\9b\b8\e5\85\b3\e7\ab\9e\e6\8b\8d\e6\95\b0\e6\8d\ae\00")
(data (i32.const 19117) "\e7\ab\9e\e6\8b\8d\e6\95\b0\e6\8d\ae\e5\bc\82\e5\b8\b8\00")
(data (i32.const 19136) "[namedex.io]: \e7\ab\9e\e6\8b\8d\e5\b8\90\e6\88\b7\e5\b7\b2\e9\80\89\e5\ae\9a\e6\9c\80\e9\ab\98\e7\ab\9e\e4\bb\b7\e4\ba\ba, \e9\80\80\e8\bf\98\e7\ab\9e\e6\8b\8d\e9\87\91\e9\a2\9d\00")
(data (i32.const 19207) "\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e6\98\af\e6\94\b6\e8\b4\ad\e5\b8\90\e6\88\b7\00")
(data (i32.const 19241) " \e5\af\b9\e6\82\a8\e7\9a\84\e5\b8\90\e6\88\b7\e5\90\8d\e5\8f\91\e8\b5\b7\e6\8a\a5\e4\bb\b7\00")
(data (i32.const 19273) "\e6\94\b6\e8\b4\ad\e9\87\91\e9\a2\9d\e5\bf\85\e9\a1\bb>=0.1\00")
(data (i32.const 19297) "\e6\ad\a3\e5\9c\a8\e5\af\b9\e6\ad\a4\e5\b8\90\e6\88\b7\e8\bf\9b\e8\a1\8c\e6\8a\a5\e4\bb\b7\00")
(data (i32.const 19328) "\e4\b8\8d\e5\ad\98\e5\9c\a8\e6\8a\a5\e4\bb\b7\e5\b8\90\e6\88\b7\e7\9b\b8\e5\85\b3\e6\95\b0\e6\8d\ae\00")
(data (i32.const 19362) "\e6\9c\aa\e5\af\b9\e6\ad\a4\e5\b8\90\e6\88\b7\e6\8a\a5\e4\bb\b7\00")
(data (i32.const 19384) "\e6\8a\a5\e4\bb\b7\e6\95\b0\e6\8d\ae\e5\bc\82\e5\b8\b8\00")
(data (i32.const 19403) "\e9\9d\9e\e6\8a\a5\e4\bb\b7\e5\b8\90\e6\88\b7\e6\97\a0\e6\b3\95\e6\93\8d\e4\bd\9c\00")
(data (i32.const 19431) " \e6\92\a4\e9\94\80\e5\af\b9\e6\82\a8\e7\9a\84\e5\b8\90\e6\88\b7\e5\90\8d\e7\9a\84\e6\8a\a5\e4\bb\b7\00")
(data (i32.const 19466) "[namedex.io]: \e6\92\a4\e9\94\80\e5\b8\90\e6\88\b7\e6\8a\a5\e4\bb\b7, \e9\80\80\e8\bf\98\e9\87\91\e9\a2\9d\00")
(data (i32.const 19513) "\e9\80\89\e5\ae\9a\e6\94\b6\e8\b4\ad\e5\b8\90\e6\88\b7\e4\b8\8d\e8\83\bd\e6\98\af\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\00")
(data (i32.const 19553) "\e6\94\b6\e8\b4\ad\e5\b8\90\e5\8f\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 19575) "\e4\b8\8d\e5\ad\98\e5\9c\a8\e5\bd\93\e5\89\8d\e5\b8\90\e6\88\b7\e7\9b\b8\e5\85\b3\e6\94\b6\e8\b4\ad\e6\95\b0\e6\8d\ae\00")
(data (i32.const 19615) "\e6\ad\a4\e5\b8\90\e6\88\b7\e6\9c\aa\e5\8f\82\e4\b8\8e\e6\8a\a5\e4\bb\b7\00")
(data (i32.const 19640) "\e6\92\a4\e9\94\80\e5\87\ba\e5\94\ae, \e9\80\89\e6\8b\a9\e6\8a\a5\e4\bb\b7\e8\ae\a2\e5\8d\95\00")
(data (i32.const 19673) "\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e7\ab\9e\e6\8b\8d\e6\9c\aa\e8\b6\85\e6\97\b6\00")
(data (i32.const 19701) "fixedsell\00")
(data (i32.const 19711) "\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e8\b6\85\e6\97\b6\e6\9c\aa\e9\80\89\e6\8b\a9\e7\ab\9e\e6\8b\8d\e4\ba\ba\ef\bc\8c\e7\94\a8\e6\88\b7\e7\94\b3\e8\af\89\e9\80\89\e5\ae\9a\e6\9c\80\e9\ab\98\e7\ab\9e\e4\bb\b7\e7\9a\84\e7\ab\9e\e6\8b\8d\e4\ba\ba\00")
(data (i32.const 19793) "\e7\ad\89\e5\be\85\e6\9d\83\e9\99\90\e8\bd\ac\e8\ae\a9\ef\bc\8c\e6\9c\aa\e8\b6\85\e6\97\b6\00")
(data (i32.const 19824) "ruinsell\00")
(data (i32.const 19833) "\e8\b6\85\e6\97\b6\e6\9c\aa\e5\ae\8c\e6\88\90\e5\b8\90\e6\88\b7\e6\9d\83\e9\99\90\e8\bd\ac\e7\a7\bb, \e7\94\a8\e6\88\b7\e7\94\b3\e8\af\89\e8\a7\a6\e5\8f\91\e8\bf\9d\e7\ba\a6\00")
(data (i32.const 19893) "\e6\9f\a5\e8\af\a2\e6\95\b0\e6\8d\ae\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 19915) "\e7\9b\b8\e5\90\8c\e5\b8\90\e6\88\b7\e6\93\8d\e4\bd\9c\e6\97\a0\e6\95\88\00")
(data (i32.const 19940) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c, \e8\ae\a2\e5\8d\95\e4\b8\8d\e5\8c\b9\e9\85\8d\00")
(data (i32.const 19970) "owner\00")
(data (i32.const 19976) "eosio\00")
(data (i32.const 19982) "updateauth\00")
(data (i32.const 19993) "[namedex.io]: \e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e5\ae\8c\e6\88\90, \e9\80\80\e8\bf\98\e6\8a\bc\e9\87\91\00")
(data (i32.const 20040) "[namedex.io]: \e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\88\90\e5\8a\9f, \e8\8e\b7\e5\be\97\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\89\80\e5\be\97\e6\94\b6\e7\9b\8a\00")
(data (i32.const 20105) "[namedex.io]: \e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\88\90\e5\8a\9f,\e8\8e\b7\e5\be\97\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\89\80\e5\be\97\e6\94\b6\e7\9b\8a\00")
(data (i32.const 20169) "wangruixiwww\00")
(data (i32.const 20182) "[namedex.io]: \e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\88\90\e5\8a\9f,\e8\8e\b7\e5\be\97\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\89\80\e5\be\97\e4\bb\a3\e7\90\86\e6\94\b6\e7\9b\8a\00")
(data (i32.const 20252) "[namedex.io]: \e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\88\90\e5\8a\9f,\e8\8e\b7\e5\be\97\e5\87\ba\e5\94\ae\e5\b8\90\e6\88\b7\e6\89\80\e5\be\97\e5\88\86\e4\ba\ab\e6\94\b6\e7\9b\8a\00")
(data (i32.const 20322) " \e5\b7\b2\e5\ae\8c\e6\88\90\e4\ba\a4\e6\98\93\00")
(data (i32.const 20339) "\e5\b8\90\e6\88\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20355) "\e5\ba\97\e9\93\baLOGO\e4\b8\8d\e8\83\bd\e8\b6\85\e8\bf\87256\e5\ad\97\e8\8a\82\00")
(data (i32.const 20387) "\e5\ba\97\e9\93\ba\e5\90\8d\e7\a7\b0\e4\b8\8d\e8\83\bd\e8\b6\85\e8\bf\87100\e5\ad\97\e8\8a\82\00")
(data (i32.const 20421) "\e5\ba\97\e9\93\ba\e6\8f\8f\e8\bf\b0\e4\b8\8d\e8\83\bd\e8\b6\85\e8\bf\87256\e5\ad\97\e8\8a\82\00")
(data (i32.const 20455) "\e5\ba\97\e9\93\ba\e5\b8\90\e6\88\b7\e5\b7\b2\e7\bb\8f\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20480) "\e5\ba\97\e9\93\ba\e5\b8\90\e6\88\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20502) "\e4\bb\a3\e7\90\86\e5\b8\90\e6\88\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20524) "servomonitor\00")
(data (i32.const 20537) "\e9\bb\91\e5\90\8d\e5\8d\95\e5\b8\90\e6\88\b7\e5\b7\b2\e7\bb\8f\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20565) "\e9\bb\91\e5\90\8d\e5\8d\95\e5\b8\90\e6\88\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20590) "namedex.bank\00")
(data (i32.const 20603) "undelegatebw\00")
(data (i32.const 20616) "543212345.m\00")
(data (i32.const 20628) "\e5\90\88\e7\ba\a6\e5\b8\90\e6\88\b7\e4\b8\8d\e5\ad\98\e5\9c\a8\00")
(data (i32.const 20650) "precision should be <= 18\00")
(data (i32.const 20676) "\e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e5\90\88\e7\ba\a6\00")
(data (i32.const 20700) "\e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e7\ac\a6\e5\8f\b7\00")
(data (i32.const 20724) "\e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\00")
(data (i32.const 20742) "sellname\00")
(data (i32.const 20751) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c, \e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e5\90\88\e7\ba\a6\00")
(data (i32.const 20789) "\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c, \e4\b8\8d\e6\94\af\e6\8c\81\e6\ad\a4TOKEN\e7\ac\a6\e5\8f\b7\00")
(data (i32.const 20827) "\e8\ae\be\e7\bd\ae\e9\87\91\e9\a2\9d\e6\9c\89\e8\af\af\00")
(data (i32.const 20846) "bidname\00")
(data (i32.const 20854) "bidrefuel\00")
(data (i32.const 20864) "buyname\00")
(data (i32.const 20872) "setstore\00")
(data (i32.const 20881) "\e5\8f\aa\e6\94\af\e6\8c\81 EOS@eosio.token \e5\bc\80\e8\83\bd\e5\ba\97\e9\93\ba\00")
(data (i32.const 20920) "[namedex.io]: \00")
(data (i32.const 20935) " \e5\bc\80\e9\80\9a\e5\ba\97\e9\93\ba\00")
(data (i32.const 20949) "onerror\00")
(data (i32.const 20957) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 21021) "abortsell\00")
(data (i32.const 21031) "abortbid\00")
(data (i32.const 21040) "abortbuy\00")
(data (i32.const 21049) "fixedbuy\00")
(data (i32.const 21058) "appeal\00")
(data (i32.const 21065) "setagent\00")
(data (i32.const 21074) "setblacklist\00")
(data (i32.const 21087) "setmaintain\00")
(data (i32.const 21099) "setsymbol\00")
(data (i32.const 21109) "notice\00")
(data (i32.const 21116) "\e7\b3\bb\e7\bb\9f\e7\bb\b4\e6\8a\a4\e4\b8\ad\00")
(data (i32.const 21132) "cannot create objects in table of another contract\00")
(data (i32.const 21183) "https://namedex.io\00")
(data (i32.const 21202) "write\00")
(data (i32.const 21208) "\e5\b8\90\e6\88\b7\00")
(data (i32.const 21215) "\e5\ad\98\e5\9c\a8\e5\bc\82\e5\b8\b8\e6\93\8d\e4\bd\9c,\e5\b7\b2\e8\a2\ab\e5\8a\a0\e5\85\a5\e9\bb\91\e5\90\8d\e5\8d\95\00")
(data (i32.const 21256) "cannot pass end iterator to modify\00")
(data (i32.const 21291) "object passed to modify is not in multi_index\00")
(data (i32.const 21337) "cannot modify objects in table of another contract\00")
(data (i32.const 21388) "updater cannot change primary key when modifying an object\00")
(data (i32.const 21447) "string is too long to be a valid name\00")
(data (i32.const 21485) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 21552) "character is not in allowed character set for names\00")
(data (i32.const 21604) "hT\00\00")
(data (i32.const 21608) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 21641) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 21690) "invalid symbol name\00")
(data (i32.const 21710) "delegatebw\00")
(data (i32.const 21721) "attempt to subtract asset with different symbol\00")
(data (i32.const 21769) "subtraction underflow\00")
(data (i32.const 21791) "subtraction overflow\00")
(data (i32.const 21812) "attempt to add asset with different symbol\00")
(data (i32.const 21855) "addition underflow\00")
(data (i32.const 21874) "addition overflow\00")
(data (i32.const 21892) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 21951) "string is too long to be a valid symbol_code\00")
(data (i32.const 21996) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 22049) "no operation\00")
(data (i32.const 22062) "invalid first pos\00")
(data (i32.const 22080) "parse memo error\00")
(data (i32.const 22097) "invalid memo\00")
(data (i32.const 22110) "operation error\00")
(data (i32.const 22126) "no payee\00")
(data (i32.const 22135) "no deposit\00")
(data (i32.const 22146) "no price\00")
(data (i32.const 22155) "no symbol\00")
(data (i32.const 22165) "no token\00")
(data (i32.const 22174) "no account\00")
(data (i32.const 22185) "no pubkey\00")
(data (i32.const 22195) "pubkey error\00")
(data (i32.const 22208) "invalid base-58 value\00")
(data (i32.const 22230) "base-58 value is out of range\00")
(data (i32.const 22260) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 22311) "error reading iterator\00")
(data (i32.const 22334) "read\00")
(data (i32.const 22339) "get\00")
(data (i32.const 22343) "cannot increment end iterator\00")
(data (i32.const 22373) "cannot pass end iterator to erase\00")
(data (i32.const 22407) "object passed to erase is not in multi_index\00")
(data (i32.const 22452) "cannot erase objects in table of another contract\00")
(data (i32.const 22502) "attempt to remove object that was not in multi_index\00")
(data (i32.const 22555) "next primary key in table is at autoincrement limit\00")
(data (i32.const 22607) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 22661) "cannot decrement iterator at beginning of table\00")
(data (i32.const 22712) "\80Q\01\00\10\0e\00\00\10\0e\00\00\80Q\01\00")
(data (i32.const 22736) "\00`\d7\1d\14\00\00\00\00\a4\93\d6\00\00\00\00\00\a4\93\d6\00\00\00\00\00`\d7\1d\14\00\00\00")
(data (i32.const 22768) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(import "env" "check_transaction_authorization" (func $fimport$0 (param i32 i32 i32 i32 i32 i32) (result i32)))
(import "env" "check_permission_authorization" (func $fimport$1 (param i64 i64 i32 i32 i32 i32 i64) (result i32)))
(import "env" "memcpy" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$3 (param i32 i32)))
(import "env" "require_auth" (func $fimport$4 (param i64)))
(import "env" "is_account" (func $fimport$5 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$7 (result i64)))
(import "env" "db_next_i64" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$9 (param i32 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$10 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$11 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$13 (result i64)))
(import "env" "cancel_deferred" (func $fimport$14 (param i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$15 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$16 (param i64)))
(import "env" "eosio_exit" (func $fimport$17 (param i32)))
(import "env" "action_data_size" (func $fimport$18 (result i32)))
(import "env" "read_action_data" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$20 (param i32 i64 i32 i32)))
(import "env" "db_idx64_update" (func $fimport$21 (param i32 i64 i32)))
(import "env" "send_deferred" (func $fimport$22 (param i32 i64 i32 i32 i32)))
(import "env" "db_get_i64" (func $fimport$23 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$24))
(import "env" "db_remove_i64" (func $fimport$25 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$26 (param i32)))
(import "env" "db_idx64_store" (func $fimport$27 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_previous_i64" (func $fimport$29 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$30 (param i64 i64 i64) (result i32)))
(import "env" "memset" (func $fimport$31 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$32 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$33 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$36 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$37 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$38 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$39 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$40 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$41 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$42 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$43 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$44 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$45 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$46 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$47 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$48 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$49 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$50 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$51 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$52 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $137))
(export "_ZdlPv" (func $225))
(export "_Znwj" (func $223))
(export "_Znaj" (func $224))
(export "_ZdaPv" (func $226))
(export "_ZnwjSt11align_val_t" (func $227))
(export "_ZnajSt11align_val_t" (func $228))
(export "_ZdlPvSt11align_val_t" (func $229))
(export "_ZdaPvSt11align_val_t" (func $230))
(table $0 21 21 anyfunc)
(elem (i32.const 1) $5 $21 $40 $60 $64 $67 $71 $92 $77 $84 $87 $90 $105 $111 $116 $119 $121 $125 $102 $126)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 23025))
(global $global$2 i32 (i32.const 23025))


void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $163(*($1), ($3 + [56]))
	$0 = ($3 + [68])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $163(*($1), ($0 + [24]))
	CALL $163(*($1), ($0 + [36]))
	$global$0 = ($2 + [16])
}

void .FUNC $6 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = ($0 + [352])
	$3 = *($0)
	$5 = *(($0 + [380]))
	$4 = *(($0 + [376]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [292]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($2), *(($0 + [360])), (int_64)-4157493845350678528, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $15($2, $6)
	if ( ((int_32)*($7 + [292]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$2
	CALL eosio_assert((*($7 + [264]) == 0), [21116])
	$global$0 = ($1 + [16])
	return 
	
.LABEL $label$1
	$3 = *($0)
	*($1 + [8]) = $0
	CALL $17($1, $2, $3, ($1 + [8]))
	$global$0 = ($1 + [16])
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $163(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $232(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $232(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $163(*($1), ($3 + [8]))
	CALL $163(*($1), ($3 + [20]))
	CALL $163(*($1), ($3 + [32]))
	$0 = ($3 + [44])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	$5 = CALL $232($2, ($1 + [32]))
	$4 = CALL $232(($2 + [16]), ($1 + [20]))
	$3 = CALL $232(($2 + [32]), ($1 + [8]))
	CALL $222($0, *($1), $3, $4, $5, *($1 + [44]))
	if ( (*($5) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	CALL $163(*($1), ($0 + [8]))
	$2 = ($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $163(*($1), ($0 + [24]))
}

void .FUNC $7 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [312])
	$5 = *(($0 + [340]))
	$4 = *(($0 + [336]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$9:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$8 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [22260])
	$8 = (int_64)0
	$0 = ($7 == 0)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [320])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $18($3, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$6
	$8 = (int_64)0
	$0 = ($7 == 0)
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = [0]
	$7 = *([0] + [21604])
	
.LOOP $label$11:
	*((($2 + [32]) + ($6 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$10 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$8) ){ goto $label$11 }
	
.LABEL $label$10
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$3 }
	*($2) = ($5 << [1])
	$7 = ($2 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [8])) = [0]
	*($2) = $8
	*($2) = [0]
	$6 = ($2 | [1])
	goto $label$1 
	
.LABEL $label$3
	$4 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($2) = ($4 | [1])
	*($2 + [8]) = $7
	*($2 + [4]) = $5
	
.LABEL $label$2
	$4 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$12:
	*(($7 + $6)) = *((($2 + [32]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$12 }
	$6 = ($7 + $5)
	
.LABEL $label$1
	*($6) = [0]
	$6 = CALL $241($2, [0], [21208])
	$5 = ($6 + [8])
	*((($2 + [16]) + [8])) = *($5)
	*($2 + [16]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	$6 = CALL $238(($2 + [16]), [21215])
	$7 = ($6 + [8])
	*(($5 = (($2 + [32]) + [8]))) = *($7)
	*($2 + [32]) = *($6)
	*($6) = (int_64)0
	*($7) = [0]
	CALL eosio_assert($0, ( *($5) ? (($2 + [32]) | [1]) : (*($2 + [32]) & [1]) ))
	if ( (*($2 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL _ZdlPv(*($5))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL _ZdlPv(*($2 + [24]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( (*($2) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$13
	CALL _ZdlPv(*($2 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC $246 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $30($1, $0, [17709])
	CALL $249()
	(unreachable)
}

int_32 .FUNC $178 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$1 = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [21951])
	goto $label$2 
	
.LABEL $label$3
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = (int_64)0
	
.LOOP $label$4:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$5
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$4 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$1
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $4
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$10 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [21690])
	
.LABEL $label$6
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [21951])
	goto $label$13 
	
.LABEL $label$14
	if ( ($2 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$1 = (int_64)0
	
.LOOP $label$15:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$16 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$16
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$15 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$11 
	
.LABEL $label$12
	$1 = (int_64)0
	
.LABEL $label$11
	*($0 + [48]) = (int_64)0
	*(($0 + [56])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$1 = $4
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$21 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [21690])
	
.LABEL $label$17
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$25 }
	CALL eosio_assert([0], [21951])
	goto $label$24 
	
.LABEL $label$25
	if ( ($2 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$1 = (int_64)0
	
.LOOP $label$26:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$27
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$26 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$22 
	
.LABEL $label$23
	$1 = (int_64)0
	
.LABEL $label$22
	*($0 + [64]) = (int_64)0
	*(($0 + [72])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	$1 = $4
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$29 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$32 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [21690])
	
.LABEL $label$28
	$1 = (int_64)0
	*($0 + [80]) = (int_64)0
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$35 }
	CALL eosio_assert([0], [21951])
	goto $label$34 
	
.LABEL $label$35
	if ( ($2 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$1 = (int_64)0
	
.LOOP $label$36:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$37 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$37
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$36 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$33
	*($0 + [88]) = (int_64)0
	*(($0 + [96])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$41
	$1 = $4
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$39 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$42 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [21690])
	
.LABEL $label$38
	$1 = (int_64)0
	*($0 + [112]) = (int_64)0
	*($0 + [104]) = (int_64)0
	*($0 + [120]) = (int_64)0
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$45 }
	CALL eosio_assert([0], [21951])
	goto $label$44 
	
.LABEL $label$45
	if ( ($2 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	$1 = (int_64)0
	
.LOOP $label$46:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$47 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$47
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$46 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$43
	*($0 + [128]) = (int_64)0
	*(($0 + [136])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$50:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$51
	$1 = $4
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$49 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$52 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [21690])
	
.LABEL $label$48
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$56 }
	CALL eosio_assert([0], [21951])
	goto $label$55 
	
.LABEL $label$56
	if ( ($2 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	$1 = (int_64)0
	
.LOOP $label$57:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$58 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$58
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$57 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$53 
	
.LABEL $label$54
	$1 = (int_64)0
	
.LABEL $label$53
	*($0 + [144]) = (int_64)0
	*(($0 + [152])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$62 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$62
	$1 = $4
	
.LOOP $label$63:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$63 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [21690])
	
.LABEL $label$59
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$67 }
	CALL eosio_assert([0], [21951])
	goto $label$66 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$65 }
	
.LABEL $label$66
	$1 = (int_64)0
	
.LOOP $label$68:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$69 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$69
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$68 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$64 
	
.LABEL $label$65
	$1 = (int_64)0
	
.LABEL $label$64
	*($0 + [160]) = (int_64)0
	*(($0 + [168])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$72:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$71 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$73 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$73
	$1 = $4
	
.LOOP $label$74:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$71 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$74 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$71
	CALL eosio_assert([0], [21690])
	
.LABEL $label$70
	$1 = (int_64)0
	*($0 + [176]) = (int_64)0
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$77 }
	CALL eosio_assert([0], [21951])
	goto $label$76 
	
.LABEL $label$77
	if ( ($2 == 0) ){ goto $label$75 }
	
.LABEL $label$76
	$1 = (int_64)0
	
.LOOP $label$78:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$79 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$79
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$78 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$75
	*($0 + [184]) = (int_64)0
	*(($0 + [192])) = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$82:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$81 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$83 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$83
	$1 = $4
	
.LOOP $label$84:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$81 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$84 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$81
	CALL eosio_assert([0], [21690])
	
.LABEL $label$80
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$88 }
	CALL eosio_assert([0], [21951])
	goto $label$87 
	
.LABEL $label$88
	if ( ($2 == 0) ){ goto $label$86 }
	
.LABEL $label$87
	$1 = (int_64)0
	
.LOOP $label$89:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$90 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$90
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$89 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$85 
	
.LABEL $label$86
	$1 = (int_64)4
	
.LABEL $label$85
	*($0 + [200]) = (int_64)0
	*(($0 + [208])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$93:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$92 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$94 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$94
	$1 = $4
	
.LOOP $label$95:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$92 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$95 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	CALL eosio_assert([0], [21690])
	
.LABEL $label$91
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$99 }
	CALL eosio_assert([0], [21951])
	goto $label$98 
	
.LABEL $label$99
	if ( ($2 == 0) ){ goto $label$97 }
	
.LABEL $label$98
	$1 = (int_64)0
	
.LOOP $label$100:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$101 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$101
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$100 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$96 
	
.LABEL $label$97
	$1 = (int_64)4
	
.LABEL $label$96
	*($0 + [216]) = (int_64)0
	*(($0 + [224])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$104:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$105 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$1 = $4
	
.LOOP $label$106:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$103 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$106 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$103
	CALL eosio_assert([0], [21690])
	
.LABEL $label$102
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$110 }
	CALL eosio_assert([0], [21951])
	goto $label$109 
	
.LABEL $label$110
	if ( ($2 == 0) ){ goto $label$108 }
	
.LABEL $label$109
	$1 = (int_64)0
	
.LOOP $label$111:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$112 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$112
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$111 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$107 
	
.LABEL $label$108
	$1 = (int_64)4
	
.LABEL $label$107
	*($0 + [232]) = (int_64)0
	*(($0 + [240])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$115:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$114 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$116 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$115 }
	goto $label$113 
	
.LABEL $label$116
	$1 = $4
	
.LOOP $label$117:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$114 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$117 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$115 }
	goto $label$113 
	
.LABEL $label$114
	CALL eosio_assert([0], [21690])
	
.LABEL $label$113
	$2 = CALL $261([16939])
	if ( ($2 <= [8]) ){ goto $label$121 }
	CALL eosio_assert([0], [21951])
	goto $label$120 
	
.LABEL $label$121
	if ( ($2 == 0) ){ goto $label$119 }
	
.LABEL $label$120
	$1 = (int_64)0
	
.LOOP $label$122:
	$3 = *(($2 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$123 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$123
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$122 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$118 
	
.LABEL $label$119
	$1 = (int_64)4
	
.LABEL $label$118
	*($0 + [248]) = (int_64)0
	*(($0 + [256])) = $1
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$126:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$125 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$127 }
	$1 = $4
	$3 = $2
	$2 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$126 }
	goto $label$124 
	
.LABEL $label$127
	$1 = $4
	
.LOOP $label$128:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$125 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $3 ){ goto $label$128 }
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$126 }
	goto $label$124 
	
.LABEL $label$125
	CALL eosio_assert([0], [21690])
	
.LABEL $label$124
	*($0 + [272]) = (int_64)0
	*($0 + [264]) = [0]
	*($0 + [280 align=4]) = (int_64)0
	*(($0 + [288])) = [0]
	return $0
}

void .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($0) = (int_64)0
	*(($3 = ($0 + [29]))) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)0
	*(($5 = ($0 + [16]))) = (int_64)0
	*(($6 = ($0 + [8]))) = (int_64)0
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = *($1)
	$9 = ($8 + $7)
	$7 = ($0 + [2])
	$10 = ($0 + [3])
	$11 = ($0 + [4])
	$12 = ($0 + [5])
	$13 = ($0 + [6])
	$14 = ($0 + [7])
	$15 = ($0 + [9])
	$16 = ($0 + [10])
	$17 = ($0 + [11])
	$18 = ($0 + [12])
	$19 = ($0 + [13])
	$20 = ($0 + [14])
	$21 = ($0 + [15])
	$22 = ($0 + [17])
	$23 = ($0 + [18])
	$24 = ($0 + [19])
	$25 = ($0 + [20])
	$26 = ($0 + [21])
	$27 = ($0 + [22])
	$28 = ($0 + [23])
	$29 = ($0 + [25])
	$30 = ($0 + [26])
	$31 = ($0 + [27])
	$32 = ($0 + [28])
	$33 = ($0 + [30])
	$34 = ($0 + [31])
	$35 = ($0 + [32])
	$36 = ($0 + [33])
	$37 = ($0 + [34])
	$38 = ($0 + [35])
	$39 = ($0 + [36])
	
.LOOP $label$2:
	if ( *([0] + [8192]) ){ goto $label$3 }
	$1 = [-256]
	
.LOOP $label$4:
	*(($1 + [8449])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$4 }
	$1 = [0]
	
.LOOP $label$5:
	*((*(($1 + [16880])) + [8193])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$5 }
	*([0] + [8192]) = [1]
	
.LABEL $label$3
	$1 = *((CALL memcpy($2, [8193], [256]) + *($8)))
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert([0], [22208])
	
.LABEL $label$6
	$1 = (((int_32)*($0) * (int_32)[58]) + $1)
	*($0) = $1
	$1 = (((int_32)*($40) * (int_32)[58]) + int_32($1 >> [8]))
	*(($40 = ($0 + [1]))) = $1
	$1 = (((int_32)*($7) * (int_32)[58]) + int_32($1 >> [8]))
	*($7) = $1
	$1 = (((int_32)*($10) * (int_32)[58]) + int_32($1 >> [8]))
	*($10) = $1
	$1 = (((int_32)*($11) * (int_32)[58]) + int_32($1 >> [8]))
	*($11) = $1
	$1 = (((int_32)*($12) * (int_32)[58]) + int_32($1 >> [8]))
	*($12) = $1
	$1 = (((int_32)*($13) * (int_32)[58]) + int_32($1 >> [8]))
	*($13) = $1
	$1 = (((int_32)*($14) * (int_32)[58]) + int_32($1 >> [8]))
	*($14) = $1
	$1 = (((int_32)*($6) * (int_32)[58]) + int_32($1 >> [8]))
	*($6) = $1
	$1 = (((int_32)*($15) * (int_32)[58]) + int_32($1 >> [8]))
	*($15) = $1
	$1 = (((int_32)*($16) * (int_32)[58]) + int_32($1 >> [8]))
	*($16) = $1
	$1 = (((int_32)*($17) * (int_32)[58]) + int_32($1 >> [8]))
	*($17) = $1
	$1 = (((int_32)*($18) * (int_32)[58]) + int_32($1 >> [8]))
	*($18) = $1
	$1 = (((int_32)*($19) * (int_32)[58]) + int_32($1 >> [8]))
	*($19) = $1
	$1 = (((int_32)*($20) * (int_32)[58]) + int_32($1 >> [8]))
	*($20) = $1
	$1 = (((int_32)*($21) * (int_32)[58]) + int_32($1 >> [8]))
	*($21) = $1
	$1 = (((int_32)*($5) * (int_32)[58]) + int_32($1 >> [8]))
	*($5) = $1
	$1 = (((int_32)*($22) * (int_32)[58]) + int_32($1 >> [8]))
	*($22) = $1
	$1 = (((int_32)*($23) * (int_32)[58]) + int_32($1 >> [8]))
	*($23) = $1
	$1 = (((int_32)*($24) * (int_32)[58]) + int_32($1 >> [8]))
	*($24) = $1
	$1 = (((int_32)*($25) * (int_32)[58]) + int_32($1 >> [8]))
	*($25) = $1
	$1 = (((int_32)*($26) * (int_32)[58]) + int_32($1 >> [8]))
	*($26) = $1
	$1 = (((int_32)*($27) * (int_32)[58]) + int_32($1 >> [8]))
	*($27) = $1
	$1 = (((int_32)*($28) * (int_32)[58]) + int_32($1 >> [8]))
	*($28) = $1
	$1 = (((int_32)*($4) * (int_32)[58]) + int_32($1 >> [8]))
	*($4) = $1
	$1 = (((int_32)*($29) * (int_32)[58]) + int_32($1 >> [8]))
	*($29) = $1
	$1 = (((int_32)*($30) * (int_32)[58]) + int_32($1 >> [8]))
	*($30) = $1
	$1 = (((int_32)*($31) * (int_32)[58]) + int_32($1 >> [8]))
	*($31) = $1
	$1 = (((int_32)*($32) * (int_32)[58]) + int_32($1 >> [8]))
	*($32) = $1
	$1 = (((int_32)*($3) * (int_32)[58]) + int_32($1 >> [8]))
	*($3) = $1
	$1 = (((int_32)*($33) * (int_32)[58]) + int_32($1 >> [8]))
	*($33) = $1
	$1 = (((int_32)*($34) * (int_32)[58]) + int_32($1 >> [8]))
	*($34) = $1
	$1 = (((int_32)*($35) * (int_32)[58]) + int_32($1 >> [8]))
	*($35) = $1
	$1 = (((int_32)*($36) * (int_32)[58]) + int_32($1 >> [8]))
	*($36) = $1
	$1 = (((int_32)*($37) * (int_32)[58]) + int_32($1 >> [8]))
	*($37) = $1
	$1 = (((int_32)*($38) * (int_32)[58]) + int_32($1 >> [8]))
	*($38) = $1
	$1 = (((int_32)*($39) * (int_32)[58]) + int_32($1 >> [8]))
	*($39) = $1
	if ( ($1 <= [256]) ){ goto $label$7 }
	CALL eosio_assert([0], [22230])
	
.LABEL $label$7
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [36])
	
.LOOP $label$8:
	$8 = *($0)
	*($0) = *($1)
	*($1) = $8
	$1 = ($1 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $1) ){ goto $label$8 }
	$global$0 = ($2 + [256])
}

void .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = *($0)
	$3 = *($1)
	$4 = *($3 + [4])
	$5 = (int_64)0
	$6 = ($3 + [8])
	$7 = ($3 + [4])
	$8 = [0]
	
.LOOP $label$1:
	if ( ($4 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [22339])
	$4 = *($7)
	
.LABEL $label$2
	$9 = *($4)
	$10 = ($4 + [1])
	*($7) = $10
	$4 = ($8 & [255])
	$5 = ((int_64)$5 | (int_64)(CASTING uint_64)(uint_32 (($9 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $10
	if ( ($9 & [128]) ){ goto $label$1 }
	*($2 + [40]) = $5
	$4 = ($2 + [44])
	if ( ((uint_32)(*(($3 + [8])) - $10) > (uint_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$10 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $10, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	CALL $163(*($1), (*($0) + [80]))
}

void .FUNC $5 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$8 = ($global$0 - [128])
	$global$0 = $8
	*($8 + [72]) = $2
	*($8 + [80]) = $1
	*($8 + [64]) = $5
	CALL $6($0)
	CALL eosio_assert((($7 == 0) | ((($7 + [-1]) & [255]) <= [2])), [17069])
	if ( ($7 == 0) ){ goto $label$2 }
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth(*($0))
	
.LABEL $label$1
	CALL $7($0, $1)
	CALL eosio_assert(CALL $fimport$5($2), [17088])
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [17110])
	$9 = *($3 + [8])
	$2 = *($4 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)$9), [17144])
	CALL eosio_assert(((int_64)CALL $8($0, $5, $2) != (int_64)0), [17186])
	CALL eosio_assert(((int_64)CALL $8($0, $5, $9) != (int_64)0), [17216])
	CALL eosio_assert(((int_64)*($4) > (int_64)999), [17248])
	$10 = *($6)
	if ( ($10 & [1]) ){ goto $label$4 }
	$10 = uint_32($10 >> [1])
	goto $label$3 
	
.LABEL $label$4
	$10 = *($6 + [4])
	
.LABEL $label$3
	CALL eosio_assert(($10 <= [257]), [17266])
	$11 = ($0 + [152])
	$13 = *(($0 + [180]))
	$12 = *(($0 + [176]))
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$6 }
	
.LOOP $label$8:
	$10 = ($13 + [-24])
	$14 = *($10)
	if ( ((int_64)*($14) == (int_64)$1) ){ goto $label$7 }
	$13 = $10
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$6 }
	if ( ((int_32)*($14 + [148]) == (int_32)$11) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$6
	$14 = [0]
	$10 = CALL db_find_i64(*($11), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$14 = CALL $9($11, $10)
	if ( ((int_32)*($14 + [148]) == (int_32)$11) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$5
	CALL eosio_assert(($14 == 0), [17300])
	$11 = ($0 + [32])
	$13 = *(($0 + [60]))
	$12 = *(($0 + [56]))
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$16 }
	
.LOOP $label$18:
	$10 = ($13 + [-24])
	$14 = *($10)
	if ( ((int_64)*($14) == (int_64)$1) ){ goto $label$17 }
	$13 = $10
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$16 }
	if ( ((int_32)*($14 + [120]) == (int_32)$11) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	$10 = [2]
	if ( ($7 <= [2]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$14 = [0]
	$10 = CALL db_find_i64(*($11), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$15 }
	$14 = CALL $10($11, $10)
	if ( ((int_32)*($14 + [120]) == (int_32)$11) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$15
	$10 = [2]
	if ( ((uint_32)$7 >= (uint_32)[2]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert(($14 == 0), [17344])
	$1 = *($3)
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$19 }
	CALL eosio_assert(((int_64)$1 > (int_64)999), [17369])
	$2 = *(($3 + [8]))
	*((($8 + [48]) + [8])) = $2
	$1 = *($3)
	*((($8 + [8]) + [8])) = $2
	*($8 + [8]) = $1
	*($8 + [48]) = $1
	CALL $11($0, $5, ($8 + [8]), [2])
	
.LABEL $label$19
	$1 = *($0)
	*($8 + [32]) = $3
	*($8 + [36]) = $4
	*($8 + [40]) = $6
	*($8 + [28]) = ($8 + [72])
	*($8 + [24]) = ($8 + [80])
	*($8 + [44]) = ($8 + [64])
	*($8 + [120]) = $1
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$20 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$20
	*($8 + [96]) = $11
	*($8 + [100]) = ($8 + [24])
	*($8 + [104]) = ($8 + [120])
	*(($10 = CALL _Znwj([136])) + [8]) = (int_64)0
	*($10) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [48 align=4]) = (int_64)0
	*($10 + [56]) = [0]
	*($10 + [88]) = (int_64)0
	*($10 + [96]) = (int_64)0
	*($10 + [104]) = (int_64)0
	*($10 + [112]) = (int_64)0
	*($10 + [120]) = $11
	CALL $12(($8 + [96]), $10)
	*($8 + [112]) = $10
	$1 = *($10)
	*($8 + [96]) = $1
	$14 = *($10 + [124])
	*($8 + [92]) = $14
	$12 = ($0 + [60])
	$13 = *($12)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [64]))) ){ goto $label$12 }
	*($13 + [8]) = $1
	*($13 + [16]) = $14
	*($8 + [112]) = [0]
	*($13) = $10
	*($12) = ($13 + [24])
	$10 = *($8 + [112])
	*($8 + [112]) = [0]
	if ( ($10 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [17387])
	CALL eosio_assert((int_64)(*($14 + [16]) == 0), [17409])
	$1 = *($0)
	*($8 + [28]) = $4
	*($8 + [32]) = $6
	*($8 + [24]) = ($8 + [72])
	*($8 + [36]) = ($8 + [64])
	if ( $14 ){ goto $label$21 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$21
	CALL $13($11, $14, $1, ($8 + [24]))
	$global$0 = ($8 + [128])
	return 
	
.LABEL $label$12
	CALL $14(($0 + [56]), ($8 + [112]), ($8 + [96]), ($8 + [92]))
	$10 = *($8 + [112])
	*($8 + [112]) = [0]
	if ( ($10 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((*($10 + [48]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($10 + [56])))
	
.LABEL $label$22
	CALL _ZdlPv($10)
	
.LABEL $label$10
	$7 = ($0 + [352])
	$1 = *($0)
	$13 = *(($0 + [380]))
	$12 = *(($0 + [376]))
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$24 }
	
.LOOP $label$26:
	$10 = ($13 + [-24])
	$14 = *($10)
	if ( ((int_64)*($14) == (int_64)$1) ){ goto $label$25 }
	$13 = $10
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$24 }
	if ( ((int_32)*($14 + [292]) == (int_32)$7) ){ goto $label$27 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$27
	if ( $14 ){ goto $label$23 }
	goto $label$9 
	
.LABEL $label$24
	$10 = CALL db_find_i64(*($7), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $15($7, $10)
	if ( ((int_32)*($14 + [292]) == (int_32)$7) ){ goto $label$23 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$23
	$1 = *($0)
	*($8 + [28]) = $3
	*($8 + [24]) = ($8 + [64])
	CALL $16($7, $14, $1, ($8 + [24]))
	
.LABEL $label$9
	$global$0 = ($8 + [128])
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($2)
	if ( ($4 & [1]) ){ goto $label$6 }
	$4 = uint_32($4 >> [1])
	$5 = ($2 + [1])
	$6 = ($5 + $4)
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = *($2 + [4])
	$5 = *($2 + [8])
	$6 = ($5 + $4)
	if ( ($4 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $251(*($5)) ){ goto $label$4 }
	$5 = ($5 + [1])
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$7 }
	$5 = $6
	$4 = [1]
	$7 = *($2)
	if ( (($7 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	$4 = ($5 + [1])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $251(*($4)) == 0) ){ goto $label$10 }
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$4 = [1]
	$7 = *($2)
	if ( ($7 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($2 + $4)
	$4 = ($6 + uint_32($7 >> $4))
	goto $label$1 
	
.LABEL $label$2
	$6 = *($2 + [8])
	$4 = ($6 + *($2 + [4]))
	
.LABEL $label$1
	CALL $242($2, ($5 - $6), ($4 - $5))
	$4 = *($2)
	if ( ($4 & [1]) ){ goto $label$18 }
	$5 = ($2 + [1])
	$6 = uint_32($4 >> [1])
	if ( $6 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$5 = *($2 + [8])
	$6 = *($2 + [4])
	if ( ($6 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$4 = [0]
	
.LOOP $label$19:
	$4 = ($4 + ((int_32)*($5) == (int_32)[124]))
	$5 = ($5 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$19 }
	if ( ($4 == 0) ){ goto $label$16 }
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	CALL eosio_assert([1], [22062])
	$5 = CALL $243($2, [124], [0])
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$15 }
	CALL $233($3, $2, [0], $5, $2)
	if ( (*($0) & [1]) ){ goto $label$14 }
	*($0) = [0]
	goto $label$13 
	
.LABEL $label$16
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = CALL $261([17531])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$22 }
	*($0) = ($5 << [1])
	$4 = ($0 + [1])
	if ( $5 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$6 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($6)
	*($0) = ($6 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $5
	
.LABEL $label$21
	CALL memcpy($4, [17531], $5)
	
.LABEL $label$20
	*(($4 + $5)) = [0]
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	CALL eosio_assert([0], [22080])
	goto $label$12 
	
.LABEL $label$14
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$13
	CALL $236($0, [0])
	*(($0 + [8])) = *(($3 + [8]))
	*($0) = *($3)
	
.LABEL $label$12
	$5 = *($0)
	CALL eosio_assert(((int_32)( *(($0 + [4])) ? uint_32($5 >> [1]) : ($5 & [1]) ) != (int_32)[0]), [22049])
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$11
	CALL $231($0)
}

int_32 .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $187($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $38($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $38($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $188($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($3) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$14
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $163(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [22334])
	$1 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [21202])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $186($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [80])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = *($4 + [8])
	*(($1 + [61])) = *(($6 + [29]))
	*(($1 + [56])) = *(($6 + [24]))
	*(($1 + [48])) = *(($6 + [16]))
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [32 align=4]) = *($6)
	$6 = *($4 + [12])
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	$7 = ($1 + [72])
	CALL $234($7, *($4 + [16]))
	*($1 + [88]) = CALL current_time()
	*($1 + [96]) = CALL current_time()
	*($1 + [104]) = (*($1 + [104]) + [1])
	*($1 + [112]) = *(*($4 + [20]))
	$8 = ($1 + [104])
	$9 = ($1 + [96])
	$10 = ($1 + [88])
	$11 = ($1 + [16])
	$12 = ($1 + [32])
	$13 = *($1 + [32])
	$4 = [93]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$1 }
	$6 = *(($1 + [72]))
	$6 = ( *(($1 + [76])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$4 = ($6 + $4)
	$13 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$6 = CALL $264($4)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$3
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $11
	*($3 + [36]) = $12
	*($3 + [40]) = $7
	*($3 + [44]) = $10
	*($3 + [48]) = $9
	*($3 + [52]) = $8
	*($3 + [56]) = ($1 + [112])
	CALL $199(($3 + [24]), ($3 + [16]))
	$13 = *(($1 + [88]))
	*($1 + [124]) = CALL db_store_i64(*($5 + [8]), (int_64)4292657617207033856, *(*($0 + [8])), $13, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL $267($6)
	
.LABEL $label$5
	if ( (uint_64)($13 <= *($5 + [16])) ){ goto $label$6 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$13 = *(($1 + [88]))
	$14 = *(($5 + [8]))
	$15 = *(*(($0 + [8])))
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [128]) = CALL db_idx64_store($14, (int_64)4292657617207033856, $15, $13, ($3 + [24]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $264 (int_32 $0)
{
	return CALL $265([8472], $0)
}

void .FUNC memory ()
{
}

int_32 .FUNC $266 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [8464]) == 0) ){ goto $label$2 }
	$2 = *([0] + [8468])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [8464]) = [1]
	$2 = ($2 << [16])
	*([0] + [8468]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [8468])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [8468]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [8464]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [8464]) = [1]
	$3 = ($3 << [16])
	*([0] + [8468]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [8468])
	
.LABEL $label$10
	*([0] + [8468]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *(*($4) + [4])
	*($1) = *($5)
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [16]) = *($5 + [8])
	$6 = *($0)
	$5 = *($4 + [8])
	*(($1 + [53])) = *(($5 + [29]))
	*(($1 + [48])) = *(($5 + [24]))
	*(($1 + [40])) = *(($5 + [16]))
	*(($1 + [32])) = *(($5 + [8]))
	*($1 + [24 align=4]) = *($5)
	$5 = *(*($4) + [4])
	*($1 + [64]) = *($5 + [32])
	*(($1 + [72])) = *(($5 + [40]))
	$5 = *(*($4) + [4])
	*($1 + [80]) = *($5 + [16])
	*(($1 + [88])) = *(($5 + [24]))
	*($1 + [96]) = [1]
	*($1 + [104]) = *(*($4 + [12]))
	*($1 + [112]) = CALL current_time()
	*($1 + [120]) = CALL current_time()
	*($1 + [128]) = *(*($4 + [16]))
	$7 = ($1 + [120])
	$8 = ($1 + [112])
	$9 = ($1 + [96])
	$10 = ($1 + [80])
	$11 = ($1 + [64])
	$12 = ($1 + [24])
	$13 = *($1 + [24])
	$4 = [122]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$1 }
	$5 = *($1 + [136])
	$5 = ( *(($1 + [140])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$13 = (CASTING uint_64)(uint_32 $5)
	$14 = ($1 + [136])
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL $264($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$3
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $12
	*($3 + [48]) = $11
	*($3 + [52]) = $10
	*($3 + [56]) = $9
	*($3 + [60]) = ($1 + [104])
	*($3 + [64]) = $8
	*($3 + [68]) = $7
	*($3 + [72]) = ($1 + [128])
	*($3 + [76]) = $14
	CALL $197(($3 + [32]), ($3 + [24]))
	$13 = *($1)
	*($1 + [152]) = CALL db_store_i64(*($6 + [8]), (int_64)6609776272782393344, *(*($0 + [8])), $13, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL $267($5)
	
.LABEL $label$5
	if ( (uint_64)($13 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$13 = *(($6 + [8]))
	$15 = *(*(($0 + [8])))
	$16 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*($1 + [156]) = CALL db_idx64_store($13, (int_64)6609776272782393344, $15, $16, ($3 + [32]))
	$global$0 = ($3 + [80])
}

int_64 .FUNC $42 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [40]) = [17531]
	*($2 + [44]) = CALL $261([17531])
	*($2 + [16]) = *($2 + [40])
	if ( ((int_64)*(CALL $22(($2 + [48]), ($2 + [16]))) == (int_64)$1) ){ goto $label$6 }
	if ( (CALL is_account($1) == 0) ){ goto $label$6 }
	$3 = ($0 + [392])
	$5 = *(($0 + [420]))
	$4 = *(($0 + [416]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$5 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*($2 + [24]) = [19052]
	*($2 + [28]) = CALL $261([19052])
	*($2) = *($2 + [24])
	CALL $22(($2 + [56]), $2)
	goto $label$1 
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	if ( ((int_32)*($7 + [152]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*($3), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $19($3, $6) + [152]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	*($2 + [56]) = $1
	goto $label$1 
	
.LABEL $label$2
	*($2 + [32]) = [19052]
	*($2 + [36]) = CALL $261([19052])
	*($2 + [8]) = *($2 + [32])
	CALL $22(($2 + [56]), ($2 + [8]))
	
.LABEL $label$1
	$1 = *($2 + [56])
	$global$0 = ($2 + [64])
	return $1
}

int_64 .FUNC $41 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = [0]
	*($3 + [40]) = [0]
	*($3 + [32]) = (int_64)0
	CALL $53(($3 + [32]), $2)
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$2 = *($3 + [32])
	$5 = *($3 + [36])
	$6 = (CASTING uint_64)(uint_32 ((int_32)($5 - $2) / (int_32)[40]))
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = ($4 + [33])
	$6 = *($2)
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$6 }
	$2 = ($2 + [40])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$5 }
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $2(($3 + [16]), $4)
	$2 = *($3 + [20])
	$4 = *($3 + [16])
	goto $label$2 
	
.LABEL $label$3
	$2 = [0]
	$4 = [0]
	
.LABEL $label$2
	*($3 + [52]) = $4
	*($3 + [48]) = $4
	*($3 + [56]) = $2
	CALL $54(($3 + [48]), ($3 + [32]))
	*($3 + [8]) = [19970]
	*($3 + [12]) = CALL $261([19970])
	*($3) = *($3 + [8])
	CALL $22(($3 + [48]), $3)
	$4 = *($3 + [16])
	$2 = CALL check_permission_authorization($1, (int_64)-6402241254016417792, $4, (*($3 + [20]) - $4), [0], [0], (int_64)9223372036854775807)
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$7 }
	*($3 + [20]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$6 = (CASTING int_64)(int_32 $2)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$8 }
	*($3 + [36]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$8
	$global$0 = ($3 + [64])
	return $6
}

void .FUNC $40 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$7 = ($global$0 - [368])
	$global$0 = $7
	*($7 + [320]) = $2
	*($7 + [312]) = $4
	*($7 + [328]) = $1
	CALL $6($0)
	CALL require_auth(*($0))
	CALL $7($0, $2)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [17838])
	$8 = ($0 + [152])
	$10 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	
.LOOP $label$4:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$2) ){ goto $label$3 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	if ( ((int_32)*($12 + [148]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	$11 = CALL db_find_i64(*($8), *(($0 + [160])), (int_64)6609776272782393344, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $9($8, $11)
	if ( ((int_32)*($12 + [148]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$1
	CALL eosio_assert(($12 == 0), [17872])
	$13 = ($0 + [32])
	$10 = *(($0 + [60]))
	$12 = *(($0 + [56]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$6 }
	
.LOOP $label$8:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$7 }
	$10 = $11
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$6 }
	if ( ((int_32)*($9 + [120]) == (int_32)$13) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$6
	$11 = CALL db_find_i64(*($13), *(($0 + [40])), (int_64)3607749778735104000, $2)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$9 }
	$9 = CALL $10($13, $11)
	if ( ((int_32)*($9 + [120]) == (int_32)$13) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$9
	$9 = [0]
	
.LABEL $label$5
	*($7 + [308]) = $9
	*($7 + [304]) = $13
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [17916])
	$14 = *(($5 + [32]))
	*((($7 + [264]) + [32])) = $14
	$15 = *(($5 + [24]))
	*((($7 + [264]) + [24])) = $15
	$16 = *(($5 + [16]))
	*((($7 + [264]) + [16])) = $16
	$17 = *(($5 + [8]))
	*((($7 + [264]) + [8])) = $17
	$1 = *($5)
	*((($7 + [40]) + [8])) = $17
	*((($7 + [40]) + [16])) = $16
	*((($7 + [40]) + [24])) = $15
	*((($7 + [40]) + [32])) = $14
	*($7 + [40]) = $1
	*($7 + [264]) = $1
	CALL eosio_assert((int_64)(CALL $41($0, $2, ($7 + [40])) == 0), [17938])
	$2 = *($3 + [8])
	CALL eosio_assert(((int_64)CALL $8($0, $4, $2) != (int_64)0), [17186])
	CALL eosio_assert(((int_64)$2 == (int_64)*(($9 + [40]))), [17144])
	$4 = *($3)
	CALL eosio_assert(((int_64)$4 > (int_64)0), [17990])
	$11 = *($6)
	if ( ($11 & [1]) ){ goto $label$11 }
	$11 = uint_32($11 >> [1])
	goto $label$10 
	
.LABEL $label$11
	$11 = *($6 + [4])
	
.LABEL $label$10
	CALL eosio_assert(($11 <= [257]), [17266])
	*($7 + [248]) = (int_64)0
	*($7 + [256]) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$2 = $1
	$10 = $11
	$11 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$2 = $1
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$10 = ((int_32)$11 < (int_32)[6])
	$12 = ($11 + [1])
	$11 = $12
	if ( $10 ){ goto $label$16 }
	$11 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [21690])
	$9 = *($7 + [308])
	
.LABEL $label$12
	$2 = *($9 + [112])
	if ( ((int_64)*($9 + [16]) == (int_64)0) ){ goto $label$21 }
	CALL eosio_assert(((int_64)$2 == (int_64)*($7 + [312])), [17557])
	$11 = *($7 + [308])
	if ( (*($11 + [80]) == 0) ){ goto $label$22 }
	CALL eosio_assert(((uint_64)*($11 + [72]) >= (uint_64)((int_64)CALL $fimport$13() + (int_64)-86400000000)), [18034])
	
.LABEL $label$22
	$10 = ($0 + [72])
	*($7 + [360]) = $10
	CALL $26(($7 + [216]), ($7 + [360]), ($7 + [320]))
	$2 = (int_64)0
	$1 = (int_64)0
	$11 = *($7 + [220])
	if ( ($11 == 0) ){ goto $label$23 }
	$1 = (int_64)0
	
.LOOP $label$24:
	if ( ((int_64)*($11 + [8]) != (int_64)*($7 + [320])) ){ goto $label$23 }
	$1 = ((int_64)$1 + (int_64)(CASTING uint_64)(uint_32 ((int_64)*($11) == (int_64)*($7 + [328]))))
	CALL $28(($7 + [216]))
	$11 = *($7 + [220])
	if ( $11 ){ goto $label$24 }
	
.LABEL $label$23
	CALL eosio_assert((int_64)($1 == 0), [18059])
	$14 = *(*($7 + [308]) + [32])
	*($7 + [112]) = *($7 + [320])
	*($7 + [200]) = $10
	CALL $26(($7 + [344]), ($7 + [200]), ($7 + [112]))
	$11 = *($7 + [348])
	if ( ($11 == 0) ){ goto $label$25 }
	$2 = (int_64)0
	
.LOOP $label$26:
	if ( ((int_64)*($11 + [8]) != (int_64)*($7 + [112])) ){ goto $label$25 }
	$1 = *($11 + [16])
	$2 = ( $1 ? $2 : (uint_64)($2 <= $1) )
	CALL $28(($7 + [344]))
	$11 = *($7 + [348])
	if ( $11 ){ goto $label$26 }
	
.LABEL $label$25
	if ( (int_64)($2 == 0) ){ goto $label$18 }
	*($7 + [112]) = *($7 + [320])
	*($7 + [200]) = $10
	CALL $26(($7 + [344]), ($7 + [200]), ($7 + [112]))
	$11 = *($7 + [348])
	if ( ($11 == 0) ){ goto $label$20 }
	$2 = (int_64)0
	
.LOOP $label$27:
	if ( ((int_64)*($11 + [8]) != (int_64)*($7 + [112])) ){ goto $label$19 }
	$1 = *($11 + [16])
	$2 = ( $1 ? $2 : (uint_64)($2 <= $1) )
	CALL $28(($7 + [344]))
	$11 = *($7 + [348])
	if ( $11 ){ goto $label$27 }
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert(((int_64)CALL $42($0, $2) == (int_64)*($7 + [312])), [17557])
	CALL eosio_assert(((int_64)$4 == (int_64)*(*($7 + [308]) + [32])), [18006])
	$2 = *(*($7 + [308]) + [32])
	*($7 + [248]) = $2
	goto $label$17 
	
.LABEL $label$20
	$2 = (int_64)0
	
.LABEL $label$19
	$14 = ((int_64)*(*($7 + [308]) + [16]) + (int_64)$2)
	
.LABEL $label$18
	*($7 + [248]) = $14
	CALL eosio_assert([1], [18090])
	$2 = *($7 + [248])
	
.LABEL $label$17
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [18255])
	CALL eosio_assert(((int_64)$4 == (int_64)$2), [18268])
	$18 = ($0 + [352])
	$2 = *($0)
	$10 = *(($0 + [380]))
	$12 = *(($0 + [376]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$29 }
	
.LOOP $label$31:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$30 }
	$10 = $11
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$29 }
	if ( ((int_32)*($9 + [292]) == (int_32)$18) ){ goto $label$28 }
	CALL eosio_assert([0], [22260])
	goto $label$28 
	
.LABEL $label$29
	$9 = [0]
	$11 = CALL db_find_i64(*($18), *(($0 + [360])), (int_64)-4157493845350678528, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$28 }
	$9 = CALL $15($18, $11)
	if ( ((int_32)*($9 + [292]) == (int_32)$18) ){ goto $label$28 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$28
	$11 = *($7 + [308])
	$1 = *($11 + [8])
	if ( ((int_64)*($11 + [16]) == (int_64)0) ){ goto $label$60 }
	*(($7 + [352])) = [0]
	*($7 + [344]) = (int_64)0
	$11 = CALL $261([17686])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$59 }
	*($7 + [344]) = ($11 << [1])
	$12 = (($7 + [344]) | [1])
	if ( $11 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	*(($7 + [352])) = [0]
	*($7 + [344]) = (int_64)0
	$11 = CALL $261([17686])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$56 }
	*($7 + [344]) = ($11 << [1])
	$12 = (($7 + [344]) | [1])
	if ( $11 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$59
	$10 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($10)
	*($7 + [344]) = ($10 | [1])
	*($7 + [352]) = $12
	*($7 + [348]) = $11
	
.LABEL $label$58
	CALL memcpy($12, [17686], $11)
	
.LABEL $label$57
	$10 = [0]
	*(($12 + $11)) = [0]
	$2 = *(*($7 + [308]))
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$64 }
	$12 = *([0] + [21604])
	
.LOOP $label$66:
	*((($7 + [112]) + ($11 = $10))) = *(($12 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$65 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$66 }
	
.LABEL $label$65
	*(($7 + [224])) = [0]
	*($7 + [216]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$63 }
	*($7 + [216]) = ($10 << [1])
	$12 = (($7 + [216]) | [1])
	goto $label$62 
	
.LABEL $label$64
	*(($7 + [224])) = [0]
	*($7 + [216]) = (int_64)0
	*($7 + [216]) = [0]
	$11 = (($7 + [216]) | [1])
	$10 = $11
	goto $label$61 
	
.LABEL $label$63
	$3 = (($10 + [16]) & [-16])
	$12 = CALL _Znwj($3)
	*($7 + [216]) = ($3 | [1])
	*($7 + [224]) = $12
	*($7 + [220]) = $10
	
.LABEL $label$62
	$3 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$67:
	*(($12 + $11)) = *((($7 + [112]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$3 != (int_32)$11) ){ goto $label$67 }
	$10 = ($12 + $10)
	$11 = (($7 + [216]) | [1])
	
.LABEL $label$61
	*($10) = [0]
	$10 = *($7 + [216])
	$12 = ($10 & [1])
	$11 = CALL $239(($7 + [344]), ( *($7 + [224]) ? $11 : $12 ), ( *($7 + [220]) ? uint_32($10 >> [1]) : $12 ))
	$10 = ($11 + [8])
	*((($7 + [112]) + [8])) = *($10)
	*($7 + [112]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	*((($7 + [200]) + [8])) = [0]
	*($7 + [200]) = (int_64)0
	$11 = CALL $261([18386])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$70 }
	*($7 + [200]) = ($11 << [1])
	$12 = (($7 + [200]) | [1])
	$10 = $12
	if ( $11 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($7 + [200]) = ($12 | [1])
	*($7 + [208]) = $10
	*($7 + [204]) = $11
	$12 = (($7 + [200]) | [1])
	
.LABEL $label$69
	CALL memcpy($10, [18386], $11)
	
.LABEL $label$68
	*(($10 + $11)) = [0]
	$11 = *($7 + [200])
	$10 = ($11 & [1])
	$11 = CALL $239(($7 + [112]), ( *($7 + [208]) ? $12 : $10 ), ( *($7 + [204]) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [136]) + [8])) = *($10)
	*($7 + [136]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	CALL $33($0, $1, ($7 + [136]))
	if ( (*($7 + [136]) & [1]) ){ goto $label$72 }
	if ( (*($7 + [200]) & [1]) ){ goto $label$71 }
	goto $label$39 
	
.LABEL $label$72
	CALL _ZdlPv(*($7 + [144]))
	if ( ((*($7 + [200]) & [1]) == 0) ){ goto $label$39 }
	
.LABEL $label$71
	CALL _ZdlPv(*(($7 + [208])))
	$11 = [1]
	if ( ((*($7 + [112]) & [1]) == 0) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$56
	$10 = (($11 + [16]) & [-16])
	$12 = CALL _Znwj($10)
	*($7 + [344]) = ($10 | [1])
	*($7 + [352]) = $12
	*($7 + [348]) = $11
	
.LABEL $label$55
	CALL memcpy($12, [17686], $11)
	
.LABEL $label$54
	$10 = [0]
	*(($12 + $11)) = [0]
	$2 = *(*($7 + [308]))
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$76 }
	$12 = *([0] + [21604])
	
.LOOP $label$78:
	*((($7 + [112]) + ($11 = $10))) = *(($12 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$77 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$78 }
	
.LABEL $label$77
	*(($7 + [224])) = [0]
	*($7 + [216]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$75 }
	*($7 + [216]) = ($10 << [1])
	$12 = (($7 + [216]) | [1])
	goto $label$74 
	
.LABEL $label$76
	*(($7 + [224])) = [0]
	*($7 + [216]) = (int_64)0
	*($7 + [216]) = [0]
	$11 = (($7 + [216]) | [1])
	$10 = $11
	goto $label$73 
	
.LABEL $label$75
	$3 = (($10 + [16]) & [-16])
	$12 = CALL _Znwj($3)
	*($7 + [216]) = ($3 | [1])
	*($7 + [224]) = $12
	*($7 + [220]) = $10
	
.LABEL $label$74
	$3 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$79:
	*(($12 + $11)) = *((($7 + [112]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$3 != (int_32)$11) ){ goto $label$79 }
	$10 = ($12 + $10)
	$11 = (($7 + [216]) | [1])
	
.LABEL $label$73
	*($10) = [0]
	$10 = *($7 + [216])
	$12 = ($10 & [1])
	$11 = CALL $239(($7 + [344]), ( *($7 + [224]) ? $11 : $12 ), ( *($7 + [220]) ? uint_32($10 >> [1]) : $12 ))
	$10 = ($11 + [8])
	*((($7 + [112]) + [8])) = *($10)
	*($7 + [112]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	*((($7 + [200]) + [8])) = [0]
	*($7 + [200]) = (int_64)0
	$11 = CALL $261([18287])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$82 }
	*($7 + [200]) = ($11 << [1])
	$12 = (($7 + [200]) | [1])
	$10 = $12
	if ( $11 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($7 + [200]) = ($12 | [1])
	*($7 + [208]) = $10
	*($7 + [204]) = $11
	$12 = (($7 + [200]) | [1])
	
.LABEL $label$81
	CALL memcpy($10, [18287], $11)
	
.LABEL $label$80
	*(($10 + $11)) = [0]
	$11 = *($7 + [200])
	$10 = ($11 & [1])
	$11 = CALL $239(($7 + [112]), ( *($7 + [208]) ? $12 : $10 ), ( *($7 + [204]) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [232]) + [8])) = *($10)
	*($7 + [232]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	CALL $33($0, $1, ($7 + [232]))
	if ( (*($7 + [232]) & [1]) ){ goto $label$84 }
	if ( (*($7 + [200]) & [1]) ){ goto $label$83 }
	goto $label$49 
	
.LABEL $label$84
	CALL _ZdlPv(*($7 + [240]))
	if ( ((*($7 + [200]) & [1]) == 0) ){ goto $label$49 }
	
.LABEL $label$83
	CALL _ZdlPv(*(($7 + [208])))
	$11 = [1]
	if ( ((*($7 + [112]) & [1]) == 0) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$53
	CALL $231(($7 + [344]))
	
.LABEL $label$52
	CALL $231(($7 + [200]))
	
.LABEL $label$51
	CALL $231(($7 + [344]))
	
.LABEL $label$50
	CALL $231(($7 + [200]))
	
.LABEL $label$49
	$11 = [1]
	if ( (*($7 + [112]) & [1]) ){ goto $label$47 }
	
.LABEL $label$48
	if ( (*($7 + [216]) & $11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	CALL _ZdlPv(*($7 + [120]))
	if ( ((*($7 + [216]) & $11) == 0) ){ goto $label$45 }
	
.LABEL $label$46
	CALL _ZdlPv(*(($7 + [224])))
	$11 = [1]
	if ( ((*($7 + [344]) & [1]) == 0) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$11 = [1]
	if ( (*($7 + [344]) & [1]) ){ goto $label$43 }
	
.LABEL $label$44
	$10 = *($6)
	if ( ($10 & $11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	CALL _ZdlPv(*($7 + [352]))
	$10 = *($6)
	if ( (($10 & $11) == 0) ){ goto $label$41 }
	
.LABEL $label$42
	$11 = *($6 + [4])
	$10 = *($6 + [8])
	goto $label$40 
	
.LABEL $label$41
	$11 = uint_32($10 >> [1])
	$10 = ($6 + [1])
	
.LABEL $label$40
	*($7 + [188]) = $11
	*($7 + [184]) = $10
	*($7 + [32]) = *($7 + [184])
	if ( (CALL is_account(*(CALL $22(($7 + [192]), ($7 + [32])))) == 0) ){ goto $label$88 }
	$11 = *($6)
	if ( ($11 & [1]) ){ goto $label$87 }
	$11 = uint_32($11 >> [1])
	$10 = ($6 + [1])
	goto $label$86 
	
.LABEL $label$88
	*($7 + [168]) = [17531]
	*($7 + [172]) = CALL $261([17531])
	*($7 + [24]) = *($7 + [168])
	CALL $22(($7 + [200]), ($7 + [24]))
	goto $label$85 
	
.LABEL $label$87
	$11 = *($6 + [4])
	$10 = *($6 + [8])
	
.LABEL $label$86
	*($7 + [180]) = $11
	*($7 + [176]) = $10
	*($7 + [16]) = *($7 + [176])
	CALL $22(($7 + [200]), ($7 + [16]))
	
.LABEL $label$85
	$2 = *($0)
	*($7 + [120]) = $5
	*($7 + [116]) = ($7 + [328])
	*($7 + [112]) = ($7 + [304])
	*($7 + [124]) = ($7 + [200])
	*($7 + [128]) = ($7 + [312])
	*($7 + [216]) = $2
	if ( ((int_64)*(($0 + [152])) == (int_64)CALL current_receiver()) ){ goto $label$89 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$89
	*($7 + [344]) = $8
	*($7 + [348]) = ($7 + [112])
	*($7 + [352]) = ($7 + [216])
	*(($11 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = [0]
	*($11 + [64]) = (int_64)0
	*($11 + [72]) = (int_64)0
	*($11 + [80]) = (int_64)0
	*($11 + [88]) = (int_64)0
	*($11 + [104]) = (int_64)0
	*($11 + [128]) = (int_64)0
	*($11 + [136 align=4]) = (int_64)0
	*($11 + [144]) = [0]
	*($11 + [148]) = $8
	CALL $43(($7 + [344]), $11)
	*($7 + [360]) = $11
	$2 = *($11)
	*($7 + [344]) = $2
	$12 = *($11 + [152])
	*($7 + [340]) = $12
	$3 = ($0 + [180])
	$10 = *($3)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [184]))) ){ goto $label$94 }
	*($10 + [8]) = $2
	*($10 + [16]) = $12
	*($7 + [360]) = [0]
	*($10) = $11
	*($3) = ($10 + [24])
	$11 = *($7 + [360])
	*($7 + [360]) = [0]
	if ( ($11 == 0) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	CALL $44(($0 + [176]), ($7 + [360]), ($7 + [344]), ($7 + [340]))
	$11 = *($7 + [360])
	*($7 + [360]) = [0]
	if ( $11 ){ goto $label$92 }
	
.LABEL $label$93
	if ( ($9 == 0) ){ goto $label$90 }
	goto $label$91 
	
.LABEL $label$92
	if ( ((*($11 + [136]) & [1]) == 0) ){ goto $label$95 }
	CALL _ZdlPv(*(($11 + [144])))
	
.LABEL $label$95
	CALL _ZdlPv($11)
	if ( ($9 == 0) ){ goto $label$90 }
	
.LABEL $label$91
	$2 = *($0)
	*($7 + [116]) = ($7 + [304])
	*($7 + [112]) = ($7 + [312])
	CALL $45($18, $9, $2, ($7 + [112]))
	
.LABEL $label$90
	$2 = *($7 + [304])
	$11 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $11) ){ goto $label$96 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$96
	$10 = CALL db_next_i64(*($11 + [124]), ($7 + [112]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$97 }
	CALL $10((CASTING uint_32)(uint_64 $2), $10)
	
.LABEL $label$97
	CALL $36($13, $11)
	CALL $46($0, *($7 + [320]))
	*(($7 + [160])) = [0]
	*($7 + [152]) = (int_64)0
	$2 = *($7 + [320])
	$11 = CALL $261([18326])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$98 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$101 }
	*($7 + [152]) = ($11 << [1])
	$10 = (($7 + [152]) | [1])
	if ( $11 ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$101
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($7 + [152]) = ($12 | [1])
	*($7 + [160]) = $10
	*($7 + [156]) = $11
	
.LABEL $label$100
	CALL memcpy($10, [18326], $11)
	
.LABEL $label$99
	*(($10 + $11)) = [0]
	CALL $47($0, $2, ($7 + [152]), [1])
	if ( ((*($7 + [152]) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*($7 + [160]))
	goto $label$32 
	
.LABEL $label$98
	CALL $231(($7 + [152]))
	
.LABEL $label$39
	$11 = [1]
	if ( (*($7 + [112]) & [1]) ){ goto $label$37 }
	
.LABEL $label$38
	if ( (*($7 + [216]) & $11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	CALL _ZdlPv(*($7 + [120]))
	if ( ((*($7 + [216]) & $11) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	CALL _ZdlPv(*(($7 + [224])))
	if ( (*($7 + [344]) & [1]) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	if ( ((*($7 + [344]) & [1]) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL _ZdlPv(*($7 + [352]))
	
.LABEL $label$33
	$2 = *($0)
	*($7 + [120]) = $5
	*($7 + [128]) = $6
	*($7 + [116]) = ($7 + [320])
	*($7 + [112]) = ($7 + [328])
	*($7 + [124]) = ($7 + [248])
	*($7 + [132]) = ($7 + [312])
	*($7 + [216]) = $2
	$10 = ($0 + [72])
	if ( ((int_64)*($0 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$102 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$102
	*($7 + [344]) = $10
	*($7 + [348]) = ($7 + [112])
	*($7 + [352]) = ($7 + [216])
	*(($11 = CALL _Znwj([136])) + [8]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = [0]
	*($11 + [72 align=4]) = (int_64)0
	*($11 + [80]) = [0]
	*($11 + [104]) = [0]
	*($11 + [112]) = (int_64)0
	*($11 + [120]) = $10
	CALL $48(($7 + [344]), $11)
	*($7 + [200]) = $11
	$2 = *($11 + [88])
	*($7 + [344]) = $2
	$12 = *($11 + [124])
	*($7 + [360]) = $12
	$3 = ($0 + [100])
	$10 = *($3)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [104]))) ){ goto $label$105 }
	*($10 + [8]) = $2
	*($10 + [16]) = $12
	*($7 + [200]) = [0]
	*($10) = $11
	*($3) = ($10 + [24])
	$11 = *($7 + [200])
	*($7 + [200]) = [0]
	if ( ($11 == 0) ){ goto $label$103 }
	goto $label$104 
	
.LABEL $label$105
	CALL $49(($0 + [96]), ($7 + [200]), ($7 + [344]), ($7 + [360]))
	$11 = *($7 + [200])
	*($7 + [200]) = [0]
	if ( ($11 == 0) ){ goto $label$103 }
	
.LABEL $label$104
	if ( ((*($11 + [72]) & [1]) == 0) ){ goto $label$106 }
	CALL _ZdlPv(*(($11 + [80])))
	
.LABEL $label$106
	CALL _ZdlPv($11)
	
.LABEL $label$103
	$2 = *($0)
	$11 = *($7 + [308])
	*($7 + [116]) = ($7 + [328])
	*($7 + [112]) = ($7 + [248])
	if ( $11 ){ goto $label$107 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$107
	CALL $50($13, $11, $2, ($7 + [112]))
	if ( ($9 == 0) ){ goto $label$108 }
	$2 = *($0)
	*($7 + [116]) = ($7 + [248])
	*($7 + [112]) = ($7 + [312])
	CALL $51($18, $9, $2, ($7 + [112]))
	
.LABEL $label$108
	$11 = CALL $232(($7 + [96]), $6)
	CALL $52($0, *($7 + [320]), $11)
	if ( ((*($11) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*($11 + [8]))
	
.LABEL $label$32
	$2 = *((($7 + [248]) + [8]))
	*((($7 + [80]) + [8])) = $2
	*(($7 + [8])) = $2
	$2 = *($7 + [248])
	*($7 + [80]) = $2
	*($7) = $2
	CALL $11($0, *($7 + [312]), $7, [2])
	$global$0 = ($7 + [368])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $47 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [160])
	$global$0 = $4
	$5 = CALL current_time()
	*(($4 + [124])) = (int_64)0
	*(($6 = ($4 + [140]))) = (int_64)0
	*(($4 + [148])) = (int_64)0
	*($4 + [108]) = [0]
	*($4 + [112]) = [0]
	*($4 + [116 align=4]) = (int_64)0
	*($4 + [132 align=4]) = (int_64)0
	*($4 + [96]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	$5 = *($0)
	*($4 + [64]) = [17468]
	*($4 + [68]) = CALL $261([17468])
	*($4 + [8]) = *($4 + [64])
	$7 = CALL $22(($4 + [72]), ($4 + [8]))
	*($4 + [80]) = $5
	*($4 + [88]) = *($7)
	*($4 + [48]) = [19824]
	*($4 + [52]) = CALL $261([19824])
	*($4) = *($4 + [48])
	$7 = CALL $22(($4 + [56]), $4)
	*($4 + [16]) = $1
	CALL $232(($4 + [24]), $2)
	*($4 + [36]) = [0]
	$2 = (($4 + [96]) + [40])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$3 }
	CALL $56($8, ($4 + [80]), *($0), *($7), ($4 + [16]))
	*($2) = (*($2) + [40])
	if ( (*($4 + [24]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $57(($4 + [132]), ($4 + [80]), $0, $7, ($4 + [16]))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($4 + [32])))
	
.LABEL $label$1
	$3 = ($3 + [-1])
	if ( ((uint_32)($3 & [255]) > (uint_32)[3]) ){ goto $label$4 }
	*(($4 + [116])) = *(((int_32(($3 << [24]) >> [24]) << [2]) + [22712]))
	
.LABEL $label$4
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $1
	CALL cancel_deferred(($4 + [16]))
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $1
	CALL $58(($4 + [96]), ($4 + [16]), *($0), [0])
	CALL $59(($4 + [96]))
	$global$0 = ($4 + [160])
}

void .FUNC $46 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [224])
	$global$0 = $2
	*($2 + [176]) = [20590]
	*($2 + [180]) = CALL $261([20590])
	*($2 + [24]) = *($2 + [176])
	$3 = CALL $22(($2 + [184]), ($2 + [24]))
	if ( (CALL is_account($1) == 0) ){ goto $label$1 }
	if ( (CALL is_account(*($3)) == 0) ){ goto $label$1 }
	$4 = CALL $261([16939])
	if ( ($4 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [21951])
	goto $label$4 
	
.LABEL $label$5
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($4 + [16938]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$7
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$6 }
	$7 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$2 
	
.LABEL $label$3
	$7 = (int_64)4
	
.LABEL $label$2
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$5 = $8
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$5 = $8
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $6 ){ goto $label$12 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [21690])
	
.LABEL $label$8
	$4 = CALL $261([16939])
	if ( ($4 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [21951])
	goto $label$15 
	
.LABEL $label$16
	if ( ($4 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$5 = (int_64)0
	
.LOOP $label$17:
	$6 = *(($4 + [16938]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$18
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$17 }
	$10 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$13 
	
.LABEL $label$14
	$10 = (int_64)4
	
.LABEL $label$13
	$5 = (uint_64)$10 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$5 = $8
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$5 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $6 ){ goto $label$23 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [21690])
	
.LABEL $label$19
	$5 = *($3)
	*($2 + [120]) = [17468]
	*($2 + [124]) = CALL $261([17468])
	*($2 + [16]) = *($2 + [120])
	$8 = *(CALL $22(($2 + [128]), ($2 + [16])))
	*($2 + [104]) = [19976]
	*($2 + [108]) = CALL $261([19976])
	*($2 + [8]) = *($2 + [104])
	$4 = CALL $22(($2 + [112]), ($2 + [8]))
	*($2 + [88]) = [21710]
	*($2 + [92]) = CALL $261([21710])
	*($2) = *($2 + [88])
	$6 = CALL $22(($2 + [96]), $2)
	*((($2 + [32]) + [24])) = $10
	*(($2 + [72])) = $7
	*($2 + [40]) = $1
	*($2 + [48]) = (int_64)1000
	*($2 + [64]) = (int_64)9000
	*($2 + [80]) = [0]
	*($2 + [32]) = *($3)
	*($2 + [136]) = *($4)
	*($2 + [144]) = *($6)
	*(($4 = CALL _Znwj([16]))) = $5
	*($4 + [8]) = $8
	*(($2 + [172])) = [0]
	$6 = ($4 + [16])
	*((($2 + [136]) + [24])) = $6
	*(($2 + [156])) = $6
	*($2 + [152]) = $4
	*($2 + [164 align=4]) = (int_64)0
	CALL $2(($2 + [164]), [49])
	$9 = ($2 + [168])
	$4 = *($9)
	$6 = *($2 + [164])
	*($2 + [196]) = $6
	*($2 + [192]) = $6
	*($2 + [200]) = $4
	*($2 + [208]) = ($2 + [192])
	*($2 + [216]) = ($2 + [32])
	CALL $55(($2 + [216]), ($2 + [208]))
	CALL $24(($2 + [136]))
	$4 = *($2 + [164])
	if ( ($4 == 0) ){ goto $label$24 }
	*($9) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$24
	$4 = *($2 + [152])
	if ( ($4 == 0) ){ goto $label$1 }
	*(($2 + [156])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$1
	$global$0 = ($2 + [224])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)1)
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)1)
	$7 = *($3)
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *(*($3 + [4]) + [4])
	if ( ((int_64)*(($7 + [40])) == (int_64)*(($1 + [96]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$4
	$9 = ((int_64)*($1 + [88]) + (int_64)*($7 + [32]))
	*($1 + [88]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [88]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$6
	$3 = *(*(($3 + [4])) + [4])
	if ( ((int_64)*(($3 + [40])) == (int_64)*(($1 + [152]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [144]) + (int_64)*($3 + [32]))
	*($1 + [144]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [144]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [112])
	$8 = ($1 + [80])
	$10 = ($1 + [8])
	$3 = *($1 + [280])
	$11 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($11 + [273])
	$9 = (CASTING uint_64)(uint_32 $11)
	$11 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $10
	*($5 + [60]) = $8
	*($5 + [72]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $11
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [144])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $222 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$8 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($8) + $0))
	
.LABEL $label$1
	$4 = CALL $232($6, $4)
	$3 = CALL $232(($6 + [16]), $3)
	$2 = CALL $232(($6 + [32]), $2)
	CALL void $8((int_32 $1), (int_64 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 $0))
	if ( (*($4) & [1]) ){ goto $label$6 }
	if ( (*($3) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($2) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($6 + [48])
	return 
	
.LABEL $label$2
	CALL _ZdlPv(*($2 + [8]))
	$global$0 = ($6 + [48])
}

void .FUNC $267 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [16856])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [16664]
	$3 = (((int_32)$1 * (int_32)[12]) + [16664])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $234 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $235($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $233 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $249 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $232($2, ($1 + [16]))
	$6 = *($1 + [28])
	$1 = *($0 + [4])
	$7 = *($1 + [4])
	$0 = (*($0) + int_32($7 >> [1]))
	$1 = *($1)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$7 = CALL $232(($2 + [16]), $5)
	CALL void $0((int_32 $4), (int_64 $3), (int_64 $7), (int_32 ($6 & [255])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $163(*($1), ($0 + [16]))
	$0 = ($0 + [28])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $232($2, ($1 + [8]))
	$5 = *($1 + [20])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $232(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $6), (int_32 ($5 & [255])), (int_32 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $190($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $236($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $236($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $231($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $232($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $232(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $163(*($1), ($4 + [16]))
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [256])
	$global$0 = $2
	*(($3 = (($2 + [112]) + [8]))) = *(($1 + [24]))
	*(($4 = (($2 + [72]) + [8]))) = *(($1 + [48]))
	*(($5 = (($2 + [72]) + [16]))) = *(($1 + [56]))
	*(($6 = (($2 + [72]) + [24]))) = *(($1 + [64]))
	*(($7 = (($2 + [72]) + [32]))) = *(($1 + [72]))
	*($2 + [112]) = *($1 + [16])
	*($2 + [72]) = *($1 + [40 align=4])
	$8 = *($1 + [8])
	$9 = *($1)
	$10 = *($1 + [32])
	$1 = CALL $232(($2 + [56]), ($1 + [80]))
	*((($2 + [144]) + [32])) = *($7)
	*((($2 + [144]) + [24])) = *($6)
	*((($2 + [144]) + [16])) = *($5)
	*((($2 + [144]) + [8])) = *($4)
	*((($2 + [128]) + [8])) = *($3)
	*($2 + [144]) = *($2 + [72])
	*($2 + [128]) = *($2 + [112])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($5 = (($2 + [240]) + [8]))) = *((($2 + [128]) + [8]))
	*(($6 = (($2 + [200]) + [8]))) = *((($2 + [144]) + [8]))
	*(($7 = (($2 + [200]) + [16]))) = *((($2 + [144]) + [16]))
	*(($11 = (($2 + [200]) + [24]))) = *((($2 + [144]) + [24]))
	*(($12 = (($2 + [200]) + [32]))) = *((($2 + [144]) + [32]))
	*($2 + [240]) = *($2 + [128])
	*($2 + [200]) = *($2 + [144])
	$4 = CALL $232(($2 + [184]), $1)
	*((($2 + [40]) + [8])) = *($5)
	*(($2 + [8])) = *($6)
	*(($2 + [16])) = *($7)
	*(($2 + [24])) = *($11)
	*(($2 + [32])) = *($12)
	*($2 + [40]) = *($2 + [240])
	*($2) = *($2 + [200])
	CALL void $3((int_32 $9), (int_64 $8), (int_64 ($2 + [40])), (int_32 $10), (int_64 $2), (int_32 $4), (int_32 $0))
	if ( (*($2 + [184]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [256])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [256])
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $244 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $260(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $232($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$6 = CALL $232(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $163(*($1), ($0 + [24]))
}

void .FUNC $245 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $30($1, $0, [17762])
	CALL $248()
	(unreachable)
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	*(($3 = (($2 + [48]) + [8]))) = *(($1 + [16]))
	*($2 + [48]) = *($1 + [8])
	$4 = *($1)
	$5 = CALL $232(($2 + [32]), ($1 + [24]))
	$1 = CALL $232(($2 + [16]), ($1 + [36]))
	*((($2 + [64]) + [8])) = *($3)
	*($2 + [64]) = *($2 + [48])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [112]) + [8]))) = *((($2 + [64]) + [8]))
	*($2 + [112]) = *($2 + [64])
	$6 = CALL $232(($2 + [96]), $5)
	$8 = CALL $232(($2 + [80]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [112])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $6), (int_32 $8), (int_32 $0))
	if ( (*($2 + [80]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [96]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($8 + [8]))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($6 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($5) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($5) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [128])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [128])
}

int_32 .FUNC $242 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $243 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $259(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $1(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $2($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $3(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $240 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $235($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [72]) = CALL current_time()
	*($1 + [80]) = (*($1 + [80]) + [1])
	$7 = *($3)
	*(($1 + [96])) = *(($7 + [8]))
	*($1 + [88]) = *($7)
	*($1 + [104]) = *(*($3 + [4]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$3
	$7 = ($1 + [88])
	$8 = ($1 + [80])
	$9 = ($1 + [72])
	$3 = *($1 + [48])
	$10 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [100])
	$11 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [48])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $264($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [48]) = $10
	*($5 + [56]) = $9
	*($5 + [60]) = $8
	*($5 + [64]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [52]) = ($1 + [64])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	CALL $196(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [80])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)1)
	$7 = *($3)
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$4
	$9 = ((int_64)*($1 + [48]) + (int_64)*($7))
	*($1 + [48]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$6
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [152]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [144]) + (int_64)*($3))
	*($1 + [144]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [144]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [112])
	$8 = ($1 + [16])
	$3 = *($1 + [280])
	$10 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [273])
	$9 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $8
	*($5 + [72]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $10
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $52 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = CALL current_time()
	*(($3 + [124])) = (int_64)0
	*(($3 + [140])) = (int_64)0
	*(($3 + [148])) = (int_64)0
	*($3 + [108]) = [0]
	*($3 + [112]) = [0]
	*($3 + [116 align=4]) = (int_64)0
	*($3 + [132 align=4]) = (int_64)0
	*($3 + [96]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	$4 = *($0)
	*($3 + [64]) = [17468]
	*($3 + [68]) = CALL $261([17468])
	*($3 + [8]) = *($3 + [64])
	$5 = CALL $22(($3 + [72]), ($3 + [8]))
	*($3 + [80]) = $4
	*($3 + [88]) = *($5)
	*($3 + [48]) = [19701]
	*($3 + [52]) = CALL $261([19701])
	*($3) = *($3 + [48])
	$5 = CALL $22(($3 + [56]), $3)
	*($3 + [16]) = $1
	CALL $232(($3 + [24]), $2)
	*($3 + [36]) = [0]
	CALL $57(($3 + [132]), ($3 + [80]), $0, $5, ($3 + [16]))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [32])))
	
.LABEL $label$1
	*(($3 + [116])) = [86400]
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = $1
	CALL cancel_deferred(($3 + [16]))
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = $1
	CALL $58(($3 + [96]), ($3 + [16]), *($0), [1])
	CALL $59(($3 + [96]))
	$global$0 = ($3 + [160])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[40])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[40])
	if ( ((uint_32)$7 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[40]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[40])))) = *($1)
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$4 = ($4 + [40])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$9 = *($1)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	$3 = *($9)
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$7 = ($9 + [4])
	if ( ((int_32)(*($5) - $4) > (int_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$7
	CALL memcpy($4, $7, [33])
	$4 = (*($6) + [33])
	*($6) = $4
	$9 = ($9 + [40])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$1 = *($1)
	*($2 + [8]) = *($4 + [48])
	$4 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$4 = *(($1 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [8])
	$1 = ( *(($4 + [12])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [12])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $2($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $91(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$5 = CALL $56($6, $1, *($2), *($3), $4)
	$10 = ($5 + [40])
	$8 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	$11 = ($8 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$5 = ($7 + $1)
	*((($8 = ($6 + $1)) + [-32])) = *(($5 + [-32]))
	*(($8 + [-40])) = *(($5 + [-40]))
	*(($2 = ($8 + [-24]))) = (int_64)0
	*(($3 = ($8 + [-16]))) = [0]
	$4 = ($5 + [-24])
	*($2) = *($4)
	$2 = ($5 + [-16])
	*($3) = *($2)
	*($2) = [0]
	*(($2 = ($8 + [-12]))) = (int_64)0
	*(($8 = ($8 + [-4]))) = [0]
	$3 = ($5 + [-12])
	*($2) = *($3)
	*($4) = (int_64)0
	$5 = ($5 + [-4])
	*($8) = *($5)
	*($5) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$5 = ($6 + $1)
	$8 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $8
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($8 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($8 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = ($8 + [-40])
	$1 = *(($8 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [-20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_64 .FUNC $247 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $261([17179])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [17179], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $252())
	*(CALL $252()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$7 = CALL $258($4, ($3 + [12]), $2)
	$0 = CALL $252()
	$5 = *($0)
	*($0) = $6
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($3 + [12])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $245($3)
	
.LABEL $label$1
	CALL $246($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $232(($2 + [16]), ($1 + [8]))
	$5 = *($1 + [20])
	$1 = CALL $232($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$5 = CALL $232(($2 + [32]), $1)
	$6 = CALL $232(($2 + [48]), $4)
	CALL void $7((int_32 $3), (int_64 $6), (int_32 ($5 & [255])), (int_32 $5), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($6 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($4) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($4) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

int_32 .FUNC $152 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [576])
	$global$0 = $3
	*(($4 = $3) + [520]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [488])) = (int_64)0
	*(($4 + [504])) = (int_64)0
	*((($4 + [472]) + [40])) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [496]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [560]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $174(($4 + [24]), ($4 + [560]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [528]) + [8])) = $3
	*(($6 = (($4 + [544]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [544]) = $7
	*($4 + [528]) = $7
	$3 = *($6)
	*((($4 + [560]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [544])
	*($4 + [40]) = $1
	*($4 + [560]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [564]) = ($4 + [520])
	*($4 + [560]) = ($4 + [24])
	CALL $175(($4 + [560]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [508]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [516])))
	
.LABEL $label$5
	if ( ((*($4 + [496]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [504])))
	
.LABEL $label$6
	$global$0 = ($4 + [576])
	return [1]
}

int_32 .FUNC $153 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [576])
	$global$0 = $3
	*(($4 = $3) + [520]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [472]) + [24])) = (int_64)0
	*((($4 + [472]) + [40])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [560]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $176(($4 + [24]), ($4 + [560]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [528]) + [8])) = $3
	*(($6 = (($4 + [544]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [544]) = $7
	*($4 + [528]) = $7
	$3 = *($6)
	*((($4 + [560]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [544])
	*($4 + [40]) = $1
	*($4 + [560]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [564]) = ($4 + [520])
	*($4 + [560]) = ($4 + [24])
	CALL $177(($4 + [560]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [504]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [512])))
	
.LABEL $label$5
	$global$0 = ($4 + [576])
	return [1]
}

int_32 .FUNC $150 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [560])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [480])) = [0]
	*(($4 + [496])) = [0]
	*($4 + [464]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [484]) = [0]
	*($4 + [488]) = (int_64)0
	*($4 + [452]) = $2
	*($4 + [448]) = $2
	*($4 + [456]) = ($2 + $5)
	*($4 + [544]) = ($4 + [448])
	*($4 + [16]) = ($4 + [464])
	CALL $172(($4 + [16]), ($4 + [544]))
	*(($3 = ($4 + [8]))) = *($4 + [456])
	*($4) = *($4 + [448])
	$3 = *($3)
	*((($4 + [512]) + [8])) = $3
	*(($6 = (($4 + [528]) + [8]))) = $3
	$7 = *($4)
	*($4 + [528]) = $7
	*($4 + [512]) = $7
	$3 = *($6)
	*((($4 + [544]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [528])
	*($4 + [32]) = $1
	*($4 + [544]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [124])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [176])) = $0
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*(($4 + [432])) = (int_64)0
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [444])) = [0]
	*(($4 + [440])) = [0]
	*($4 + [548]) = ($4 + [504])
	*($4 + [544]) = ($4 + [16])
	CALL $173(($4 + [544]), ($4 + [464]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [16]))
	if ( ((*($4 + [488]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [496])))
	
.LABEL $label$5
	if ( ((*($4 + [472]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [480])))
	
.LABEL $label$6
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $151 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [488])) = [0]
	*($4 + [472]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($4 + [460])
	
.LABEL $label$4
	CALL memcpy(($4 + [472]), $3, [8])
	*($4 + [460]) = ($3 + [8])
	$8 = (($4 + [472]) + [8])
	CALL $163(($4 + [456]), $8)
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [456]) + [8]))
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [496]) + [8])) = $3
	*(($9 = (($4 + [512]) + [8]))) = $3
	$10 = *($4 + [8])
	*($4 + [512]) = $10
	*($4 + [496]) = $10
	$3 = *($9)
	*((($4 + [528]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [512])
	*($4 + [40]) = $1
	*($4 + [528]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [472])
	$8 = CALL $232(($4 + [512]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $232(($4 + [528]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [528]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [512]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4 + [512]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $267($2)
	
.LABEL $label$6
	CALL $156(($4 + [24]))
	if ( ((*($4 + [480]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($4 + [488])))
	
.LABEL $label$11
	$global$0 = ($4 + [544])
	return [1]
}

int_32 .FUNC $156 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [416]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [420])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [120])))
	
.LABEL $label$6
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [416]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [376]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [380])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((*($4 + [280]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($4 + [288])))
	
.LABEL $label$12
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [376]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$1 = *(($0 + [336]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($0 + [340])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL _ZdlPv($4)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($0 + [336]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $1
	
.LABEL $label$14
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$13
	$1 = *(($0 + [296]))
	if ( ($1 == 0) ){ goto $label$18 }
	$2 = ($0 + [300])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	CALL _ZdlPv($4)
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$21 }
	$3 = *(($0 + [296]))
	goto $label$19 
	
.LABEL $label$20
	$3 = $1
	
.LABEL $label$19
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$18
	CALL $219(($0 + [256]))
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$23 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$27 }
	CALL _ZdlPv($4)
	
.LABEL $label$27
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$26 }
	$3 = *(($0 + [216]))
	goto $label$24 
	
.LABEL $label$25
	$3 = $1
	
.LABEL $label$24
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$23
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$28 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$32 }
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*(($4 + [144])))
	
.LABEL $label$33
	CALL _ZdlPv($4)
	
.LABEL $label$32
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$31 }
	$3 = *(($0 + [176]))
	goto $label$29 
	
.LABEL $label$30
	$3 = $1
	
.LABEL $label$29
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$28
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$34 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$36 }
	
.LOOP $label$37:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$38 }
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*(($4 + [80])))
	
.LABEL $label$39
	CALL _ZdlPv($4)
	
.LABEL $label$38
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$37 }
	$3 = *(($0 + [136]))
	goto $label$35 
	
.LABEL $label$36
	$3 = $1
	
.LABEL $label$35
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$34
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$40 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$42 }
	
.LOOP $label$43:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$44 }
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$45 }
	CALL _ZdlPv(*(($4 + [80])))
	
.LABEL $label$45
	CALL _ZdlPv($4)
	
.LABEL $label$44
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$43 }
	$3 = *(($0 + [96]))
	goto $label$41 
	
.LABEL $label$42
	$3 = $1
	
.LABEL $label$41
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$40
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$46 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$50 }
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*(($4 + [56])))
	
.LABEL $label$51
	CALL _ZdlPv($4)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$49 }
	$3 = *(($0 + [56]))
	goto $label$47 
	
.LABEL $label$48
	$3 = $1
	
.LABEL $label$47
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$46
	return $0
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $163(*($1), ($0 + [20]))
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $220(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [160])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [8]))) = *(($1 + [24]))
	*(($4 = (($2 + [48]) + [8]))) = *(($1 + [40]))
	*($2 + [64]) = *($1 + [16])
	*($2 + [48]) = *($1 + [32])
	$5 = *($1 + [8])
	$6 = *($1)
	$7 = *($1 + [48])
	$8 = CALL $232(($2 + [32]), ($1 + [56]))
	$9 = *($1 + [68])
	*((($2 + [96]) + [8])) = *($4)
	*((($2 + [80]) + [8])) = *($3)
	*($2 + [96]) = *($2 + [48])
	*($2 + [80]) = *($2 + [64])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($2 + [144]) + [8]))) = *((($2 + [80]) + [8]))
	*(($10 = (($2 + [128]) + [8]))) = *((($2 + [96]) + [8]))
	*($2 + [144]) = *($2 + [80])
	*($2 + [128]) = *($2 + [96])
	$3 = CALL $232(($2 + [112]), $8)
	*((($2 + [16]) + [8])) = *($4)
	*(($2 + [8])) = *($10)
	*($2 + [16]) = *($2 + [144])
	*($2) = *($2 + [128])
	CALL void $0((int_32 $6), (int_64 $5), (int_64 ($2 + [16])), (int_32 $2), (int_32 $7), (int_64 $3), (int_32 ($9 & [255])), (int_32 $1))
	if ( (*($2 + [112]) & [1]) ){ goto $label$4 }
	if ( (*($8) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($8 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $232($2, ($1 + [20]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$3 = CALL $232(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 ($3 & [255])), (int_32 $3), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2) = $4
	CALL $221($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	*($1) = *(*(*($0 + [4])))
	$5 = ($1 + [280])
	CALL $237($5, [21183])
	$6 = *($1 + [280])
	$7 = ( *(($1 + [284])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($7 + [273])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($6)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $6)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	*($3 + [48]) = ($1 + [32])
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = ($1 + [64])
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [104])
	*($3 + [72]) = ($1 + [112])
	*($3 + [76]) = ($1 + [120])
	*($3 + [80]) = ($1 + [128])
	*($3 + [84]) = ($1 + [144])
	*($3 + [88]) = ($1 + [160])
	*($3 + [92]) = ($1 + [176])
	*($3 + [96]) = ($1 + [184])
	*($3 + [100]) = ($1 + [200])
	*($3 + [104]) = ($1 + [216])
	*($3 + [112]) = ($1 + [248])
	*($3 + [108]) = ($1 + [232])
	*($3 + [116]) = ($1 + [264])
	*($3 + [120]) = ($1 + [272])
	*($3 + [124]) = $5
	CALL $181(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [296]) = CALL db_store_i64(*($4 + [8]), (int_64)-4157493845350678528, *(*($0 + [8])), $8, $2, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($4 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $267($2)
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [128])
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$2 = *(*($0))
	if ( ((int_32)$2 == (int_32)[4]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	$2 = *($0 + [4])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$3
	$3 = ((int_64)*($1 + [32]) + (int_64)*($2))
	*($1 + [32]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [21855])
	$3 = *(($1 + [32]))
	
.LABEL $label$4
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$1 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$1
	if ( ((int_32)*(*($0)) != (int_32)[2]) ){ goto $label$5 }
	$2 = *($0 + [4])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$6 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$6
	$3 = ((int_64)*($1 + [48]) + (int_64)*($2))
	*($1 + [48]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [21855])
	$3 = *(($1 + [48]))
	
.LABEL $label$7
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$5
	if ( ((uint_32)((*(*($0)) + [-3]) & [255]) > (uint_32)[1]) ){ goto $label$8 }
	$4 = *($0 + [4])
	$2 = *(*($0 + [8]) + [4])
	if ( ((int_64)*(($2 + [56])) == (int_64)*($4 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$9
	if ( ((int_64)*($2 + [48]) < (int_64)*($4)) ){ goto $label$8 }
	$2 = *(($0 + [4]))
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$10 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$10
	$3 = (int_64)
	*($1 + [48]) = $3(*($1 + [48]) - *($2)))
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [21769])
	$3 = *(($1 + [48]))
	
.LABEL $label$11
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$8
	if ( ((int_32)(*(*($0)) | [2]) != (int_32)[7]) ){ goto $label$12 }
	$2 = *($0 + [4])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [104]))) ){ goto $label$13 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$13
	$3 = ((int_64)*($1 + [96]) + (int_64)*($2))
	*($1 + [96]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [21855])
	$3 = *(($1 + [96]))
	
.LABEL $label$14
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$12
	if ( ((int_32)*(*($0)) != (int_32)[6]) ){ goto $label$15 }
	$2 = *($0 + [4])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [88]))) ){ goto $label$16 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$16
	$3 = ((int_64)*($1 + [80]) + (int_64)*($2))
	*($1 + [80]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [21855])
	$3 = *(($1 + [80]))
	
.LABEL $label$17
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$15 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$15
	if ( ((int_32)*(*($0)) != (int_32)[7]) ){ goto $label$18 }
	$4 = *($0 + [4])
	$2 = *(*($0 + [8]) + [4])
	if ( ((int_64)*(($2 + [88])) == (int_64)*($4 + [8])) ){ goto $label$19 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$19
	if ( ((int_64)*($2 + [80]) < (int_64)*($4)) ){ goto $label$18 }
	$0 = *(($0 + [4]))
	if ( ((int_64)*($0 + [8]) == (int_64)*(($1 + [88]))) ){ goto $label$20 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$20
	$3 = (int_64)
	*($1 + [80]) = $3(*($1 + [80]) - *($0)))
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$21 }
	CALL eosio_assert([0], [21769])
	$3 = *(($1 + [80]))
	
.LABEL $label$21
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$18
	*($1 + [144]) = CALL current_time()
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)-1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [128]) != (int_64)*($8)) ){ goto $label$3 }
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [72])) == (int_64)*(($1 + [96]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [88]) = $9(*($1 + [88]) - *($3 + [64])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [88]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$7 = ($1 + [80])
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $264($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [60]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [128])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [88])) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3 + [80])))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [21769])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [21791])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [21388])
	
.LABEL $label$4
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$7 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $264($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [128])
}

void .FUNC $248 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $267($0)
	
.LABEL $label$1
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)-1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [112]) != (int_64)*($8)) ){ goto $label$3 }
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [48]) = $9(*($1 + [48]) - *($3 + [16])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$7 = ($1 + [16])
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $264($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [128])
}

void .FUNC $64 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$4 = ($global$0 - [240])
	$global$0 = $4
	*($4 + [232]) = $2
	CALL $6($0)
	CALL require_auth($1)
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$2 }
	$3 = uint_32($5 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($3 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($3 <= [257]), [17266])
	$6 = ($0 + [152])
	$5 = *(($0 + [180]))
	$7 = *(($0 + [176]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$6:
	$3 = ($5 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$5 }
	$5 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$4 }
	if ( ((int_32)*($8 + [148]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$3 = CALL db_find_i64(*($6), *(($0 + [160])), (int_64)6609776272782393344, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $9($6, $3)
	if ( ((int_32)*($8 + [148]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	CALL eosio_assert(($8 == 0), [17300])
	$9 = ($0 + [32])
	$5 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$10:
	$3 = ($5 + [-24])
	$7 = *($3)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$9 }
	$5 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$8 }
	if ( ((int_32)*($7 + [120]) == (int_32)$9) ){ goto $label$7 }
	CALL eosio_assert([0], [22260])
	goto $label$7 
	
.LABEL $label$8
	$7 = [0]
	$3 = CALL db_find_i64(*($9), *(($0 + [40])), (int_64)3607749778735104000, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $10($9, $3)
	if ( ((int_32)*($7 + [120]) == (int_32)$9) ){ goto $label$7 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [18471])
	CALL eosio_assert(((int_64)*($7 + [104]) != (int_64)$1), [18635])
	$10 = ($0 + [72])
	*($4 + [224]) = $10
	CALL $26(($4 + [216]), ($4 + [224]), ($4 + [232]))
	CALL eosio_assert(((int_32)*($4 + [220]) != (int_32)[0]), [18555])
	$2 = (int_64)0
	$3 = *($4 + [220])
	if ( ($3 == 0) ){ goto $label$11 }
	$2 = (int_64)0
	
.LOOP $label$12:
	if ( ((int_64)*($3 + [8]) != (int_64)*($4 + [232])) ){ goto $label$11 }
	if ( ((int_64)*($3) != (int_64)$1) ){ goto $label$13 }
	$2 = *($3 + [88])
	
.LABEL $label$13
	CALL $28(($4 + [216]))
	$3 = *($4 + [220])
	if ( $3 ){ goto $label$12 }
	
.LABEL $label$11
	CALL eosio_assert(((int_64)$2 != (int_64)0), [18595])
	$5 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$17:
	$3 = ($5 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [88]) == (int_64)$2) ){ goto $label$16 }
	$5 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$15 }
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$14 }
	CALL eosio_assert([0], [22260])
	goto $label$14 
	
.LABEL $label$15
	$3 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)4292657617207033856, $2)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$18 }
	$8 = CALL $29($10, $3)
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$14 }
	CALL eosio_assert([0], [22260])
	goto $label$14 
	
.LABEL $label$18
	$8 = [0]
	
.LABEL $label$14
	*($4 + [212]) = $8
	*($4 + [208]) = $10
	$11 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17532])
	CALL eosio_assert(((int_64)*($7 + [112]) == (int_64)*($8 + [112])), [18669])
	$12 = ($0 + [352])
	$2 = *($0)
	$5 = *(($0 + [380]))
	$8 = *(($0 + [376]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$22:
	$3 = ($5 + [-24])
	$6 = *($3)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$21 }
	$5 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$20 }
	if ( ((int_32)*($6 + [292]) == (int_32)$12) ){ goto $label$23 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$23
	$11 = $6
	goto $label$19 
	
.LABEL $label$20
	$3 = CALL db_find_i64(*($12), *(($0 + [360])), (int_64)-4157493845350678528, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$19 }
	$11 = CALL $15($12, $3)
	if ( ((int_32)*($11 + [292]) == (int_32)$12) ){ goto $label$19 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$19
	$2 = *($0)
	*($4 + [136]) = [17468]
	*($4 + [140]) = CALL $261([17468])
	*($4 + [32]) = *($4 + [136])
	$3 = CALL $22(($4 + [144]), ($4 + [32]))
	*($4 + [152]) = $2
	*($4 + [160]) = *($3)
	$8 = *($4 + [212])
	$2 = *($8 + [112])
	*($4 + [120]) = [17475]
	*($4 + [124]) = CALL $261([17475])
	*($4 + [24]) = *($4 + [120])
	$13 = CALL $22(($4 + [128]), ($4 + [24]))
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$3 = CALL $261([18703])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$24 }
	$6 = ($8 + [16])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$27 }
	*($4 + [56]) = ($3 << [1])
	$5 = (($4 + [56]) | [1])
	if ( $3 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$14 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($14)
	*($4 + [56]) = ($14 | [1])
	*($4 + [64]) = $5
	*($4 + [60]) = $3
	
.LABEL $label$26
	CALL memcpy($5, [18703], $3)
	
.LABEL $label$25
	*(($5 + $3)) = [0]
	$1 = *(($6 + [8]))
	$15 = *($6)
	$16 = *($8)
	$3 = (($4 + [56]) + [8])
	*(($4 + [112])) = *($3)
	*(($4 + [96])) = $1
	*($3) = [0]
	*($4 + [72]) = *($0)
	$1 = *($4 + [56])
	*($4 + [56]) = (int_64)0
	*($4 + [80]) = $16
	*($4 + [104]) = $1
	*($4 + [88]) = $15
	$3 = CALL $23(($4 + [168]), ($4 + [152]), $2, *($13), ($4 + [72]))
	CALL $24($3)
	$5 = *($3 + [28])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($3 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$28
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$29 }
	*(($3 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$29
	if ( ((*(($4 + [104])) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($4 + [112])))
	
.LABEL $label$30
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*(($4 + [64])))
	
.LABEL $label$31
	$3 = *($4 + [212])
	$1 = *($3 + [112])
	$2 = *($3 + [16])
	$15 = *(($3 + [24]))
	*((($4 + [8]) + [8])) = $15
	*((($4 + [40]) + [8])) = $15
	*($4 + [40]) = $2
	*($4 + [8]) = $2
	CALL $11($0, $1, ($4 + [8]), [3])
	if ( ($11 == 0) ){ goto $label$32 }
	$2 = *($0)
	*($4 + [72]) = ($4 + [208])
	CALL $65($12, $11, $2, ($4 + [72]))
	
.LABEL $label$32
	$2 = *($4 + [208])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$33 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$33
	$3 = [0]
	$8 = CALL db_next_i64(*($5 + [124]), ($4 + [72]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$34 }
	CALL $29((CASTING uint_32)(uint_64 $2), $8)
	
.LABEL $label$34
	CALL $32($10, $5)
	*($4 + [72]) = (int_64)0
	$2 = *(($7 + [40]))
	*($4 + [80]) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$2 = $1
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$2 = $1
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$39 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [21690])
	
.LABEL $label$35
	*($4 + [168]) = *($4 + [232])
	*($4 + [56]) = $10
	CALL $26(($4 + [152]), ($4 + [56]), ($4 + [168]))
	$3 = *($4 + [156])
	if ( ($3 == 0) ){ goto $label$41 }
	$2 = (int_64)0
	
.LOOP $label$42:
	if ( ((int_64)*($3 + [8]) != (int_64)*($4 + [168])) ){ goto $label$40 }
	$1 = *($3 + [16])
	$2 = ( $1 ? $2 : (uint_64)($2 <= $1) )
	CALL $28(($4 + [152]))
	$3 = *($4 + [156])
	if ( $3 ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$2 = (int_64)0
	
.LABEL $label$40
	*($4 + [72]) = $2
	$2 = *($0)
	*($4 + [172]) = $0
	*($4 + [168]) = ($4 + [72])
	*($4 + [176]) = ($4 + [232])
	if ( $7 ){ goto $label$43 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$43
	CALL $66($9, $7, $2, ($4 + [168]))
	$global$0 = ($4 + [240])
	return (unreachable)
	
.LABEL $label$24
	CALL $231(($4 + [56]))
}

void .FUNC $67 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [528])
	$global$0 = $4
	CALL $6($0)
	CALL eosio_assert(($3 <= [2]), [17069])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$4 }
	CALL require_auth($1)
	$5 = [1]
	$6 = *($2)
	if ( (($6 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL require_auth(*($0))
	$5 = [1]
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = uint_32($6 >> $5)
	goto $label$1 
	
.LABEL $label$2
	$2 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($2 <= [257]), [17266])
	$7 = ($0 + [32])
	$5 = *(($0 + [60]))
	$8 = *(($0 + [56]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($5 + [-24])
	$6 = *($2)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$7 }
	$5 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($6 + [120]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$6
	$6 = [0]
	$2 = CALL db_find_i64(*($7), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $10($7, $2)
	if ( ((int_32)*($6 + [120]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$5
	CALL eosio_assert(($6 == 0), [17344])
	$9 = ($0 + [152])
	$5 = *(($0 + [180]))
	$8 = *(($0 + [176]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$2 = ($5 + [-24])
	$6 = *($2)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$11 }
	$5 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($6 + [148]) == (int_32)$9) ){ goto $label$13 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$13
	*($4 + [516]) = $6
	*($4 + [512]) = $9
	$7 = (($4 + [512]) | [4])
	goto $label$9 
	
.LABEL $label$10
	$2 = CALL db_find_i64(*($9), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$14 }
	$6 = CALL $9($9, $2)
	if ( ((int_32)*($6 + [148]) == (int_32)$9) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$15
	*($4 + [516]) = $6
	*($4 + [512]) = $9
	$7 = (($4 + [512]) | [4])
	goto $label$9 
	
.LABEL $label$14
	$6 = [0]
	*($4 + [516]) = [0]
	*($4 + [512]) = $9
	$7 = (($4 + [512]) | [4])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [17387])
	if ( ($3 == 0) ){ goto $label$33 }
	$1 = (int_64)0
	if ( ((int_64)*($6 + [64]) > (int_64)0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$1 = *($6)
	*(($4 + [504])) = [0]
	*($4 + [496]) = (int_64)0
	$2 = CALL $261([18756])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$46 }
	*($4 + [496]) = ($2 << [1])
	$5 = (($4 + [496]) | [1])
	if ( $2 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	$6 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($4 + [496]) = ($6 | [1])
	*($4 + [504]) = $5
	*($4 + [500]) = $2
	
.LABEL $label$45
	CALL memcpy($5, [18756], $2)
	
.LABEL $label$44
	*(($5 + $2)) = [0]
	CALL $33($0, $1, ($4 + [496]))
	if ( ((*($4 + [496]) & [1]) == 0) ){ goto $label$47 }
	CALL _ZdlPv(*($4 + [504]))
	
.LABEL $label$47
	$10 = *(*($7) + [16])
	*(($4 + [432])) = [0]
	*($4 + [424]) = (int_64)0
	$2 = CALL $261([17686])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$50 }
	*($4 + [424]) = ($2 << [1])
	$6 = (($4 + [424]) | [1])
	if ( $2 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$5 = (($2 + [16]) & [-16])
	$6 = CALL _Znwj($5)
	*($4 + [424]) = ($5 | [1])
	*($4 + [432]) = $6
	*($4 + [428]) = $2
	
.LABEL $label$49
	CALL memcpy($6, [17686], $2)
	
.LABEL $label$48
	$5 = [0]
	*(($6 + $2)) = [0]
	$1 = *(*($7))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$54 }
	$6 = *([0] + [21604])
	
.LOOP $label$56:
	*((($4 + [328]) + ($2 = $5))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$5 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$55 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$56 }
	
.LABEL $label$55
	*(($4 + [416])) = [0]
	*($4 + [408]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$53 }
	*($4 + [408]) = ($5 << [1])
	$6 = (($4 + [408]) | [1])
	goto $label$52 
	
.LABEL $label$54
	*(($4 + [416])) = [0]
	*($4 + [408]) = (int_64)0
	*($4 + [408]) = [0]
	$2 = (($4 + [408]) | [1])
	$5 = $2
	goto $label$51 
	
.LABEL $label$53
	$8 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($4 + [408]) = ($8 | [1])
	*($4 + [416]) = $6
	*($4 + [412]) = $5
	
.LABEL $label$52
	$8 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$57:
	*(($6 + $2)) = *((($4 + [328]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$57 }
	$5 = ($6 + $5)
	$2 = (($4 + [408]) | [1])
	
.LABEL $label$51
	*($5) = [0]
	$5 = *($4 + [408])
	$6 = ($5 & [1])
	$2 = CALL $239(($4 + [424]), ( *($4 + [416]) ? $2 : $6 ), ( *($4 + [412]) ? uint_32($5 >> [1]) : $6 ))
	$5 = ($2 + [8])
	*((($4 + [328]) + [8])) = *($5)
	*($4 + [328]) = *($2)
	*($2) = (int_64)0
	*($5) = [0]
	*((($4 + [464]) + [8])) = [0]
	*($4 + [464]) = (int_64)0
	$2 = CALL $261([18798])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$41 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$60 }
	*($4 + [464]) = ($2 << [1])
	$6 = (($4 + [464]) | [1])
	$5 = $6
	if ( $2 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	$6 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($4 + [464]) = ($6 | [1])
	*($4 + [472]) = $5
	*($4 + [468]) = $2
	$6 = (($4 + [464]) | [1])
	
.LABEL $label$59
	CALL memcpy($5, [18798], $2)
	
.LABEL $label$58
	*(($5 + $2)) = [0]
	$2 = *($4 + [464])
	$5 = ($2 & [1])
	$2 = CALL $239(($4 + [328]), ( *($4 + [472]) ? $6 : $5 ), ( *($4 + [468]) ? uint_32($2 >> [1]) : $5 ))
	$5 = ($2 + [8])
	*((($4 + [480]) + [8])) = *($5)
	*($4 + [480]) = *($2)
	*($2) = (int_64)0
	*($5) = [0]
	CALL $33($0, $10, ($4 + [480]))
	if ( (*($4 + [480]) & [1]) ){ goto $label$62 }
	if ( (*($4 + [464]) & [1]) ){ goto $label$61 }
	goto $label$40 
	
.LABEL $label$62
	CALL _ZdlPv(*($4 + [488]))
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$61
	CALL _ZdlPv(*(($4 + [472])))
	$2 = [1]
	if ( ((*($4 + [328]) & [1]) == 0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$43
	CALL $231(($4 + [496]))
	
.LABEL $label$42
	CALL $231(($4 + [424]))
	
.LABEL $label$41
	CALL $231(($4 + [464]))
	
.LABEL $label$40
	$2 = [1]
	if ( (*($4 + [328]) & [1]) ){ goto $label$38 }
	
.LABEL $label$39
	if ( (*($4 + [408]) & $2) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL _ZdlPv(*($4 + [336]))
	if ( ((*($4 + [408]) & $2) == 0) ){ goto $label$36 }
	
.LABEL $label$37
	CALL _ZdlPv(*(($4 + [416])))
	if ( (*($4 + [424]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	if ( ((*($4 + [424]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL _ZdlPv(*($4 + [432]))
	
.LABEL $label$34
	$1 = (int_64)0
	if ( ((int_64)*(*($7) + [64]) <= (int_64)0) ){ goto $label$31 }
	
.LABEL $label$32
	$10 = *($0)
	*($4 + [392]) = [17468]
	*($4 + [396]) = CALL $261([17468])
	*($4 + [120]) = *($4 + [392])
	$2 = CALL $22(($4 + [400]), ($4 + [120]))
	*($4 + [408]) = $10
	*($4 + [416]) = *($2)
	$10 = *(*($7) + [128])
	*($4 + [376]) = [17475]
	*($4 + [380]) = CALL $261([17475])
	*($4 + [112]) = *($4 + [376])
	$3 = CALL $22(($4 + [384]), ($4 + [112]))
	$6 = *($7)
	*(($4 + [472])) = [0]
	*($4 + [464]) = $1
	$2 = CALL $261([18841])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$30 }
	$8 = ($6 + [64])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$65 }
	*($4 + [464]) = ($2 << [1])
	$5 = (($4 + [464]) | [1])
	if ( $2 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$11 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($11)
	*($4 + [464]) = ($11 | [1])
	*($4 + [472]) = $5
	*($4 + [468]) = $2
	
.LABEL $label$64
	CALL memcpy($5, [18841], $2)
	
.LABEL $label$63
	*(($5 + $2)) = [0]
	$1 = *($6 + [8])
	*(($4 + [352])) = *(($8 + [8]))
	$2 = (($4 + [464]) + [8])
	*(($4 + [368])) = *($2)
	*($2) = [0]
	*($4 + [328]) = *($0)
	*($4 + [344]) = *($8)
	*($4 + [360]) = *($4 + [464])
	*($4 + [336]) = $1
	*($4 + [464]) = (int_64)0
	$2 = CALL $23(($4 + [424]), ($4 + [408]), $10, *($3), ($4 + [328]))
	CALL $24($2)
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$66 }
	*(($2 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$66
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$67 }
	*(($2 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$67
	if ( ((*(($4 + [360])) & [1]) == 0) ){ goto $label$68 }
	CALL _ZdlPv(*(($4 + [368])))
	
.LABEL $label$68
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$69 }
	CALL _ZdlPv(*(($4 + [472])))
	
.LABEL $label$69
	$2 = *($7)
	$10 = *($2 + [128])
	$1 = *($2 + [64])
	$12 = *(($2 + [72]))
	*((($4 + [96]) + [8])) = $12
	*((($4 + [312]) + [8])) = $12
	*($4 + [312]) = $1
	*($4 + [96]) = $1
	CALL $11($0, $10, ($4 + [96]), [3])
	
.LABEL $label$31
	$11 = ($0 + [352])
	$1 = *($0)
	$5 = *(($0 + [380]))
	$8 = *(($0 + [376]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$71 }
	
.LOOP $label$73:
	$2 = ($5 + [-24])
	$6 = *($2)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$72 }
	$5 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$71 }
	if ( ((int_32)*($6 + [292]) == (int_32)$11) ){ goto $label$70 }
	CALL eosio_assert([0], [22260])
	goto $label$70 
	
.LABEL $label$71
	$6 = [0]
	$2 = CALL db_find_i64(*($11), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$70 }
	$6 = CALL $15($11, $2)
	if ( ((int_32)*($6 + [292]) == (int_32)$11) ){ goto $label$70 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$70
	$2 = *($7)
	if ( ((int_64)*($2 + [80]) < (int_64)1) ){ goto $label$19 }
	$1 = *($2)
	*(($4 + [304])) = [0]
	*($4 + [296]) = (int_64)0
	$2 = CALL $261([18894])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$76 }
	*($4 + [296]) = ($2 << [1])
	$5 = (($4 + [296]) | [1])
	if ( $2 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$8 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($4 + [296]) = ($8 | [1])
	*($4 + [304]) = $5
	*($4 + [300]) = $2
	
.LABEL $label$75
	CALL memcpy($5, [18894], $2)
	
.LABEL $label$74
	*(($5 + $2)) = [0]
	CALL $33($0, $1, ($4 + [296]))
	if ( ((*($4 + [296]) & [1]) == 0) ){ goto $label$77 }
	CALL _ZdlPv(*($4 + [304]))
	
.LABEL $label$77
	$10 = *(*($7) + [16])
	*(($4 + [432])) = [0]
	*($4 + [424]) = (int_64)0
	$2 = CALL $261([17686])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$80 }
	*($4 + [424]) = ($2 << [1])
	$8 = (($4 + [424]) | [1])
	if ( $2 ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	$5 = (($2 + [16]) & [-16])
	$8 = CALL _Znwj($5)
	*($4 + [424]) = ($5 | [1])
	*($4 + [432]) = $8
	*($4 + [428]) = $2
	
.LABEL $label$79
	CALL memcpy($8, [17686], $2)
	
.LABEL $label$78
	$5 = [0]
	*(($8 + $2)) = [0]
	$1 = *(*($7))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$84 }
	$8 = *([0] + [21604])
	
.LOOP $label$86:
	*((($4 + [328]) + ($2 = $5))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$5 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$85 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$86 }
	
.LABEL $label$85
	*(($4 + [416])) = [0]
	*($4 + [408]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$83 }
	*($4 + [408]) = ($5 << [1])
	$8 = (($4 + [408]) | [1])
	goto $label$82 
	
.LABEL $label$84
	*(($4 + [416])) = [0]
	*($4 + [408]) = (int_64)0
	*($4 + [408]) = [0]
	$2 = (($4 + [408]) | [1])
	$5 = $2
	goto $label$81 
	
.LABEL $label$83
	$3 = (($5 + [16]) & [-16])
	$8 = CALL _Znwj($3)
	*($4 + [408]) = ($3 | [1])
	*($4 + [416]) = $8
	*($4 + [412]) = $5
	
.LABEL $label$82
	$3 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$87:
	*(($8 + $2)) = *((($4 + [328]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$87 }
	$5 = ($8 + $5)
	$2 = (($4 + [408]) | [1])
	
.LABEL $label$81
	*($5) = [0]
	$5 = *($4 + [408])
	$8 = ($5 & [1])
	$2 = CALL $239(($4 + [424]), ( *($4 + [416]) ? $2 : $8 ), ( *($4 + [412]) ? uint_32($5 >> [1]) : $8 ))
	$5 = ($2 + [8])
	*((($4 + [328]) + [8])) = *($5)
	*($4 + [328]) = *($2)
	*($2) = (int_64)0
	*($5) = [0]
	*((($4 + [464]) + [8])) = [0]
	*($4 + [464]) = (int_64)0
	$2 = CALL $261([18951])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$90 }
	*($4 + [464]) = ($2 << [1])
	$8 = (($4 + [464]) | [1])
	$5 = $8
	if ( $2 ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$90
	$8 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($4 + [464]) = ($8 | [1])
	*($4 + [472]) = $5
	*($4 + [468]) = $2
	$8 = (($4 + [464]) | [1])
	
.LABEL $label$89
	CALL memcpy($5, [18951], $2)
	
.LABEL $label$88
	*(($5 + $2)) = [0]
	$2 = *($4 + [464])
	$5 = ($2 & [1])
	$2 = CALL $239(($4 + [328]), ( *($4 + [472]) ? $8 : $5 ), ( *($4 + [468]) ? uint_32($2 >> [1]) : $5 ))
	$5 = ($2 + [8])
	*((($4 + [280]) + [8])) = *($5)
	*($4 + [280]) = *($2)
	*($2) = (int_64)0
	*($5) = [0]
	CALL $33($0, $10, ($4 + [280]))
	if ( (*($4 + [280]) & [1]) ){ goto $label$92 }
	if ( (*($4 + [464]) & [1]) ){ goto $label$91 }
	goto $label$26 
	
.LABEL $label$92
	CALL _ZdlPv(*($4 + [288]))
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$91
	CALL _ZdlPv(*(($4 + [472])))
	$2 = [1]
	if ( ((*($4 + [328]) & [1]) == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$30
	CALL $231(($4 + [464]))
	
.LABEL $label$29
	CALL $231(($4 + [296]))
	
.LABEL $label$28
	CALL $231(($4 + [424]))
	
.LABEL $label$27
	CALL $231(($4 + [464]))
	
.LABEL $label$26
	$2 = [1]
	if ( (*($4 + [328]) & [1]) ){ goto $label$24 }
	
.LABEL $label$25
	if ( (*($4 + [408]) & $2) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL _ZdlPv(*($4 + [336]))
	if ( ((*($4 + [408]) & $2) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL _ZdlPv(*(($4 + [416])))
	if ( (*($4 + [424]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((*($4 + [424]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL _ZdlPv(*($4 + [432]))
	
.LABEL $label$20
	$2 = *($7)
	$1 = *($2 + [128])
	$12 = *($2 + [80])
	$10 = *(($2 + [88]))
	*((($4 + [80]) + [8])) = $10
	$12 = ((int_64)$12 / (int_64)2)
	*($4 + [264]) = $12
	*($4 + [272]) = $10
	*($4 + [80]) = $12
	CALL $11($0, $1, ($4 + [80]), [6])
	$1 = *($0)
	*($4 + [248]) = [17468]
	*($4 + [252]) = CALL $261([17468])
	*($4 + [72]) = *($4 + [248])
	$13 = *(CALL $22(($4 + [256]), ($4 + [72])))
	*($4 + [232]) = [17777]
	*($4 + [236]) = CALL $261([17777])
	*($4 + [64]) = *($4 + [232])
	$3 = CALL $22(($4 + [240]), ($4 + [64]))
	*($4 + [216]) = [17790]
	*($4 + [220]) = CALL $261([17790])
	*($4 + [56]) = *($4 + [216])
	$14 = CALL $22(($4 + [224]), ($4 + [56]))
	$8 = *($7)
	*((($4 + [464]) + [8])) = [0]
	*($4 + [464]) = (int_64)0
	$2 = CALL $261([17799])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$96 }
	$15 = ($8 + [136])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$99 }
	*($4 + [464]) = ($2 << [1])
	$5 = (($4 + [464]) | [1])
	if ( $2 ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$99
	$16 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($16)
	*($4 + [464]) = ($16 | [1])
	*($4 + [472]) = $5
	*($4 + [468]) = $2
	
.LABEL $label$98
	CALL memcpy($5, [17799], $2)
	
.LABEL $label$97
	*(($5 + $2)) = [0]
	*((($4 + [328]) + [16])) = $10
	*($4 + [336]) = $12
	*($4 + [328]) = *($8 + [128])
	$5 = CALL $232((($4 + [328]) + [24]), $15)
	*(($8 = (($4 + [424]) + [24]))) = [0]
	$2 = ($4 + [472])
	*(($4 + [372])) = *($2)
	*($2) = [0]
	*($4 + [440]) = (int_64)0
	*($4 + [364 align=4]) = *($4 + [464])
	*($4 + [464]) = (int_64)0
	*($4 + [424]) = *($3)
	*($4 + [432]) = *($14)
	*(($2 = CALL _Znwj([16]))) = $1
	*($2 + [8]) = $13
	*(($4 + [460])) = [0]
	$3 = ($2 + [16])
	*($8) = $3
	*(($4 + [444])) = $3
	*($4 + [440]) = $2
	*($4 + [452 align=4]) = (int_64)0
	$2 = *($5)
	$5 = ( *((($4 + [328]) + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [24])
	$1 = (CASTING uint_64)(uint_32 $5)
	$8 = (($4 + [424]) + [28])
	
.LOOP $label$100:
	$2 = ($2 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$100 }
	$5 = *($4 + [364])
	$5 = ( *(($4 + [368])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$2 = ($5 + $2)
	$1 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$101:
	$2 = ($2 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$101 }
	if ( ($2 == 0) ){ goto $label$103 }
	CALL $2($8, $2)
	$5 = *(($4 + [456]))
	$2 = *(($4 + [452]))
	goto $label$102 
	
.LABEL $label$103
	$5 = [0]
	$2 = [0]
	
.LABEL $label$102
	*($4 + [412]) = $2
	*($4 + [408]) = $2
	*($4 + [416]) = $5
	*($4 + [520]) = ($4 + [408])
	*($4 + [160]) = ($4 + [328])
	CALL $34(($4 + [160]), ($4 + [520]))
	CALL $24(($4 + [424]))
	$2 = *($4 + [452])
	if ( ($2 == 0) ){ goto $label$104 }
	*(($4 + [456])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$104
	$2 = *($4 + [440])
	if ( ($2 == 0) ){ goto $label$105 }
	*(($4 + [444])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$105
	if ( (*(($4 + [364])) & [1]) ){ goto $label$107 }
	if ( (*($4 + [352]) & [1]) ){ goto $label$106 }
	goto $label$95 
	
.LABEL $label$107
	CALL _ZdlPv(*(($4 + [372])))
	if ( ((*($4 + [352]) & [1]) == 0) ){ goto $label$95 }
	
.LABEL $label$106
	CALL _ZdlPv(*(($4 + [360])))
	if ( (*($4 + [464]) & [1]) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	CALL $231(($4 + [464]))
	
.LABEL $label$95
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$93 }
	
.LABEL $label$94
	CALL _ZdlPv(*(($4 + [472])))
	
.LABEL $label$93
	*($4 + [200]) = [19009]
	*($4 + [204]) = CALL $261([19009])
	*($4 + [48]) = *($4 + [200])
	if ( (CALL is_account(*(CALL $22(($4 + [208]), ($4 + [48])))) == 0) ){ goto $label$108 }
	$1 = *($0)
	*($4 + [184]) = [17468]
	*($4 + [188]) = CALL $261([17468])
	*($4 + [40]) = *($4 + [184])
	$2 = CALL $22(($4 + [192]), ($4 + [40]))
	*($4 + [408]) = $1
	*($4 + [416]) = *($2)
	$1 = *(*($7) + [128])
	*($4 + [168]) = [17475]
	*($4 + [172]) = CALL $261([17475])
	*($4 + [32]) = *($4 + [168])
	$8 = CALL $22(($4 + [176]), ($4 + [32]))
	*($4 + [152]) = [19009]
	*($4 + [156]) = CALL $261([19009])
	*($4 + [24]) = *($4 + [152])
	$3 = CALL $22(($4 + [160]), ($4 + [24]))
	*(($4 + [472])) = [0]
	*($4 + [464]) = (int_64)0
	$2 = CALL $261([19022])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$111 }
	*($4 + [464]) = ($2 << [1])
	$5 = (($4 + [464]) | [1])
	if ( $2 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$111
	$14 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($14)
	*($4 + [464]) = ($14 | [1])
	*($4 + [472]) = $5
	*($4 + [468]) = $2
	
.LABEL $label$110
	CALL memcpy($5, [19022], $2)
	
.LABEL $label$109
	*(($5 + $2)) = [0]
	*(($4 + [352])) = $10
	$2 = ($4 + [472])
	*(($4 + [368])) = *($2)
	*($2) = [0]
	*($4 + [344]) = $12
	*($4 + [328]) = *($0)
	*($4 + [336]) = *($3)
	*($4 + [360]) = *($4 + [464])
	*($4 + [464]) = (int_64)0
	$2 = CALL $23(($4 + [424]), ($4 + [408]), $1, *($8), ($4 + [328]))
	CALL $24($2)
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$112 }
	*(($2 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$112
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$113 }
	*(($2 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$113
	if ( ((*(($4 + [360])) & [1]) == 0) ){ goto $label$114 }
	CALL _ZdlPv(*(($4 + [368])))
	
.LABEL $label$114
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$108 }
	CALL _ZdlPv(*(($4 + [472])))
	
.LABEL $label$108
	$2 = *($7)
	$10 = *(($2 + [88]))
	*((($4 + [136]) + [8])) = $10
	$12 = *($2 + [128])
	$1 = *($2 + [80])
	*((($4 + [8]) + [8])) = $10
	*($4 + [136]) = $1
	*($4 + [8]) = $1
	CALL $11($0, $12, ($4 + [8]), [3])
	$2 = *($7)
	*($4 + [128]) = [19052]
	*($4 + [132]) = CALL $261([19052])
	*($4) = *($4 + [128])
	$5 = CALL $22(($4 + [328]), $4)
	if ( ($6 == 0) ){ goto $label$19 }
	if ( ((int_64)*($2 + [128]) != (int_64)*($5)) ){ goto $label$19 }
	$1 = *($0)
	*($4 + [328]) = ($4 + [512])
	CALL $68($11, $6, $1, ($4 + [328]))
	goto $label$18 
	
.LABEL $label$19
	if ( ($6 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$1 = *($0)
	*($4 + [328]) = ($4 + [512])
	CALL $69($11, $6, $1, ($4 + [328]))
	
.LABEL $label$17
	$1 = *($4 + [512])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $2) ){ goto $label$115 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$115
	$5 = CALL db_next_i64(*($2 + [152]), ($4 + [328]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$116 }
	CALL $9((CASTING uint_32)(uint_64 $1), $5)
	
.LABEL $label$116
	CALL $70($9, $2)
	$global$0 = ($4 + [528])
	return (unreachable)
	
.LABEL $label$16
	CALL $231(($4 + [464]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($1 + [80]) = (*($1 + [80]) + [-1])
	$6 = *($3 + [4])
	$7 = *($3)
	*(($1 + [96])) = *(($7 + [8]))
	*($1 + [88]) = *($7)
	$8 = *($1)
	*($1 + [104]) = CALL $72($6, *(*($3 + [8])))
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$3
	$6 = ($1 + [88])
	$7 = ($1 + [80])
	$3 = *($1 + [48])
	$9 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [100])
	$10 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [48])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $264($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [48]) = $9
	*($5 + [60]) = $7
	*($5 + [64]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	CALL $196(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$8 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $267($4)
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [80])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($5 + [24]) = *(($1 + [8]))
	$6 = *($1 + [88])
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [21855])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$5
	$7 = *($3 + [4])
	*($1 + [32 align=4]) = *($7)
	*(($1 + [61])) = *(($7 + [29]))
	*(($1 + [56])) = *(($7 + [24]))
	*(($1 + [48])) = *(($7 + [16]))
	*(($1 + [40])) = *(($7 + [8]))
	$9 = ($1 + [72])
	CALL $234($9, *($3 + [8]))
	*($1 + [96]) = CALL current_time()
	*($1 + [104]) = (*($1 + [104]) + [1])
	if ( ((int_64)$6 == (int_64)*(($1 + [88]))) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$10 = ($1 + [88])
	$11 = ($1 + [104])
	$12 = ($1 + [96])
	$13 = ($1 + [32])
	$8 = *($1 + [32])
	$7 = [93]
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$7 }
	$3 = *(($1 + [72]))
	$3 = ( *(($1 + [76])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$7 = ($3 + $7)
	$8 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$8:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	if ( ($7 <= [513]) ){ goto $label$10 }
	$3 = CALL $264($7)
	goto $label$9 
	
.LABEL $label$10
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$9
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [32]) = ($5 + [8])
	*($5 + [52]) = $13
	*($5 + [56]) = $9
	*($5 + [60]) = $10
	*($5 + [64]) = $12
	*($5 + [68]) = $11
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [72]) = ($1 + [112])
	CALL $199(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [124]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$11 }
	CALL $267($3)
	
.LABEL $label$11
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $260(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$13 }
	$1 = ($1 + [128])
	$7 = *($1)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4292657617207033856, ($5 + [32]), $6)
	*($1) = $7
	
.LABEL $label$14
	CALL db_idx64_update($7, $2, ($5 + [40]))
	
.LABEL $label$13
	$global$0 = ($5 + [80])
}

void .FUNC $60 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$7 = ($global$0 - [176])
	$global$0 = $7
	*($7 + [160]) = $2
	*($7 + [168]) = $1
	CALL $6($0)
	CALL require_auth(*($0))
	CALL $7($0, $2)
	$8 = *(($5 + [32]))
	*((($7 + [120]) + [32])) = $8
	$9 = *(($5 + [24]))
	*((($7 + [120]) + [24])) = $9
	$10 = *(($5 + [16]))
	*((($7 + [120]) + [16])) = $10
	$11 = *(($5 + [8]))
	*((($7 + [120]) + [8])) = $11
	$1 = *($5)
	*((($7 + [24]) + [8])) = $11
	*((($7 + [24]) + [16])) = $10
	*((($7 + [24]) + [24])) = $9
	*((($7 + [24]) + [32])) = $8
	*($7 + [24]) = $1
	*($7 + [120]) = $1
	CALL eosio_assert((int_64)(CALL $41($0, $2, ($7 + [24])) == 0), [17938])
	CALL eosio_assert(((int_64)CALL $8($0, $4, *($3 + [8])) != (int_64)0), [17186])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [18449])
	$12 = *($6)
	if ( ($12 & [1]) ){ goto $label$2 }
	$12 = uint_32($12 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$12 = *($6 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($12 <= [257]), [17266])
	$13 = ($0 + [152])
	$2 = *($7 + [160])
	$15 = *(($0 + [180]))
	$14 = *(($0 + [176]))
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$4 }
	
.LOOP $label$6:
	$12 = ($15 + [-24])
	$16 = *($12)
	if ( ((int_64)*($16) == (int_64)$2) ){ goto $label$5 }
	$15 = $12
	if ( ((int_32)$14 != (int_32)$12) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$4 }
	if ( ((int_32)*($16 + [148]) == (int_32)$13) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	goto $label$3 
	
.LABEL $label$4
	$16 = [0]
	$12 = CALL db_find_i64(*($13), *(($0 + [160])), (int_64)6609776272782393344, $2)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$3 }
	$16 = CALL $9($13, $12)
	if ( ((int_32)*($16 + [148]) == (int_32)$13) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	CALL eosio_assert(($16 == 0), [17300])
	$17 = ($0 + [32])
	$2 = *($7 + [160])
	$15 = *(($0 + [60]))
	$14 = *(($0 + [56]))
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$8 }
	
.LOOP $label$10:
	$12 = ($15 + [-24])
	$16 = *($12)
	if ( ((int_64)*($16) == (int_64)$2) ){ goto $label$9 }
	$15 = $12
	if ( ((int_32)$14 != (int_32)$12) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$8 }
	if ( ((int_32)*($16 + [120]) == (int_32)$17) ){ goto $label$7 }
	CALL eosio_assert([0], [22260])
	goto $label$7 
	
.LABEL $label$8
	$16 = [0]
	$12 = CALL db_find_i64(*($17), *(($0 + [40])), (int_64)3607749778735104000, $2)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $10($17, $12)
	if ( ((int_32)*($16 + [120]) == (int_32)$17) ){ goto $label$7 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [18471])
	CALL eosio_assert(((int_64)*($16 + [112]) == (int_64)$4), [17557])
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($16 + [24]))), [17144])
	CALL eosio_assert(((int_64)*($16 + [16]) > (int_64)0), [18493])
	CALL eosio_assert(((int_64)*($3) >= (int_64)*($16 + [16])), [18518])
	$18 = ($0 + [72])
	*($7 + [112]) = $18
	CALL $26(($7 + [104]), ($7 + [112]), ($7 + [160]))
	CALL eosio_assert(((int_32)*($7 + [108]) != (int_32)[0]), [18555])
	CALL eosio_assert(((int_64)*(*($7 + [108]) + [112]) == (int_64)$4), [17557])
	$2 = (int_64)0
	$12 = *($7 + [108])
	if ( ($12 == 0) ){ goto $label$11 }
	$2 = (int_64)0
	
.LOOP $label$12:
	if ( ((int_64)*($12 + [8]) != (int_64)*($7 + [160])) ){ goto $label$11 }
	if ( ((int_64)*($12) != (int_64)*($7 + [168])) ){ goto $label$13 }
	$2 = *($12 + [88])
	
.LABEL $label$13
	CALL $28(($7 + [104]))
	$12 = *($7 + [108])
	if ( $12 ){ goto $label$12 }
	
.LABEL $label$11
	CALL eosio_assert(((int_64)$2 != (int_64)0), [18595])
	$15 = *(($0 + [100]))
	$13 = *(($0 + [96]))
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$15 }
	
.LOOP $label$17:
	$12 = ($15 + [-24])
	$14 = *($12)
	if ( ((int_64)*($14 + [88]) == (int_64)$2) ){ goto $label$16 }
	$15 = $12
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$15 }
	if ( ((int_32)*($14 + [120]) == (int_32)$18) ){ goto $label$14 }
	CALL eosio_assert([0], [22260])
	goto $label$14 
	
.LABEL $label$15
	$12 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)4292657617207033856, $2)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$18 }
	$14 = CALL $29($18, $12)
	if ( ((int_32)*($14 + [120]) == (int_32)$18) ){ goto $label$14 }
	CALL eosio_assert([0], [22260])
	goto $label$14 
	
.LABEL $label$18
	$14 = [0]
	
.LABEL $label$14
	*($7 + [100]) = $14
	*($7 + [96]) = $18
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [17532])
	CALL eosio_assert(((uint_64)*($16 + [72]) >= (uint_64)((int_64)CALL $fimport$13() + (int_64)-86400000000)), [18034])
	$2 = *($0)
	*($7 + [84]) = $5
	*($7 + [80]) = $3
	*($7 + [88]) = $6
	if ( $14 ){ goto $label$19 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$19
	CALL $61($18, $14, $2, ($7 + [80]))
	$2 = *($0)
	*($7 + [84]) = ($7 + [168])
	*($7 + [80]) = ($7 + [96])
	if ( $16 ){ goto $label$20 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$20
	CALL $62($17, $16, $2, ($7 + [80]))
	$1 = *(($3 + [8]))
	*((($7 + [64]) + [8])) = $1
	$2 = *($3)
	*((($7 + [8]) + [8])) = $1
	*($7 + [8]) = $2
	*($7 + [64]) = $2
	CALL $11($0, $4, ($7 + [8]), [2])
	$13 = ($0 + [352])
	$2 = *($0)
	$15 = *(($0 + [380]))
	$14 = *(($0 + [376]))
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$23 }
	
.LOOP $label$25:
	$12 = ($15 + [-24])
	$16 = *($12)
	if ( ((int_64)*($16) == (int_64)$2) ){ goto $label$24 }
	$15 = $12
	if ( ((int_32)$14 != (int_32)$12) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$23 }
	if ( ((int_32)*($16 + [292]) == (int_32)$13) ){ goto $label$26 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$26
	if ( $16 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$12 = CALL db_find_i64(*($13), *(($0 + [360])), (int_64)-4157493845350678528, $2)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$21 }
	$16 = CALL $15($13, $12)
	if ( ((int_32)*($16 + [292]) == (int_32)$13) ){ goto $label$22 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$22
	$2 = *($0)
	*($7 + [84]) = $3
	*($7 + [80]) = ($7 + [96])
	CALL $63($13, $16, $2, ($7 + [80]))
	
.LABEL $label$21
	$global$0 = ($7 + [176])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [112]) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$4
	$9 = ((int_64)*($1 + [48]) + (int_64)*($7))
	*($1 + [48]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$6
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [152]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [144]) + (int_64)*($3))
	*($1 + [144]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [144]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [112])
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [72]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *(*($3) + [4])
	*($1 + [88]) = *($6 + [16])
	*(($1 + [96])) = *(($6 + [24]))
	*($1 + [104]) = *(*($3 + [4]))
	$3 = *($1 + [48])
	$6 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [100])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [48])
	$8 = ($1 + [88])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $264($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [48]) = $6
	*($5 + [64]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	*($5 + [60]) = ($1 + [80])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	CALL $196(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $267($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [80])
}

int_32 .FUNC $1 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $262(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8452])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $262(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $267($0)
	
.LABEL $label$1
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)-1)
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)1)
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)1)
	*($1 + [104]) = ((int_64)*($1 + [104]) + (int_64)1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [104]) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *(*($3) + [4])
	if ( ((int_64)*(($7 + [24])) == (int_64)*(($1 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [64]) = $9(*($1 + [64]) - *($7 + [16])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$6
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [96]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [88]) + (int_64)*($3 + [16]))
	*($1 + [88]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [88]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [104])
	$8 = ($1 + [112])
	$10 = ($1 + [80])
	$11 = ($1 + [24])
	$3 = *($1 + [280])
	$12 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($12 + [273])
	$9 = (CASTING uint_64)(uint_32 $12)
	$12 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $11
	*($5 + [60]) = $10
	*($5 + [68]) = $7
	*($5 + [72]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $12
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *(*($4 + [4]) + [4])
	*($1 + [8]) = *($5)
	*($1 + [16]) = *(*($4 + [8]))
	$6 = *($0)
	*(($1 + [53])) = *(($5 + [61]))
	*(($1 + [48])) = *(($5 + [56]))
	*(($1 + [40])) = *(($5 + [48]))
	*(($1 + [32])) = *(($5 + [40]))
	*($1 + [24 align=4]) = *($5 + [32 align=4])
	$5 = *(*($4 + [4]) + [4])
	*($1 + [64]) = *($5 + [16])
	*(($1 + [72])) = *(($5 + [24]))
	$7 = ($1 + [64])
	$8 = ($1 + [24])
	$9 = *((*(*($4 + [4]) + [4]) + [24]))
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$10 = $11
	$12 = $5
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$10 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$12 = ((int_32)$5 < (int_32)[6])
	$13 = ($5 + [1])
	$5 = $13
	if ( $12 ){ goto $label$5 }
	$5 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [21690])
	
.LABEL $label$1
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = $9
	*($1 + [96]) = [3]
	*($1 + [104]) = *(*($4 + [12]))
	*($1 + [112]) = CALL current_time()
	*($1 + [120]) = CALL current_time()
	*($1 + [128]) = *(*(*(($4 + [4])) + [4]) + [104])
	$13 = ($1 + [120])
	$4 = ($1 + [112])
	$14 = ($1 + [96])
	$10 = *($1 + [24])
	$5 = [122]
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	$12 = *($1 + [136])
	$12 = ( *(($1 + [140])) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$5 = ($12 + $5)
	$10 = (CASTING uint_64)(uint_32 $12)
	$15 = ($1 + [136])
	
.LOOP $label$7:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ($5 <= [513]) ){ goto $label$9 }
	$12 = CALL $264($5)
	goto $label$8 
	
.LABEL $label$9
	$12 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $12
	
.LABEL $label$8
	*($3 + [12]) = $12
	*($3 + [8]) = $12
	*($3 + [16]) = ($12 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $8
	*($3 + [48]) = $7
	*($3 + [52]) = ($1 + [80])
	*($3 + [56]) = $14
	*($3 + [60]) = ($1 + [104])
	*($3 + [64]) = $4
	*($3 + [68]) = $13
	*($3 + [72]) = ($1 + [128])
	*($3 + [76]) = $15
	CALL $197(($3 + [32]), ($3 + [24]))
	$10 = *($1)
	*($1 + [152]) = CALL db_store_i64(*($6 + [8]), (int_64)6609776272782393344, *(*($0 + [8])), $10, $12, $5)
	if ( ($5 <= [513]) ){ goto $label$10 }
	CALL $267($12)
	
.LABEL $label$10
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$11 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$10 = *(($6 + [8]))
	$11 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*($1 + [156]) = CALL db_idx64_store($10, (int_64)6609776272782393344, $11, $9, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $87 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [192])
	$global$0 = $5
	*($5 + [144]) = $1
	*($5 + [136]) = $3
	CALL $6($0)
	CALL require_auth($1)
	CALL $7($0, $1)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [19513])
	CALL eosio_assert(CALL $fimport$5($2), [19553])
	CALL eosio_assert(CALL $fimport$5($3), [17088])
	$6 = ($0 + [152])
	$8 = *(($0 + [180]))
	$7 = *(($0 + [176]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	
.LOOP $label$4:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$3 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	if ( ((int_32)*($10 + [148]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	$9 = CALL db_find_i64(*($6), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $9($6, $9)
	if ( ((int_32)*($10 + [148]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$1
	CALL eosio_assert(($10 == 0), [17300])
	$11 = ($0 + [112])
	*($5 + [128]) = $11
	CALL $78(($5 + [120]), ($5 + [128]), ($5 + [144]))
	CALL eosio_assert(((int_32)*($5 + [124]) != (int_32)[0]), [19575])
	$1 = (int_64)0
	$9 = *($5 + [124])
	if ( ($9 == 0) ){ goto $label$5 }
	$1 = (int_64)0
	
.LOOP $label$6:
	if ( ((int_64)*($9 + [8]) != (int_64)*($5 + [144])) ){ goto $label$5 }
	if ( ((int_64)*($9) != (int_64)$2) ){ goto $label$7 }
	$1 = *($9 + [112])
	
.LABEL $label$7
	CALL $79(($5 + [120]))
	$9 = *($5 + [124])
	if ( $9 ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert(((int_64)$1 != (int_64)0), [19615])
	$8 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$11:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10 + [112]) == (int_64)$1) ){ goto $label$10 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$9 }
	if ( ((int_32)*($10 + [128]) == (int_32)$11) ){ goto $label$8 }
	CALL eosio_assert([0], [22260])
	goto $label$8 
	
.LABEL $label$9
	$9 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)3615730114550375936, $1)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$12 }
	$10 = CALL $83($11, $9)
	if ( ((int_32)*($10 + [128]) == (int_32)$11) ){ goto $label$8 }
	CALL eosio_assert([0], [22260])
	goto $label$8 
	
.LABEL $label$12
	$10 = [0]
	
.LABEL $label$8
	*($5 + [116]) = $10
	*($5 + [112]) = $11
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [19384])
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$14 }
	$9 = uint_32($9 >> [1])
	goto $label$13 
	
.LABEL $label$14
	$9 = *($4 + [4])
	
.LABEL $label$13
	CALL eosio_assert(($9 <= [257]), [17266])
	$12 = ($0 + [32])
	$1 = *($5 + [144])
	$8 = *(($0 + [60]))
	$10 = *(($0 + [56]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$20 }
	
.LOOP $label$22:
	$9 = ($8 + [-24])
	$7 = *($9)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$21 }
	$8 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$20 }
	if ( ((int_32)*($7 + [120]) == (int_32)$12) ){ goto $label$19 }
	CALL eosio_assert([0], [22260])
	goto $label$19 
	
.LABEL $label$20
	$9 = CALL db_find_i64(*($12), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$18 }
	if ( ((int_32)*(CALL $10($12, $9) + [120]) == (int_32)$12) ){ goto $label$19 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$19
	*(($5 + [104])) = [0]
	*($5 + [96]) = (int_64)0
	$1 = *($5 + [144])
	$9 = CALL $261([19640])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$25 }
	*($5 + [96]) = ($9 << [1])
	$8 = (($5 + [96]) | [1])
	if ( $9 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$10 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($5 + [96]) = ($10 | [1])
	*($5 + [104]) = $8
	*($5 + [100]) = $9
	
.LABEL $label$24
	CALL memcpy($8, [19640], $9)
	
.LABEL $label$23
	*(($8 + $9)) = [0]
	CALL $21($0, $1, $1, [1], ($5 + [96]))
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($5 + [104]))
	
.LABEL $label$18
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$27 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$26 
	
.LABEL $label$27
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$26
	*($5 + [76]) = $9
	*($5 + [72]) = $8
	*($5 + [16]) = *($5 + [72])
	if ( (CALL is_account(*(CALL $22(($5 + [80]), ($5 + [16])))) == 0) ){ goto $label$31 }
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$30 }
	$9 = uint_32($9 >> [1])
	$8 = ($4 + [1])
	goto $label$29 
	
.LABEL $label$31
	*($5 + [56]) = [17531]
	*($5 + [60]) = CALL $261([17531])
	*($5 + [8]) = *($5 + [56])
	CALL $22(($5 + [88]), ($5 + [8]))
	goto $label$28 
	
.LABEL $label$30
	$9 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$29
	*($5 + [68]) = $9
	*($5 + [64]) = $8
	*($5) = *($5 + [64])
	CALL $22(($5 + [88]), $5)
	
.LABEL $label$28
	$1 = *($0)
	*($5 + [44]) = ($5 + [112])
	*($5 + [40]) = ($5 + [144])
	*($5 + [48]) = ($5 + [136])
	*($5 + [52]) = ($5 + [88])
	*($5 + [184]) = $1
	if ( ((int_64)*(($0 + [152])) == (int_64)CALL current_receiver()) ){ goto $label$32 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$32
	*($5 + [160]) = $6
	*($5 + [164]) = ($5 + [40])
	*($5 + [168]) = ($5 + [184])
	*(($9 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [16]) = (int_64)0
	*($9 + [24]) = [0]
	*($9 + [64]) = (int_64)0
	*($9 + [72]) = (int_64)0
	*($9 + [80]) = (int_64)0
	*($9 + [88]) = (int_64)0
	*($9 + [104]) = (int_64)0
	*($9 + [128]) = (int_64)0
	*($9 + [136 align=4]) = (int_64)0
	*($9 + [144]) = [0]
	*($9 + [148]) = $6
	CALL $88(($5 + [160]), $9)
	*($5 + [176]) = $9
	$1 = *($9)
	*($5 + [160]) = $1
	$10 = *($9 + [152])
	*($5 + [156]) = $10
	$7 = ($0 + [180])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [184]))) ){ goto $label$33 }
	*($8 + [8]) = $1
	*($8 + [16]) = $10
	*($5 + [176]) = [0]
	*($8) = $9
	*($7) = ($8 + [24])
	$9 = *($5 + [176])
	*($5 + [176]) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$33
	CALL $44(($0 + [176]), ($5 + [176]), ($5 + [160]), ($5 + [156]))
	$9 = *($5 + [176])
	*($5 + [176]) = [0]
	if ( $9 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $231(($5 + [96]))
	
.LABEL $label$16
	if ( ((*($9 + [136]) & [1]) == 0) ){ goto $label$34 }
	CALL _ZdlPv(*(($9 + [144])))
	
.LABEL $label$34
	CALL _ZdlPv($9)
	
.LABEL $label$15
	$4 = ($0 + [352])
	$1 = *($0)
	$8 = *(($0 + [380]))
	$7 = *(($0 + [376]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$37 }
	
.LOOP $label$39:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$38 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$37 }
	if ( ((int_32)*($10 + [292]) == (int_32)$4) ){ goto $label$40 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$40
	if ( $10 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$9 = CALL db_find_i64(*($4), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$35 }
	$10 = CALL $15($4, $9)
	if ( ((int_32)*($10 + [292]) == (int_32)$4) ){ goto $label$36 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$36
	$1 = *($0)
	*($5 + [40]) = ($5 + [112])
	CALL $89($4, $10, $1, ($5 + [40]))
	
.LABEL $label$35
	$1 = *($5 + [112])
	$9 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $9) ){ goto $label$41 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$41
	$8 = CALL db_next_i64(*($9 + [132]), ($5 + [40]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$42 }
	CALL $83((CASTING uint_32)(uint_64 $1), $8)
	
.LABEL $label$42
	CALL $86($11, $9)
	*(($5 + [32])) = [0]
	*($5 + [24]) = (int_64)0
	$1 = *($5 + [144])
	$9 = CALL $261([18326])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$46 }
	*($5 + [24]) = ($9 << [1])
	$8 = (($5 + [24]) | [1])
	if ( $9 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	$10 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($5 + [24]) = ($10 | [1])
	*($5 + [32]) = $8
	*($5 + [28]) = $9
	
.LABEL $label$45
	CALL memcpy($8, [18326], $9)
	
.LABEL $label$44
	*(($8 + $9)) = [0]
	CALL $47($0, $1, ($5 + [24]), [3])
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$47 }
	CALL _ZdlPv(*($5 + [32]))
	
.LABEL $label$47
	$global$0 = ($5 + [192])
	return (unreachable)
	
.LABEL $label$43
	CALL $231(($5 + [24]))
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [128]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [112])
	if ( ((int_64)*(*(($5 + [-24])) + [112]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [112]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [72]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [80])))
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [72]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($9 + [80])))
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [132]))
	$9 = *(($1 + [136]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3615730114550375936, ($2 + [8]), *(($1 + [112])))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)-1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [104]) != (int_64)*($8)) ){ goto $label$3 }
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [64]) = $9(*($1 + [64]) - *($3 + [16])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$7 = ($1 + [24])
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $264($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [128])
}

void .FUNC $84 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	$5 = ($global$0 - [272])
	$global$0 = $5
	*($5 + [264]) = $2
	CALL $6($0)
	CALL eosio_assert((($4 == 0) | ((($4 + [-1]) & [255]) <= [2])), [17069])
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$4 }
	CALL require_auth($1)
	$6 = [1]
	$7 = *($3)
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$6 }
	CALL require_auth($2)
	
.LABEL $label$6
	$6 = [1]
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	CALL require_auth(*($0))
	$6 = [1]
	$7 = *($3)
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *($3 + [4])
	goto $label$1 
	
.LABEL $label$2
	$3 = uint_32($7 >> $6)
	
.LABEL $label$1
	CALL eosio_assert(($3 <= [257]), [17266])
	$8 = ($0 + [112])
	*($5 + [256]) = $8
	CALL $78(($5 + [248]), ($5 + [256]), ($5 + [264]))
	CALL eosio_assert(((int_32)*($5 + [252]) != (int_32)[0]), [19328])
	$2 = (int_64)0
	$3 = *($5 + [252])
	if ( ($3 == 0) ){ goto $label$7 }
	$2 = (int_64)0
	
.LOOP $label$8:
	if ( ((int_64)*($3 + [8]) != (int_64)*($5 + [264])) ){ goto $label$7 }
	if ( ((int_64)*($3) != (int_64)$1) ){ goto $label$9 }
	$2 = *($3 + [112])
	
.LABEL $label$9
	CALL $79(($5 + [248]))
	$3 = *($5 + [252])
	if ( $3 ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert(((int_64)$2 != (int_64)0), [19362])
	$6 = *(($0 + [140]))
	$9 = *(($0 + [136]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$13:
	$3 = ($6 + [-24])
	$7 = *($3)
	if ( ((int_64)*($7 + [112]) == (int_64)$2) ){ goto $label$12 }
	$6 = $3
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$11 }
	if ( ((int_32)*($7 + [128]) == (int_32)$8) ){ goto $label$14 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$14
	*($5 + [244]) = $7
	*($5 + [240]) = $8
	$10 = (($5 + [240]) | [4])
	goto $label$10 
	
.LABEL $label$11
	$3 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)3615730114550375936, $2)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$15 }
	$7 = CALL $83($8, $3)
	if ( ((int_32)*($7 + [128]) == (int_32)$8) ){ goto $label$16 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$16
	*($5 + [244]) = $7
	*($5 + [240]) = $8
	$10 = (($5 + [240]) | [4])
	goto $label$10 
	
.LABEL $label$15
	$7 = [0]
	*($5 + [244]) = [0]
	*($5 + [240]) = $8
	$10 = (($5 + [240]) | [4])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [19384])
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$17 }
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)*($5 + [264])), [19403])
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$18 }
	if ( (CALL is_account(*($5 + [264])) == 0) ){ goto $label$18 }
	$11 = *($5 + [264])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$22 }
	$6 = [0]
	$7 = *([0] + [21604])
	$2 = $1
	
.LOOP $label$24:
	*((($5 + [72]) + ($3 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$6 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$23 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$24 }
	
.LABEL $label$23
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$21 }
	*($5 + [168]) = ($6 << [1])
	$7 = (($5 + [168]) | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	*($5 + [168]) = [0]
	$3 = (($5 + [168]) | [1])
	goto $label$19 
	
.LABEL $label$21
	$9 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [168]) = ($9 | [1])
	*($5 + [176]) = $7
	*($5 + [172]) = $6
	
.LABEL $label$20
	$9 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$25:
	*(($7 + $3)) = *((($5 + [72]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$25 }
	$3 = ($7 + $6)
	
.LABEL $label$19
	*($3) = [0]
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	$3 = CALL $261([19431])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$32 }
	*($5 + [72]) = ($3 << [1])
	$7 = (($5 + [72]) | [1])
	$6 = $7
	if ( $3 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$7 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($5 + [72]) = ($7 | [1])
	*($5 + [80]) = $6
	*($5 + [76]) = $3
	$7 = (($5 + [72]) | [1])
	
.LABEL $label$31
	CALL memcpy($6, [19431], $3)
	
.LABEL $label$30
	*(($6 + $3)) = [0]
	$3 = *($5 + [72])
	$6 = ($3 & [1])
	$3 = CALL $239(($5 + [168]), ( *($5 + [80]) ? $7 : $6 ), ( *($5 + [76]) ? uint_32($3 >> [1]) : $6 ))
	$6 = ($3 + [8])
	*((($5 + [224]) + [8])) = *($6)
	*($5 + [224]) = *($3)
	*($3) = (int_64)0
	*($6) = [0]
	CALL $33($0, $11, ($5 + [224]))
	if ( (*($5 + [224]) & [1]) ){ goto $label$34 }
	if ( (*($5 + [72]) & [1]) ){ goto $label$33 }
	goto $label$28 
	
.LABEL $label$34
	CALL _ZdlPv(*($5 + [232]))
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$28 }
	
.LABEL $label$33
	CALL _ZdlPv(*(($5 + [80])))
	if ( (*($5 + [168]) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	CALL $231(($5 + [72]))
	
.LABEL $label$28
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv(*($5 + [176]))
	
.LABEL $label$26
	$4 = ($0 + [32])
	$2 = *($5 + [264])
	$6 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$41 }
	
.LOOP $label$43:
	$3 = ($6 + [-24])
	$7 = *($3)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$42 }
	$6 = $3
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$41 }
	if ( ((int_32)*($7 + [120]) == (int_32)$4) ){ goto $label$40 }
	CALL eosio_assert([0], [22260])
	$2 = (int_64)0
	$11 = *($7 + [8])
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$3 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)3607749778735104000, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$18 }
	$7 = CALL $10($4, $3)
	if ( ((int_32)*($7 + [120]) == (int_32)$4) ){ goto $label$40 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$40
	$2 = (int_64)0
	$11 = *($7 + [8])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$38 }
	
.LABEL $label$39
	$6 = [0]
	$7 = *([0] + [21604])
	
.LOOP $label$45:
	*((($5 + [72]) + ($3 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$6 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$44 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$45 }
	
.LABEL $label$44
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$37 }
	*($5 + [168]) = ($6 << [1])
	$7 = (($5 + [168]) | [1])
	goto $label$36 
	
.LABEL $label$38
	*(($5 + [176])) = [0]
	*($5 + [168]) = $2
	*($5 + [168]) = [0]
	$3 = (($5 + [168]) | [1])
	goto $label$35 
	
.LABEL $label$37
	$9 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [168]) = ($9 | [1])
	*($5 + [176]) = $7
	*($5 + [172]) = $6
	
.LABEL $label$36
	$9 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$46:
	*(($7 + $3)) = *((($5 + [72]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$46 }
	$3 = ($7 + $6)
	
.LABEL $label$35
	*($3) = [0]
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	$3 = CALL $261([19431])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$52 }
	*($5 + [72]) = ($3 << [1])
	$7 = (($5 + [72]) | [1])
	$6 = $7
	if ( $3 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$7 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($5 + [72]) = ($7 | [1])
	*($5 + [80]) = $6
	*($5 + [76]) = $3
	$7 = (($5 + [72]) | [1])
	
.LABEL $label$51
	CALL memcpy($6, [19431], $3)
	
.LABEL $label$50
	*(($6 + $3)) = [0]
	$3 = *($5 + [72])
	$6 = ($3 & [1])
	$3 = CALL $239(($5 + [168]), ( *($5 + [80]) ? $7 : $6 ), ( *($5 + [76]) ? uint_32($3 >> [1]) : $6 ))
	$6 = ($3 + [8])
	*((($5 + [208]) + [8])) = *($6)
	*($5 + [208]) = *($3)
	*($3) = (int_64)0
	*($6) = [0]
	CALL $33($0, $11, ($5 + [208]))
	if ( (*($5 + [208]) & [1]) ){ goto $label$54 }
	if ( (*($5 + [72]) & [1]) ){ goto $label$53 }
	goto $label$48 
	
.LABEL $label$54
	CALL _ZdlPv(*($5 + [216]))
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$48 }
	
.LABEL $label$53
	CALL _ZdlPv(*(($5 + [80])))
	if ( (*($5 + [168]) & [1]) ){ goto $label$47 }
	goto $label$18 
	
.LABEL $label$49
	CALL $231(($5 + [72]))
	
.LABEL $label$48
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$47
	CALL _ZdlPv(*($5 + [176]))
	
.LABEL $label$18
	if ( ((int_64)*(*($10) + [16]) <= (int_64)0) ){ goto $label$56 }
	$1 = *($0)
	*($5 + [136]) = [17468]
	*($5 + [140]) = CALL $261([17468])
	*($5 + [32]) = *($5 + [136])
	$3 = CALL $22(($5 + [144]), ($5 + [32]))
	*($5 + [152]) = $1
	*($5 + [160]) = *($3)
	$1 = *(*($10) + [104])
	*($5 + [120]) = [17475]
	*($5 + [124]) = CALL $261([17475])
	*($5 + [24]) = *($5 + [120])
	$4 = CALL $22(($5 + [128]), ($5 + [24]))
	$7 = *($10)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$3 = CALL $261([19466])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$55 }
	$9 = ($7 + [16])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$59 }
	*($5 + [56]) = ($3 << [1])
	$6 = (($5 + [56]) | [1])
	if ( $3 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$12 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($5 + [56]) = ($12 | [1])
	*($5 + [64]) = $6
	*($5 + [60]) = $3
	
.LABEL $label$58
	CALL memcpy($6, [19466], $3)
	
.LABEL $label$57
	*(($6 + $3)) = [0]
	$2 = *(($9 + [8]))
	$11 = *($9)
	$13 = *($7)
	$3 = (($5 + [56]) + [8])
	*(($5 + [112])) = *($3)
	*(($5 + [96])) = $2
	*($3) = [0]
	*($5 + [72]) = *($0)
	$2 = *($5 + [56])
	*($5 + [56]) = (int_64)0
	*($5 + [80]) = $13
	*($5 + [104]) = $2
	*($5 + [88]) = $11
	$3 = CALL $23(($5 + [168]), ($5 + [152]), $1, *($4), ($5 + [72]))
	CALL $24($3)
	$6 = *($3 + [28])
	if ( ($6 == 0) ){ goto $label$60 }
	*(($3 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$60
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$61 }
	*(($3 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$61
	if ( ((*(($5 + [104])) & [1]) == 0) ){ goto $label$62 }
	CALL _ZdlPv(*(($5 + [112])))
	
.LABEL $label$62
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$63 }
	CALL _ZdlPv(*(($5 + [64])))
	
.LABEL $label$63
	$3 = *($10)
	$2 = *($3 + [104])
	$1 = *($3 + [16])
	$11 = *(($3 + [24]))
	*((($5 + [8]) + [8])) = $11
	*((($5 + [40]) + [8])) = $11
	*($5 + [40]) = $1
	*($5 + [8]) = $1
	CALL $11($0, $2, ($5 + [8]), [3])
	
.LABEL $label$56
	$4 = ($0 + [352])
	$1 = *($0)
	$6 = *(($0 + [380]))
	$9 = *(($0 + [376]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$66 }
	
.LOOP $label$68:
	$3 = ($6 + [-24])
	$7 = *($3)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$67 }
	$6 = $3
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$68 }
	goto $label$66 
	
.LABEL $label$67
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$66 }
	if ( ((int_32)*($7 + [292]) == (int_32)$4) ){ goto $label$69 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$69
	if ( $7 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$3 = CALL db_find_i64(*($4), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$64 }
	$7 = CALL $15($4, $3)
	if ( ((int_32)*($7 + [292]) == (int_32)$4) ){ goto $label$65 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$65
	$1 = *($0)
	*($5 + [72]) = ($5 + [240])
	CALL $85($4, $7, $1, ($5 + [72]))
	
.LABEL $label$64
	$1 = *($5 + [240])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$70 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$70
	$6 = CALL db_next_i64(*($3 + [132]), ($5 + [72]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$71 }
	CALL $83((CASTING uint_32)(uint_64 $1), $6)
	
.LABEL $label$71
	CALL $86($8, $3)
	$global$0 = ($5 + [272])
	return (unreachable)
	
.LABEL $label$55
	CALL $231(($5 + [56]))
	(unreachable)
	(unreachable)
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([144])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [72 align=4]) = (int_64)0
	*($5 + [80]) = [0]
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [128]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [72])
	*($3 + [60]) = ($5 + [88])
	*($3 + [64]) = ($5 + [104])
	*($3 + [68]) = ($5 + [112])
	*($3 + [72]) = ($5 + [120])
	CALL $203(($3 + [40]), ($3 + [32]))
	*($5 + [136]) = [-1]
	*($5 + [132]) = $1
	*($3 + [32]) = $5
	$7 = *($5 + [112])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $81(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [80])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	*($1 + [120]) = ((int_64)*($1 + [120]) + (int_64)1)
	$7 = *($3)
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$4
	$9 = ((int_64)*($1 + [64]) + (int_64)*($7))
	*($1 + [64]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$6
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [168]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [160]) + (int_64)*($3))
	*($1 + [160]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [160]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [120])
	$8 = ($1 + [24])
	$3 = *($1 + [280])
	$10 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [273])
	$9 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $8
	*($5 + [76]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $10
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [80])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = *($4 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$7 = ($1 + [16])
	$8 = *(*($4 + [8]) + [8])
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $10
	$11 = $6
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $10
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = ((int_32)$6 < (int_32)[6])
	$12 = ($6 + [1])
	$6 = $12
	if ( $11 ){ goto $label$5 }
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [21690])
	
.LABEL $label$1
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $8
	$6 = *($4 + [12])
	*($1 + [32 align=4]) = *($6)
	*(($1 + [61])) = *(($6 + [29]))
	*(($1 + [56])) = *(($6 + [24]))
	*(($1 + [48])) = *(($6 + [16]))
	*(($1 + [40])) = *(($6 + [8]))
	$12 = ($1 + [72])
	CALL $234($12, *($4 + [16]))
	*($1 + [112]) = CALL current_time()
	*($1 + [120]) = CALL current_time()
	*($1 + [104]) = *(*($4 + [20]))
	$4 = ($1 + [120])
	$13 = ($1 + [112])
	$14 = ($1 + [32])
	$9 = *($1 + [32])
	$6 = [105]
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	$11 = *(($1 + [72]))
	$11 = ( *(($1 + [76])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$6 = ($11 + $6)
	$9 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($6 <= [513]) ){ goto $label$9 }
	$11 = CALL $264($6)
	goto $label$8 
	
.LABEL $label$9
	$11 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$8
	*($3 + [4]) = $11
	*($3) = $11
	*($3 + [8]) = ($11 + $6)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $7
	*($3 + [36]) = $14
	*($3 + [40]) = $12
	*($3 + [44]) = ($1 + [88])
	*($3 + [48]) = ($1 + [104])
	*($3 + [52]) = $13
	*($3 + [56]) = $4
	CALL $201(($3 + [24]), ($3 + [16]))
	$9 = *(($1 + [112]))
	*($1 + [132]) = CALL db_store_i64(*($5 + [8]), (int_64)3615730114550375936, *(*($0 + [8])), $9, $11, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL $267($11)
	
.LABEL $label$10
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$11 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$9 = *(($1 + [112]))
	$10 = *(($5 + [8]))
	$8 = *(*(($0 + [8])))
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [136]) = CALL db_idx64_store($10, (int_64)3615730114550375936, $8, $9, ($3 + [24]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $149 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	*($4 + [440]) = [0]
	CALL eosio_assert([0], [22334])
	$3 = ($4 + [440])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	*($4 + [440]) = [0]
	$3 = ($4 + [440])
	
.LABEL $label$1
	CALL memcpy($3, $2, [1])
	*(($4 + [28])) = ($2 + [1])
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [116])) = [0]
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [128])) = $0
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [248])) = $0
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [368])) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = [0]
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [388])) = (int_64)0
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [436])) = [0]
	*($4 + [400]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *($4 + [440])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $267($2)
	
.LABEL $label$6
	CALL $156(($4 + [8]))
	$global$0 = ($4 + [448])
	return [1]
}

int_32 .FUNC $148 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [440]) = [0]
	*($4 + [432]) = (int_64)0
	$3 = ($2 + $7)
	$8 = (($4 + [432]) + [8])
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	CALL memcpy(($4 + [432]), $2, [8])
	$9 = ($2 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL memcpy(($4 + [432]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [108])) = [0]
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [9])
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [120])) = $0
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [188])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [240])) = $0
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*(($4 + [320])) = $0
	*(($4 + [328])) = (int_64)-1
	*(($4 + [336])) = (int_64)0
	*(($4 + [344])) = [0]
	*(($4 + [360])) = $0
	*(($4 + [368])) = (int_64)-1
	*(($4 + [376])) = [0]
	*($4 + [272]) = $0
	*($4 + [312]) = $0
	*($4 + [352]) = $0
	*(($4 + [380])) = (int_64)0
	*(($4 + [400])) = $0
	*(($4 + [408])) = (int_64)-1
	*(($4 + [416])) = (int_64)0
	*(($4 + [424])) = [0]
	*(($4 + [428])) = [0]
	*($4 + [392]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$8 = *(($4 + [440]))
	$0 = *($4 + [432])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $267($2)
	
.LABEL $label$7
	CALL $156($4)
	$global$0 = ($4 + [448])
	return [1]
}

int_32 .FUNC $145 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [560])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [496])) = [0]
	*($4 + [472]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [452]) = $2
	*($4 + [448]) = $2
	*($4 + [456]) = ($2 + $5)
	*($4 + [544]) = ($4 + [448])
	*($4 + [16]) = ($4 + [464])
	CALL $168(($4 + [16]), ($4 + [544]))
	*(($3 = ($4 + [8]))) = *($4 + [456])
	*($4) = *($4 + [448])
	$3 = *($3)
	*((($4 + [512]) + [8])) = $3
	*(($6 = (($4 + [528]) + [8]))) = $3
	$7 = *($4)
	*($4 + [528]) = $7
	*($4 + [512]) = $7
	$3 = *($6)
	*((($4 + [544]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [528])
	*($4 + [32]) = $1
	*($4 + [544]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [124])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [176])) = $0
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*(($4 + [432])) = (int_64)0
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [444])) = [0]
	*(($4 + [440])) = [0]
	*($4 + [548]) = ($4 + [504])
	*($4 + [544]) = ($4 + [16])
	CALL $169(($4 + [544]), ($4 + [464]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [16]))
	if ( ((*($4 + [488]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [496])))
	
.LABEL $label$5
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $144 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [560])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [472]) + [24])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [500]) = [0]
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [544]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $166(($4 + [24]), ($4 + [544]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [512]) + [8])) = $3
	*(($6 = (($4 + [528]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [528]) = $7
	*($4 + [512]) = $7
	$3 = *($6)
	*((($4 + [544]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [528])
	*($4 + [40]) = $1
	*($4 + [544]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [548]) = ($4 + [504])
	*($4 + [544]) = ($4 + [24])
	CALL $167(($4 + [544]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [488]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [496])))
	
.LABEL $label$5
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $147 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [576])
	$global$0 = $3
	*(($4 = $3) + [520]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [488])) = (int_64)0
	*((($4 + [472]) + [24])) = (int_64)0
	*((($4 + [472]) + [40])) = [0]
	*($4 + [472]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [516]) = [0]
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [560]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $170(($4 + [24]), ($4 + [560]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [528]) + [8])) = $3
	*(($6 = (($4 + [544]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [544]) = $7
	*($4 + [528]) = $7
	$3 = *($6)
	*((($4 + [560]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [544])
	*($4 + [40]) = $1
	*($4 + [560]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [564]) = ($4 + [520])
	*($4 + [560]) = ($4 + [24])
	CALL $171(($4 + [560]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( (*($4 + [504]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [492]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*(($4 + [512])))
	if ( ((*($4 + [492]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [500])))
	$2 = [1]
	if ( ((*($4 + [480]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [480]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [576])
	return $2
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [488])))
	$global$0 = ($4 + [576])
	return $2
}

int_32 .FUNC $146 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [440]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	
.LABEL $label$5
	CALL memcpy(($4 + [440]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [116])) = [0]
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [128])) = $0
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [196])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [248])) = $0
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [328])) = $0
	*(($4 + [336])) = (int_64)-1
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = [0]
	*(($4 + [368])) = $0
	*(($4 + [376])) = (int_64)-1
	*(($4 + [384])) = [0]
	*($4 + [280]) = $0
	*($4 + [320]) = $0
	*($4 + [360]) = $0
	*(($4 + [388])) = (int_64)0
	*(($4 + [408])) = $0
	*(($4 + [416])) = (int_64)-1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = [0]
	*(($4 + [436])) = [0]
	*($4 + [400]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [440])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $267($2)
	
.LABEL $label$7
	CALL $156(($4 + [8]))
	$global$0 = ($4 + [448])
	return [1]
}

int_32 .FUNC $141 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [560])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [472]) + [24])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [544]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $161(($4 + [24]), ($4 + [544]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [512]) + [8])) = $3
	*(($6 = (($4 + [528]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [528]) = $7
	*($4 + [512]) = $7
	$3 = *($6)
	*((($4 + [544]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [528])
	*($4 + [40]) = $1
	*($4 + [544]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [548]) = ($4 + [504])
	*($4 + [544]) = ($4 + [24])
	CALL $162(($4 + [544]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [488]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [496])))
	
.LABEL $label$5
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $140 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [624])
	$global$0 = $3
	*(($4 = $3) + [568]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [472]) + [24])) = (int_64)0
	*(($4 + [548])) = [0]
	*(($4 + [540])) = (int_64)0
	*(($4 + [532])) = (int_64)0
	*(($4 + [524])) = (int_64)0
	*(($4 + [516])) = (int_64)0
	*((($4 + [472]) + [88])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [512]) = [0]
	*($4 + [552]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [608]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $159(($4 + [24]), ($4 + [608]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [576]) + [8])) = $3
	*(($6 = (($4 + [592]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [592]) = $7
	*($4 + [576]) = $7
	$3 = *($6)
	*((($4 + [608]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [592])
	*($4 + [40]) = $1
	*($4 + [608]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*((($4 + [24]) + [88])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [612]) = ($4 + [568])
	*($4 + [608]) = ($4 + [24])
	CALL $160(($4 + [608]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [552]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [560])))
	
.LABEL $label$5
	$global$0 = ($4 + [624])
	return [1]
}

int_32 .FUNC $143 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [544])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = [0]
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $7)
	*($4 + [528]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $165(($4 + [24]), ($4 + [528]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [496]) + [8])) = $3
	*(($8 = (($4 + [512]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [512]) = $9
	*($4 + [496]) = $9
	$3 = *($8)
	*((($4 + [528]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [512])
	*($4 + [40]) = $1
	*($4 + [528]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [488])
	$0 = *($4 + [480])
	$1 = *($4 + [472])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $267($2)
	
.LABEL $label$5
	CALL $156(($4 + [24]))
	$global$0 = ($4 + [544])
	return [1]
}

int_32 .FUNC $142 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [544])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [480])) = [0]
	*($4 + [464]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [484]) = [0]
	*($4 + [452]) = $2
	*($4 + [448]) = $2
	*($4 + [456]) = ($2 + $5)
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($4 + [452])
	
.LABEL $label$4
	$6 = ($4 + [484])
	CALL memcpy(($4 + [464]), $3, [8])
	*($4 + [452]) = ($3 + [8])
	CALL $163(($4 + [448]), (($4 + [464]) + [8]))
	$3 = *($4 + [452])
	$7 = (($4 + [448]) + [8])
	if ( ((int_32)*($7) != (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$3 = *($4 + [452])
	
.LABEL $label$5
	CALL memcpy($6, $3, [1])
	*($4 + [452]) = (*($4 + [452]) + [1])
	*(($3 = ($4 + [8]))) = *($7)
	*($4) = *($4 + [448])
	$3 = *($3)
	*((($4 + [496]) + [8])) = $3
	*(($6 = (($4 + [512]) + [8]))) = $3
	$8 = *($4)
	*($4 + [512]) = $8
	*($4 + [496]) = $8
	$3 = *($6)
	*((($4 + [528]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [512])
	*($4 + [32]) = $1
	*($4 + [528]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [124])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [176])) = $0
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*(($4 + [432])) = (int_64)0
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [444])) = [0]
	*(($4 + [440])) = [0]
	*($4 + [532]) = ($4 + [488])
	*($4 + [528]) = ($4 + [16])
	CALL $164(($4 + [528]), ($4 + [464]))
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $267($2)
	
.LABEL $label$6
	CALL $156(($4 + [16]))
	if ( ((*($4 + [472]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($4 + [480])))
	
.LABEL $label$7
	$global$0 = ($4 + [544])
	return [1]
}

int_64 .FUNC $72 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2 + [40]) = $1
	$3 = ($0 + [72])
	*($2 + [32]) = $3
	CALL $26(($2 + [24]), ($2 + [32]), ($2 + [40]))
	*($2 + [16]) = [0]
	$4 = (int_64)0
	*($2 + [8]) = (int_64)0
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = (int_64)0
	$7 = (($2 + [8]) + [8])
	
.LOOP $label$3:
	if ( ((int_64)*($5 + [8]) != (int_64)*($2 + [40])) ){ goto $label$2 }
	$8 = ($5 + [88])
	$9 = *($2 + [12])
	if ( ((int_32)$9 == (int_32)*($7)) ){ goto $label$5 }
	*($9) = *($8)
	*($2 + [12]) = ($9 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL $27(($2 + [8]), $8)
	$5 = *($2 + [28])
	
.LABEL $label$4
	$1 = *($5 + [16])
	$6 = ( $1 ? $6 : (uint_64)($6 <= $1) )
	CALL $28(($2 + [24]))
	$5 = *($2 + [28])
	if ( $5 ){ goto $label$3 }
	
.LABEL $label$2
	$4 = (int_64)0
	$11 = *($2 + [12])
	$10 = *($2 + [8])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$6 }
	$12 = ($0 + [100])
	$13 = ($0 + [96])
	$14 = ($0 + [80])
	$0 = ($0 + [72])
	
.LOOP $label$7:
	$1 = *($10)
	$9 = *($12)
	$7 = *($13)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$12:
	$5 = ($9 + [-24])
	$8 = *($5)
	if ( ((int_64)*($8 + [88]) == (int_64)$1) ){ goto $label$11 }
	$9 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$10 }
	if ( ((int_32)*($8 + [120]) != (int_32)$3) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = [0]
	$5 = CALL db_find_i64(*($0), *($14), (int_64)4292657617207033856, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $29($3, $5)
	if ( ((int_32)*($8 + [120]) == (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [22260])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17532])
	if ( ((int_64)*($8 + [16]) != (int_64)$6) ){ goto $label$13 }
	$4 = *($8)
	
.LABEL $label$13
	$10 = ($10 + [8])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$7 }
	$11 = *($2 + [8])
	
.LABEL $label$6
	if ( ($11 == 0) ){ goto $label$1 }
	*($2 + [12]) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $4
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)-1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [112]) != (int_64)*($8)) ){ goto $label$3 }
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [48]) = $9(*($1 + [48]) - *($3 + [16])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$7 = ($1 + [16])
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $264($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [128])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [148]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [136]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [144])))
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [136]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($9 + [144])))
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [152]))
	$9 = *($1 + [156])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6609776272782393344, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_64 $32
	int_64 $33
	$4 = ($global$0 - [400])
	$global$0 = $4
	*($4 + [392]) = $1
	*($4 + [391]) = $3
	CALL $6($0)
	CALL eosio_assert(($3 <= [2]), [17069])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$2 }
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth(*($0))
	
.LABEL $label$1
	CALL $7($0, $1)
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$4 }
	$3 = uint_32($3 >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($2 + [4])
	
.LABEL $label$3
	CALL eosio_assert(($3 <= [257]), [17266])
	$5 = ($0 + [152])
	$7 = *(($0 + [180]))
	$6 = *(($0 + [176]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$7 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	if ( ((int_32)*($8 + [148]) == (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$3 = CALL db_find_i64(*($5), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $9($5, $3)
	if ( ((int_32)*($8 + [148]) == (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$5
	CALL eosio_assert(($8 == 0), [17300])
	$9 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$11 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*($8 + [120]) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [22260])
	goto $label$9 
	
.LABEL $label$10
	$3 = CALL db_find_i64(*($9), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$13 }
	$8 = CALL $10($9, $3)
	if ( ((int_32)*($8 + [120]) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [22260])
	goto $label$9 
	
.LABEL $label$13
	$8 = [0]
	
.LABEL $label$9
	*($4 + [380]) = $8
	*($4 + [376]) = $9
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17387])
	$3 = [0]
	if ( (*($8 + [80]) == 0) ){ goto $label$14 }
	$3 = ((int_64)*($8 + [16]) > (int_64)0)
	
.LABEL $label$14
	CALL eosio_assert($3, [19064])
	$10 = ($0 + [72])
	*($4 + [368]) = $10
	CALL $26(($4 + [360]), ($4 + [368]), ($4 + [392]))
	CALL eosio_assert(((int_32)*($4 + [364]) != (int_32)[0]), [19077])
	*($4 + [352]) = [0]
	$1 = (int_64)0
	*($4 + [344]) = (int_64)0
	$11 = CALL $72($0, *($4 + [392]))
	$3 = *($4 + [364])
	if ( ($3 == 0) ){ goto $label$15 }
	$1 = (int_64)0
	$8 = (($4 + [344]) + [8])
	
.LOOP $label$16:
	if ( ((int_64)*($3 + [8]) != (int_64)*($4 + [392])) ){ goto $label$15 }
	$7 = ($3 + [88])
	if ( ((int_64)*($3) != (int_64)$11) ){ goto $label$18 }
	$1 = *($7)
	goto $label$17 
	
.LABEL $label$18
	$3 = *($4 + [348])
	if ( ((int_32)$3 == (int_32)*($8)) ){ goto $label$19 }
	*($3) = *($7)
	*($4 + [348]) = ($3 + [8])
	goto $label$17 
	
.LABEL $label$19
	CALL $27(($4 + [344]), $7)
	
.LABEL $label$17
	CALL $28(($4 + [360]))
	$3 = *($4 + [364])
	if ( $3 ){ goto $label$16 }
	
.LABEL $label$15
	$12 = ($0 + [352])
	$11 = *($0)
	$7 = *(($0 + [380]))
	$8 = *(($0 + [376]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$23:
	$3 = ($7 + [-24])
	$13 = *($3)
	if ( ((int_64)*($13) == (int_64)$11) ){ goto $label$22 }
	$7 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	if ( ((int_32)*($13 + [292]) == (int_32)$12) ){ goto $label$20 }
	CALL eosio_assert([0], [22260])
	goto $label$20 
	
.LABEL $label$21
	$13 = [0]
	$3 = CALL db_find_i64(*($12), *(($0 + [360])), (int_64)-4157493845350678528, $11)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$13 = CALL $15($12, $3)
	if ( ((int_32)*($13 + [292]) == (int_32)$12) ){ goto $label$20 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$20
	CALL eosio_assert(((int_64)$1 != (int_64)0), [19117])
	$7 = *(($0 + [100]))
	$6 = *(($0 + [96]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$25 }
	
.LOOP $label$27:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [88]) == (int_64)$1) ){ goto $label$26 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$25 }
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$24 }
	CALL eosio_assert([0], [22260])
	goto $label$24 
	
.LABEL $label$25
	$3 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)4292657617207033856, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$28 }
	$8 = CALL $29($10, $3)
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$24 }
	CALL eosio_assert([0], [22260])
	goto $label$24 
	
.LABEL $label$28
	$8 = [0]
	
.LABEL $label$24
	*($4 + [340]) = $8
	*($4 + [336]) = $10
	$7 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17532])
	CALL eosio_assert(((int_64)*(*($4 + [340]) + [112]) == (int_64)*(*($4 + [380]) + [112])), [17557])
	$1 = *(*($4 + [340]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$32 }
	$8 = *([0] + [21604])
	
.LOOP $label$34:
	*((($4 + [160]) + ($3 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$7 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$33 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$34 }
	
.LABEL $label$33
	*(($4 + [264])) = [0]
	*($4 + [256]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$31 }
	*($4 + [256]) = ($7 << [1])
	$8 = (($4 + [256]) | [1])
	goto $label$30 
	
.LABEL $label$32
	*(($4 + [264])) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [256]) = [0]
	$3 = (($4 + [256]) | [1])
	goto $label$29 
	
.LABEL $label$31
	$6 = (($7 + [16]) & [-16])
	$8 = CALL _Znwj($6)
	*($4 + [256]) = ($6 | [1])
	*($4 + [264]) = $8
	*($4 + [260]) = $7
	
.LABEL $label$30
	$6 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$35:
	*(($8 + $3)) = *((($4 + [160]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$35 }
	$3 = ($8 + $7)
	
.LABEL $label$29
	*($3) = [0]
	$3 = CALL $238(($4 + [256]), ( [17531] ? [17592] : ((int_32)*($4 + [348]) == (int_32)*($4 + [344])) ))
	$7 = ($3 + [8])
	*((($4 + [320]) + [8])) = *($7)
	*($4 + [320]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	if ( ((*($4 + [256]) & [1]) == 0) ){ goto $label$36 }
	CALL _ZdlPv(*($4 + [264]))
	
.LABEL $label$36
	$15 = *($4 + [344])
	$14 = *($4 + [348])
	$3 = ((int_32)$14 == (int_32)$15)
	if ( $3 ){ goto $label$41 }
	if ( $3 ){ goto $label$41 }
	$16 = (($4 + [160]) + [32])
	$17 = (($4 + [160]) + [16])
	$18 = (($4 + [144]) | [1])
	$19 = (($4 + [160]) | [1])
	$20 = (($4 + [296]) | [1])
	$21 = ($0 + [100])
	$22 = ($0 + [96])
	$23 = ($0 + [80])
	$24 = ($0 + [72])
	$25 = (($4 + [296]) + [8])
	$26 = ($4 + [284])
	$27 = ($4 + [200])
	$28 = ($4 + [276])
	$11 = (int_64)0
	
.LOOP $label$42:
	$1 = *($15)
	$7 = *($21)
	$6 = *($22)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$46 }
	
.LOOP $label$48:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [88]) == (int_64)$1) ){ goto $label$47 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$46 }
	if ( ((int_32)*($8 + [120]) != (int_32)$10) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$46
	$3 = CALL db_find_i64(*($24), *($23), (int_64)4292657617207033856, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$44 }
	$8 = CALL $29($10, $3)
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$43 }
	
.LABEL $label$45
	CALL eosio_assert([0], [22260])
	goto $label$43 
	
.LABEL $label$44
	$8 = [0]
	
.LABEL $label$43
	*($4 + [316]) = $8
	*($4 + [312]) = $10
	$11 = ((int_64)$11 + (int_64)1)
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17532])
	CALL eosio_assert(((int_64)*(*($4 + [316]) + [112]) == (int_64)*(*($4 + [380]) + [112])), [17557])
	$1 = *(*($4 + [316]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$52 }
	$7 = [0]
	$8 = *([0] + [21604])
	
.LOOP $label$54:
	*((($4 + [160]) + ($3 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$7 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$53 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$54 }
	
.LABEL $label$53
	*($25) = [0]
	*($4 + [296]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$51 }
	*($4 + [296]) = ($7 << [1])
	$8 = $20
	goto $label$50 
	
.LABEL $label$52
	*($25) = [0]
	*($4 + [296]) = (int_64)0
	*($4 + [296]) = [0]
	$3 = $20
	goto $label$49 
	
.LABEL $label$51
	$6 = (($7 + [16]) & [-16])
	$8 = CALL _Znwj($6)
	*($25) = $8
	*($4 + [296]) = ($6 | [1])
	*($4 + [300]) = $7
	
.LABEL $label$50
	$6 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$55:
	*(($8 + $3)) = *((($4 + [160]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$55 }
	$3 = ($8 + $7)
	
.LABEL $label$49
	*($3) = [0]
	CALL $30(($4 + [160]), ($4 + [296]), ( [17531] ? [17592] : ((int_64)$11 == (int_64)(CASTING uint_64)(uint_32 int_32((*($4 + [348]) - *($4 + [344])) >> [3]))) ))
	$3 = *($4 + [160])
	$7 = ($3 & [1])
	$29 = (($4 + [160]) + [8])
	CALL $239(($4 + [320]), ( *($29) ? $19 : $7 ), ( *($4 + [164]) ? uint_32($3 >> [1]) : $7 ))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$56 }
	CALL _ZdlPv(*($29))
	
.LABEL $label$56
	$1 = *($0)
	*($4 + [224]) = [17468]
	*($4 + [228]) = CALL $261([17468])
	*($4 + [56]) = *($4 + [224])
	CALL $22(($4 + [232]), ($4 + [56]))
	*((($4 + [240]) + [8])) = *($4 + [232])
	*($4 + [240]) = $1
	$1 = *(*($4 + [316]) + [112])
	*($4 + [208]) = [17475]
	*($4 + [212]) = CALL $261([17475])
	*($4 + [48]) = *($4 + [208])
	CALL $22(($4 + [216]), ($4 + [48]))
	$8 = *($4 + [316])
	*(($7 = (($4 + [144]) + [8]))) = [0]
	*($4 + [144]) = (int_64)0
	$3 = CALL $261([19136])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$40 }
	$6 = ($8 + [16])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$59 }
	*($4 + [144]) = ($3 << [1])
	$30 = $18
	if ( $3 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$31 = (($3 + [16]) & [-16])
	$30 = CALL _Znwj($31)
	*($7) = $30
	*($4 + [144]) = ($31 | [1])
	*($4 + [148]) = $3
	
.LABEL $label$58
	CALL memcpy($30, [19136], $3)
	
.LABEL $label$57
	*(($30 + $3)) = [0]
	*($29) = *($8)
	$32 = *(($6 + [8]))
	$33 = *($6)
	*($16) = *($4 + [144])
	*(($16 + [8])) = *($7)
	*(($17 + [8])) = $32
	*($17) = $33
	*($7) = [0]
	*($4 + [160]) = *($0)
	*($4 + [144]) = (int_64)0
	CALL $24(CALL $23(($4 + [256]), ($4 + [240]), $1, *($4 + [216]), ($4 + [160])))
	$3 = *($26)
	if ( ($3 == 0) ){ goto $label$60 }
	*((($4 + [256]) + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$60
	$3 = *((($4 + [256]) + [16]))
	if ( ($3 == 0) ){ goto $label$61 }
	*($28) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$61
	if ( ((*($16) & [1]) == 0) ){ goto $label$62 }
	CALL _ZdlPv(*($27))
	
.LABEL $label$62
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$63 }
	CALL _ZdlPv(*($7))
	
.LABEL $label$63
	$3 = *($4 + [316])
	$32 = *($3 + [112])
	$1 = *($3 + [16])
	$33 = *(($3 + [24]))
	*((($4 + [32]) + [8])) = $33
	*((($4 + [128]) + [8])) = $33
	*($4 + [128]) = $1
	*($4 + [32]) = $1
	CALL $11($0, $32, ($4 + [32]), [3])
	if ( ($13 == 0) ){ goto $label$64 }
	$1 = *($0)
	*($4 + [160]) = ($4 + [312])
	CALL $73($12, $13, $1, ($4 + [160]))
	
.LABEL $label$64
	$1 = *($4 + [312])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$65 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$65
	$7 = CALL db_next_i64(*($3 + [124]), ($4 + [160]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$66 }
	CALL $29((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$66
	CALL $32($10, $3)
	if ( ((*($4 + [296]) & [1]) == 0) ){ goto $label$67 }
	CALL _ZdlPv(*($25))
	
.LABEL $label$67
	$15 = ($15 + [8])
	if ( ((int_32)$15 != (int_32)$14) ){ goto $label$42 }
	
.LABEL $label$41
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$69 }
	$3 = uint_32($3 >> [1])
	$7 = ($2 + [1])
	goto $label$68 
	
.LABEL $label$69
	$3 = *($2 + [4])
	$7 = *($2 + [8])
	
.LABEL $label$68
	*($4 + [116]) = $3
	*($4 + [112]) = $7
	*($4 + [24]) = *($4 + [112])
	if ( (CALL is_account(*(CALL $22(($4 + [120]), ($4 + [24])))) == 0) ){ goto $label$73 }
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$72 }
	$3 = uint_32($3 >> [1])
	$7 = ($2 + [1])
	goto $label$71 
	
.LABEL $label$73
	*($4 + [96]) = [17531]
	*($4 + [100]) = CALL $261([17531])
	*($4 + [16]) = *($4 + [96])
	CALL $22(($4 + [296]), ($4 + [16]))
	goto $label$70 
	
.LABEL $label$72
	$3 = *($2 + [4])
	$7 = *($2 + [8])
	
.LABEL $label$71
	*($4 + [108]) = $3
	*($4 + [104]) = $7
	*($4 + [8]) = *($4 + [104])
	CALL $22(($4 + [296]), ($4 + [8]))
	
.LABEL $label$70
	$1 = *($0)
	*($4 + [164]) = ($4 + [336])
	*($4 + [160]) = ($4 + [392])
	*($4 + [168]) = ($4 + [376])
	*($4 + [172]) = ($4 + [391])
	*($4 + [176]) = ($4 + [296])
	*($4 + [180]) = ($4 + [320])
	*($4 + [240]) = $1
	if ( ((int_64)*(($0 + [152])) == (int_64)CALL current_receiver()) ){ goto $label$74 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$74
	*($4 + [256]) = $5
	*($4 + [260]) = ($4 + [160])
	*($4 + [264]) = ($4 + [240])
	*(($3 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [64]) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [136 align=4]) = (int_64)0
	*($3 + [144]) = [0]
	*($3 + [148]) = $5
	CALL $74(($4 + [256]), $3)
	*($4 + [144]) = $3
	$1 = *($3)
	*($4 + [256]) = $1
	$8 = *($3 + [152])
	*($4 + [312]) = $8
	$6 = ($0 + [180])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [184]))) ){ goto $label$76 }
	*($7 + [8]) = $1
	*($7 + [16]) = $8
	*($4 + [144]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	$3 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( ($3 == 0) ){ goto $label$75 }
	goto $label$39 
	
.LABEL $label$76
	CALL $44(($0 + [176]), ($4 + [144]), ($4 + [256]), ($4 + [312]))
	$3 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( $3 ){ goto $label$39 }
	
.LABEL $label$75
	if ( ($13 == 0) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$40
	CALL $231(($4 + [144]))
	
.LABEL $label$39
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$77 }
	CALL _ZdlPv(*(($3 + [144])))
	
.LABEL $label$77
	CALL _ZdlPv($3)
	if ( ($13 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	$1 = *($0)
	*($4 + [160]) = ($4 + [336])
	CALL $75($12, $13, $1, ($4 + [160]))
	
.LABEL $label$37
	$1 = *($4 + [336])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$78 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$78
	$7 = CALL db_next_i64(*($3 + [124]), ($4 + [160]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$79 }
	CALL $29((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$79
	CALL $32($10, $3)
	if ( ($13 == 0) ){ goto $label$80 }
	CALL $76($12, $13, *($0))
	
.LABEL $label$80
	$1 = *($4 + [376])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$81 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$81
	$7 = CALL db_next_i64(*($3 + [124]), ($4 + [160]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$82 }
	CALL $10((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$82
	CALL $36($9, $3)
	$1 = *($4 + [392])
	if ( ((int_32)*($4 + [391]) != (int_32)[1]) ){ goto $label$94 }
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	$3 = CALL $261([18326])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$84 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$93 }
	*($4 + [80]) = ($3 << [1])
	$7 = (($4 + [80]) | [1])
	if ( $3 ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$94
	CALL $46($0, $1)
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$1 = *($4 + [392])
	$3 = CALL $261([18326])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$83 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$90 }
	*($4 + [64]) = ($3 << [1])
	$7 = (($4 + [64]) | [1])
	if ( $3 ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$93
	$8 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [80]) = ($8 | [1])
	*($4 + [88]) = $7
	*($4 + [84]) = $3
	
.LABEL $label$92
	CALL memcpy($7, [18326], $3)
	
.LABEL $label$91
	*(($7 + $3)) = [0]
	CALL $47($0, $1, ($4 + [80]), [2])
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$87 }
	CALL _ZdlPv(*($4 + [88]))
	if ( (*($4 + [320]) & [1]) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$90
	$8 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [64]) = ($8 | [1])
	*($4 + [72]) = $7
	*($4 + [68]) = $3
	
.LABEL $label$89
	CALL memcpy($7, [18326], $3)
	
.LABEL $label$88
	*(($7 + $3)) = [0]
	CALL $47($0, $1, ($4 + [64]), [4])
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$87 }
	CALL _ZdlPv(*($4 + [72]))
	
.LABEL $label$87
	if ( ((*($4 + [320]) & [1]) == 0) ){ goto $label$85 }
	
.LABEL $label$86
	CALL _ZdlPv(*($4 + [328]))
	
.LABEL $label$85
	$3 = *($4 + [344])
	if ( ($3 == 0) ){ goto $label$95 }
	*($4 + [348]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$95
	$global$0 = ($4 + [400])
	return (unreachable)
	
.LABEL $label$84
	CALL $231(($4 + [80]))
	
.LABEL $label$83
	CALL $231(($4 + [64]))
	(unreachable)
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	$5 = *($1 + [280])
	$6 = ( *(($1 + [284])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [273])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [280])
	$8 = ($1 + [8])
	$9 = *($1)
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$3 = CALL $264($5)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [24])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [112])
	*($4 + [76]) = ($1 + [120])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [144])
	*($4 + [88]) = ($1 + [160])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [184])
	*($4 + [100]) = ($1 + [200])
	*($4 + [104]) = ($1 + [216])
	*($4 + [112]) = ($1 + [248])
	*($4 + [108]) = ($1 + [232])
	*($4 + [116]) = ($1 + [264])
	*($4 + [120]) = ($1 + [272])
	*($4 + [124]) = $6
	CALL $181(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $3, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $267($3)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [128])
}

void .FUNC $77 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = ($global$0 - [176])
	$global$0 = $7
	*($7 + [120]) = $2
	*($7 + [128]) = $1
	*($7 + [112]) = $4
	CALL $6($0)
	CALL require_auth(*($0))
	CALL $7($0, $2)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [19207])
	if ( (CALL is_account($2) == 0) ){ goto $label$1 }
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$8 = [0]
	$9 = *([0] + [21604])
	
.LOOP $label$7:
	*((($7 + [40]) + ($10 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$10 == (int_32)[12]) )))))
	$8 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[11]) ){ goto $label$6 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*(($7 + [152])) = [0]
	*($7 + [144]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [144]) = ($8 << [1])
	$9 = (($7 + [144]) | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($7 + [152])) = [0]
	*($7 + [144]) = (int_64)0
	*($7 + [144]) = [0]
	$10 = (($7 + [144]) | [1])
	goto $label$2 
	
.LABEL $label$4
	$11 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($11)
	*($7 + [144]) = ($11 | [1])
	*($7 + [152]) = $9
	*($7 + [148]) = $8
	
.LABEL $label$3
	$11 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$8:
	*(($9 + $10)) = *((($7 + [40]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$8 }
	$10 = ($9 + $8)
	
.LABEL $label$2
	*($10) = [0]
	*(($7 + [48])) = [0]
	*($7 + [40]) = (int_64)0
	$10 = CALL $261([19241])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$15 }
	*($7 + [40]) = ($10 << [1])
	$9 = (($7 + [40]) | [1])
	$8 = $9
	if ( $10 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$9 = (($10 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($7 + [40]) = ($9 | [1])
	*($7 + [48]) = $8
	*($7 + [44]) = $10
	$9 = (($7 + [40]) | [1])
	
.LABEL $label$14
	CALL memcpy($8, [19241], $10)
	
.LABEL $label$13
	*(($8 + $10)) = [0]
	$10 = *($7 + [40])
	$8 = ($10 & [1])
	$10 = CALL $239(($7 + [144]), ( *($7 + [48]) ? $9 : $8 ), ( *($7 + [44]) ? uint_32($10 >> [1]) : $8 ))
	$8 = ($10 + [8])
	*((($7 + [96]) + [8])) = *($8)
	*($7 + [96]) = *($10)
	*($10) = (int_64)0
	*($8) = [0]
	CALL $33($0, $2, ($7 + [96]))
	if ( (*($7 + [96]) & [1]) ){ goto $label$17 }
	if ( (*($7 + [40]) & [1]) ){ goto $label$16 }
	goto $label$11 
	
.LABEL $label$17
	CALL _ZdlPv(*($7 + [104]))
	if ( ((*($7 + [40]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$16
	CALL _ZdlPv(*(($7 + [48])))
	if ( (*($7 + [144]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	CALL $231(($7 + [40]))
	
.LABEL $label$11
	if ( ((*($7 + [144]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*($7 + [152]))
	
.LABEL $label$9
	$12 = ($0 + [32])
	$1 = *($7 + [120])
	$8 = *(($0 + [60]))
	$11 = *(($0 + [56]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$21:
	$10 = ($8 + [-24])
	$9 = *($10)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$20 }
	$8 = $10
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$19 }
	if ( ((int_32)*($9 + [120]) == (int_32)$12) ){ goto $label$18 }
	CALL eosio_assert([0], [22260])
	goto $label$18 
	
.LABEL $label$19
	$10 = CALL db_find_i64(*($12), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $10($12, $10)
	if ( ((int_32)*($9 + [120]) == (int_32)$12) ){ goto $label$18 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$18
	$2 = *($9 + [8])
	$1 = *($7 + [128])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$25 }
	$8 = [0]
	$9 = *([0] + [21604])
	
.LOOP $label$27:
	*((($7 + [40]) + ($10 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$10 == (int_32)[12]) )))))
	$8 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[11]) ){ goto $label$26 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$27 }
	
.LABEL $label$26
	*(($7 + [152])) = [0]
	*($7 + [144]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$24 }
	*($7 + [144]) = ($8 << [1])
	$9 = (($7 + [144]) | [1])
	goto $label$23 
	
.LABEL $label$25
	*(($7 + [152])) = [0]
	*($7 + [144]) = (int_64)0
	*($7 + [144]) = [0]
	$10 = (($7 + [144]) | [1])
	goto $label$22 
	
.LABEL $label$24
	$11 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($11)
	*($7 + [144]) = ($11 | [1])
	*($7 + [152]) = $9
	*($7 + [148]) = $8
	
.LABEL $label$23
	$11 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$28:
	*(($9 + $10)) = *((($7 + [40]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$28 }
	$10 = ($9 + $8)
	
.LABEL $label$22
	*($10) = [0]
	*(($7 + [48])) = [0]
	*($7 + [40]) = (int_64)0
	$10 = CALL $261([19241])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$34 }
	*($7 + [40]) = ($10 << [1])
	$9 = (($7 + [40]) | [1])
	$8 = $9
	if ( $10 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$9 = (($10 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($7 + [40]) = ($9 | [1])
	*($7 + [48]) = $8
	*($7 + [44]) = $10
	$9 = (($7 + [40]) | [1])
	
.LABEL $label$33
	CALL memcpy($8, [19241], $10)
	
.LABEL $label$32
	*(($8 + $10)) = [0]
	$10 = *($7 + [40])
	$8 = ($10 & [1])
	$10 = CALL $239(($7 + [144]), ( *($7 + [48]) ? $9 : $8 ), ( *($7 + [44]) ? uint_32($10 >> [1]) : $8 ))
	$8 = ($10 + [8])
	*((($7 + [80]) + [8])) = *($8)
	*($7 + [80]) = *($10)
	*($10) = (int_64)0
	*($8) = [0]
	CALL $33($0, $2, ($7 + [80]))
	if ( (*($7 + [80]) & [1]) ){ goto $label$36 }
	if ( (*($7 + [40]) & [1]) ){ goto $label$35 }
	goto $label$30 
	
.LABEL $label$36
	CALL _ZdlPv(*($7 + [88]))
	if ( ((*($7 + [40]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$35
	CALL _ZdlPv(*(($7 + [48])))
	if ( (*($7 + [144]) & [1]) ){ goto $label$29 }
	goto $label$1 
	
.LABEL $label$31
	CALL $231(($7 + [40]))
	
.LABEL $label$30
	if ( ((*($7 + [144]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$29
	CALL _ZdlPv(*($7 + [152]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)CALL $8($0, *($7 + [112]), *($3 + [8])) != (int_64)0), [17186])
	$1 = *($3)
	CALL eosio_assert(((int_64)$1 > (int_64)0), [17990])
	CALL eosio_assert(((int_64)$1 > (int_64)999), [19273])
	$10 = *($6)
	if ( ($10 & [1]) ){ goto $label$38 }
	$10 = uint_32($10 >> [1])
	goto $label$37 
	
.LABEL $label$38
	$10 = *($6 + [4])
	
.LABEL $label$37
	CALL eosio_assert(($10 <= [257]), [17266])
	$8 = ($0 + [112])
	*($7 + [72]) = $8
	CALL $78(($7 + [64]), ($7 + [72]), ($7 + [120]))
	$10 = *($7 + [68])
	if ( ($10 == 0) ){ goto $label$39 }
	$1 = (int_64)0
	
.LOOP $label$41:
	if ( ((int_64)*($10 + [8]) != (int_64)*($7 + [120])) ){ goto $label$40 }
	$1 = ((int_64)$1 + (int_64)(CASTING uint_64)(uint_32 ((int_64)*($10) == (int_64)*($7 + [128]))))
	CALL $79(($7 + [64]))
	$10 = *($7 + [68])
	if ( $10 ){ goto $label$41 }
	
.LABEL $label$40
	CALL eosio_assert((int_64)($1 == 0), [19297])
	
.LABEL $label$39
	$1 = *($0)
	*($7 + [48]) = $3
	*($7 + [52]) = $5
	*($7 + [56]) = $6
	*($7 + [44]) = ($7 + [120])
	*($7 + [40]) = ($7 + [128])
	*($7 + [60]) = ($7 + [112])
	*($7 + [168]) = $1
	if ( ((int_64)*($8) == (int_64)CALL current_receiver()) ){ goto $label$42 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$42
	*($7 + [144]) = $8
	*($7 + [148]) = ($7 + [40])
	*($7 + [152]) = ($7 + [168])
	*(($10 = CALL _Znwj([144])) + [8]) = (int_64)0
	*($10) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = [0]
	*($10 + [72 align=4]) = (int_64)0
	*($10 + [80]) = [0]
	*($10 + [88]) = (int_64)0
	*($10 + [96]) = (int_64)0
	*($10 + [104]) = (int_64)0
	*($10 + [128]) = $8
	CALL $80(($7 + [144]), $10)
	*($7 + [160]) = $10
	$1 = *($10 + [112])
	*($7 + [144]) = $1
	$9 = *($10 + [132])
	*($7 + [140]) = $9
	$11 = ($0 + [140])
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [144]))) ){ goto $label$45 }
	*($8 + [8]) = $1
	*($8 + [16]) = $9
	*($7 + [160]) = [0]
	*($8) = $10
	*($11) = ($8 + [24])
	$10 = *($7 + [160])
	*($7 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$45
	CALL $81(($0 + [136]), ($7 + [160]), ($7 + [144]), ($7 + [140]))
	$10 = *($7 + [160])
	*($7 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	if ( ((*($10 + [72]) & [1]) == 0) ){ goto $label$46 }
	CALL _ZdlPv(*(($10 + [80])))
	
.LABEL $label$46
	CALL _ZdlPv($10)
	
.LABEL $label$43
	$1 = *($3)
	$2 = *(($3 + [8]))
	*((($7 + [8]) + [8])) = $2
	*((($7 + [24]) + [8])) = $2
	*($7 + [8]) = $1
	*($7 + [24]) = $1
	CALL $11($0, *($7 + [112]), ($7 + [8]), [2])
	$6 = ($0 + [352])
	$1 = *($0)
	$8 = *(($0 + [380]))
	$11 = *(($0 + [376]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$49 }
	
.LOOP $label$51:
	$10 = ($8 + [-24])
	$9 = *($10)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$50 }
	$8 = $10
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$49 }
	if ( ((int_32)*($9 + [292]) == (int_32)$6) ){ goto $label$52 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$52
	if ( $9 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$10 = CALL db_find_i64(*($6), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$47 }
	$9 = CALL $15($6, $10)
	if ( ((int_32)*($9 + [292]) == (int_32)$6) ){ goto $label$48 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$48
	$1 = *($0)
	*($7 + [44]) = $3
	*($7 + [40]) = ($7 + [112])
	CALL $82($6, $9, $1, ($7 + [40]))
	
.LABEL $label$47
	$global$0 = ($7 + [176])
	(unreachable)
	(unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *(*($4 + [4]) + [4])
	*($1 + [8]) = *($5)
	*($1 + [16]) = *(*(*($4 + [8]) + [4]) + [8])
	$6 = *($0)
	*(($1 + [53])) = *(($5 + [61]))
	*(($1 + [48])) = *(($5 + [56]))
	*(($1 + [40])) = *(($5 + [48]))
	*(($1 + [32])) = *(($5 + [40]))
	*($1 + [24 align=4]) = *($5 + [32 align=4])
	$5 = *(*($4 + [4]) + [4])
	*($1 + [64]) = *($5 + [16])
	*(($1 + [72])) = *(($5 + [24]))
	$5 = *(*($4 + [8]) + [4])
	*($1 + [80]) = *($5 + [16])
	*(($1 + [88])) = *(($5 + [24]))
	*($1 + [96]) = ( [2] ? [4] : ((int_32)*(*($4 + [12])) == (int_32)[1]) )
	*($1 + [104]) = *(*($4 + [16]))
	*($1 + [112]) = CALL current_time()
	*($1 + [120]) = CALL current_time()
	*($1 + [128]) = *(*(*($4 + [8]) + [4]) + [112])
	$7 = ($1 + [136])
	CALL $234($7, *($4 + [20]))
	$8 = ($1 + [120])
	$9 = ($1 + [112])
	$10 = ($1 + [96])
	$11 = ($1 + [80])
	$12 = ($1 + [64])
	$13 = ($1 + [24])
	$14 = *($1 + [24])
	$4 = [122]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [136]))
	$5 = ( *(($1 + [140])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$4 = ($5 + $4)
	$14 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$5 = CALL $264($4)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$3
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $13
	*($3 + [48]) = $12
	*($3 + [52]) = $11
	*($3 + [56]) = $10
	*($3 + [60]) = ($1 + [104])
	*($3 + [64]) = $9
	*($3 + [68]) = $8
	*($3 + [72]) = ($1 + [128])
	*($3 + [76]) = $7
	CALL $197(($3 + [32]), ($3 + [24]))
	$14 = *($1)
	*($1 + [152]) = CALL db_store_i64(*($6 + [8]), (int_64)6609776272782393344, *(*($0 + [8])), $14, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$5 }
	CALL $267($5)
	
.LABEL $label$5
	if ( (uint_64)($14 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$14 = *(($6 + [8]))
	$15 = *(*(($0 + [8])))
	$16 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*($1 + [156]) = CALL db_idx64_store($14, (int_64)6609776272782393344, $15, $16, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)-1)
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [112]) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *(*($3) + [4])
	if ( ((int_64)*(($7 + [24])) == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [48]) = $9(*($1 + [48]) - *($7 + [16])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$6
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [96]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [88]) + (int_64)*($3 + [16]))
	*($1 + [88]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [88]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [80])
	$8 = ($1 + [16])
	$3 = *($1 + [280])
	$10 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [273])
	$9 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $8
	*($5 + [60]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $10
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)3615730114550375936, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [112]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [128]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $83($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)3615730114550375936, $6))
	if ( ((int_32)*($4 + [128]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$2
	*(($4 + [136])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $79 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [136])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [22343])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [136])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)3615730114550375936, ($1 + [8]), *($2 + [112]))
	*(*(($0 + [4])) + [136]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3 + [112]) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [128]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $83($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)3615730114550375936, $6))
	if ( ((int_32)*($3 + [128]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [136])) = $5
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $241 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $240($0, $1, $2, CALL $261($2))
}

int_32 .FUNC $259 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $258 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $255($3, (int_64)0)
	$4 = CALL $257($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $264($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8452])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $264($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $251 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

void .FUNC $250 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $253 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $252 ()
{
	return [8456]
}

void .FUNC $255 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $254 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $253($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_64 .FUNC $257 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $256($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $252()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $256($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [22769]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $255($0, (int_64)0)
	*(CALL $252()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $256($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $256($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $256($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $256($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [22769])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $256($0)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $256($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [16943]))
	$8 = (int_64)0
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $256($0)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $256($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [22769]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $255($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [22769]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [22769]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $256($0) + [22769]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $252()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $252()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $252()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_32 .FUNC $256 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $254($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [208]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [192])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [200])), (int_64)-5003134543285190656, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $209($8, $9)
	*($3 + [36]) = [0]
	*($3 + [32]) = $8
	$7 = *(*(CALL $210(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [208])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [22555])
	$7 = *(($6 + [208]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [208])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *(*($5 + [4]) + [4])
	*($1 + [8]) = *($6)
	*($1 + [16]) = *($6 + [8])
	*(($1 + [32])) = *(($6 + [72]))
	*($1 + [24]) = *($6 + [64])
	$6 = *(*($5 + [4]) + [4])
	*($1 + [40]) = *($6 + [16])
	*($1 + [48]) = *($6 + [96])
	*($1 + [56]) = *($6 + [128])
	*($1 + [64]) = CALL current_time()
	$2 = $2
	$6 = ($2 + [-80])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-12])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	$5 = ($1 + [16])
	*($3 + [40]) = $5
	*($3 + [44]) = ($1 + [24])
	*($3 + [48]) = ($1 + [40])
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = ($1 + [56])
	*($3 + [60]) = ($1 + [64])
	CALL $211(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($4 + [8]), (int_64)-5003134543285190656, *(*($0 + [8])), $7, $6, [68])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$4 = ($4 + [8])
	$7 = *($4)
	$0 = *(($0 + [8]))
	$10 = *($0)
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [80]) = CALL db_idx64_store($7, (int_64)-5003134543285190656, $10, $11, ($3 + [32]))
	$7 = *($0)
	$10 = *($4)
	$11 = *($1)
	*($3 + [32]) = *($5)
	*(($1 + [84])) = CALL db_idx64_store($10, (int_64)-5003134543285190655, $7, $11, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $239 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $235($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $261($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $235($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [4])
	*(($2 = *($1))) = $1
	$3 = *($3)
	$3 = *($0 + [4])
	$4 = *($3 + [4])
	$5 = (CASTING uint_64)(uint_32 ((int_32)($4 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$5 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$3 }
	*($2) = $1
	
.LABEL $label$2
	$3 = *($3)
	$3 = *($0 + [8])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [12])
	$4 = *($3 + [4])
	$0 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	*($2) = $1
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [52])
	$4 = ($3 + [40])
	$2 = ($3 + [28])
	$5 = ($3 + [24])
	$1 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$1 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [4])
	*(($1 = ($3 + [4]))) = (*($1) + [4])
	CALL $204($3, $2)
	CALL $205($3, $4)
	CALL $206($3, $0)
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL _Znwj([96])
	CALL $113($5)
	*($5 + [80]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [72])
	CALL $191(($3 + [32]), ($3 + [24]))
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $115(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $97 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	if ( ((int_64)*($2) < (int_64)0) ){ goto $label$1 }
	$4 = CALL $261([16939])
	if ( ($4 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [21951])
	goto $label$4 
	
.LABEL $label$5
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($4 + [16938]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$7
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$6 }
	if ( ((int_64)*($2 + [8]) != (int_64)((int_64)((int_64)$5 << (int_64)8) | (int_64)4)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)*($2 + [8]) != (int_64)4) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($0 + [272])
	$6 = *(($0 + [300]))
	$8 = *(($0 + [296]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$11:
	$4 = ($6 + [-24])
	$9 = *($4)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$10 }
	$6 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($9 + [80]) == (int_32)$7) ){ goto $label$8 }
	CALL eosio_assert([0], [22260])
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL db_find_i64(*($7), *(($0 + [280])), (int_64)3680914790898728960, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $96($7, $4)
	if ( ((int_32)*($9 + [80]) == (int_32)$7) ){ goto $label$8 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$8
	$5 = *($0)
	*($3 + [8]) = $2
	CALL $101($7, $9, $5, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $90 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL $6($0)
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [120]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $10($3, $6)
	if ( ((int_32)*($7 + [120]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$1
	$8 = ($0 + [152])
	$5 = *(($0 + [180]))
	$3 = *(($0 + [176]))
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$18 }
	
.LOOP $label$20:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$19 }
	$5 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$18 }
	if ( ((int_32)*($4 + [148]) == (int_32)$8) ){ goto $label$17 }
	CALL eosio_assert([0], [22260])
	if ( $7 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$4 = [0]
	$6 = CALL db_find_i64(*($8), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$17 }
	$4 = CALL $9($8, $6)
	if ( ((int_32)*($4 + [148]) == (int_32)$8) ){ goto $label$17 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$17
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert(((uint_64)*($7 + [72]) <= (uint_64)((int_64)CALL $fimport$13() + (int_64)-86400000000)), [19673])
	$9 = *($0)
	*($2 + [168]) = [17468]
	*($2 + [172]) = CALL $261([17468])
	*($2 + [40]) = *($2 + [168])
	$6 = CALL $22(($2 + [176]), ($2 + [40]))
	*($2 + [184]) = $9
	*($2 + [192]) = *($6)
	*($2 + [152]) = [17777]
	*($2 + [156]) = CALL $261([17777])
	*($2 + [32]) = *($2 + [152])
	$7 = CALL $22(($2 + [160]), ($2 + [32]))
	*($2 + [136]) = [19701]
	*($2 + [140]) = CALL $261([19701])
	*($2 + [24]) = *($2 + [136])
	$4 = CALL $22(($2 + [144]), ($2 + [24]))
	*(($2 + [104])) = [0]
	*($2 + [96]) = (int_64)0
	$6 = CALL $261([19711])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$14 }
	*($2 + [96]) = ($6 << [1])
	$5 = (($2 + [96]) | [1])
	if ( $6 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	if ( ($4 == 0) ){ goto $label$11 }
	$9 = (int_64)0
	$6 = (*($4 + [96]) + [-1])
	if ( ((uint_32)($6 & [255]) > (uint_32)[3]) ){ goto $label$21 }
	$9 = *(((int_32(($6 << [24]) >> [24]) << [3]) + [22736]))
	
.LABEL $label$21
	CALL eosio_assert(((uint_64)*($4 + [120]) <= (uint_64)(int_64))(CALL $fimport$13() - $9)), [19793])
	$9 = *($0)
	*($2 + [80]) = [17468]
	*($2 + [84]) = CALL $261([17468])
	*($2 + [16]) = *($2 + [80])
	$6 = CALL $22(($2 + [88]), ($2 + [16]))
	*($2 + [184]) = $9
	*($2 + [192]) = *($6)
	*($2 + [64]) = [17777]
	*($2 + [68]) = CALL $261([17777])
	*($2 + [8]) = *($2 + [64])
	$7 = CALL $22(($2 + [72]), ($2 + [8]))
	*($2 + [48]) = [19824]
	*($2 + [52]) = CALL $261([19824])
	*($2) = *($2 + [48])
	$4 = CALL $22(($2 + [56]), $2)
	*(($2 + [104])) = [0]
	*($2 + [96]) = (int_64)0
	$6 = CALL $261([19833])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($2 + [96]) = ($6 << [1])
	$5 = (($2 + [96]) | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$14
	$3 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($3)
	*($2 + [96]) = ($3 | [1])
	*($2 + [104]) = $5
	*($2 + [100]) = $6
	
.LABEL $label$13
	CALL memcpy($5, [19711], $6)
	
.LABEL $label$12
	*(($5 + $6)) = [0]
	$6 = ($2 + [104])
	*(($2 + [128])) = *($6)
	*($6) = [0]
	*($2 + [112]) = $1
	*($2 + [132]) = [0]
	*($2 + [120]) = *($2 + [96])
	*($2 + [96]) = (int_64)0
	$6 = CALL $56(($2 + [200]), ($2 + [184]), *($7), *($4), ($2 + [112]))
	CALL $24($6)
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$22 }
	*(($6 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$22
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$23 }
	*(($6 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$23
	if ( ((*(($2 + [120])) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*(($2 + [128])))
	
.LABEL $label$24
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($2 + [104])))
	$global$0 = ($2 + [240])
	return 
	
.LABEL $label$11
	CALL eosio_assert([0], [19893])
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$10
	$3 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($3)
	*($2 + [96]) = ($3 | [1])
	*($2 + [104]) = $5
	*($2 + [100]) = $6
	
.LABEL $label$9
	CALL memcpy($5, [19833], $6)
	
.LABEL $label$8
	*(($5 + $6)) = [0]
	$6 = ($2 + [104])
	*(($2 + [128])) = *($6)
	*($6) = [0]
	*($2 + [112]) = $1
	*($2 + [132]) = [0]
	*($2 + [120]) = *($2 + [96])
	*($2 + [96]) = (int_64)0
	$6 = CALL $56(($2 + [200]), ($2 + [184]), *($7), *($4), ($2 + [112]))
	CALL $24($6)
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$25 }
	*(($6 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$25
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$26 }
	*(($6 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$26
	if ( ((*(($2 + [120])) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*(($2 + [128])))
	
.LABEL $label$27
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($2 + [104])))
	
.LABEL $label$7
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$6
	CALL $231(($2 + [96]))
	
.LABEL $label$5
	CALL $231(($2 + [96]))
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $182(*($1), ($3 + [8]))
	$0 = ($3 + [20])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $92 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	float_32 $15
	float_32 $16
	float_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	$4 = ($global$0 - [1120])
	$global$0 = $4
	CALL $6($0)
	CALL eosio_assert(((($3 + [-1]) & [255]) <= [2]), [17069])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$2 }
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth($2)
	
.LABEL $label$1
	CALL $7($0, $1)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [19915])
	$5 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$6:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$5 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($8 + [120]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$3 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $10($5, $3)
	if ( ((int_32)*($8 + [120]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	CALL eosio_assert(($8 == 0), [17344])
	$9 = ($0 + [152])
	$7 = *(($0 + [180]))
	$6 = *(($0 + [176]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$10:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$9 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($8 + [148]) == (int_32)$9) ){ goto $label$11 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$11
	*($4 + [1092]) = $8
	*($4 + [1088]) = $9
	$6 = (($4 + [1088]) | [4])
	goto $label$7 
	
.LABEL $label$8
	$3 = CALL db_find_i64(*($9), *(($0 + [160])), (int_64)6609776272782393344, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$12 }
	$8 = CALL $9($9, $3)
	if ( ((int_32)*($8 + [148]) == (int_32)$9) ){ goto $label$13 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$13
	*($4 + [1092]) = $8
	*($4 + [1088]) = $9
	$6 = (($4 + [1088]) | [4])
	goto $label$7 
	
.LABEL $label$12
	$8 = [0]
	*($4 + [1092]) = [0]
	*($4 + [1088]) = $9
	$6 = (($4 + [1088]) | [4])
	
.LABEL $label$7
	$5 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [17387])
	$3 = [0]
	if ( ((int_64)*($8) != (int_64)$1) ){ goto $label$14 }
	$3 = ((int_64)*($8 + [8]) == (int_64)$2)
	
.LABEL $label$14
	CALL eosio_assert($3, [19940])
	*(($4 + [1077])) = *(($8 + [53]))
	*(($3 = (($4 + [1048]) + [24]))) = *(($8 + [48]))
	*(($10 = (($4 + [1048]) + [16]))) = *(($8 + [40]))
	*(($11 = (($4 + [1048]) + [8]))) = *(($8 + [32]))
	*($4 + [1048]) = *($8 + [24 align=4])
	*($4 + [1008]) = [1]
	*(($12 = (($4 + [856]) + [32]))) = *((($4 + [1048]) + [32]))
	*(($7 = (($4 + [856]) + [24]))) = *($3)
	*(($13 = (($4 + [856]) + [16]))) = *($10)
	*(($10 = (($4 + [856]) + [8]))) = *($11)
	*($4 + [896]) = [1]
	*($4 + [856]) = *($4 + [1048])
	$3 = CALL _Znwj([44])
	*((($4 + [1008]) + [24])) = (int_64)0
	*((($4 + [1008]) + [32])) = [0]
	$11 = ($3 + [44])
	*(($4 + [1020])) = $11
	*($3) = *($4 + [856])
	*(($3 + [8])) = *($10)
	*(($3 + [16])) = *($13)
	*(($3 + [24])) = *($7)
	*(($3 + [32])) = *($12)
	*(($3 + [40])) = *($4 + [896])
	*((($4 + [1008]) + [8])) = $11
	*($4 + [1012]) = $3
	*($4 + [1024]) = (int_64)0
	*((($4 + [1008]) + [36])) = [0]
	$1 = *($8)
	*($4 + [952]) = [19970]
	*($4 + [956]) = CALL $261([19970])
	*($4 + [328]) = *($4 + [952])
	$2 = *(CALL $22(($4 + [960]), ($4 + [328])))
	*($4 + [936]) = [19976]
	*($4 + [940]) = CALL $261([19976])
	*($4 + [320]) = *($4 + [936])
	$3 = CALL $22(($4 + [944]), ($4 + [320]))
	*($4 + [920]) = [19982]
	*($4 + [924]) = CALL $261([19982])
	*($4 + [312]) = *($4 + [920])
	$8 = CALL $22(($4 + [928]), ($4 + [312]))
	$10 = *($6)
	*($4 + [848]) = [17468]
	*($4 + [852]) = CALL $261([17468])
	*($4 + [304]) = *($4 + [848])
	$11 = CALL $22(($4 + [712]), ($4 + [304]))
	*($4 + [840]) = [19970]
	*($4 + [844]) = CALL $261([19970])
	*($4 + [296]) = *($4 + [840])
	$12 = CALL $22(($4 + [664]), ($4 + [296]))
	*($4 + [856]) = *($10)
	*($4 + [864]) = *($11)
	*($4 + [872]) = *($12)
	$7 = CALL $93($7, ($4 + [1008]))
	*(($10 = (($4 + [968]) + [24]))) = [0]
	*($4 + [984]) = (int_64)0
	*($4 + [968]) = *($3)
	*($4 + [976]) = *($8)
	*(($3 = CALL _Znwj([16]))) = $1
	*($3 + [8]) = $2
	*((($4 + [968]) + [36])) = [0]
	$8 = ($3 + [16])
	*($10) = $8
	*(($4 + [988])) = $8
	*($4 + [984]) = $3
	*($4 + [996 align=4]) = (int_64)0
	*($4 + [1112]) = [24]
	*($4 + [608]) = ($4 + [1112])
	*($4 + [1100]) = (($4 + [856]) + [28])
	*($4 + [1096]) = $7
	*($4 + [1104]) = (($4 + [856]) + [40])
	*($4 + [1108]) = ($4 + [908])
	CALL $94(($4 + [1096]), ($4 + [608]))
	$3 = *($4 + [1112])
	if ( ($3 == 0) ){ goto $label$16 }
	$7 = (($4 + [968]) + [28])
	CALL $2($7, $3)
	$5 = *((($4 + [968]) + [32]))
	$3 = *($7)
	goto $label$15 
	
.LABEL $label$16
	$3 = [0]
	
.LABEL $label$15
	*($4 + [1100]) = $3
	*($4 + [1096]) = $3
	*($4 + [1104]) = $5
	*($4 + [1112]) = ($4 + [1096])
	*($4 + [608]) = ($4 + [856])
	CALL $95(($4 + [608]), ($4 + [1112]))
	CALL $24(($4 + [968]))
	$3 = *($4 + [996])
	if ( ($3 == 0) ){ goto $label$17 }
	*(($4 + [1000])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$17
	$3 = *($4 + [984])
	if ( ($3 == 0) ){ goto $label$18 }
	*(($4 + [988])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$18
	$3 = *(($4 + [908]))
	if ( ($3 == 0) ){ goto $label$19 }
	*(($4 + [912])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$19
	$3 = *(($4 + [896]))
	if ( ($3 == 0) ){ goto $label$20 }
	*(($4 + [900])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$20
	$8 = (($4 + [856]) + [28])
	$3 = *($8)
	if ( ($3 == 0) ){ goto $label$21 }
	*(($4 + [888])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$21
	$1 = *(*($6))
	*($4 + [824]) = [19970]
	*($4 + [828]) = CALL $261([19970])
	*($4 + [288]) = *($4 + [824])
	$2 = *(CALL $22(($4 + [832]), ($4 + [288])))
	*($4 + [808]) = [19976]
	*($4 + [812]) = CALL $261([19976])
	*($4 + [280]) = *($4 + [808])
	$3 = CALL $22(($4 + [816]), ($4 + [280]))
	*($4 + [792]) = [19982]
	*($4 + [796]) = CALL $261([19982])
	*($4 + [272]) = *($4 + [792])
	$5 = CALL $22(($4 + [800]), ($4 + [272]))
	$7 = *($6)
	*($4 + [784]) = [19970]
	*($4 + [788]) = CALL $261([19970])
	*($4 + [264]) = *($4 + [784])
	$10 = CALL $22(($4 + [712]), ($4 + [264]))
	*($4 + [776]) = [17531]
	*($4 + [780]) = CALL $261([17531])
	*($4 + [256]) = *($4 + [776])
	$11 = CALL $22(($4 + [664]), ($4 + [256]))
	*($4 + [856]) = *($7)
	*($4 + [864]) = *($10)
	*($4 + [872]) = *($11)
	$10 = CALL $93((($4 + [856]) + [24]), ($4 + [1008]))
	$7 = [0]
	*(($11 = (($4 + [968]) + [24]))) = [0]
	*($4 + [984]) = (int_64)0
	*($4 + [968]) = *($3)
	*($4 + [976]) = *($5)
	*(($3 = CALL _Znwj([16]))) = $1
	*($3 + [8]) = $2
	*(($4 + [1004])) = [0]
	$5 = ($3 + [16])
	*($11) = $5
	*(($4 + [988])) = $5
	*($4 + [984]) = $3
	*($4 + [996 align=4]) = (int_64)0
	*($4 + [1112]) = [24]
	*($4 + [608]) = ($4 + [1112])
	*($4 + [1100]) = $8
	*($4 + [1096]) = $10
	*($4 + [1104]) = ($4 + [896])
	*($4 + [1108]) = ($4 + [908])
	CALL $94(($4 + [1096]), ($4 + [608]))
	$3 = *($4 + [1112])
	if ( ($3 == 0) ){ goto $label$23 }
	CALL $2((($4 + [968]) + [28]), $3)
	$7 = *(($4 + [1000]))
	$3 = *(($4 + [996]))
	goto $label$22 
	
.LABEL $label$23
	$3 = [0]
	
.LABEL $label$22
	*($4 + [1100]) = $3
	*($4 + [1096]) = $3
	*($4 + [1104]) = $7
	*($4 + [1112]) = ($4 + [1096])
	*($4 + [608]) = ($4 + [856])
	CALL $95(($4 + [608]), ($4 + [1112]))
	CALL $24(($4 + [968]))
	$3 = *($4 + [996])
	if ( ($3 == 0) ){ goto $label$24 }
	*(($4 + [1000])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$24
	$3 = *($4 + [984])
	if ( ($3 == 0) ){ goto $label$25 }
	*(($4 + [988])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$25
	$3 = *(($4 + [908]))
	if ( ($3 == 0) ){ goto $label$26 }
	*(($4 + [912])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$26
	$3 = *(($4 + [896]))
	if ( ($3 == 0) ){ goto $label$27 }
	*(($4 + [900])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$27
	$3 = *(($4 + [884]))
	if ( ($3 == 0) ){ goto $label$28 }
	*(($4 + [888])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$28
	$3 = *($6)
	if ( ((int_64)*($3 + [80]) < (int_64)1) ){ goto $label$32 }
	$1 = *($0)
	*($4 + [760]) = [17468]
	*($4 + [764]) = CALL $261([17468])
	*($4 + [248]) = *($4 + [760])
	$3 = CALL $22(($4 + [768]), ($4 + [248]))
	*($4 + [1096]) = $1
	*($4 + [1104]) = *($3)
	$1 = *(*($6) + [128])
	*($4 + [744]) = [17475]
	*($4 + [748]) = CALL $261([17475])
	*($4 + [240]) = *($4 + [744])
	$10 = CALL $22(($4 + [752]), ($4 + [240]))
	$8 = *($6)
	*(($4 + [720])) = [0]
	*($4 + [712]) = (int_64)0
	$3 = CALL $261([19993])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$31 }
	$5 = ($8 + [80])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$35 }
	*($4 + [712]) = ($3 << [1])
	$7 = (($4 + [712]) | [1])
	if ( $3 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$11 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($11)
	*($4 + [712]) = ($11 | [1])
	*($4 + [720]) = $7
	*($4 + [716]) = $3
	
.LABEL $label$34
	CALL memcpy($7, [19993], $3)
	
.LABEL $label$33
	*(($7 + $3)) = [0]
	$2 = *($8 + [16])
	*(($4 + [880])) = *(($5 + [8]))
	$3 = (($4 + [712]) + [8])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [856]) = *($0)
	*($4 + [872]) = *($5)
	*($4 + [888]) = *($4 + [712])
	*($4 + [864]) = $2
	*($4 + [712]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [1096]), $1, *($10), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$36 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$36
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$37 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$37
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$38
	if ( ((*($4 + [712]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*(($4 + [720])))
	
.LABEL $label$39
	$3 = *($6)
	$2 = *($3 + [128])
	$1 = *($3 + [80])
	$14 = *(($3 + [88]))
	*((($4 + [224]) + [8])) = $14
	*((($4 + [728]) + [8])) = $14
	*($4 + [728]) = $1
	*($4 + [224]) = $1
	CALL $11($0, $2, ($4 + [224]), [3])
	$3 = *($6)
	
.LABEL $label$32
	$10 = ($0 + [392])
	$1 = *($3 + [128])
	$7 = *(($0 + [420]))
	$5 = *(($0 + [416]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$43 }
	
.LOOP $label$45:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$44 }
	$7 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$43 }
	if ( ((int_32)*($8 + [152]) == (int_32)$10) ){ goto $label$42 }
	CALL eosio_assert([0], [22260])
	goto $label$42 
	
.LABEL $label$43
	$3 = CALL db_find_i64(*($10), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$41 }
	$8 = CALL $19($10, $3)
	if ( ((int_32)*($8 + [152]) == (int_32)$10) ){ goto $label$42 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$42
	$15 = (DEMOTE float_32)(float_64 ((float_64)(CASTING float_64)(uint_64 *($8 + [72])) * (float_64)(float_64)0.01))
	$16 = (DEMOTE float_32)(float_64 ((float_64)(CASTING float_64)(uint_64 *($8 + [64])) * (float_64)(float_64)0.01))
	goto $label$40 
	
.LABEL $label$41
	$16 = (float_32)0.009999999776482582
	$15 = (float_32)0.05000000074505806
	
.LABEL $label$40
	$3 = *($6)
	$14 = *($3 + [64])
	$2 = *(($3 + [72]))
	*($4 + [1104]) = $2
	$17 = (CASTING float_32)(int_64 $14)
	$16 = ((float_32)$16 * (float_32)$17)
	if ( ((float_32)(float_32)|$16| < (float_32)(float_32)9223372036854775808) ){ goto $label$47 }
	$1 = (int_64)-9223372036854775808
	goto $label$46 
	
.LABEL $label$47
	$1 = (Rounds 0)($16)
	
.LABEL $label$46
	*($4 + [1096]) = $1
	$14 = (int_64)
	$3 = ((int_64)$14($14 - $1)) > (int_64)-4611686018427387904)
	$15 = ((float_32)$15 * (float_32)$17)
	if ( ((float_32)(float_32)|$15| < (float_32)(float_32)9223372036854775808) ){ goto $label$49 }
	$18 = (int_64)-9223372036854775808
	if ( $3 ){ goto $label$48 }
	goto $label$30 
	
.LABEL $label$49
	$18 = (Rounds 0)($15)
	if ( ($3 == 0) ){ goto $label$30 }
	
.LABEL $label$48
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$29 }
	CALL eosio_assert([0], [21791])
	goto $label$29 
	
.LABEL $label$31
	CALL $231(($4 + [712]))
	
.LABEL $label$30
	CALL eosio_assert([0], [21769])
	
.LABEL $label$29
	$3 = *(*($6) + [96])
	if ( ((int_32)$3 == (int_32)[4]) ){ goto $label$51 }
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$50 }
	
.LABEL $label$51
	$14 = (int_64)
	if ( ((int_64)$14($14 - $18)) <= (int_64)-4611686018427387904) ){ goto $label$52 }
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$50 }
	CALL eosio_assert([0], [21791])
	goto $label$50 
	
.LABEL $label$52
	CALL eosio_assert([0], [21769])
	
.LABEL $label$50
	if ( ((int_32)(*(*($6) + [96]) | [2]) != (int_32)[3]) ){ goto $label$60 }
	$14 = (int_64)
	if ( ((int_64)$14($14 - $1)) <= (int_64)-4611686018427387904) ){ goto $label$59 }
	if ( ((int_64)$14 >= (int_64)4611686018427387904) ){ goto $label$58 }
	
.LABEL $label$60
	if ( ((int_64)$14 >= (int_64)1) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	CALL eosio_assert([0], [21769])
	goto $label$56 
	
.LABEL $label$58
	CALL eosio_assert([0], [21791])
	
.LABEL $label$57
	$19 = *($0)
	*($4 + [696]) = [17468]
	*($4 + [700]) = CALL $261([17468])
	*($4 + [216]) = *($4 + [696])
	$3 = CALL $22(($4 + [704]), ($4 + [216]))
	*($4 + [712]) = $19
	*($4 + [720]) = *($3)
	$19 = *(*($6) + [128])
	*($4 + [680]) = [17475]
	*($4 + [684]) = CALL $261([17475])
	*($4 + [208]) = *($4 + [680])
	$8 = CALL $22(($4 + [688]), ($4 + [208]))
	$5 = *($6)
	*(($4 + [672])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20040])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$63 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$10 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [664]) = ($10 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$62
	CALL memcpy($7, [20040], $3)
	
.LABEL $label$61
	*(($7 + $3)) = [0]
	$20 = *($5 + [16])
	*(($4 + [880])) = $2
	$3 = ($4 + [672])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [856]) = *($0)
	*($4 + [872]) = $14
	*($4 + [888]) = *($4 + [664])
	*($4 + [864]) = $20
	*($4 + [664]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [712]), $19, *($8), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$64 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$64
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$65 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$65
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$66 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$66
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$56 }
	CALL _ZdlPv(*(($4 + [672])))
	
.LABEL $label$56
	*($4 + [648]) = [19009]
	*($4 + [652]) = CALL $261([19009])
	*($4 + [200]) = *($4 + [648])
	if ( (CALL is_account(*(CALL $22(($4 + [656]), ($4 + [200])))) == 0) ){ goto $label$68 }
	if ( ((int_64)*($4 + [1096]) < (int_64)1) ){ goto $label$68 }
	$14 = *($0)
	*($4 + [632]) = [17468]
	*($4 + [636]) = CALL $261([17468])
	*($4 + [192]) = *($4 + [632])
	$3 = CALL $22(($4 + [640]), ($4 + [192]))
	*($4 + [712]) = $14
	*($4 + [720]) = *($3)
	$14 = *(*($6) + [128])
	*($4 + [616]) = [17475]
	*($4 + [620]) = CALL $261([17475])
	*($4 + [184]) = *($4 + [616])
	$8 = CALL $22(($4 + [624]), ($4 + [184]))
	*($4 + [600]) = [19009]
	*($4 + [604]) = CALL $261([19009])
	*($4 + [176]) = *($4 + [600])
	$5 = CALL $22(($4 + [608]), ($4 + [176]))
	*(($4 + [672])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20105])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$71 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$10 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [664]) = ($10 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$70
	CALL memcpy($7, [20105], $3)
	
.LABEL $label$69
	*(($7 + $3)) = [0]
	*(($4 + [880])) = *((($4 + [1096]) + [8]))
	$3 = (($4 + [664]) + [8])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [856]) = *($0)
	*($4 + [864]) = *($5)
	*($4 + [872]) = *($4 + [1096])
	*($4 + [888]) = *($4 + [664])
	*($4 + [664]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [712]), $14, *($8), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$72 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$72
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$73 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$73
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$74 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$74
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$68 }
	CALL _ZdlPv(*(($4 + [672])))
	
.LABEL $label$68
	$15 = (CASTING float_32)(int_64 $1)
	$16 = ((float_32)$15 * (float_32)(float_32)0.20000000298023224)
	if ( ((float_32)(float_32)|$16| < (float_32)(float_32)9223372036854775808) ){ goto $label$76 }
	$21 = (int_64)-9223372036854775808
	goto $label$75 
	
.LABEL $label$76
	$21 = (Rounds 0)($16)
	
.LABEL $label$75
	$19 = (int_64))($18 - $1)
	$16 = ((float_32)$15 * (float_32)(float_32)0.4000000059604645)
	if ( ((float_32)(float_32)|$16| < (float_32)(float_32)9223372036854775808) ){ goto $label$78 }
	$20 = (int_64)-9223372036854775808
	goto $label$77 
	
.LABEL $label$78
	$20 = (Rounds 0)($16)
	
.LABEL $label$77
	$3 = ((int_64)$19 > (int_64)-4611686018427387904)
	$15 = ((float_32)$15 * (float_32)(float_32)0.6000000238418579)
	if ( ((float_32)(float_32)|$15| < (float_32)(float_32)9223372036854775808) ){ goto $label$80 }
	$14 = (int_64)-9223372036854775808
	if ( $3 ){ goto $label$79 }
	goto $label$54 
	
.LABEL $label$80
	$14 = (Rounds 0)($15)
	if ( ($3 == 0) ){ goto $label$54 }
	
.LABEL $label$79
	if ( ((int_64)$19 < (int_64)4611686018427387904) ){ goto $label$53 }
	CALL eosio_assert([0], [21791])
	goto $label$53 
	
.LABEL $label$67
	CALL $231(($4 + [664]))
	
.LABEL $label$55
	CALL $231(($4 + [664]))
	
.LABEL $label$54
	CALL eosio_assert([0], [21769])
	
.LABEL $label$53
	*($4 + [584]) = [20169]
	*($4 + [588]) = CALL $261([20169])
	*($4 + [168]) = *($4 + [584])
	$3 = CALL is_account(*(CALL $22(($4 + [592]), ($4 + [168]))))
	if ( ((int_64)$14 < (int_64)1) ){ goto $label$99 }
	if ( ($3 == 0) ){ goto $label$99 }
	$1 = (int_64)
	if ( ((int_64)$1($1 - $14)) <= (int_64)-4611686018427387904) ){ goto $label$98 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$97 }
	CALL eosio_assert([0], [21791])
	if ( ((int_64)$14 >= (int_64)4611686018427387904) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$99
	$14 = (int_64)0
	goto $label$94 
	
.LABEL $label$98
	CALL eosio_assert([0], [21769])
	
.LABEL $label$97
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$95 }
	
.LABEL $label$96
	CALL eosio_assert([0], [21874])
	
.LABEL $label$95
	$18 = *($0)
	*($4 + [568]) = [17468]
	*($4 + [572]) = CALL $261([17468])
	*($4 + [160]) = *($4 + [568])
	$3 = CALL $22(($4 + [576]), ($4 + [160]))
	*($4 + [712]) = $18
	*($4 + [720]) = *($3)
	$18 = *(*($6) + [128])
	*($4 + [552]) = [17475]
	*($4 + [556]) = CALL $261([17475])
	*($4 + [152]) = *($4 + [552])
	$8 = CALL $22(($4 + [560]), ($4 + [152]))
	*($4 + [544]) = [20169]
	*($4 + [548]) = CALL $261([20169])
	*($4 + [144]) = *($4 + [544])
	$5 = CALL $22(($4 + [608]), ($4 + [144]))
	*(($4 + [672])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20182])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$93 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$102 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$102
	$10 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [664]) = ($10 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$101
	CALL memcpy($7, [20182], $3)
	
.LABEL $label$100
	*(($7 + $3)) = [0]
	*(($4 + [880])) = $2
	$3 = ($4 + [672])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [872]) = $14
	*($4 + [856]) = *($0)
	*($4 + [864]) = *($5)
	*($4 + [888]) = *($4 + [664])
	*($4 + [664]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [712]), $18, *($8), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$103 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$103
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$104 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$104
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$105 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$105
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$94 }
	CALL _ZdlPv(*(($4 + [672])))
	
.LABEL $label$94
	$3 = CALL is_account(*(*($6) + [104]))
	if ( ((int_64)$20 < (int_64)1) ){ goto $label$86 }
	if ( ($3 == 0) ){ goto $label$86 }
	$10 = ($0 + [272])
	$18 = *(*($6) + [104])
	$7 = *(($0 + [300]))
	$8 = *(($0 + [296]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$109 }
	
.LOOP $label$111:
	$3 = ($7 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)$18) ){ goto $label$110 }
	$7 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$110
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$109 }
	if ( ((int_32)*($5 + [80]) == (int_32)$10) ){ goto $label$108 }
	CALL eosio_assert([0], [22260])
	$1 = (int_64)
	if ( ((int_64)$1($1 - $20)) > (int_64)-4611686018427387904) ){ goto $label$107 }
	goto $label$90 
	
.LABEL $label$109
	$3 = CALL db_find_i64(*($10), *(($0 + [280])), (int_64)3680914790898728960, $18)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$106 }
	if ( ((int_32)*(CALL $96($10, $3) + [80]) == (int_32)$10) ){ goto $label$108 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$108
	$1 = (int_64)
	if ( ((int_64)$1($1 - $20)) <= (int_64)-4611686018427387904) ){ goto $label$90 }
	
.LABEL $label$107
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$112 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$112
	$14 = ((int_64)$14 + (int_64)$20)
	if ( ((int_64)$14 <= (int_64)-4611686018427387904) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$106
	$1 = (int_64)
	if ( ((int_64)$1($1 - $21)) <= (int_64)-4611686018427387904) ){ goto $label$114 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$115 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$115
	$14 = ((int_64)$14 + (int_64)$21)
	if ( ((int_64)$14 <= (int_64)-4611686018427387904) ){ goto $label$113 }
	goto $label$92 
	
.LABEL $label$114
	CALL eosio_assert([0], [21769])
	$14 = ((int_64)$14 + (int_64)$21)
	if ( ((int_64)$14 > (int_64)-4611686018427387904) ){ goto $label$92 }
	
.LABEL $label$113
	CALL eosio_assert([0], [21855])
	goto $label$91 
	
.LABEL $label$93
	CALL $231(($4 + [664]))
	
.LABEL $label$92
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$91 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$91
	$18 = *($0)
	*($4 + [480]) = [17468]
	*($4 + [484]) = CALL $261([17468])
	*($4 + [104]) = *($4 + [480])
	$3 = CALL $22(($4 + [488]), ($4 + [104]))
	*($4 + [712]) = $18
	*($4 + [720]) = *($3)
	$18 = *(*($6) + [128])
	*($4 + [464]) = [17475]
	*($4 + [468]) = CALL $261([17475])
	*($4 + [96]) = *($4 + [464])
	$8 = CALL $22(($4 + [472]), ($4 + [96]))
	$5 = *($6)
	*(($4 + [672])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20252])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$116 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$119 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$118 }
	goto $label$117 
	
.LABEL $label$119
	$10 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [664]) = ($10 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$118
	CALL memcpy($7, [20252], $3)
	
.LABEL $label$117
	*(($7 + $3)) = [0]
	*(($4 + [880])) = $2
	$3 = ($4 + [672])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [872]) = $21
	*($4 + [856]) = *($0)
	*($4 + [864]) = *($5 + [104])
	*($4 + [888]) = *($4 + [664])
	*($4 + [664]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [712]), $18, *($8), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$120 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$120
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$121 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$121
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$122 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$122
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$86 }
	CALL _ZdlPv(*(($4 + [672])))
	goto $label$86 
	
.LABEL $label$116
	CALL $231(($4 + [664]))
	
.LABEL $label$90
	CALL eosio_assert([0], [21769])
	$14 = ((int_64)$14 + (int_64)$20)
	if ( ((int_64)$14 > (int_64)-4611686018427387904) ){ goto $label$88 }
	
.LABEL $label$89
	CALL eosio_assert([0], [21855])
	goto $label$87 
	
.LABEL $label$88
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$87 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$87
	$18 = *($0)
	*($4 + [528]) = [17468]
	*($4 + [532]) = CALL $261([17468])
	*($4 + [136]) = *($4 + [528])
	$3 = CALL $22(($4 + [536]), ($4 + [136]))
	*($4 + [712]) = $18
	*($4 + [720]) = *($3)
	$18 = *(*($6) + [128])
	*($4 + [512]) = [17475]
	*($4 + [516]) = CALL $261([17475])
	*($4 + [128]) = *($4 + [512])
	$8 = CALL $22(($4 + [520]), ($4 + [128]))
	$5 = *($6)
	*(($4 + [672])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20182])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$85 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$125 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	$10 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [664]) = ($10 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$124
	CALL memcpy($7, [20182], $3)
	
.LABEL $label$123
	*(($7 + $3)) = [0]
	*(($4 + [880])) = $2
	$3 = ($4 + [672])
	*(($4 + [896])) = *($3)
	*($3) = [0]
	*($4 + [872]) = $20
	*($4 + [856]) = *($0)
	*($4 + [864]) = *($5 + [104])
	*($4 + [888]) = *($4 + [664])
	*($4 + [664]) = (int_64)0
	$3 = CALL $23(($4 + [968]), ($4 + [712]), $18, *($8), ($4 + [856]))
	CALL $24($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$126 }
	*(($3 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$126
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$127 }
	*(($3 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$127
	if ( ((*(($4 + [888])) & [1]) == 0) ){ goto $label$128 }
	CALL _ZdlPv(*(($4 + [896])))
	
.LABEL $label$128
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$129 }
	CALL _ZdlPv(*(($4 + [672])))
	
.LABEL $label$129
	$18 = *(*($6) + [104])
	*(($4 + [120])) = $2
	*($4 + [496]) = $20
	*($4 + [504]) = $2
	*($4 + [112]) = $20
	CALL $97($0, $18, ($4 + [112]))
	
.LABEL $label$86
	$18 = *(*($6) + [128])
	*((($4 + [80]) + [8])) = $2
	*($4 + [448]) = $14
	*($4 + [456]) = $2
	*($4 + [80]) = $14
	CALL $11($0, $18, ($4 + [80]), [5])
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$130 }
	$14 = *(*($6) + [128])
	*((($4 + [64]) + [8])) = $2
	*($4 + [432]) = $1
	*($4 + [440]) = $2
	*($4 + [64]) = $1
	CALL $11($0, $14, ($4 + [64]), [6])
	
.LABEL $label$130
	$3 = *($6)
	$7 = *($3 + [96])
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$132 }
	if ( ((int_64)$19 >= (int_64)1) ){ goto $label$131 }
	goto $label$81 
	
.LABEL $label$132
	if ( ((int_64)$19 < (int_64)1) ){ goto $label$81 }
	if ( ((int_32)$7 != (int_32)[4]) ){ goto $label$81 }
	
.LABEL $label$131
	$1 = *($3 + [128])
	*((($4 + [48]) + [8])) = $2
	*($4 + [416]) = $19
	*($4 + [424]) = $2
	*($4 + [48]) = $19
	CALL $11($0, $1, ($4 + [48]), [6])
	$1 = *($0)
	*($4 + [400]) = [17468]
	*($4 + [404]) = CALL $261([17468])
	*($4 + [40]) = *($4 + [400])
	$14 = *(CALL $22(($4 + [408]), ($4 + [40])))
	*($4 + [384]) = [17777]
	*($4 + [388]) = CALL $261([17777])
	*($4 + [32]) = *($4 + [384])
	$5 = CALL $22(($4 + [392]), ($4 + [32]))
	*($4 + [368]) = [17790]
	*($4 + [372]) = CALL $261([17790])
	*($4 + [24]) = *($4 + [368])
	$10 = CALL $22(($4 + [376]), ($4 + [24]))
	$8 = *($6)
	*((($4 + [664]) + [8])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([17799])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$133 }
	$18 = (uint_64)$19 >> (uint_64)(int_64)1)
	$11 = ($8 + [136])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$136 }
	*($4 + [664]) = ($3 << [1])
	$7 = (($4 + [664]) | [1])
	if ( $3 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$12 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($12)
	*($4 + [664]) = ($12 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	
.LABEL $label$135
	CALL memcpy($7, [17799], $3)
	
.LABEL $label$134
	*(($7 + $3)) = [0]
	*((($4 + [856]) + [16])) = $2
	*($4 + [864]) = $18
	*($4 + [856]) = *($8 + [128])
	$7 = CALL $232((($4 + [856]) + [24]), $11)
	*(($8 = (($4 + [968]) + [24]))) = [0]
	$3 = ($4 + [672])
	*(($4 + [900])) = *($3)
	*($3) = [0]
	*($4 + [984]) = (int_64)0
	*($4 + [892 align=4]) = *($4 + [664])
	*($4 + [664]) = (int_64)0
	*($4 + [968]) = *($5)
	*($4 + [976]) = *($10)
	*(($3 = CALL _Znwj([16]))) = $1
	*($3 + [8]) = $14
	*(($4 + [1004])) = [0]
	$5 = ($3 + [16])
	*($8) = $5
	*(($4 + [988])) = $5
	*($4 + [984]) = $3
	*($4 + [996 align=4]) = (int_64)0
	$3 = *($7)
	$7 = ( *((($4 + [856]) + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [24])
	$1 = (CASTING uint_64)(uint_32 $7)
	$8 = (($4 + [968]) + [28])
	
.LOOP $label$137:
	$3 = ($3 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$137 }
	$7 = *($4 + [892])
	$7 = ( *(($4 + [896])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$3 = ($7 + $3)
	$1 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$138:
	$3 = ($3 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$138 }
	if ( ($3 == 0) ){ goto $label$140 }
	CALL $2($8, $3)
	$7 = *(($4 + [1000]))
	$3 = *(($4 + [996]))
	goto $label$139 
	
.LABEL $label$140
	$7 = [0]
	$3 = [0]
	
.LABEL $label$139
	*($4 + [716]) = $3
	*($4 + [712]) = $3
	*($4 + [720]) = $7
	*($4 + [1112]) = ($4 + [712])
	*($4 + [608]) = ($4 + [856])
	CALL $34(($4 + [608]), ($4 + [1112]))
	CALL $24(($4 + [968]))
	$3 = *($4 + [996])
	if ( ($3 == 0) ){ goto $label$141 }
	*(($4 + [1000])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$141
	$3 = *($4 + [984])
	if ( ($3 == 0) ){ goto $label$142 }
	*(($4 + [988])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$142
	if ( (*(($4 + [892])) & [1]) ){ goto $label$144 }
	if ( (*($4 + [880]) & [1]) ){ goto $label$143 }
	goto $label$84 
	
.LABEL $label$144
	CALL _ZdlPv(*(($4 + [900])))
	if ( ((*($4 + [880]) & [1]) == 0) ){ goto $label$84 }
	
.LABEL $label$143
	CALL _ZdlPv(*(($4 + [888])))
	if ( (*($4 + [664]) & [1]) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$133
	CALL $231(($4 + [664]))
	
.LABEL $label$85
	CALL $231(($4 + [664]))
	
.LABEL $label$84
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$82 }
	
.LABEL $label$83
	CALL _ZdlPv(*(($4 + [672])))
	
.LABEL $label$82
	$3 = *($6)
	
.LABEL $label$81
	$2 = *($3 + [16])
	*(($4 + [976])) = [0]
	*($4 + [968]) = (int_64)0
	$3 = CALL $261([17686])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$153 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$156 }
	*($4 + [968]) = ($3 << [1])
	$8 = (($4 + [968]) | [1])
	if ( $3 ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$156
	$7 = (($3 + [16]) & [-16])
	$8 = CALL _Znwj($7)
	*($4 + [968]) = ($7 | [1])
	*($4 + [976]) = $8
	*($4 + [972]) = $3
	
.LABEL $label$155
	CALL memcpy($8, [17686], $3)
	
.LABEL $label$154
	$7 = [0]
	*(($8 + $3)) = [0]
	$1 = *(*($6))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$160 }
	$8 = *([0] + [21604])
	
.LOOP $label$162:
	*((($4 + [856]) + ($3 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$7 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$161 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$162 }
	
.LABEL $label$161
	*(($4 + [720])) = [0]
	*($4 + [712]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$159 }
	*($4 + [712]) = ($7 << [1])
	$8 = (($4 + [712]) | [1])
	goto $label$158 
	
.LABEL $label$160
	*(($4 + [720])) = [0]
	*($4 + [712]) = (int_64)0
	*($4 + [712]) = [0]
	$3 = (($4 + [712]) | [1])
	$7 = $3
	goto $label$157 
	
.LABEL $label$159
	$5 = (($7 + [16]) & [-16])
	$8 = CALL _Znwj($5)
	*($4 + [712]) = ($5 | [1])
	*($4 + [720]) = $8
	*($4 + [716]) = $7
	
.LABEL $label$158
	$5 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$163:
	*(($8 + $3)) = *((($4 + [856]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$163 }
	$7 = ($8 + $7)
	$3 = (($4 + [712]) | [1])
	
.LABEL $label$157
	*($7) = [0]
	$7 = *($4 + [712])
	$8 = ($7 & [1])
	$3 = CALL $239(($4 + [968]), ( *($4 + [720]) ? $3 : $8 ), ( *($4 + [716]) ? uint_32($7 >> [1]) : $8 ))
	$7 = ($3 + [8])
	*((($4 + [856]) + [8])) = *($7)
	*($4 + [856]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	*((($4 + [664]) + [8])) = [0]
	*($4 + [664]) = (int_64)0
	$3 = CALL $261([20322])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$152 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$166 }
	*($4 + [664]) = ($3 << [1])
	$8 = (($4 + [664]) | [1])
	$7 = $8
	if ( $3 ){ goto $label$165 }
	goto $label$164 
	
.LABEL $label$166
	$8 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [664]) = ($8 | [1])
	*($4 + [672]) = $7
	*($4 + [668]) = $3
	$8 = (($4 + [664]) | [1])
	
.LABEL $label$165
	CALL memcpy($7, [20322], $3)
	
.LABEL $label$164
	*(($7 + $3)) = [0]
	$3 = *($4 + [664])
	$7 = ($3 & [1])
	$3 = CALL $239(($4 + [856]), ( *($4 + [672]) ? $8 : $7 ), ( *($4 + [668]) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [352]) + [8])) = *($7)
	*($4 + [352]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	CALL $33($0, $2, ($4 + [352]))
	if ( (*($4 + [352]) & [1]) ){ goto $label$168 }
	if ( (*($4 + [664]) & [1]) ){ goto $label$167 }
	goto $label$151 
	
.LABEL $label$168
	CALL _ZdlPv(*($4 + [360]))
	if ( ((*($4 + [664]) & [1]) == 0) ){ goto $label$151 }
	
.LABEL $label$167
	CALL _ZdlPv(*(($4 + [672])))
	$3 = [1]
	if ( ((*($4 + [856]) & [1]) == 0) ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$153
	CALL $231(($4 + [968]))
	
.LABEL $label$152
	CALL $231(($4 + [664]))
	
.LABEL $label$151
	$3 = [1]
	if ( (*($4 + [856]) & [1]) ){ goto $label$149 }
	
.LABEL $label$150
	if ( (*($4 + [712]) & $3) ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$149
	CALL _ZdlPv(*($4 + [864]))
	if ( ((*($4 + [712]) & $3) == 0) ){ goto $label$147 }
	
.LABEL $label$148
	CALL _ZdlPv(*(($4 + [720])))
	if ( (*($4 + [968]) & [1]) ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$147
	if ( ((*($4 + [968]) & [1]) == 0) ){ goto $label$145 }
	
.LABEL $label$146
	CALL _ZdlPv(*($4 + [976]))
	
.LABEL $label$145
	$1 = *($0)
	*($4 + [712]) = $0
	*($4 + [716]) = ($4 + [1088])
	*($4 + [968]) = $1
	$7 = ($0 + [192])
	if ( ((int_64)*($0 + [192]) == (int_64)CALL current_receiver()) ){ goto $label$169 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$169
	*($4 + [856]) = $7
	*($4 + [860]) = ($4 + [712])
	*($4 + [864]) = ($4 + [968])
	*(($3 = CALL _Znwj([88])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [72]) = $7
	CALL $98(($4 + [856]), $3)
	*($4 + [664]) = $3
	$1 = *($3)
	*($4 + [856]) = $1
	$8 = *($3 + [76])
	*($4 + [608]) = $8
	$5 = ($0 + [220])
	$7 = *($5)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [224]))) ){ goto $label$172 }
	*($7 + [8]) = $1
	*($7 + [16]) = $8
	*($4 + [664]) = [0]
	*($7) = $3
	*($5) = ($7 + [24])
	$3 = *($4 + [664])
	*($4 + [664]) = [0]
	if ( $3 ){ goto $label$171 }
	goto $label$170 
	
.LABEL $label$172
	CALL $99(($0 + [216]), ($4 + [664]), ($4 + [856]), ($4 + [608]))
	$3 = *($4 + [664])
	*($4 + [664]) = [0]
	if ( ($3 == 0) ){ goto $label$170 }
	
.LABEL $label$171
	CALL _ZdlPv($3)
	
.LABEL $label$170
	$3 = *($6)
	$2 = *($3 + [128])
	$1 = *($3 + [64])
	$14 = *(($3 + [72]))
	*((($4 + [8]) + [8])) = $14
	*((($4 + [336]) + [8])) = $14
	*($4 + [336]) = $1
	*($4 + [8]) = $1
	CALL $11($0, $2, ($4 + [8]), [4])
	$5 = ($0 + [352])
	$1 = *($0)
	$7 = *(($0 + [380]))
	$6 = *(($0 + [376]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$175 }
	
.LOOP $label$177:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$176 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$177 }
	goto $label$175 
	
.LABEL $label$176
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$175 }
	if ( ((int_32)*($8 + [292]) == (int_32)$5) ){ goto $label$178 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$178
	if ( $8 ){ goto $label$174 }
	goto $label$173 
	
.LABEL $label$175
	$3 = CALL db_find_i64(*($5), *(($0 + [360])), (int_64)-4157493845350678528, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$173 }
	$8 = CALL $15($5, $3)
	if ( ((int_32)*($8 + [292]) == (int_32)$5) ){ goto $label$174 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$174
	$1 = *($0)
	*($4 + [860]) = ($4 + [1096])
	*($4 + [856]) = ($4 + [1088])
	CALL $100($5, $8, $1, ($4 + [856]))
	
.LABEL $label$173
	$1 = *($4 + [1088])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$179 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$179
	$7 = CALL db_next_i64(*($3 + [152]), ($4 + [856]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$180 }
	CALL $9((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$180
	CALL $70($9, $3)
	$3 = *(($4 + [1036]))
	if ( ($3 == 0) ){ goto $label$181 }
	*(($4 + [1040])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$181
	$3 = *(($4 + [1024]))
	if ( ($3 == 0) ){ goto $label$182 }
	*(($4 + [1028])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$182
	$3 = *($4 + [1012])
	if ( ($3 == 0) ){ goto $label$183 }
	*(($4 + [1016])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$183
	$global$0 = ($4 + [1120])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL _Znwj($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL _Znwj($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $250(($0 + [4]))
	
.LABEL $label$2
	CALL $250(($0 + [16]))
	
.LABEL $label$1
	CALL $250(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $138 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [592])
	$global$0 = $3
	*(($4 = $3) + [536]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [464]) + [24])) = (int_64)0
	*((($4 + [464]) + [40])) = (int_64)0
	*((($4 + [464]) + [64])) = [0]
	*($4 + [472]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [496]) = (int_64)0
	*($4 + [512]) = (int_64)0
	*($4 + [520]) = (int_64)0
	*($4 + [532]) = [0]
	*($4 + [452]) = $2
	*($4 + [448]) = $2
	*($4 + [456]) = ($2 + $5)
	*($4 + [576]) = ($4 + [448])
	*($4 + [16]) = ($4 + [464])
	CALL $154(($4 + [16]), ($4 + [576]))
	*(($3 = ($4 + [8]))) = *($4 + [456])
	*($4) = *($4 + [448])
	$3 = *($3)
	*((($4 + [544]) + [8])) = $3
	*(($6 = (($4 + [560]) + [8]))) = $3
	$7 = *($4)
	*($4 + [560]) = $7
	*($4 + [544]) = $7
	$3 = *($6)
	*((($4 + [576]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [560])
	*($4 + [32]) = $1
	*($4 + [576]) = $1
	*((($4 + [16]) + [40])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*((($4 + [16]) + [64])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [124])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [176])) = $0
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [296])) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*(($4 + [336])) = $0
	*(($4 + [344])) = (int_64)-1
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = [0]
	*(($4 + [376])) = $0
	*(($4 + [384])) = (int_64)-1
	*(($4 + [392])) = (int_64)0
	*(($4 + [400])) = [0]
	*(($4 + [416])) = $0
	*(($4 + [424])) = (int_64)-1
	*(($4 + [432])) = (int_64)0
	*($4 + [328]) = $0
	*($4 + [368]) = $0
	*($4 + [408]) = $0
	*(($4 + [444])) = [0]
	*(($4 + [440])) = [0]
	*($4 + [580]) = ($4 + [536])
	*($4 + [576]) = ($4 + [16])
	CALL $155(($4 + [576]), ($4 + [464]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [16]))
	if ( ((*($4 + [520]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [528])))
	
.LABEL $label$5
	$global$0 = ($4 + [592])
	return [1]
}

int_32 .FUNC $139 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [560])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $264($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [500])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = [0]
	*($4 + [492 align=4]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [544]) = ($4 + [456])
	*($4 + [24]) = ($4 + [472])
	CALL $157(($4 + [24]), ($4 + [544]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [464])
	*($4 + [8]) = *($4 + [456])
	$3 = *($3)
	*((($4 + [512]) + [8])) = $3
	*(($6 = (($4 + [528]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [528]) = $7
	*($4 + [512]) = $7
	$3 = *($6)
	*((($4 + [544]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [528])
	*($4 + [40]) = $1
	*($4 + [544]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [132])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [184])) = $0
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = (int_64)0
	*(($4 + [368])) = [0]
	*(($4 + [384])) = $0
	*(($4 + [392])) = (int_64)-1
	*(($4 + [400])) = (int_64)0
	*(($4 + [408])) = [0]
	*(($4 + [424])) = $0
	*(($4 + [432])) = (int_64)-1
	*(($4 + [440])) = (int_64)0
	*($4 + [336]) = $0
	*($4 + [376]) = $0
	*($4 + [416]) = $0
	*(($4 + [452])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [548]) = ($4 + [504])
	*($4 + [544]) = ($4 + [24])
	CALL $158(($4 + [544]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $267($2)
	
.LABEL $label$4
	CALL $156(($4 + [24]))
	if ( ((*($4 + [492]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [500])))
	
.LABEL $label$5
	$global$0 = ($4 + [560])
	return [1]
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$9 = ($global$0 - [64])
	$global$0 = $9
	$10 = *($1)
	if ( ($10 & [1]) ){ goto $label$6 }
	$10 = uint_32($10 >> [1])
	$11 = ($1 + [1])
	$12 = ($11 + $10)
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = *($1 + [4])
	$11 = *($1 + [8])
	$12 = ($11 + $10)
	if ( ($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $251(*($11)) ){ goto $label$4 }
	$11 = ($11 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$7 }
	$11 = $12
	$10 = [1]
	$13 = *($1)
	if ( (($13 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$8 }
	$10 = ($11 + [1])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $251(*($10)) == 0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($11) = *($10)
	$11 = ($11 + [1])
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$13 = *($1)
	if ( ($13 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$12 = ($1 + $10)
	$10 = ($12 + uint_32($13 >> $10))
	goto $label$1 
	
.LABEL $label$2
	$12 = *($1 + [8])
	$10 = ($12 + *($1 + [4]))
	
.LABEL $label$1
	CALL $242($1, ($11 - $12), ($10 - $11))
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$13 }
	$11 = ($1 + [1])
	$13 = [0]
	$10 = [0]
	$12 = uint_32($12 >> [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = *($1 + [8])
	$13 = [0]
	$10 = [0]
	$12 = *($1 + [4])
	if ( ($12 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	
.LOOP $label$14:
	$10 = ($10 + ((int_32)*($11) == (int_32)[124]))
	$11 = ($11 + [1])
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$14 }
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$10 == (int_32)[6]), [22097])
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = $13
	CALL eosio_assert([1], [22062])
	$10 = CALL $243($1, [124], $13)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$18 }
	CALL $233(($9 + [48]), $1, [0], $10, $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$17 }
	*($9 + [32]) = [0]
	goto $label$16 
	
.LABEL $label$18
	$13 = [0]
	CALL eosio_assert([0], [22080])
	$11 = [0]
	goto $label$15 
	
.LABEL $label$17
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$16
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	$13 = *($9 + [36])
	$11 = *($9 + [32])
	
.LABEL $label$15
	$12 = [0]
	CALL eosio_assert(((int_32)( $13 ? uint_32(($11 & [254]) >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22049])
	$11 = *($9 + [32])
	$13 = CALL $261([20742])
	if ( ((int_32)$13 != (int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$19 }
	$12 = (CALL $244(($9 + [32]), [0], [-1], [20742], $13) == 0)
	
.LABEL $label$19
	CALL eosio_assert($12, [22110])
	CALL $234($2, ($9 + [32]))
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$10 = CALL $243($1, [124], $11)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$23 }
	CALL $233(($9 + [48]), $1, $11, ($10 - $11), $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$22 }
	*($9 + [32]) = [0]
	goto $label$21 
	
.LABEL $label$23
	CALL eosio_assert([0], [22080])
	goto $label$20 
	
.LABEL $label$22
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$21
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	
.LABEL $label$20
	$11 = *($9 + [32])
	CALL eosio_assert(((int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22126])
	$12 = (($9 + [32]) | [1])
	$11 = ( *(($9 + [40])) ? $12 : (*($9 + [32]) & [1]) )
	*($9 + [24]) = $11
	*($9 + [28]) = CALL $261($11)
	*($9 + [8]) = *($9 + [24])
	*($3) = *(CALL $22(($9 + [48]), ($9 + [8])))
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$10 = CALL $243($1, [124], $11)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$27 }
	CALL $233(($9 + [48]), $1, $11, ($10 - $11), $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$26 }
	*($9 + [32]) = [0]
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [22080])
	goto $label$24 
	
.LABEL $label$26
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$25
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	
.LABEL $label$24
	$11 = *($9 + [32])
	CALL eosio_assert(((int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22135])
	*($4) = CALL $247(($9 + [32]), [0], [10])
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$10 = CALL $243($1, [124], $11)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$31 }
	CALL $233(($9 + [48]), $1, $11, ($10 - $11), $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$30 }
	*($9 + [32]) = [0]
	goto $label$29 
	
.LABEL $label$31
	CALL eosio_assert([0], [22080])
	goto $label$28 
	
.LABEL $label$30
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$29
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	
.LABEL $label$28
	$11 = *($9 + [32])
	CALL eosio_assert(((int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22146])
	*($5) = CALL $247(($9 + [32]), [0], [10])
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$10 = CALL $243($1, [124], $11)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$35 }
	CALL $233(($9 + [48]), $1, $11, ($10 - $11), $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$34 }
	*($9 + [32]) = [0]
	goto $label$33 
	
.LABEL $label$35
	CALL eosio_assert([0], [22080])
	goto $label$32 
	
.LABEL $label$34
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$33
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	
.LABEL $label$32
	$11 = *($9 + [32])
	CALL eosio_assert(((int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22155])
	CALL $234($6, ($9 + [32]))
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$10 = CALL $243($1, [124], $11)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$39 }
	CALL $233(($9 + [48]), $1, $11, ($10 - $11), $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$38 }
	*($9 + [32]) = [0]
	goto $label$37 
	
.LABEL $label$39
	CALL eosio_assert([0], [22080])
	goto $label$36 
	
.LABEL $label$38
	*(*(($9 + [40]))) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$37
	CALL $236(($9 + [32]), [0])
	*((($9 + [32]) + [8])) = *((($9 + [48]) + [8]))
	*($9 + [32]) = *($9 + [48])
	
.LABEL $label$36
	$11 = *($9 + [32])
	CALL eosio_assert(((int_32)( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22165])
	$13 = ($9 + [40])
	$11 = ( *($13) ? $12 : (*($9 + [32]) & [1]) )
	*($9 + [16]) = $11
	*($9 + [20]) = CALL $261($11)
	*($9) = *($9 + [16])
	*($7) = *(CALL $22(($9 + [48]), $9))
	CALL $233(($9 + [48]), $1, ($10 + [1]), [-1], $1)
	if ( (*($9 + [32]) & [1]) ){ goto $label$41 }
	*($9 + [32]) = [0]
	goto $label$40 
	
.LABEL $label$41
	*(*($13)) = [0]
	*($9 + [36]) = [0]
	
.LABEL $label$40
	CALL $236(($9 + [32]), [0])
	$10 = (($9 + [48]) + [8])
	*((($9 + [32]) + [8])) = *($10)
	*($9 + [32]) = *($9 + [48])
	$11 = *($9 + [32])
	if ( (( *($9 + [36]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$46 }
	CALL $232(($9 + [48]), ($9 + [32]))
	if ( (*($8) & [1]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$46
	*($10) = [0]
	*($9 + [48]) = (int_64)0
	$11 = CALL $261([17531])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$49 }
	*($9 + [48]) = ($11 << [1])
	$10 = (($9 + [48]) | [1])
	if ( $11 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($9 + [48]) = ($12 | [1])
	*($9 + [56]) = $10
	*($9 + [52]) = $11
	
.LABEL $label$48
	CALL memcpy($10, [17531], $11)
	
.LABEL $label$47
	*(($10 + $11)) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$43 }
	
.LABEL $label$45
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	goto $label$42 
	
.LABEL $label$44
	CALL $231(($9 + [48]))
	
.LABEL $label$43
	*($8) = [0]
	
.LABEL $label$42
	CALL $236($8, [0])
	*(($8 + [8])) = *((($9 + [48]) + [8]))
	*($8) = *($9 + [48])
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$50 }
	CALL _ZdlPv(*((($9 + [32]) + [8])))
	
.LABEL $label$50
	$global$0 = ($9 + [64])
	(unreachable)
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$9 = ($global$0 - [144])
	$global$0 = $9
	$10 = *($1)
	if ( ($10 & [1]) ){ goto $label$6 }
	$10 = uint_32($10 >> [1])
	$11 = ($1 + [1])
	$12 = ($11 + $10)
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = *($1 + [4])
	$11 = *($1 + [8])
	$12 = ($11 + $10)
	if ( ($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $251(*($11)) ){ goto $label$4 }
	$11 = ($11 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$7 }
	$11 = $12
	$10 = [1]
	$13 = *($1)
	if ( (($13 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$8 }
	$10 = ($11 + [1])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $251(*($10)) == 0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($11) = *($10)
	$11 = ($11 + [1])
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$13 = *($1)
	if ( ($13 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$12 = ($1 + $10)
	$10 = ($12 + uint_32($13 >> $10))
	goto $label$1 
	
.LABEL $label$2
	$12 = *($1 + [8])
	$10 = ($12 + *($1 + [4]))
	
.LABEL $label$1
	CALL $242($1, ($11 - $12), ($10 - $11))
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$13 }
	$11 = ($1 + [1])
	$13 = [0]
	$10 = [0]
	$12 = uint_32($12 >> [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = *($1 + [8])
	$13 = [0]
	$10 = [0]
	$12 = *($1 + [4])
	if ( ($12 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	
.LOOP $label$14:
	$10 = ($10 + ((int_32)*($11) == (int_32)[124]))
	$11 = ($11 + [1])
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$14 }
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$10 == (int_32)[6]), [22097])
	*($9 + [80]) = (int_64)0
	*($9 + [88]) = $13
	CALL eosio_assert([1], [22062])
	$10 = CALL $243($1, [124], $13)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$18 }
	CALL $233(($9 + [24]), $1, [0], $10, $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$17 }
	*($9 + [80]) = [0]
	goto $label$16 
	
.LABEL $label$18
	$13 = [0]
	CALL eosio_assert([0], [22080])
	$11 = [0]
	goto $label$15 
	
.LABEL $label$17
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$16
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	$13 = *($9 + [84])
	$11 = *($9 + [80])
	
.LABEL $label$15
	$12 = [0]
	CALL eosio_assert(((int_32)( $13 ? uint_32(($11 & [254]) >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22049])
	$11 = *($9 + [80])
	$13 = CALL $261([20864])
	if ( ((int_32)$13 != (int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$19 }
	$12 = (CALL $244(($9 + [80]), [0], [-1], [20864], $13) == 0)
	
.LABEL $label$19
	CALL eosio_assert($12, [22110])
	CALL $234($2, ($9 + [80]))
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$23 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$22 }
	*($9 + [80]) = [0]
	goto $label$21 
	
.LABEL $label$23
	CALL eosio_assert([0], [22080])
	goto $label$20 
	
.LABEL $label$22
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$21
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$20
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22174])
	$10 = (($9 + [80]) | [1])
	$11 = ( *(($9 + [88])) ? $10 : (*($9 + [80]) & [1]) )
	*($9 + [72]) = $11
	*($9 + [76]) = CALL $261($11)
	*($9 + [16]) = *($9 + [72])
	*($3) = *(CALL $22(($9 + [24]), ($9 + [16])))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$27 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$26 }
	*($9 + [80]) = [0]
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [22080])
	goto $label$24 
	
.LABEL $label$26
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$25
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$24
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22146])
	*($4) = CALL $247(($9 + [80]), [0], [10])
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$31 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$30 }
	*($9 + [80]) = [0]
	goto $label$29 
	
.LABEL $label$31
	CALL eosio_assert([0], [22080])
	goto $label$28 
	
.LABEL $label$30
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$29
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$28
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22155])
	CALL $234($5, ($9 + [80]))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$35 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$34 }
	*($9 + [80]) = [0]
	goto $label$33 
	
.LABEL $label$35
	CALL eosio_assert([0], [22080])
	goto $label$32 
	
.LABEL $label$34
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$33
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$32
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22165])
	$11 = ( *(($9 + [88])) ? $10 : (*($9 + [80]) & [1]) )
	*($9 + [64]) = $11
	*($9 + [68]) = CALL $261($11)
	*($9 + [8]) = *($9 + [64])
	*($6) = *(CALL $22(($9 + [24]), ($9 + [8])))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$39 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$38 }
	*($9 + [80]) = [0]
	goto $label$37 
	
.LABEL $label$39
	CALL eosio_assert([0], [22080])
	goto $label$36 
	
.LABEL $label$38
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$37
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$36
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22185])
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == (int_32)[53]), [22195])
	$11 = ($11 & [1])
	$11 = *($9 + [80])
	$13 = ( *($9 + [84]) ? uint_32($11 >> [1]) : $11 )
	if ( ($13 <= [3]) ){ goto $label$43 }
	$2 = *(($9 + [88]))
	if ( ((int_32)CALL $261([16939]) != (int_32)[3]) ){ goto $label$43 }
	$11 = ( $2 ? $10 : $11 )
	if ( CALL $260($11, [16939], [3]) ){ goto $label$43 }
	*($9 + [100]) = ($13 + [-3])
	*($9 + [96]) = ($11 + [3])
	*($9) = *($9 + [96])
	CALL $4(($9 + [104]), $9)
	*(($9 + [60])) = [0]
	*(($9 + [52])) = (int_64)0
	*(($9 + [44])) = (int_64)0
	*(($9 + [36])) = (int_64)0
	*($9 + [28 align=4]) = (int_64)0
	*($9 + [24]) = [0]
	CALL memcpy((($9 + [24]) | [4]), ($9 + [104]), [33])
	*(($7 + [29])) = *((($9 + [24]) + [29]))
	*(($7 + [24])) = *((($9 + [24]) + [24]))
	*(($7 + [16])) = *((($9 + [24]) + [16]))
	*(($7 + [8])) = *((($9 + [24]) + [8]))
	*($7) = *($9 + [24])
	CALL $233(($9 + [24]), $1, ($12 + [1]), [-1], $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$45 }
	*($9 + [80]) = [0]
	goto $label$44 
	
.LABEL $label$45
	*(*((($9 + [80]) + [8]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$44
	CALL $236(($9 + [80]), [0])
	$10 = (($9 + [24]) + [8])
	*((($9 + [80]) + [8])) = *($10)
	*($9 + [80]) = *($9 + [24])
	$11 = *($9 + [80])
	if ( (( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$47 }
	CALL $232(($9 + [24]), ($9 + [80]))
	if ( (*($8) & [1]) ){ goto $label$46 }
	goto $label$41 
	
.LABEL $label$47
	*($10) = [0]
	*($9 + [24]) = (int_64)0
	$11 = CALL $261([17531])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$50 }
	*($9 + [24]) = ($11 << [1])
	$10 = (($9 + [24]) | [1])
	if ( $11 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($9 + [24]) = ($12 | [1])
	*($9 + [32]) = $10
	*($9 + [28]) = $11
	
.LABEL $label$49
	CALL memcpy($10, [17531], $11)
	
.LABEL $label$48
	*(($10 + $11)) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$41 }
	
.LABEL $label$46
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	goto $label$40 
	
.LABEL $label$43
	CALL eosio_assert([0], [16952])
	
.LABEL $label$42
	CALL $231(($9 + [24]))
	
.LABEL $label$41
	*($8) = [0]
	
.LABEL $label$40
	CALL $236($8, [0])
	*(($8 + [8])) = *((($9 + [24]) + [8]))
	*($8) = *($9 + [24])
	if ( ((*($9 + [80]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*((($9 + [80]) + [8])))
	
.LABEL $label$51
	$global$0 = ($9 + [144])
	(unreachable)
	(unreachable)
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$3 = *($0 + [8])
	$0 = *($0)
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *(($0 + [8]))
	$3 = ( *(($0 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$3 = *($0 + [20])
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [24])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *(($0 + [20]))
	$3 = ( *(($0 + [24])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$3 = *($0 + [32])
	$4 = (CASTING uint_64)(uint_32 ( *(($0 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$0 = *(($0 + [32]))
	$0 = ( *(($0 + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$6 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$6
	*($2) = ($1 + [4])
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $182(*($1), ($3 + [8]))
	CALL $182(*($1), ($3 + [20]))
	CALL $182(*($1), ($3 + [32]))
	$0 = ($3 + [44])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

int_32 .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	$6 = ($0 + [28])
	$2 = *($4 + [40])
	$7 = [73]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	$1 = *($4 + [80])
	$1 = ( *(($4 + [84])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$7 = ($1 + $7)
	$2 = (CASTING uint_64)(uint_32 $1)
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	if ( ($7 == 0) ){ goto $label$4 }
	CALL $2($6, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$7 = [0]
	
.LABEL $label$3
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $136(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $217(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2) = $4
	CALL $218($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [688])
	$global$0 = $3
	CALL memory()
	*($3 + [672]) = [20949]
	*($3 + [676]) = CALL $261([20949])
	*($3 + [336]) = *($3 + [672])
	CALL $22(($3 + [680]), ($3 + [336]))
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$1 }
	*($3 + [664]) = [19976]
	*($3 + [668]) = CALL $261([19976])
	*($3 + [328]) = *($3 + [664])
	CALL $22(($3 + [680]), ($3 + [328]))
	CALL eosio_assert(((int_64)$1 == (int_64)6138663577826885632), [20957])
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$2 }
	*($3 + [656]) = [20742]
	*($3 + [660]) = CALL $261([20742])
	*($3 + [320]) = *($3 + [656])
	CALL $22(($3 + [680]), ($3 + [320]))
	if ( ((int_64)$2 != (int_64)-4421662258690523136) ){ goto $label$3 }
	*($3 + [652]) = [0]
	*($3 + [648]) = [1]
	*($3 + [8]) = *($3 + [648])
	CALL $138($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [640]) = [21021]
	*($3 + [644]) = CALL $261([21021])
	*($3 + [312]) = *($3 + [640])
	CALL $22(($3 + [680]), ($3 + [312]))
	if ( ((int_64)$2 != (int_64)3596543084609404928) ){ goto $label$4 }
	*($3 + [636]) = [0]
	*($3 + [632]) = [2]
	*($3 + [16]) = *($3 + [632])
	CALL $139($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [624]) = [20846]
	*($3 + [628]) = CALL $261([20846])
	*($3 + [304]) = *($3 + [624])
	CALL $22(($3 + [680]), ($3 + [304]))
	if ( ((int_64)$2 != (int_64)4292831259513585664) ){ goto $label$5 }
	*($3 + [620]) = [0]
	*($3 + [616]) = [3]
	*($3 + [24]) = *($3 + [616])
	CALL $140($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [608]) = [20854]
	*($3 + [612]) = CALL $261([20854])
	*($3 + [296]) = *($3 + [608])
	CALL $22(($3 + [680]), ($3 + [296]))
	if ( ((int_64)$2 != (int_64)4292903715788554240) ){ goto $label$6 }
	*($3 + [604]) = [0]
	*($3 + [600]) = [4]
	*($3 + [32]) = *($3 + [600])
	CALL $140($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [592]) = [21031]
	*($3 + [596]) = CALL $261([21031])
	*($3 + [288]) = *($3 + [592])
	CALL $22(($3 + [680]), ($3 + [288]))
	if ( ((int_64)$2 != (int_64)3596542794555981824) ){ goto $label$7 }
	*($3 + [588]) = [0]
	*($3 + [584]) = [5]
	*($3 + [40]) = *($3 + [584])
	CALL $141($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [576]) = [19824]
	*($3 + [580]) = CALL $261([19824])
	*($3 + [280]) = *($3 + [576])
	CALL $22(($3 + [680]), ($3 + [280]))
	if ( ((int_64)$2 != (int_64)-4711543483251294208) ){ goto $label$8 }
	*($3 + [572]) = [0]
	*($3 + [568]) = [6]
	*($3 + [48]) = *($3 + [568])
	CALL $142($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [560]) = [19701]
	*($3 + [564]) = CALL $261([19701])
	*($3 + [272]) = *($3 + [560])
	CALL $22(($3 + [680]), ($3 + [272]))
	if ( ((int_64)$2 != (int_64)6609776690762088448) ){ goto $label$9 }
	*($3 + [556]) = [0]
	*($3 + [552]) = [7]
	*($3 + [56]) = *($3 + [552])
	CALL $142($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [544]) = [19982]
	*($3 + [548]) = CALL $261([19982])
	*($3 + [264]) = *($3 + [544])
	CALL $22(($3 + [680]), ($3 + [264]))
	if ( ((int_64)$2 != (int_64)-3075276123059568640) ){ goto $label$10 }
	*($3 + [540]) = [0]
	*($3 + [536]) = [8]
	*($3 + [64]) = *($3 + [536])
	CALL $143($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [528]) = [20864]
	*($3 + [532]) = CALL $261([20864])
	*($3 + [256]) = *($3 + [528])
	CALL $22(($3 + [680]), ($3 + [256]))
	if ( ((int_64)$2 != (int_64)4520825990649217024) ){ goto $label$11 }
	*($3 + [524]) = [0]
	*($3 + [520]) = [9]
	*($3 + [72]) = *($3 + [520])
	CALL $140($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [512]) = [21040]
	*($3 + [516]) = CALL $261([21040])
	*($3 + [248]) = *($3 + [512])
	CALL $22(($3 + [680]), ($3 + [248]))
	if ( ((int_64)$2 != (int_64)3596542801350754304) ){ goto $label$12 }
	*($3 + [508]) = [0]
	*($3 + [504]) = [10]
	*($3 + [80]) = *($3 + [504])
	CALL $144($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [496]) = [21049]
	*($3 + [500]) = CALL $261([21049])
	*($3 + [240]) = *($3 + [496])
	CALL $22(($3 + [680]), ($3 + [240]))
	if ( ((int_64)$2 != (int_64)6609776407503437824) ){ goto $label$13 }
	*($3 + [492]) = [0]
	*($3 + [488]) = [11]
	*($3 + [88]) = *($3 + [488])
	CALL $145($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	*($3 + [480]) = [21058]
	*($3 + [484]) = CALL $261([21058])
	*($3 + [232]) = *($3 + [480])
	CALL $22(($3 + [680]), ($3 + [232]))
	if ( ((int_64)$2 != (int_64)3849068343994613760) ){ goto $label$14 }
	*($3 + [476]) = [0]
	*($3 + [472]) = [12]
	*($3 + [96]) = *($3 + [472])
	CALL $146($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$14
	*($3 + [464]) = [20872]
	*($3 + [468]) = CALL $261([20872])
	*($3 + [224]) = *($3 + [464])
	CALL $22(($3 + [680]), ($3 + [224]))
	if ( ((int_64)$2 != (int_64)-4417031972023435264) ){ goto $label$15 }
	*($3 + [460]) = [0]
	*($3 + [456]) = [13]
	*($3 + [104]) = *($3 + [456])
	CALL $147($1, $1, ($3 + [104]))
	CALL eosio_exit([0])
	
.LABEL $label$15
	*($3 + [448]) = [21065]
	*($3 + [452]) = CALL $261([21065])
	*($3 + [216]) = *($3 + [448])
	CALL $22(($3 + [680]), ($3 + [216]))
	if ( ((int_64)$2 != (int_64)-4417355951892332544) ){ goto $label$16 }
	*($3 + [444]) = [0]
	*($3 + [440]) = [14]
	*($3 + [112]) = *($3 + [440])
	CALL $146($1, $1, ($3 + [112]))
	CALL eosio_exit([0])
	
.LABEL $label$16
	*($3 + [432]) = [21074]
	*($3 + [436]) = CALL $261([21074])
	*($3 + [208]) = *($3 + [432])
	CALL $22(($3 + [680]), ($3 + [208]))
	if ( ((int_64)$2 != (int_64)-4417335685694115440) ){ goto $label$17 }
	*($3 + [428]) = [0]
	*($3 + [424]) = [15]
	*($3 + [120]) = *($3 + [424])
	CALL $148($1, $1, ($3 + [120]))
	CALL eosio_exit([0])
	
.LABEL $label$17
	*($3 + [416]) = [21087]
	*($3 + [420]) = CALL $261([21087])
	*($3 + [200]) = *($3 + [416])
	CALL $22(($3 + [680]), ($3 + [200]))
	if ( ((int_64)$2 != (int_64)-4417148075471821312) ){ goto $label$18 }
	*($3 + [412]) = [0]
	*($3 + [408]) = [16]
	*($3 + [128]) = *($3 + [408])
	CALL $149($1, $1, ($3 + [128]))
	CALL eosio_exit([0])
	
.LABEL $label$18
	*($3 + [400]) = [21099]
	*($3 + [404]) = CALL $261([21099])
	*($3 + [192]) = *($3 + [400])
	CALL $22(($3 + [680]), ($3 + [192]))
	if ( ((int_64)$2 != (int_64)-4417029266017353728) ){ goto $label$19 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [17]
	*($3 + [136]) = *($3 + [392])
	CALL $150($1, $1, ($3 + [136]))
	CALL eosio_exit([0])
	
.LABEL $label$19
	*($3 + [384]) = [21109]
	*($3 + [388]) = CALL $261([21109])
	*($3 + [184]) = *($3 + [384])
	CALL $22(($3 + [680]), ($3 + [184]))
	if ( ((int_64)$2 != (int_64)-7119377200469508096) ){ goto $label$20 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [18]
	*($3 + [144]) = *($3 + [376])
	CALL $151($1, $1, ($3 + [144]))
	CALL eosio_exit([0])
	
.LABEL $label$20
	*($3 + [368]) = [17790]
	*($3 + [372]) = CALL $261([17790])
	*($3 + [176]) = *($3 + [368])
	CALL $22(($3 + [680]), ($3 + [176]))
	if ( ((int_64)$2 != (int_64)5455799419163115520) ){ goto $label$2 }
	*($3 + [364]) = [0]
	*($3 + [360]) = [19]
	*($3 + [152]) = *($3 + [360])
	CALL $152($1, $1, ($3 + [152]))
	CALL eosio_exit([0])
	
.LABEL $label$2
	*($3 + [352]) = [17475]
	*($3 + [356]) = CALL $261([17475])
	*($3 + [168]) = *($3 + [352])
	CALL $22(($3 + [680]), ($3 + [168]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$21 }
	*($3 + [348]) = [0]
	*($3 + [344]) = [20]
	*($3 + [160]) = *($3 + [344])
	CALL $153($0, $1, ($3 + [160]))
	
.LABEL $label$21
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $260 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $261 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $163(*($1), *($0 + [4]))
	CALL $163(*($1), *($0 + [8]))
	CALL $163(*($1), *($0 + [12]))
	CALL $163(*($1), *($0 + [16]))
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $262 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $252())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $263($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $264($1)
	
.LABEL $label$2
	*(CALL $252()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $264(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $267($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $266($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [16983])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	$5 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $5
	$2 = ($2 + [8])
	if ( ((int_32)(*(($3 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $2, [8])
	*($4) = (*($4) + [8])
	$5 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [72]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [64])
	CALL $212(($3 + [32]), ($3 + [24]))
	*($5 + [76]) = $1
	*($5 + [80 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $99(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $202 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	$7 = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$8 = *($0 + [12])
	$3 = *($1)
	$4 = *($3 + [4])
	$9 = [0]
	
.LOOP $label$5:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [22339])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	$5 = *($4)
	$6 = ($4 + [1])
	*(($3 + [4])) = $6
	$4 = ($9 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$9 = ($4 + [7])
	$4 = $6
	if ( ($5 & [128]) ){ goto $label$5 }
	*($8) = $7
	$4 = ($8 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $6) > (uint_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$6 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $6, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	CALL $163(*($1), *($0 + [16]))
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $202(*($0 + [12]), $1, [1])
	CALL $182(*($1), *($0 + [16]))
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

int_32 .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[44]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	CALL $207($4, ($2 + [8]), [1])
	$7 = *($6 + [4])
	$6 = *($2 + [8])
	if ( ((int_32)(*($6 + [8]) - $7) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$7 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($7, ($4 + [40]), [2])
	*(($6 = ($6 + [4]))) = (*($6) + [2])
	$4 = ($4 + [44])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[24]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [31]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [31]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*($2 + [20]) = ($4 + [16])
	CALL $208(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$18
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$20
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$22
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$27 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$28 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$28
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$29 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$29
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$30 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$30
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$31 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$31
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$32 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$32
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$33 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$33
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [84])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$34 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$34
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [88])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$35 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$35
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $182(*($1), *($0 + [92]))
	$global$0 = ($2 + [16])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$9 = ($global$0 - [144])
	$global$0 = $9
	$10 = *($1)
	if ( ($10 & [1]) ){ goto $label$6 }
	$10 = uint_32($10 >> [1])
	$11 = ($1 + [1])
	$12 = ($11 + $10)
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = *($1 + [4])
	$11 = *($1 + [8])
	$12 = ($11 + $10)
	if ( ($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $251(*($11)) ){ goto $label$4 }
	$11 = ($11 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$7 }
	$11 = $12
	$10 = [1]
	$13 = *($1)
	if ( (($13 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$8 }
	$10 = ($11 + [1])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $251(*($10)) == 0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($11) = *($10)
	$11 = ($11 + [1])
	$10 = ($10 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$9 }
	
.LABEL $label$8
	$10 = [1]
	$13 = *($1)
	if ( ($13 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$12 = ($1 + $10)
	$10 = ($12 + uint_32($13 >> $10))
	goto $label$1 
	
.LABEL $label$2
	$12 = *($1 + [8])
	$10 = ($12 + *($1 + [4]))
	
.LABEL $label$1
	CALL $242($1, ($11 - $12), ($10 - $11))
	$12 = *($1)
	if ( ($12 & [1]) ){ goto $label$13 }
	$11 = ($1 + [1])
	$13 = [0]
	$10 = [0]
	$12 = uint_32($12 >> [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = *($1 + [8])
	$13 = [0]
	$10 = [0]
	$12 = *($1 + [4])
	if ( ($12 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	
.LOOP $label$14:
	$10 = ($10 + ((int_32)*($11) == (int_32)[124]))
	$11 = ($11 + [1])
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$14 }
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$10 == (int_32)[6]), [22097])
	*($9 + [80]) = (int_64)0
	*($9 + [88]) = $13
	CALL eosio_assert([1], [22062])
	$10 = CALL $243($1, [124], $13)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$18 }
	CALL $233(($9 + [24]), $1, [0], $10, $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$17 }
	*($9 + [80]) = [0]
	goto $label$16 
	
.LABEL $label$18
	$13 = [0]
	CALL eosio_assert([0], [22080])
	$11 = [0]
	goto $label$15 
	
.LABEL $label$17
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$16
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	$13 = *($9 + [84])
	$11 = *($9 + [80])
	
.LABEL $label$15
	$12 = [0]
	CALL eosio_assert(((int_32)( $13 ? uint_32(($11 & [254]) >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22049])
	$11 = *($9 + [80])
	$13 = CALL $261([20846])
	if ( ((int_32)$13 != (int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$21 }
	if ( (CALL $244(($9 + [80]), [0], [-1], [20846], $13) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$11 = *($9 + [80])
	$13 = CALL $261([20854])
	if ( ((int_32)$13 != (int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$19 }
	$12 = (CALL $244(($9 + [80]), [0], [-1], [20854], $13) == 0)
	goto $label$19 
	
.LABEL $label$20
	$12 = [1]
	
.LABEL $label$19
	CALL eosio_assert($12, [22110])
	CALL $234($2, ($9 + [80]))
	$11 = ($10 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$25 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$24 }
	*($9 + [80]) = [0]
	goto $label$23 
	
.LABEL $label$25
	CALL eosio_assert([0], [22080])
	goto $label$22 
	
.LABEL $label$24
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$23
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$22
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22174])
	$10 = (($9 + [80]) | [1])
	$11 = ( *(($9 + [88])) ? $10 : (*($9 + [80]) & [1]) )
	*($9 + [72]) = $11
	*($9 + [76]) = CALL $261($11)
	*($9 + [16]) = *($9 + [72])
	*($3) = *(CALL $22(($9 + [24]), ($9 + [16])))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$29 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$28 }
	*($9 + [80]) = [0]
	goto $label$27 
	
.LABEL $label$29
	CALL eosio_assert([0], [22080])
	goto $label$26 
	
.LABEL $label$28
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$27
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$26
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22146])
	*($4) = CALL $247(($9 + [80]), [0], [10])
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$33 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$32 }
	*($9 + [80]) = [0]
	goto $label$31 
	
.LABEL $label$33
	CALL eosio_assert([0], [22080])
	goto $label$30 
	
.LABEL $label$32
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$31
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$30
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22155])
	CALL $234($5, ($9 + [80]))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$37 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$36 }
	*($9 + [80]) = [0]
	goto $label$35 
	
.LABEL $label$37
	CALL eosio_assert([0], [22080])
	goto $label$34 
	
.LABEL $label$36
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$35
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$34
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22165])
	$11 = ( *(($9 + [88])) ? $10 : (*($9 + [80]) & [1]) )
	*($9 + [64]) = $11
	*($9 + [68]) = CALL $261($11)
	*($9 + [8]) = *($9 + [64])
	*($6) = *(CALL $22(($9 + [24]), ($9 + [8])))
	$11 = ($12 + [1])
	CALL eosio_assert(((int_32)$11 != (int_32)[-1]), [22062])
	$12 = CALL $243($1, [124], $11)
	if ( ((int_32)$12 == (int_32)[-1]) ){ goto $label$41 }
	CALL $233(($9 + [24]), $1, $11, ($12 - $11), $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$40 }
	*($9 + [80]) = [0]
	goto $label$39 
	
.LABEL $label$41
	CALL eosio_assert([0], [22080])
	goto $label$38 
	
.LABEL $label$40
	*(*(($9 + [88]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$39
	CALL $236(($9 + [80]), [0])
	*((($9 + [80]) + [8])) = *((($9 + [24]) + [8]))
	*($9 + [80]) = *($9 + [24])
	
.LABEL $label$38
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) != (int_32)[0]), [22185])
	$11 = *($9 + [80])
	CALL eosio_assert(((int_32)( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == (int_32)[53]), [22195])
	$11 = ($11 & [1])
	$11 = *($9 + [80])
	$13 = ( *($9 + [84]) ? uint_32($11 >> [1]) : $11 )
	if ( ($13 <= [3]) ){ goto $label$45 }
	$2 = *(($9 + [88]))
	if ( ((int_32)CALL $261([16939]) != (int_32)[3]) ){ goto $label$45 }
	$11 = ( $2 ? $10 : $11 )
	if ( CALL $260($11, [16939], [3]) ){ goto $label$45 }
	*($9 + [100]) = ($13 + [-3])
	*($9 + [96]) = ($11 + [3])
	*($9) = *($9 + [96])
	CALL $4(($9 + [104]), $9)
	*(($9 + [60])) = [0]
	*(($9 + [52])) = (int_64)0
	*(($9 + [44])) = (int_64)0
	*(($9 + [36])) = (int_64)0
	*($9 + [28 align=4]) = (int_64)0
	*($9 + [24]) = [0]
	CALL memcpy((($9 + [24]) | [4]), ($9 + [104]), [33])
	*(($7 + [29])) = *((($9 + [24]) + [29]))
	*(($7 + [24])) = *((($9 + [24]) + [24]))
	*(($7 + [16])) = *((($9 + [24]) + [16]))
	*(($7 + [8])) = *((($9 + [24]) + [8]))
	*($7) = *($9 + [24])
	CALL $233(($9 + [24]), $1, ($12 + [1]), [-1], $1)
	if ( (*($9 + [80]) & [1]) ){ goto $label$47 }
	*($9 + [80]) = [0]
	goto $label$46 
	
.LABEL $label$47
	*(*((($9 + [80]) + [8]))) = [0]
	*($9 + [84]) = [0]
	
.LABEL $label$46
	CALL $236(($9 + [80]), [0])
	$10 = (($9 + [24]) + [8])
	*((($9 + [80]) + [8])) = *($10)
	*($9 + [80]) = *($9 + [24])
	$11 = *($9 + [80])
	if ( (( *($9 + [84]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$49 }
	CALL $232(($9 + [24]), ($9 + [80]))
	if ( (*($8) & [1]) ){ goto $label$48 }
	goto $label$43 
	
.LABEL $label$49
	*($10) = [0]
	*($9 + [24]) = (int_64)0
	$11 = CALL $261([17531])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$52 }
	*($9 + [24]) = ($11 << [1])
	$10 = (($9 + [24]) | [1])
	if ( $11 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$12 = (($11 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($9 + [24]) = ($12 | [1])
	*($9 + [32]) = $10
	*($9 + [28]) = $11
	
.LABEL $label$51
	CALL memcpy($10, [17531], $11)
	
.LABEL $label$50
	*(($10 + $11)) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$43 }
	
.LABEL $label$48
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	goto $label$42 
	
.LABEL $label$45
	CALL eosio_assert([0], [16952])
	
.LABEL $label$44
	CALL $231(($9 + [24]))
	
.LABEL $label$43
	*($8) = [0]
	
.LABEL $label$42
	CALL $236($8, [0])
	*(($8 + [8])) = *((($9 + [24]) + [8]))
	*($8) = *($9 + [24])
	if ( ((*($9 + [80]) & [1]) == 0) ){ goto $label$53 }
	CALL _ZdlPv(*((($9 + [80]) + [8])))
	
.LABEL $label$53
	$global$0 = ($9 + [144])
	(unreachable)
	(unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [48])
	$global$0 = $6
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$6 }
	$7 = uint_32($7 >> [1])
	$8 = ($1 + [1])
	$9 = ($8 + $7)
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = *($1 + [4])
	$8 = *($1 + [8])
	$9 = ($8 + $7)
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $251(*($8)) ){ goto $label$4 }
	$8 = ($8 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	$8 = $9
	$7 = [1]
	$10 = *($1)
	if ( (($10 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$7 = ($8 + [1])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $251(*($7)) == 0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($8) = *($7)
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	$7 = [1]
	$10 = *($1)
	if ( ($10 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = ($1 + $7)
	$7 = ($9 + uint_32($10 >> $7))
	goto $label$1 
	
.LABEL $label$2
	$9 = *($1 + [8])
	$7 = ($9 + *($1 + [4]))
	
.LABEL $label$1
	CALL $242($1, ($8 - $9), ($7 - $8))
	$9 = *($1)
	if ( ($9 & [1]) ){ goto $label$13 }
	$8 = ($1 + [1])
	$10 = [0]
	$7 = [0]
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$8 = *($1 + [8])
	$10 = [0]
	$7 = [0]
	$9 = *($1 + [4])
	if ( ($9 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = [0]
	
.LOOP $label$14:
	$7 = ($7 + ((int_32)*($8) == (int_32)[124]))
	$8 = ($8 + [1])
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$14 }
	$7 = ((int_32)$7 == (int_32)[3])
	
.LABEL $label$11
	CALL eosio_assert($7, [22097])
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = $10
	CALL eosio_assert([1], [22062])
	$7 = CALL $243($1, [124], $10)
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$18 }
	CALL $233(($6 + [32]), $1, [0], $7, $1)
	if ( (*($6 + [16]) & [1]) ){ goto $label$17 }
	*($6 + [16]) = [0]
	goto $label$16 
	
.LABEL $label$18
	$10 = [0]
	CALL eosio_assert([0], [22080])
	$8 = [0]
	goto $label$15 
	
.LABEL $label$17
	*(*(($6 + [24]))) = [0]
	*($6 + [20]) = [0]
	
.LABEL $label$16
	CALL $236(($6 + [16]), [0])
	*((($6 + [16]) + [8])) = *((($6 + [32]) + [8]))
	*($6 + [16]) = *($6 + [32])
	$10 = *($6 + [20])
	$8 = *($6 + [16])
	
.LABEL $label$15
	$9 = [0]
	CALL eosio_assert(((int_32)( $10 ? uint_32(($8 & [254]) >> [1]) : ($8 & [1]) ) != (int_32)[0]), [22049])
	$8 = *($6 + [16])
	$10 = CALL $261([20872])
	if ( ((int_32)$10 != (int_32)( *($6 + [20]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$19 }
	$9 = (CALL $244(($6 + [16]), [0], [-1], [20872], $10) == 0)
	
.LABEL $label$19
	CALL eosio_assert($9, [22110])
	CALL $234($2, ($6 + [16]))
	$8 = ($7 + [1])
	CALL eosio_assert(((int_32)$8 != (int_32)[-1]), [22062])
	$7 = CALL $243($1, [124], $8)
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$23 }
	CALL $233(($6 + [32]), $1, $8, ($7 - $8), $1)
	if ( (*($6 + [16]) & [1]) ){ goto $label$22 }
	*($6 + [16]) = [0]
	goto $label$21 
	
.LABEL $label$23
	CALL eosio_assert([0], [22080])
	goto $label$20 
	
.LABEL $label$22
	*(*(($6 + [24]))) = [0]
	*($6 + [20]) = [0]
	
.LABEL $label$21
	CALL $236(($6 + [16]), [0])
	*((($6 + [16]) + [8])) = *((($6 + [32]) + [8]))
	*($6 + [16]) = *($6 + [32])
	
.LABEL $label$20
	$8 = *($6 + [16])
	CALL eosio_assert(((int_32)( *($6 + [20]) ? uint_32($8 >> [1]) : ($8 & [1]) ) != (int_32)[0]), [22146])
	*($3) = CALL $247(($6 + [16]), [0], [10])
	$8 = ($7 + [1])
	CALL eosio_assert(((int_32)$8 != (int_32)[-1]), [22062])
	$7 = CALL $243($1, [124], $8)
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$27 }
	CALL $233(($6 + [32]), $1, $8, ($7 - $8), $1)
	if ( (*($6 + [16]) & [1]) ){ goto $label$26 }
	*($6 + [16]) = [0]
	goto $label$25 
	
.LABEL $label$27
	CALL eosio_assert([0], [22080])
	goto $label$24 
	
.LABEL $label$26
	*(*(($6 + [24]))) = [0]
	*($6 + [20]) = [0]
	
.LABEL $label$25
	CALL $236(($6 + [16]), [0])
	*((($6 + [16]) + [8])) = *((($6 + [32]) + [8]))
	*($6 + [16]) = *($6 + [32])
	
.LABEL $label$24
	$8 = *($6 + [16])
	CALL eosio_assert(((int_32)( *($6 + [20]) ? uint_32($8 >> [1]) : ($8 & [1]) ) != (int_32)[0]), [22155])
	CALL $234($4, ($6 + [16]))
	CALL $233(($6 + [32]), $1, ($7 + [1]), [-1], $1)
	if ( (*($6 + [16]) & [1]) ){ goto $label$29 }
	*($6 + [16]) = [0]
	goto $label$28 
	
.LABEL $label$29
	*(*(($6 + [24]))) = [0]
	*($6 + [20]) = [0]
	
.LABEL $label$28
	CALL $236(($6 + [16]), [0])
	*(($8 = (($6 + [16]) + [8]))) = *((($6 + [32]) + [8]))
	*($6 + [16]) = *($6 + [32])
	$7 = *($6 + [16])
	CALL eosio_assert(((int_32)( *($6 + [20]) ? uint_32($7 >> [1]) : ($7 & [1]) ) != (int_32)[0]), [22165])
	$7 = ( *($8) ? (($6 + [16]) | [1]) : (*($6 + [16]) & [1]) )
	*($6 + [8]) = $7
	*($6 + [12]) = CALL $261($7)
	*($6) = *($6 + [8])
	*($5) = *(CALL $22(($6 + [32]), $6))
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($8))
	
.LABEL $label$30
	$global$0 = ($6 + [48])
}

int_64 .FUNC $8 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($0 + [392])
	$5 = *(($0 + [420]))
	$4 = *(($0 + [416]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$6:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$5 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	if ( ((int_32)*($7 + [152]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	$1 = (int_64)1
	if ( ((int_64)*($7 + [8]) != (int_64)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*($3), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $19($3, $6)
	if ( ((int_32)*($7 + [152]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	$1 = (int_64)1
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = (int_64)0
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136 align=4]) = (int_64)0
	*($5 + [144]) = [0]
	*($5 + [148]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [64])
	*($3 + [52]) = ($5 + [80])
	*($3 + [56]) = ($5 + [96])
	*($3 + [60]) = ($5 + [104])
	*($3 + [64]) = ($5 + [112])
	*($3 + [68]) = ($5 + [120])
	*($3 + [72]) = ($5 + [128])
	*($3 + [76]) = ($5 + [136])
	CALL $194(($3 + [32]), ($3 + [24]))
	*($5 + [156]) = [-1]
	*($5 + [152]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $44(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [144])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($4 + [4])
	*($1 + [8]) = *($5)
	$6 = *($5)
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = *($0)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$5 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [21690])
	
.LABEL $label$1
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $6
	$6 = *(*(($4 + [4])))
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$10 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [21690])
	
.LABEL $label$6
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = $6
	$6 = *(*(($4 + [4])))
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$7 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$7 = $9
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$15 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [21690])
	
.LABEL $label$11
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = $6
	$6 = *(*(($4 + [4])))
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$7 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$7 = $9
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$20 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [21690])
	
.LABEL $label$16
	*($1 + [96]) = (int_64)0
	*(($1 + [104])) = $6
	$11 = ($1 + [112])
	CALL $234($11, *($4 + [8]))
	*($1 + [136]) = CALL current_time()
	$5 = *($1 + [112])
	$10 = ( *(($1 + [116])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($10 + [129])
	$7 = (CASTING uint_64)(uint_32 $10)
	$4 = ($1 + [136])
	
.LOOP $label$21:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$21 }
	if ( ($5 <= [513]) ){ goto $label$23 }
	$10 = CALL $264($5)
	goto $label$22 
	
.LABEL $label$23
	$10 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$22
	*($3 + [4]) = $10
	*($3) = $10
	*($3 + [8]) = ($10 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [48])
	*($3 + [48]) = ($1 + [64])
	*($3 + [52]) = ($1 + [72])
	*($3 + [56]) = ($1 + [80])
	*($3 + [60]) = ($1 + [96])
	*($3 + [64]) = $11
	*($3 + [68]) = ($1 + [128])
	*($3 + [72]) = $4
	*($3 + [76]) = ($1 + [144])
	CALL $184(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [156]) = CALL db_store_i64(*($8 + [8]), (int_64)-4060986518620078080, *(*($0 + [8])), $7, $10, $5)
	if ( ($5 <= [513]) ){ goto $label$24 }
	CALL $267($10)
	
.LABEL $label$24
	if ( (uint_64)($7 <= *($8 + [16])) ){ goto $label$25 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$25
	$7 = *(($8 + [8]))
	$9 = *(*(($0 + [8])))
	$6 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [160]) = CALL db_idx64_store($7, (int_64)-4060986518620078080, $9, $6, ($3 + [24]))
	$global$0 = ($3 + [80])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [152]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [120])))
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [112]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($9 + [120])))
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [156]))
	$9 = *(($1 + [160]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4060986518620078080, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [32]) = $1
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$5($1), [20628])
	CALL eosio_assert(($3 <= [19]), [20650])
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$5 }
	$7 = ($2 + [1])
	$2 = uint_32($6 >> [1])
	if ( ((uint_32)$2 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *($2 + [8])
	$2 = *($2 + [4])
	if ( ($2 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [21951])
	goto $label$2 
	
.LABEL $label$3
	if ( $2 ){ goto $label$2 }
	$8 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LOOP $label$6:
	$9 = (($7 + $2) + [-1])
	$6 = *($9)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [21996])
	$6 = *($9)
	
.LABEL $label$7
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	$8 = ((int_64)$8 << (int_64)8)
	
.LABEL $label$1
	*($5 + [24]) = ((int_64)$8 | (int_64)(CASTING uint_64)(uint_32 $3))
	$3 = ($0 + [392])
	$6 = *(($0 + [420]))
	$7 = *(($0 + [416]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$12:
	$2 = ($6 + [-24])
	$9 = *($2)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$11 }
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	if ( ((int_32)*($9 + [152]) == (int_32)$3) ){ goto $label$9 }
	CALL eosio_assert([0], [22260])
	goto $label$9 
	
.LABEL $label$10
	$2 = CALL db_find_i64(*($3), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$8 }
	$9 = CALL $19($3, $2)
	if ( ((int_32)*($9 + [152]) == (int_32)$3) ){ goto $label$9 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$9
	$2 = CALL db_next_i64(*($9 + [156]), ($5 + [48]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	CALL $19($3, $2)
	
.LABEL $label$13
	CALL $122($3, $9)
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$8
	$8 = *($0)
	*($5 + [16]) = $4
	*($5 + [12]) = ($5 + [24])
	*($5 + [8]) = ($5 + [32])
	*($5 + [72]) = $8
	if ( ((int_64)*(($0 + [392])) == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$14
	*($5 + [48]) = $3
	*($5 + [52]) = ($5 + [8])
	*($5 + [56]) = ($5 + [72])
	*(($2 = CALL _Znwj([168])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = [1]
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = (int_64)1
	*($2 + [72]) = (int_64)5
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = (int_64)0
	*($2 + [96]) = (int_64)0
	*($2 + [104]) = (int_64)0
	*($2 + [112 align=4]) = (int_64)0
	*($2 + [120]) = [0]
	*($2 + [128]) = (int_64)0
	*($2 + [152]) = $3
	CALL $123(($5 + [48]), $2)
	*($5 + [64]) = $2
	$8 = *($2)
	*($5 + [48]) = $8
	$9 = *($2 + [156])
	*($5 + [44]) = $9
	$7 = ($0 + [420])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [424]))) ){ goto $label$17 }
	*($6 + [8]) = $8
	*($6 + [16]) = $9
	*($5 + [64]) = [0]
	*($6) = $2
	*($7) = ($6 + [24])
	$2 = *($5 + [64])
	*($5 + [64]) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $124(($0 + [416]), ($5 + [64]), ($5 + [48]), ($5 + [44]))
	$2 = *($5 + [64])
	*($5 + [64]) = [0]
	if ( $2 ){ goto $label$15 }
	
.LABEL $label$16
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$15
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($2 + [120])))
	
.LABEL $label$18
	CALL _ZdlPv($2)
	$global$0 = ($5 + [80])
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$5 = ($4 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($1 + [8])) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $250($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $126 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	$5 = ($global$0 - [864])
	$global$0 = $5
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = ($0 + [392])
	$2 = *($0 + [8])
	$6 = *($3 + [8])
	$9 = *(($0 + [420]))
	$8 = *(($0 + [416]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)$2) ){ goto $label$4 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($11 + [152]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	goto $label$2 
	
.LABEL $label$3
	$11 = [0]
	$10 = CALL db_find_i64(*($7), *(($0 + [400])), (int_64)-4060986518620078080, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	$11 = CALL $19($7, $10)
	if ( ((int_32)*($11 + [152]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [20676])
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)$6), [20700])
	CALL eosio_assert(((int_64)CALL $8($0, *(($0 + [8])), $6) != (int_64)0), [20724])
	$10 = CALL $232(($5 + [832]), $4)
	CALL $127(($5 + [848]), $0, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$6
	$10 = *($5 + [848])
	$9 = CALL $261([20742])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$26 }
	if ( (CALL $244(($5 + [848]), [0], [-1], [20742], $9) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$10 = *($5 + [848])
	$9 = CALL $261([20846])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$28 }
	if ( (CALL $244(($5 + [848]), [0], [-1], [20846], $9) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$10 = *($5 + [848])
	$9 = CALL $261([20854])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$29 }
	if ( (CALL $244(($5 + [848]), [0], [-1], [20854], $9) == 0) ){ goto $label$27 }
	
.LABEL $label$29
	$10 = *($5 + [848])
	$9 = CALL $261([20864])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$30 }
	if ( (CALL $244(($5 + [848]), [0], [-1], [20864], $9) == 0) ){ goto $label$24 }
	
.LABEL $label$30
	$10 = *($5 + [848])
	$9 = CALL $261([20872])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$8 }
	if ( CALL $244(($5 + [848]), [0], [-1], [20872], $9) ){ goto $label$8 }
	*($5 + [608]) = [0]
	*($5 + [600]) = (int_64)0
	*($5 + [824]) = [0]
	*($5 + [816]) = (int_64)0
	*($5 + [336]) = (int_64)0
	$10 = CALL $232(($5 + [320]), $4)
	CALL $128($0, $10, ($5 + [600]), ($5 + [808]), ($5 + [816]), ($5 + [336]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$31
	$8 = [0]
	$9 = ($10 & [1])
	$10 = *($5 + [600])
	$4 = ($10 & [1])
	$10 = *($5 + [848])
	$12 = uint_32($10 >> [1])
	$7 = ( *($5 + [852]) ? $12 : $4 )
	if ( ((int_32)$7 != (int_32)( *($5 + [604]) ? uint_32($10 >> [1]) : $9 )) ){ goto $label$12 }
	$8 = [1]
	$10 = (($5 + [848]) | [1])
	$9 = ( *(($5 + [608])) ? (($5 + [600]) | [1]) : $9 )
	if ( $4 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$12 }
	$4 = ([0] - $12)
	
.LOOP $label$32:
	if ( ((int_32)*($10) != (int_32)*($9)) ){ goto $label$13 }
	$8 = [1]
	$9 = ($9 + [1])
	$10 = ($10 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$32 }
	goto $label$12 
	
.LABEL $label$27
	$8 = [0]
	*($5 + [824]) = [0]
	*($5 + [816]) = (int_64)0
	*($5 + [248]) = (int_64)0
	*($5 + [800]) = [0]
	*($5 + [792]) = (int_64)0
	*($5 + [808]) = (int_64)0
	*($5 + [736]) = [0]
	*($5 + [680]) = [0]
	*($5 + [672]) = (int_64)0
	$10 = CALL $232(($5 + [656]), $4)
	CALL $129($0, $10, ($5 + [816]), ($5 + [248]), ($5 + [168]), ($5 + [792]), ($5 + [808]), ($5 + [736]), ($5 + [672]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$33
	$9 = ($10 & [1])
	$10 = *($5 + [816])
	$4 = ($10 & [1])
	$10 = *($5 + [848])
	$12 = uint_32($10 >> [1])
	$7 = ( *($5 + [852]) ? $12 : $4 )
	if ( ((int_32)$7 != (int_32)( *($5 + [820]) ? uint_32($10 >> [1]) : $9 )) ){ goto $label$19 }
	$8 = [1]
	$10 = (($5 + [848]) | [1])
	$9 = ( *(($5 + [824])) ? (($5 + [816]) | [1]) : $9 )
	if ( $4 ){ goto $label$23 }
	if ( ($7 == 0) ){ goto $label$19 }
	$4 = ([0] - $12)
	
.LOOP $label$34:
	if ( ((int_32)*($10) != (int_32)*($9)) ){ goto $label$20 }
	$8 = [1]
	$9 = ($9 + [1])
	$10 = ($10 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$34 }
	goto $label$19 
	
.LABEL $label$25
	*($5 + [608]) = [0]
	*($5 + [600]) = (int_64)0
	*($5 + [672]) = (int_64)0
	*($5 + [824]) = [0]
	*($5 + [816]) = (int_64)0
	*($5 + [808]) = (int_64)0
	*($5 + [800]) = [0]
	*($5 + [792]) = (int_64)0
	$10 = CALL $232(($5 + [776]), $4)
	CALL $130($0, $10, ($5 + [600]), ($5 + [672]), ($5 + [248]), ($5 + [168]), ($5 + [816]), ($5 + [808]), ($5 + [792]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$35 }
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$35
	$8 = [0]
	$9 = ($10 & [1])
	$10 = *($5 + [600])
	$4 = ($10 & [1])
	$10 = *($5 + [848])
	$12 = uint_32($10 >> [1])
	$7 = ( *($5 + [852]) ? $12 : $4 )
	if ( ((int_32)$7 != (int_32)( *($5 + [604]) ? uint_32($10 >> [1]) : $9 )) ){ goto $label$16 }
	$8 = [1]
	$10 = (($5 + [848]) | [1])
	$9 = ( *(($5 + [608])) ? (($5 + [600]) | [1]) : $9 )
	if ( $4 ){ goto $label$22 }
	if ( ($7 == 0) ){ goto $label$16 }
	$4 = ([0] - $12)
	
.LOOP $label$36:
	if ( ((int_32)*($10) != (int_32)*($9)) ){ goto $label$17 }
	$8 = [1]
	$9 = ($9 + [1])
	$10 = ($10 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$36 }
	goto $label$16 
	
.LABEL $label$24
	*($5 + [824]) = [0]
	*($5 + [816]) = (int_64)0
	*($5 + [248]) = (int_64)0
	*($5 + [800]) = [0]
	*($5 + [792]) = (int_64)0
	*($5 + [808]) = (int_64)0
	*($5 + [736]) = [0]
	*($5 + [680]) = [0]
	*($5 + [672]) = (int_64)0
	$10 = CALL $232(($5 + [392]), $4)
	CALL $131($0, $10, ($5 + [816]), ($5 + [248]), ($5 + [168]), ($5 + [792]), ($5 + [808]), ($5 + [736]), ($5 + [672]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*($10 + [8]))
	
.LABEL $label$37
	$8 = [0]
	$9 = ($10 & [1])
	$10 = *($5 + [816])
	$4 = ($10 & [1])
	$10 = *($5 + [848])
	$12 = uint_32($10 >> [1])
	$7 = ( *($5 + [852]) ? $12 : $4 )
	if ( ((int_32)$7 != (int_32)( *($5 + [820]) ? uint_32($10 >> [1]) : $9 )) ){ goto $label$14 }
	$8 = [1]
	$10 = (($5 + [848]) | [1])
	$9 = ( *(($5 + [824])) ? (($5 + [816]) | [1]) : $9 )
	if ( $4 ){ goto $label$21 }
	if ( ($7 == 0) ){ goto $label$14 }
	$4 = ([0] - $12)
	
.LOOP $label$38:
	if ( ((int_32)*($10) != (int_32)*($9)) ){ goto $label$15 }
	$8 = [1]
	$9 = ($9 + [1])
	$10 = ($10 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$38 }
	goto $label$14 
	
.LABEL $label$23
	if ( ($7 == 0) ){ goto $label$19 }
	$8 = (CALL $260(( *($5 + [856]) ? $10 : $4 ), $9, $7) == 0)
	goto $label$19 
	
.LABEL $label$22
	if ( ($7 == 0) ){ goto $label$16 }
	$8 = (CALL $260(( *($5 + [856]) ? $10 : $4 ), $9, $7) == 0)
	goto $label$16 
	
.LABEL $label$21
	if ( ($7 == 0) ){ goto $label$14 }
	$8 = (CALL $260(( *($5 + [856]) ? $10 : $4 ), $9, $7) == 0)
	goto $label$14 
	
.LABEL $label$20
	$8 = [0]
	
.LABEL $label$19
	CALL eosio_assert($8, [19064])
	CALL eosio_assert(((int_64)*($5 + [808]) == (int_64)*($11)), [20751])
	$9 = *((($5 + [792]) + [8]))
	$8 = ($10 & [1])
	$10 = *($5 + [792])
	$10 = ( *($5 + [796]) ? uint_32($10 >> [1]) : $8 )
	if ( ($10 <= [8]) ){ goto $label$41 }
	CALL eosio_assert([0], [21951])
	goto $label$40 
	
.LABEL $label$41
	if ( ($10 == 0) ){ goto $label$39 }
	
.LABEL $label$40
	$4 = ( $9 ? (($5 + [792]) | [1]) : $8 )
	$2 = (int_64)0
	
.LOOP $label$42:
	$8 = (($4 + $10) + [-1])
	$9 = *($8)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$43 }
	CALL eosio_assert([0], [21996])
	$9 = *($8)
	
.LABEL $label$43
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$42 }
	goto $label$9 
	
.LABEL $label$39
	$2 = (int_64)0
	goto $label$9 
	
.LABEL $label$18
	if ( ($7 == 0) ){ goto $label$12 }
	$8 = (CALL $260(( *($5 + [856]) ? $10 : $4 ), $9, $7) == 0)
	goto $label$12 
	
.LABEL $label$17
	$8 = [0]
	
.LABEL $label$16
	CALL eosio_assert($8, [19064])
	CALL eosio_assert(((int_64)*($5 + [808]) == (int_64)*($11)), [20751])
	$9 = *((($5 + [816]) + [8]))
	$8 = ($10 & [1])
	$10 = *($5 + [816])
	$10 = ( *($5 + [820]) ? uint_32($10 >> [1]) : $8 )
	if ( ($10 <= [8]) ){ goto $label$46 }
	CALL eosio_assert([0], [21951])
	goto $label$45 
	
.LABEL $label$46
	if ( ($10 == 0) ){ goto $label$44 }
	
.LABEL $label$45
	$4 = ( $9 ? (($5 + [816]) | [1]) : $8 )
	$2 = (int_64)0
	
.LOOP $label$47:
	$8 = (($4 + $10) + [-1])
	$9 = *($8)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$48 }
	CALL eosio_assert([0], [21996])
	$9 = *($8)
	
.LABEL $label$48
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$47 }
	goto $label$10 
	
.LABEL $label$44
	$2 = (int_64)0
	goto $label$10 
	
.LABEL $label$15
	$8 = [0]
	
.LABEL $label$14
	CALL eosio_assert($8, [19064])
	CALL eosio_assert(((int_64)*($5 + [808]) == (int_64)*($11)), [20751])
	$9 = *((($5 + [792]) + [8]))
	$8 = ($10 & [1])
	$10 = *($5 + [792])
	$10 = ( *($5 + [796]) ? uint_32($10 >> [1]) : $8 )
	if ( ($10 <= [8]) ){ goto $label$51 }
	CALL eosio_assert([0], [21951])
	goto $label$50 
	
.LABEL $label$51
	if ( ($10 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	$4 = ( $9 ? (($5 + [792]) | [1]) : $8 )
	$2 = (int_64)0
	
.LOOP $label$52:
	$8 = (($4 + $10) + [-1])
	$9 = *($8)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$53 }
	CALL eosio_assert([0], [21996])
	$9 = *($8)
	
.LABEL $label$53
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$52 }
	goto $label$11 
	
.LABEL $label$49
	$2 = (int_64)0
	goto $label$11 
	
.LABEL $label$13
	$8 = [0]
	
.LABEL $label$12
	CALL eosio_assert($8, [19064])
	CALL eosio_assert(((int_64)*($5 + [336]) == (int_64)*($11)), [20751])
	$9 = *((($5 + [816]) + [8]))
	$8 = ($10 & [1])
	$10 = *($5 + [816])
	$10 = ( *($5 + [820]) ? uint_32($10 >> [1]) : $8 )
	if ( ($10 <= [8]) ){ goto $label$57 }
	CALL eosio_assert([0], [21951])
	goto $label$56 
	
.LABEL $label$57
	if ( ($10 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$4 = ( $9 ? (($5 + [816]) | [1]) : $8 )
	$2 = (int_64)0
	
.LOOP $label$58:
	$8 = (($4 + $10) + [-1])
	$9 = *($8)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$59 }
	CALL eosio_assert([0], [21996])
	$9 = *($8)
	
.LABEL $label$59
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$58 }
	goto $label$54 
	
.LABEL $label$55
	$2 = (int_64)0
	
.LABEL $label$54
	$10 = ($11 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)(uint_64)*($10) >> (uint_64)(int_64)8)), [20789])
	*($5 + [312]) = [19052]
	*($5 + [316]) = CALL $261([19052])
	*($5 + [160]) = *($5 + [312])
	$9 = CALL $22(($5 + [456]), ($5 + [160]))
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)*($9)), [20881])
	$13 = *($10)
	$14 = *($5 + [808])
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$60 }
	CALL eosio_assert([0], [21641])
	
.LABEL $label$60
	$2 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$64 }
	$2 = $15
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$64
	$2 = $15
	
.LOOP $label$65:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$8 = ($10 + [1])
	$10 = $8
	if ( $9 ){ goto $label$65 }
	$10 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	CALL eosio_assert([0], [21690])
	
.LABEL $label$61
	$10 = [0]
	if ( ((int_64)*($3) != (int_64)10000) ){ goto $label$66 }
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$67 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$67
	$10 = ((int_64)$14 == (int_64)10000)
	
.LABEL $label$66
	CALL eosio_assert($10, [20827])
	$2 = *($0)
	*($5 + [296]) = [17468]
	*($5 + [300]) = CALL $261([17468])
	*($5 + [152]) = *($5 + [296])
	$6 = *(CALL $22(($5 + [304]), ($5 + [152])))
	*($5 + [280]) = [17777]
	*($5 + [284]) = CALL $261([17777])
	*($5 + [144]) = *($5 + [280])
	$4 = CALL $22(($5 + [288]), ($5 + [144]))
	*($5 + [264]) = [20872]
	*($5 + [268]) = CALL $261([20872])
	*($5 + [136]) = *($5 + [264])
	$3 = CALL $22(($5 + [272]), ($5 + [136]))
	*(($5 + [800])) = [0]
	*($5 + [792]) = (int_64)0
	$10 = CALL $261([17531])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$75 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$78 }
	*($5 + [792]) = ($10 << [1])
	$9 = (($5 + [792]) | [1])
	if ( $10 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$8 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($8)
	*($5 + [792]) = ($8 | [1])
	*($5 + [800]) = $9
	*($5 + [796]) = $10
	
.LABEL $label$77
	CALL memcpy($9, [17531], $10)
	
.LABEL $label$76
	*(($9 + $10)) = [0]
	*(($5 + [680])) = [0]
	*($5 + [672]) = (int_64)0
	$10 = CALL $261([17531])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$81 }
	*($5 + [672]) = ($10 << [1])
	$9 = (($5 + [672]) | [1])
	if ( $10 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$8 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($8)
	*($5 + [672]) = ($8 | [1])
	*($5 + [680]) = $9
	*($5 + [676]) = $10
	
.LABEL $label$80
	CALL memcpy($9, [17531], $10)
	
.LABEL $label$79
	*(($9 + $10)) = [0]
	*(($5 + [256])) = [0]
	*($5 + [248]) = (int_64)0
	$10 = CALL $261([17531])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$73 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$84 }
	*($5 + [248]) = ($10 << [1])
	$9 = (($5 + [248]) | [1])
	if ( $10 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$8 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($8)
	*($5 + [248]) = ($8 | [1])
	*($5 + [256]) = $9
	*($5 + [252]) = $10
	
.LABEL $label$83
	CALL memcpy($9, [17531], $10)
	
.LABEL $label$82
	$8 = [0]
	*(($9 + $10)) = [0]
	$10 = (($5 + [792]) + [8])
	*((($5 + [456]) + [16])) = *($10)
	*($10) = [0]
	$10 = (($5 + [672]) + [8])
	*((($5 + [456]) + [28])) = *($10)
	*($10) = [0]
	$10 = (($5 + [248]) + [8])
	*(($5 + [496])) = *($10)
	*($10) = [0]
	*($5 + [456]) = $1
	*($5 + [464]) = *($5 + [792])
	*($5 + [792]) = (int_64)0
	*($5 + [476 align=4]) = *($5 + [672])
	*($5 + [672]) = (int_64)0
	*($5 + [488]) = *($5 + [248])
	*($5 + [248]) = (int_64)0
	*($5 + [500]) = [0]
	$15 = *($3)
	*($5 + [736]) = *($4)
	*($5 + [744]) = $15
	*($5 + [752]) = [0]
	*(($9 = ($5 + [756]))) = [0]
	*(($4 = ($5 + [760]))) = [0]
	*(($10 = CALL _Znwj([16]))) = $2
	*($10 + [8]) = $6
	*(($5 + [772])) = [0]
	$3 = ($10 + [16])
	*($4) = $3
	*($9) = $3
	*($5 + [752]) = $10
	*($5 + [764 align=4]) = (int_64)0
	*($5 + [192]) = [0]
	*($5 + [168]) = ($5 + [192])
	*($5 + [616]) = ($5 + [456])
	CALL $132(($5 + [616]), ($5 + [168]))
	$10 = *($5 + [192])
	if ( ($10 == 0) ){ goto $label$86 }
	$9 = (($5 + [736]) + [28])
	CALL $2($9, $10)
	$8 = *(($5 + [768]))
	$10 = *($9)
	goto $label$85 
	
.LABEL $label$86
	$10 = [0]
	
.LABEL $label$85
	*($5 + [620]) = $10
	*($5 + [616]) = $10
	*($5 + [624]) = $8
	*($5 + [192]) = ($5 + [616])
	*($5 + [168]) = ($5 + [456])
	CALL $133(($5 + [168]), ($5 + [192]))
	CALL $24(($5 + [736]))
	$10 = *($5 + [764])
	if ( ($10 == 0) ){ goto $label$87 }
	*(($5 + [768])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$87
	$10 = *($5 + [752])
	if ( ($10 == 0) ){ goto $label$88 }
	*(($5 + [756])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$88
	if ( ((*(($5 + [488])) & [1]) == 0) ){ goto $label$89 }
	CALL _ZdlPv(*(($5 + [496])))
	
.LABEL $label$89
	if ( ((*(($5 + [476])) & [1]) == 0) ){ goto $label$90 }
	CALL _ZdlPv(*(($5 + [484])))
	
.LABEL $label$90
	if ( (*(($5 + [464])) & [1]) ){ goto $label$92 }
	if ( (*($5 + [248]) & [1]) ){ goto $label$91 }
	goto $label$72 
	
.LABEL $label$92
	CALL _ZdlPv(*(($5 + [472])))
	if ( ((*($5 + [248]) & [1]) == 0) ){ goto $label$72 }
	
.LABEL $label$91
	CALL _ZdlPv(*(($5 + [256])))
	$10 = [1]
	if ( ((*($5 + [672]) & [1]) == 0) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$75
	CALL $231(($5 + [792]))
	
.LABEL $label$74
	CALL $231(($5 + [672]))
	
.LABEL $label$73
	CALL $231(($5 + [248]))
	
.LABEL $label$72
	$10 = [1]
	if ( (*($5 + [672]) & [1]) ){ goto $label$70 }
	
.LABEL $label$71
	if ( ((*($5 + [792]) & $10) == 0) ){ goto $label$68 }
	goto $label$69 
	
.LABEL $label$70
	CALL _ZdlPv(*(($5 + [680])))
	if ( ((*($5 + [792]) & $10) == 0) ){ goto $label$68 }
	
.LABEL $label$69
	CALL _ZdlPv(*(($5 + [800])))
	
.LABEL $label$68
	*($5 + [232]) = [19009]
	*($5 + [236]) = CALL $261([19009])
	*($5 + [128]) = *($5 + [232])
	if ( (CALL is_account(*(CALL $22(($5 + [240]), ($5 + [128])))) == 0) ){ goto $label$93 }
	$2 = *($0)
	*($5 + [216]) = [17468]
	*($5 + [220]) = CALL $261([17468])
	*($5 + [120]) = *($5 + [216])
	$10 = CALL $22(($5 + [224]), ($5 + [120]))
	*($5 + [616]) = $2
	*($5 + [624]) = *($10)
	$2 = *($11)
	*($5 + [200]) = [17475]
	*($5 + [204]) = CALL $261([17475])
	*($5 + [112]) = *($5 + [200])
	$4 = CALL $22(($5 + [208]), ($5 + [112]))
	*($5 + [184]) = [19009]
	*($5 + [188]) = CALL $261([19009])
	*($5 + [104]) = *($5 + [184])
	$3 = CALL $22(($5 + [192]), ($5 + [104]))
	*(($5 + [680])) = [0]
	*($5 + [672]) = (int_64)0
	$10 = CALL $261([20920])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$101 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$104 }
	*($5 + [672]) = ($10 << [1])
	$11 = (($5 + [672]) | [1])
	if ( $10 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$104
	$9 = (($10 + [16]) & [-16])
	$11 = CALL _Znwj($9)
	*($5 + [672]) = ($9 | [1])
	*($5 + [680]) = $11
	*($5 + [676]) = $10
	
.LABEL $label$103
	CALL memcpy($11, [20920], $10)
	
.LABEL $label$102
	$9 = [0]
	*(($11 + $10)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$108 }
	$11 = *([0] + [21604])
	
.LOOP $label$110:
	*((($5 + [456]) + ($10 = $9))) = *(($11 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$10 == (int_32)[12]) )))))
	$9 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[11]) ){ goto $label$109 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$110 }
	
.LABEL $label$109
	*(($5 + [256])) = [0]
	*($5 + [248]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$107 }
	*($5 + [248]) = ($9 << [1])
	$11 = (($5 + [248]) | [1])
	goto $label$106 
	
.LABEL $label$108
	*(($5 + [256])) = [0]
	*($5 + [248]) = (int_64)0
	*($5 + [248]) = [0]
	$10 = (($5 + [248]) | [1])
	$9 = $10
	goto $label$105 
	
.LABEL $label$107
	$8 = (($9 + [16]) & [-16])
	$11 = CALL _Znwj($8)
	*($5 + [248]) = ($8 | [1])
	*($5 + [256]) = $11
	*($5 + [252]) = $9
	
.LABEL $label$106
	$8 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$111:
	*(($11 + $10)) = *((($5 + [456]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$111 }
	$9 = ($11 + $9)
	$10 = (($5 + [248]) | [1])
	
.LABEL $label$105
	*($9) = [0]
	$9 = *($5 + [248])
	$11 = ($9 & [1])
	$10 = CALL $239(($5 + [672]), ( *($5 + [256]) ? $10 : $11 ), ( *($5 + [252]) ? uint_32($9 >> [1]) : $11 ))
	$9 = ($10 + [8])
	*((($5 + [792]) + [8])) = *($9)
	*($5 + [792]) = *($10)
	*($10) = (int_64)0
	*($9) = [0]
	*((($5 + [168]) + [8])) = [0]
	*($5 + [168]) = (int_64)0
	$10 = CALL $261([20935])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$100 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$114 }
	*($5 + [168]) = ($10 << [1])
	$11 = (($5 + [168]) | [1])
	$9 = $11
	if ( $10 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$114
	$11 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($11)
	*($5 + [168]) = ($11 | [1])
	*($5 + [176]) = $9
	*($5 + [172]) = $10
	$11 = (($5 + [168]) | [1])
	
.LABEL $label$113
	CALL memcpy($9, [20935], $10)
	
.LABEL $label$112
	*(($9 + $10)) = [0]
	$10 = *($5 + [168])
	$9 = ($10 & [1])
	$10 = CALL $239(($5 + [792]), ( *($5 + [176]) ? $11 : $9 ), ( *($5 + [172]) ? uint_32($10 >> [1]) : $9 ))
	$9 = *($10 + [8])
	*($10 + [8]) = [0]
	$1 = *($10)
	*($10) = (int_64)0
	*(($5 + [480])) = $13
	*(($5 + [496])) = $9
	*($5 + [456]) = *($0)
	*($5 + [464]) = *($3)
	*($5 + [472]) = $14
	*($5 + [488]) = $1
	$10 = CALL $23(($5 + [736]), ($5 + [616]), $2, *($4), ($5 + [456]))
	CALL $24($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$115 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$115
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$116 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$116
	if ( (*($5 + [488]) & [1]) ){ goto $label$118 }
	if ( (*($5 + [168]) & [1]) ){ goto $label$117 }
	goto $label$99 
	
.LABEL $label$118
	CALL _ZdlPv(*(($5 + [496])))
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$99 }
	
.LABEL $label$117
	CALL _ZdlPv(*(($5 + [176])))
	$10 = [1]
	if ( ((*($5 + [792]) & [1]) == 0) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$101
	CALL $231(($5 + [672]))
	
.LABEL $label$100
	CALL $231(($5 + [168]))
	
.LABEL $label$99
	$10 = [1]
	if ( (*($5 + [792]) & [1]) ){ goto $label$97 }
	
.LABEL $label$98
	if ( (*($5 + [248]) & $10) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$97
	CALL _ZdlPv(*($5 + [800]))
	if ( ((*($5 + [248]) & $10) == 0) ){ goto $label$95 }
	
.LABEL $label$96
	CALL _ZdlPv(*(($5 + [256])))
	if ( (*($5 + [672]) & [1]) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$95
	if ( ((*($5 + [672]) & [1]) == 0) ){ goto $label$93 }
	
.LABEL $label$94
	CALL _ZdlPv(*($5 + [680]))
	
.LABEL $label$93
	if ( ((*($5 + [816]) & [1]) == 0) ){ goto $label$119 }
	CALL _ZdlPv(*(($5 + [824])))
	
.LABEL $label$119
	if ( ((*($5 + [600]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($5 + [608])))
	goto $label$8 
	
.LABEL $label$11
	$10 = ($11 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)(uint_64)*($10) >> (uint_64)(int_64)8)), [20789])
	$13 = *($10)
	$14 = *($5 + [168])
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$120 }
	CALL eosio_assert([0], [21641])
	
.LABEL $label$120
	$2 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$123:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$122 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$124 }
	$2 = $15
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$124
	$2 = $15
	
.LOOP $label$125:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$122 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$11 = ($10 + [1])
	$10 = $11
	if ( $9 ){ goto $label$125 }
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$122
	CALL eosio_assert([0], [21690])
	
.LABEL $label$121
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$126 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$126
	CALL eosio_assert(((int_64)*($3) == (int_64)$14), [20827])
	$2 = *($0)
	*($5 + [376]) = [17468]
	*($5 + [380]) = CALL $261([17468])
	*($5 + [96]) = *($5 + [376])
	$10 = CALL $22(($5 + [384]), ($5 + [96]))
	*($5 + [600]) = $2
	*($5 + [608]) = *($10)
	*($5 + [360]) = [17777]
	*($5 + [364]) = CALL $261([17777])
	*($5 + [88]) = *($5 + [360])
	$10 = CALL $22(($5 + [368]), ($5 + [88]))
	*($5 + [344]) = [20864]
	*($5 + [348]) = CALL $261([20864])
	*($5 + [80]) = *($5 + [344])
	$9 = CALL $22(($5 + [352]), ($5 + [80]))
	*((($5 + [456]) + [24])) = $13
	*(($5 + [504])) = *(($5 + [744]))
	*(($5 + [512])) = *(($5 + [752]))
	*(($5 + [520])) = *((($5 + [736]) + [24]))
	*(($5 + [528])) = *((($5 + [736]) + [32]))
	*($5 + [456]) = $1
	*($5 + [472]) = $14
	*($5 + [464]) = *($5 + [248])
	*($5 + [488]) = *($5 + [808])
	*($5 + [496]) = *($5 + [736])
	CALL $232(($5 + [536]), ($5 + [672]))
	$10 = CALL $134(($5 + [616]), ($5 + [600]), *($10), *($9), ($5 + [456]))
	CALL $24($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$127 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$127
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$128 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$128
	if ( (*($5 + [536]) & [1]) ){ goto $label$134 }
	if ( (*($5 + [672]) & [1]) ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$134
	CALL _ZdlPv(*(($5 + [544])))
	if ( ((*($5 + [672]) & [1]) == 0) ){ goto $label$132 }
	
.LABEL $label$133
	CALL _ZdlPv(*(($5 + [680])))
	$10 = [1]
	if ( ((*($5 + [792]) & [1]) == 0) ){ goto $label$131 }
	goto $label$130 
	
.LABEL $label$132
	$10 = [1]
	if ( (*($5 + [792]) & [1]) ){ goto $label$130 }
	
.LABEL $label$131
	if ( (*($5 + [816]) & $10) ){ goto $label$129 }
	goto $label$8 
	
.LABEL $label$130
	CALL _ZdlPv(*(($5 + [800])))
	if ( ((*($5 + [816]) & $10) == 0) ){ goto $label$8 }
	
.LABEL $label$129
	CALL _ZdlPv(*(($5 + [824])))
	if ( (*($5 + [848]) & [1]) ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$10
	$10 = ($11 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)(uint_64)*($10) >> (uint_64)(int_64)8)), [20789])
	$13 = *($10)
	$14 = *($5 + [248])
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$135 }
	CALL eosio_assert([0], [21641])
	
.LABEL $label$135
	$2 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$138:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$137 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$139 }
	$2 = $15
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$138 }
	goto $label$136 
	
.LABEL $label$139
	$2 = $15
	
.LOOP $label$140:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$137 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$8 = ($10 + [1])
	$10 = $8
	if ( $9 ){ goto $label$140 }
	$10 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$138 }
	goto $label$136 
	
.LABEL $label$137
	CALL eosio_assert([0], [21690])
	
.LABEL $label$136
	$16 = *(($11 + [8]))
	$17 = *($5 + [168])
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$141 }
	CALL eosio_assert([0], [21641])
	
.LABEL $label$141
	$2 = (uint_64)$16 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$144:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$143 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$145 }
	$2 = $15
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$145
	$2 = $15
	
.LOOP $label$146:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$143 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$11 = ($10 + [1])
	$10 = $11
	if ( $9 ){ goto $label$146 }
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$143
	CALL eosio_assert([0], [21690])
	
.LABEL $label$142
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$147 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$147
	CALL eosio_assert(((int_64)*($3) == (int_64)$14), [20827])
	$2 = *($0)
	*($5 + [720]) = [17468]
	*($5 + [724]) = CALL $261([17468])
	*($5 + [24]) = *($5 + [720])
	$6 = *(CALL $22(($5 + [728]), ($5 + [24])))
	*($5 + [704]) = [17777]
	*($5 + [708]) = CALL $261([17777])
	*($5 + [16]) = *($5 + [704])
	$10 = CALL $22(($5 + [712]), ($5 + [16]))
	*($5 + [688]) = [20742]
	*($5 + [692]) = CALL $261([20742])
	*($5 + [8]) = *($5 + [688])
	$9 = CALL $22(($5 + [696]), ($5 + [8]))
	*((($5 + [456]) + [24])) = $13
	*(($5 + [496])) = $16
	*($5 + [456]) = $1
	*($5 + [472]) = $14
	*($5 + [488]) = $17
	*($5 + [464]) = *($5 + [672])
	*($5 + [504]) = *($5 + [808])
	$11 = CALL $232(($5 + [512]), ($5 + [792]))
	*($5 + [524]) = [0]
	*($5 + [736]) = *($10)
	*($5 + [744]) = *($9)
	*(($10 = CALL _Znwj([16]))) = $2
	*($10 + [8]) = $6
	*(($5 + [772])) = [0]
	$9 = ($10 + [16])
	*((($5 + [736]) + [24])) = $9
	*(($5 + [756])) = $9
	*($5 + [752]) = $10
	*($5 + [764 align=4]) = (int_64)0
	$10 = *($11)
	$9 = ( *((($5 + [456]) + [60])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$10 = ($9 + [60])
	$2 = (CASTING uint_64)(uint_32 $9)
	$9 = ($5 + [764])
	
.LOOP $label$148:
	$10 = ($10 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$148 }
	if ( ($10 == 0) ){ goto $label$150 }
	CALL $2($9, $10)
	$9 = *(($5 + [768]))
	$10 = *(($5 + [764]))
	goto $label$149 
	
.LABEL $label$150
	$9 = [0]
	$10 = [0]
	
.LABEL $label$149
	*($5 + [620]) = $10
	*($5 + [616]) = $10
	*($5 + [624]) = $9
	*($5 + [192]) = ($5 + [616])
	*($5 + [336]) = ($5 + [456])
	CALL $135(($5 + [336]), ($5 + [192]))
	CALL $24(($5 + [736]))
	$10 = *($5 + [764])
	if ( ($10 == 0) ){ goto $label$151 }
	*(($5 + [768])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$151
	$10 = *($5 + [752])
	if ( ($10 == 0) ){ goto $label$152 }
	*(($5 + [756])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$152
	if ( (*($5 + [512]) & [1]) ){ goto $label$158 }
	if ( (*($5 + [792]) & [1]) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$158
	CALL _ZdlPv(*(($5 + [520])))
	if ( ((*($5 + [792]) & [1]) == 0) ){ goto $label$156 }
	
.LABEL $label$157
	CALL _ZdlPv(*(($5 + [800])))
	$10 = [1]
	if ( ((*($5 + [816]) & [1]) == 0) ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$156
	$10 = [1]
	if ( (*($5 + [816]) & [1]) ){ goto $label$154 }
	
.LABEL $label$155
	if ( (*($5 + [600]) & $10) ){ goto $label$153 }
	goto $label$8 
	
.LABEL $label$154
	CALL _ZdlPv(*(($5 + [824])))
	if ( ((*($5 + [600]) & $10) == 0) ){ goto $label$8 }
	
.LABEL $label$153
	CALL _ZdlPv(*(($5 + [608])))
	if ( (*($5 + [848]) & [1]) ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$9
	$10 = ($11 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)(uint_64)*($10) >> (uint_64)(int_64)8)), [20789])
	$13 = *($10)
	$14 = *($5 + [168])
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$159 }
	CALL eosio_assert([0], [21641])
	
.LABEL $label$159
	$2 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$162:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$161 }
	$15 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$163 }
	$2 = $15
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$162 }
	goto $label$160 
	
.LABEL $label$163
	$2 = $15
	
.LOOP $label$164:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$161 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$11 = ($10 + [1])
	$10 = $11
	if ( $9 ){ goto $label$164 }
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$162 }
	goto $label$160 
	
.LABEL $label$161
	CALL eosio_assert([0], [21690])
	
.LABEL $label$160
	if ( ((int_64)$6 == (int_64)$13) ){ goto $label$165 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$165
	CALL eosio_assert(((int_64)*($3) == (int_64)$14), [20827])
	$10 = *($5 + [848])
	$9 = CALL $261([20846])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$173 }
	if ( (CALL $244(($5 + [848]), [0], [-1], [20846], $9) == 0) ){ goto $label$172 }
	
.LABEL $label$173
	$10 = *($5 + [848])
	$9 = CALL $261([20854])
	if ( ((int_32)$9 != (int_32)( *($5 + [852]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$171 }
	if ( CALL $244(($5 + [848]), [0], [-1], [20854], $9) ){ goto $label$171 }
	$2 = *($0)
	*($5 + [440]) = [17468]
	*($5 + [444]) = CALL $261([17468])
	*($5 + [72]) = *($5 + [440])
	$10 = CALL $22(($5 + [448]), ($5 + [72]))
	*($5 + [600]) = $2
	*($5 + [608]) = *($10)
	*($5 + [424]) = [17777]
	*($5 + [428]) = CALL $261([17777])
	*($5 + [64]) = *($5 + [424])
	$10 = CALL $22(($5 + [432]), ($5 + [64]))
	*($5 + [408]) = [20854]
	*($5 + [412]) = CALL $261([20854])
	*($5 + [56]) = *($5 + [408])
	$9 = CALL $22(($5 + [416]), ($5 + [56]))
	*((($5 + [456]) + [24])) = $13
	*(($5 + [504])) = *(($5 + [744]))
	*(($5 + [512])) = *(($5 + [752]))
	*(($5 + [520])) = *((($5 + [736]) + [24]))
	*(($5 + [528])) = *((($5 + [736]) + [32]))
	*($5 + [456]) = $1
	*($5 + [472]) = $14
	*($5 + [464]) = *($5 + [248])
	*($5 + [488]) = *($5 + [808])
	*($5 + [496]) = *($5 + [736])
	CALL $232(($5 + [536]), ($5 + [672]))
	$10 = CALL $134(($5 + [616]), ($5 + [600]), *($10), *($9), ($5 + [456]))
	CALL $24($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$174 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$174
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$175 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$175
	if ( ((*($5 + [536]) & [1]) == 0) ){ goto $label$171 }
	CALL _ZdlPv(*(($5 + [544])))
	$10 = [1]
	if ( ((*($5 + [672]) & [1]) == 0) ){ goto $label$170 }
	goto $label$169 
	
.LABEL $label$172
	$2 = *($0)
	*($5 + [584]) = [17468]
	*($5 + [588]) = CALL $261([17468])
	*($5 + [48]) = *($5 + [584])
	$10 = CALL $22(($5 + [592]), ($5 + [48]))
	*($5 + [600]) = $2
	*($5 + [608]) = *($10)
	*($5 + [568]) = [17777]
	*($5 + [572]) = CALL $261([17777])
	*($5 + [40]) = *($5 + [568])
	$10 = CALL $22(($5 + [576]), ($5 + [40]))
	*($5 + [552]) = [20846]
	*($5 + [556]) = CALL $261([20846])
	*($5 + [32]) = *($5 + [552])
	$9 = CALL $22(($5 + [560]), ($5 + [32]))
	*((($5 + [456]) + [24])) = $13
	*(($5 + [504])) = *(($5 + [744]))
	*(($5 + [512])) = *(($5 + [752]))
	*(($5 + [520])) = *((($5 + [736]) + [24]))
	*(($5 + [528])) = *((($5 + [736]) + [32]))
	*($5 + [456]) = $1
	*($5 + [472]) = $14
	*($5 + [464]) = *($5 + [248])
	*($5 + [488]) = *($5 + [808])
	*($5 + [496]) = *($5 + [736])
	CALL $232(($5 + [536]), ($5 + [672]))
	$10 = CALL $134(($5 + [616]), ($5 + [600]), *($10), *($9), ($5 + [456]))
	CALL $24($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$176 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$176
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$177 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$177
	if ( ((*($5 + [536]) & [1]) == 0) ){ goto $label$171 }
	CALL _ZdlPv(*(($5 + [544])))
	
.LABEL $label$171
	$10 = [1]
	if ( (*($5 + [672]) & [1]) ){ goto $label$169 }
	
.LABEL $label$170
	if ( (*($5 + [792]) & $10) ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$169
	CALL _ZdlPv(*(($5 + [680])))
	if ( ((*($5 + [792]) & $10) == 0) ){ goto $label$167 }
	
.LABEL $label$168
	CALL _ZdlPv(*(($5 + [800])))
	if ( ((*($5 + [816]) & [1]) == 0) ){ goto $label$8 }
	goto $label$166 
	
.LABEL $label$167
	if ( ((*($5 + [816]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$166
	CALL _ZdlPv(*(($5 + [824])))
	if ( (*($5 + [848]) & [1]) ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$8
	if ( ((*($5 + [848]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$7
	CALL _ZdlPv(*($5 + [856]))
	
.LABEL $label$1
	$global$0 = ($5 + [864])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $125 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [120])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [128])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL _Znwj([304])
	CALL $178($5)
	*($5 + [292]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [64])
	*($3 + [60]) = ($5 + [80])
	*($3 + [64]) = ($5 + [88])
	*($3 + [68]) = ($5 + [104])
	*($3 + [72]) = ($5 + [112])
	*($3 + [76]) = ($5 + [120])
	*($3 + [80]) = ($5 + [128])
	*($3 + [84]) = ($5 + [144])
	*($3 + [88]) = ($5 + [160])
	*($3 + [92]) = ($5 + [176])
	*($3 + [96]) = ($5 + [184])
	*($3 + [100]) = ($5 + [200])
	*($3 + [104]) = ($5 + [216])
	*($3 + [112]) = ($5 + [248])
	*($3 + [108]) = ($5 + [232])
	*($3 + [116]) = ($5 + [264])
	*($3 + [120]) = ($5 + [272])
	*($3 + [124]) = ($5 + [280])
	CALL $193(($3 + [32]), ($3 + [24]))
	*($5 + [296]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $180(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [280]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [288])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [128])
	return $5
}

void .FUNC $16 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	*($1 + [104]) = ((int_64)*($1 + [104]) + (int_64)1)
	$7 = *($3)
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *($3 + [4])
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$4
	$9 = ((int_64)*($1 + [32]) + (int_64)*($7))
	*($1 + [32]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [32]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$6
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [136]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$7
	$9 = ((int_64)*($1 + [128]) + (int_64)*($3))
	*($1 + [128]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [128]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$9
	$7 = ($1 + [104])
	$8 = ($1 + [8])
	$3 = *($1 + [280])
	$10 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [273])
	$9 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [280])
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $264($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [68]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $10
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [128])
}

void .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([304])
	CALL $178($3)
	*($3 + [292]) = $1
	CALL $179(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [296])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $180(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ((*($1 + [280]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($1 + [288])))
	
.LABEL $label$5
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([136])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [72])
	*($3 + [60]) = ($5 + [80])
	*($3 + [64]) = ($5 + [88])
	*($3 + [68]) = ($5 + [104])
	*($3 + [72]) = ($5 + [112])
	CALL $195(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $14(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $11 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*($4 + [31]) = $3
	if ( ((int_64)*($2) < (int_64)0) ){ goto $label$2 }
	$5 = ($0 + [392])
	$7 = *(($0 + [420]))
	$6 = *(($0 + [416]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$6:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$5 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	if ( ((int_32)*($8 + [152]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($5), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $19($5, $3)
	if ( ((int_32)*($8 + [152]) == (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$3
	*($4 + [20]) = $8
	*($4 + [16]) = $5
	if ( ((int_64)*($8 + [8]) != (int_64)*($2 + [8])) ){ goto $label$2 }
	$1 = *($0)
	$3 = *($4 + [20])
	*($4 + [4]) = $2
	*($4) = ($4 + [31])
	*($4 + [8]) = ($4 + [16])
	if ( $3 ){ goto $label$7 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$7
	CALL $20($5, $3, $1, $4)
	
.LABEL $label$2
	$global$0 = ($4 + [32])
	return 
	
.LABEL $label$1
	*($4 + [20]) = [0]
	*($4 + [16]) = $5
	$global$0 = ($4 + [32])
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	$6 = *($4 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$6 = *($4 + [12])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$7 = ($1 + [48])
	CALL $234($7, *($4 + [16]))
	*($1 + [64]) = CALL current_time()
	*($1 + [112]) = *(*($4 + [20]))
	$8 = ($1 + [64])
	$9 = ($1 + [32])
	$10 = ($1 + [16])
	$11 = *(*($4 + [12]) + [8])
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$13 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$12 = $13
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$12 = $13
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$14 = ($4 + [1])
	$4 = $14
	if ( $6 ){ goto $label$5 }
	$4 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [21690])
	
.LABEL $label$1
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $11
	*($1 + [72]) = CALL current_time()
	$4 = *(($1 + [48]))
	$6 = ( *(($1 + [52])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [100])
	$12 = (CASTING uint_64)(uint_32 $6)
	$14 = ($1 + [72])
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$6 }
	if ( ($4 <= [513]) ){ goto $label$8 }
	$6 = CALL $264($4)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = $10
	*($3 + [44]) = $9
	*($3 + [48]) = $7
	*($3 + [52]) = $8
	*($3 + [56]) = $14
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [104])
	*($3 + [72]) = ($1 + [112])
	CALL $196(($3 + [32]), ($3 + [24]))
	$12 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($5 + [8]), (int_64)3607749778735104000, *(*($0 + [8])), $12, $6, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$12 >= (uint_64)*($5 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $267($6)
	if ( (uint_64)($12 <= *($5 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [80])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [80])
}

void .FUNC $13 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($3 + [4])
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [32]) = *($6)
	$7 = ($1 + [32])
	$8 = *(*($3 + [4]) + [8])
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = *($1)
	$6 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$9 = $11
	$12 = $6
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$9 = $11
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$6 < (int_32)[6])
	$13 = ($6 + [1])
	$6 = $13
	if ( $12 ){ goto $label$7 }
	$6 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [21690])
	
.LABEL $label$3
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $8
	$14 = ($1 + [48])
	CALL $234($14, *($3 + [8]))
	*($1 + [72]) = CALL current_time()
	*($1 + [112]) = *(*($3 + [12]))
	*($1 + [80]) = (*($1 + [80]) + [1])
	$15 = ($1 + [80])
	$16 = ($1 + [72])
	$8 = *(*(($3 + [4])) + [8])
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$9 = $11
	$12 = $6
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$9 = $11
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$6 < (int_32)[6])
	$13 = ($6 + [1])
	$6 = $13
	if ( $12 ){ goto $label$12 }
	$6 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [21690])
	
.LABEL $label$8
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $8
	if ( ((int_64)$10 == (int_64)*($1)) ){ goto $label$13 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$13
	$6 = *(($1 + [48]))
	$12 = ( *(($1 + [52])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($12 + [100])
	$9 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$14 }
	if ( ($6 <= [513]) ){ goto $label$16 }
	$12 = CALL $264($6)
	goto $label$15 
	
.LABEL $label$16
	$12 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $12
	
.LABEL $label$15
	*($5 + [12]) = $12
	*($5 + [8]) = $12
	*($5 + [16]) = ($12 + $6)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $14
	*($5 + [56]) = $16
	*($5 + [60]) = $15
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [52]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	CALL $196(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [124]), $2, $12, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $267($12)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [80])
}

int_32 .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$2 = CALL $264($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $118(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $267($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([168])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [1]
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)1
	*($5 + [72]) = (int_64)5
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112 align=4]) = (int_64)0
	*($5 + [120]) = [0]
	*($5 + [128]) = (int_64)0
	*($5 + [152]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [48])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [96])
	*($3 + [80]) = ($5 + [112])
	*($3 + [84]) = ($5 + [128])
	*($3 + [88]) = ($5 + [136])
	*($3 + [92]) = ($5 + [144])
	CALL $189(($3 + [40]), ($3 + [32]))
	*($5 + [160]) = [-1]
	*($5 + [156]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $124(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [120])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$14
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $182(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$17
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = *($3 + [4])
	$5 = *($0)
	$6 = *($5 + [40])
	$7 = ($3 + [8])
	$8 = ($3 + [4])
	
.LOOP $label$1:
	$9 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$10 = ((int_64)$6) != (int_64)0
	*($2 + [15]) = (($10) << [7]) | ($9 & [127]))
	if ( ((int_32)(*($7) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($8)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($8) + [1])
	*($8) = $4
	if ( $10 ){ goto $label$1 }
	$8 = ($5 + [44])
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $8, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	CALL $182(*($1), (*($0) + [80]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [280]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [288])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL eosio_assert(($2 <= [2]), [17069])
	*($3 + [16]) = [20524]
	*($3 + [20]) = CALL $261([20524])
	*($3 + [8]) = *($3 + [16])
	CALL require_auth(*(CALL $22(($3 + [24]), ($3 + [8]))))
	CALL eosio_assert(CALL $fimport$5($1), [20339])
	$4 = ($0 + [312])
	$6 = *(($0 + [340]))
	$5 = *(($0 + [336]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$8 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [22260])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [320])), (int_64)4344997574076792832, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $18($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$6
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert(($8 == 0), [20537])
	$9 = *($0)
	if ( ((int_64)*(($0 + [312])) == (int_64)CALL current_receiver()) ){ goto $label$10 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$10
	*(($7 = CALL _Znwj([32])) + [16]) = $4
	*($7) = $1
	*($7 + [8]) = CALL current_time()
	CALL memcpy(($3 + [48]), $7, [8])
	CALL memcpy((($3 + [48]) | [8]), ($7 + [8]), [8])
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [320])), (int_64)4344997574076792832, $9, $1, ($3 + [48]), [16])
	*($7 + [20]) = $8
	$6 = ($0 + [328])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$11 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($3 + [40]) = $7
	$1 = *($7)
	*($3 + [48]) = $1
	*($3 + [36]) = $8
	$5 = ($0 + [340])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [344]))) ){ goto $label$3 }
	*($6 + [8]) = $1
	*($6 + [16]) = $8
	*($3 + [40]) = [0]
	*($6) = $7
	*($5) = ($6 + [24])
	$7 = *($3 + [40])
	*($3 + [40]) = [0]
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [20565])
	if ( $8 ){ goto $label$12 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$12
	$7 = CALL db_next_i64(*($8 + [20]), ($3 + [48]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	CALL $18($4, $7)
	
.LABEL $label$13
	CALL $117($4, $8)
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$3
	CALL $118(($0 + [336]), ($3 + [40]), ($3 + [48]), ($3 + [36]))
	$7 = *($3 + [40])
	*($3 + [40]) = [0]
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv($7)
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [84]))
}

int_32 .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [40])) = (int_64)0
	$1 = CALL $261([16939])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [21951])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [16938]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [48]) = (int_64)0
	*(($0 + [56])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	
.LABEL $label$9
	return $0
	
.LABEL $label$7
	CALL eosio_assert([0], [21690])
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $214(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$global$0 = $2
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$5($1), [20502])
	$3 = ($0 + [272])
	$5 = *(($0 + [300]))
	$4 = *(($0 + [296]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [80]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [280])), (int_64)3680914790898728960, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $96($3, $6)
	if ( ((int_32)*($7 + [80]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$2
	$6 = CALL db_next_i64(*($7 + [84]), $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $96($3, $6)
	
.LABEL $label$6
	CALL $112($3, $7)
	$global$0 = ($2 + [144])
	return 
	
.LABEL $label$1
	$8 = *($0)
	if ( ((int_64)*(($0 + [272])) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$7
	$6 = CALL _Znwj([96])
	CALL $113($6)
	*($6 + [80]) = $3
	*($6) = $1
	*($6 + [64]) = CALL current_time()
	*($2 + [96]) = ($2 + [76])
	*($2 + [92]) = $2
	*($2 + [88]) = $2
	*($2 + [104]) = ($2 + [88])
	*($2 + [116]) = ($6 + [8])
	*($2 + [112]) = $6
	*($2 + [120]) = ($6 + [16])
	*($2 + [124]) = ($6 + [32])
	*($2 + [128]) = ($6 + [48])
	*($2 + [132]) = ($6 + [64])
	*($2 + [136]) = ($6 + [72])
	CALL $114(($2 + [112]), ($2 + [104]))
	$1 = *($6)
	$7 = CALL db_store_i64(*(($0 + [280])), (int_64)3680914790898728960, $8, $1, $2, [76])
	*($6 + [84]) = $7
	$5 = ($0 + [288])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$8 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($2 + [112]) = $6
	$1 = *($6)
	*($2) = $1
	*($2 + [88]) = $7
	$4 = ($0 + [300])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [304]))) ){ goto $label$11 }
	*($5 + [8]) = $1
	*($5 + [16]) = $7
	*($2 + [112]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	$6 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $115(($0 + [296]), ($2 + [112]), $2, ($2 + [88]))
	$6 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv($6)
	
.LABEL $label$9
	$global$0 = ($2 + [144])
}

int_32 .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $261($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $235($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $235($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	$2 = ($global$0 - [272])
	$global$0 = $2
	CALL eosio_assert(($1 <= [2]), [17069])
	CALL require_auth(*($0))
	*($2 + [184]) = [20590]
	*($2 + [188]) = CALL $261([20590])
	*($2 + [48]) = *($2 + [184])
	$0 = CALL $22(($2 + [192]), ($2 + [48]))
	*($2 + [168]) = [17468]
	*($2 + [172]) = CALL $261([17468])
	*($2 + [40]) = *($2 + [168])
	$3 = *(CALL $22(($2 + [176]), ($2 + [40])))
	$4 = *($0)
	*($2 + [152]) = [19976]
	*($2 + [156]) = CALL $261([19976])
	*($2 + [32]) = *($2 + [152])
	$5 = CALL $22(($2 + [160]), ($2 + [32]))
	*($2 + [136]) = [20603]
	*($2 + [140]) = CALL $261([20603])
	*($2 + [24]) = *($2 + [136])
	$6 = CALL $22(($2 + [144]), ($2 + [24]))
	*($2 + [72]) = [20616]
	*($2 + [76]) = CALL $261([20616])
	*($2 + [16]) = *($2 + [72])
	$7 = CALL $22(($2 + [80]), ($2 + [16]))
	*($2 + [56]) = [20590]
	*($2 + [60]) = CALL $261([20590])
	*($2 + [8]) = *($2 + [56])
	$8 = CALL $22(($2 + [64]), ($2 + [8]))
	$0 = CALL $261([16939])
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [21951])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = (int_64)0
	
.LOOP $label$5:
	$1 = *(($0 + [16938]))
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$10 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$10 = (int_64)4
	
.LABEL $label$1
	$9 = (uint_64)$10 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$9 = $11
	$1 = $0
	$0 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$9 = $11
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$1 = ((int_32)$0 < (int_32)[6])
	$12 = ($0 + [1])
	$0 = $12
	if ( $1 ){ goto $label$11 }
	$0 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [21690])
	
.LABEL $label$7
	$0 = CALL $261([16939])
	if ( ($0 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [21951])
	goto $label$14 
	
.LABEL $label$15
	if ( ($0 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$9 = (int_64)0
	
.LOOP $label$16:
	$1 = *(($0 + [16938]))
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [21996])
	
.LABEL $label$17
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$16 }
	$13 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$13 = (int_64)4
	
.LABEL $label$12
	$9 = (uint_64)$13 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$9 = $11
	$1 = $0
	$0 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$9 = $11
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$1 = ((int_32)$0 < (int_32)[6])
	$12 = ($0 + [1])
	$0 = $12
	if ( $1 ){ goto $label$22 }
	$0 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [21690])
	
.LABEL $label$18
	*((($2 + [88]) + [24])) = $10
	*(($2 + [128])) = $13
	*($2 + [104]) = (int_64)49000
	*($2 + [120]) = (int_64)1000
	*($2 + [88]) = *($7)
	*($2 + [96]) = *($8)
	*($2 + [200]) = *($5)
	*($2 + [208]) = *($6)
	*(($0 = CALL _Znwj([16]))) = $4
	*($0 + [8]) = $3
	*(($2 + [236])) = [0]
	$1 = ($0 + [16])
	*((($2 + [200]) + [24])) = $1
	*(($2 + [220])) = $1
	*($2 + [216]) = $0
	*($2 + [228 align=4]) = (int_64)0
	CALL $2(($2 + [228]), [48])
	$12 = ($2 + [232])
	$0 = *($12)
	$1 = *($2 + [228])
	*($2 + [244]) = $1
	*($2 + [240]) = $1
	*($2 + [248]) = $0
	*($2 + [256]) = ($2 + [240])
	*($2 + [264]) = ($2 + [88])
	CALL $120(($2 + [264]), ($2 + [256]))
	CALL $24(($2 + [200]))
	$0 = *($2 + [228])
	if ( ($0 == 0) ){ goto $label$23 }
	*($12) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$23
	$0 = *($2 + [216])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($2 + [220])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$24
	$global$0 = ($2 + [272])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([136])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [72 align=4]) = (int_64)0
	*($5 + [80]) = [0]
	*($5 + [104]) = [0]
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [72])
	*($3 + [60]) = ($5 + [88])
	*($3 + [64]) = ($5 + [96])
	*($3 + [68]) = ($5 + [104])
	*($3 + [72]) = ($5 + [112])
	CALL $192(($3 + [40]), ($3 + [32]))
	*($5 + [128]) = [-1]
	*($5 + [124]) = $1
	*($3 + [32]) = $5
	$7 = *($5 + [88])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $49(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [80])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $28 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [128])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [22343])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [128])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)4292657617207033856, ($1 + [8]), *($2 + [88]))
	*(*(($0 + [4])) + [128]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3 + [88]) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [120]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $29($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4292657617207033856, $6))
	if ( ((int_32)*($3 + [120]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [128])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $235 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $21 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_64 $35
	$5 = ($global$0 - [512])
	$global$0 = $5
	*($5 + [504]) = $2
	CALL $6($0)
	CALL eosio_assert(($3 <= [2]), [17069])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$4 }
	CALL require_auth($1)
	$6 = [1]
	$7 = *($4)
	if ( (($7 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL require_auth(*($0))
	$6 = [1]
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = uint_32($7 >> $6)
	goto $label$1 
	
.LABEL $label$2
	$4 = *($4 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($4 <= [257]), [17266])
	$8 = ($0 + [152])
	$6 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$8:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$7 }
	$6 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($7 + [148]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$4 = CALL db_find_i64(*($8), *(($0 + [160])), (int_64)6609776272782393344, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $9($8, $4)
	if ( ((int_32)*($7 + [148]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$5
	CALL eosio_assert(($7 == 0), [17300])
	$10 = ($0 + [32])
	$6 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$12:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)$2) ){ goto $label$11 }
	$6 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$10 }
	if ( ((int_32)*($7 + [120]) == (int_32)$10) ){ goto $label$13 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$13
	*($5 + [500]) = $7
	*($5 + [496]) = $10
	$11 = (($5 + [496]) | [4])
	goto $label$9 
	
.LABEL $label$10
	$4 = CALL db_find_i64(*($10), *(($0 + [40])), (int_64)3607749778735104000, $2)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL $10($10, $4)
	if ( ((int_32)*($7 + [120]) == (int_32)$10) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$15
	*($5 + [500]) = $7
	*($5 + [496]) = $10
	$11 = (($5 + [496]) | [4])
	goto $label$9 
	
.LABEL $label$14
	$7 = [0]
	*($5 + [500]) = [0]
	*($5 + [496]) = $10
	$11 = (($5 + [496]) | [4])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [17387])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)$1) ){ goto $label$16 }
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)$1), [17440])
	
.LABEL $label$16
	$12 = ($0 + [352])
	$2 = *($0)
	$6 = *(($0 + [380]))
	$9 = *(($0 + [376]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$22:
	$4 = ($6 + [-24])
	$8 = *($4)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$21 }
	$6 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$20 }
	if ( ((int_32)*($8 + [292]) == (int_32)$12) ){ goto $label$19 }
	CALL eosio_assert([0], [22260])
	$2 = *($7 + [16])
	if ( ((int_64)$2 >= (int_64)1) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$8 = [0]
	$4 = CALL db_find_i64(*($12), *(($0 + [360])), (int_64)-4157493845350678528, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$8 = CALL $15($12, $4)
	if ( ((int_32)*($8 + [292]) == (int_32)$12) ){ goto $label$19 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$19
	$2 = *($7 + [16])
	if ( ((int_64)$2 < (int_64)1) ){ goto $label$17 }
	
.LABEL $label$18
	$13 = *(($7 + [24]))
	$6 = *($7 + [80])
	$1 = *($0)
	*($5 + [424]) = [17468]
	*($5 + [428]) = CALL $261([17468])
	*($5 + [104]) = *($5 + [424])
	$4 = CALL $22(($5 + [432]), ($5 + [104]))
	*($5 + [440]) = $1
	*($5 + [448]) = *($4)
	$1 = *(*($11) + [112])
	*($5 + [408]) = [17475]
	*($5 + [412]) = CALL $261([17475])
	*($5 + [96]) = *($5 + [408])
	$7 = CALL $22(($5 + [416]), ($5 + [96]))
	$9 = *($11)
	*(($5 + [352])) = [0]
	*($5 + [344]) = (int_64)0
	$4 = CALL $261([17484])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$36 }
	$14 = (uint_64)$2 >> (uint_64)(CASTING uint_64)(uint_32 (((int_32)$3 == (int_32)[1]) & ((int_32)$6 != (int_32)[0]))))
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$39 }
	*($5 + [344]) = ($4 << [1])
	$6 = (($5 + [344]) | [1])
	if ( $4 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$15 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($15)
	*($5 + [344]) = ($15 | [1])
	*($5 + [352]) = $6
	*($5 + [348]) = $4
	
.LABEL $label$38
	CALL memcpy($6, [17484], $4)
	
.LABEL $label$37
	*(($6 + $4)) = [0]
	$2 = *($9)
	*(($5 + [384])) = $13
	$4 = ($5 + [352])
	*(($5 + [400])) = *($4)
	*($4) = [0]
	*($5 + [360]) = *($0)
	$16 = *($5 + [344])
	*($5 + [344]) = (int_64)0
	*($5 + [376]) = $14
	*($5 + [392]) = $16
	*($5 + [368]) = $2
	$4 = CALL $23(($5 + [456]), ($5 + [440]), $1, *($7), ($5 + [360]))
	CALL $24($4)
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$40 }
	*(($4 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$40
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$41 }
	*(($4 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$41
	if ( ((*(($5 + [392])) & [1]) == 0) ){ goto $label$42 }
	CALL _ZdlPv(*(($5 + [400])))
	
.LABEL $label$42
	if ( ((*($5 + [344]) & [1]) == 0) ){ goto $label$43 }
	CALL _ZdlPv(*(($5 + [352])))
	
.LABEL $label$43
	$4 = *($11)
	$1 = *($4 + [112])
	$2 = *($4 + [16])
	$16 = *(($4 + [24]))
	*((($5 + [80]) + [8])) = $16
	*((($5 + [328]) + [8])) = $16
	*($5 + [328]) = $2
	*($5 + [80]) = $2
	CALL $11($0, $1, ($5 + [80]), [3])
	if ( ($8 == 0) ){ goto $label$44 }
	$2 = *($0)
	*($5 + [360]) = ($5 + [496])
	CALL $25($12, $8, $2, ($5 + [360]))
	
.LABEL $label$44
	if ( (*(*($11) + [80]) == 0) ){ goto $label$17 }
	$15 = ($0 + [72])
	*($5 + [320]) = $15
	CALL $26(($5 + [312]), ($5 + [320]), ($5 + [504]))
	*($5 + [352]) = [0]
	*($5 + [344]) = (int_64)0
	$4 = *($5 + [316])
	if ( ($4 == 0) ){ goto $label$17 }
	$7 = (($5 + [344]) + [8])
	
.LOOP $label$46:
	if ( ((int_64)*($4 + [8]) != (int_64)*($5 + [504])) ){ goto $label$45 }
	$6 = ($4 + [88])
	$4 = *($5 + [348])
	if ( ((int_32)$4 == (int_32)*($7)) ){ goto $label$48 }
	*($4) = *($6)
	*($5 + [348]) = ($4 + [8])
	goto $label$47 
	
.LABEL $label$48
	CALL $27(($5 + [344]), $6)
	
.LABEL $label$47
	CALL $28(($5 + [312]))
	$4 = *($5 + [316])
	if ( $4 ){ goto $label$46 }
	
.LABEL $label$45
	$4 = *($5 + [344])
	if ( ((int_32)*($5 + [348]) == (int_32)$4) ){ goto $label$23 }
	*(($5 + [304])) = [0]
	*($5 + [296]) = (int_64)0
	$4 = CALL $261([17531])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$51 }
	*($5 + [296]) = ($4 << [1])
	$6 = (($5 + [296]) | [1])
	if ( $4 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	$7 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($5 + [296]) = ($7 | [1])
	*($5 + [304]) = $6
	*($5 + [300]) = $4
	
.LABEL $label$50
	CALL memcpy($6, [17531], $4)
	
.LABEL $label$49
	*(($6 + $4)) = [0]
	$18 = *($5 + [348])
	$17 = *($5 + [344])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$53 }
	$19 = (($5 + [360]) + [32])
	$20 = (($5 + [360]) + [16])
	$21 = (($5 + [224]) | [1])
	$22 = (($5 + [360]) | [1])
	$23 = (($5 + [272]) | [1])
	$24 = ($0 + [100])
	$25 = ($0 + [96])
	$26 = ($0 + [80])
	$27 = ($0 + [72])
	$28 = (($5 + [272]) + [8])
	$29 = ($5 + [484])
	$30 = ($5 + [400])
	$31 = ($5 + [476])
	$1 = (int_64)0
	
.LOOP $label$54:
	$2 = *($17)
	$6 = *($24)
	$9 = *($25)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$58 }
	
.LOOP $label$60:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7 + [88]) == (int_64)$2) ){ goto $label$59 }
	$6 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$58 }
	if ( ((int_32)*($7 + [120]) != (int_32)$15) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$58
	$4 = CALL db_find_i64(*($27), *($26), (int_64)4292657617207033856, $2)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$56 }
	$7 = CALL $29($15, $4)
	if ( ((int_32)*($7 + [120]) == (int_32)$15) ){ goto $label$55 }
	
.LABEL $label$57
	CALL eosio_assert([0], [22260])
	goto $label$55 
	
.LABEL $label$56
	$7 = [0]
	
.LABEL $label$55
	*($5 + [292]) = $7
	*($5 + [288]) = $15
	$1 = ((int_64)$1 + (int_64)1)
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [17532])
	CALL eosio_assert(((int_64)*(*($5 + [292]) + [112]) == (int_64)*(*($11) + [112])), [17557])
	$2 = *(*($5 + [292]))
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$64 }
	$6 = [0]
	$7 = *([0] + [21604])
	
.LOOP $label$66:
	*((($5 + [360]) + ($4 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$6 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$65 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$66 }
	
.LABEL $label$65
	*($28) = [0]
	*($5 + [272]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$63 }
	*($5 + [272]) = ($6 << [1])
	$7 = $23
	goto $label$62 
	
.LABEL $label$64
	*($28) = [0]
	*($5 + [272]) = (int_64)0
	*($5 + [272]) = [0]
	$4 = $23
	goto $label$61 
	
.LABEL $label$63
	$9 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($28) = $7
	*($5 + [272]) = ($9 | [1])
	*($5 + [276]) = $6
	
.LABEL $label$62
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$67:
	*(($7 + $4)) = *((($5 + [360]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$67 }
	$4 = ($7 + $6)
	
.LABEL $label$61
	*($4) = [0]
	CALL $30(($5 + [360]), ($5 + [272]), ( [17531] ? [17592] : ((int_64)$1 == (int_64)(CASTING uint_64)(uint_32 int_32((*($5 + [348]) - *($5 + [344])) >> [3]))) ))
	$4 = *($5 + [360])
	$6 = ($4 & [1])
	$32 = (($5 + [360]) + [8])
	CALL $239(($5 + [296]), ( *($32) ? $22 : $6 ), ( *($5 + [364]) ? uint_32($4 >> [1]) : $6 ))
	if ( ((*($5 + [360]) & [1]) == 0) ){ goto $label$68 }
	CALL _ZdlPv(*($32))
	
.LABEL $label$68
	$2 = *($0)
	*($5 + [256]) = [17468]
	*($5 + [260]) = CALL $261([17468])
	*($5 + [72]) = *($5 + [256])
	CALL $22(($5 + [264]), ($5 + [72]))
	*((($5 + [440]) + [8])) = *($5 + [264])
	*($5 + [440]) = $2
	$2 = *(*($5 + [292]) + [112])
	*($5 + [240]) = [17475]
	*($5 + [244]) = CALL $261([17475])
	*($5 + [64]) = *($5 + [240])
	CALL $22(($5 + [248]), ($5 + [64]))
	$7 = *($5 + [292])
	*(($6 = (($5 + [224]) + [8]))) = [0]
	*($5 + [224]) = (int_64)0
	$4 = CALL $261([17594])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$52 }
	$9 = ($7 + [16])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$71 }
	*($5 + [224]) = ($4 << [1])
	$33 = $21
	if ( $4 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$34 = (($4 + [16]) & [-16])
	$33 = CALL _Znwj($34)
	*($6) = $33
	*($5 + [224]) = ($34 | [1])
	*($5 + [228]) = $4
	
.LABEL $label$70
	CALL memcpy($33, [17594], $4)
	
.LABEL $label$69
	*(($33 + $4)) = [0]
	*($32) = *($7)
	$16 = *(($9 + [8]))
	$35 = *($9)
	*($19) = *($5 + [224])
	*(($19 + [8])) = *($6)
	*(($20 + [8])) = $16
	*($20) = $35
	*($6) = [0]
	*($5 + [360]) = *($0)
	*($5 + [224]) = (int_64)0
	CALL $24(CALL $23(($5 + [456]), ($5 + [440]), $2, *($5 + [248]), ($5 + [360])))
	$4 = *($29)
	if ( ($4 == 0) ){ goto $label$72 }
	*((($5 + [456]) + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$72
	$4 = *((($5 + [456]) + [16]))
	if ( ($4 == 0) ){ goto $label$73 }
	*($31) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$73
	if ( ((*($19) & [1]) == 0) ){ goto $label$74 }
	CALL _ZdlPv(*($30))
	
.LABEL $label$74
	if ( ((*($5 + [224]) & [1]) == 0) ){ goto $label$75 }
	CALL _ZdlPv(*($6))
	
.LABEL $label$75
	$4 = *($5 + [292])
	$16 = *($4 + [112])
	$2 = *($4 + [16])
	$35 = *(($4 + [24]))
	*((($5 + [48]) + [8])) = $35
	*((($5 + [208]) + [8])) = $35
	*($5 + [208]) = $2
	*($5 + [48]) = $2
	CALL $11($0, $16, ($5 + [48]), [3])
	if ( ($8 == 0) ){ goto $label$76 }
	$2 = *($0)
	*($5 + [360]) = ($5 + [288])
	CALL $31($12, $8, $2, ($5 + [360]))
	
.LABEL $label$76
	$2 = *($5 + [288])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$77 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$77
	$6 = CALL db_next_i64(*($4 + [124]), ($5 + [360]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$78 }
	CALL $29((CASTING uint_32)(uint_64 $2), $6)
	
.LABEL $label$78
	CALL $32($15, $4)
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$79 }
	CALL _ZdlPv(*($28))
	
.LABEL $label$79
	$17 = ($17 + [8])
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$54 }
	
.LABEL $label$53
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$24 }
	$2 = *(*($11))
	*(($5 + [200])) = [0]
	*($5 + [192]) = (int_64)0
	$4 = CALL $261([17650])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$82 }
	*($5 + [192]) = ($4 << [1])
	$6 = (($5 + [192]) | [1])
	if ( $4 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$7 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($5 + [192]) = ($7 | [1])
	*($5 + [200]) = $6
	*($5 + [196]) = $4
	
.LABEL $label$81
	CALL memcpy($6, [17650], $4)
	
.LABEL $label$80
	*(($6 + $4)) = [0]
	CALL $33($0, $2, ($5 + [192]))
	if ( ((*($5 + [192]) & [1]) == 0) ){ goto $label$83 }
	CALL _ZdlPv(*($5 + [200]))
	
.LABEL $label$83
	$1 = *(*($11) + [8])
	*(($5 + [464])) = [0]
	*($5 + [456]) = (int_64)0
	$4 = CALL $261([17686])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$86 }
	*($5 + [456]) = ($4 << [1])
	$7 = (($5 + [456]) | [1])
	if ( $4 ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	$6 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($5 + [456]) = ($6 | [1])
	*($5 + [464]) = $7
	*($5 + [460]) = $4
	
.LABEL $label$85
	CALL memcpy($7, [17686], $4)
	
.LABEL $label$84
	$6 = [0]
	*(($7 + $4)) = [0]
	$2 = *(*($11))
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$90 }
	$7 = *([0] + [21604])
	
.LOOP $label$92:
	*((($5 + [360]) + ($4 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$6 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$91 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$92 }
	
.LABEL $label$91
	*(($5 + [448])) = [0]
	*($5 + [440]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$89 }
	*($5 + [440]) = ($6 << [1])
	$7 = (($5 + [440]) | [1])
	goto $label$88 
	
.LABEL $label$90
	*(($5 + [448])) = [0]
	*($5 + [440]) = (int_64)0
	*($5 + [440]) = [0]
	$7 = (($5 + [440]) | [1])
	$4 = $7
	goto $label$87 
	
.LABEL $label$89
	$9 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [440]) = ($9 | [1])
	*($5 + [448]) = $7
	*($5 + [444]) = $6
	
.LABEL $label$88
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$93:
	*(($7 + $4)) = *((($5 + [360]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$93 }
	$4 = ($7 + $6)
	$7 = (($5 + [440]) | [1])
	
.LABEL $label$87
	*($4) = [0]
	$4 = *($5 + [440])
	$6 = ($4 & [1])
	$4 = CALL $239(($5 + [456]), ( *($5 + [448]) ? $7 : $6 ), ( *($5 + [444]) ? uint_32($4 >> [1]) : $6 ))
	$6 = ($4 + [8])
	*((($5 + [360]) + [8])) = *($6)
	*($5 + [360]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	*((($5 + [272]) + [8])) = [0]
	*($5 + [272]) = (int_64)0
	$4 = CALL $261([17725])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$96 }
	*($5 + [272]) = ($4 << [1])
	$7 = (($5 + [272]) | [1])
	$6 = $7
	if ( $4 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$7 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($5 + [272]) = ($7 | [1])
	*($5 + [280]) = $6
	*($5 + [276]) = $4
	$7 = (($5 + [272]) | [1])
	
.LABEL $label$95
	CALL memcpy($6, [17725], $4)
	
.LABEL $label$94
	*(($6 + $4)) = [0]
	$4 = *($5 + [272])
	$6 = ($4 & [1])
	$4 = CALL $239(($5 + [360]), ( *($5 + [280]) ? $7 : $6 ), ( *($5 + [276]) ? uint_32($4 >> [1]) : $6 ))
	$6 = ($4 + [8])
	*((($5 + [176]) + [8])) = *($6)
	*($5 + [176]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	CALL $33($0, $1, ($5 + [176]))
	if ( (*($5 + [176]) & [1]) ){ goto $label$98 }
	if ( (*($5 + [272]) & [1]) ){ goto $label$97 }
	goto $label$31 
	
.LABEL $label$98
	CALL _ZdlPv(*($5 + [184]))
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$97
	CALL _ZdlPv(*(($5 + [280])))
	$4 = [1]
	if ( ((*($5 + [360]) & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$52
	CALL $231(($5 + [224]))
	
.LABEL $label$36
	CALL $231(($5 + [344]))
	
.LABEL $label$35
	CALL $231(($5 + [296]))
	
.LABEL $label$34
	CALL $231(($5 + [192]))
	
.LABEL $label$33
	CALL $231(($5 + [456]))
	
.LABEL $label$32
	CALL $231(($5 + [272]))
	
.LABEL $label$31
	$4 = [1]
	if ( (*($5 + [360]) & [1]) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($5 + [440]) & $4) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL _ZdlPv(*($5 + [368]))
	if ( ((*($5 + [440]) & $4) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL _ZdlPv(*(($5 + [448])))
	if ( (*($5 + [456]) & [1]) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	if ( ((*($5 + [456]) & [1]) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL _ZdlPv(*($5 + [464]))
	
.LABEL $label$25
	$2 = *(*($11) + [112])
	*((($5 + [32]) + [8])) = $13
	*($5 + [160]) = $14
	*($5 + [168]) = $13
	*($5 + [32]) = $14
	CALL $11($0, $2, ($5 + [32]), [6])
	$2 = *($0)
	*($5 + [144]) = [17468]
	*($5 + [148]) = CALL $261([17468])
	*($5 + [24]) = *($5 + [144])
	$1 = *(CALL $22(($5 + [152]), ($5 + [24])))
	*($5 + [128]) = [17777]
	*($5 + [132]) = CALL $261([17777])
	*($5 + [16]) = *($5 + [128])
	$7 = CALL $22(($5 + [136]), ($5 + [16]))
	*($5 + [112]) = [17790]
	*($5 + [116]) = CALL $261([17790])
	*($5 + [8]) = *($5 + [112])
	$9 = CALL $22(($5 + [120]), ($5 + [8]))
	$15 = *($11)
	*((($5 + [272]) + [8])) = [0]
	*($5 + [272]) = (int_64)0
	$16 = ((int_64)$14 / (int_64)2)
	$4 = CALL $261([17799])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$101 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$104 }
	*($5 + [272]) = ($4 << [1])
	$6 = (($5 + [272]) | [1])
	if ( $4 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$104
	$17 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($17)
	*($5 + [272]) = ($17 | [1])
	*($5 + [280]) = $6
	*($5 + [276]) = $4
	
.LABEL $label$103
	CALL memcpy($6, [17799], $4)
	
.LABEL $label$102
	*(($6 + $4)) = [0]
	*((($5 + [360]) + [16])) = $13
	*($5 + [368]) = $16
	*($5 + [360]) = *($15 + [112])
	$6 = CALL $232((($5 + [360]) + [24]), ($5 + [296]))
	$4 = ($5 + [280])
	*(($5 + [404])) = *($4)
	*($4) = [0]
	*($5 + [396 align=4]) = *($5 + [272])
	*($5 + [272]) = (int_64)0
	*($5 + [456]) = *($7)
	*($5 + [464]) = *($9)
	*(($4 = CALL _Znwj([16]))) = $2
	*($4 + [8]) = $1
	*(($5 + [492])) = [0]
	$7 = ($4 + [16])
	*((($5 + [456]) + [24])) = $7
	*(($5 + [476])) = $7
	*($5 + [472]) = $4
	*($5 + [484 align=4]) = (int_64)0
	$4 = *($6)
	$6 = ( *((($5 + [360]) + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [24])
	$2 = (CASTING uint_64)(uint_32 $6)
	$7 = (($5 + [456]) + [28])
	
.LOOP $label$105:
	$4 = ($4 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$105 }
	$6 = *($5 + [396])
	$6 = ( *(($5 + [400])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$4 = ($6 + $4)
	$2 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$106:
	$4 = ($4 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$106 }
	if ( ($4 == 0) ){ goto $label$108 }
	CALL $2($7, $4)
	$6 = *(($5 + [488]))
	$4 = *(($5 + [484]))
	goto $label$107 
	
.LABEL $label$108
	$6 = [0]
	$4 = [0]
	
.LABEL $label$107
	*($5 + [444]) = $4
	*($5 + [440]) = $4
	*($5 + [448]) = $6
	*($5 + [288]) = ($5 + [440])
	*($5 + [224]) = ($5 + [360])
	CALL $34(($5 + [224]), ($5 + [288]))
	CALL $24(($5 + [456]))
	$4 = *($5 + [484])
	if ( ($4 == 0) ){ goto $label$109 }
	*(($5 + [488])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$109
	$4 = *($5 + [472])
	if ( ($4 == 0) ){ goto $label$110 }
	*(($5 + [476])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$110
	if ( (*(($5 + [396])) & [1]) ){ goto $label$112 }
	if ( (*($5 + [384]) & [1]) ){ goto $label$111 }
	goto $label$100 
	
.LABEL $label$112
	CALL _ZdlPv(*(($5 + [404])))
	if ( ((*($5 + [384]) & [1]) == 0) ){ goto $label$100 }
	
.LABEL $label$111
	CALL _ZdlPv(*(($5 + [392])))
	if ( (*($5 + [272]) & [1]) ){ goto $label$99 }
	goto $label$24 
	
.LABEL $label$101
	CALL $231(($5 + [272]))
	
.LABEL $label$100
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$99
	CALL _ZdlPv(*(($5 + [280])))
	
.LABEL $label$24
	if ( ((*($5 + [296]) & [1]) == 0) ){ goto $label$113 }
	CALL _ZdlPv(*($5 + [304]))
	
.LABEL $label$113
	$4 = *($5 + [344])
	
.LABEL $label$23
	if ( ($4 == 0) ){ goto $label$17 }
	*($5 + [348]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$17
	if ( ($8 == 0) ){ goto $label$114 }
	CALL $35($12, $8, *($0))
	
.LABEL $label$114
	$2 = *($5 + [496])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$115 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$115
	$6 = CALL db_next_i64(*($4 + [124]), ($5 + [360]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$116 }
	CALL $10((CASTING uint_32)(uint_64 $2), $6)
	
.LABEL $label$116
	CALL $36($10, $4)
	$global$0 = ($5 + [512])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [152]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [8])
	$6 = *($1)
	CALL $183($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$3
	$3 = *($1 + [112])
	$7 = ( *(($1 + [116])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [129])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [112])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $264($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [32]) = ($5 + [8])
	*($5 + [80]) = $7
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [16])
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = ($1 + [32])
	*($5 + [60]) = ($1 + [48])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	*($5 + [72]) = ($1 + [80])
	*($5 + [76]) = ($1 + [96])
	*($5 + [84]) = ($1 + [128])
	*($5 + [88]) = ($1 + [136])
	*($5 + [92]) = ($1 + [144])
	CALL $184(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [156]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $267($4)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $260(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [160])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4060986518620078080, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [96])
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $2($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $37(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [21447])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [21552])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [21485])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [21552])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $25 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3 + [16])))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [21769])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [21791])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [21388])
	
.LABEL $label$4
	$3 = *($1 + [280])
	$8 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [273])
	$7 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [280])
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $264($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $8
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [128])
}

void .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $2($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $38(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $250($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4292657617207033856, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [88]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [120]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $29($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)4292657617207033856, $6))
	if ( ((int_32)*($4 + [120]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$2
	*(($4 + [128])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [21855])
	$7 = *(($1 + [48]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$5
	*($1 + [72]) = CALL current_time()
	$3 = ($1 + [72])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-80])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($8 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [56]) = $3
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [64])
	CALL $114(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [84]), $2, $4, [76])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [64])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)-1)
	*($1 + [176]) = ((int_64)*($1 + [176]) + (int_64)1)
	$7 = *(*($3) + [4])
	*($5 + [8]) = [19052]
	*($5 + [12]) = CALL $261([19052])
	*($5) = *($5 + [8])
	$8 = CALL $22(($5 + [32]), $5)
	if ( ((int_64)*($7 + [128]) != (int_64)*($8)) ){ goto $label$3 }
	$7 = *(*($3) + [4])
	if ( ((int_64)*(($7 + [88])) == (int_64)*(($1 + [40]))) ){ goto $label$4 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$4
	$9 = (int_64)
	*($1 + [32]) = $9(*($1 + [32]) - *($7 + [80])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [32]))
	
.LABEL $label$5
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$6
	$7 = *(*($3) + [4])
	if ( ((int_64)*(($7 + [72])) == (int_64)*(($1 + [96]))) ){ goto $label$7 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$7
	$9 = (int_64)
	*($1 + [88]) = $9(*($1 + [88]) - *($7 + [64])))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [21769])
	$9 = *(($1 + [88]))
	
.LABEL $label$8
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [21791])
	
.LABEL $label$9
	$7 = *(*($3) + [4])
	if ( ((int_64)*(($7 + [72])) == (int_64)*(($1 + [192]))) ){ goto $label$10 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$10
	$9 = ((int_64)*($1 + [184]) + (int_64)*($7 + [64]))
	*($1 + [184]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [184]))
	
.LABEL $label$11
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$12
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [256]))) ){ goto $label$13 }
	CALL eosio_assert([0], [21812])
	
.LABEL $label$13
	$9 = ((int_64)*($1 + [248]) + (int_64)*($3))
	*($1 + [248]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$14 }
	CALL eosio_assert([0], [21855])
	$9 = *(($1 + [248]))
	
.LABEL $label$14
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [21874])
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$15 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$15
	$7 = ($1 + [176])
	$8 = ($1 + [80])
	$3 = *($1 + [280])
	$10 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [273])
	$9 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [280])
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$16 }
	if ( ($3 <= [513]) ){ goto $label$18 }
	$4 = CALL $264($3)
	goto $label$17 
	
.LABEL $label$18
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$17
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [60]) = $8
	*($5 + [92]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $10
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$21 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$19 }
	
.LABEL $label$20
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$19
	$global$0 = ($5 + [128])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = CALL $232(($4 + [32]), $1)
	*($4 + [24]) = [0]
	*($4 + [16]) = (int_64)0
	$7 = *($3)
	$6 = *($3 + [4])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$1 }
	
.LOOP $label$2:
	$1 = ($6 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($6 + [-4])))
	
.LABEL $label$3
	$6 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	*(($8 = ($3 + [4]))) = $7
	$9 = ($5 + [1])
	$10 = ($2 + [1])
	$6 = [-1]
	$1 = ($1 & [1])
	$1 = *($4 + [32])
	$7 = ( *($5 + [4]) ? uint_32($1 >> [1]) : $1 )
	if ( ($7 == 0) ){ goto $label$4 }
	$6 = [-1]
	$11 = ($11 & [1])
	$11 = *($2)
	$12 = ( *($2 + [4]) ? uint_32($11 >> [1]) : $11 )
	if ( ($12 == 0) ){ goto $label$4 }
	$13 = ( *($2 + [8]) ? $10 : $11 )
	$14 = ( *($5 + [8]) ? $9 : $1 )
	$15 = ($14 + $7)
	$11 = $14
	
.LOOP $label$6:
	$7 = *($11)
	$6 = $12
	$1 = $13
	
.LOOP $label$7:
	if ( ((int_32)($7 & [255]) == (int_32)*($1)) ){ goto $label$5 }
	$1 = ($1 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 != (int_32)$15) ){ goto $label$6 }
	$11 = $15
	
.LABEL $label$5
	$6 = ( [-1] ? ($11 - $14) : ((int_32)$11 == (int_32)$15) )
	
.LABEL $label$4
	$7 = [0]
	
.LOOP $label$9:
	if ( ((int_32)$6 == (int_32)[-1]) ){ goto $label$8 }
	CALL $233($4, $5, $7, ($6 - $7), $5)
	if ( (*($4 + [16]) & [1]) ){ goto $label$11 }
	*($4 + [16]) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*((($4 + [16]) + [8]))) = [0]
	*($4 + [20]) = [0]
	
.LABEL $label$10
	CALL $236(($4 + [16]), [0])
	*((($4 + [16]) + [8])) = *(($4 + [8]))
	*($4 + [16]) = *($4)
	$1 = *($8)
	if ( ((int_32)$1 == (int_32)*(($3 + [8]))) ){ goto $label$13 }
	CALL $232($1, ($4 + [16]))
	*($8) = (*($8) + [12])
	goto $label$12 
	
.LABEL $label$13
	CALL $104($3, ($4 + [16]))
	
.LABEL $label$12
	$14 = ($1 & [1])
	$1 = *($2)
	$1 = ( *(($2 + [4])) ? uint_32($1 >> [1]) : $14 )
	$7 = ($1 + $6)
	$11 = ($1 & [1])
	$1 = *($4 + [32])
	$12 = ( *(($5 + [4])) ? uint_32($1 >> [1]) : $11 )
	if ( ($12 <= $7) ){ goto $label$8 }
	$6 = $7
	if ( ($1 == 0) ){ goto $label$14 }
	$11 = ($13 + $7)
	$13 = ( *(($5 + [8])) ? $9 : $11 )
	$12 = ($13 + $12)
	$6 = ($12 - $11)
	if ( ((int_32)$6 < (int_32)$1) ){ goto $label$16 }
	$15 = ( *(($2 + [8])) ? $10 : $14 )
	$14 = *($15)
	
.LOOP $label$17:
	$6 = (($6 - $1) + [1])
	if ( ($6 == 0) ){ goto $label$16 }
	$6 = CALL $259($11, $14, $6)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( (CALL $260($6, $15, $1) == 0) ){ goto $label$15 }
	$11 = ($6 + [1])
	$6 = ($12 - $11)
	if ( ((int_32)$6 >= (int_32)$1) ){ goto $label$17 }
	
.LABEL $label$16
	$6 = $12
	
.LABEL $label$15
	$6 = ( [-1] ? ($6 - $13) : ((int_32)$6 == (int_32)$12) )
	
.LABEL $label$14
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$8 }
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL $233($4, $5, $7, [-1], $5)
	if ( (*($4 + [16]) & [1]) ){ goto $label$19 }
	*($4 + [16]) = [0]
	goto $label$18 
	
.LABEL $label$19
	*(*(($4 + [24]))) = [0]
	*($4 + [20]) = [0]
	
.LABEL $label$18
	CALL $236(($4 + [16]), [0])
	*((($4 + [16]) + [8])) = *(($4 + [8]))
	*($4 + [16]) = *($4)
	$1 = ($3 + [4])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)*(($3 + [8]))) ){ goto $label$22 }
	CALL $232($6, ($4 + [16]))
	*($1) = (*($1) + [12])
	$1 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	CALL $104($3, ($4 + [16]))
	$1 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$20
	if ( (*($4 + [32]) & $1) ){ goto $label$23 }
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$23
	CALL _ZdlPv(*(($5 + [8])))
	$global$0 = ($4 + [48])
}

void .FUNC $102 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$5 = ($global$0 - [224])
	$global$0 = $5
	CALL require_auth(*($0))
	$6 = ($0 + [392])
	$8 = *(($0 + [420]))
	$7 = *(($0 + [416]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$7:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$6 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	if ( ((int_32)*($10 + [152]) == (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	$11 = *($10 + [8])
	if ( ((int_64)$11 == (int_64)*($2 + [8])) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$9 = CALL db_find_i64(*($6), *(($0 + [400])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $19($6, $9)
	if ( ((int_32)*($10 + [152]) == (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$4
	$11 = *($10 + [8])
	if ( ((int_64)$11 != (int_64)*($2 + [8])) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_64)*(($10 + [88])) == (int_64)$11) ){ goto $label$8 }
	CALL eosio_assert([0], [21892])
	
.LABEL $label$8
	$11 = *($2)
	if ( ((int_64)*($10 + [80]) < (int_64)$11) ){ goto $label$2 }
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$10 }
	$9 = uint_32($9 >> [1])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$2 }
	goto $label$9 
	
.LABEL $label$10
	$9 = *($3 + [4])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$2 }
	
.LABEL $label$9
	if ( ($9 == 0) ){ goto $label$2 }
	*($5 + [216]) = [0]
	*($5 + [208]) = (int_64)0
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $261([17592])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$13 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$10 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($10)
	*($5 + [56]) = ($10 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$12
	CALL memcpy($8, [17592], $9)
	
.LABEL $label$11
	*(($8 + $9)) = [0]
	CALL $103($0, $3, ($5 + [56]), ($5 + [208]))
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [64]))
	
.LABEL $label$14
	$8 = *($5 + [208])
	$9 = *($5 + [212])
	$10 = ($9 - $8)
	if ( ($10 == 0) ){ goto $label$15 }
	$12 = ((int_64)*($2) / (int_64)(CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[12])))
	$13 = ($2 + [8])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$16 }
	$14 = *($13)
	$7 = (($5 + [56]) + [32])
	$9 = [0]
	$6 = (($5 + [56]) + [16])
	$3 = ($5 + [80])
	$15 = ($5 + [180])
	$16 = ($5 + [96])
	$17 = ($5 + [172])
	$10 = [0]
	
.LOOP $label$17:
	$8 = ($8 + $9)
	if ( (*($8) & [1]) ){ goto $label$19 }
	$8 = ($8 + [1])
	goto $label$18 
	
.LABEL $label$19
	$8 = *(($8 + [8]))
	
.LABEL $label$18
	*($5 + [192]) = $8
	*($5 + [196]) = CALL $261($8)
	*($5 + [32]) = *($5 + [192])
	CALL $22(($5 + [200]), ($5 + [32]))
	if ( (CALL is_account(*($5 + [200])) == 0) ){ goto $label$20 }
	$11 = *($0)
	*($5 + [120]) = [17468]
	*($5 + [124]) = CALL $261([17468])
	*($5 + [24]) = *($5 + [120])
	CALL $22(($5 + [128]), ($5 + [24]))
	*((($5 + [136]) + [8])) = *($5 + [128])
	*($5 + [136]) = $11
	*($5 + [104]) = [17475]
	*($5 + [108]) = CALL $261([17475])
	*($5 + [16]) = *($5 + [104])
	CALL $22(($5 + [112]), ($5 + [16]))
	*($6) = $12
	*($3) = $14
	*((($5 + [56]) + [8])) = *($5 + [200])
	*($5 + [56]) = *($0)
	CALL $232($7, $4)
	CALL $24(CALL $23(($5 + [152]), ($5 + [136]), $1, *($5 + [112]), ($5 + [56])))
	$8 = *($15)
	if ( ($8 == 0) ){ goto $label$21 }
	*((($5 + [152]) + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$21
	$8 = *((($5 + [152]) + [16]))
	if ( ($8 == 0) ){ goto $label$22 }
	*($17) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$22
	if ( ((*($7) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*($16))
	
.LABEL $label$20
	$9 = ($9 + [12])
	$8 = *($5 + [208])
	$10 = ($10 + [1])
	if ( ($10 <= ((int_32)(*($5 + [212]) - $8) / (int_32)[12])) ){ goto $label$17 }
	
.LABEL $label$16
	$12 = *($13)
	*((($5 + [40]) + [8])) = $12
	$11 = *($2)
	*(($5 + [8])) = $12
	*($5 + [40]) = $11
	*($5) = $11
	CALL $11($0, $1, $5, [7])
	$8 = *($5 + [208])
	
.LABEL $label$15
	if ( ($8 == 0) ){ goto $label$2 }
	$10 = *($5 + [212])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*(($10 + [-4])))
	
.LABEL $label$26
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$25 }
	$9 = *($5 + [208])
	goto $label$23 
	
.LABEL $label$24
	$9 = $8
	
.LABEL $label$23
	*($5 + [212]) = $8
	CALL _ZdlPv($9)
	
.LABEL $label$2
	$global$0 = ($5 + [224])
	return (unreachable)
	
.LABEL $label$1
	CALL $231(($5 + [56]))
}

void .FUNC $105 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [64])
	$global$0 = $6
	*($6 + [16]) = $1
	CALL $6($0)
	CALL eosio_assert((($5 == 0) | ((($5 + [-1]) & [255]) <= [2])), [17069])
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$2 }
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL require_auth(*($0))
	
.LABEL $label$1
	CALL $7($0, $1)
	CALL eosio_assert(CALL $fimport$5($1), [20339])
	$7 = *($2)
	if ( ($7 & [1]) ){ goto $label$4 }
	$7 = uint_32($7 >> [1])
	goto $label$3 
	
.LABEL $label$4
	$7 = *($2 + [4])
	
.LABEL $label$3
	CALL eosio_assert(($7 <= [257]), [20355])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$6 }
	$7 = uint_32($7 >> [1])
	goto $label$5 
	
.LABEL $label$6
	$7 = *($3 + [4])
	
.LABEL $label$5
	CALL eosio_assert(($7 <= [101]), [20387])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$8 }
	$7 = uint_32($7 >> [1])
	goto $label$7 
	
.LABEL $label$8
	$7 = *($4 + [4])
	
.LABEL $label$7
	CALL eosio_assert(($7 <= [257]), [20421])
	$8 = ($0 + [232])
	$10 = *(($0 + [260]))
	$9 = *(($0 + [256]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$16 }
	
.LOOP $label$18:
	$7 = ($10 + [-24])
	$11 = *($7)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$17 }
	$10 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$16 }
	if ( ((int_32)*($11 + [88]) == (int_32)$8) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$11 = [0]
	$7 = CALL db_find_i64(*($8), *(($0 + [240])), (int_64)-4149656938784751616, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	$11 = CALL $106($8, $7)
	if ( ((int_32)*($11 + [88]) == (int_32)$8) ){ goto $label$15 }
	CALL eosio_assert([0], [22260])
	
.LABEL $label$15
	if ( ($5 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [20480])
	$1 = *($0)
	*($6 + [4]) = $3
	*($6) = $2
	*($6 + [8]) = $4
	if ( $11 ){ goto $label$19 }
	CALL eosio_assert([0], [21256])
	
.LABEL $label$19
	CALL $107($8, $11, $1, $6)
	$global$0 = ($6 + [64])
	return 
	
.LABEL $label$13
	CALL eosio_assert(($11 == 0), [20455])
	$1 = *($0)
	*($6 + [4]) = $2
	*($6 + [8]) = $3
	*($6 + [12]) = $4
	*($6) = ($6 + [16])
	*($6 + [56]) = $1
	if ( ((int_64)*(($0 + [232])) == (int_64)CALL current_receiver()) ){ goto $label$20 }
	CALL eosio_assert([0], [21132])
	
.LABEL $label$20
	*($6 + [32]) = $8
	*($6 + [36]) = $6
	*($6 + [40]) = ($6 + [56])
	*(($7 = CALL _Znwj([104]))) = (int_64)0
	*($7 + [8 align=4]) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32 align=4]) = (int_64)0
	*($7 + [40 align=4]) = (int_64)0
	*($7 + [48 align=4]) = (int_64)0
	*($7 + [56]) = (int_64)0
	*($7 + [64]) = [1]
	*($7 + [88]) = $8
	CALL $108(($6 + [32]), $7)
	*($6 + [48]) = $7
	$1 = *($7)
	*($6 + [32]) = $1
	$11 = *($7 + [92])
	*($6 + [28]) = $11
	$9 = ($0 + [260])
	$10 = *($9)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [264]))) ){ goto $label$11 }
	*($10 + [8]) = $1
	*($10 + [16]) = $11
	*($6 + [48]) = [0]
	*($10) = $7
	*($9) = ($10 + [24])
	$7 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[2]) ){ goto $label$10 }
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [20480])
	if ( $11 ){ goto $label$21 }
	CALL eosio_assert([0], [22373])
	CALL eosio_assert([0], [22343])
	
.LABEL $label$21
	$7 = CALL db_next_i64(*($11 + [92]), $6)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$22 }
	CALL $106($8, $7)
	
.LABEL $label$22
	CALL $109($8, $11)
	$global$0 = ($6 + [64])
	return 
	
.LABEL $label$11
	CALL $110(($0 + [256]), ($6 + [48]), ($6 + [32]), ($6 + [28]))
	$7 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( $7 ){ goto $label$9 }
	
.LABEL $label$10
	$global$0 = ($6 + [64])
	return 
	
.LABEL $label$9
	if ( (*($7 + [44]) & [1]) ){ goto $label$29 }
	if ( (*($7 + [32]) & [1]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL _ZdlPv(*(($7 + [52])))
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL _ZdlPv(*(($7 + [40])))
	$10 = [1]
	if ( ((*($7 + [20]) & [1]) == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$10 = [1]
	if ( (*($7 + [20]) & [1]) ){ goto $label$25 }
	
.LABEL $label$26
	if ( ((*($7 + [8]) & $10) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$25
	CALL _ZdlPv(*(($7 + [28])))
	if ( ((*($7 + [8]) & $10) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv(*(($7 + [16])))
	
.LABEL $label$23
	CALL _ZdlPv($7)
	$global$0 = ($6 + [64])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $250($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $232(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL _ZdlPv($3)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [8])
	CALL $234($7, *($3))
	$8 = ($1 + [32])
	CALL $234($8, *($3 + [4]))
	$9 = ($1 + [44])
	CALL $234($9, *($3 + [8]))
	*($1 + [80]) = CALL current_time()
	$10 = ($1 + [80])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [21388])
	
.LABEL $label$3
	*($5 + [16]) = [0]
	*($5) = ($5 + [16])
	*($5 + [28]) = $7
	*($5 + [36]) = $8
	*($5 + [40]) = $9
	*($5 + [56]) = $10
	*($5 + [24]) = $1
	$11 = ($1 + [20])
	*($5 + [32]) = $11
	$12 = ($1 + [56])
	*($5 + [44]) = $12
	$13 = ($1 + [64])
	*($5 + [48]) = $13
	$14 = ($1 + [72])
	*($5 + [52]) = $14
	CALL $215(($5 + [24]), $5)
	$15 = *($5 + [16])
	if ( ($15 <= [513]) ){ goto $label$5 }
	$3 = CALL $264($15)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($15 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $15)
	*($5 + [16]) = $5
	*($5 + [28]) = $7
	*($5 + [32]) = $11
	*($5 + [36]) = $8
	*($5 + [40]) = $9
	*($5 + [44]) = $12
	*($5 + [48]) = $13
	*($5 + [52]) = $14
	*($5 + [56]) = $10
	*($5 + [24]) = $1
	CALL $216(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [92]), $2, $3, $15)
	if ( ((uint_32)$15 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $267($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [64])
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [22311])
	
.LABEL $label$5
	$4 = CALL $264($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([104]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = [1]
	*($5 + [88]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [44])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	CALL $213(($3 + [40]), ($3 + [32]))
	*($5 + [92]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $110(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $267($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [44]) & [1]) ){ goto $label$17 }
	if ( (*($1 + [32]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL _ZdlPv(*(($1 + [52])))
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL _ZdlPv(*(($1 + [40])))
	$4 = [1]
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$4 = [1]
	if ( (*($1 + [20]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((*($1 + [8]) & $4) == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL _ZdlPv(*(($1 + [28])))
	if ( ((*($1 + [8]) & $4) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [44]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*(($5 + [52])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*(($5 + [40])))
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((*($5 + [20]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL _ZdlPv(*(($5 + [28])))
	if ( (*($5 + [8]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*(($5 + [16])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$20:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	if ( ((*($8 + [44]) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*(($8 + [52])))
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv(*(($8 + [40])))
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((*($8 + [20]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL _ZdlPv(*(($8 + [28])))
	if ( (*($8 + [8]) & [1]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL _ZdlPv(*(($8 + [16])))
	
.LABEL $label$22
	CALL _ZdlPv($8)
	
.LABEL $label$21
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$20 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [92]))
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = ($1 + [8])
	CALL $234($5, *($3 + [4]))
	$6 = ($1 + [32])
	CALL $234($6, *($3 + [8]))
	$7 = ($1 + [44])
	CALL $234($7, *($3 + [12]))
	*($1 + [72]) = CALL current_time()
	*(($3 = $2) + [16]) = [0]
	*($3) = ($3 + [16])
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	$8 = ($1 + [20])
	*($3 + [32]) = $8
	*($3 + [36]) = $6
	*($3 + [40]) = $7
	$9 = ($1 + [56])
	*($3 + [44]) = $9
	$10 = ($1 + [64])
	*($3 + [48]) = $10
	$11 = ($1 + [72])
	*($3 + [52]) = $11
	$12 = ($1 + [80])
	*($3 + [56]) = $12
	CALL $215(($3 + [24]), $3)
	$13 = *($3 + [16])
	if ( ($13 <= [513]) ){ goto $label$2 }
	$2 = CALL $264($13)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($13 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $13)
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $8
	*($3 + [36]) = $6
	*($3 + [40]) = $7
	*($3 + [44]) = $9
	*($3 + [48]) = $10
	*($3 + [52]) = $11
	*($3 + [56]) = $12
	CALL $216(($3 + [24]), ($3 + [16]))
	$14 = *($1)
	*($1 + [92]) = CALL db_store_i64(*($4 + [8]), (int_64)-4149656938784751616, *(*($0 + [8])), $14, $2, $13)
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$5 }
	if ( ((uint_64)$14 >= (uint_64)*($4 + [16])) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $267($2)
	if ( (uint_64)($14 <= *($4 + [16])) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $231 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $219 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [44]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($3 + [52])))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [16])))
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $186(CALL $185($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $2($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	if ( ((int_32)($4 - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2 + [4]) = ($3 + [8])
	CALL $182($2, $6)
	$global$0 = ($2 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [56])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($8 + [56])))
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [124]))
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $182(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $182(*($1), ($0 + [24]))
	CALL $182(*($1), ($0 + [36]))
	$global$0 = ($2 + [16])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	$5 = *($1 + [280])
	$6 = ( *(($1 + [284])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [273])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [280])
	$8 = ($1 + [8])
	$9 = *($1)
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$3 = CALL $264($5)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $8
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [24])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [48])
	*($4 + [56]) = ($1 + [64])
	*($4 + [60]) = ($1 + [80])
	*($4 + [64]) = ($1 + [88])
	*($4 + [68]) = ($1 + [104])
	*($4 + [72]) = ($1 + [112])
	*($4 + [76]) = ($1 + [120])
	*($4 + [80]) = ($1 + [128])
	*($4 + [84]) = ($1 + [144])
	*($4 + [88]) = ($1 + [160])
	*($4 + [92]) = ($1 + [176])
	*($4 + [96]) = ($1 + [184])
	*($4 + [100]) = ($1 + [200])
	*($4 + [104]) = ($1 + [216])
	*($4 + [112]) = ($1 + [248])
	*($4 + [108]) = ($1 + [232])
	*($4 + [116]) = ($1 + [264])
	*($4 + [120]) = ($1 + [272])
	*($4 + [124]) = $6
	CALL $181(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $3, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $267($3)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [128])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [128])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [22407])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [22452])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [88])
	if ( ((int_64)*(*(($5 + [-24])) + [88]) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10) + [88]) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [22502])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [72]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [80])))
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [72]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($9 + [80])))
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [124]))
	$9 = *(($1 + [128]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4292657617207033856, ($2 + [8]), *(($1 + [88])))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $33 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$global$0 = $3
	$4 = *($0)
	*($3 + [56]) = [17468]
	*($3 + [60]) = CALL $261([17468])
	*($3 + [8]) = *($3 + [56])
	$5 = *(CALL $22(($3 + [64]), ($3 + [8])))
	$6 = *($0)
	*($3 + [40]) = [21109]
	*($3 + [44]) = CALL $261([21109])
	*($3) = *($3 + [40])
	$0 = CALL $22(($3 + [48]), $3)
	*($3 + [16]) = $1
	CALL $232(($3 + [24]), $2)
	*($3 + [72]) = $6
	*($3 + [80]) = *($0)
	*(($0 = CALL _Znwj([16]))) = $4
	*($0 + [8]) = $5
	$2 = ($0 + [16])
	*(($3 + [96])) = $2
	*(($3 + [92])) = $2
	*($3 + [88]) = $0
	CALL $39(($3 + [100]), ($3 + [16]))
	CALL $24(($3 + [72]))
	$0 = *($3 + [100])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($3 + [104])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$0 = *($3 + [88])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($3 + [92])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$2
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($3 + [32])))
	
.LABEL $label$3
	$global$0 = ($3 + [112])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $261($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $239($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $231($0)
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [292]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [21291])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [21337])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)-1)
	$6 = *($1)
	$3 = *(*($3) + [4])
	if ( ((int_64)*(($3 + [24])) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [21721])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [48]) = $7(*($1 + [48]) - *($3 + [16])))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [21769])
	if ( ((int_64)*(($1 + [48])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [21791])
	$3 = [16]
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [16]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [21388])
	
.LABEL $label$4
	$8 = ($1 + $3)
	$3 = *($1 + [280])
	$9 = ( *(($1 + [284])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [273])
	$7 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [280])
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $264($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [88])
	*($5 + [68]) = ($1 + [104])
	*($5 + [72]) = ($1 + [112])
	*($5 + [76]) = ($1 + [120])
	*($5 + [80]) = ($1 + [128])
	*($5 + [84]) = ($1 + [144])
	*($5 + [88]) = ($1 + [160])
	*($5 + [92]) = ($1 + [176])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [216])
	*($5 + [112]) = ($1 + [248])
	*($5 + [108]) = ($1 + [232])
	*($5 + [116]) = ($1 + [264])
	*($5 + [120]) = ($1 + [272])
	*($5 + [124]) = $9
	CALL $181(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [296]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $267($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [128])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [128])
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($3)
	$3 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$3 = *($0)
	$0 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$8 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$8
	*($2) = ($1 + [25])
}

int_32 .FUNC $214 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [52])))
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($1 + [16])))
	
.LABEL $label$4
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	return $0
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $182(*($1), ($3 + [56]))
	$0 = ($3 + [68])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $182(*($1), *($0 + [4]))
	CALL $182(*($1), *($0 + [8]))
	CALL $182(*($1), *($0 + [12]))
	CALL $182(*($1), *($0 + [16]))
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $210 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [76]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [22661])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5003134543285190656)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [22607])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [22607])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $209(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $198 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

void .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $200(*($0 + [12]), $1, [1])
	CALL $182(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $182(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [21202])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $198(*($0 + [12]), $1, [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [21202])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $182(*($1), *($0 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$3 = *($1)
	$4 = *($3 + [4])
	$7 = (int_64)0
	$8 = [0]
	
.LOOP $label$4:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$5 }
	CALL eosio_assert([0], [22339])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	$5 = *($4)
	$9 = ($4 + [1])
	*(($3 + [4])) = $9
	$4 = ($8 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $9
	if ( ($5 & [128]) ){ goto $label$4 }
	*($6) = $7
	$4 = ($6 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $9) > (uint_32)[32]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$9 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $9, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	$9 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($9, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($9 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$9 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($9, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $3, [8])
	*($9 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $163(*($1), *($0 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $163(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [22334])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	$7 = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$8 = *($0 + [12])
	$3 = *($1)
	$4 = *($3 + [4])
	$9 = [0]
	
.LOOP $label$5:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [22339])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	$5 = *($4)
	$6 = ($4 + [1])
	*(($3 + [4])) = $6
	$4 = ($9 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$9 = ($4 + [7])
	$4 = $6
	if ( ($5 & [128]) ){ goto $label$5 }
	*($8) = $7
	$4 = ($8 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $6) > (uint_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$6 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $6, [33])
	*(($4 = ($3 + [4]))) = (*($4) + [33])
	CALL $163(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$17 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$18
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$19
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$20 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$20
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$21 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$21
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$22 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$22
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$23 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$23
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$24 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$24
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$25 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$25
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [68])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$26 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$26
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$27 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$27
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [72])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$28 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$28
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$29 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$29
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [76])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$30 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$30
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$31 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$31
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$32 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$32
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$33 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$33
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [84])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$34 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$34
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [88])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$35 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$35
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $163(*($1), *($0 + [92]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [22339])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $2($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22334])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22334])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [22334])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}