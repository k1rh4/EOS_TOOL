(data (i32.const 8192) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 8256) "transfer\00")
(data (i32.const 8265) "eosio.token\00")
(data (i32.const 8277) "eosio_token_transfer\00")
(data (i32.const 8298) "playeroneiss\00")
(data (i32.const 8311) "game_token_transfer\00")
(data (i32.const 8331) "action from this code is denied\00")
(data (i32.const 8363) "playeronefee\00")
(data (i32.const 8376) "error reading iterator\00")
(data (i32.const 8399) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 8448) "invalid symbol name\00")
(data (i32.const 8468) "read\00")
(data (i32.const 8473) "cannot create objects in table of another contract\00")
(data (i32.const 8524) "write\00")
(data (i32.const 8530) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8581) "invalid token transfer\00")
(data (i32.const 8604) "unexpected asset symbol input\00")
(data (i32.const 8634) "\e9\82\80\e8\af\b7\e6\82\a8\e5\8f\82\e4\b8\8e\e5\a4\b4\e5\8f\b7\e7\8e\a9\e5\ae\b6\ef\bc\8c\e9\80\9a\e8\bf\87\e9\82\80\e8\af\b7\e7\a0\81\e6\b3\a8\e5\86\8c\e6\9c\89\e6\9c\ba\e4\bc\9a\e5\87\8f\e5\b0\91\e4\b8\80\e5\8d\8a\e7\9a\84\e6\89\8b\e7\bb\ad\e8\b4\b9\e3\80\82\e7\bd\91\e5\9d\80: http://eosplayer.one/#/?ref=\00")
(data (i32.const 8758) "deposit\00")
(data (i32.const 8766) "reward\00")
(data (i32.const 8773) "1d\00")
(data (i32.const 8776) "4d\00")
(data (i32.const 8779) "7d\00")
(data (i32.const 8782) "\e7\a7\9f\e7\94\a8CPU\e7\9a\84EOS\e5\8c\ba\e9\97\b4\e6\98\af 0.01 - 1 EOS\00")
(data (i32.const 8820) "eosiocpubank\00")
(data (i32.const 8833) " \00")
(data (i32.const 8835) "\e6\b8\b8\e6\88\8f\e5\bc\80\e5\a7\8b\e6\97\b6\e9\97\b4\e6\98\af2018/8/31 20:8:8\00")
(data (i32.const 8873) "\e9\a2\84\e5\94\ae\e9\a2\9d\e5\a4\96\e4\bb\bd\e9\a2\9d\e4\b8\8d\e8\b6\b3\ef\bc\8c\e8\af\b7\e5\8d\95\e6\ac\a1\e8\b4\ad\e4\b9\b0 1 - 10 EOS\00")
(data (i32.const 8927) "\e9\a2\84\e5\94\ae\e9\98\b6\e6\ae\b5\e4\b8\8d\e8\83\bd\e5\a4\9f\e9\94\80\e6\af\81\e3\80\81\e6\8a\b5\e6\8a\bc\e3\80\81\e5\87\ba\e5\94\aeCGT\00")
(data (i32.const 8976) "burn\00")
(data (i32.const 8981) "stake\00")
(data (i32.const 8987) "\e4\b8\8d\e8\a6\81\e8\bd\ac\e5\85\a5\e5\85\b6\e4\bb\96\e4\bb\a3\e5\b8\81\e8\b5\84\e4\ba\a7\00")
(data (i32.const 9018) "shit happens\00")
(data (i32.const 9031) "\e8\8e\b7\e5\be\97\e9\82\80\e8\af\b7\e5\a5\96\e5\8a\b1\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 9082) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9141) "cannot pass end iterator to modify\00")
(data (i32.const 9176) "object passed to modify is not in multi_index\00")
(data (i32.const 9222) "cannot modify objects in table of another contract\00")
(data (i32.const 9273) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9332) "x$\00\00")
(data (i32.const 9336) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 9369) "only player one can claim the reward\00")
(data (i32.const 9406) "\e5\a4\b4\e5\8f\b7\e5\a5\96\e5\8a\b1\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 9451) "can only unstake player one\'s token\00")
(data (i32.const 9487) "blackholeeos\00")
(data (i32.const 9500) "\e8\a7\a3\e9\99\a4\e6\8a\b5\e6\8a\bc\e5\b0\86\e6\8d\9f\e5\a4\b1\e7\99\be\e5\88\86\e4\b9\8b\e5\8d\81\e7\9a\84\e6\8a\b5\e6\8a\bcCGT\00")
(data (i32.const 9546) "\e5\8f\af\e8\83\bd\e6\9c\89\e5\85\b6\e4\bb\96\e7\8e\a9\e5\ae\b6\e6\8a\b5\e6\8a\bc\e8\b6\85\e8\b6\8a\e4\ba\86\e6\82\a8\ef\bc\8c\e6\82\a8\e5\b7\b2\e7\bb\8f\e4\b8\8d\e5\86\8d\e6\98\af\e5\a4\b4\e5\8f\b7\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 9645) "\e6\8a\b5\e6\8a\bcCGT\e5\a4\aa\e5\b0\91\ef\bc\8c\e5\b0\86\e5\85\a8\e9\83\a8\e6\8d\9f\e5\a4\b1\00")
(data (i32.const 9679) "divide by zero\00")
(data (i32.const 9694) "signed division overflow\00")
(data (i32.const 9719) "attempt to add asset with different symbol\00")
(data (i32.const 9762) "addition underflow\00")
(data (i32.const 9781) "addition overflow\00")
(data (i32.const 9800) "cannot pass end iterator to erase\00")
(data (i32.const 9834) "cannot increment end iterator\00")
(data (i32.const 9864) "object passed to erase is not in multi_index\00")
(data (i32.const 9909) "cannot erase objects in table of another contract\00")
(data (i32.const 9959) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10012) "attempt to subtract asset with different symbol\00")
(data (i32.const 10060) "subtraction underflow\00")
(data (i32.const 10082) "subtraction overflow\00")
(data (i32.const 10103) "\e4\b9\b0\e5\85\a5CGT\e5\8c\ba\e9\97\b4\e4\b8\ba 1 - 100 EOS\00")
(data (i32.const 10134) "\e6\93\8d\e4\bd\9c\e5\a4\aa\e9\a2\91\e7\b9\81\ef\bc\8c\e9\9c\80\e8\a6\81\e6\97\b6\e9\97\b4\e5\86\b7\e5\8d\b4\00")
(data (i32.const 10171) "invalid token price\00")
(data (i32.const 10191) "insufficient token balance\00")
(data (i32.const 10218) "invalid eos refund\00")
(data (i32.const 10237) "eos deposit or insure must be positive\00")
(data (i32.const 10276) "transfer and issue token should not be negetive\00")
(data (i32.const 10324) "eos not equal\00")
(data (i32.const 10338) "transfer and issue token must in range 1 - 10000\00")
(data (i32.const 10387) "\e8\b4\ad\e4\b9\b0CGT\ef\bc\8c\e6\84\9f\e8\b0\a2\e6\82\a8\e6\94\af\e6\8c\81\e5\a4\b4\e5\8f\b7\e7\8e\a9\e5\ae\b6\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 10459) "\e5\8f\91\e8\a1\8c\e6\96\b0CGT\ef\bc\8c\e6\84\9f\e8\b0\a2\e6\82\a8\e6\94\af\e6\8c\81\e5\a4\b4\e5\8f\b7\e7\8e\a9\e5\ae\b6\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 10534) "\e9\94\80\e6\af\81CGT\e7\9a\84\e5\8c\ba\e9\97\b4\e4\b8\ba 1 - 10000 CGT\00")
(data (i32.const 10570) "\e9\94\80\e6\af\81CGT\e7\9a\84\e5\8c\ba\e9\97\b4\e4\b8\ba 1 - 100 EOS\00")
(data (i32.const 10604) "insufficient insure eos\00")
(data (i32.const 10628) "\e9\94\80\e6\af\81CGT\e5\88\b0\e9\bb\91\e6\b4\9e\e8\b4\a6\e5\8f\b7\00")
(data (i32.const 10653) "\e9\94\80\e6\af\81CGT\e8\8e\b7\e5\be\97EOS\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 10704) "\e9\9c\80\e8\a6\81\e6\8a\b5\e6\8a\bc\e6\9b\b4\e5\a4\9a\e7\9a\84CGT\e6\89\8d\e8\83\bd\e8\b6\85\e8\b6\8a\e5\bd\93\e5\89\8d\e7\9a\84\e5\a4\b4\e5\8f\b7\00")
(data (i32.const 10756) "\e5\8d\96\e5\87\baCGT\e5\8c\ba\e9\97\b4\e4\b8\ba 1 - 10000 CGT\00")
(data (i32.const 10789) "insufficient reserve eos\00")
(data (i32.const 10814) "\e5\8d\96\e5\87\baCGT\e5\8c\ba\e9\97\b4\e4\b8\ba 1 - 100 EOS\00")
(data (i32.const 10845) "remain asset is invalid\00")
(data (i32.const 10869) "exchange asset is not equal\00")
(data (i32.const 10897) "\e9\80\80\e5\9b\9e\e5\a4\9a\e4\bd\99\e7\9a\84CGT\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 10948) "\e5\8d\96\e5\87\baCGT\e8\8e\b7\e5\be\97EOS\e3\80\82 \e7\bd\91\e5\9d\80: http://eosplayer.one\00")
(data (i32.const 10999) "get\00")
(data (i32.const 19424) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 19440) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 19456) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 19472) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$3 (result i32)))
(import "env" "read_action_data" (func $fimport$4 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$5 (param i64)))
(import "env" "current_receiver" (func $fimport$6 (result i64)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$9 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$10 (result i64)))
(import "env" "send_inline" (func $fimport$11 (param i32 i32)))
(import "env" "memset" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "db_next_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "abort" (func $fimport$16))
(import "env" "memmove" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "__unordtf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$20 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$21 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$22 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$24 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$25 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$27 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$28 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$29 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$30 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$32 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$34 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$35 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$36 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $1))
(export "_ZdlPv" (func $100))
(export "_Znwj" (func $98))
(export "_Znaj" (func $99))
(export "_ZdaPv" (func $101))
(table $0 3 3 anyfunc)
(elem (i32.const 1) $3 $5)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 19558))
(global $global$2 i32 (i32.const 19558))


int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $117($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11004])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $117($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = *($0)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [32]))), [10012])
	$3 = (int_64)
	*($1 + [24]) = $3(*($1 + [24]) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [10082])
	$2 = *($0 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [64]))), [10012])
	$3 = (int_64)
	*($1 + [56]) = $3(*($1 + [56]) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [10082])
	$2 = *($0 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [96]))), [10012])
	$3 = (int_64)
	*($1 + [88]) = $3(*($1 + [88]) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [10082])
	$0 = *($0 + [4])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [112]))), [9719])
	$3 = ((int_64)*($1 + [104]) + (int_64)*($0))
	*($1 + [104]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [9781])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = *($0)
	$3 = *($2)
	$4 = *($2 + [8])
	CALL eosio_assert([1], [9679])
	CALL eosio_assert([1], [9694])
	CALL eosio_assert(((int_64)$4 == (int_64)*(($1 + [32]))), [9719])
	$3 = ((int_64)*($1 + [24]) + (int_64)((int_64)$3 / (int_64)2))
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	$2 = *($0)
	$3 = *($2)
	$4 = *($2 + [8])
	$0 = *($0 + [4])
	CALL eosio_assert([1], [9679])
	CALL eosio_assert([1], [9694])
	$5 = *($0)
	$6 = *($0 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$6), [10012])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($5 - ((int_64)$3 / (int_64)2))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$6 == (int_64)*(($1 + [160]))), [9719])
	$3 = ((int_64)*($1 + [152]) + (int_64)$3)
	*($1 + [152]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [9781])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $97($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $106($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $106($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $102($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [10999])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $48($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [8468])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

void .FUNC $90 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [144]))), [9719])
	$6 = ((int_64)*($1 + [136]) + (int_64)*($3))
	*($1 + [136]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [136]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [9719])
	$6 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [9719])
	$6 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = *($0)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))), [9719])
	$3 = ((int_64)*($1 + [8]) + (int_64)*($2))
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [9781])
	$2 = *($0 + [8])
	$3 = *($2)
	$4 = *($2 + [8])
	$2 = *($0 + [4])
	CALL eosio_assert([1], [9679])
	CALL eosio_assert([1], [9694])
	$5 = *($2)
	$6 = *($2 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$6), [9719])
	$3 = ((int_64)$5 + (int_64)((int_64)$3 / (int_64)2))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$6 == (int_64)*(($1 + [32]))), [9719])
	$3 = ((int_64)*($1 + [24]) + (int_64)$3)
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	$2 = *($0 + [8])
	$3 = *($2)
	$4 = *($2 + [8])
	$2 = *($0 + [12])
	CALL eosio_assert([1], [9679])
	CALL eosio_assert([1], [9694])
	$5 = *($2)
	$6 = *($2 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$6), [10012])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($5 - ((int_64)$3 / (int_64)2))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$6 == (int_64)*(($1 + [160]))), [9719])
	$3 = ((int_64)*($1 + [152]) + (int_64)$3)
	*($1 + [152]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [9781])
	$2 = *($0 + [16])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [64]))), [9719])
	$3 = ((int_64)*($1 + [56]) + (int_64)*($2))
	*($1 + [56]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [9781])
	$2 = *($0 + [20])
	*($1 + [72]) = *($2)
	*(($1 + [80])) = *(($2 + [8]))
	$0 = *($0 + [24])
	*($1 + [88]) = *($0)
	*(($1 + [96])) = *(($0 + [8]))
}

int_32 .FUNC $115 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $120 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [19400])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [19208]
	$3 = (((int_32)$1 * (int_32)[12]) + [19208])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8376])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$5 }
	$2 = CALL $117($4)
	CALL db_get_i64($1, $2, $4)
	CALL $120($2)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	CALL db_get_i64($1, $2, $4)
	
.LABEL $label$4
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8468])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [8468])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $51(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8524])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8524])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [8524])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $70(*($1), ($0 + [32]))
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $109($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [56]) = (int_64))(*($1 + [56]) - ((int_64)*(*($3 + [4])) / (int_64)*(*($3) + [88])))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)1)
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([80])
	CALL $52($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $20(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)-1)
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [144]))), [10012])
	$6 = (int_64)
	*($1 + [136]) = $6(*($1 + [136]) - *($3)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [136]) < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$6 = *($1)
	CALL eosio_assert([1], [8399])
	$7 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$10 = [1]
	$11 = $8
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$10 = [1]
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [8448])
	*(($1 + [32])) = (int_64)1397703940
	*($1 + [24]) = (int_64)0
	CALL eosio_assert(((int_64)$6 == (int_64)*($1)), [9273])
	$10 = $4
	$8 = ($10 + [-80])
	$global$0 = $8
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($10 + [-12])
	CALL $26($5, $1)
	CALL db_update_i64(*($1 + [72]), $2, $8, [68])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($5 + [16])
}

void .FUNC $45 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [192])
	$global$0 = $2
	$3 = ($0 + [112])
	$4 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $7($3, $5)
	
.LABEL $label$1
	*(($2 + [168])) = [0]
	*($2 + [152]) = (int_64)-1
	*($2 + [160]) = (int_64)0
	$6 = *($0)
	*($2 + [136]) = $6
	*($2 + [144]) = $1
	$5 = CALL db_find_i64($6, $1, (int_64)-3020376800539705344, *($4))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $9(($2 + [136]), $5)
	CALL eosio_assert(((int_32)*($7 + [68]) == (int_32)($2 + [136])), [8530])
	$8 = *($0 + [88])
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$9 = ($7 + [24])
	$1 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$1 = $6
	$10 = [1]
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$1 = $6
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$8 }
	$10 = [1]
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$10 = [0]
	
.LABEL $label$4
	CALL eosio_assert($10, [8448])
	CALL eosio_assert(((int_64)*(($7 + [32])) == (int_64)1397703940), [9082])
	if ( ((int_64)*($7 + [24]) < (int_64)$8) ){ goto $label$3 }
	*((($2 + [120]) + [8])) = *(($9 + [8]))
	*($2 + [120]) = *($9)
	$1 = *($0)
	CALL eosio_assert([1], [9141])
	CALL $46(($2 + [136]), $7, $1, ($2 + [16]))
	$1 = *($0)
	*($2 + [16]) = ($2 + [120])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9141])
	CALL $47($3, $4, $1, ($2 + [16]))
	CALL eosio_assert([1], [8399])
	$1 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$1 = $6
	$10 = [1]
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$1 = $6
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$13 }
	$10 = [1]
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	CALL eosio_assert($10, [8448])
	CALL eosio_assert(((int_64)*(($4 + [144])) == (int_64)1397703940), [9082])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [136]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$6 = *($0)
	$1 = (int_64)6
	
.LOOP $label$14:
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$14 }
	*($2 + [72]) = (int_64)3617214756542218240
	*($2 + [64]) = $6
	$1 = (int_64)0
	$8 = (int_64)59
	$5 = [8265]
	$12 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$20 }
	$10 = *($5)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$10 = ($10 + [-91])
	goto $label$18 
	
.LABEL $label$20
	$6 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$6 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$6 = ((int_64)((int_64)$6 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$16
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)4294967291)
	$12 = ((int_64)$6 | (int_64)$12)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$15 }
	$1 = (int_64)0
	$8 = (int_64)59
	$5 = [8256]
	$13 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$26 }
	$10 = *($5)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$10 = ($10 + [-91])
	goto $label$24 
	
.LABEL $label$26
	$6 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$6 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$6 = ((int_64)((int_64)$6 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$22
	$5 = ($5 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$6 | (int_64)$13)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$21 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$5 = CALL $116([9031])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$29 }
	*($2) = ($5 << [1])
	$10 = ($2 | [1])
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$11 = (($5 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($2) = ($11 | [1])
	*($2 + [8]) = $10
	*($2 + [4]) = $5
	
.LABEL $label$28
	CALL memcpy($10, [9031], $5)
	
.LABEL $label$27
	*(($10 + $5)) = [0]
	$1 = *(($7 + [8]))
	*(($2 + [40])) = *((($2 + [120]) + [8]))
	$5 = ($2 + [8])
	*(($2 + [56])) = *($5)
	*($5) = [0]
	*($2 + [16]) = *($0)
	$6 = *($2)
	*($2) = (int_64)0
	*($2 + [32]) = *($2 + [120])
	*($2 + [48]) = $6
	*($2 + [24]) = $1
	$5 = CALL $33(($2 + [80]), ($2 + [64]), $12, $13, ($2 + [16]))
	CALL $34(($2 + [176]), $5)
	$10 = *($2 + [176])
	CALL send_inline($10, (*($2 + [180]) - $10))
	$10 = *($2 + [176])
	if ( ($10 == 0) ){ goto $label$30 }
	*($2 + [180]) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$30
	$10 = *($5 + [28])
	if ( ($10 == 0) ){ goto $label$31 }
	*(($5 + [32])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$31
	$10 = *($5 + [16])
	if ( ($10 == 0) ){ goto $label$32 }
	*(($5 + [20])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$32
	if ( ((*(($2 + [48])) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*(($2 + [56])))
	
.LABEL $label$33
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($2 + [8])))
	
.LABEL $label$3
	$11 = *($2 + [160])
	if ( ($11 == 0) ){ goto $label$34 }
	$0 = ($2 + [164])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$36 }
	
.LOOP $label$37:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$38 }
	CALL _ZdlPv($10)
	
.LABEL $label$38
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$37 }
	$5 = *(($2 + [160]))
	goto $label$35 
	
.LABEL $label$36
	$5 = $11
	
.LABEL $label$35
	*($0) = $11
	CALL _ZdlPv($5)
	
.LABEL $label$34
	$global$0 = ($2 + [192])
	return (unreachable)
	
.LABEL $label$2
	CALL $102($2)
}

void .FUNC $44 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_64 $35
	int_32 $36
	float_64 $37
	float_64 $38
	float_64 $39
	int_64 $40
	float_64 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_64 $45
	$4 = ($global$0 - [368])
	$global$0 = $4
	$6 = *($0 + [88])
	$5 = *($2)
	CALL eosio_assert((((int_64)$5 >= (int_64)$6) & ((int_64)$5 <= (int_64)((int_64)$6 * (int_64)100))), [10103])
	$7 = *($0 + [88])
	$8 = ((int_64)$7 * (int_64)20)
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$9 = [0]
	$6 = (int_64)5459781
	$10 = (int_64)1397703940
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$5 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)$7 != (int_64)0), [9679])
	$14 = *($2 + [8])
	CALL eosio_assert(((int_64)$14 == (int_64)1397703940), [9082])
	*($4 + [344]) = (int_64)1397703940
	*($4 + [336]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$15 = ((int_64)$5 / (int_64)$8)
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $11
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$10 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$12 = [0]
	
.LABEL $label$6
	CALL eosio_assert($12, [8448])
	*($4 + [328]) = (int_64)1397703940
	*($4 + [320]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$6 = $11
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$15 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$12 = [0]
	
.LABEL $label$11
	CALL eosio_assert($12, [8448])
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$6 = $11
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$20 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$12 = [0]
	
.LABEL $label$16
	CALL eosio_assert($12, [8448])
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$6 = $11
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$25 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$12 = [0]
	
.LABEL $label$21
	CALL eosio_assert($12, [8448])
	$16 = ($0 + [112])
	$17 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$26 }
	$17 = CALL $7($16, $9)
	
.LABEL $label$26
	*(($4 + [312])) = [0]
	*($4 + [296]) = (int_64)-1
	*($4 + [304]) = (int_64)0
	$6 = *($0)
	*($4 + [280]) = $6
	*($4 + [288]) = $1
	$9 = CALL db_find_i64($6, $1, (int_64)-3020376800539705344, *($17))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	$18 = CALL $9(($4 + [280]), $9)
	CALL eosio_assert(((int_32)*($18 + [68]) == (int_32)($4 + [280])), [8530])
	$6 = CALL current_time()
	$11 = *($18 + [40])
	$7 = *($0 + [72])
	$6 = ((int_64)((uint_64)$6 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($4 + [32]) = $6
	CALL eosio_assert(((uint_64)((int_64)$7 + (int_64)$11) <= (uint_64)$6), [10134])
	$6 = *($4 + [32])
	if ( ((uint_64)$6 >= (uint_64)*($0 + [64])) ){ goto $label$29 }
	*($4 + [32]) = ((int_64)((uint_64)(int_64)225 / (uint_64)(int_64))(((int_64)$6 + (int_64)1) - *(($18 + [40])))) + (int_64)$6)
	
.LABEL $label$29
	$6 = *($0)
	*($4 + [96]) = ($4 + [32])
	CALL eosio_assert([1], [9141])
	CALL $65(($4 + [280]), $18, $6, ($4 + [96]))
	goto $label$27 
	
.LABEL $label$28
	$9 = CALL $103(($4 + [264]), $3)
	CALL $57($0, $1, $9, *($0))
	if ( ((*($9) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($9 + [8]))
	
.LABEL $label$30
	$6 = *($17)
	$12 = *(($4 + [308]))
	$13 = *(($4 + [304]))
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$31 }
	
.LOOP $label$33:
	$9 = ($12 + [-24])
	$18 = *($9)
	if ( ((int_64)*($18) == (int_64)$6) ){ goto $label$32 }
	$12 = $9
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$31 }
	CALL eosio_assert(((int_32)*($18 + [68]) == (int_32)($4 + [280])), [8530])
	goto $label$27 
	
.LABEL $label$31
	$18 = [0]
	$9 = CALL db_find_i64(*($4 + [280]), *(($4 + [288])), (int_64)-3020376800539705344, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$27 }
	$18 = CALL $9(($4 + [280]), $9)
	CALL eosio_assert(((int_32)*($18 + [68]) == (int_32)($4 + [280])), [8530])
	
.LABEL $label$27
	$6 = *(($2 + [8]))
	*(($9 = (($4 + [248]) + [8]))) = $6
	*($4 + [248]) = ((int_64)((int_64)*($2) + (int_64)99) / (int_64)100)
	CALL eosio_assert(((int_64)$6 == (int_64)$14), [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($5 - *($4 + [248]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	$11 = *($9)
	*((($4 + [232]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [248])
	*($4) = $11
	*($4 + [232]) = $11
	CALL $66($0, $1, $4)
	$12 = *($18 + [64])
	*($4 + [248]) = ((int_64)((int_64)$6 + (int_64)( (int_64)99 ? (int_64)49 : $12 )) / (int_64)( (int_64)100 ? (int_64)50 : $12 ))
	$11 = *($9)
	*((($4 + [216]) + [8])) = $11
	*($4 + [216]) = *($4 + [248])
	CALL eosio_assert(((int_64)$11 == (int_64)$14), [10012])
	$19 = (int_64)
	CALL eosio_assert(((int_64)$19($6 - *($4 + [248]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = $11
	
.LOOP $label$38:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$35 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$38 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$12 = [0]
	
.LABEL $label$34
	CALL eosio_assert($12, [8448])
	*($4 + [208]) = (int_64)1413956356
	*($4 + [200]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$6 = (uint_64)*($4 + [208]) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$42 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$42
	$6 = $11
	
.LOOP $label$43:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$43 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$12 = [0]
	
.LABEL $label$39
	CALL eosio_assert($12, [8448])
	$20 = *(($17 + [16]))
	$21 = *($17 + [8])
	*(($9 = (($4 + [184]) + [8]))) = *(($17 + [64]))
	*($4 + [184]) = *($17 + [56])
	$23 = ($17 + [80])
	*(($22 = (($4 + [168]) + [8]))) = *($23)
	*($4 + [168]) = *($17 + [72])
	$6 = *($9)
	*(($24 = (($4 + [152]) + [8]))) = $6
	*($4 + [152]) = *($4 + [184])
	CALL eosio_assert(((int_64)$6 == (int_64)*($22)), [10012])
	$6 = (int_64)
	*($4 + [152]) = $6(*($4 + [152]) - *($4 + [168])))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	$25 = (int_64)0
	$5 = $19
	$26 = (int_64)0
	$27 = (int_64)0
	if ( ((int_64)$15 < (int_64)0) ){ goto $label$44 }
	$28 = ((int_64)$20 == (int_64)1397703940)
	$29 = ((int_64)1397703940 == (int_64)1397703940)
	$30 = ((int_64)1413956356 == (int_64)1413956356)
	$31 = ((int_64)$14 == (int_64)1397703940)
	$3 = ($0 + [88])
	$32 = ($0 + [16])
	$33 = ($0 + [32])
	$34 = ($0 + [40])
	$6 = (int_64)0
	$27 = (int_64)0
	$26 = (int_64)0
	$5 = $19
	$25 = (int_64)0
	
.LOOP $label$45:
	$35 = $6
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$50 }
	$6 = $11
	$2 = [1]
	$12 = $9
	$9 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$6 = $11
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$51 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$52 }
	$2 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$2 = [0]
	
.LABEL $label$48
	CALL eosio_assert($2, [8448])
	CALL eosio_assert($31, [9082])
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$44 }
	goto $label$46 
	
.LABEL $label$47
	CALL eosio_assert([0], [8448])
	CALL eosio_assert($31, [9082])
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$44 }
	
.LABEL $label$46
	CALL eosio_assert(((int_64)$10 == (int_64)$14), [9082])
	$7 = ((int_64)*($3) * (int_64)100000)
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$9 = ((int_64)$8 > (int_64)$5)
	$10 = ( $14 ? $10 : $9 )
	$8 = ( $5 ? $8 : $9 )
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$55:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$54 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$56 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$56
	$6 = $11
	
.LOOP $label$57:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$54 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$57 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$54
	$12 = [0]
	
.LABEL $label$53
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*($24) == (int_64)1413956356), [9082])
	$6 = *($4 + [152])
	if ( ((int_64)$6 <= (int_64)$7) ){ goto $label$60 }
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$64 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$64
	$6 = $11
	
.LOOP $label$65:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$65 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	$12 = [0]
	
.LABEL $label$61
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*($22) == (int_64)1413956356), [9082])
	$6 = *($4 + [152])
	if ( ((int_64)*($4 + [168]) <= (int_64)0) ){ goto $label$60 }
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$2 = ($0 + [8])
	$11 = *($2)
	$7 = *($32)
	$38 = (CASTING float_64)(int_64 $11)
	$37 = (CASTING float_64)(int_64 $7)
	$36 = ($0 + [24])
	$39 = ((float_64)((float_64)((float_64)(float_64)1 / (float_64)((float_64)CALL $112((float_64)2.71828182845904, ((float_64)(float_64))(((float_64)(CASTING float_64)(int_64 $6) / (float_64)(CASTING float_64)(int_64 *($3))) - (CASTING float_64)(int_64 *($36))) / (float_64)(CASTING float_64)(int_64 *($33)))) + (float_64)(float_64)1)) * (float_64)$37) + (float_64)$38
	CALL eosio_assert((((float_64)$39) <= (float_64)((float_64)$37 + (float_64)$38)) & ((float_64)$39 >= (float_64)$38)), [9018])
	$37 = (CASTING float_64)(int_64 $8)
	$38 = ((float_64)$37 / (float_64)((float_64)(CASTING float_64)(int_64 $21) / (float_64)((float_64)((float_64)$39 / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 *($4 + [152])))))
	if ( ((float_64)(float_64)|$38| < (float_64)(float_64)9223372036854775808) ){ goto $label$59 }
	$7 = (int_64)-9223372036854775808
	goto $label$58 
	
.LABEL $label$60
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$11 = *(($0 + [8]))
	$7 = *($32)
	$38 = (CASTING float_64)(int_64 $11)
	$37 = (CASTING float_64)(int_64 $7)
	$39 = ((float_64)((float_64)((float_64)(float_64)1 / (float_64)((float_64)CALL $112((float_64)2.71828182845904, ((float_64)(float_64))(((float_64)(CASTING float_64)(int_64 $6) / (float_64)(CASTING float_64)(int_64 *($3))) - (CASTING float_64)(int_64 *(($0 + [24])))) / (float_64)(CASTING float_64)(int_64 *($33)))) + (float_64)(float_64)1)) * (float_64)$37) + (float_64)$38
	CALL eosio_assert((((float_64)$39) <= (float_64)((float_64)$37 + (float_64)$38)) & ((float_64)$39 >= (float_64)$38)), [9018])
	$38 = ((float_64)((float_64)$39 / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 $8))
	if ( ((float_64)(float_64)|$38| < (float_64)(float_64)9223372036854775808) ){ goto $label$67 }
	$7 = (int_64)-9223372036854775808
	goto $label$66 
	
.LABEL $label$67
	$7 = (Rounds 0)($38)
	
.LABEL $label$66
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (uint_64)$10 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$71 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$71
	$6 = $11
	
.LOOP $label$72:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$69 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$72 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$12 = [0]
	
.LABEL $label$68
	CALL eosio_assert($12, [8448])
	$38 = ((float_64)(CASTING float_64)(int_64 $7) / (float_64)((float_64)(CASTING float_64)(int_64 *($34)) / (float_64)(CASTING float_64)(int_64 *($3))))
	if ( ((float_64)(float_64)|$38| < (float_64)(float_64)9223372036854775808) ){ goto $label$74 }
	$40 = (int_64)-9223372036854775808
	goto $label$73 
	
.LABEL $label$74
	$40 = (Rounds 0)($38)
	
.LABEL $label$73
	CALL eosio_assert((uint_64)(((int_64)$40 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$77:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$76 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$78 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$78
	$6 = $11
	
.LOOP $label$79:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$76 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$79 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$76
	$12 = [0]
	
.LABEL $label$75
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*($24) == (int_64)1413956356), [9719])
	$6 = ((int_64)*($4 + [152]) + (int_64)$40)
	*($4 + [152]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [152]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)*((($4 + [200]) + [8])) == (int_64)1413956356), [9719])
	$6 = ((int_64)*($4 + [200]) + (int_64)$40)
	*($4 + [200]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [200]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)*((($4 + [336]) + [8]))), [9719])
	$6 = ((int_64)*($4 + [336]) + (int_64)$7)
	*($4 + [336]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [336]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert([1], [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($8 - $7)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$10 == (int_64)*((($4 + [320]) + [8]))), [9719])
	$6 = ((int_64)*($4 + [320]) + (int_64)$6)
	*($4 + [320]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [320]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)$14), [10012])
	$5 = (int_64)
	CALL eosio_assert(((int_64)$5($5 - $8)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$10 == (int_64)1397703940), [9719])
	$26 = ((int_64)$8 + (int_64)$26)
	CALL eosio_assert(((int_64)$26 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$26 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)$20), [9719])
	$21 = ((int_64)$21 + (int_64)$7)
	CALL eosio_assert(((int_64)$21 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$21 < (int_64)4611686018427387904), [9781])
	$6 = ((int_64)$35 + (int_64)1)
	if ( ((int_64)$35 < (int_64)$15) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$59
	$7 = (Rounds 0)($38)
	
.LABEL $label$58
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$82:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$81 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$83 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$83
	$6 = $11
	
.LOOP $label$84:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$81 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$84 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$81
	$12 = [0]
	
.LABEL $label$80
	CALL eosio_assert($12, [8448])
	$6 = *($4 + [152])
	CALL eosio_assert(((int_64)*($24) == (int_64)1413956356), [9719])
	$6 = ((int_64)$6 + (int_64)$7)
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$11 = *($2)
	$7 = *($32)
	$38 = (CASTING float_64)(int_64 $11)
	$41 = (CASTING float_64)(int_64 $7)
	$39 = ((float_64)((float_64)((float_64)(float_64)1 / (float_64)((float_64)CALL $112((float_64)2.71828182845904, ((float_64)(float_64))(((float_64)(CASTING float_64)(int_64 $6) / (float_64)(CASTING float_64)(int_64 *($3))) - (CASTING float_64)(int_64 *($36))) / (float_64)(CASTING float_64)(int_64 *($33)))) + (float_64)(float_64)1)) * (float_64)$41) + (float_64)$38
	CALL eosio_assert((((float_64)$39) <= (float_64)((float_64)$41 + (float_64)$38)) & ((float_64)$39 >= (float_64)$38)), [9018])
	$42 = ((int_64)$10 == (int_64)$20)
	CALL eosio_assert($42, [9719])
	$40 = ((int_64)$8 + (int_64)$21)
	$43 = ((int_64)$40 > (int_64)-4611686018427387904)
	CALL eosio_assert($43, [9762])
	$44 = ((int_64)$40 < (int_64)4611686018427387904)
	CALL eosio_assert($44, [9781])
	$41 = (CASTING float_64)(int_64 $40)
	$38 = ((float_64)$41 / (float_64)((float_64)((float_64)$39 / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 *($4 + [152]))))
	$39 = ((float_64)$37 / (float_64)$38)
	if ( ((float_64)(float_64)|$39| < (float_64)(float_64)9223372036854775808) ){ goto $label$86 }
	$7 = (int_64)-9223372036854775808
	goto $label$85 
	
.LABEL $label$86
	$7 = (Rounds 0)($39)
	
.LABEL $label$85
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$89:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$88 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$90 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$90
	$6 = $11
	
.LOOP $label$91:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$88 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$91 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$88
	$12 = [0]
	
.LABEL $label$87
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*($22) == (int_64)1413956356), [9082])
	$6 = *($4 + [168])
	if ( ((int_64)$6 >= (int_64)$7) ){ goto $label$95 }
	$7 = *($4 + [152])
	$11 = *($22)
	CALL eosio_assert(((int_64)$11 == (int_64)*($24)), [9719])
	$7 = ((int_64)$7 + (int_64)$6)
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$40 = *($2)
	$45 = *($32)
	$38 = (CASTING float_64)(int_64 $40)
	$37 = (CASTING float_64)(int_64 $45)
	$39 = ((float_64)((float_64)((float_64)(float_64)1 / (float_64)((float_64)CALL $112((float_64)2.71828182845904, ((float_64)(float_64))(((float_64)(CASTING float_64)(int_64 $7) / (float_64)(CASTING float_64)(int_64 *($3))) - (CASTING float_64)(int_64 *($36))) / (float_64)(CASTING float_64)(int_64 *($33)))) + (float_64)(float_64)1)) * (float_64)$37) + (float_64)$38
	CALL eosio_assert((((float_64)$39) <= (float_64)((float_64)$37 + (float_64)$38)) & ((float_64)$39 >= (float_64)$38)), [9018])
	CALL eosio_assert($42, [9719])
	CALL eosio_assert($43, [9762])
	CALL eosio_assert($44, [9781])
	$7 = *($4 + [152])
	CALL eosio_assert(((int_64)$11 == (int_64)*($24)), [9719])
	$40 = ((int_64)*($4 + [152]) + (int_64)$6)
	*($4 + [152]) = $40
	CALL eosio_assert(((int_64)$40 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [152]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$11 == (int_64)*($22)), [10012])
	$40 = (int_64)
	*($4 + [168]) = $40(*($4 + [168]) - $6))
	CALL eosio_assert(((int_64)$40 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($4 + [168]) < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$11 == (int_64)1413956356), [9719])
	$25 = ((int_64)$6 + (int_64)$25)
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [9781])
	$38 = ((float_64)$41 / (float_64)((float_64)((float_64)$39 / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 $7)))
	$39 = ((float_64)$38 * (float_64)(CASTING float_64)(int_64 $6))
	if ( ((float_64)(float_64)|$39| < (float_64)(float_64)9223372036854775808) ){ goto $label$94 }
	$7 = (int_64)-9223372036854775808
	goto $label$93 
	
.LABEL $label$95
	CALL eosio_assert(((int_64)*($24) == (int_64)1413956356), [9719])
	$6 = ((int_64)*($4 + [152]) + (int_64)$7)
	*($4 + [152]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [152]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)*($22) == (int_64)1413956356), [10012])
	$6 = (int_64)
	*($4 + [168]) = $6(*($4 + [168]) - $7))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($4 + [168]) < (int_64)4611686018427387904), [10082])
	CALL eosio_assert($30, [9719])
	$25 = ((int_64)$25 + (int_64)$7)
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)*((($4 + [336]) + [8]))), [9719])
	$6 = ((int_64)*($4 + [336]) + (int_64)$8)
	*($4 + [336]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [336]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)$14), [10012])
	$5 = (int_64)
	CALL eosio_assert(((int_64)$5($5 - $8)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$10 == (int_64)1397703940), [9719])
	$27 = ((int_64)$8 + (int_64)$27)
	CALL eosio_assert(((int_64)$27 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$27 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert($42, [9719])
	CALL eosio_assert($43, [9762])
	CALL eosio_assert($44, [9781])
	$21 = $40
	goto $label$92 
	
.LABEL $label$94
	$7 = (Rounds 0)($39)
	
.LABEL $label$93
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$98:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$97 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$99 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$99
	$6 = $11
	
.LOOP $label$100:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$97 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$100 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	$12 = [0]
	
.LABEL $label$96
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*((($4 + [336]) + [8])) == (int_64)1397703940), [9719])
	$6 = ((int_64)*($4 + [336]) + (int_64)$7)
	*($4 + [336]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($4 + [336]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert($31, [10012])
	$5 = (int_64)
	CALL eosio_assert(((int_64)$5($5 - $7)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert($29, [9719])
	$27 = ((int_64)$27 + (int_64)$7)
	CALL eosio_assert(((int_64)$27 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$27 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert($28, [9719])
	$21 = ((int_64)$21 + (int_64)$7)
	CALL eosio_assert(((int_64)$21 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$21 < (int_64)4611686018427387904), [9781])
	
.LABEL $label$92
	CALL eosio_assert(((float_64)$38 >= (float_64)(float_64)0), [10171])
	$6 = ((int_64)$35 + (int_64)1)
	if ( ((int_64)$35 < (int_64)$15) ){ goto $label$45 }
	
.LABEL $label$44
	CALL eosio_assert(((int_64)*((($4 + [336]) + [8])) == (int_64)$14), [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($19 - *($4 + [336]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	*($4 + [144]) = $14
	CALL eosio_assert(((int_64)*((($4 + [320]) + [8])) == (int_64)$14), [10012])
	$6 = (int_64)
	*($4 + [136]) = $6($6 - *($4 + [320])))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)1413956356 == (int_64)*($23)), [9082])
	CALL eosio_assert(((int_64)$25 <= (int_64)*($17 + [72])), [10191])
	CALL eosio_assert(((int_64)*($4 + [144]) == (int_64)$14), [9082])
	if ( ((int_64)*($4 + [136]) != (int_64)$5) ){ goto $label$104 }
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$105:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$106 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$105 }
	goto $label$102 
	
.LABEL $label$106
	$6 = $11
	
.LOOP $label$107:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$103 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$107 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$105 }
	goto $label$102 
	
.LABEL $label$104
	CALL eosio_assert([0], [10218])
	goto $label$101 
	
.LABEL $label$103
	$12 = [0]
	
.LABEL $label$102
	CALL eosio_assert($12, [8448])
	$9 = ($4 + [144])
	CALL eosio_assert(((int_64)*($9) == (int_64)1397703940), [9082])
	if ( ((int_64)*($4 + [136]) < (int_64)0) ){ goto $label$108 }
	CALL eosio_assert(((int_64)*($9) == (int_64)$14), [9082])
	CALL eosio_assert(((int_64)*($4 + [136]) <= (int_64)$19), [10218])
	goto $label$101 
	
.LABEL $label$108
	CALL eosio_assert([0], [10218])
	
.LABEL $label$101
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$111:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$110 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$112 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$112
	$6 = $11
	
.LOOP $label$113:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$110 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$113 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$110
	$12 = [0]
	
.LABEL $label$109
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*(($4 + [344])) == (int_64)1397703940), [9082])
	if ( ((int_64)*($4 + [336]) <= (int_64)-1) ){ goto $label$115 }
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$118:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$117 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$119 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$118 }
	goto $label$116 
	
.LABEL $label$119
	$6 = $11
	
.LOOP $label$120:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$117 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$120 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$118 }
	goto $label$116 
	
.LABEL $label$117
	$12 = [0]
	
.LABEL $label$116
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*(($4 + [328])) == (int_64)1397703940), [9082])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [320]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [10237])
	goto $label$114 
	
.LABEL $label$115
	CALL eosio_assert([0], [10237])
	
.LABEL $label$114
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$123:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$122 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$124 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$124
	$6 = $11
	
.LOOP $label$125:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$122 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$125 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$122
	$12 = [0]
	
.LABEL $label$121
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)1413956356 == (int_64)1413956356), [9082])
	if ( ((int_64)$25 <= (int_64)-1) ){ goto $label$127 }
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$130:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$129 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$131 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$130 }
	goto $label$128 
	
.LABEL $label$131
	$6 = $11
	
.LOOP $label$132:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$129 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$132 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$130 }
	goto $label$128 
	
.LABEL $label$129
	$12 = [0]
	
.LABEL $label$128
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*(($4 + [208])) == (int_64)1413956356), [9082])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [200]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [10276])
	goto $label$126 
	
.LABEL $label$127
	CALL eosio_assert([0], [10276])
	
.LABEL $label$126
	CALL eosio_assert(((int_64)1397703940 == (int_64)1397703940), [9719])
	$6 = ((int_64)$27 + (int_64)$26)
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [9781])
	$11 = *($4 + [336])
	$12 = (($4 + [336]) + [8])
	$10 = *($12)
	$9 = (($4 + [320]) + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)$10), [9719])
	$11 = ((int_64)$11 + (int_64)*($4 + [320]))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)1397703940), [9082])
	if ( ((int_64)$6 != (int_64)$11) ){ goto $label$134 }
	CALL eosio_assert([1], [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($19 - $5)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	$11 = *($4 + [336])
	$10 = *($12)
	CALL eosio_assert(((int_64)*($9) == (int_64)$10), [9719])
	$11 = ((int_64)$11 + (int_64)*($4 + [320]))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$14 == (int_64)$10), [9082])
	CALL eosio_assert(((int_64)$6 == (int_64)$11), [10324])
	goto $label$133 
	
.LABEL $label$134
	CALL eosio_assert([0], [10324])
	
.LABEL $label$133
	CALL eosio_assert(((int_64)*(($4 + [208])) == (int_64)1413956356), [9719])
	$10 = ((int_64)*($4 + [200]) + (int_64)$25)
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [9781])
	$8 = *(($0 + [88]))
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$137:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$136 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$138 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$137 }
	goto $label$135 
	
.LABEL $label$138
	$6 = $11
	
.LOOP $label$139:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$136 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$139 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$137 }
	goto $label$135 
	
.LABEL $label$136
	$12 = [0]
	
.LABEL $label$135
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)1413956356 == (int_64)1413956356), [9082])
	if ( ((int_64)$10 >= (int_64)$8) ){ goto $label$141 }
	CALL eosio_assert([0], [10338])
	goto $label$140 
	
.LABEL $label$141
	CALL eosio_assert(((int_64)*(($4 + [208])) == (int_64)1413956356), [9719])
	$10 = ((int_64)*($4 + [200]) + (int_64)$25)
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [9781])
	$8 = ((int_64)*(($0 + [88])) * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$144:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$143 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$145 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$145
	$6 = $11
	
.LOOP $label$146:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$143 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$146 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$143
	$12 = [0]
	
.LABEL $label$142
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)1413956356 == (int_64)1413956356), [9082])
	CALL eosio_assert(((int_64)$10 <= (int_64)$8), [10338])
	
.LABEL $label$140
	$6 = *($0)
	*($4 + [36]) = ($4 + [320])
	*($4 + [32]) = ($4 + [336])
	*($4 + [40]) = ($4 + [248])
	*($4 + [44]) = ($4 + [216])
	*($4 + [48]) = ($4 + [200])
	*($4 + [52]) = ($4 + [168])
	*($4 + [56]) = ($4 + [152])
	$2 = ((int_32)$17 != (int_32)[0])
	CALL eosio_assert($2, [9141])
	CALL $67($16, $17, $6, ($4 + [32]))
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$149:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$148 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$150 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$149 }
	goto $label$147 
	
.LABEL $label$150
	$6 = $11
	
.LOOP $label$151:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$148 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$151 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$149 }
	goto $label$147 
	
.LABEL $label$148
	$12 = [0]
	
.LABEL $label$147
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*(($4 + [144])) == (int_64)1397703940), [9082])
	if ( ((int_64)*($4 + [136]) < (int_64)1) ){ goto $label$152 }
	$6 = *($0)
	*($4 + [32]) = ($4 + [136])
	CALL eosio_assert($2, [9141])
	CALL $68($16, $17, $6, ($4 + [32]))
	$6 = *($0)
	*($4 + [32]) = ($4 + [136])
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [9141])
	CALL $69(($4 + [280]), $18, $6, ($4 + [32]))
	
.LABEL $label$152
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$155:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$154 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$156 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$155 }
	goto $label$153 
	
.LABEL $label$156
	$6 = $11
	
.LOOP $label$157:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$154 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$157 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$155 }
	goto $label$153 
	
.LABEL $label$154
	$12 = [0]
	
.LABEL $label$153
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)1413956356 == (int_64)1413956356), [9082])
	if ( ((int_64)$25 < (int_64)1) ){ goto $label$160 }
	$11 = *($0)
	$6 = (int_64)6
	
.LOOP $label$161:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$161 }
	*($4 + [88]) = (int_64)3617214756542218240
	*($4 + [80]) = $11
	$6 = (int_64)0
	$11 = (int_64)59
	$9 = [8298]
	$8 = (int_64)0
	
.LOOP $label$162:
	$10 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$163 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$165 }
	$12 = ($12 + [-91])
	goto $label$164 
	
.LABEL $label$165
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$164
	$10 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$163
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$8 = ((int_64)$10 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$162 }
	$6 = (int_64)0
	$10 = (int_64)59
	$9 = [8256]
	$5 = (int_64)0
	
.LOOP $label$166:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$171 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$170 }
	$12 = ($12 + [-91])
	goto $label$169 
	
.LABEL $label$171
	$11 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$170
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$169
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$168
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$167
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$5 = ((int_64)$11 | (int_64)$5)
	$10 = ((int_64)$10 + (int_64)4294967291)
	if ( ((int_64)$10 != (int_64)55834574842) ){ goto $label$166 }
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$9 = CALL $116([10387])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$159 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$174 }
	*($4 + [16]) = ($9 << [1])
	$12 = (($4 + [16]) | [1])
	if ( $9 ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$174
	$13 = (($9 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($4 + [16]) = ($13 | [1])
	*($4 + [24]) = $12
	*($4 + [20]) = $9
	
.LABEL $label$173
	CALL memcpy($12, [10387], $9)
	
.LABEL $label$172
	*(($12 + $9)) = [0]
	*(($4 + [56])) = (int_64)1413956356
	$9 = ($4 + [24])
	*(($4 + [72])) = *($9)
	*($9) = [0]
	*($4 + [40]) = $1
	*($4 + [48]) = $25
	*($4 + [32]) = *($0)
	*($4 + [64]) = *($4 + [16])
	*($4 + [16]) = (int_64)0
	$9 = CALL $33(($4 + [96]), ($4 + [80]), $8, $5, ($4 + [32]))
	CALL $34(($4 + [352]), $9)
	$12 = *($4 + [352])
	CALL send_inline($12, (*($4 + [356]) - $12))
	$12 = *($4 + [352])
	if ( ($12 == 0) ){ goto $label$175 }
	*($4 + [356]) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$175
	$12 = *($9 + [28])
	if ( ($12 == 0) ){ goto $label$176 }
	*(($9 + [32])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$176
	$12 = *($9 + [16])
	if ( ($12 == 0) ){ goto $label$177 }
	*(($9 + [20])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$177
	if ( ((*(($4 + [64])) & [1]) == 0) ){ goto $label$178 }
	CALL _ZdlPv(*(($4 + [72])))
	
.LABEL $label$178
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$160 }
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$160
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$181:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$180 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$182 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$181 }
	goto $label$179 
	
.LABEL $label$182
	$6 = $11
	
.LOOP $label$183:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$180 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$183 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$181 }
	goto $label$179 
	
.LABEL $label$180
	$12 = [0]
	
.LABEL $label$179
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)*(($4 + [208])) == (int_64)1413956356), [9082])
	if ( ((int_64)*($4 + [200]) < (int_64)1) ){ goto $label$184 }
	$5 = *($0)
	$6 = (int_64)6
	
.LOOP $label$185:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$185 }
	$6 = (int_64)0
	$11 = (int_64)59
	$9 = [8298]
	$8 = (int_64)0
	
.LOOP $label$186:
	$10 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$187 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$189 }
	$12 = ($12 + [-91])
	goto $label$188 
	
.LABEL $label$189
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$188
	$10 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$187
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$8 = ((int_64)$10 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$186 }
	$6 = (int_64)5
	
.LOOP $label$190:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$190 }
	*(($4 + [360])) = [0]
	*($4 + [352]) = (int_64)0
	$9 = CALL $116([10459])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$158 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$193 }
	*($4 + [352]) = ($9 << [1])
	$12 = (($4 + [352]) | [1])
	if ( $9 ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$193
	$13 = (($9 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($4 + [352]) = ($13 | [1])
	*($4 + [360]) = $12
	*($4 + [356]) = $9
	
.LABEL $label$192
	CALL memcpy($12, [10459], $9)
	
.LABEL $label$191
	*(($12 + $9)) = [0]
	*((($4 + [96]) + [16])) = *((($4 + [200]) + [8]))
	$9 = (($4 + [352]) + [8])
	*(($4 + [128])) = *($9)
	*($9) = [0]
	*($4 + [96]) = $1
	*($4 + [32]) = $8
	*($4 + [40]) = (int_64)8516769789752901632
	*($4 + [104]) = *($4 + [200])
	*($4 + [120]) = *($4 + [352])
	*($4 + [352]) = (int_64)0
	*(($9 = CALL _Znwj([16]))) = $5
	*($9 + [8]) = (int_64)3617214756542218240
	*(($4 + [68])) = [0]
	$12 = ($9 + [16])
	*((($4 + [32]) + [24])) = $12
	*(($4 + [52])) = $12
	*($4 + [48]) = $9
	*($4 + [60 align=4]) = (int_64)0
	$9 = *($4 + [120])
	$12 = ( *((($4 + [96]) + [28])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($12 + [24])
	$6 = (CASTING uint_64)(uint_32 $12)
	$13 = (($4 + [96]) + [24])
	$12 = (($4 + [32]) + [28])
	
.LOOP $label$194:
	$9 = ($9 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$194 }
	if ( ($9 == 0) ){ goto $label$196 }
	CALL $48($12, $9)
	$12 = *(($4 + [64]))
	$9 = *(($4 + [60]))
	goto $label$195 
	
.LABEL $label$196
	$12 = [0]
	$9 = [0]
	
.LABEL $label$195
	*($4 + [80]) = $9
	*($4 + [88]) = $12
	$12 = ($12 - $9)
	CALL eosio_assert(((int_32)$12 > (int_32)[7]), [8524])
	CALL memcpy($9, ($4 + [96]), [8])
	CALL eosio_assert(((int_32)($12 + [-8]) > (int_32)[7]), [8524])
	CALL memcpy(($9 + [8]), (($4 + [96]) + [8]), [8])
	CALL eosio_assert(((int_32)($12 + [-16]) > (int_32)[7]), [8524])
	CALL memcpy(($9 + [16]), (($4 + [96]) + [16]), [8])
	*($4 + [84]) = ($9 + [24])
	CALL $70(($4 + [80]), $13)
	CALL $34(($4 + [80]), ($4 + [32]))
	$9 = *($4 + [80])
	CALL send_inline($9, (*($4 + [84]) - $9))
	$9 = *($4 + [80])
	if ( ($9 == 0) ){ goto $label$197 }
	*($4 + [84]) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$197
	$9 = *($4 + [60])
	if ( ($9 == 0) ){ goto $label$198 }
	*(($4 + [64])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$198
	$9 = *($4 + [48])
	if ( ($9 == 0) ){ goto $label$199 }
	*(($4 + [52])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$199
	if ( ((*(($4 + [120])) & [1]) == 0) ){ goto $label$200 }
	CALL _ZdlPv(*(($4 + [128])))
	
.LABEL $label$200
	if ( ((*($4 + [352]) & [1]) == 0) ){ goto $label$184 }
	CALL _ZdlPv(*(($4 + [360])))
	
.LABEL $label$184
	$13 = *($4 + [304])
	if ( ($13 == 0) ){ goto $label$201 }
	$2 = ($4 + [308])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$203 }
	
.LOOP $label$204:
	$9 = ($9 + [-24])
	$12 = *($9)
	*($9) = [0]
	if ( ($12 == 0) ){ goto $label$205 }
	CALL _ZdlPv($12)
	
.LABEL $label$205
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$204 }
	$9 = *(($4 + [304]))
	goto $label$202 
	
.LABEL $label$203
	$9 = $13
	
.LABEL $label$202
	*($2) = $13
	CALL _ZdlPv($9)
	
.LABEL $label$201
	$global$0 = ($4 + [368])
	return (unreachable)
	
.LABEL $label$159
	CALL $102(($4 + [16]))
	
.LABEL $label$158
	CALL $102(($4 + [352]))
	(unreachable)
}

void .FUNC $8 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([216])
	CALL $16($3)
	*($3 + [200]) = $1
	CALL $17(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [204])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $18(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [8376])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $117($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $120($4)
	
.LABEL $label$6
	$6 = ($0 + [24])
	*(($7 = CALL _Znwj([80])) + [32]) = (int_64)1397703940
	*($7 + [24]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$8 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$8 = $9
	$4 = [1]
	$2 = $5
	$5 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$8 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$2 = ($5 + [1])
	$5 = $2
	if ( $4 ){ goto $label$11 }
	$4 = [1]
	$5 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [8448])
	*($7 + [56]) = (int_64)0
	*($7 + [48]) = (int_64)0
	*($7 + [64]) = [0]
	*($7 + [68]) = $0
	CALL $25(($3 + [32]), $7)
	*($7 + [72]) = $1
	*($3 + [24]) = $7
	$8 = *($7)
	*($3 + [16]) = $8
	*($3 + [12]) = $1
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $8
	*($5 + [16]) = $1
	*($3 + [24]) = [0]
	*($5) = $7
	*($4) = ($5 + [24])
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $5 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $20($6, ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	$global$0 = ($3 + [48])
	return $7
}

int_32 .FUNC $6 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [216]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [176]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [136]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	return $0
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [8376])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $117($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $120($4)
	
.LABEL $label$6
	$5 = CALL _Znwj([216])
	$4 = CALL $16($5)
	*($5 + [200]) = $0
	CALL $23(($3 + [32]), $4)
	*($5 + [204]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $18(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = $2) + [60]) = $0
	*($3 + [48]) = *($1)
	$1 = [0]
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$4 = CALL $117($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [24])) = (int_64)1397703940
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $7
	$2 = [1]
	$0 = $1
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $7
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$0 = ($1 + [1])
	$1 = $0
	if ( $2 ){ goto $label$8 }
	$2 = [1]
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	CALL eosio_assert($2, [8448])
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [68]) = $4
	*($3 + [64]) = $4
	*($3 + [72]) = ($4 + $5)
	*($3 + [80]) = ($3 + [64])
	*($3 + [88]) = $3
	CALL $13(($3 + [88]), ($3 + [80]))
	if ( ($5 <= [513]) ){ goto $label$9 }
	CALL $120($4)
	
.LABEL $label$9
	*($3 + [68]) = ($3 + [48])
	*($3 + [64]) = ($3 + [60])
	CALL $14(($3 + [64]), $3)
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return [1]
}

void .FUNC $5 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL require_auth($1)
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = *($3 + [8])
	$8 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$6 = $10
	$8 = [1]
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$6 = $10
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $8 ){ goto $label$6 }
	$8 = [1]
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert($8, [8581])
	CALL eosio_assert(((int_64)$7 == (int_64)1413956356), [8604])
	*(($8 = (($5 + [32]) + [8]))) = *(($3 + [8]))
	*($5 + [32]) = *($3)
	$9 = CALL $103(($5 + [16]), $4)
	*(($5 + [8])) = *($8)
	*($5) = *($5 + [32])
	CALL $15($0, $1, $2, $5, $9)
	if ( ((*($9) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($9 + [8]))
	
.LABEL $label$1
	$global$0 = ($5 + [48])
}

int_32 .FUNC $2 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($0 + [8]) = (int_64)5
	*($0) = $1
	*($0 + [16]) = (int_64)90
	*($0 + [24]) = (int_64)2500000
	*($0 + [32]) = (int_64)625000
	*($0 + [40]) = (int_64)100
	*($0 + [48]) = (int_64)10
	*($0 + [56]) = (int_64)1535717288
	*($0 + [64]) = (int_64)1535717888
	*($0 + [72]) = (int_64)1
	*($0 + [80]) = (int_64)86400
	*($0 + [88]) = (int_64)10000
	*($0 + [96]) = (int_64)100000
	*($0 + [104]) = (int_64)10000
	*($0 + [112]) = $1
	*(($0 + [120])) = $1
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = (int_64)0
	*($0 + [152]) = $1
	*(($0 + [144])) = [0]
	*(($0 + [160])) = $1
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = (int_64)0
	*(($0 + [184])) = [0]
	*($0 + [192]) = $1
	*(($0 + [200])) = $1
	*(($0 + [208])) = (int_64)-1
	*(($0 + [216])) = (int_64)0
	*(($0 + [224])) = [0]
	$3 = ($0 + [112])
	$4 = CALL db_lowerbound_i64($1, $1, (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	*($2 + [60]) = CALL $7($3, $4)
	*($2 + [56]) = $3
	$5 = (($2 + [56]) | [4])
	goto $label$1 
	
.LABEL $label$2
	*($2 + [60]) = [0]
	*($2 + [56]) = $3
	$1 = *($0)
	*($2 + [8]) = $0
	CALL $8(($2 + [16]), $3, $1, ($2 + [8]))
	*($2 + [56]) = *($2 + [16])
	$5 = (($2 + [56]) | [4])
	
.LABEL $label$1
	$6 = ($0 + [152])
	$7 = *($0)
	$1 = (int_64)0
	$8 = (int_64)59
	$3 = [8363]
	$9 = (int_64)0
	
.LOOP $label$3:
	$10 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($3)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [-91])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [-48]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$4
	$3 = ($3 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$3 }
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	*($2 + [24]) = $9
	*($2 + [16]) = $7
	$3 = CALL db_find_i64($7, $9, (int_64)-3020376800539705344, *(*($5)))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $9(($2 + [16]), $3)
	CALL eosio_assert(((int_32)*($11 + [68]) == (int_32)($2 + [16])), [8530])
	goto $label$7 
	
.LABEL $label$8
	$1 = *($0)
	*($2) = ($2 + [56])
	CALL $10(($2 + [8]), ($2 + [16]), $1, $2)
	$11 = *($2 + [12])
	
.LABEL $label$7
	$1 = (int_64)0
	$8 = (int_64)59
	$3 = [8363]
	$9 = (int_64)0
	
.LOOP $label$9:
	$10 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$10 }
	$4 = *($3)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$4 = ($4 + [-91])
	goto $label$11 
	
.LABEL $label$12
	$4 = ( ($4 + [-48]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$10
	$3 = ($3 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$9 }
	$4 = *(($0 + [180]))
	$5 = *(($0 + [176]))
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$17:
	$3 = ($4 + [-24])
	$12 = *($3)
	if ( ((int_64)*($12) == (int_64)$9) ){ goto $label$16 }
	$4 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*($12 + [8]) == (int_32)$6), [8530])
	$5 = *($2 + [40])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$3 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-5001621357587333120, $9)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert(((int_32)*(CALL $11($6, $3) + [8]) == (int_32)$6), [8530])
	$5 = *($2 + [40])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	if ( (int_64)(*($11 + [48]) == 0) ){ goto $label$19 }
	CALL $12(($2 + [8]), $6, *($0), $2)
	
.LABEL $label$19
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$12 = ($2 + [44])
	$3 = *($12)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$23 }
	CALL _ZdlPv($4)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$22 }
	$3 = *(($2 + [40]))
	goto $label$20 
	
.LABEL $label$21
	$3 = $5
	
.LABEL $label$20
	*($12) = $5
	CALL _ZdlPv($3)
	
.LABEL $label$13
	$global$0 = ($2 + [64])
	return $0
}

void .FUNC $3 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL require_auth($1)
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = *($3 + [8])
	$8 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$6 = $10
	$8 = [1]
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$6 = $10
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $8 ){ goto $label$6 }
	$8 = [1]
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	
.LABEL $label$2
	CALL eosio_assert($8, [8581])
	CALL eosio_assert(((int_64)$7 == (int_64)1397703940), [8604])
	*(($8 = (($5 + [32]) + [8]))) = *(($3 + [8]))
	*($5 + [32]) = *($3)
	$9 = CALL $103(($5 + [16]), $4)
	*(($5 + [8])) = *($8)
	*($5) = *($5 + [32])
	CALL $15($0, $1, $2, $5, $9)
	if ( ((*($9) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($9 + [8]))
	
.LABEL $label$1
	$global$0 = ($5 + [48])
}

void .FUNC memory ()
{
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [272])
	$global$0 = $3
	CALL memory()
	$4 = (int_64)7
	
.LOOP $label$1:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)-6569208335818555392 != (int_64)$2) ){ goto $label$2 }
	$4 = (int_64)5
	
.LOOP $label$3:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$3 }
	CALL eosio_assert(((int_64)6138663577826885632 == (int_64)$1), [8192])
	
.LABEL $label$2
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [8256]
	$7 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$9 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$8 = ($8 + [-91])
	goto $label$7 
	
.LABEL $label$9
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$4 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$10 }
	$4 = (int_64)7
	$2 = (int_64)-6569208335818555392
	
.LOOP $label$11:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$11 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [8265]
	$7 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$17 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$8 = ($8 + [-91])
	goto $label$15 
	
.LABEL $label$17
	$9 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$13
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$7 = ((int_64)$9 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$12 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$19 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [8277]
	$2 = (int_64)0
	
.LOOP $label$20:
	$9 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)19) ){ goto $label$22 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$8 = ($8 + [-91])
	goto $label$23 
	
.LABEL $label$24
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$22 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	goto $label$21 
	
.LABEL $label$22
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$21
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$2 = ((int_64)$9 | (int_64)$2)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$4 = (int_64)0
	$9 = (int_64)59
	$6 = [8298]
	$7 = (int_64)0
	
.LOOP $label$25:
	$5 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$26 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [-91])
	goto $label$27 
	
.LABEL $label$28
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$5 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$25 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$18 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [8311]
	$2 = (int_64)0
	
.LOOP $label$29:
	$9 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)18) ){ goto $label$31 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [-91])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	goto $label$30 
	
.LABEL $label$31
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$30
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$2 = ((int_64)$9 | (int_64)$2)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$29 }
	
.LABEL $label$18
	$4 = (int_64)7
	
.LOOP $label$34:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$34 }
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$35 }
	CALL eosio_assert([0], [8331])
	
.LABEL $label$35
	$6 = CALL $2(($3 + [40]), $0)
	if ( ((int_64)$2 == (int_64)7035924880228139415) ){ goto $label$37 }
	if ( ((int_64)$2 != (int_64)6138663591592764937) ){ goto $label$36 }
	*($3 + [36]) = [0]
	*($3 + [32]) = [1]
	*($3 + [8]) = *($3 + [32])
	CALL $4($6, ($3 + [8]))
	goto $label$36 
	
.LABEL $label$37
	*($3 + [28]) = [0]
	*($3 + [24]) = [2]
	*($3 + [16]) = *($3 + [24])
	CALL $4($6, ($3 + [16]))
	
.LABEL $label$36
	CALL $6($6)
	
.LABEL $label$10
	CALL $110([0])
	$global$0 = ($3 + [272])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $103(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*(*($0)) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $103(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $15 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$5 = ($global$0 - [464])
	$global$0 = $5
	*($5 + [440]) = $1
	CALL require_auth($1)
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$2 }
	$7 = [0]
	$8 = [0]
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$2 = $6
	$8 = [1]
	$11 = $10
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$2 = $6
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$10 < (int_32)[6])
	$11 = ($10 + [1])
	$10 = $11
	if ( $8 ){ goto $label$7 }
	$8 = [1]
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [8581])
	$10 = ($0 + [112])
	$8 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $7($10, $8)
	
.LABEL $label$8
	*($5 + [436]) = $7
	*($5 + [432]) = $10
	$2 = *($3 + [8])
	if ( ((int_64)$2 != (int_64)1397703940) ){ goto $label$40 }
	if ( ((int_64)$9 == (int_64)3) ){ goto $label$39 }
	if ( ((int_64)$9 == (int_64)2) ){ goto $label$38 }
	if ( ((int_64)$9 != (int_64)1) ){ goto $label$37 }
	$10 = *($4)
	$8 = ($10 & [1])
	if ( $8 ){ goto $label$36 }
	if ( uint_32($10 >> [1]) ){ goto $label$35 }
	goto $label$1 
	
.LABEL $label$40
	if ( ((int_64)$2 != (int_64)1413956356) ){ goto $label$41 }
	$2 = CALL current_time()
	CALL eosio_assert(((int_64)*($0 + [64]) <= (int_64)((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295)), [8927])
	$10 = *($4)
	$8 = CALL $116([8976])
	if ( ((int_32)$8 != (int_32)( *($4 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$42 }
	if ( (CALL $108($4, [0], [-1], [8976], $8) == 0) ){ goto $label$34 }
	
.LABEL $label$42
	$10 = *($4)
	$8 = CALL $116([8981])
	if ( ((int_32)$8 != (int_32)( *(($4 + [4])) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$43 }
	if ( (CALL $108($4, [0], [-1], [8981], $8) == 0) ){ goto $label$30 }
	
.LABEL $label$43
	*(($8 = (($5 + [96]) + [8]))) = *(($3 + [8]))
	*($5 + [96]) = *($3)
	$10 = CALL $103(($5 + [80]), $4)
	*((($5 + [64]) + [8])) = *($8)
	*($5 + [64]) = *($5 + [96])
	CALL $27($0, $1, ($5 + [64]), $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($10 + [8]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$41
	CALL eosio_assert([0], [8987])
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$39
	CALL $28($0, $1)
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$38
	CALL $29($0, $1)
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$37
	$8 = *($4)
	$11 = CALL $116([8758])
	if ( ((int_32)$11 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$44 }
	if ( (CALL $108($4, [0], [-1], [8758], $11) == 0) ){ goto $label$29 }
	
.LABEL $label$44
	$8 = *($4)
	$11 = ($4 + [4])
	$12 = CALL $116([8766])
	if ( ((int_32)$12 != (int_32)( *($11) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$45 }
	$8 = [0]
	if ( (CALL $108($4, [0], [-1], [8766], $12) == 0) ){ goto $label$24 }
	
.LABEL $label$45
	$10 = *($4)
	$8 = CALL $116([8773])
	if ( ((int_32)$8 != (int_32)( *($11) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$46 }
	if ( (CALL $108($4, [0], [-1], [8773], $8) == 0) ){ goto $label$31 }
	
.LABEL $label$46
	$10 = *($4)
	$8 = ($4 + [4])
	$11 = CALL $116([8776])
	if ( ((int_32)$11 != (int_32)( *($8) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$47 }
	if ( (CALL $108($4, [0], [-1], [8776], $11) == 0) ){ goto $label$31 }
	
.LABEL $label$47
	$10 = *($4)
	$11 = CALL $116([8779])
	if ( ((int_32)$11 != (int_32)( *($8) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$48 }
	if ( (CALL $108($4, [0], [-1], [8779], $11) == 0) ){ goto $label$31 }
	
.LABEL $label$48
	$2 = CALL current_time()
	CALL eosio_assert(((int_64)*($0 + [56]) <= (int_64)((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295)), [8835])
	$2 = CALL current_time()
	if ( ((int_64)*($0 + [64]) <= (int_64)((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$14 }
	*(($5 + [256])) = [0]
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = (int_64)0
	$2 = *($0)
	*($5 + [224]) = $2
	*($5 + [232]) = $1
	$10 = CALL db_find_i64($2, $1, (int_64)-3020376800539705344, *($7))
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$20 }
	$7 = CALL $9(($5 + [224]), $10)
	CALL eosio_assert(((int_32)*($7 + [68]) == (int_32)($5 + [224])), [8530])
	$2 = *($0 + [88])
	$6 = *($0 + [96])
	if ( ((int_64)$9 <= (int_64)$6) ){ goto $label$19 }
	if ( ((uint_64)$9 > (uint_64)((int_64)((int_64)$2 * (int_64)*($7 + [56])) + (int_64)$6)) ){ goto $label$19 }
	*((($5 + [368]) + [8])) = *(($3 + [8]))
	*($5 + [368]) = *($3)
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$2 = (int_64)5459781
	$10 = [0]
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$50 }
	$2 = $1
	$8 = [1]
	$11 = $10
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$49 }
	goto $label$17 
	
.LABEL $label$50
	$2 = $1
	
.LOOP $label$51:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$10 < (int_32)[6])
	$11 = ($10 + [1])
	$10 = $11
	if ( $8 ){ goto $label$51 }
	$8 = [1]
	$10 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$49 }
	goto $label$17 
	
.LABEL $label$36
	if ( (*($4 + [4]) == 0) ){ goto $label$1 }
	
.LABEL $label$35
	if ( $8 ){ goto $label$33 }
	if ( (uint_32($10 >> [1]) <= [13]) ){ goto $label$32 }
	goto $label$1 
	
.LABEL $label$34
	$6 = *(($3 + [8]))
	*((($5 + [128]) + [8])) = $6
	$2 = *($3)
	*((($5 + [32]) + [8])) = $6
	*($5 + [128]) = $2
	*($5 + [32]) = $2
	CALL $30($0, $1, ($5 + [32]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$33
	if ( ((uint_32)*($4 + [4]) >= (uint_32)[13]) ){ goto $label$1 }
	
.LABEL $label$32
	CALL $31(($5 + [416]), $0, $1)
	if ( (*($4) & [1]) ){ goto $label$28 }
	$10 = ($4 + [1])
	goto $label$27 
	
.LABEL $label$31
	$10 = [0]
	if ( ((int_64)$9 < (int_64)100) ){ goto $label$52 }
	$10 = ((int_64)$9 <= (int_64)*($0 + [88]))
	
.LABEL $label$52
	CALL eosio_assert($10, [8782])
	$1 = *($0)
	$2 = (int_64)6
	
.LOOP $label$53:
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$53 }
	*($5 + [336]) = (int_64)3617214756542218240
	*($5 + [328]) = $1
	$2 = (int_64)0
	$6 = (int_64)59
	$10 = [8265]
	$9 = (int_64)0
	
.LOOP $label$54:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$59 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$8 = ($8 + [-91])
	goto $label$57 
	
.LABEL $label$59
	$1 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$58
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$56
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$55
	$10 = ($10 + [1])
	$6 = ((int_64)$6 + (int_64)4294967291)
	$9 = ((int_64)$1 | (int_64)$9)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$54 }
	$2 = (int_64)0
	$6 = (int_64)59
	$10 = [8256]
	$13 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$65 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$8 = ($8 + [-91])
	goto $label$63 
	
.LABEL $label$65
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$61
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$60 }
	$2 = (int_64)0
	$1 = (int_64)59
	$10 = [8820]
	$14 = (int_64)0
	
.LOOP $label$66:
	$6 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$67 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$8 = ($8 + [-91])
	goto $label$68 
	
.LABEL $label$69
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$68
	$6 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$67
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$6 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)4294967291)
	if ( ((int_64)$1 != (int_64)55834574842) ){ goto $label$66 }
	CALL $32(($5 + [272]), $4, [8833])
	CALL $31(($5 + [448]), $0, *($5 + [440]))
	$10 = *($5 + [448])
	$8 = ($10 & [1])
	$10 = CALL $107(($5 + [272]), ( *($5 + [456]) ? (($5 + [448]) | [1]) : $8 ), ( *($5 + [452]) ? uint_32($10 >> [1]) : $8 ))
	$8 = *($10 + [8])
	*($10 + [8]) = [0]
	$2 = *($10)
	*($10) = (int_64)0
	*(($5 + [248])) = *(($3 + [8]))
	*(($5 + [264])) = $8
	*($5 + [224]) = *($0)
	*($5 + [232]) = $14
	*($5 + [240]) = *($3)
	*($5 + [256]) = $2
	$10 = CALL $33(($5 + [368]), ($5 + [328]), $9, $13, ($5 + [224]))
	CALL $34(($5 + [288]), $10)
	$8 = *($5 + [288])
	CALL send_inline($8, (*($5 + [292]) - $8))
	$8 = *($5 + [288])
	if ( ($8 == 0) ){ goto $label$70 }
	*($5 + [292]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$70
	$8 = *($10 + [28])
	if ( ($8 == 0) ){ goto $label$71 }
	*(($10 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$71
	$8 = *($10 + [16])
	if ( ($8 == 0) ){ goto $label$72 }
	*(($10 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$72
	if ( (*($5 + [256]) & [1]) ){ goto $label$26 }
	if ( (*($5 + [448]) & [1]) ){ goto $label$25 }
	goto $label$10 
	
.LABEL $label$30
	$6 = *(($3 + [8]))
	*((($5 + [112]) + [8])) = $6
	$2 = *($3)
	*((($5 + [48]) + [8])) = $6
	*($5 + [112]) = $2
	*($5 + [48]) = $2
	CALL $35($0, $1, ($5 + [48]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$29
	$6 = *(($3 + [8]))
	*((($5 + [192]) + [8])) = $6
	$2 = *($3)
	*(($5 + [8])) = $6
	*($5 + [192]) = $2
	*($5) = $2
	CALL $36($0, $1, $5)
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$28
	$10 = *($4 + [8])
	
.LABEL $label$27
	$8 = [0]
	
.LOOP $label$73:
	$11 = ($10 + $8)
	$4 = ($8 + [1])
	$8 = $4
	if ( *($11) ){ goto $label$73 }
	$13 = (CASTING uint_64)(uint_32 ($4 + [-1]))
	$2 = (int_64)0
	$1 = (int_64)59
	$9 = (int_64)0
	
.LOOP $label$74:
	$6 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$13) ){ goto $label$75 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$8 = ($8 + [-91])
	goto $label$76 
	
.LABEL $label$77
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$6 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$79 }
	$6 = ((int_64)((int_64)$6 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	goto $label$78 
	
.LABEL $label$79
	$6 = ((int_64)$6 & (int_64)15)
	
.LABEL $label$78
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$6 | (int_64)$9)
	$1 = ((int_64)$1 + (int_64)4294967291)
	if ( ((int_64)$1 != (int_64)55834574842) ){ goto $label$74 }
	*($5 + [408]) = $9
	$7 = ($0 + [192])
	$8 = *(($0 + [220]))
	$4 = *(($0 + [216]))
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$22 }
	
.LOOP $label$80:
	$10 = ($8 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)$9) ){ goto $label$23 }
	$8 = $10
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$80 }
	goto $label$22 
	
.LABEL $label$26
	CALL _ZdlPv(*(($5 + [264])))
	if ( ((*($5 + [448]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$25
	CALL _ZdlPv(*(($5 + [456])))
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$2 }
	goto $label$9 
	
.LABEL $label$24
	*(($11 = (($5 + [176]) + [8]))) = *(($3 + [8]))
	*($5 + [176]) = *($3)
	*((($5 + [224]) + [8])) = *($11)
	*($5 + [224]) = *($5 + [176])
	$11 = CALL db_lowerbound_i64(*(($0 + [112])), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$81 }
	$8 = CALL $7($10, $11)
	
.LABEL $label$81
	$2 = *($0)
	*($5 + [368]) = ($5 + [224])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9141])
	CALL $37($10, $8, $2, ($5 + [368]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$23
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$22 }
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$7), [8530])
	goto $label$21 
	
.LABEL $label$22
	$11 = [0]
	$10 = CALL db_find_i64(*($7), *(($0 + [200])), (int_64)8428183903917109248, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$21 }
	$11 = CALL $38($7, $10)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$7), [8530])
	
.LABEL $label$21
	*((($5 + [368]) + [32])) = [0]
	*($5 + [384]) = (int_64)-1
	*($5 + [392]) = (int_64)0
	$2 = *($0)
	*($5 + [368]) = $2
	$1 = *($5 + [408])
	*($5 + [376]) = $1
	$8 = [0]
	$10 = *($5 + [436])
	$4 = CALL db_find_i64($2, $1, (int_64)-3020376800539705344, *($10))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$82 }
	$8 = CALL $9(($5 + [368]), $4)
	CALL eosio_assert(((int_32)*($8 + [68]) == (int_32)($5 + [368])), [8530])
	$10 = *($5 + [436])
	
.LABEL $label$82
	*((($5 + [328]) + [32])) = [0]
	*($5 + [344]) = (int_64)-1
	*($5 + [352]) = (int_64)0
	$2 = *($0)
	*($5 + [328]) = $2
	$1 = *($5 + [440])
	*($5 + [336]) = $1
	$10 = CALL db_find_i64($2, $1, (int_64)-3020376800539705344, *($10))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $9(($5 + [328]), $10)
	CALL eosio_assert(((int_32)*($4 + [68]) == (int_32)($5 + [328])), [8530])
	if ( ($8 | $11) ){ goto $label$13 }
	$1 = *($0)
	$2 = (int_64)6
	
.LOOP $label$83:
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$83 }
	*($5 + [280]) = (int_64)3617214756542218240
	*($5 + [272]) = $1
	$2 = (int_64)0
	$6 = (int_64)59
	$10 = [8265]
	$9 = (int_64)0
	
.LOOP $label$84:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$89 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$8 = ($8 + [-91])
	goto $label$87 
	
.LABEL $label$89
	$1 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$86
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$85
	$10 = ($10 + [1])
	$6 = ((int_64)$6 + (int_64)4294967291)
	$9 = ((int_64)$1 | (int_64)$9)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$84 }
	$2 = (int_64)0
	$6 = (int_64)59
	$10 = [8256]
	$13 = (int_64)0
	
.LOOP $label$90:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$95 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$94 }
	$8 = ($8 + [-91])
	goto $label$93 
	
.LABEL $label$95
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$94
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$93
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$92
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$91
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$90 }
	CALL $32(($5 + [208]), ($5 + [416]), [8634])
	$10 = *($5 + [416])
	$8 = ($10 & [1])
	$10 = CALL $107(($5 + [208]), ( *($5 + [424]) ? (($5 + [416]) | [1]) : $8 ), ( *($5 + [420]) ? uint_32($10 >> [1]) : $8 ))
	$8 = *($10 + [8])
	*($10 + [8]) = [0]
	$2 = *($10)
	*($10) = (int_64)0
	*(($5 + [248])) = *(($3 + [8]))
	*(($5 + [264])) = $8
	*($5 + [224]) = *($0)
	*($5 + [232]) = *($5 + [408])
	*($5 + [240]) = *($3)
	*($5 + [256]) = $2
	$10 = CALL $33(($5 + [288]), ($5 + [272]), $9, $13, ($5 + [224]))
	CALL $34(($5 + [448]), $10)
	$8 = *($5 + [448])
	CALL send_inline($8, (*($5 + [452]) - $8))
	$8 = *($5 + [448])
	if ( ($8 == 0) ){ goto $label$96 }
	*($5 + [452]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$96
	$8 = *($10 + [28])
	if ( ($8 == 0) ){ goto $label$97 }
	*(($10 + [32])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$97
	$8 = *($10 + [16])
	if ( ($8 == 0) ){ goto $label$98 }
	*(($10 + [20])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$98
	if ( ((*($5 + [256]) & [1]) == 0) ){ goto $label$99 }
	CALL _ZdlPv(*(($5 + [264])))
	
.LABEL $label$99
	if ( ((*($5 + [208]) & [1]) == 0) ){ goto $label$100 }
	CALL _ZdlPv(*($5 + [216]))
	
.LABEL $label$100
	$2 = *($0)
	*($5 + [292]) = ($5 + [440])
	*($5 + [288]) = ($5 + [408])
	CALL $39(($5 + [224]), $7, $2, ($5 + [288]))
	if ( (int_64)(*($4 + [48]) == 0) ){ goto $label$13 }
	$2 = *($0)
	CALL eosio_assert([1], [9141])
	CALL $40(($5 + [328]), $4, $2, ($5 + [224]))
	$2 = *($0)
	*($5 + [228]) = ($5 + [408])
	*($5 + [224]) = ($5 + [432])
	*($5 + [232]) = ($5 + [440])
	CALL $41(($5 + [288]), ($5 + [368]), $2, ($5 + [224]))
	if ( ((uint_64)*($4 + [56]) > (uint_64)(int_64)199) ){ goto $label$13 }
	$2 = CALL current_time()
	if ( ((int_64)*($0 + [56]) <= (int_64)((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$13 }
	$2 = *($0)
	CALL eosio_assert([1], [9141])
	CALL $42(($5 + [328]), $4, $2, ($5 + [224]))
	$11 = *($5 + [352])
	if ( $11 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$20
	$2 = *($0 + [88])
	
.LABEL $label$19
	$10 = [0]
	if ( ((int_64)$9 < (int_64)$2) ){ goto $label$101 }
	$10 = ((int_64)$9 <= (int_64)*($0 + [96]))
	
.LABEL $label$101
	CALL eosio_assert($10, [8873])
	$11 = *($5 + [248])
	if ( $11 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$8 = [0]
	
.LABEL $label$17
	CALL eosio_assert($8, [8448])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*($5 + [376])), [10012])
	$2 = (int_64)
	*($5 + [368]) = $2(*($5 + [368]) - $6))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((uint_64)((int_64)*(($0 + [88])) * (int_64)*(($7 + [56]))) >= (uint_64)$2), [8873])
	$2 = *($0)
	*($5 + [328]) = $0
	*($5 + [332]) = ($5 + [368])
	CALL eosio_assert([1], [9141])
	CALL $43(($5 + [224]), $7, $2, ($5 + [328]))
	$11 = *($5 + [248])
	if ( ($11 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$7 = ($5 + [252])
	$10 = *($7)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$103 }
	
.LOOP $label$104:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$105 }
	CALL _ZdlPv($8)
	
.LABEL $label$105
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$104 }
	$10 = *(($5 + [248]))
	goto $label$102 
	
.LABEL $label$103
	$10 = $11
	
.LABEL $label$102
	*($7) = $11
	CALL _ZdlPv($10)
	
.LABEL $label$15
	$1 = *($5 + [440])
	
.LABEL $label$14
	*(($8 = (($5 + [160]) + [8]))) = *(($3 + [8]))
	*($5 + [160]) = *($3)
	$10 = CALL $103(($5 + [144]), $4)
	*((($5 + [16]) + [8])) = *($8)
	*($5 + [16]) = *($5 + [160])
	CALL $44($0, $1, ($5 + [16]), $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($10 + [8]))
	goto $label$2 
	
.LABEL $label$13
	$11 = *($5 + [352])
	if ( ($11 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$0 = ($5 + [356])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$107 }
	
.LOOP $label$108:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$109 }
	CALL _ZdlPv($8)
	
.LABEL $label$109
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$108 }
	$10 = *(($5 + [352]))
	goto $label$106 
	
.LABEL $label$107
	$10 = $11
	
.LABEL $label$106
	*($0) = $11
	CALL _ZdlPv($10)
	
.LABEL $label$11
	$11 = *($5 + [392])
	if ( ($11 == 0) ){ goto $label$110 }
	$0 = ($5 + [396])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$112 }
	
.LOOP $label$113:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$114 }
	CALL _ZdlPv($8)
	
.LABEL $label$114
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$113 }
	$10 = *(($5 + [392]))
	goto $label$111 
	
.LABEL $label$112
	$10 = $11
	
.LABEL $label$111
	*($0) = $11
	CALL _ZdlPv($10)
	
.LABEL $label$110
	if ( ((*($5 + [416]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($5 + [424]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$10
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$9
	CALL _ZdlPv(*($5 + [280]))
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$2
	$global$0 = ($5 + [464])
	return 
	
.LABEL $label$1
	CALL $45($0, $1)
	$global$0 = ($5 + [464])
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	*($0 + [8]) = (int_64)0
	*(($1 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [32]))) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [64]))) = (int_64)1413956356
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$2 = $3
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$20 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [80]))) = (int_64)1413956356
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$2 = $3
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$25 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$4 = [0]
	
.LABEL $label$21
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [96]))) = (int_64)1413956356
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$29
	$2 = $3
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$30 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$4 = [0]
	
.LABEL $label$26
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [112]))) = (int_64)1413956356
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$2 = $3
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$35 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$4 = [0]
	
.LABEL $label$31
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [128]))) = (int_64)1413956356
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$39 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$39
	$2 = $3
	
.LOOP $label$40:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$40 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$4 = [0]
	
.LABEL $label$36
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [144]))) = (int_64)1397703940
	*($0 + [136]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$44
	$2 = $3
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$45 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$4 = [0]
	
.LABEL $label$41
	CALL eosio_assert($4, [8448])
	*(($1 = ($0 + [160]))) = (int_64)1397703940
	*($0 + [152]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$49 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$49
	$2 = $3
	
.LOOP $label$50:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$47 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$50 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$4 = [0]
	
.LABEL $label$46
	CALL eosio_assert($4, [8448])
	$2 = (int_64)0
	$3 = (int_64)59
	$1 = [8363]
	$6 = (int_64)0
	
.LOOP $label$51:
	$7 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$52 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$4 = ($4 + [-91])
	goto $label$53 
	
.LABEL $label$54
	$4 = ( ($4 + [-48]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$7 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$52
	$1 = ($1 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$3 = ((int_64)$3 + (int_64)4294967291)
	if ( ((int_64)$3 != (int_64)55834574842) ){ goto $label$51 }
	*(($0 + [168])) = $6
	$2 = (int_64)0
	$3 = (int_64)59
	$1 = [8363]
	$6 = (int_64)0
	
.LOOP $label$55:
	$7 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$56 }
	$4 = *($1)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$4 = ($4 + [-91])
	goto $label$57 
	
.LABEL $label$58
	$4 = ( ($4 + [-48]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$7 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$56
	$1 = ($1 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$3 = ((int_64)$3 + (int_64)4294967291)
	if ( ((int_64)$3 != (int_64)55834574842) ){ goto $label$55 }
	*(($0 + [176])) = $6
	return $0
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	$6 = ((int_64)((int_64)*($4 + [48]) * (int_64)*($4 + [24])) * (int_64)*($4 + [88]))
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$7 = (int_64)5523267
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $9
	$10 = [1]
	$11 = $8
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$10 = [1]
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [8448])
	*(($1 + [48])) = (int_64)1413956356
	*($1 + [40]) = $6
	*($1 + [184]) = *($4 + [56])
	*($1 + [192]) = ((int_64)*($4 + [80]) + (int_64)*($4 + [64]))
	$10 = $2
	$8 = ($10 + [-208])
	$global$0 = $8
	*($3 + [4]) = $8
	*($3) = $8
	*($3 + [8]) = ($10 + [-8])
	CALL $24($3, $1)
	$7 = *($1)
	*($1 + [204]) = CALL db_store_i64(*($5 + [8]), (int_64)7035924439720001536, *(*($0 + [8])), $7, $8, [200])
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$6 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

void .FUNC $10 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($5 = CALL _Znwj([80])) + [32]) = (int_64)1397703940
	*($5 + [24]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $6
	$7 = [1]
	$8 = $3
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [8448])
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [64]) = [0]
	*($5 + [68]) = $1
	CALL $19(($4 + [16]), $5)
	*($4 + [32]) = $5
	$2 = *($5)
	*($4 + [16]) = $2
	$7 = *($5 + [72])
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $7
	*($4 + [32]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $20(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$global$0 = ($4 + [48])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8376])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$5 }
	$2 = CALL $117($4)
	CALL db_get_i64($1, $2, $4)
	CALL $120($2)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	CALL db_get_i64($1, $2, $4)
	
.LABEL $label$4
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8468])
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $22(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $12 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([24])) + [8]) = $1
	CALL $21(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [12])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $22(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8468])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8468])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8468])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $96(*($1), ($0 + [32]))
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	*($1 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $109($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	*($1) = *(*(*(*($0 + [4])) + [4]))
	$4 = *($0)
	$5 = (int_64)0
	$6 = (int_64)59
	$7 = [8363]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$10 = *($7)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$10 = ($10 + [-91])
	goto $label$3 
	
.LABEL $label$4
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$1 }
	*($1 + [8]) = $8
	$5 = (int_64)0
	$6 = (int_64)59
	$7 = [8363]
	$8 = (int_64)0
	
.LOOP $label$5:
	$9 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$6 }
	$10 = *($7)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$10 = ($10 + [-91])
	goto $label$7 
	
.LABEL $label$8
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$5 }
	*($1 + [48]) = (int_64)100
	*($1 + [16]) = $8
	*($1 + [64]) = [1]
	$10 = $2
	$7 = ($10 + [-80])
	$global$0 = $7
	*($3 + [4]) = $7
	*($3) = $7
	*($3 + [8]) = ($10 + [-12])
	CALL $26($3, $1)
	$5 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020376800539705344, *(*($0 + [8])), $5, $7, [68])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	$1 = *($2)
	CALL eosio_assert([1], [8524])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8524])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)8428183903917109248, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $109($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $52 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [24]) = (int_64)0
	*(($4 = ($0 + [32]))) = (int_64)1397703940
	CALL eosio_assert([1], [8399])
	$5 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$7 = [1]
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [8448])
	*($0 + [56]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [68]) = $1
	$4 = *($2 + [4])
	*($0) = *(*(*($4) + [4]))
	*($0 + [8]) = *(*($4 + [4]))
	*($0 + [64]) = [1]
	*($0 + [16]) = *(*($4 + [8]))
	$4 = *($2)
	*($3 + [88]) = ($3 + [68])
	*($3 + [84]) = $3
	*($3 + [80]) = $3
	CALL $26(($3 + [80]), $0)
	$5 = *($0)
	*($0 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020376800539705344, *(*($2 + [8])), $5, $3, [68])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return $0
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$6 = *($3 + [4])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [160]))), [10012])
	$7 = (int_64)
	*($1 + [152]) = $7(*($1 + [152]) - *($3)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [10082])
	*($1 + [192]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)*($6 + [80]))
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	CALL $80($3, $1)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $48($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [8524])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [8524])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $79(CALL $78($2, $4), $7)
	$global$0 = ($2 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [64]))), [10012])
	$7 = (int_64)
	*($1 + [56]) = $7(*($1 + [56]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [10082])
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [96]))), [10012])
	$7 = (int_64)
	*($1 + [88]) = $7(*($1 + [88]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [10082])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))), [9719])
	$7 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $57 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [208])
	$global$0 = $4
	*($4 + [192]) = $1
	$5 = ($0 + [112])
	$6 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7($5, $7)
	
.LABEL $label$1
	*($4 + [184]) = $5
	*($4 + [188]) = $6
	*(($4 + [176])) = [0]
	*($4 + [160]) = (int_64)-1
	*($4 + [168]) = (int_64)0
	$8 = *($0)
	*($4 + [144]) = $8
	*($4 + [152]) = $1
	$7 = CALL db_find_i64($8, $1, (int_64)-3020376800539705344, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $9(($4 + [144]), $7) + [68]) == (int_32)($4 + [144])), [8530])
	$9 = *($4 + [168])
	if ( $9 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	*($4 + [140]) = [0]
	if ( (*($2) & [1]) ){ goto $label$6 }
	$2 = ($2 + [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($2 + [8])
	
.LABEL $label$5
	$7 = [0]
	
.LOOP $label$7:
	$9 = ($2 + $7)
	$10 = ($7 + [1])
	$7 = $10
	if ( *($9) ){ goto $label$7 }
	$11 = (CASTING uint_64)(uint_32 ($10 + [-1]))
	$1 = (int_64)0
	$8 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$8:
	$13 = (int_64)0
	if ( ((uint_64)$1 >= (uint_64)$11) ){ goto $label$9 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [-91])
	goto $label$10 
	
.LABEL $label$11
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$13 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$12 
	
.LABEL $label$13
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$12
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$8 }
	*($4 + [128]) = $12
	*(($4 + [120])) = [0]
	*($4 + [96]) = $12
	*($4 + [104]) = (int_64)-1
	$1 = (int_64)0
	*($4 + [112]) = (int_64)0
	$8 = *($0)
	*($4 + [88]) = $8
	$2 = CALL db_find_i64($8, $12, (int_64)-3020376800539705344, *($6))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$26 }
	$2 = CALL $9(($4 + [88]), $2)
	CALL eosio_assert(((int_32)*($2 + [68]) == (int_32)($4 + [88])), [8530])
	if ( (int_64)(*($2 + [48]) == 0) ){ goto $label$26 }
	if ( ((int_64)*($4 + [192]) != (int_64)*($4 + [128])) ){ goto $label$25 }
	
.LABEL $label$26
	$8 = (int_64)59
	$2 = [8363]
	$12 = (int_64)0
	
.LOOP $label$27:
	$13 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$28 }
	$7 = *($2)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$7 = ($7 + [-91])
	goto $label$29 
	
.LABEL $label$30
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$13 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$28
	$2 = ($2 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$27 }
	*($4 + [128]) = $12
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$1 = *($0)
	*($4 + [48]) = $1
	$7 = *($4 + [188])
	$8 = *($7 + [168])
	*($4 + [56]) = $8
	$2 = [0]
	$7 = CALL db_find_i64($1, $8, (int_64)-3020376800539705344, *($7))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$31 }
	$2 = CALL $9(($4 + [48]), $7)
	CALL eosio_assert(((int_32)*($2 + [68]) == (int_32)($4 + [48])), [8530])
	
.LABEL $label$31
	$7 = CALL db_lowerbound_i64(*($0 + [152]), *(($0 + [160])), (int_64)-5001621357587333120, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$16 }
	$6 = ($0 + [152])
	CALL $11($6, $7)
	if ( ($2 == 0) ){ goto $label$16 }
	$1 = *(*($4 + [188]) + [168])
	$7 = *(($0 + [180]))
	$10 = *(($0 + [176]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$23 }
	
.LOOP $label$32:
	$2 = ($7 + [-24])
	$9 = *($2)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$24 }
	$7 = $2
	if ( ((int_32)$10 != (int_32)$2) ){ goto $label$32 }
	goto $label$23 
	
.LABEL $label$25
	$1 = CALL current_time()
	if ( ((int_64)*($0 + [64]) <= (int_64)((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$14 }
	CALL eosio_assert([1], [9141])
	CALL $81(($4 + [88]), $2, $3, ($4 + [48]))
	goto $label$14 
	
.LABEL $label$24
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$23 }
	CALL eosio_assert(((int_32)*($9 + [8]) == (int_32)$6), [8530])
	*($4 + [40]) = $6
	$2 = (($4 + [40]) | [4])
	goto $label$22 
	
.LABEL $label$23
	$2 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-5001621357587333120, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$21 }
	$9 = CALL $11($6, $2)
	CALL eosio_assert(((int_32)*($9 + [8]) == (int_32)$6), [8530])
	*($4 + [40]) = $6
	$2 = (($4 + [40]) | [4])
	
.LABEL $label$22
	*($2) = $9
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$1 = *($0)
	*($4) = $1
	$8 = *($9)
	*($4 + [8]) = $8
	$2 = CALL db_find_i64($1, $8, (int_64)-3020376800539705344, *(*($4 + [188])))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$18 }
	$2 = CALL $9($4, $2)
	CALL eosio_assert(((int_32)*($2 + [68]) == (int_32)$4), [8530])
	*($4 + [128]) = *($2 + [8])
	if ( ((uint_64)*($2 + [48]) > (uint_64)(int_64)1) ){ goto $label$20 }
	$7 = [0]
	$1 = *($4 + [40])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$9 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($9), [9800])
	CALL eosio_assert($9, [9834])
	$9 = CALL db_next_i64(*($2 + [12]), ($4 + [200]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$33 }
	$7 = CALL $11((CASTING uint_32)(uint_64 $1), $9)
	
.LABEL $label$33
	CALL $82($6, $2)
	*($4 + [40]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)32) | (int_64)((int_64)$1 & (int_64)4294967295))
	goto $label$19 
	
.LABEL $label$21
	*($4 + [44]) = [0]
	*($4 + [40]) = $6
	$9 = *($4 + [72])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$20
	$2 = [0]
	CALL eosio_assert(((int_32)*($4 + [44]) != (int_32)[0]), [9834])
	$7 = CALL db_next_i64(*(*($4 + [44]) + [12]), ($4 + [200]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$34 }
	$2 = CALL $11(*($4 + [40]), $7)
	
.LABEL $label$34
	*($4 + [44]) = $2
	
.LABEL $label$19
	$2 = CALL db_lowerbound_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-5001621357587333120, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$36 }
	CALL $11($6, $2)
	$1 = *($0)
	$2 = *($4 + [188])
	if ( (*($4 + [44]) == 0) ){ goto $label$35 }
	*($4 + [200]) = ($4 + [40])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9141])
	CALL $83($5, $2, $1, ($4 + [200]))
	$9 = *($4 + [24])
	if ( $9 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$36
	$1 = *($0)
	$2 = *($4 + [188])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9141])
	CALL $84($5, $2, $1, ($4 + [200]))
	$9 = *($4 + [24])
	if ( $9 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$35
	*($4 + [200]) = $0
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9141])
	CALL $85($5, $2, $1, ($4 + [200]))
	
.LABEL $label$18
	$9 = *($4 + [24])
	if ( ($9 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$10 = ($4 + [28])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$38 }
	
.LOOP $label$39:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$40 }
	CALL _ZdlPv($7)
	
.LABEL $label$40
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$39 }
	$2 = *(($4 + [24]))
	goto $label$37 
	
.LABEL $label$38
	$2 = $9
	
.LABEL $label$37
	*($10) = $9
	CALL _ZdlPv($2)
	
.LABEL $label$16
	$9 = *($4 + [72])
	if ( ($9 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$10 = ($4 + [76])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$42 }
	
.LOOP $label$43:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	CALL _ZdlPv($7)
	
.LABEL $label$44
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$43 }
	$2 = *(($4 + [72]))
	goto $label$41 
	
.LABEL $label$42
	$2 = $9
	
.LABEL $label$41
	*($10) = $9
	CALL _ZdlPv($2)
	
.LABEL $label$14
	$2 = [0]
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$1 = *($0)
	*($4 + [48]) = $1
	$8 = *($4 + [128])
	*($4 + [56]) = $8
	$7 = CALL db_find_i64($1, $8, (int_64)-3020376800539705344, *(*($4 + [188])))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$45 }
	$2 = CALL $9(($4 + [48]), $7)
	CALL eosio_assert(((int_32)*($2 + [68]) == (int_32)($4 + [48])), [8530])
	
.LABEL $label$45
	if ( (int_64)(*($2 + [48]) == 0) ){ goto $label$46 }
	*($4 + [140]) = [1]
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [9141])
	CALL $86(($4 + [48]), $2, $3, $4)
	
.LABEL $label$46
	*($4 + [4]) = ($4 + [192])
	*($4) = ($4 + [184])
	*($4 + [8]) = ($4 + [128])
	*($4 + [12]) = ($4 + [140])
	CALL $87(($4 + [200]), ($4 + [144]), $3, $4)
	$9 = *($4 + [72])
	if ( ($9 == 0) ){ goto $label$47 }
	$10 = ($4 + [76])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$49 }
	
.LOOP $label$50:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$51 }
	CALL _ZdlPv($7)
	
.LABEL $label$51
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$50 }
	$2 = *(($4 + [72]))
	goto $label$48 
	
.LABEL $label$49
	$2 = $9
	
.LABEL $label$48
	*($10) = $9
	CALL _ZdlPv($2)
	
.LABEL $label$47
	$9 = *($4 + [112])
	if ( ($9 == 0) ){ goto $label$52 }
	$10 = ($4 + [116])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$54 }
	
.LOOP $label$55:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$56 }
	CALL _ZdlPv($7)
	
.LABEL $label$56
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$55 }
	$2 = *(($4 + [112]))
	goto $label$53 
	
.LABEL $label$54
	$2 = $9
	
.LABEL $label$53
	*($10) = $9
	CALL _ZdlPv($2)
	
.LABEL $label$52
	$9 = *($4 + [168])
	if ( ($9 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$10 = ($4 + [172])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$9) ){ goto $label$58 }
	
.LOOP $label$59:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$60 }
	CALL _ZdlPv($7)
	
.LABEL $label$60
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$59 }
	$2 = *(($4 + [168]))
	goto $label$57 
	
.LABEL $label$58
	$2 = $9
	
.LABEL $label$57
	*($10) = $9
	CALL _ZdlPv($2)
	
.LABEL $label$2
	$global$0 = ($4 + [208])
}

int_32 .FUNC $116 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $117 (int_32 $0)
{
	return CALL $118([11016], $0)
}

int_64 .FUNC $114 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

void .FUNC $35 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = $1
	$4 = ($0 + [112])
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $7($4, $6)
	
.LABEL $label$1
	if ( ((int_64)*($5 + [176]) != (int_64)$1) ){ goto $label$2 }
	$1 = *($0)
	*($3 + [8]) = $2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9141])
	CALL $73($4, $5, $1, ($3 + [8]))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($5 + [128]))), [9082])
	if ( ((int_64)*($2) <= (int_64)*($5 + [120])) ){ goto $label$3 }
	CALL $28($0, *(($5 + [176])))
	$1 = *($0)
	*($3 + [8]) = $2
	*($3 + [16]) = $0
	*($3 + [12]) = ($3 + [24])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9141])
	CALL $74($4, $5, $1, ($3 + [8]))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [10704])
	$global$0 = ($3 + [32])
}

int_64 .FUNC $112 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $114($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $111($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [19440])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [19424]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [19456]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $113($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

int_64 .FUNC $113 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

void .FUNC $110 (int_32 $0)
{
}

int_64 .FUNC $111 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $119($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [19472])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $119 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11008]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11012])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [11008]) = [1]
	$2 = ($2 << [16])
	*([0] + [11012]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11012])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [11012]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [11008]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [11008]) = [1]
	$3 = ($3 << [16])
	*([0] + [11012]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11012])
	
.LABEL $label$10
	*([0] + [11012]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $29 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = ($0 + [112])
	$4 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $7($3, $5)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($4 + [176]) == (int_64)$1), [9369])
	*(($2 + [136])) = *(($4 + [160]))
	$6 = ((int_64)*($4 + [152]) / (int_64)10)
	*($2 + [128]) = $6
	$7 = CALL current_time()
	if ( ((uint_64)*($4 + [192]) > (uint_64)((int_64)((uint_64)$7 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$3 }
	$8 = ((int_64)*($0 + [88]) * (int_64)10)
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$7 = $9
	$10 = [1]
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$7 = $9
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$8 }
	$10 = [1]
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$10 = [0]
	
.LABEL $label$4
	CALL eosio_assert($10, [8448])
	CALL eosio_assert(((int_64)*($2 + [136]) == (int_64)1397703940), [9082])
	if ( ((int_64)$6 < (int_64)$8) ){ goto $label$3 }
	$7 = *($0)
	*($2 + [28]) = $0
	*($2 + [24]) = ($2 + [128])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9141])
	CALL $53($3, $4, $7, ($2 + [24]))
	$9 = *($0)
	$7 = (int_64)6
	
.LOOP $label$9:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$9 }
	*($2 + [80]) = (int_64)3617214756542218240
	*($2 + [72]) = $9
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [8265]
	$8 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$15 }
	$10 = *($5)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$10 = ($10 + [-91])
	goto $label$13 
	
.LABEL $label$15
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$11
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)4294967291)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$10 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [8256]
	$12 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$21 }
	$10 = *($5)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$10 = ($10 + [-91])
	goto $label$19 
	
.LABEL $label$21
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$17
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$12 = ((int_64)$9 | (int_64)$12)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$16 }
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$5 = CALL $116([9406])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$24 }
	*($2 + [8]) = ($5 << [1])
	$10 = (($2 + [8]) | [1])
	if ( $5 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$11 = (($5 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($2 + [8]) = ($11 | [1])
	*($2 + [16]) = $10
	*($2 + [12]) = $5
	
.LABEL $label$23
	CALL memcpy($10, [9406], $5)
	
.LABEL $label$22
	*(($10 + $5)) = [0]
	*(($2 + [48])) = *((($2 + [128]) + [8]))
	$5 = (($2 + [8]) + [8])
	*(($2 + [64])) = *($5)
	*($5) = [0]
	*($2 + [32]) = $1
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($2 + [128])
	*($2 + [56]) = *($2 + [8])
	*($2 + [8]) = (int_64)0
	$5 = CALL $33(($2 + [88]), ($2 + [72]), $8, $12, ($2 + [24]))
	CALL $34(($2 + [144]), $5)
	$10 = *($2 + [144])
	CALL send_inline($10, (*($2 + [148]) - $10))
	$10 = *($2 + [144])
	if ( ($10 == 0) ){ goto $label$25 }
	*($2 + [148]) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$25
	$10 = *($5 + [28])
	if ( ($10 == 0) ){ goto $label$26 }
	*(($5 + [32])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$26
	$10 = *($5 + [16])
	if ( ($10 == 0) ){ goto $label$27 }
	*(($5 + [20])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$27
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*(($2 + [64])))
	
.LABEL $label$28
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$3
	$global$0 = ($2 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $102(($2 + [8]))
}

void .FUNC $28 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [176])
	$global$0 = $2
	$3 = ($0 + [112])
	$4 = [0]
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $7($3, $6)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($5 + [176]) == (int_64)$1), [9451])
	*(($2 + [152])) = *(($5 + [128]))
	*($2 + [144]) = *($5 + [120])
	$7 = *($0)
	$8 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($8, [9141])
	CALL $54($3, $5, $7, ($2 + [24]))
	$9 = ((int_64)*($0 + [88]) * (int_64)1000)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$7 = (int_64)5523267
	
.LOOP $label$3:
	$10 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $11
	$10 = [1]
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$12 = ($4 + [1])
	$4 = $12
	if ( $6 ){ goto $label$5 }
	$10 = [1]
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($10, [8448])
	CALL eosio_assert(((int_64)*($2 + [152]) == (int_64)1413956356), [9082])
	if ( ((int_64)*($2 + [144]) >= (int_64)$9) ){ goto $label$19 }
	CALL eosio_assert([1], [8399])
	$7 = (int_64)5523267
	$4 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$7 = $11
	$6 = [1]
	$12 = $4
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$21
	$7 = $11
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$12 = ($4 + [1])
	$4 = $12
	if ( $6 ){ goto $label$22 }
	$6 = [1]
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$19
	$6 = (($2 + [144]) + [8])
	*(($4 = (($2 + [128]) + [8]))) = *($6)
	*($2 + [128]) = *($2 + [144])
	CALL eosio_assert([1], [9679])
	$7 = *($2 + [128])
	CALL eosio_assert([1], [9694])
	*($2 + [128]) = ((int_64)$7 / (int_64)10)
	CALL eosio_assert(((int_64)*($4) == (int_64)*($6)), [10012])
	$7 = (int_64)
	*($2 + [144]) = $7(*($2 + [144]) - *($2 + [128])))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($2 + [144]) < (int_64)4611686018427387904), [10082])
	$7 = *($0)
	*($2 + [24]) = ($2 + [128])
	CALL eosio_assert($8, [9141])
	CALL $55($3, $5, $7, ($2 + [24]))
	$11 = *($0)
	$7 = (int_64)6
	
.LOOP $label$23:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$23 }
	*($2 + [80]) = (int_64)3617214756542218240
	*($2 + [72]) = $11
	$7 = (int_64)0
	$11 = (int_64)59
	$4 = [8298]
	$13 = (int_64)0
	
.LOOP $label$24:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$25 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$6 = ($6 + [-91])
	goto $label$26 
	
.LABEL $label$27
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$25
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$24 }
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [8256]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$33 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [-91])
	goto $label$31 
	
.LABEL $label$33
	$11 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$28 }
	$7 = (int_64)0
	$11 = (int_64)59
	$4 = [9487]
	$15 = (int_64)0
	
.LOOP $label$34:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$35 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$6 = ($6 + [-91])
	goto $label$36 
	
.LABEL $label$37
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$35
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$15 = ((int_64)$9 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$34 }
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $116([9500])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$16 }
	*($2 + [8]) = ($4 << [1])
	$6 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	$6 = [0]
	
.LABEL $label$17
	CALL eosio_assert($6, [8448])
	CALL eosio_assert(((int_64)*(($2 + [152])) == (int_64)1413956356), [9082])
	if ( ((int_64)*($2 + [144]) < (int_64)1) ){ goto $label$10 }
	$7 = *($0)
	*($2 + [24]) = ($2 + [144])
	CALL eosio_assert($8, [9141])
	CALL $56($3, $5, $7, ($2 + [24]))
	$11 = *($0)
	$7 = (int_64)6
	
.LOOP $label$38:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$38 }
	*($2 + [136]) = (int_64)3617214756542218240
	*($2 + [128]) = $11
	$7 = (int_64)0
	$11 = (int_64)59
	$4 = [8298]
	$13 = (int_64)0
	
.LOOP $label$39:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$40 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$6 = ($6 + [-91])
	goto $label$41 
	
.LABEL $label$42
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$40
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$39 }
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [8256]
	$14 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$48 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$6 = ($6 + [-91])
	goto $label$46 
	
.LABEL $label$48
	$11 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$43 }
	$7 = (int_64)0
	$11 = (int_64)59
	$4 = [9487]
	$15 = (int_64)0
	
.LOOP $label$49:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$50 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$6 = ($6 + [-91])
	goto $label$51 
	
.LABEL $label$52
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$50
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$15 = ((int_64)$9 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$49 }
	*(($2 + [168])) = [0]
	*($2 + [160]) = (int_64)0
	$4 = CALL $116([9645])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$13 }
	*($2 + [160]) = ($4 << [1])
	$6 = (($2 + [160]) | [1])
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$12 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($2 + [8]) = ($12 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $4
	
.LABEL $label$15
	CALL memcpy($6, [9500], $4)
	
.LABEL $label$14
	*(($6 + $4)) = [0]
	*(($2 + [48])) = *((($2 + [128]) + [8]))
	$4 = (($2 + [8]) + [8])
	*(($2 + [64])) = *($4)
	*($4) = [0]
	*($2 + [32]) = $15
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($2 + [128])
	*($2 + [56]) = *($2 + [8])
	*($2 + [8]) = (int_64)0
	$4 = CALL $33(($2 + [88]), ($2 + [72]), $13, $14, ($2 + [24]))
	CALL $34(($2 + [160]), $4)
	$6 = *($2 + [160])
	CALL send_inline($6, (*($2 + [164]) - $6))
	$6 = *($2 + [160])
	if ( ($6 == 0) ){ goto $label$53 }
	*($2 + [164]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$53
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$54 }
	*(($4 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$54
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$55 }
	*(($4 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$55
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$56 }
	CALL _ZdlPv(*(($2 + [64])))
	
.LABEL $label$56
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$57 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$57
	$11 = *($0)
	$7 = (int_64)6
	
.LOOP $label$58:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$58 }
	*($2 + [80]) = (int_64)3617214756542218240
	*($2 + [72]) = $11
	$7 = (int_64)0
	$11 = (int_64)59
	$4 = [8298]
	$13 = (int_64)0
	
.LOOP $label$59:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$60 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$6 = ($6 + [-91])
	goto $label$61 
	
.LABEL $label$62
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$60
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$59 }
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [8256]
	$14 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$68 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$6 = ($6 + [-91])
	goto $label$66 
	
.LABEL $label$68
	$11 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$64
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$63 }
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $116([9546])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$71 }
	*($2 + [8]) = ($4 << [1])
	$6 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$12 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($2 + [8]) = ($12 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $4
	
.LABEL $label$70
	CALL memcpy($6, [9546], $4)
	
.LABEL $label$69
	*(($6 + $4)) = [0]
	*(($2 + [48])) = *((($2 + [144]) + [8]))
	$4 = (($2 + [8]) + [8])
	*(($2 + [64])) = *($4)
	*($4) = [0]
	*($2 + [32]) = $1
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($2 + [144])
	*($2 + [56]) = *($2 + [8])
	*($2 + [8]) = (int_64)0
	$4 = CALL $33(($2 + [88]), ($2 + [72]), $13, $14, ($2 + [24]))
	CALL $34(($2 + [160]), $4)
	$6 = *($2 + [160])
	CALL send_inline($6, (*($2 + [164]) - $6))
	$6 = *($2 + [160])
	if ( ($6 == 0) ){ goto $label$72 }
	*($2 + [164]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$72
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$73 }
	*(($4 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$73
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$74 }
	*(($4 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$74
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$75 }
	CALL _ZdlPv(*(($2 + [64])))
	
.LABEL $label$75
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$76 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$76
	$11 = *($0)
	$7 = (int_64)6
	
.LOOP $label$77:
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$77 }
	*($2 + [80]) = (int_64)3617214756542218240
	*($2 + [72]) = $11
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [8265]
	$13 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$83 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$6 = ($6 + [-91])
	goto $label$81 
	
.LABEL $label$83
	$11 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$79
	$4 = ($4 + [1])
	$9 = ((int_64)$9 + (int_64)4294967291)
	$13 = ((int_64)$11 | (int_64)$13)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$78 }
	$7 = (int_64)0
	$9 = (int_64)59
	$4 = [8256]
	$14 = (int_64)0
	
.LOOP $label$84:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$89 }
	$6 = *($4)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$88 }
	$6 = ($6 + [-91])
	goto $label$87 
	
.LABEL $label$89
	$11 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	$6 = ( ($6 + [-48]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$87
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$86
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$85
	$4 = ($4 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$84 }
	CALL eosio_assert([1], [8399])
	$7 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$92:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$91 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$93 }
	$7 = $11
	$6 = [1]
	$12 = $4
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$93
	$7 = $11
	
.LOOP $label$94:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$91 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$12 = ($4 + [1])
	$4 = $12
	if ( $6 ){ goto $label$94 }
	$6 = [1]
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$91
	$6 = [0]
	
.LABEL $label$90
	CALL eosio_assert($6, [8448])
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $116([9546])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$97 }
	*($2 + [8]) = ($4 << [1])
	$6 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$97
	$12 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($2 + [8]) = ($12 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $4
	
.LABEL $label$96
	CALL memcpy($6, [9546], $4)
	
.LABEL $label$95
	*(($6 + $4)) = [0]
	*(($2 + [48])) = (int_64)1397703940
	$4 = ($2 + [16])
	*(($2 + [64])) = *($4)
	*($4) = [0]
	*($2 + [32]) = $1
	*($2 + [40]) = (int_64)1
	*($2 + [24]) = *($0)
	*($2 + [56]) = *($2 + [8])
	*($2 + [8]) = (int_64)0
	$4 = CALL $33(($2 + [88]), ($2 + [72]), $13, $14, ($2 + [24]))
	CALL $34(($2 + [160]), $4)
	$6 = *($2 + [160])
	CALL send_inline($6, (*($2 + [164]) - $6))
	$6 = *($2 + [160])
	if ( ($6 == 0) ){ goto $label$98 }
	*($2 + [164]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$98
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$99 }
	*(($4 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$99
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$100 }
	*(($4 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$100
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$101 }
	CALL _ZdlPv(*(($2 + [64])))
	
.LABEL $label$101
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$102 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$102
	CALL $29($0, *(($5 + [176])))
	$global$0 = ($2 + [176])
	return (unreachable)
	
.LABEL $label$13
	$12 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($2 + [160]) = ($12 | [1])
	*($2 + [168]) = $6
	*($2 + [164]) = $4
	
.LABEL $label$12
	CALL memcpy($6, [9645], $4)
	
.LABEL $label$11
	*(($6 + $4)) = [0]
	*(($2 + [48])) = *((($2 + [144]) + [8]))
	$4 = (($2 + [160]) + [8])
	*(($2 + [64])) = *($4)
	*($4) = [0]
	*($2 + [32]) = $15
	*($2 + [24]) = *($0)
	*($2 + [40]) = *($2 + [144])
	*($2 + [56]) = *($2 + [160])
	*($2 + [160]) = (int_64)0
	$4 = CALL $33(($2 + [88]), ($2 + [128]), $13, $14, ($2 + [24]))
	CALL $34(($2 + [72]), $4)
	$6 = *($2 + [72])
	CALL send_inline($6, (*($2 + [76]) - $6))
	$6 = *($2 + [72])
	if ( ($6 == 0) ){ goto $label$103 }
	*($2 + [76]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$103
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$104 }
	*(($4 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$104
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$105 }
	*(($4 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$105
	if ( ((*(($2 + [56])) & [1]) == 0) ){ goto $label$106 }
	CALL _ZdlPv(*(($2 + [64])))
	
.LABEL $label$106
	if ( ((*($2 + [160]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($2 + [168])))
	
.LABEL $label$10
	$global$0 = ($2 + [176])
	return (unreachable)
	
.LABEL $label$9
	CALL $102(($2 + [8]))
	
.LABEL $label$8
	CALL $102(($2 + [8]))
	
.LABEL $label$7
	CALL $102(($2 + [8]))
	
.LABEL $label$6
	CALL $102(($2 + [160]))
	(unreachable)
	(unreachable)
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [64]))), [10012])
	$7 = (int_64)
	*($1 + [56]) = $7(*($1 + [56]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [10082])
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [96]))), [10012])
	$7 = (int_64)
	*($1 + [88]) = $7(*($1 + [88]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [10082])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))), [9719])
	$7 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $105($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = $global$0
	$3 = $2
	$4 = *($0)
	$5 = (int_64)0
	$6 = (int_64)59
	$7 = [8363]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$10 = *($7)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$10 = ($10 + [-91])
	goto $label$3 
	
.LABEL $label$4
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$1 }
	*($1) = $8
	$7 = ($2 + [-16])
	$global$0 = $7
	CALL eosio_assert([1], [8524])
	CALL memcpy($7, $1, [8])
	$5 = *($1)
	*($1 + [12]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001621357587333120, *(*($0 + [8])), $5, $7, [8])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = $3
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $109($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8468])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [144]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [152]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [160]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [184]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [192]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $109($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8468])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8468])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [8468])
	CALL memcpy(($1 + [64]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [144]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [152]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [176]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [184]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [192]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $27 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_64 $31
	float_64 $32
	float_64 $33
	float_64 $34
	float_64 $35
	int_64 $36
	$4 = ($global$0 - [320])
	$global$0 = $4
	$6 = *($0 + [88])
	$5 = *($2)
	CALL eosio_assert((((int_64)$5 >= (int_64)$6) & ((int_64)$5 <= (int_64)((int_64)$6 * (int_64)10000))), [10756])
	$7 = *($0 + [88])
	$8 = ((int_64)$7 * (int_64)2000)
	CALL eosio_assert((uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$9 = [0]
	$6 = (int_64)5523267
	$10 = (int_64)1413956356
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$5 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [8448])
	$14 = *($2 + [8])
	CALL eosio_assert(((int_64)$7 != (int_64)0), [9679])
	CALL eosio_assert(((int_64)$14 == (int_64)1413956356), [9082])
	*($4 + [296]) = (int_64)1397703940
	*($4 + [288]) = (int_64)0
	CALL eosio_assert([1], [8399])
	$15 = ((int_64)$5 / (int_64)$8)
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $11
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$10 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$12 = [0]
	
.LABEL $label$6
	CALL eosio_assert($12, [8448])
	$16 = ($0 + [112])
	$17 = (int_64)0
	$18 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	$18 = CALL $7($16, $9)
	
.LABEL $label$11
	$6 = *(($18 + [16]))
	$19 = *($18 + [8])
	*(($9 = (($4 + [272]) + [8]))) = *(($18 + [64]))
	*($4 + [272]) = *($18 + [56])
	*(($12 = (($4 + [256]) + [8]))) = *(($18 + [80]))
	*($4 + [256]) = *($18 + [72])
	$20 = *($9)
	*((($4 + [240]) + [8])) = $20
	*($4 + [240]) = *($4 + [272])
	$21 = *($12)
	CALL eosio_assert(((int_64)$20 == (int_64)$21), [10012])
	$22 = *($4 + [256])
	$23 = (int_64)
	*($4 + [240]) = $23(*($4 + [240]) - $22))
	CALL eosio_assert(((int_64)$23 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$23 < (int_64)4611686018427387904), [10082])
	if ( ((int_64)$15 < (int_64)0) ){ goto $label$13 }
	$24 = ((int_64)1397703940 == (int_64)1397703940)
	$25 = ((int_64)$6 == (int_64)1397703940)
	$26 = ((int_64)$14 == (int_64)1413956356)
	$27 = ($0 + [8])
	$28 = ($0 + [16])
	$29 = ($0 + [88])
	$30 = ($0 + [32])
	$17 = (int_64)0
	$6 = (int_64)0
	$7 = $5
	
.LOOP $label$14:
	$31 = $6
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$16:
	$2 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$6 = $11
	$2 = [1]
	$12 = $9
	$9 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$6 = $11
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$18 }
	$2 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$15
	CALL eosio_assert($2, [8448])
	CALL eosio_assert($26, [9082])
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$12 }
	CALL eosio_assert(((int_64)$10 == (int_64)$14), [9082])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$23 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [9018])
	$6 = *($27)
	$11 = *($28)
	$34 = (CASTING float_64)(int_64 $6)
	$33 = (CASTING float_64)(int_64 $11)
	$32 = (CASTING float_64)(int_64 $23)
	$35 = ((float_64)((float_64)((float_64)(float_64)1 / (float_64)((float_64)CALL $112((float_64)2.71828182845904, ((float_64)(float_64))(((float_64)$32 / (float_64)(CASTING float_64)(int_64 *($29))) - (CASTING float_64)(int_64 *(($0 + [24])))) / (float_64)(CASTING float_64)(int_64 *($30)))) + (float_64)(float_64)1)) * (float_64)$33) + (float_64)$34
	CALL eosio_assert((((float_64)$35) <= (float_64)((float_64)$33 + (float_64)$34)) & ((float_64)$35 >= (float_64)$34)), [9018])
	$9 = ((int_64)$8 > (int_64)$7)
	$8 = ( $7 ? $8 : $9 )
	$35 = (CASTING float_64)(int_64 $8)
	$34 = ((float_64)((float_64)$35 / (float_64)(float_64)100) * (float_64)$32)
	$32 = ((float_64)((float_64)(CASTING float_64)(int_64 $19) / (float_64)$34) * (float_64)$35)
	if ( ((float_64)(float_64)|$32| < (float_64)(float_64)9223372036854775808) ){ goto $label$20 }
	$36 = (int_64)-9223372036854775808
	goto $label$19 
	
.LABEL $label$20
	$36 = (Rounds 0)($32)
	
.LABEL $label$19
	CALL eosio_assert((uint_64)(((int_64)$36 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$10 = ( $14 ? $10 : $9 )
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$6 = $11
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$25 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$12 = [0]
	
.LABEL $label$21
	CALL eosio_assert($12, [8448])
	CALL eosio_assert($25, [10012])
	$19 = (int_64)
	CALL eosio_assert(((int_64)$19($19 - $36)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$6 = $11
	$2 = [1]
	$12 = $9
	$9 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$31
	$6 = $11
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$32 }
	$2 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$29 }
	
.LABEL $label$30
	CALL eosio_assert($2, [8448])
	CALL eosio_assert($25, [9082])
	if ( ((int_64)$19 <= (int_64)-1) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL eosio_assert([0], [8448])
	CALL eosio_assert($25, [9082])
	if ( ((int_64)$19 > (int_64)-1) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [10789])
	
.LABEL $label$26
	$34 = ((float_64)(CASTING float_64)(int_64 $19) / (float_64)$34)
	$35 = ((float_64)$34 * (float_64)$35)
	if ( ((float_64)(float_64)|$35| < (float_64)(float_64)9223372036854775808) ){ goto $label$34 }
	$36 = (int_64)-9223372036854775808
	goto $label$33 
	
.LABEL $label$34
	$36 = (Rounds 0)($35)
	
.LABEL $label$33
	CALL eosio_assert((uint_64)(((int_64)$36 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$6 = $11
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$39 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	$12 = [0]
	
.LABEL $label$35
	CALL eosio_assert($12, [8448])
	CALL eosio_assert($24, [9719])
	$17 = ((int_64)$17 + (int_64)$36)
	*($4 + [288]) = $17
	CALL eosio_assert(((int_64)$17 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$17 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$10 == (int_64)$20), [10012])
	$23 = (int_64)
	*($4 + [240]) = $23($23 - $8))
	CALL eosio_assert(((int_64)$23 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$23 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$10 == (int_64)$14), [10012])
	$7 = (int_64)
	CALL eosio_assert(((int_64)$7($7 - $8)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$10 == (int_64)$21), [9719])
	$22 = ((int_64)$22 + (int_64)$8)
	*($4 + [256]) = $22
	CALL eosio_assert(((int_64)$22 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((float_64)$34 >= (float_64)(float_64)0), [10171])
	$6 = ((int_64)$31 + (int_64)1)
	if ( ((int_64)$31 < (int_64)$15) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$7 = $5
	
.LABEL $label$12
	$23 = ((int_64)*(($0 + [88])) * (int_64)100)
	CALL eosio_assert((uint_64)(((int_64)$23 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$6 = $11
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$44 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$12 = [0]
	
.LABEL $label$40
	CALL eosio_assert($12, [8448])
	$2 = ((int_64)1397703940 == (int_64)1397703940)
	CALL eosio_assert($2, [9082])
	if ( ((int_64)$17 <= (int_64)$23) ){ goto $label$46 }
	CALL eosio_assert([0], [10814])
	goto $label$45 
	
.LABEL $label$46
	$23 = *(($0 + [88]))
	CALL eosio_assert((uint_64)(((int_64)$23 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$50 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$50
	$6 = $11
	
.LOOP $label$51:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$48 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$51 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	$12 = [0]
	
.LABEL $label$47
	CALL eosio_assert($12, [8448])
	CALL eosio_assert($2, [9082])
	CALL eosio_assert(((int_64)$17 >= (int_64)$23), [10814])
	
.LABEL $label$45
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$54:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$53 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$55 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$55
	$6 = $11
	
.LOOP $label$56:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$53 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$56 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	$12 = [0]
	
.LABEL $label$52
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)$14 == (int_64)1413956356), [9082])
	$9 = [0]
	if ( ((int_64)$7 < (int_64)0) ){ goto $label$57 }
	CALL eosio_assert([1], [9082])
	$9 = ((int_64)$5 >= (int_64)$7)
	
.LABEL $label$57
	CALL eosio_assert($9, [10845])
	CALL eosio_assert([1], [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($5 - $7)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)*(($18 + [80])) == (int_64)$21), [10012])
	$11 = (int_64)
	CALL eosio_assert(((int_64)$11($22 - *($18 + [72]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [10082])
	CALL eosio_assert(((int_64)$14 == (int_64)$21), [9082])
	CALL eosio_assert(((int_64)$6 == (int_64)$11), [10869])
	CALL eosio_assert(((int_64)*(($18 + [16])) == (int_64)1397703940), [9082])
	CALL eosio_assert(((int_64)*(($18 + [8])) >= (int_64)$17), [10789])
	*(($4 + [232])) = [0]
	*($4 + [216]) = (int_64)-1
	*($4 + [224]) = (int_64)0
	$6 = *($0)
	*($4 + [200]) = $6
	*($4 + [208]) = $1
	$9 = CALL db_find_i64($6, $1, (int_64)-3020376800539705344, *($18))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$59 }
	$13 = CALL $9(($4 + [200]), $9)
	CALL eosio_assert(((int_32)*($13 + [68]) == (int_32)($4 + [200])), [8530])
	$6 = CALL current_time()
	CALL eosio_assert(((uint_64)((int_64)*($0 + [72]) + (int_64)*($13 + [40])) <= (uint_64)((int_64)((uint_64)$6 / (uint_64)(int_64)1000000) & (int_64)4294967295)), [10134])
	$6 = *($0)
	CALL eosio_assert([1], [9141])
	CALL $75(($4 + [200]), $13, $6, ($4 + [32]))
	goto $label$58 
	
.LABEL $label$59
	$9 = CALL $103(($4 + [184]), $3)
	CALL $57($0, $1, $9, *($0))
	if ( ((*($9) & [1]) == 0) ){ goto $label$60 }
	CALL _ZdlPv(*($9 + [8]))
	
.LABEL $label$60
	$6 = *($18)
	$12 = *(($4 + [228]))
	$2 = *(($4 + [224]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$61 }
	
.LOOP $label$63:
	$9 = ($12 + [-24])
	$13 = *($9)
	if ( ((int_64)*($13) == (int_64)$6) ){ goto $label$62 }
	$12 = $9
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$61 }
	CALL eosio_assert(((int_32)*($13 + [68]) == (int_32)($4 + [200])), [8530])
	goto $label$58 
	
.LABEL $label$61
	$13 = [0]
	$9 = CALL db_find_i64(*($4 + [200]), *(($4 + [208])), (int_64)-3020376800539705344, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$58 }
	$13 = CALL $9(($4 + [200]), $9)
	CALL eosio_assert(((int_32)*($13 + [68]) == (int_32)($4 + [200])), [8530])
	
.LABEL $label$58
	$19 = *((($4 + [288]) + [8]))
	*(($9 = (($4 + [168]) + [8]))) = $19
	$6 = *($4 + [288])
	*($4 + [168]) = ((int_64)((int_64)$6 + (int_64)99) / (int_64)100)
	CALL eosio_assert([1], [10012])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($6 - *($4 + [168]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [10082])
	$11 = *($0)
	*($4 + [36]) = ($4 + [256])
	*($4 + [32]) = ($4 + [288])
	*($4 + [40]) = ($4 + [240])
	$12 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($12, [9141])
	CALL $76($16, $18, $11, ($4 + [32]))
	$11 = *($9)
	*((($4 + [152]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [168])
	*($4) = $11
	*($4 + [152]) = $11
	CALL $66($0, $1, $4)
	$13 = *($13 + [64])
	*($4 + [168]) = ((int_64)((int_64)$6 + (int_64)( (int_64)99 ? (int_64)49 : $13 )) / (int_64)( (int_64)100 ? (int_64)50 : $13 ))
	$11 = *($9)
	*((($4 + [136]) + [8])) = $11
	*($4 + [136]) = *($4 + [168])
	CALL eosio_assert(((int_64)$11 == (int_64)$19), [10012])
	$17 = (int_64)
	CALL eosio_assert(((int_64)$17($6 - *($4 + [168]))) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$17 < (int_64)4611686018427387904), [10082])
	$6 = *($0)
	*($4 + [36]) = ($4 + [136])
	*($4 + [32]) = ($4 + [168])
	CALL eosio_assert($12, [9141])
	CALL $77($16, $18, $6, ($4 + [32]))
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5523267
	$9 = [0]
	
.LOOP $label$66:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$65 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$67 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$67
	$6 = $11
	
.LOOP $label$68:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$65 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$68 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$65
	$12 = [0]
	
.LABEL $label$64
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)$14 == (int_64)1413956356), [9082])
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$71 }
	$11 = *($0)
	$6 = (int_64)6
	
.LOOP $label$72:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$72 }
	*($4 + [88]) = (int_64)3617214756542218240
	*($4 + [80]) = $11
	$6 = (int_64)0
	$11 = (int_64)59
	$9 = [8298]
	$8 = (int_64)0
	
.LOOP $label$73:
	$23 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$74 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$12 = ($12 + [-91])
	goto $label$75 
	
.LABEL $label$76
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$23 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$74
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$8 = ((int_64)$23 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)4294967291)
	if ( ((int_64)$11 != (int_64)55834574842) ){ goto $label$73 }
	$6 = (int_64)0
	$23 = (int_64)59
	$9 = [8256]
	$10 = (int_64)0
	
.LOOP $label$77:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$82 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$81 }
	$12 = ($12 + [-91])
	goto $label$80 
	
.LABEL $label$82
	$11 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$80
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$79
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$23 & (int_64)4294967295))
	
.LABEL $label$78
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$23 = ((int_64)$23 + (int_64)4294967291)
	if ( ((int_64)$23 != (int_64)55834574842) ){ goto $label$77 }
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$9 = CALL $116([10897])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$70 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$85 }
	*($4 + [16]) = ($9 << [1])
	$12 = (($4 + [16]) | [1])
	if ( $9 ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$13 = (($9 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($4 + [16]) = ($13 | [1])
	*($4 + [24]) = $12
	*($4 + [20]) = $9
	
.LABEL $label$84
	CALL memcpy($12, [10897], $9)
	
.LABEL $label$83
	*(($12 + $9)) = [0]
	*(($4 + [56])) = $14
	$9 = ($4 + [24])
	*(($4 + [72])) = *($9)
	*($9) = [0]
	*($4 + [40]) = $1
	*($4 + [48]) = $7
	*($4 + [32]) = *($0)
	*($4 + [64]) = *($4 + [16])
	*($4 + [16]) = (int_64)0
	$9 = CALL $33(($4 + [96]), ($4 + [80]), $8, $10, ($4 + [32]))
	CALL $34(($4 + [304]), $9)
	$12 = *($4 + [304])
	CALL send_inline($12, (*($4 + [308]) - $12))
	$12 = *($4 + [304])
	if ( ($12 == 0) ){ goto $label$86 }
	*($4 + [308]) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$86
	$12 = *($9 + [28])
	if ( ($12 == 0) ){ goto $label$87 }
	*(($9 + [32])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$87
	$12 = *($9 + [16])
	if ( ($12 == 0) ){ goto $label$88 }
	*(($9 + [20])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$88
	if ( ((*(($4 + [64])) & [1]) == 0) ){ goto $label$89 }
	CALL _ZdlPv(*(($4 + [72])))
	
.LABEL $label$89
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$71 }
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$71
	CALL eosio_assert([1], [8399])
	$6 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$92:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$91 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$93 }
	$6 = $11
	$12 = [1]
	$13 = $9
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$93
	$6 = $11
	
.LOOP $label$94:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$91 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$9 < (int_32)[6])
	$13 = ($9 + [1])
	$9 = $13
	if ( $12 ){ goto $label$94 }
	$12 = [1]
	$9 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$91
	$12 = [0]
	
.LABEL $label$90
	CALL eosio_assert($12, [8448])
	CALL eosio_assert(((int_64)$19 == (int_64)1397703940), [9082])
	if ( ((int_64)$17 < (int_64)1) ){ goto $label$95 }
	$11 = *($0)
	$6 = (int_64)6
	
.LOOP $label$96:
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$96 }
	*($4 + [88]) = (int_64)3617214756542218240
	*($4 + [80]) = $11
	$6 = (int_64)0
	$7 = (int_64)59
	$9 = [8265]
	$23 = (int_64)0
	
.LOOP $label$97:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$102 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$12 = ($12 + [-91])
	goto $label$100 
	
.LABEL $label$102
	$11 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$101
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$99
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$98
	$9 = ($9 + [1])
	$7 = ((int_64)$7 + (int_64)4294967291)
	$23 = ((int_64)$11 | (int_64)$23)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$97 }
	$6 = (int_64)0
	$7 = (int_64)59
	$9 = [8256]
	$8 = (int_64)0
	
.LOOP $label$103:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$108 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$12 = ($12 + [-91])
	goto $label$106 
	
.LABEL $label$108
	$11 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$107
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$105
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$104
	$9 = ($9 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$8 = ((int_64)$11 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)4294967291)
	if ( ((int_64)$7 != (int_64)55834574842) ){ goto $label$103 }
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$9 = CALL $116([10948])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$69 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$111 }
	*($4 + [16]) = ($9 << [1])
	$12 = (($4 + [16]) | [1])
	if ( $9 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$111
	$13 = (($9 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($4 + [16]) = ($13 | [1])
	*($4 + [24]) = $12
	*($4 + [20]) = $9
	
.LABEL $label$110
	CALL memcpy($12, [10948], $9)
	
.LABEL $label$109
	*(($12 + $9)) = [0]
	*(($4 + [56])) = $19
	$9 = ($4 + [24])
	*(($4 + [72])) = *($9)
	*($9) = [0]
	*($4 + [40]) = $1
	*($4 + [48]) = $17
	*($4 + [32]) = *($0)
	*($4 + [64]) = *($4 + [16])
	*($4 + [16]) = (int_64)0
	$9 = CALL $33(($4 + [96]), ($4 + [80]), $23, $8, ($4 + [32]))
	CALL $34(($4 + [304]), $9)
	$12 = *($4 + [304])
	CALL send_inline($12, (*($4 + [308]) - $12))
	$12 = *($4 + [304])
	if ( ($12 == 0) ){ goto $label$112 }
	*($4 + [308]) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$112
	$12 = *($9 + [28])
	if ( ($12 == 0) ){ goto $label$113 }
	*(($9 + [32])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$113
	$12 = *($9 + [16])
	if ( ($12 == 0) ){ goto $label$114 }
	*(($9 + [20])) = $12
	CALL _ZdlPv($12)
	
.LABEL $label$114
	if ( ((*(($4 + [64])) & [1]) == 0) ){ goto $label$115 }
	CALL _ZdlPv(*(($4 + [72])))
	
.LABEL $label$115
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$95 }
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$95
	$13 = *($4 + [224])
	if ( ($13 == 0) ){ goto $label$116 }
	$2 = ($4 + [228])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$13) ){ goto $label$118 }
	
.LOOP $label$119:
	$9 = ($9 + [-24])
	$12 = *($9)
	*($9) = [0]
	if ( ($12 == 0) ){ goto $label$120 }
	CALL _ZdlPv($12)
	
.LABEL $label$120
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$119 }
	$9 = *(($4 + [224]))
	goto $label$117 
	
.LABEL $label$118
	$9 = $13
	
.LABEL $label$117
	*($2) = $13
	CALL _ZdlPv($9)
	
.LABEL $label$116
	$global$0 = ($4 + [320])
	return (unreachable)
	
.LABEL $label$70
	CALL $102(($4 + [16]))
	
.LABEL $label$69
	CALL $102(($4 + [16]))
	(unreachable)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [8524])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $109 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [9719])
	$6 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [144]))), [9719])
	$6 = ((int_64)*($1 + [136]) + (int_64)*($3))
	*($1 + [136]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [136]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $115(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [40]) = *(*($3))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [9719])
	$6 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	CALL $93($3, $1)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $66 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$3 = ($global$0 - [144])
	$global$0 = $3
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$5 }
	$4 = ($0 + [112])
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $7($4, $6)
	
.LABEL $label$6
	$7 = *($0)
	*($3 + [88]) = $2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [9141])
	CALL $90($4, $5, $7, ($3 + [88]))
	$8 = *($2)
	$7 = *($2 + [8])
	CALL eosio_assert([1], [9679])
	CALL eosio_assert([1], [9694])
	*($3 + [136]) = $7
	$9 = ((int_64)$8 / (int_64)2)
	*($3 + [128]) = $9
	CALL eosio_assert(((int_64)$7 == (int_64)*($2 + [8])), [10012])
	$7 = (int_64)
	*($2) = $7(*($2) - $9))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [10082])
	*((($3 + [88]) + [32])) = [0]
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	$7 = *($0)
	*($3 + [88]) = $7
	*($3 + [96]) = $1
	$4 = CALL db_find_i64($7, $1, (int_64)-3020376800539705344, *($5))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $9(($3 + [88]), $4)
	CALL eosio_assert(((int_32)*($4 + [68]) == (int_32)($3 + [88])), [8530])
	*((($3 + [48]) + [32])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$1 = *($0)
	*($3 + [48]) = $1
	$7 = *($4 + [16])
	*($3 + [56]) = $7
	$4 = CALL db_find_i64($1, $7, (int_64)-3020376800539705344, *($5))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $9(($3 + [48]), $4)
	CALL eosio_assert(((int_32)*($4 + [68]) == (int_32)($3 + [48])), [8530])
	$1 = *($0)
	*($3 + [8]) = $2
	CALL eosio_assert([1], [9141])
	CALL $91(($3 + [48]), $4, $1, ($3 + [8]))
	if ( ((int_64)$8 < (int_64)2) ){ goto $label$2 }
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$1 = *($0)
	*($3 + [8]) = $1
	$7 = *($4 + [16])
	*($3 + [16]) = $7
	$2 = CALL db_find_i64($1, $7, (int_64)-3020376800539705344, *($5))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $9(($3 + [8]), $2)
	CALL eosio_assert(((int_32)*($2 + [68]) == (int_32)($3 + [8])), [8530])
	$1 = *($0)
	*($3) = ($3 + [128])
	CALL eosio_assert([1], [9141])
	CALL $92(($3 + [8]), $2, $1, $3)
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	$4 = ($3 + [36])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL _ZdlPv($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($3 + [32]))
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$4
	$2 = $5
	
.LABEL $label$3
	*($4) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$2
	$5 = *($3 + [72])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ($3 + [76])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL _ZdlPv($0)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [72]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($4) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$5 = *($3 + [112])
	if ( ($5 == 0) ){ goto $label$13 }
	$4 = ($3 + [116])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL _ZdlPv($0)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$16 }
	$2 = *(($3 + [112]))
	goto $label$14 
	
.LABEL $label$15
	$2 = $5
	
.LABEL $label$14
	*($4) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$global$0 = ($3 + [144])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL eosio_assert([1], [8524])
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-5001621357587333120, $2, $6, ($4 + [16]), [8])
	*($5 + [12]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $22(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [32])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [168]) = *(*($3))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([24])) + [8]) = $1
	CALL $88(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [12])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $22(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $120($0)
	
.LABEL $label$1
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $102 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $89 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [24]) = (int_64)0
	*(($4 = ($0 + [32]))) = (int_64)1397703940
	CALL eosio_assert([1], [8399])
	$5 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$7 = [1]
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [8448])
	*($0 + [56]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($0 + [64]) = [0]
	*($0 + [68]) = $1
	$4 = *($2 + [4])
	*($0) = *(*(*($4) + [4]))
	*($0 + [8]) = *(*($4 + [4]))
	*($0 + [64]) = *(*($4 + [12]))
	*($0 + [16]) = *(*($4 + [8]))
	$4 = *($2)
	*($0 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($3 + [88]) = ($3 + [68])
	*($3 + [84]) = $3
	*($3 + [80]) = $3
	CALL $26(($3 + [80]), $0)
	$5 = *($0)
	*($0 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020376800539705344, *(*($2 + [8])), $5, $3, [68])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = $global$0
	$3 = $2
	$4 = *($0)
	$5 = (int_64)0
	$6 = (int_64)59
	$7 = [8363]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$10 = *($7)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$10 = ($10 + [-91])
	goto $label$3 
	
.LABEL $label$4
	$10 = ( ($10 + [-48]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)4294967291)
	if ( ((int_64)$6 != (int_64)55834574842) ){ goto $label$1 }
	*($1) = $8
	$7 = ($2 + [-16])
	$global$0 = $7
	CALL eosio_assert([1], [8524])
	CALL memcpy($7, $1, [8])
	$5 = *($1)
	*($1 + [12]) = CALL db_store_i64(*($4 + [8]), (int_64)-5001621357587333120, *(*($0 + [8])), $5, $7, [8])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = $3
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([80])
	CALL $89($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $20(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)-1)
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	*($1 + [168]) = *(CALL $11(($3 + [152]), CALL $fimport$1(*($3 + [152]), *(($3 + [160])), (int_64)-5001621357587333120, (int_64)0)))
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$6 = *($1)
	$7 = (int_64)0
	$8 = (int_64)59
	$9 = [9487]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$12 = *($9)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$12 = ($12 + [-91])
	goto $label$3 
	
.LABEL $label$4
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$1 }
	*($1 + [168]) = $10
	CALL eosio_assert([1], [9273])
	$12 = $4
	$9 = ($12 + [-208])
	$global$0 = $9
	*($5 + [4]) = $9
	*($5) = $9
	*($5 + [8]) = ($12 + [-8])
	CALL $24($5, $1)
	CALL db_update_i64(*($1 + [204]), $2, $9, [200])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($5 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [168]) = *(*(*($3) + [4]))
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [9864])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9909])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9959])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)1)
	$5 = *($1)
	CALL eosio_assert([1], [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	CALL eosio_assert([1], [8399])
	$2 = [0]
	$3 = (int_64)5523267
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $4
	$5 = [1]
	$6 = $2
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $4
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $5 ){ goto $label$5 }
	$5 = [1]
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [8448])
	*(($1 + [128])) = (int_64)1413956356
	$3 = (int_64)0
	*($1 + [120]) = (int_64)0
	$4 = (int_64)59
	$2 = [8363]
	$7 = (int_64)0
	
.LOOP $label$6:
	$8 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$7 }
	$5 = *($2)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [-91])
	goto $label$8 
	
.LABEL $label$9
	$5 = ( ($5 + [-48]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$8 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$7
	$2 = ($2 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)4294967291)
	if ( ((int_64)$4 != (int_64)55834574842) ){ goto $label$6 }
	*($1 + [176]) = $7
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	CALL $94($3, $1)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [128]))), [9719])
	$6 = ((int_64)*($1 + [120]) + (int_64)*($3))
	*($1 + [120]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [120]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [8524])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [8524])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [68]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	*($1 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [88]) = ($4 + [68])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $26(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, [68])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [96])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [16]))), [10012])
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [10082])
	$6 = *($3 + [4])
	*($1 + [72]) = *($6)
	*(($1 + [80])) = *(($6 + [8]))
	$3 = *($3 + [8])
	*($1 + [88]) = *($3)
	*(($1 + [96])) = *(($3 + [8]))
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	CALL $95($3, $1)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($3 + [8])
	$6 = *($3)
	*($1 + [120]) = *($6)
	*(($1 + [128])) = *(($6 + [8]))
	*($1 + [176]) = *(*($3 + [4]))
	$7 = *($1)
	*($1 + [192]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)*($5 + [80]))
	CALL eosio_assert(((int_64)$7 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$6()), [8473])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $50($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $51(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $36 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3 + [152]) = $1
	$4 = ($0 + [112])
	$5 = [0]
	$6 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7($4, $7)
	
.LABEL $label$1
	*(($3 + [144])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$8 = *($0)
	*($3 + [112]) = $8
	*($3 + [120]) = $1
	$7 = CALL db_find_i64($8, $1, (int_64)-3020376800539705344, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $9(($3 + [112]), $7)
	CALL eosio_assert(((int_32)*($5 + [68]) == (int_32)($3 + [112])), [8530])
	
.LABEL $label$2
	$9 = *($0)
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [8363]
	$10 = (int_64)0
	
.LOOP $label$3:
	$11 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$4 }
	$12 = *($7)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$12 = ($12 + [-91])
	goto $label$5 
	
.LABEL $label$6
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$11 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$4
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$3 }
	$13 = [0]
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	*($3 + [80]) = $10
	*($3 + [72]) = $9
	$7 = CALL db_find_i64($9, $10, (int_64)-3020376800539705344, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$13 = CALL $9(($3 + [72]), $7)
	CALL eosio_assert(((int_32)*($13 + [68]) == (int_32)($3 + [72])), [8530])
	
.LABEL $label$7
	if ( ((int_64)*($2) < (int_64)((int_64)*($0 + [104]) / (int_64)2)) ){ goto $label$9 }
	if ( $5 ){ goto $label$10 }
	*(($3 + [64])) = [0]
	*($3 + [56]) = (int_64)0
	$1 = *($3 + [152])
	$7 = CALL $116([9799])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$13 }
	*($3 + [56]) = ($7 << [1])
	$12 = (($3 + [56]) | [1])
	if ( $7 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$5 = (($7 + [16]) & [-16])
	$12 = CALL _Znwj($5)
	*($3 + [56]) = ($5 | [1])
	*($3 + [64]) = $12
	*($3 + [60]) = $7
	
.LABEL $label$12
	CALL memcpy($12, [9799], $7)
	
.LABEL $label$11
	*(($12 + $7)) = [0]
	CALL $57($0, $1, ($3 + [56]), *($0))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($3 + [64]))
	
.LABEL $label$14
	$1 = *($6)
	$12 = *(($3 + [140]))
	$14 = *(($3 + [136]))
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$15 }
	
.LOOP $label$17:
	$7 = ($12 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$16 }
	$12 = $7
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*($5 + [68]) == (int_32)($3 + [112])), [8530])
	goto $label$10 
	
.LABEL $label$15
	$5 = [0]
	$7 = CALL db_find_i64(*($3 + [112]), *(($3 + [120])), (int_64)-3020376800539705344, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $9(($3 + [112]), $7)
	CALL eosio_assert(((int_32)*($5 + [68]) == (int_32)($3 + [112])), [8530])
	
.LABEL $label$10
	$8 = *(($0 + [104]))
	$1 = *($2)
	if ( ((int_64)$1 < (int_64)$8) ){ goto $label$9 }
	if ( ($5 == 0) ){ goto $label$18 }
	*($3 + [8]) = ((int_64)$1 / (int_64)$8)
	$1 = *($0)
	*($3 + [48]) = ($3 + [8])
	CALL eosio_assert([1], [9141])
	CALL $58(($3 + [112]), $5, $1, ($3 + [48]))
	$1 = CALL current_time()
	if ( ((int_64)*($0 + [64]) <= (int_64)((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$19 }
	$1 = *($0)
	*($3 + [48]) = ($3 + [8])
	CALL eosio_assert([1], [9141])
	CALL $59(($3 + [112]), $5, $1, ($3 + [48]))
	
.LABEL $label$19
	$1 = *($0)
	*($3 + [48]) = ($3 + [8])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [9141])
	CALL $60(($3 + [72]), $13, $1, ($3 + [48]))
	
.LABEL $label$18
	$15 = ($0 + [152])
	$1 = *($3 + [152])
	$12 = *(($0 + [180]))
	$14 = *(($0 + [176]))
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$21 }
	
.LOOP $label$23:
	$7 = ($12 + [-24])
	$16 = *($7)
	if ( ((int_64)*($16) == (int_64)$1) ){ goto $label$22 }
	$12 = $7
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$21 }
	CALL eosio_assert(((int_32)*($16 + [8]) == (int_32)$15), [8530])
	goto $label$20 
	
.LABEL $label$21
	$7 = CALL db_find_i64(*($15), *(($0 + [160])), (int_64)-5001621357587333120, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$24 }
	CALL eosio_assert(((int_32)*(CALL $11($15, $7) + [8]) == (int_32)$15), [8530])
	goto $label$20 
	
.LABEL $label$24
	if ( (int_64)(*($5 + [48]) == 0) ){ goto $label$20 }
	$1 = *($0)
	*($3 + [48]) = ($3 + [152])
	CALL $61(($3 + [8]), $15, $1, ($3 + [48]))
	
.LABEL $label$20
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [8363]
	$10 = (int_64)0
	
.LOOP $label$25:
	$11 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$26 }
	$12 = *($7)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$12 = ($12 + [-91])
	goto $label$27 
	
.LABEL $label$28
	$12 = ( ($12 + [-48]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$11 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $12) & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$26
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)4294967291)
	if ( ((int_64)$8 != (int_64)55834574842) ){ goto $label$25 }
	$12 = *(($0 + [180]))
	$5 = *(($0 + [176]))
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$30 }
	
.LOOP $label$32:
	$7 = ($12 + [-24])
	$14 = *($7)
	if ( ((int_64)*($14) == (int_64)$10) ){ goto $label$31 }
	$12 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$30 }
	CALL eosio_assert(((int_32)*($14 + [8]) == (int_32)$15), [8530])
	goto $label$29 
	
.LABEL $label$30
	$7 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-5001621357587333120, $10)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$33 }
	CALL eosio_assert(((int_32)*(CALL $11($15, $7) + [8]) == (int_32)$15), [8530])
	goto $label$29 
	
.LABEL $label$33
	if ( (int_64)(*($13 + [48]) == 0) ){ goto $label$29 }
	CALL $62(($3 + [8]), $15, *($0), ($3 + [48]))
	
.LABEL $label$29
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$1 = *($0)
	*($3 + [8]) = $1
	$8 = *($6 + [168])
	*($3 + [16]) = $8
	$7 = CALL db_find_i64($1, $8, (int_64)-3020376800539705344, *($6))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$35 }
	CALL eosio_assert(((int_32)*(CALL $9(($3 + [8]), $7) + [68]) == (int_32)($3 + [8])), [8530])
	$5 = *($3 + [32])
	if ( $5 ){ goto $label$34 }
	goto $label$9 
	
.LABEL $label$35
	$1 = *($0)
	*($3 + [48]) = ($3 + [152])
	CALL eosio_assert([1], [9141])
	CALL $63($4, $6, $1, ($3 + [48]))
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$9 }
	
.LABEL $label$34
	$14 = ($3 + [36])
	$7 = *($14)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$37 }
	
.LOOP $label$38:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$39 }
	CALL _ZdlPv($12)
	
.LABEL $label$39
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$38 }
	$7 = *(($3 + [32]))
	goto $label$36 
	
.LABEL $label$37
	$7 = $5
	
.LABEL $label$36
	*($14) = $5
	CALL _ZdlPv($7)
	
.LABEL $label$9
	$1 = *($0)
	*($3 + [8]) = $2
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9141])
	CALL $64($4, $6, $1, ($3 + [8]))
	$0 = *($3 + [96])
	if ( ($0 == 0) ){ goto $label$40 }
	$6 = ($3 + [100])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$44 }
	CALL _ZdlPv($12)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$43 }
	$7 = *(($3 + [96]))
	goto $label$41 
	
.LABEL $label$42
	$7 = $0
	
.LABEL $label$41
	*($6) = $0
	CALL _ZdlPv($7)
	
.LABEL $label$40
	$0 = *($3 + [136])
	if ( ($0 == 0) ){ goto $label$45 }
	$6 = ($3 + [140])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$47 }
	
.LOOP $label$48:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$49 }
	CALL _ZdlPv($12)
	
.LABEL $label$49
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$48 }
	$7 = *(($3 + [136]))
	goto $label$46 
	
.LABEL $label$47
	$7 = $0
	
.LABEL $label$46
	*($6) = $0
	CALL _ZdlPv($7)
	
.LABEL $label$45
	$global$0 = ($3 + [160])
	return (unreachable)
	
.LABEL $label$8
	CALL $102(($3 + [56]))
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	$4 = ($global$0 - [224])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [200]) == (int_32)$0), [9176])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$6()), [9222])
	$5 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [160]))), [9719])
	$6 = ((int_64)*($1 + [152]) + (int_64)*($3))
	*($1 + [152]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [9762])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [9781])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [9273])
	*($4 + [216]) = ($4 + [200])
	*($4 + [212]) = $4
	*($4 + [208]) = $4
	CALL $24(($4 + [208]), $1)
	CALL db_update_i64(*($1 + [204]), $2, $4, [200])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [224])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8524])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8524])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8524])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8524])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [8524])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $116($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $107($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $102($0)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $48($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $49(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $30 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	float_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_64 $18
	$3 = ($global$0 - [240])
	$global$0 = $3
	$5 = *($0 + [88])
	$4 = *($2)
	CALL eosio_assert((((int_64)$4 >= (int_64)$5) & ((int_64)$4 <= (int_64)((int_64)$5 * (int_64)10000))), [10534])
	$6 = ($0 + [112])
	$7 = [0]
	$8 = CALL db_lowerbound_i64(*($0 + [112]), *(($0 + [120])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $7($6, $8)
	
.LABEL $label$1
	$9 = *(($7 + [32]))
	$10 = *($7 + [24])
	$4 = *($7 + [72])
	$5 = *($7 + [56])
	CALL eosio_assert(((int_64)*(($7 + [80])) == (int_64)*(($7 + [64]))), [10012])
	$4 = (int_64)
	CALL eosio_assert(((int_64)$4($5 - $4)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$4 < (int_64)4611686018427387904), [10082])
	*($3 + [216]) = (int_64)1397703940
	$11 = ((float_64)((float_64)(CASTING float_64)(int_64 $10) / (float_64)(CASTING float_64)(int_64 $4)) * (float_64)(CASTING float_64)(int_64 *($2)))
	if ( ((float_64)(float_64)|$11| < (float_64)(float_64)9223372036854775808) ){ goto $label$3 }
	$12 = (int_64)-9223372036854775808
	goto $label$2 
	
.LABEL $label$3
	$12 = (Rounds 0)($11)
	
.LABEL $label$2
	*($3 + [208]) = $12
	CALL eosio_assert((uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$4 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$4 = $5
	$13 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$4 = $5
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$13 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $13 ){ goto $label$8 }
	$13 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$13 = [0]
	
.LABEL $label$4
	CALL eosio_assert($13, [8448])
	$15 = ((int_64)*(($0 + [88])) * (int_64)100)
	CALL eosio_assert((uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$4 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$4 = $5
	$13 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$4 = $5
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$13 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $13 ){ goto $label$13 }
	$13 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$13 = [0]
	
.LABEL $label$9
	CALL eosio_assert($13, [8448])
	$16 = ((int_64)1397703940 == (int_64)1397703940)
	CALL eosio_assert($16, [9082])
	if ( ((int_64)$15 >= (int_64)$12) ){ goto $label$15 }
	CALL eosio_assert([0], [10570])
	goto $label$14 
	
.LABEL $label$15
	$15 = *(($0 + [88]))
	CALL eosio_assert((uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [8399])
	$4 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$4 = $5
	$13 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$4 = $5
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$13 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $13 ){ goto $label$20 }
	$13 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$13 = [0]
	
.LABEL $label$16
	CALL eosio_assert($13, [8448])
	CALL eosio_assert($16, [9082])
	CALL eosio_assert(((int_64)$15 <= (int_64)$12), [10570])
	
.LABEL $label$14
	CALL eosio_assert(((int_64)$9 == (int_64)1397703940), [9082])
	CALL eosio_assert(((int_64)$10 >= (int_64)$12), [10604])
	*(($3 + [200])) = [0]
	*($3 + [184]) = (int_64)-1
	*($3 + [192]) = (int_64)0
	$4 = *($0)
	*($3 + [168]) = $4
	*($3 + [176]) = $1
	$8 = CALL db_find_i64($4, $1, (int_64)-3020376800539705344, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$23 }
	$8 = CALL $9(($3 + [168]), $8)
	CALL eosio_assert(((int_32)*($8 + [68]) == (int_32)($3 + [168])), [8530])
	$4 = CALL current_time()
	CALL eosio_assert(((uint_64)((int_64)*($0 + [72]) + (int_64)*($8 + [40])) <= (uint_64)((int_64)((uint_64)$4 / (uint_64)(int_64)1000000) & (int_64)4294967295)), [10134])
	$4 = *($0)
	CALL eosio_assert([1], [9141])
	CALL $71(($3 + [168]), $8, $4, ($3 + [32]))
	goto $label$22 
	
.LABEL $label$23
	*(($3 + [160])) = [0]
	*($3 + [152]) = (int_64)0
	$8 = CALL $116([9799])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$26 }
	*($3 + [152]) = ($8 << [1])
	$13 = (($3 + [152]) | [1])
	if ( $8 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$14 = (($8 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($3 + [152]) = ($14 | [1])
	*($3 + [160]) = $13
	*($3 + [156]) = $8
	
.LABEL $label$25
	CALL memcpy($13, [9799], $8)
	
.LABEL $label$24
	*(($13 + $8)) = [0]
	CALL $57($0, $1, ($3 + [152]), *($0))
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*($3 + [160]))
	
.LABEL $label$27
	$4 = *($7)
	$13 = *(($3 + [196]))
	$14 = *(($3 + [192]))
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$28 }
	
.LOOP $label$30:
	$8 = ($13 + [-24])
	$16 = *($8)
	if ( ((int_64)*($16) == (int_64)$4) ){ goto $label$29 }
	$13 = $8
	if ( ((int_32)$14 != (int_32)$8) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$28 }
	CALL eosio_assert(((int_32)*($16 + [68]) == (int_32)($3 + [168])), [8530])
	goto $label$22 
	
.LABEL $label$28
	$8 = CALL db_find_i64(*($3 + [168]), *(($3 + [176])), (int_64)-3020376800539705344, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	CALL eosio_assert(((int_32)*(CALL $9(($3 + [168]), $8) + [68]) == (int_32)($3 + [168])), [8530])
	
.LABEL $label$22
	$17 = *((($3 + [208]) + [8]))
	$4 = *($3 + [208])
	CALL eosio_assert([1], [10012])
	$5 = ((int_64)((int_64)$4 + (int_64)99) / (int_64)100)
	$18 = (int_64)
	CALL eosio_assert(((int_64)$18($4 - $5)) > (int_64)-4611686018427387904), [10060])
	CALL eosio_assert(((int_64)$18 < (int_64)4611686018427387904), [10082])
	*(($3 + [8])) = $17
	*($3 + [144]) = $17
	*($3) = $5
	*($3 + [136]) = $5
	CALL $66($0, $1, $3)
	$4 = *($0)
	*($3 + [36]) = $2
	*($3 + [32]) = ($3 + [208])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9141])
	CALL $72($6, $7, $4, ($3 + [32]))
	CALL eosio_assert([1], [8399])
	$4 = (int_64)5523267
	$8 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$4 = $5
	$13 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$4 = $5
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$13 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $13 ){ goto $label$35 }
	$13 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$13 = [0]
	
.LABEL $label$31
	CALL eosio_assert($13, [8448])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1413956356), [9082])
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$38 }
	$5 = *($0)
	$4 = (int_64)6
	
.LOOP $label$39:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$39 }
	*($3 + [88]) = (int_64)3617214756542218240
	*($3 + [80]) = $5
	$4 = (int_64)0
	$5 = (int_64)59
	$8 = [8298]
	$10 = (int_64)0
	
.LOOP $label$40:
	$12 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$41 }
	$13 = *($8)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$13 = ($13 + [-91])
	goto $label$42 
	
.LABEL $label$43
	$13 = ( ($13 + [-48]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$12 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $13) & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$41
	$8 = ($8 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$10 = ((int_64)$12 | (int_64)$10)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$40 }
	$4 = (int_64)0
	$12 = (int_64)59
	$8 = [8256]
	$9 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$49 }
	$13 = *($8)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$13 = ($13 + [-91])
	goto $label$47 
	
.LABEL $label$49
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$13 = ( ($13 + [-48]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$45
	$8 = ($8 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$9 = ((int_64)$5 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)4294967291)
	if ( ((int_64)$12 != (int_64)55834574842) ){ goto $label$44 }
	$4 = (int_64)0
	$5 = (int_64)59
	$8 = [9487]
	$15 = (int_64)0
	
.LOOP $label$50:
	$12 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$51 }
	$13 = *($8)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$13 = ($13 + [-91])
	goto $label$52 
	
.LABEL $label$53
	$13 = ( ($13 + [-48]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$12 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $13) & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$51
	$8 = ($8 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$15 = ((int_64)$12 | (int_64)$15)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$50 }
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$8 = CALL $116([10628])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$56 }
	*($3 + [16]) = ($8 << [1])
	$13 = (($3 + [16]) | [1])
	if ( $8 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$14 = (($8 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($3 + [16]) = ($14 | [1])
	*($3 + [24]) = $13
	*($3 + [20]) = $8
	
.LABEL $label$55
	CALL memcpy($13, [10628], $8)
	
.LABEL $label$54
	*(($13 + $8)) = [0]
	*(($3 + [56])) = *(($2 + [8]))
	$8 = (($3 + [16]) + [8])
	*(($3 + [72])) = *($8)
	*($8) = [0]
	*($3 + [40]) = $15
	*($3 + [32]) = *($0)
	*($3 + [48]) = *($2)
	*($3 + [64]) = *($3 + [16])
	*($3 + [16]) = (int_64)0
	$8 = CALL $33(($3 + [96]), ($3 + [80]), $10, $9, ($3 + [32]))
	CALL $34(($3 + [224]), $8)
	$13 = *($3 + [224])
	CALL send_inline($13, (*($3 + [228]) - $13))
	$13 = *($3 + [224])
	if ( ($13 == 0) ){ goto $label$57 }
	*($3 + [228]) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$57
	$13 = *($8 + [28])
	if ( ($13 == 0) ){ goto $label$58 }
	*(($8 + [32])) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$58
	$13 = *($8 + [16])
	if ( ($13 == 0) ){ goto $label$59 }
	*(($8 + [20])) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$59
	if ( ((*(($3 + [64])) & [1]) == 0) ){ goto $label$60 }
	CALL _ZdlPv(*(($3 + [72])))
	
.LABEL $label$60
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$38
	CALL eosio_assert([1], [8399])
	$4 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$64 }
	$4 = $5
	$13 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$64
	$4 = $5
	
.LOOP $label$65:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$13 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $13 ){ goto $label$65 }
	$13 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	$13 = [0]
	
.LABEL $label$61
	CALL eosio_assert($13, [8448])
	CALL eosio_assert(((int_64)$17 == (int_64)1397703940), [9082])
	if ( ((int_64)$18 < (int_64)1) ){ goto $label$66 }
	$5 = *($0)
	$4 = (int_64)6
	
.LOOP $label$67:
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$67 }
	*($3 + [88]) = (int_64)3617214756542218240
	*($3 + [80]) = $5
	$4 = (int_64)0
	$12 = (int_64)59
	$8 = [8265]
	$10 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$73 }
	$13 = *($8)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$13 = ($13 + [-91])
	goto $label$71 
	
.LABEL $label$73
	$5 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$13 = ( ($13 + [-48]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$69
	$8 = ($8 + [1])
	$12 = ((int_64)$12 + (int_64)4294967291)
	$10 = ((int_64)$5 | (int_64)$10)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$68 }
	$4 = (int_64)0
	$12 = (int_64)59
	$8 = [8256]
	$9 = (int_64)0
	
.LOOP $label$74:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$79 }
	$13 = *($8)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$78 }
	$13 = ($13 + [-91])
	goto $label$77 
	
.LABEL $label$79
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$78
	$13 = ( ($13 + [-48]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$77
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$76
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$75
	$8 = ($8 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$9 = ((int_64)$5 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)4294967291)
	if ( ((int_64)$12 != (int_64)55834574842) ){ goto $label$74 }
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$8 = CALL $116([10653])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$82 }
	*($3 + [16]) = ($8 << [1])
	$13 = (($3 + [16]) | [1])
	if ( $8 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$14 = (($8 + [16]) & [-16])
	$13 = CALL _Znwj($14)
	*($3 + [16]) = ($14 | [1])
	*($3 + [24]) = $13
	*($3 + [20]) = $8
	
.LABEL $label$81
	CALL memcpy($13, [10653], $8)
	
.LABEL $label$80
	*(($13 + $8)) = [0]
	*(($3 + [56])) = $17
	$8 = ($3 + [24])
	*(($3 + [72])) = *($8)
	*($8) = [0]
	*($3 + [40]) = $1
	*($3 + [48]) = $18
	*($3 + [32]) = *($0)
	*($3 + [64]) = *($3 + [16])
	*($3 + [16]) = (int_64)0
	$8 = CALL $33(($3 + [96]), ($3 + [80]), $10, $9, ($3 + [32]))
	CALL $34(($3 + [224]), $8)
	$13 = *($3 + [224])
	CALL send_inline($13, (*($3 + [228]) - $13))
	$13 = *($3 + [224])
	if ( ($13 == 0) ){ goto $label$83 }
	*($3 + [228]) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$83
	$13 = *($8 + [28])
	if ( ($13 == 0) ){ goto $label$84 }
	*(($8 + [32])) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$84
	$13 = *($8 + [16])
	if ( ($13 == 0) ){ goto $label$85 }
	*(($8 + [20])) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$85
	if ( ((*(($3 + [64])) & [1]) == 0) ){ goto $label$86 }
	CALL _ZdlPv(*(($3 + [72])))
	
.LABEL $label$86
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$66 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$66
	$14 = *($3 + [192])
	if ( ($14 == 0) ){ goto $label$87 }
	$0 = ($3 + [196])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$89 }
	
.LOOP $label$90:
	$8 = ($8 + [-24])
	$13 = *($8)
	*($8) = [0]
	if ( ($13 == 0) ){ goto $label$91 }
	CALL _ZdlPv($13)
	
.LABEL $label$91
	if ( ((int_32)$14 != (int_32)$8) ){ goto $label$90 }
	$8 = *(($3 + [192]))
	goto $label$88 
	
.LABEL $label$89
	$8 = $14
	
.LABEL $label$88
	*($0) = $14
	CALL _ZdlPv($8)
	
.LABEL $label$87
	$global$0 = ($3 + [240])
	return (unreachable)
	
.LABEL $label$37
	CALL $102(($3 + [16]))
	
.LABEL $label$36
	CALL $102(($3 + [16]))
	
.LABEL $label$21
	CALL $102(($3 + [152]))
	(unreachable)
	(unreachable)
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = CALL _Znwj([16])
	*($0 + [8]) = $4
	*($0) = (int_64)55834574865
	CALL memset($4, [46], [13])
	$5 = [0]
	*($4 + [13]) = [0]
	$7 = (CASTING uint_32)(uint_64 $2)
	$6 = *([0] + [9332])
	*($4 + [12]) = *(($6 + ($7 & [15])))
	*($4 + [11]) = *(($6 + (uint_32($7 >> [4]) & [31])))
	*($4 + [10]) = *(($6 + (uint_32($7 >> [9]) & [31])))
	*($4 + [9]) = *(($6 + (uint_32($7 >> [14]) & [31])))
	*($4 + [8]) = *(($6 + (uint_32($7 >> [19]) & [31])))
	*($4 + [7]) = *(($6 + (uint_32($7 >> [24]) & [31])))
	*($4 + [6]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)29)) & [31])))
	*($4 + [5]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)34)) & [31])))
	*($4 + [4]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)39)) & [31])))
	*($4 + [3]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)44)) & [31])))
	*($4 + [2]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)49)) & [31])))
	*($4 + [1]) = *(($6 + ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)54)) & [31])))
	*($4) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)59))))
	$6 = *($0 + [8])
	
.LOOP $label$2:
	if ( ((int_32)$5 == (int_32)[-13]) ){ goto $label$1 }
	$4 = ($6 + $5)
	$7 = ($5 + [-1])
	$5 = $7
	if ( ((int_32)*(($4 + [12])) == (int_32)[46]) ){ goto $label$2 }
	$5 = ((($6 + $7) + [13]) - $6)
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$1 }
	CALL $104($3, $0, [0], ($5 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$4 }
	*($0) = [0]
	goto $label$3 
	
.LABEL $label$4
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	CALL $106($0, [0])
	*(($0 + [8])) = *(($3 + [8]))
	*($0) = *($3)
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}