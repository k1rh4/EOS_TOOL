(data (i32.const 4) "\00g\00\00")
(data (i32.const 16) "cannot create objects in table of another contract\00")
(data (i32.const 80) "write\00")
(data (i32.const 96) "error reading iterator\00")
(data (i32.const 128) "read\00")
(data (i32.const 144) ":\00")
(data (i32.const 160) "elizabeth\00")
(data (i32.const 176) "greenland\00")
(data (i32.const 192) "eosio.token\00")
(data (i32.const 208) "transfer not from eosio.token\00")
(data (i32.const 240) "transfer not made to this contract\00")
(data (i32.const 288) "invalid quantity\00")
(data (i32.const 320) "game is not running!!!\00")
(data (i32.const 352) "asset must be EOS\00")
(data (i32.const 384) "min bet is 0.1000 EOS\00")
(data (i32.const 416) "bet choice must be 1 or 2\00")
(data (i32.const 448) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 512) "cannot pass end iterator to modify\00")
(data (i32.const 560) "object passed to modify is not in multi_index\00")
(data (i32.const 608) "cannot modify objects in table of another contract\00")
(data (i32.const 672) "updater cannot change primary key when modifying an object\00")
(data (i32.const 736) "next primary key in table is at autoincrement limit\00")
(data (i32.const 800) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 864) "cannot decrement iterator at beginning of table\00")
(data (i32.const 912) "integer overflow adding user balance\00")
(data (i32.const 960) "user does not exist\00")
(data (i32.const 992) "integer overflow adding withdraw balance\00")
(data (i32.const 1040) "active\00")
(data (i32.const 1056) "transfer\00")
(data (i32.const 1072) "from boatpirate24\00")
(data (i32.const 1104) "cannot pass end iterator to erase\00")
(data (i32.const 1152) "cannot increment end iterator\00")
(data (i32.const 1184) "object passed to erase is not in multi_index\00")
(data (i32.const 1232) "cannot erase objects in table of another contract\00")
(data (i32.const 1296) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1360) "elizabeth or greenland win\00")
(data (i32.const 1392) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1456) "invalid symbol name\00")
(data (i32.const 1488) "get\00")
(data (i32.const 9888) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$8 (param i32)))
(import "env" "db_idx64_store" (func $fimport$9 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$10 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$14 (param i32)))
(import "env" "db_store_i64" (func $fimport$15 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$16 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$17 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$18 (param i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$21 (param i64)))
(import "env" "require_auth2" (func $fimport$22 (param i64 i64)))
(import "env" "send_inline" (func $fimport$23 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN15CargoboatPirateC2Ey" (func $5))
(export "_ZN15CargoboatPirate4initEv" (func $6))
(export "_ZN15CargoboatPirate11handle_memoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy" (func $14))
(export "_ZN15CargoboatPirate11on_transferERKN5eosio8currency8transferEy" (func $15))
(export "_ZN15CargoboatPirate12on_round_endEv" (func $16))
(export "_ZN15CargoboatPirate8withdrawEyN5eosio5assetE" (func $17))
(export "_ZN15CargoboatPirate13on_player_betEyhyy" (func $18))
(export "_ZN15CargoboatPirate16add_user_balanceEyy" (func $19))
(export "_ZN15CargoboatPirate5cleanEb" (func $39))
(export "_ZN15CargoboatPirate13handle_refundEv" (func $40))
(export "_ZN15CargoboatPirate13handle_normalEhh" (func $41))
(export "_ZN15CargoboatPirate11handle_tiedEv" (func $42))
(export "_ZN15CargoboatPirate17record_last_roundEh" (func $43))
(export "_ZN15CargoboatPirate15start_new_roundEb" (func $44))
(export "_ZN15CargoboatPirate19record_last_userbetEyyyy" (func $52))
(export "_ZN15CargoboatPirate10get_statusEv" (func $62))
(export "_ZN15CargoboatPirate10get_winnerEv" (func $63))
(export "_ZN15CargoboatPirate16get_bets_by_boatEh" (func $64))
(export "_ZN15CargoboatPirate13get_base_betsEv" (func $65))
(export "_ZN15CargoboatPirate4pingEv" (func $66))
(export "_ZN15CargoboatPirate5applyEyy" (func $67))
(export "apply" (func $73))
(export "malloc" (func $74))
(export "free" (func $77))
(export "tolower" (func $86))
(export "memchr" (func $87))
(export "memcmp" (func $88))
(export "strlen" (func $89))
(table $0 2 2 anyfunc)
(elem (i32.const 0) $90 $66)



void .FUNC $90 ()
{
	(unreachable)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [80])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [80])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC _ZN15CargoboatPirate17record_last_roundEh (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	$5 = ($0 + [168])
	$3 = CALL db_lowerbound_i64(*($0 + [168]), *(($0 + [176])), (int_64)-4812882599418527744, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $47($5, $3)
	CALL eosio_assert([1], [1152])
	$3 = CALL db_next_i64(*($3 + [60]), ($7 + [16]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = (int_64)1
	
.LOOP $label$2:
	$3 = CALL $47($5, $3)
	CALL eosio_assert([1], [1152])
	$4 = ((int_64)$4 + (int_64)1)
	$3 = CALL db_next_i64(*($3 + [60]), ($7 + [16]))
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$2 }
	if ( (uint_64)($4 <= (int_64)3) ){ goto $label$1 }
	$3 = [0]
	$6 = CALL db_lowerbound_i64(*(($0 + [168])), *(($0 + [176])), (int_64)-4812882599418527744, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $47($5, $6)
	
.LABEL $label$3
	$6 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($6, [1104])
	CALL eosio_assert($6, [1152])
	$6 = CALL db_next_i64(*($3 + [60]), ($7 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $47($5, $6)
	
.LABEL $label$4
	CALL $48($5, $3)
	
.LABEL $label$1
	$6 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $7(($0 + [208]), $3)
	
.LABEL $label$5
	$2 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [168])) == (int_64)CALL $fimport$2()), [16])
	*(($3 = CALL $78([72])) + [56]) = $5
	*($3) = *($6 + [8])
	*($3 + [8]) = *($6 + [56])
	*($3 + [16]) = *($6 + [24])
	*($3 + [24]) = *($6 + [72])
	*($3 + [32]) = $1
	*($3 + [40]) = *($6 + [40])
	*($3 + [48]) = *($6 + [48])
	*($7 + [88]) = (($7 + [16]) + [49])
	*($7 + [84]) = ($7 + [16])
	*($7 + [80]) = ($7 + [16])
	CALL $49(($7 + [80]), $3)
	$4 = *($3)
	$6 = CALL db_store_i64(*(($0 + [176])), (int_64)-4812882599418527744, $2, $4, ($7 + [16]), [49])
	*($3 + [60]) = $6
	$5 = ($0 + [184])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$6 }
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($7 + [80]) = $3
	$4 = *($3)
	*($7 + [16]) = $4
	*($7 + [12]) = $6
	$1 = ($0 + [196])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [200]))) ){ goto $label$8 }
	*($5 + [8]) = $4
	*($5 + [16]) = $6
	*($7 + [80]) = [0]
	*($5) = $3
	*($1) = ($5 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $50(($0 + [192]), ($7 + [80]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$3 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $79($3)
	
.LABEL $label$9
	*([0] + [4]) = ($7 + [96])
}

int_64 .FUNC _ZN15CargoboatPirate11handle_tiedEv (int_32 $0)
{
	int_32 $1
	float_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	$3 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3020380796268576768, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$1 = ($0 + [8])
	$5 = CALL $20($1, $5)
	$6 = [0]
	
.LOOP $label$3:
	$2 = ((float_64)$2 * (float_64)(float_64)0.9)
	$2 = (CASTING float_64)(uint_64 ((int_64)*($5 + [24]) + (int_64)*($5 + [16])))
	$3 = (Rounds 0)((float_64))($2 - $2)
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, *($5), $3))
	CALL _ZN15CargoboatPirate19record_last_userbetEyyyy($0, *($5), *($5 + [16]), *($5 + [24]), $3)
	CALL eosio_assert([1], [1152])
	$6 = (CASTING int_32)(float_64 ((float_64)(CASTING float_64)(int_32 $6) + (float_64)$2))
	$5 = CALL db_next_i64(*($5 + [44]), $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $20($1, $5)
	goto $label$3 
	
.LABEL $label$2
	$3 = (CASTING int_64)(int_32 $6)
	
.LABEL $label$1
	$6 = ($0 + [208])
	$5 = [0]
	$1 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $7($6, $1)
	
.LABEL $label$4
	$4 = *($0)
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [512])
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$6), [560])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [608])
	*($5 + [80]) = ((int_64)*($5 + [80]) + (int_64)$3)
	$3 = *($5)
	CALL eosio_assert([1], [672])
	*($7 + [104]) = ($7 + [88])
	*($7 + [100]) = $7
	*($7 + [96]) = $7
	CALL $8(($7 + [96]), $5)
	CALL db_update_i64(*($5 + [92]), $4, $7, [88])
	$5 = ($0 + [224])
	if ( (uint_64)($3 <= *($5)) ){ goto $label$5 }
	*($5) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [112])
	return (int_64)0
}

int_64 .FUNC _ZN15CargoboatPirate13handle_normalEhh (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	float_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((($1 + [-1]) & [255]) <= [2]), [1360])
	$8 = ($0 + [208])
	$6 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7($8, $3)
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$4 }
	$7 = (float_64)0
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$2 }
	$6 = ($6 + [40])
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 + [48])
	
.LABEL $label$3
	$7 = (CASTING float_64)(uint_64 *($6))
	
.LABEL $label$2
	$4 = (int_64)0
	$6 = [0]
	$3 = CALL db_lowerbound_i64(*(($0 + [208])), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $7($8, $3)
	
.LABEL $label$5
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$6 }
	$2 = ($6 + [40])
	goto $label$7 
	
.LABEL $label$8
	$2 = ($6 + [48])
	
.LABEL $label$7
	$4 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 *($2)) * (float_64)(float_64)0.9))
	
.LABEL $label$6
	$5 = *(CALL $7($8, CALL $fimport$11(*(($0 + [208])), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)) + [56])
	$8 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3020380796268576768, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$4 = ((int_64)$5 + (int_64)$4)
	$2 = ($0 + [8])
	$8 = CALL $20($2, $8)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$1 != (int_32)[2]) ){ goto $label$10 }
	
.LOOP $label$12:
	$5 = *($8 + [24])
	$5 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_32 *($8 + [16])) * (float_64)(float_64)0.1) + (float_64)((float_64)(CASTING float_64)(int_32 (CASTING uint_32)(uint_64 $5)) + (float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)((int_64)$5 << (int_64)32) >> (int_64)32) * (int_64)$4)) / (float_64)$7)))
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, *($8), $5))
	CALL _ZN15CargoboatPirate19record_last_userbetEyyyy($0, *($8), *($8 + [16]), *($8 + [24]), $5)
	CALL eosio_assert([1], [1152])
	$8 = CALL db_next_i64(*($8 + [44]), ($9 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $20($2, $8)
	goto $label$12 
	
.LABEL $label$11
	
.LOOP $label$13:
	$5 = *($8 + [16])
	$5 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_32 *($8 + [24])) * (float_64)(float_64)0.1) + (float_64)((float_64)(CASTING float_64)(int_32 (CASTING uint_32)(uint_64 $5)) + (float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)((int_64)$5 << (int_64)32) >> (int_64)32) * (int_64)$4)) / (float_64)$7)))
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, *($8), $5))
	CALL _ZN15CargoboatPirate19record_last_userbetEyyyy($0, *($8), *($8 + [16]), *($8 + [24]), $5)
	CALL eosio_assert([1], [1152])
	$8 = CALL db_next_i64(*($8 + [44]), ($9 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $20($2, $8)
	goto $label$13 
	
.LABEL $label$10
	$4 = (Rounds 0)(((float_64)((float_64)(float_64)0 / (float_64)$7) + (float_64)(float_64)0))
	
.LOOP $label$14:
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, *($8), $4)
	CALL _ZN15CargoboatPirate19record_last_userbetEyyyy($0, *($8), *($8 + [16]), *($8 + [24]), $4)
	CALL eosio_assert([1], [1152])
	$8 = CALL db_next_i64(*($8 + [44]), ($9 + [8]))
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$9 }
	$8 = CALL $20($2, $8)
	goto $label$14 
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
	return (int_64)0
}

int_64 .FUNC _ZN15CargoboatPirate13handle_refundEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3020380796268576768, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$1 = ($0 + [8])
	$3 = CALL $20($1, $3)
	
.LOOP $label$2:
	$2 = ((int_64)*($3 + [24]) + (int_64)*($3 + [16]))
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, *($3), $2)
	CALL _ZN15CargoboatPirate19record_last_userbetEyyyy($0, *($3), *($3 + [16]), *($3 + [24]), $2)
	CALL eosio_assert([1], [1152])
	$3 = CALL db_next_i64(*($3 + [44]), ($4 + [8]))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $20($1, $3)
	goto $label$2 
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return (int_64)0
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([72])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [56]) = $0
	CALL $51(($8 + [32]), $6)
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $50(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$7 = *(($1 + [48]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4812882776358578176, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [52]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4812882776358578175, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$7 = *(($1 + [48]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380796268576768, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN15CargoboatPirate15start_new_roundEb (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	$7 = ($0 + [208])
	$8 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $7($7, $3)
	
.LABEL $label$1
	$4 = *($0)
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [512])
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$7), [560])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [608])
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [8]) = ((int_64)*($8 + [8]) + (int_64)1)
	$2 = *($8)
	*($8 + [56]) = ((int_64)( *($8 + [56]) ? (int_64)0 : $1 ) + (int_64)*($8 + [80]))
	*($8 + [80]) = (int_64)0
	$5 = CALL current_time()
	$6 = *($8 + [72])
	*($8 + [72]) = (int_64)0
	$5 = ((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$6 = ((int_64)$6 + (int_64)120)
	*($8 + [64]) = ( $6 ? $5 : ((uint_64)$6 > (uint_64)$5) )
	CALL eosio_assert(((int_64)$2 == (int_64)*($8)), [672])
	*($9 + [104]) = ($9 + [88])
	*($9 + [100]) = $9
	*($9 + [96]) = $9
	CALL $8(($9 + [96]), $8)
	CALL db_update_i64(*($8 + [92]), $4, $9, [88])
	$8 = ($0 + [224])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$2 }
	*($8) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$8 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3020380796268576768, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$1 = ($0 + [8])
	$7 = CALL $20($1, $8)
	
.LOOP $label$4:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$8 = [0]
	$3 = CALL db_next_i64(*($7 + [44]), $9)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $20($1, $3)
	
.LABEL $label$5
	CALL $45($1, $7)
	$7 = $8
	if ( $8 ){ goto $label$4 }
	
.LABEL $label$3
	$8 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)-4812882776358578176, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$1 = ($0 + [128])
	$7 = CALL $27($1, $8)
	
.LOOP $label$7:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$8 = [0]
	$3 = CALL db_next_i64(*($7 + [44]), $9)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $27($1, $3)
	
.LABEL $label$8
	CALL $46($1, $7)
	$7 = $8
	if ( $8 ){ goto $label$7 }
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [112])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN15CargoboatPirate4initEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	$1 = ($0 + [208])
	$3 = ($0 + [216])
	$2 = CALL db_lowerbound_i64(*($0 + [208]), *($3), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $7($1, $2)
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [16])
	*(($2 = CALL $78([104])) + [88]) = $1
	*($2 + [8]) = (int_64)1
	*($2) = (int_64)6138435675190493712
	*($2 + [16]) = (int_64)0
	$5 = CALL current_time()
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [80]) = (int_64)0
	$5 = ((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [32]) = $5
	*($2 + [24]) = $5
	*($2 + [64]) = $5
	*($2 + [72]) = ((int_64)$5 + (int_64)600)
	*($7 + [120]) = (($7 + [16]) + [88])
	*($7 + [116]) = ($7 + [16])
	*($7 + [112]) = ($7 + [16])
	CALL $8(($7 + [112]), $2)
	$5 = *($2)
	$3 = CALL db_store_i64(*($3), (int_64)7035924439720001536, $4, $5, ($7 + [16]), [88])
	*($2 + [92]) = $3
	$1 = ($0 + [224])
	if ( (uint_64)($5 <= *($1)) ){ goto $label$3 }
	*($1) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($7 + [112]) = $2
	$5 = *($2)
	*($7 + [16]) = $5
	*($7 + [12]) = $3
	$6 = ($0 + [236])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [240]))) ){ goto $label$5 }
	*($1 + [8]) = $5
	*($1 + [16]) = $3
	*($7 + [112]) = [0]
	*($1) = $2
	*($6) = ($1 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $9(($0 + [232]), ($7 + [112]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$4
	$2 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $79($2)
	
.LABEL $label$1
	$1 = ($0 + [88])
	$3 = ($0 + [96])
	$2 = CALL db_lowerbound_i64(*($0 + [88]), *($3), (int_64)-3020384829779738624, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	CALL $10($1, $2)
	goto $label$6 
	
.LABEL $label$7
	$4 = *($0)
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [16])
	*(($2 = CALL $78([48])) + [32]) = $1
	*($2 + [8]) = (int_64)0
	*($2) = (int_64)6138435675190493712
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	CALL eosio_assert([1], [80])
	CALL memcpy(($7 + [16]), $2, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($7 + [16]) | [8]), ($2 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($7 + [16]) + [16]), ($2 + [16]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($7 + [16]) + [24]), ($2 + [24]), [8])
	$5 = *($2)
	$3 = CALL db_store_i64(*($3), (int_64)-3020384829779738624, $4, $5, ($7 + [16]), [32])
	*($2 + [36]) = $3
	$1 = ($0 + [104])
	if ( (uint_64)($5 <= *($1)) ){ goto $label$8 }
	*($1) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($7 + [112]) = $2
	$5 = *($2)
	*($7 + [16]) = $5
	*($7 + [12]) = $3
	$6 = ($0 + [116])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [120]))) ){ goto $label$10 }
	*($1 + [8]) = $5
	*($1 + [16]) = $3
	*($7 + [112]) = [0]
	*($1) = $2
	*($6) = ($1 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $11(($0 + [112]), ($7 + [112]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$9
	$0 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $79($0)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [128])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([104])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [64]) = (int_64)0
	*($6 + [72]) = (int_64)0
	*($6 + [80]) = (int_64)0
	*($6 + [88]) = $0
	CALL $13(($8 + [32]), $6)
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC _ZN15CargoboatPirateC2Ey (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
	*($0) = $1
	*(($0 + [16])) = $1
	*(($0 + [24])) = (int_64)-1
	*(($0 + [32])) = (int_64)0
	*(($0 + [40])) = [0]
	*(($0 + [44])) = [0]
	*($0 + [48]) = $1
	*(($0 + [56])) = $1
	*(($0 + [64])) = (int_64)-1
	*(($0 + [72])) = [0]
	*(($0 + [76])) = [0]
	*(($0 + [80])) = [0]
	*(($0 + [84])) = [0]
	*($0 + [88]) = $1
	*(($0 + [96])) = $1
	*(($0 + [104])) = (int_64)-1
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*(($0 + [120])) = [0]
	*($0 + [128]) = $1
	*(($0 + [136])) = $1
	*(($0 + [144])) = (int_64)-1
	*(($0 + [152])) = [0]
	*(($0 + [156])) = [0]
	*(($0 + [160])) = [0]
	*(($0 + [164])) = [0]
	*($0 + [168]) = $1
	*(($0 + [176])) = $1
	*(($0 + [184])) = (int_64)-1
	*(($0 + [192])) = [0]
	*(($0 + [196])) = [0]
	*(($0 + [200])) = [0]
	*($0 + [208]) = $1
	*(($0 + [216])) = $1
	*(($0 + [224])) = (int_64)-1
	*(($0 + [232])) = [0]
	*(($0 + [236])) = [0]
	*(($0 + [240])) = [0]
	CALL _ZN15CargoboatPirate4initEv($0)
	return $0
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZN15CargoboatPirate11handle_memoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	*($2) = (int_64)0
	CALL $84(($13 + [16]), $1)
	$7 = *($1)
	$6 = *($1 + [8])
	$3 = *($1 + [4])
	$4 = [0]
	$8 = CALL strlen([144])
	if ( ($8 == 0) ){ goto $label$2 }
	$4 = ($7 & [1])
	$7 = ( $3 ? uint_32($7 >> [1]) : $4 )
	if ( ((int_32)$7 < (int_32)$8) ){ goto $label$1 }
	$6 = ( $6 ? ($1 + [1]) : $4 )
	$3 = ($6 + $7)
	$4 = $6
	
.LOOP $label$3:
	$7 = (($7 - $8) + [1])
	if ( ($7 == 0) ){ goto $label$1 }
	$7 = CALL memchr($4, [58], $7)
	if ( ($7 == 0) ){ goto $label$1 }
	if ( (CALL memcmp($7, [144], $8) == 0) ){ goto $label$4 }
	$4 = ($7 + [1])
	$7 = ($3 - $4)
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ($7 - $6)
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $85($13, $1, [0], $4, $1)
	if ( (*($13 + [16]) & [1]) ){ goto $label$6 }
	*($13 + [16]) = [0]
	goto $label$5 
	
.LABEL $label$6
	*(*($13 + [24])) = [0]
	*($13 + [20]) = [0]
	
.LABEL $label$5
	CALL $81(($13 + [16]), [0])
	*((($13 + [16]) + [8])) = *(($13 + [8]))
	*($13 + [16]) = *($13)
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) > (uint_32)[1544068800]) ){ goto $label$1 }
	$7 = [-1]
	$8 = *($1)
	CALL $85($13, $1, ($4 + [1]), (( *(($1 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) ) + ((int_32)$4 ^ (int_32)[-1])), $1)
	$3 = (*($13) & [1])
	$6 = *($13 + [8])
	$8 = ( $6 ? ($13 | [1]) : $3 )
	
.LOOP $label$7:
	$1 = ($8 + $7)
	$4 = ($7 + [1])
	$7 = $4
	if ( *(($1 + [1])) ){ goto $label$7 }
	$5 = (CASTING uint_64)(uint_32 $4)
	$10 = (int_64)0
	$9 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$8:
	$12 = (int_64)0
	if ( ((uint_64)$10 >= (uint_64)$5) ){ goto $label$9 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$13 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$12 
	
.LABEL $label$13
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$12
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$8 }
	*($2) = $11
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $79($6)
	
.LABEL $label$1
	$8 = [1]
	$7 = *($13 + [16])
	$1 = CALL strlen([160])
	if ( ((int_32)$1 != (int_32)( *($13 + [20]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$15 }
	if ( (CALL $82(($13 + [16]), [0], [-1], [160], $1) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$8 = *($13 + [16])
	$7 = *($13 + [20])
	$1 = CALL strlen([176])
	if ( ((int_32)$1 != (int_32)( $7 ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$17 }
	if ( (CALL $82(($13 + [16]), [0], [-1], [176], $1) == 0) ){ goto $label$16 }
	$7 = *($13 + [20])
	$8 = *($13 + [16])
	
.LABEL $label$17
	$8 = ((( $7 ? uint_32($8 >> [1]) : ($8 & [1]) ) & [1]) + [1])
	goto $label$14 
	
.LABEL $label$16
	$8 = [2]
	
.LABEL $label$14
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $79(*($13 + [24]))
	
.LABEL $label$18
	*([0] + [4]) = ($13 + [32])
	return ($8 & [255])
}

void .FUNC _ZN15CargoboatPirate11on_transferERKN5eosio8currency8transferEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	$8 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = [0]
	$6 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7(($0 + [208]), $3)
	
.LABEL $label$1
	$8 = ((int_64)$8 & (int_64)4294967295)
	if ( ((uint_64)*($6 + [24]) > (uint_64)$8) ){ goto $label$2 }
	$10 = *($6 + [64])
	$7 = *($6 + [72])
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$3 }
	if ( (int_64)($10 == 0) ){ goto $label$3 }
	$5 = [4]
	if ( ((uint_64)$8 > (uint_64)$10) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = [1]
	if ( ((uint_64)$10 > (uint_64)$8) ){ goto $label$2 }
	$5 = [2]
	if ( ((uint_64)$7 > (uint_64)$8) ){ goto $label$2 }
	CALL _ZN15CargoboatPirate12on_round_endEv($0)
	$5 = [3]
	
.LABEL $label$2
	$8 = *($0)
	if ( ((int_64)*($1) == (int_64)$8) ){ goto $label$4 }
	if ( ((int_64)*($1 + [8]) != (int_64)$8) ){ goto $label$4 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [192]
	$9 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$10 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$3 = ($3 + [165])
	goto $label$8 
	
.LABEL $label$10
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$9 == (int_64)$2), [208])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)*($0)), [240])
	$6 = ($1 + [24])
	CALL eosio_assert(((int_64)*($6) == (int_64)1397703940), [352])
	$4 = ($1 + [16])
	$3 = [0]
	if ( ((uint_64)((int_64)*($1 + [16]) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$11 }
	$8 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [288])
	if ( ((int_64)*($4) != (int_64)1) ){ goto $label$16 }
	*(($6 = (($11 + [48]) + [12]))) = *(($4 + [12]))
	*(($3 = (($11 + [48]) + [8]))) = *(($4 + [8]))
	*($11 + [48]) = *($4)
	*($11 + [52]) = *(($4 + [4]))
	$8 = *($1)
	*((($11 + [8]) + [12])) = *($6)
	*((($11 + [8]) + [8])) = *($3)
	*($11 + [12]) = *($11 + [52])
	*($11 + [8]) = *($11 + [48])
	CALL _ZN15CargoboatPirate8withdrawEyN5eosio5assetE($0, $8, ($11 + [8]))
	goto $label$4 
	
.LABEL $label$16
	CALL eosio_assert((((int_32)$5 == (int_32)[2]) | ((int_32)$5 == (int_32)[4])), [320])
	CALL $84(($11 + [32]), ($1 + [32]))
	$6 = ($6 & [1])
	$6 = *($11 + [32])
	$3 = ( *($11 + [36]) ? uint_32($6 >> [1]) : $6 )
	if ( ($3 == 0) ){ goto $label$17 }
	$6 = ( *($11 + [40]) ? (($11 + [32]) | [1]) : $6 )
	
.LOOP $label$18:
	*($6) = CALL tolower(*($6))
	$6 = ($6 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$18 }
	
.LABEL $label$17
	*($11 + [24]) = (int_64)0
	$6 = CALL _ZN15CargoboatPirate11handle_memoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy($6, ($11 + [32]), ($11 + [24]))
	CALL _ZN15CargoboatPirate13on_player_betEyhyy($0, *($1), $6, *(($1 + [16])), *($11 + [24]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $79(*(($11 + [40])))
	
.LABEL $label$4
	*([0] + [4]) = ($11 + [64])
}

void .FUNC _ZN15CargoboatPirate12on_round_endEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	$1 = ($0 + [208])
	$6 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7($1, $5)
	
.LABEL $label$1
	$2 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( (uint_64)((int_64))($2 - *($6 + [32])) <= (int_64)172801) ){ goto $label$2 }
	CALL _ZN15CargoboatPirate5cleanEb($0, [0])
	$3 = *($0)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [512])
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$1), [560])
	CALL eosio_assert(((int_64)*(($0 + [208])) == (int_64)CALL $fimport$2()), [608])
	*(($6 + [32])) = $2
	$2 = *($6)
	CALL eosio_assert([1], [672])
	*($7 + [104]) = ($7 + [88])
	*($7 + [100]) = $7
	*($7 + [96]) = $7
	CALL $8(($7 + [96]), $6)
	CALL db_update_i64(*($6 + [92]), $3, $7, [88])
	$6 = ($0 + [224])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$2 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$6 = [1]
	$3 = *(CALL $7($1, CALL $fimport$11(*($5), *($4), (int_64)7035924439720001536, (int_64)0)) + [48])
	$4 = ($0 + [216])
	$5 = ($0 + [208])
	$2 = *(CALL $7($1, CALL $fimport$11(*($5), *($4), (int_64)7035924439720001536, (int_64)0)) + [40])
	if ( (int_64)(((int_64)$2 | (int_64)$3) == 0) ){ goto $label$9 }
	if ( (int_64)($2 == 0) ){ goto $label$8 }
	if ( (int_64)($3 == 0) ){ goto $label$8 }
	if ( ((uint_64)$2 >= (uint_64)$3) ){ goto $label$7 }
	$1 = [1]
	CALL _ZN15CargoboatPirate13handle_normalEhh($0, [1], [2])
	goto $label$6 
	
.LABEL $label$9
	$1 = [4]
	goto $label$4 
	
.LABEL $label$8
	CALL _ZN15CargoboatPirate13handle_refundEv($0)
	$1 = [5]
	goto $label$4 
	
.LABEL $label$7
	if ( ((uint_64)$2 <= (uint_64)$3) ){ goto $label$5 }
	$1 = [2]
	CALL _ZN15CargoboatPirate13handle_normalEhh($0, [2], [1])
	
.LABEL $label$6
	$6 = [0]
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)$2 != (int_64)$3) ){ goto $label$3 }
	CALL _ZN15CargoboatPirate11handle_tiedEv($0)
	$1 = [3]
	
.LABEL $label$4
	CALL _ZN15CargoboatPirate17record_last_roundEh($0, ($1 & [255]))
	CALL _ZN15CargoboatPirate15start_new_roundEb($0, $6)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [112])
}

void .FUNC _ZN15CargoboatPirate8withdrawEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [144])
	*([0] + [4]) = $15
	CALL require_auth($1)
	$3 = *(($0 + [112]))
	$7 = *(($0 + [116]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$1 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [88])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [448])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $10($6, $7)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [448])
	
.LABEL $label$3
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [960])
	$10 = *($2)
	CALL eosio_assert(((uint_64)((int_64)*($8 + [8]) + (int_64)$10) > (uint_64)$10), [992])
	*($2) = ((int_64)$10 + (int_64)*($8 + [8]))
	$9 = *($0)
	CALL eosio_assert($7, [512])
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [560])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$2()), [608])
	$10 = (int_64)0
	*($8 + [8]) = (int_64)0
	$12 = *($8)
	CALL eosio_assert([1], [672])
	CALL eosio_assert([1], [80])
	CALL memcpy(($15 + [16]), $8, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($15 + [16]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($15 + [16]) + [16]), ($8 + [16]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($15 + [16]) + [24]), ($8 + [24]), [8])
	CALL db_update_i64(*($8 + [36]), $9, ($15 + [16]), [32])
	$8 = ($0 + [104])
	if ( (uint_64)($12 <= *($8)) ){ goto $label$5 }
	*($8) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$5 = *($0)
	$9 = (int_64)59
	$8 = [1040]
	$11 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$11 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$6 = ($6 + [165])
	goto $label$9 
	
.LABEL $label$11
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [192]
	$13 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$17 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$6 = ($6 + [165])
	goto $label$15 
	
.LABEL $label$17
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$13
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$13 = ((int_64)$12 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$12 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1056]
	$14 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$23 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$6 = ($6 + [165])
	goto $label$21 
	
.LABEL $label$23
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$18 }
	*(($15 + [8])) = [0]
	*($15) = (int_64)0
	$8 = CALL strlen([1072])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$27 }
	*($15) = ($8 << [1])
	$6 = ($15 | [1])
	if ( $8 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $78($7)
	*($15) = ($7 | [1])
	*($15 + [8]) = $6
	*($15 + [4]) = $8
	
.LABEL $label$26
	CALL memcpy($6, [1072], $8)
	
.LABEL $label$25
	*(($6 + $8)) = [0]
	*((($15 + [16]) + [28])) = *(($2 + [12]))
	*((($15 + [16]) + [24])) = *(($2 + [8]))
	*((($15 + [16]) + [20])) = *(($2 + [4]))
	*($15 + [24]) = $1
	*($15 + [16]) = *($0)
	*($15 + [32]) = *($2)
	$8 = ($15 + [8])
	*(($15 + [56])) = *($8)
	*($15 + [48]) = *($15)
	*($15) = [0]
	*($15 + [4]) = [0]
	*($8) = [0]
	*($15 + [72]) = $13
	*($15 + [80]) = $14
	*(($8 = CALL $78([16]))) = $5
	*($8 + [8]) = $11
	*((($15 + [72]) + [32])) = [0]
	$6 = ($8 + [16])
	*((($15 + [72]) + [24])) = $6
	*((($15 + [72]) + [20])) = $6
	*($15 + [88]) = $8
	*($15 + [100]) = [0]
	*((($15 + [72]) + [36])) = [0]
	$8 = *($15 + [48])
	$6 = ( *((($15 + [16]) + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($6 + [32])
	$10 = (CASTING uint_64)(uint_32 $6)
	$6 = (($15 + [72]) + [28])
	
.LOOP $label$28:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$28 }
	if ( ($8 == 0) ){ goto $label$30 }
	CALL $33($6, $8)
	$6 = *(($15 + [104]))
	$8 = *(($15 + [100]))
	goto $label$29 
	
.LABEL $label$30
	$6 = [0]
	$8 = [0]
	
.LABEL $label$29
	*($15 + [132]) = $8
	*($15 + [128]) = $8
	*($15 + [136]) = $6
	*($15 + [112]) = ($15 + [128])
	*($15 + [120]) = ($15 + [16])
	CALL $34(($15 + [120]), ($15 + [112]))
	CALL $35(($15 + [128]), ($15 + [72]))
	$8 = *($15 + [128])
	CALL send_inline($8, (*($15 + [132]) - $8))
	$8 = *($15 + [128])
	if ( ($8 == 0) ){ goto $label$31 }
	*($15 + [132]) = $8
	CALL $79($8)
	
.LABEL $label$31
	$8 = *($15 + [100])
	if ( ($8 == 0) ){ goto $label$32 }
	*(($15 + [104])) = $8
	CALL $79($8)
	
.LABEL $label$32
	$8 = *($15 + [88])
	if ( ($8 == 0) ){ goto $label$33 }
	*(($15 + [92])) = $8
	CALL $79($8)
	
.LABEL $label$33
	if ( ((*(($15 + [48])) & [1]) == 0) ){ goto $label$34 }
	CALL $79(*(($15 + [56])))
	
.LABEL $label$34
	if ( ((*($15) & [1]) == 0) ){ goto $label$35 }
	CALL $79(*(($15 + [8])))
	
.LABEL $label$35
	*([0] + [4]) = ($15 + [144])
	return (unreachable)
	
.LABEL $label$24
	CALL $80($15)
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([48])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = $0
	CALL $12(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $11(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $76($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [9888])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC _ZN15CargoboatPirate13on_player_betEyhyy (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4)
{
	float_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	float_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	*($13 + [40]) = $1
	*($13 + [39]) = $2
	CALL eosio_assert(((uint_64)$3 > (uint_64)(int_64)999), [384])
	CALL eosio_assert(((($2 + [-1]) & [255]) <= [2]), [416])
	$5 = (CASTING float_64)(uint_64 $3)
	$7 = *(($0 + [112]))
	$11 = *(($0 + [116]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$1 }
	$2 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$4) ){ goto $label$1 }
	$11 = $2
	$9 = ($2 + [-24])
	$2 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$10 = ($0 + [88])
	$6 = ((float_64)$5 * (float_64)(float_64)0.05)
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$5 }
	$2 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$10), [448])
	goto $label$4 
	
.LABEL $label$5
	$12 = $6
	$2 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3020384829779738624, $4)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $10($10, $2)
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$10), [448])
	
.LABEL $label$4
	$12 = $6
	if ( (int_64)($4 == 0) ){ goto $label$3 }
	$12 = $6
	if ( ($2 == 0) ){ goto $label$3 }
	$12 = $6
	if ( ((int_64)$1 == (int_64)$4) ){ goto $label$3 }
	$12 = ((float_64)$5 * (float_64)(float_64)0.005)
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, $4, (Rounds 0)($12))
	$12 = (float_64))($6 - $12)
	
.LABEL $label$3
	CALL _ZN15CargoboatPirate16add_user_balanceEyy($0, (int_64)6138435675190493712, (Rounds 0)($12))
	$12 = ((float_64)$5 * (float_64)(float_64)0.02)
	*($13 + [24]) = $12
	*($13 + [16]) = (float_64))((float_64))($5 - $6) - $12)
	$7 = *(($0 + [112]))
	$11 = *(($0 + [116]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$6 }
	$2 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$7:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$6 }
	$11 = $2
	$9 = ($2 + [-24])
	$2 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$10 }
	$2 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$10), [448])
	if ( $2 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$2 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $10($10, $2) + [32]) == (int_32)$10), [448])
	goto $label$8 
	
.LABEL $label$9
	$4 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$2()), [16])
	*(($2 = CALL $78([48])) + [32]) = $10
	*($2 + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2) = $1
	*($2 + [24]) = (int_64)0
	CALL eosio_assert([1], [80])
	CALL memcpy(($13 + [48]), $2, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($13 + [48]) | [8]), ($2 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($13 + [48]) + [16]), ($2 + [16]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy((($13 + [48]) + [24]), ($2 + [24]), [8])
	$1 = *($2)
	$11 = CALL db_store_i64(*(($0 + [96])), (int_64)-3020384829779738624, $4, $1, ($13 + [48]), [32])
	*($2 + [36]) = $11
	$9 = ($0 + [104])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$11 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($13 + [96]) = $2
	$1 = *($2)
	*($13 + [48]) = $1
	*($13 + [120]) = $11
	$8 = ($0 + [116])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [120]))) ){ goto $label$13 }
	*($9 + [8]) = $1
	*($9 + [16]) = $11
	*($13 + [96]) = [0]
	*($9) = $2
	*($8) = ($9 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $11(($0 + [112]), ($13 + [96]), ($13 + [48]), ($13 + [120]))
	
.LABEL $label$12
	$2 = *($13 + [96])
	*($13 + [96]) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $79($2)
	
.LABEL $label$8
	$10 = ($0 + [208])
	$2 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$14 }
	$2 = CALL $7($10, $9)
	
.LABEL $label$14
	*($13 + [8]) = $10
	*($13 + [12]) = $2
	$1 = *($13 + [40])
	$7 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$15 }
	$2 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$16:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$15 }
	$11 = $2
	$9 = ($2 + [-24])
	$2 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	$2 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$21 }
	$9 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$2), [448])
	$1 = *($0)
	if ( $9 ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$9 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)-3020380796268576768, $1)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$19 }
	$9 = CALL $20($2, $9)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$2), [448])
	$1 = *($0)
	
.LABEL $label$20
	*($13 + [52]) = ($13 + [39])
	*($13 + [48]) = ($13 + [8])
	*($13 + [56]) = ($13 + [16])
	CALL eosio_assert([1], [512])
	CALL $23($2, $9, $1, ($13 + [48]))
	goto $label$17 
	
.LABEL $label$19
	$1 = *($0)
	
.LABEL $label$18
	*($13 + [52]) = ($13 + [8])
	*($13 + [48]) = ($13 + [40])
	*($13 + [56]) = ($13 + [39])
	*($13 + [60]) = ($13 + [16])
	*($13 + [120]) = $1
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [16])
	*($13 + [96]) = $2
	*($13 + [100]) = ($13 + [48])
	*($13 + [104]) = ($13 + [120])
	*(($9 = CALL $78([56])) + [40]) = $2
	*($9 + [8]) = (int_64)0
	CALL $21(($13 + [96]), $9)
	*($13 + [112]) = $9
	$1 = *($9)
	*($13 + [96]) = $1
	$11 = *($9 + [44])
	*($13 + [92]) = $11
	$8 = ($0 + [36])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [40]))) ){ goto $label$23 }
	*($2 + [8]) = $1
	*($2 + [16]) = $11
	*($13 + [112]) = [0]
	*($2) = $9
	*($8) = ($2 + [24])
	goto $label$22 
	
.LABEL $label$23
	CALL $22(($0 + [32]), ($13 + [112]), ($13 + [96]), ($13 + [92]))
	
.LABEL $label$22
	$2 = *($13 + [112])
	*($13 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $79($2)
	
.LABEL $label$17
	*($13 + [4]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$1 = *($0)
	*($13 + [52]) = ($13 + [40])
	*($13 + [56]) = ($13 + [39])
	*($13 + [60]) = ($13 + [16])
	*($13 + [64]) = ($13 + [4])
	*($13 + [48]) = $0
	*($13 + [120]) = $1
	CALL eosio_assert(((int_64)*($0 + [128]) == (int_64)CALL $fimport$2()), [16])
	$9 = ($0 + [128])
	*($13 + [96]) = $9
	*($13 + [100]) = ($13 + [48])
	*($13 + [104]) = ($13 + [120])
	*(($2 = CALL $78([56])) + [40]) = $9
	CALL $24(($13 + [96]), $2)
	*($13 + [112]) = $2
	$1 = *($2)
	*($13 + [96]) = $1
	$11 = *($2 + [44])
	*($13 + [92]) = $11
	$8 = ($0 + [156])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [160]))) ){ goto $label$25 }
	*($9 + [8]) = $1
	*($9 + [16]) = $11
	*($13 + [112]) = [0]
	*($9) = $2
	*($8) = ($9 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $25(($0 + [152]), ($13 + [112]), ($13 + [96]), ($13 + [92]))
	
.LABEL $label$24
	$2 = *($13 + [112])
	*($13 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$26 }
	CALL $79($2)
	
.LABEL $label$26
	$1 = *($0)
	$2 = *($13 + [12])
	*($13 + [60]) = $0
	*($13 + [52]) = ($13 + [16])
	*($13 + [48]) = ($13 + [24])
	*($13 + [56]) = ($13 + [39])
	*($13 + [64]) = ($13 + [8])
	*($13 + [68]) = ($13 + [4])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [512])
	CALL $26($10, $2, $1, ($13 + [48]))
	*([0] + [4]) = ($13 + [128])
}

void .FUNC _ZN15CargoboatPirate16add_user_balanceEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$3 = *(($0 + [112]))
	$8 = *(($0 + [116]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [88])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$7 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$5), [448])
	$9 = *($0)
	if ( $7 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-3020384829779738624, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$7 = CALL $10($5, $7)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$5), [448])
	$9 = *($0)
	
.LABEL $label$6
	CALL eosio_assert([1], [512])
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$5), [560])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$2()), [608])
	$1 = *($7)
	$6 = *($7 + [8])
	CALL eosio_assert(((uint_64)((int_64)$6 + (int_64)$2) >= (uint_64)$6), [912])
	*($7 + [8]) = ((int_64)*($7 + [8]) + (int_64)$2)
	CALL eosio_assert(((int_64)$1 == (int_64)*($7)), [672])
	CALL eosio_assert([1], [80])
	CALL memcpy($10, $7, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 + [16]), ($7 + [16]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 + [24]), ($7 + [24]), [8])
	CALL db_update_i64(*($7 + [36]), $9, $10, [32])
	$7 = ($0 + [104])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$9 = *($0)
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$2()), [16])
	*(($7 = CALL $78([48])) + [24]) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [32]) = $5
	*($7) = $1
	*($7 + [8]) = $2
	CALL eosio_assert([1], [80])
	CALL memcpy($10, $7, [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 + [16]), ($7 + [16]), [8])
	CALL eosio_assert([1], [80])
	CALL memcpy(($10 + [24]), ($7 + [24]), [8])
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [96])), (int_64)-3020384829779738624, $9, $1, $10, [32])
	*($7 + [36]) = $8
	$5 = ($0 + [104])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$8 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($10 + [40]) = $7
	$1 = *($7)
	*($10) = $1
	*($10 + [36]) = $8
	$4 = ($0 + [116])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [120]))) ){ goto $label$10 }
	*($5 + [8]) = $1
	*($5 + [16]) = $8
	*($10 + [40]) = [0]
	*($5) = $7
	*($4) = ($5 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $11(($0 + [112]), ($10 + [40]), $10, ($10 + [36]))
	
.LABEL $label$9
	$7 = *($10 + [40])
	*($10 + [40]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $79($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [128])
	CALL memcpy(($1 + [32]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN15CargoboatPirate19record_last_userbetEyyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	*($9 + [64]) = $1
	*($9 + [56]) = $2
	*($9 + [48]) = $3
	*($9 + [40]) = $4
	$5 = ($0 + [48])
	$8 = ($0 + [56])
	$7 = CALL db_lowerbound_i64(*($0 + [48]), *($8), (int_64)-3020380795972681728, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $53($5, $7)
	$3 = *($7 + [16])
	CALL eosio_assert([1], [1152])
	$7 = CALL db_next_i64(*($7 + [52]), ($9 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LOOP $label$4:
	$7 = CALL $53($5, $7)
	$4 = *($7 + [16])
	CALL eosio_assert([1], [1152])
	$3 = (int_64)((int_64)$3 << (int_64)32) >> (int_64)32
	$3 = ( $3) ? $4 : ((uint_64)$3 > (uint_64)$4) )
	$7 = CALL db_next_i64(*($7 + [52]), ($9 + [8]))
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	$4 = (int_64)((int_64)((int_64)$3 << (int_64)32) + (int_64)-12884901888) >> (int_64)32)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)-3
	
.LABEL $label$1
	$7 = CALL db_lowerbound_i64(*($5), *($8), (int_64)-3020380795972681728, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $53($5, $7)
	
.LOOP $label$6:
	if ( ((uint_64)*($7 + [16]) <= (uint_64)$4) ){ goto $label$7 }
	CALL eosio_assert([1], [1152])
	$8 = *($7 + [52])
	$7 = [0]
	$8 = CALL db_next_i64($8, ($9 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $53($5, $8)
	
.LABEL $label$8
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = [0]
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [1104])
	CALL eosio_assert($6, [1152])
	$6 = CALL db_next_i64(*($7 + [52]), ($9 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $53($5, $6)
	
.LABEL $label$9
	CALL $56($5, $7)
	$7 = $8
	if ( $8 ){ goto $label$6 }
	
.LABEL $label$5
	$7 = ($0 + [208])
	$8 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $7($7, $6)
	
.LABEL $label$10
	*($9 + [36]) = $8
	*($9 + [32]) = $7
	$4 = *($0)
	*($9 + [8]) = $0
	*($9 + [12]) = ($9 + [64])
	*($9 + [16]) = ($9 + [32])
	*($9 + [20]) = ($9 + [56])
	*($9 + [24]) = ($9 + [48])
	*($9 + [28]) = ($9 + [40])
	*($9 + [104]) = $4
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [16])
	*($9 + [80]) = $5
	*($9 + [84]) = ($9 + [8])
	*($9 + [88]) = ($9 + [104])
	*(($7 = CALL $78([64])) + [32]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [40]) = (int_64)0
	*($7 + [48]) = $5
	CALL $54(($9 + [80]), $7)
	*($9 + [96]) = $7
	$4 = *($7)
	*($9 + [80]) = $4
	$8 = *($7 + [52])
	*($9 + [76]) = $8
	$6 = ($0 + [76])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [80]))) ){ goto $label$12 }
	*($5 + [8]) = $4
	*($5 + [16]) = $8
	*($9 + [96]) = [0]
	*($5) = $7
	*($6) = ($5 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $55(($0 + [72]), ($9 + [96]), ($9 + [80]), ($9 + [76]))
	
.LABEL $label$11
	$7 = *($9 + [96])
	*($9 + [96]) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $79($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [112])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([64])) + [32]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = $0
	CALL $59(($8 + [32]), $6)
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($6 + [60]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $55(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [64])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [48])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [56])), (int_64)-3020380795972681728, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $53($5, $6)
	*($11 + [12]) = [0]
	*($11 + [8]) = $5
	$7 = *(*(CALL $57(($11 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [64])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [736])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*(*($3 + [8]) + [4]) + [8])
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	*($1 + [40]) = *(*($3 + [20]))
	$12 = $12
	$3 = ($12 + [-48])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = $12
	CALL $58(($11 + [8]), $1)
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020380795972681728, *(*($0 + [8])), $7, $3, [48])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = ($2 + [8])
	$7 = *($3)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	*($11 + [24]) = *(($1 + [8]))
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-3020380795972681728, $9, $10, ($11 + [24]))
	$7 = *($0)
	$9 = *($3)
	$10 = *($1)
	*($11 + [24]) = *(($1 + [16]))
	*(($1 + [60])) = CALL db_idx64_store($9, (int_64)-3020380795972681727, $7, $10, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $38(*($1), ($0 + [32]))
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
	$7 = *(($1 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380795972681728, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [60]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380795972681727, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $57 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [52]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [864])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3020380795972681728)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [800])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [800])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $53(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $33($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [80])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [80])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $37(CALL $36($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $28 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [44]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [864])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4812882776358578176)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [800])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [800])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $27(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$5 = *($0 + [4])
	*($1) = *(*($5))
	*($1 + [8]) = *(*(*($5 + [4]) + [4]) + [8])
	$2 = *($0)
	$4 = *(*($5 + [8]))
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$1 }
	*($1 + [16]) = (Rounds 0)(*(*($5 + [12])))
	goto $label$1 
	
.LABEL $label$2
	*($1 + [24]) = (Rounds 0)(*(*($5 + [12])))
	
.LABEL $label$1
	$9 = $9
	$5 = ($9 + [-48])
	*([0] + [4]) = $5
	*($8 + [12]) = $5
	*($8 + [8]) = $5
	*($8 + [16]) = ($9 + [-8])
	CALL $31(($8 + [8]), $1)
	$3 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-3020380796268576768, *(*($0 + [8])), $3, $5, [40])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = *(($2 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($8 + [24]) = *(($1 + [8]))
	*($1 + [48]) = CALL db_idx64_store($3, (int_64)-3020380796268576768, $6, $7, ($8 + [24]))
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([56])) + [40]) = $0
	*($6 + [8]) = (int_64)0
	CALL $32(($8 + [32]), $6)
	*($6 + [48]) = [-1]
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $22(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $23 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [560])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [608])
	$6 = ($1 + [8])
	$4 = *($6)
	*($6) = *(*(*($3) + [4]) + [8])
	*(($6 = $7) + [24]) = $4
	$4 = *($1)
	$5 = *(*($3 + [4]))
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$1 }
	$5 = ($1 + [16])
	goto $label$2 
	
.LABEL $label$3
	$5 = ($1 + [24])
	
.LABEL $label$2
	*($5) = (Rounds 0)(((float_64)*(*($3 + [8])) + (float_64)(CASTING float_64)(uint_64 *($5))))
	
.LABEL $label$1
	CALL eosio_assert([1], [672])
	$7 = $7
	$3 = ($7 + [-48])
	*([0] + [4]) = $3
	*($6 + [12]) = $3
	*($6 + [8]) = $3
	*($6 + [16]) = ($7 + [-8])
	CALL $31(($6 + [8]), $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($6 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($6 + [24]), ($6 + [40]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [48])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020380796268576768, ($6 + [32]), $4)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($6 + [40]))
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $78(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $83($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $79($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $79($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [144])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [128])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [136])), (int_64)-4812882776358578176, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $27($5, $6)
	*($11 + [12]) = [0]
	*($11 + [8]) = $5
	$7 = *(*(CALL $28(($11 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [144])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [736])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = (Rounds 0)(*(*($3 + [12])))
	*($1 + [32]) = *(*($3 + [16]))
	$12 = $12
	$3 = ($12 + [-32])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = ($12 + [-3])
	CALL $29(($11 + [8]), $1)
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-4812882776358578176, *(*($0 + [8])), $7, $3, [29])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = ($2 + [8])
	$7 = *($3)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	*($11 + [24]) = *(($1 + [8]))
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)-4812882776358578176, $9, $10, ($11 + [24]))
	$7 = *($0)
	$9 = *($3)
	$10 = *($1)
	*($11 + [24]) = *(($1 + [16]))
	*(($1 + [52])) = CALL db_idx64_store($9, (int_64)-4812882776358578175, $7, $10, ($11 + [24]))
	*([0] + [4]) = ($11 + [32])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [96])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $78([56])) + [40]) = $0
	CALL $30(($8 + [32]), $6)
	*($6 + [48]) = [-1]
	*($6 + [44]) = $1
	*($6 + [52]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $79($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $26 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	float_64 $10
	float_64 $11
	float_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [16])
	$14 = $15
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [560])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [608])
	*($1 + [80]) = (Rounds 0)(((float_64)*(*($3)) + (float_64)(CASTING float_64)(uint_64 *($1 + [80]))))
	$5 = *($3 + [12])
	$4 = *($1)
	*($1 + [16]) = (Rounds 0)(((float_64)*(*($3 + [4])) + (float_64)(CASTING float_64)(uint_64 *($1 + [16]))))
	$13 = *(*($3 + [8]))
	if ( ((int_32)$13 == (int_32)[2]) ){ goto $label$3 }
	if ( ((int_32)$13 != (int_32)[1]) ){ goto $label$1 }
	$13 = ($1 + [40])
	goto $label$2 
	
.LABEL $label$3
	$13 = ($1 + [48])
	
.LABEL $label$2
	*($13) = (Rounds 0)(((float_64)*(*(($3 + [4]))) + (float_64)(CASTING float_64)(uint_64 *($13))))
	$6 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = [0]
	$7 = CALL db_lowerbound_i64(*($5 + [208]), *(($5 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$13 = CALL $7(($5 + [208]), $7)
	
.LABEL $label$4
	$6 = ((int_64)$6 & (int_64)4294967295)
	if ( ((uint_64)*($13 + [24]) > (uint_64)$6) ){ goto $label$1 }
	$9 = *($13 + [64])
	$8 = *($13 + [72])
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$5 }
	if ( (int_64)($9 == 0) ){ goto $label$5 }
	if ( ((uint_64)$6 <= (uint_64)$9) ){ goto $label$5 }
	*($1 + [72]) = ((int_64)*(*($3 + [20])) + (int_64)600)
	goto $label$1 
	
.LABEL $label$5
	if ( ((uint_64)$8 <= (uint_64)$6) ){ goto $label$1 }
	if ( ((uint_64)$9 > (uint_64)$6) ){ goto $label$1 }
	$5 = *(*($3 + [16]) + [4])
	if ( (uint_64)(((int_64)*(*($3 + [20])) + (int_64)60) <= *($5 + [72])) ){ goto $label$1 }
	$11 = *(*(($3 + [4])))
	$6 = *($5 + [40])
	$10 = (CASTING float_64)(uint_64 $6)
	$9 = *($5 + [48])
	$12 = (CASTING float_64)(uint_64 $9)
	if ( ((uint_64)$6 > (uint_64)$9) ){ goto $label$7 }
	if ( ((float_64)((float_64)$10 + (float_64)$11) > (float_64)$12) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((uint_64)$9 > (uint_64)$6) ){ goto $label$1 }
	$11 = ((float_64)$12 + (float_64)$11)
	if ( (((float_64)$11 <= (float_64)$10) | (((float_64)$11 != (float_64)$11) | ((float_64)$10 != (float_64)$10))) ){ goto $label$1 }
	
.LABEL $label$6
	*($1 + [72]) = ((int_64)*($1 + [72]) + (int_64)60)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [672])
	$15 = $15
	$3 = ($15 + [-96])
	*([0] + [4]) = $3
	*($14 + [4]) = $3
	*($14) = $3
	*($14 + [8]) = ($15 + [-8])
	CALL $8($14, $1)
	CALL db_update_i64(*($1 + [92]), $2, $3, [88])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($14 + [16])
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1392])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [1456])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $70($6, $0)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_64 .FUNC _ZN15CargoboatPirate13get_base_betsEv (int_32 $0)
{
	return *(CALL $7(($0 + [208]), CALL $fimport$11(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)) + [56])
}

int_64 .FUNC _ZN15CargoboatPirate16get_bets_by_boatEh (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$4 = (int_64)0
	$3 = [0]
	$2 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $7(($0 + [208]), $2)
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$4 }
	if ( ((int_32)$1 != (int_32)[1]) ){ goto $label$2 }
	$0 = ($3 + [40])
	goto $label$3 
	
.LABEL $label$4
	$0 = ($3 + [48])
	
.LABEL $label$3
	$4 = *($0)
	
.LABEL $label$2
	return $4
}

void .FUNC _ZN15CargoboatPirate5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1056]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$8 }
	CALL $68(($9 + [16]))
	CALL _ZN15CargoboatPirate11on_transferERKN5eosio8currency8transferEy($0, ($9 + [16]), $1)
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $79(*(($9 + [56])))
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$2 != (int_64)-6077959540857372672) ){ goto $label$7 }
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$7 }
	*($9 + [12]) = [0]
	*($9 + [8]) = [1]
	*($9) = *($9 + [8])
	CALL $69($0, $9)
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [64])
}

void .FUNC _ZN15CargoboatPirate4pingEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	$1 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = [0]
	$2 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $7(($0 + [208]), $2)
	
.LABEL $label$1
	$1 = ((int_64)$1 & (int_64)4294967295)
	if ( ((uint_64)*($5 + [24]) > (uint_64)$1) ){ goto $label$2 }
	$4 = *($5 + [64])
	$3 = *($5 + [72])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$4 }
	if ( ((uint_64)$3 > (uint_64)$1) ){ goto $label$2 }
	if ( ((uint_64)$4 <= (uint_64)$1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_64)$4 > (uint_64)$1) ){ goto $label$2 }
	if ( (((int_64)$4 != (int_64)0) & ((uint_64)$1 > (uint_64)$4)) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZN15CargoboatPirate12on_round_endEv($0)
	
.LABEL $label$2
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1184])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1232])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1296])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $79($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $79($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC _ZN15CargoboatPirate10get_winnerEv (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = *(CALL $7($4, CALL $fimport$11(*($0 + [208]), *($3), (int_64)7035924439720001536, (int_64)0)) + [48])
	$3 = ($0 + [216])
	$4 = ($0 + [208])
	$1 = *(CALL $7($4, CALL $fimport$11(*($0 + [208]), *($3), (int_64)7035924439720001536, (int_64)0)) + [40])
	if ( (int_64)(((int_64)$1 | (int_64)$2) == 0) ){ goto $label$2 }
	$0 = [5]
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( (int_64)($2 == 0) ){ goto $label$1 }
	$0 = [1]
	if ( (uint_64)($1 <= $2) ){ goto $label$1 }
	$0 = [2]
	if ( ((uint_64)$1 > (uint_64)$2) ){ goto $label$1 }
	return ( [3] ? [0] : ((int_64)$1 == (int_64)$2) )
	
.LABEL $label$2
	$0 = [4]
	
.LABEL $label$1
	return ($0 & [255])
}

int_32 .FUNC _ZN15CargoboatPirate10get_statusEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$1 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$6 = [0]
	$5 = [0]
	$2 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $7(($0 + [208]), $2)
	
.LABEL $label$1
	$1 = ((int_64)$1 & (int_64)4294967295)
	if ( ((uint_64)*($5 + [24]) > (uint_64)$1) ){ goto $label$2 }
	$4 = *($5 + [64])
	$3 = *($5 + [72])
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$3 }
	if ( (int_64)($4 == 0) ){ goto $label$3 }
	$6 = [4]
	if ( ((uint_64)$1 > (uint_64)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = [1]
	if ( ((uint_64)$4 > (uint_64)$1) ){ goto $label$2 }
	return ( [2] ? [3] : ((uint_64)$3 > (uint_64)$1) )
	
.LABEL $label$2
	return ($6 & [255])
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC tolower (int_32 $0)
{
	return ( ($0 | [32]) ? $0 : (($0 + [-65]) <= [26]) )
}

int_32 .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $78($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $78($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $83 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $78(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $79($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $80 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1488])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $33($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [128])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [256])
	*([0] + [4]) = $3
	CALL _ZN15CargoboatPirate5applyEyy(CALL $5(($3 + [8]), $0), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $71($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $72($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $81($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $78($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $81($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $79($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $80($7)
	return (unreachable)
}

int_32 .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9974]) == 0) ){ goto $label$2 }
	$7 = *([0] + [9976])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [9974]) = [1]
	$7 = ($7 << [16])
	*([0] + [9976]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9976])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [9976]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [9974]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [9974]) = [1]
	$3 = ($3 << [16])
	*([0] + [9976]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9976])
	
.LABEL $label$8
	*([0] + [9976]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [9876])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9684]
	$1 = (((int_32)$2 * (int_32)[12]) + [9684])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $75([1492], $0)
}

void .FUNC _ZN15CargoboatPirate5cleanEb (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)-3020380796268576768, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$2 = ($0 + [8])
	$4 = CALL $20($2, $1)
	
.LOOP $label$3:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [44]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $20($2, $3)
	
.LABEL $label$4
	CALL $45($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$3 }
	
.LABEL $label$2
	$1 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)-3020384829779738624, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + [88])
	$4 = CALL $10($2, $1)
	
.LOOP $label$6:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [36]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$1 = CALL $10($2, $3)
	
.LABEL $label$7
	CALL $60($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$5
	$1 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)7035924439720001536, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	$2 = ($0 + [208])
	$4 = CALL $7($2, $1)
	
.LOOP $label$9:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [92]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $7($2, $3)
	
.LABEL $label$10
	CALL $61($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$8
	$1 = CALL db_lowerbound_i64(*($0 + [168]), *(($0 + [176])), (int_64)-4812882599418527744, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$11 }
	$2 = ($0 + [168])
	$4 = CALL $47($2, $1)
	
.LOOP $label$12:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [60]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	$1 = CALL $47($2, $3)
	
.LABEL $label$13
	CALL $48($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$12 }
	
.LABEL $label$11
	$1 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)-4812882776358578176, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [128])
	$4 = CALL $27($2, $1)
	
.LOOP $label$14:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [44]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$15 }
	$1 = CALL $27($2, $3)
	
.LABEL $label$15
	CALL $46($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$14 }
	
.LABEL $label$1
	$1 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)-3020380795972681728, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$16 }
	$2 = ($0 + [48])
	$4 = CALL $53($2, $1)
	
.LOOP $label$17:
	CALL eosio_assert([1], [1104])
	CALL eosio_assert([1], [1152])
	$1 = [0]
	$3 = CALL db_next_i64(*($4 + [52]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$18 }
	$1 = CALL $53($2, $3)
	
.LABEL $label$18
	CALL $56($2, $4)
	$4 = $1
	if ( $1 ){ goto $label$17 }
	
.LABEL $label$16
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [80])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [80])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [80])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [80])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [80])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9980])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $79 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $78($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $83($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $79($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [128])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [128])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [128])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [128])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [80])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}