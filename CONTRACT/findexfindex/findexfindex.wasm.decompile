(data (i32.const 4) "\c0q\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "force to fail\00")
(data (i32.const 144) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 208) "cannot pass end iterator to erase\00")
(data (i32.const 256) "cannot increment end iterator\00")
(data (i32.const 288) "object passed to erase is not in multi_index\00")
(data (i32.const 336) "cannot erase objects in table of another contract\00")
(data (i32.const 400) "attempt to remove object that was not in multi_index\00")
(data (i32.const 464) "error reading iterator\00")
(data (i32.const 496) "read\00")
(data (i32.const 512) "cannot create objects in table of another contract\00")
(data (i32.const 576) "write\00")
(data (i32.const 592) "findex percent must be >= 0\00")
(data (i32.const 624) "findex percent must be <= 100\00")
(data (i32.const 656) "cannot pass end iterator to modify\00")
(data (i32.const 704) "object passed to modify is not in multi_index\00")
(data (i32.const 752) "cannot modify objects in table of another contract\00")
(data (i32.const 816) "updater cannot change primary key when modifying an object\00")
(data (i32.const 880) "get\00")
(data (i32.const 896) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 960) "invalid symbol name\00")
(data (i32.const 1008) "can not find server status\00")
(data (i32.const 1040) "server is not running now\00")
(data (i32.const 1072) "can not find pair\00")
(data (i32.const 1104) "can not find quote\00")
(data (i32.const 1136) "can not find base\00")
(data (i32.const 1168) "can not find buy order\00")
(data (i32.const 1200) "can not find sell order\00")
(data (i32.const 1232) "can not find buy record\00")
(data (i32.const 1264) "can not find sell record\00")
(data (i32.const 1296) "active\00")
(data (i32.const 1304) " \05\00\00")
(data (i32.const 1312) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1360) "attempt to subtract asset with different symbol\00")
(data (i32.const 1408) "subtraction underflow\00")
(data (i32.const 1440) "subtraction overflow\00")
(data (i32.const 1472) "buyer get quote should be positive\00")
(data (i32.const 1520) "cal quote to base: quote symbol mismatch\00")
(data (i32.const 1568) " \n buy market...\00")
(data (i32.const 1600) "cal base to quote: base symbol mismatch\00")
(data (i32.const 1648) "can not deal market buy and market sell order\00")
(data (i32.const 1696) "\n quote contract : \00")
(data (i32.const 1728) "\n base contract : \00")
(data (i32.const 1760) "\n\00")
(data (i32.const 1776) "\n deal quantity: \00")
(data (i32.const 1808) "\n buyer : \00")
(data (i32.const 1824) "\n buy_order_price: \00")
(data (i32.const 1856) "\n buy_order_id : \00")
(data (i32.const 1888) "\n buy_record_id : \00")
(data (i32.const 1920) "\n buy_record.remaining_quantity: \00")
(data (i32.const 1968) "\n buyer_get_quote : \00")
(data (i32.const 2000) "\n seller : \00")
(data (i32.const 2016) "\n sell_order_price: \00")
(data (i32.const 2048) "\n sell_order_id : \00")
(data (i32.const 2080) "\n sell_record_id : \00")
(data (i32.const 2112) "\n sell_record.remaining_quantity: \00")
(data (i32.const 2160) "\n seller_get_base : \00")
(data (i32.const 2192) "\n buyer_get_quote: \00")
(data (i32.const 2224) "\n seller_get_base: \00")
(data (i32.const 2256) "findex trade, buy\00")
(data (i32.const 2288) "findex trade, sell\00")
(data (i32.const 2320) "\n buyer transaction fee\00")
(data (i32.const 2352) "findex commission, buy\00")
(data (i32.const 2384) "multiplication overflow\00")
(data (i32.const 2416) "multiplication underflow\00")
(data (i32.const 2448) "divide by zero\00")
(data (i32.const 2464) "signed division overflow\00")
(data (i32.const 2496) "transaction fee can not be negative to self\00")
(data (i32.const 2544) " \nbuyer transaction fee self\00")
(data (i32.const 2576) " \nbuyer transaction fee referer\00")
(data (i32.const 2608) "transaction fee can not be negative to referer\00")
(data (i32.const 2656) "findex referer commission, buy\00")
(data (i32.const 2688) " \nseller transaction fee: \00")
(data (i32.const 2720) "findex commission, sell\00")
(data (i32.const 2752) " \nseller transaction self\00")
(data (i32.const 2784) " \nseller transaction fee refer\00")
(data (i32.const 2816) "findex referer commission, sell\00")
(data (i32.const 2848) ".\00")
(data (i32.const 2864) " \00")
(data (i32.const 2880) ",\00")
(data (i32.const 2896) "\n diff_price is :\00")
(data (i32.const 2928) "\n buy price > sell price need to return remaining value \00")
(data (i32.const 2992) "findex trade, remaining return\00")
(data (i32.const 3024) "invalid price match\00")
(data (i32.const 3056) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 3120) " \nbuy market max quantity is: \00")
(data (i32.const 3152) "user is in blacklist\00")
(data (i32.const 3184) "token symbol mismatch\00")
(data (i32.const 3216) "admin withdraw\00")
(data (i32.const 3232) "type mismatch\00")
(data (i32.const 3248) "attempt to add asset with different symbol\00")
(data (i32.const 3296) "addition underflow\00")
(data (i32.const 3328) "addition overflow\00")
(data (i32.const 3360) "liquid balance is not enough\00")
(data (i32.const 3392) "overdraw liquid\00")
(data (i32.const 3408) "withdraw\00")
(data (i32.const 3424) "can not find record\00")
(data (i32.const 3456) "can not find order\00")
(data (i32.const 3488) "ADMIN_CANCEL_ORDER\00")
(data (i32.const 3520) "CANCEL_ORDER\00")
(data (i32.const 3536) "symbol does not match\00")
(data (i32.const 3568) "amount must be positive\00")
(data (i32.const 3600) "minimum volume is required\00")
(data (i32.const 3632) "next primary key in table is at autoincrement limit\00")
(data (i32.const 3696) "MARKET_SELL_ORDER\00")
(data (i32.const 3728) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 3792) "cannot decrement iterator at beginning of table\00")
(data (i32.const 3840) "price must be positive\00")
(data (i32.const 3872) "SELL_ORDER\00")
(data (i32.const 3888) "MARKET_BUY_ORDER\00")
(data (i32.const 3920) "BUY_ORDER\00")
(data (i32.const 3936) "findextxfees\00")
(data (i32.const 3952) "findexadmin1\00")
(data (i32.const 3968) "force fail when call deposit directly\00")
(data (i32.const 4016) "eosio.bpay\00")
(data (i32.const 4032) "eosio.names\00")
(data (i32.const 4048) "eosio.ram\00")
(data (i32.const 4064) "eosio.ramfee\00")
(data (i32.const 4080) "eosio.saving\00")
(data (i32.const 4096) "eosio.stake\00")
(data (i32.const 4112) "eosio.vpay\00")
(data (i32.const 4128) "invalid quantity\00")
(data (i32.const 4160) "cannot deposit negative balance\00")
(data (i32.const 4192) "dappfund.bos\00")
(data (i32.const 4208) "does not support this token\00")
(data (i32.const 12640) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_find_primary" (func $fimport$8 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx128_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$15 (param i32)))
(import "env" "db_store_i64" (func $fimport$16 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$17 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$18 (param i32 i32)))
(import "env" "is_account" (func $fimport$19 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$22 (param i32 i32 i32) (result i32)))
(import "env" "printdf" (func $fimport$23 (param f64)))
(import "env" "printi" (func $fimport$24 (param i64)))
(import "env" "prints" (func $fimport$25 (param i32)))
(import "env" "prints_l" (func $fimport$26 (param i32 i32)))
(import "env" "printui" (func $fimport$27 (param i64)))
(import "env" "read_action_data" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$29 (param i64)))
(import "env" "require_auth2" (func $fimport$30 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$31 (param i64)))
(import "env" "send_inline" (func $fimport$32 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN6findex6findexC2Eyy" (func $6))
(export "_ZN6findex6findex7depositEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $7))
(export "_ZN6findex6findexC2Ey" (func $10))
(export "_ZN6findex6findex8buyorderENS0_17request_buy_orderE" (func $11))
(export "_ZN6findex6findex9marketbuyENS0_18request_market_buyE" (func $13))
(export "_ZN6findex6findex9sellorderENS0_18request_sell_orderE" (func $15))
(export "_ZN6findex6findex10marketsellENS0_19request_market_sellE" (func $17))
(export "_ZN6findex6findex11cancelorderENS0_20request_cancel_orderE" (func $19))
(export "_ZN6findex6findex11admincancelENS0_20request_cancel_orderE" (func $21))
(export "_ZN6findex6findex8withdrawENS0_16request_withdrawE" (func $22))
(export "_ZN6findex6findex9awithdrawENS0_16request_withdrawE" (func $24))
(export "_ZN6findex6findex12executetradeENS0_21request_execute_tradeE" (func $25))
(export "_ZN6findex6findex11logsetorderERNS0_9log_orderE" (func $27))
(export "_ZN6findex6findex9logcancelERNS0_16log_cancel_orderE" (func $29))
(export "_ZN6findex6findex3logERNS0_8log_dataE" (func $31))
(export "_ZN6findex6findex11updatetokenENS0_20request_update_tokenE" (func $33))
(export "_ZN6findex6findex10updatepairENS0_19request_update_pairE" (func $35))
(export "_ZN6findex6findex11deletetokenEy" (func $37))
(export "_ZN6findex6findex10deletepairEy" (func $39))
(export "_ZN6findex6findex12updateserverEm" (func $40))
(export "_ZN6findex6findex12updateglobalEy" (func $42))
(export "_ZN6findex6findex10updatecorpENS0_24request_update_corp_pairE" (func $43))
(export "_ZN6findex6findex10deletecorpEmy" (func $45))
(export "_ZN6findex6findex11upwhitelistEy" (func $47))
(export "_ZN6findex6findex12delwhitelistEy" (func $48))
(export "_ZN6findex6findex11upblacklistEy" (func $49))
(export "_ZN6findex6findex12delblacklistEy" (func $50))
(export "_ZN6findex6findex24assert_not_in_black_listEy" (func $96))
(export "_ZN6findex6findex13get_deal_infoERKNS0_4pairERKNS0_5orderES6_RKNS0_5tokenES9_" (func $98))
(export "_ZN6findex6findex19set_transaction_feeERKNS0_4pairERKNS0_6recordES6_RmS7_" (func $99))
(export "_ZN6findex6findex30set_white_list_transaction_feeEyRmyS1_" (func $100))
(export "_ZN6findex6findex13deal_transferERKNS0_4pairERyS4_RKNS0_9deal_infoERmS8_RKNS0_5tokenESB_" (func $101))
(export "_ZN6findex6findex26cal_return_remaining_valueERKNS0_5orderERKNS0_4pairENS0_9deal_infoERKNS0_5tokenESA_" (func $116))
(export "_ZN6findex6findex31transfer_record_remark_to_referERKNS0_6recordERKNS0_4pairE" (func $123))
(export "_ZN6findex6findex26transfer_refer_trading_feeEyyN5eosio5assetES2_RKNS0_4pairERKNS0_5tokenES8_" (func $124))
(export "_ZN6findex6findex8assert_bEbPKc" (func $129))
(export "_ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy" (func $138))
(export "_ZN6findex6findex26validate_and_to_base_assetENS0_17request_buy_orderENS0_5tokenES2_NS0_4pairE" (func $163))
(export "_ZN6findex6findex22validate_server_statusEv" (func $167))
(export "_ZN6findex6findex9get_scopeEyNS0_17order_action_typeE" (func $168))
(export "_ZN6findex6findex18request_market_buy8validateEN5eosio15extended_symbolE" (func $169))
(export "_ZN6findex6findex17cal_base_to_quoteExN5eosio5assetENS0_5tokenES3_m" (func $170))
(export "_ZN6findex6findex19cal_transaction_feeEN5eosio5assetEm" (func $171))
(export "_ZN6findex6findex17cal_quote_to_baseExN5eosio5assetENS0_5tokenES3_m" (func $172))
(export "_ZN6findex6findex19get_corp_pair_scopeEyy" (func $173))
(export "_ZN6findex6findex17request_buy_order8validateEN5eosio15extended_symbolE" (func $174))
(export "_ZN6findex6findex18request_sell_order8validateEN5eosio15extended_symbolE" (func $175))
(export "_ZN6findex6findex19request_market_sell8validateEN5eosio15extended_symbolE" (func $176))
(export "malloc" (func $177))
(export "free" (func $180))
(export "round" (func $190))
(export "memcmp" (func $191))
(export "strlen" (func $192))
(table $0 26 26 anyfunc)
(elem (i32.const 0) $193 $27 $7 $21 $42 $39 $15 $19 $33 $25 $31 $29 $47 $22 $49 $43 $50 $45 $13 $17 $24 $11 $35 $40 $37 $48)



void .FUNC _ZN6findex6findex17request_buy_order8validateEN5eosio15extended_symbolE (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*($0 + [32]) > (int_64)0), [3840])
	CALL eosio_assert(((int_64)*(($0 + [24])) == (int_64)*($1)), [3536])
	CALL eosio_assert(((int_64)*($0 + [16]) > (int_64)0), [3568])
}

int_32 .FUNC _ZN6findex6findexC2Eyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	*($0 + [8]) = [0]
	*($0) = $1
	*(($0 + [12])) = (int_64)0
	$3 = ($0 + [8])
	$5 = CALL strlen([3936])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($3) = ($5 << [1])
	$3 = ($3 + [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($5 + [16]) & [-16])
	$3 = CALL $181($4)
	*(($0 + [8])) = ($4 | [1])
	*(($0 + [16])) = $3
	*(($0 + [12])) = $5
	
.LABEL $label$3
	CALL memcpy($3, [3936], $5)
	
.LABEL $label$2
	*(($3 + $5)) = [0]
	$1 = (int_64)0
	$6 = (int_64)59
	$5 = [3952]
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$6
	$5 = ($5 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$5 }
	*(($0 + [24])) = $7
	$1 = *($0)
	*($0 + [32]) = $1
	*(($0 + [40])) = $1
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = $1
	*(($0 + [80])) = $1
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = [0]
	*(($0 + [100])) = [0]
	*(($0 + [104])) = [0]
	*($0 + [112]) = $1
	*(($0 + [120])) = $1
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = [0]
	*(($0 + [140])) = [0]
	*(($0 + [144])) = [0]
	*($0 + [152]) = $1
	*(($0 + [160])) = $1
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = [0]
	*(($0 + [180])) = [0]
	*(($0 + [184])) = [0]
	*($0 + [192]) = $2
	return $0
	
.LABEL $label$1
	CALL $183($3)
	return (unreachable)
}

void .FUNC _ZN6findex6findex19request_market_sell8validateEN5eosio15extended_symbolE (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*(($0 + [24])) == (int_64)*($1)), [3536])
	CALL eosio_assert(((int_64)*($0 + [16]) > (int_64)0), [3568])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $178([4236], $0)
}

void .FUNC _ZN6findex6findex17cal_base_to_quoteExN5eosio5assetENS0_5tokenES3_m (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($4 + [8])), [1600])
	$6 = *($3 + [8])
	*($0 + [8]) = $6
	$1 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 *($2)) * (float_64)(CASTING float_64)(uint_64 *($3 + [40]))) / (float_64)((float_64)(CASTING float_64)(int_64 $1) / (float_64)(CASTING float_64)(uint_32 $5))) / (float_64)(CASTING float_64)(uint_64 *($4 + [40]))))
	*($0) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [960])
}

void .FUNC _ZN6findex6findex19cal_transaction_feeEN5eosio5assetEm (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	$4 = (Rounds 0)(CALL round(((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 $2) / (float_64)(float_64)1e8) * (float_64)(CASTING float_64)(int_64 *($1))) + (float_64)(float_64)0.5)))
	*($0) = $4
	$3 = *($1 + [8])
	*($0 + [8]) = $3
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$1 = [0]
	
.LABEL $label$1
	CALL eosio_assert($1, [960])
}

void .FUNC _ZN6findex6findex17cal_quote_to_baseExN5eosio5assetENS0_5tokenES3_m (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($3 + [8])), [1520])
	$6 = *($4 + [8])
	*($0 + [8]) = $6
	$1 = (Rounds 0)(((float_64)((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $1) / (float_64)(CASTING float_64)(uint_32 $5)) * (float_64)(CASTING float_64)(int_64 *($2))) * (float_64)(CASTING float_64)(uint_64 *($4 + [40]))) / (float_64)(CASTING float_64)(uint_64 *($3 + [40]))))
	*($0) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
}

void .FUNC _ZN6findex6findex7depositEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	CALL eosio_assert(((int_64)*($0 + [192]) != (int_64)0), [3968])
	$15 = *($0)
	if ( ((int_64)$15 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$15 != (int_64)$2) ){ goto $label$1 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [4016]
	$14 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$7 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$3
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [4032]
	$14 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$13 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$5 = ($5 + [165])
	goto $label$11 
	
.LABEL $label$13
	$15 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$9
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$8 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [4048]
	$14 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$19 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$5 = ($5 + [165])
	goto $label$17 
	
.LABEL $label$19
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$15
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$14 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [4064]
	$14 = (int_64)0
	
.LOOP $label$20:
	$13 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$21 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$5 = ($5 + [165])
	goto $label$22 
	
.LABEL $label$23
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$21
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$20 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [4080]
	$14 = (int_64)0
	
.LOOP $label$24:
	$13 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$25 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$5 = ($5 + [165])
	goto $label$26 
	
.LABEL $label$27
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$25
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$24 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [4096]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$33 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$5 = ($5 + [165])
	goto $label$31 
	
.LABEL $label$33
	$15 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$29
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$28 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [4112]
	$14 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$39 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$5 = ($5 + [165])
	goto $label$37 
	
.LABEL $label$39
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$35
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$34 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$5 = [0]
	$6 = *($3)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$40 }
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$5 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$5 = [0]
	
.LABEL $label$40
	CALL eosio_assert($5, [4128])
	$2 = (int_64)0
	CALL eosio_assert(((int_64)$6 > (int_64)0), [4160])
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $1)
	$15 = (int_64)59
	$12 = [4192]
	$14 = (int_64)0
	
.LOOP $label$45:
	$13 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$46 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$5 = ($5 + [165])
	goto $label$47 
	
.LABEL $label$48
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$46
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$45 }
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$1 }
	$2 = *(($0 + [192]))
	$15 = *($3 + [8])
	$3 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)-3665743317141815296, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$49 }
	$7 = ($0 + [32])
	$12 = CALL $74($7, $12)
	$8 = (($16 + [48]) + [24])
	$3 = [0]
	$10 = (($16 + [48]) + [40])
	$11 = (($16 + [48]) + [32])
	
.LOOP $label$50:
	*(($5 = (($16 + [48]) + [16]))) = *(($12 + [16]))
	*(($9 = (($16 + [48]) + [8]))) = *(($12 + [8]))
	*($16 + [48]) = *($12)
	CALL $188($8, ($12 + [24]))
	*($10) = *($12 + [40])
	$5 = (((int_64)*($9) == (int_64)$15) & ((int_64)*($5) == (int_64)$2))
	if ( ((*($8) & [1]) == 0) ){ goto $label$51 }
	CALL $182(*($11))
	
.LABEL $label$51
	$3 = ($5 | $3)
	if ( $5 ){ goto $label$49 }
	CALL eosio_assert([1], [256])
	$12 = CALL db_next_i64(*($12 + [52]), ($16 + [48]))
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$49 }
	$12 = CALL $74($7, $12)
	goto $label$50 
	
.LABEL $label$49
	CALL eosio_assert(($3 & [1]), [4208])
	*($16 + [32]) = $15
	$13 = *($0)
	*(($16 + [8])) = $15
	*($16 + [40]) = $2
	*(($16 + [16])) = $2
	*($16 + [24]) = $6
	*($16) = $6
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $1, $16, $13)
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [96])
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $179($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12640])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [608])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$40 }
	$4 = CALL _ZN6findex6findexC2Ey(($9 + [408]), $0)
	if ( ((int_64)$2 > (int_64)-3064462716267253249) ){ goto $label$39 }
	if ( ((int_64)$2 > (int_64)-3076218983427984897) ){ goto $label$37 }
	if ( ((int_64)$2 > (int_64)-7949128886020734977) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-8279867914920656896) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)-8279723548008251392) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)-8279439764272534016) ){ goto $label$24 }
	*($9 + [324]) = [0]
	*($9 + [320]) = [1]
	*($9 + [80 align=4]) = *($9 + [320])
	CALL $28($4, ($9 + [80]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$40
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$46 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$3 = ($3 + [165])
	goto $label$44 
	
.LABEL $label$46
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$42
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$41 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$38 }
	$4 = CALL _ZN6findex6findexC2Eyy(($9 + [408]), $0, $1)
	*($9 + [404]) = [0]
	*($9 + [400]) = [2]
	*($9 + [200 align=4]) = *($9 + [400])
	CALL $8($4, ($9 + [200]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$39
	if ( ((int_64)$2 > (int_64)5377993503836713359) ){ goto $label$36 }
	if ( ((int_64)$2 > (int_64)3971496089992822783) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-3064462716267253248) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)-2039333636196532224) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)3631284076515860992) ){ goto $label$24 }
	*($9 + [356]) = [0]
	*($9 + [352]) = [3]
	*($9 + [48 align=4]) = *($9 + [352])
	CALL $20($4, ($9 + [48]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$38
	CALL eosio_assert([0], [128])
	goto $label$14 
	
.LABEL $label$37
	if ( ((int_64)$2 > (int_64)-3075276115347652609) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-3076218983427984896) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-3075276122087407616) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)-3075276119992054512) ){ goto $label$24 }
	*($9 + [260]) = [0]
	*($9 + [256]) = [4]
	*($9 + [144 align=4]) = *($9 + [256])
	CALL $38($4, ($9 + [144]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$36
	if ( ((int_64)$2 > (int_64)5378050756354156031) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)5377993503836713360) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)5378050747231191040) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)5378050753970946048) ){ goto $label$24 }
	*($9 + [276]) = [0]
	*($9 + [272]) = [5]
	*($9 + [128 align=4]) = *($9 + [272])
	CALL $38($4, ($9 + [128]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-7949128886020734976) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-7949128877168902144) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-4421661421696712704) ){ goto $label$24 }
	*($9 + [380]) = [0]
	*($9 + [376]) = [6]
	*($9 + [24 align=4]) = *($9 + [376])
	CALL $16($4, ($9 + [24]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)3971496089992822784) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)4520852774451150848) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)4730614996831743488) ){ goto $label$24 }
	*($9 + [364]) = [0]
	*($9 + [360]) = [7]
	*($9 + [40 align=4]) = *($9 + [360])
	CALL $20($4, ($9 + [40]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)-3075276115347652608) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)-3075276113665141392) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)-3075276112964442624) ){ goto $label$24 }
	*($9 + [300]) = [0]
	*($9 + [296]) = [8]
	*($9 + [104 align=4]) = *($9 + [296])
	CALL $34($4, ($9 + [104]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)5378050756354156032) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)5378360887185486224) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)6292810045779972768) ){ goto $label$24 }
	*($9 + [332]) = [0]
	*($9 + [328]) = [9]
	*($9 + [72 align=4]) = *($9 + [328])
	CALL $26($4, ($9 + [72]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$31
	*($9 + [308]) = [0]
	*($9 + [304]) = [10]
	*($9 + [96 align=4]) = *($9 + [304])
	CALL $32($4, ($9 + [96]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$30
	*($9 + [316]) = [0]
	*($9 + [312]) = [11]
	*($9 + [88 align=4]) = *($9 + [312])
	CALL $30($4, ($9 + [88]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$29
	*($9 + [236]) = [0]
	*($9 + [232]) = [12]
	*($9 + [168 align=4]) = *($9 + [232])
	CALL $38($4, ($9 + [168]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$28
	*($9 + [348]) = [0]
	*($9 + [344]) = [13]
	*($9 + [56 align=4]) = *($9 + [344])
	CALL $23($4, ($9 + [56]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$27
	*($9 + [220]) = [0]
	*($9 + [216]) = [14]
	*($9 + [184 align=4]) = *($9 + [216])
	CALL $38($4, ($9 + [184]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$26
	*($9 + [252]) = [0]
	*($9 + [248]) = [15]
	*($9 + [152 align=4]) = *($9 + [248])
	CALL $44($4, ($9 + [152]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$25
	*($9 + [212]) = [0]
	*($9 + [208]) = [16]
	*($9 + [192 align=4]) = *($9 + [208])
	CALL $38($4, ($9 + [192]))
	
.LABEL $label$24
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$23
	*($9 + [244]) = [0]
	*($9 + [240]) = [17]
	*($9 + [160 align=4]) = *($9 + [240])
	CALL $46($4, ($9 + [160]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$22
	*($9 + [388]) = [0]
	*($9 + [384]) = [18]
	*($9 + [16 align=4]) = *($9 + [384])
	CALL $14($4, ($9 + [16]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$21
	*($9 + [372]) = [0]
	*($9 + [368]) = [19]
	*($9 + [32 align=4]) = *($9 + [368])
	CALL $18($4, ($9 + [32]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$20
	*($9 + [340]) = [0]
	*($9 + [336]) = [20]
	*($9 + [64 align=4]) = *($9 + [336])
	CALL $23($4, ($9 + [64]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$19
	*($9 + [396]) = [0]
	*($9 + [392]) = [21]
	*($9 + [8 align=4]) = *($9 + [392])
	CALL $12($4, ($9 + [8]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$18
	*($9 + [292]) = [0]
	*($9 + [288]) = [22]
	*($9 + [112 align=4]) = *($9 + [288])
	CALL $36($4, ($9 + [112]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$17
	*($9 + [268]) = [0]
	*($9 + [264]) = [23]
	*($9 + [136 align=4]) = *($9 + [264])
	CALL $41($4, ($9 + [136]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$16
	*($9 + [284]) = [0]
	*($9 + [280]) = [24]
	*($9 + [120 align=4]) = *($9 + [280])
	CALL $38($4, ($9 + [120]))
	CALL $9($4)
	goto $label$14 
	
.LABEL $label$15
	*($9 + [228]) = [0]
	*($9 + [224]) = [25]
	*($9 + [176 align=4]) = *($9 + [224])
	CALL $38($4, ($9 + [176]))
	CALL $9($4)
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [608])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [52]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC $189 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $181($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $181($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN6findex6findex11upblacklistEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	$4 = CALL db_find_i64($2, $2, (int_64)4344997574076792832, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $51(($7 + [8]), $4) + [8]) == (int_32)($7 + [8])), [144])
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$3()), [512])
	*(($0 = CALL $181([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [64]), $0, [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)4344997574076792832, $5, $2, ($7 + [64]), [8])
	*($0 + [12]) = $3
	$4 = ($7 + [24])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($7 + [56]) = $0
	$2 = *($0)
	*($7 + [64]) = $2
	*($7 + [52]) = $3
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$6 }
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	*($7 + [56]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $53(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$5
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $182($0)
	
.LABEL $label$7
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $182($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $182($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

void .FUNC _ZN6findex6findex12delwhitelistEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-2063328927043551232, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $54($6, $0)
	CALL eosio_assert(((int_32)*($0 + [8]) == (int_32)$6), [144])
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$3 = CALL db_next_i64(*($0 + [12]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $54($6, $3)
	
.LABEL $label$2
	CALL $55($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $182($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $182($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN6findex6findex10updatecorpENS0_24request_update_corp_pairE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	$2 = *($1 + [8])
	$3 = *(($0 + [96]))
	$5 = *(($0 + [100]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$10 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$2) ){ goto $label$1 }
	$5 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [72])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$10 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$6), [144])
	goto $label$3 
	
.LABEL $label$4
	$10 = CALL $62($6, CALL $fimport$6(*(($0 + [72])), *(($0 + [80])), (int_64)-6224682770514313216, $2))
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$6), [144])
	
.LABEL $label$3
	$7 = *($10 + [16])
	$8 = *($10 + [8])
	$10 = [0]
	*(($11 + [40])) = [0]
	*($11 + [24]) = (int_64)-1
	*($11 + [32]) = (int_64)0
	$9 = *($0)
	*($11 + [8]) = $9
	$7 = ((int_64)$7 + (int_64)((int_64)$8 * (int_64)100))
	*($11 + [16]) = $7
	$8 = *($1)
	$6 = CALL db_find_i64($9, $7, (int_64)4985302929318608896, $8)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $57(($11 + [8]), $6)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [8])), [144])
	
.LABEL $label$5
	CALL eosio_assert([1], [592])
	$6 = *($1 + [16])
	CALL eosio_assert(($6 <= [101]), [624])
	$7 = *($0)
	if ( ($10 == 0) ){ goto $label$9 }
	CALL eosio_assert([1], [656])
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [8])), [704])
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)CALL $fimport$3()), [752])
	*($10 + [8]) = $2
	*($10 + [16]) = $6
	*($10 + [20]) = *($1 + [20])
	$2 = *($10)
	CALL eosio_assert([1], [816])
	CALL eosio_assert([1], [576])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) | [8]), ($10 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) + [16]), ($10 + [16]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) + [20]), ($10 + [20]), [4])
	CALL db_update_i64(*($10 + [28]), $7, ($11 + [64]), [24])
	$10 = (($11 + [8]) + [16])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$8 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$5 = *($11 + [32])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	CALL eosio_assert(((int_64)*($11 + [8]) == (int_64)CALL $fimport$3()), [512])
	*(($10 = CALL $181([40])) + [24]) = ($11 + [8])
	*($10 + [8]) = $2
	*($10) = $8
	*($10 + [16]) = $6
	*($10 + [20]) = *($1 + [20])
	CALL eosio_assert([1], [576])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) | [8]), ($10 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) + [16]), ($10 + [16]), [4])
	CALL eosio_assert([1], [576])
	CALL memcpy((($11 + [64]) + [20]), ($10 + [20]), [4])
	$2 = *($10)
	$5 = CALL db_store_i64(*((($11 + [8]) + [8])), (int_64)4985302929318608896, $7, $2, ($11 + [64]), [24])
	*($10 + [28]) = $5
	$6 = (($11 + [8]) + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$10 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($11 + [56]) = $10
	$2 = *($10)
	*($11 + [64]) = $2
	*($11 + [52]) = $5
	$4 = ($11 + [36])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($11 + [40]))) ){ goto $label$12 }
	*($6 + [8]) = $2
	*($6 + [16]) = $5
	*($11 + [56]) = [0]
	*($6) = $10
	*($4) = ($6 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $60(($11 + [32]), ($11 + [56]), ($11 + [64]), ($11 + [52]))
	
.LABEL $label$11
	$10 = *($11 + [56])
	*($11 + [56]) = [0]
	if ( ($10 == 0) ){ goto $label$8 }
	CALL $182($10)
	
.LABEL $label$8
	$5 = *($11 + [32])
	if ( ($5 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = ($11 + [36])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	CALL $182($6)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$15 }
	$10 = *(($11 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$10 = $5
	
.LABEL $label$13
	*($4) = $5
	CALL $182($10)
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [96])
}

void .FUNC _ZN6findex6findex12updateglobalEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	CALL require_auth(*($0))
	*($2 + [8]) = $1
	CALL $65(($0 + [112]), ($2 + [8]), *($0))
	*([0] + [4]) = ($2 + [16])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [496])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN6findex6findex12updateserverEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *(($0 + [176]))
	$8 = *(($0 + [180]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)1) ){ goto $label$1 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [152])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [144])
	if ( ($7 == 0) ){ goto $label$7 }
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-4418113302685548544, (int_64)1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$5 }
	$7 = CALL $70($4, $7)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [144])
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$6 }
	
.LABEL $label$8
	CALL eosio_assert([1], [656])
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$4), [704])
	CALL eosio_assert(((int_64)*(($0 + [152])) == (int_64)CALL $fimport$3()), [752])
	*($7 + [8]) = $1
	$5 = *($7)
	CALL eosio_assert([1], [816])
	CALL eosio_assert([1], [576])
	CALL memcpy(($9 + [16]), $7, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [16]) | [8]), ($7 + [8]), [4])
	CALL db_update_i64(*($7 + [20]), (int_64)0, ($9 + [16]), [12])
	$7 = ($0 + [168])
	if ( (uint_64)($5 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$8 = CALL db_next_i64(*($7 + [20]), ($9 + [16]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	CALL $70($4, $8)
	
.LABEL $label$10
	CALL $72($4, $7)
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [152])) == (int_64)CALL $fimport$3()), [512])
	*(($7 = CALL $181([32])) + [16]) = $4
	*($7 + [8]) = $1
	*($7) = (int_64)1
	CALL eosio_assert([1], [576])
	CALL memcpy(($9 + [16]), $7, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [16]) | [8]), ($7 + [8]), [4])
	$5 = *($7)
	$8 = CALL db_store_i64(*(($0 + [160])), (int_64)-4418113302685548544, $6, $5, ($9 + [16]), [12])
	*($7 + [20]) = $8
	$4 = ($0 + [168])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$11 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($9 + [8]) = $7
	$5 = *($7)
	*($9 + [16]) = $5
	*($9 + [4]) = $8
	$3 = ($0 + [180])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [184]))) ){ goto $label$13 }
	*($4 + [8]) = $5
	*($4 + [16]) = $8
	*($9 + [8]) = [0]
	*($4) = $7
	*($3) = ($4 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $71(($0 + [176]), ($9 + [8]), ($9 + [16]), ($9 + [4]))
	
.LABEL $label$12
	$7 = *($9 + [8])
	*($9 + [8]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $182($7)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN6findex6findex11upwhitelistEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	$4 = CALL db_find_i64($2, $2, (int_64)-2063328927043551232, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $54(($7 + [8]), $4) + [8]) == (int_32)($7 + [8])), [144])
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$3()), [512])
	*(($0 = CALL $181([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [64]), $0, [8])
	$2 = *($0)
	$3 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-2063328927043551232, $5, $2, ($7 + [64]), [8])
	*($0 + [12]) = $3
	$4 = ($7 + [24])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($7 + [56]) = $0
	$2 = *($0)
	*($7 + [64]) = $2
	*($7 + [52]) = $3
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$6 }
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	*($7 + [56]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $56(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$5
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $182($0)
	
.LABEL $label$7
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $182($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $182($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	*($6) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [496])
	CALL memcpy($6, $4, [4])
	CALL eosio_assert(((uint_32)($1 + [-4]) > (uint_32)[7]), [496])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [4]), [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($7)
	$4 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN6findex6findex10deletecorpEmy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$4 = *($0)
	*($7) = $4
	$5 = (CASTING uint_64)(uint_32 $1)
	*($7 + [8]) = $5
	$0 = CALL db_find_i64($4, $5, (int_64)4985302929318608896, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $57($7, $0)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$7), [144])
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$1 = CALL db_next_i64(*($0 + [28]), ($7 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $57($7, $1)
	
.LABEL $label$2
	CALL $58($7, $0)
	
.LABEL $label$1
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $182($1)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $182($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = (*([0] + [4]) - [128])
	$9 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$8 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($4 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*(($4 = (($9 + [32]) + [16]))) = (int_64)0
	*(($5 = (($9 + [32]) + [8]))) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [84]) = $1
	*($9 + [80]) = $1
	*($9 + [88]) = ($1 + $3)
	*($9 + [56]) = ($9 + [80])
	*($9 + [108]) = $5
	*($9 + [112]) = $4
	*($9 + [116]) = ($9 + [52])
	*($9 + [104]) = ($9 + [32])
	CALL $61(($9 + [104]), ($9 + [56]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*(($1 = (($9 + [56]) + [16]))) = *($4)
	*(($3 = (($9 + [56]) + [8]))) = *($5)
	*($9 + [56]) = *($9 + [32])
	*((($9 + [80]) + [16])) = *($1)
	*((($9 + [80]) + [8])) = *($3)
	*($9 + [80]) = *($9 + [56])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$8 = *((*($1) + $8))
	
.LABEL $label$6
	$6 = *((($9 + [80]) + [16]))
	*((($9 + [104]) + [16])) = $6
	$7 = *((($9 + [80]) + [8]))
	*((($9 + [104]) + [8])) = $7
	*((($9 + [8]) + [16])) = $6
	*((($9 + [8]) + [8])) = $7
	$6 = *($9 + [80])
	*($9 + [104]) = $6
	*($9 + [8]) = $6
	CALL void $1((int_32 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [128])
	return [1]
}

void .FUNC _ZN6findex6findex22validate_server_statusEv (int_32 $0)
{
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $188(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $188(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [496])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [496])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $78(*($1), ($0 + [32]))
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]) + [32])
	$5 = *($3 + [12])
	*($1 + [32]) = *($5 + [16])
	*(($1 + [40])) = *(($5 + [24]))
	$5 = *($3 + [12])
	*($1 + [48]) = *($5 + [16])
	*(($1 + [56])) = *(($5 + [24]))
	$5 = *($3 + [16])
	*($1 + [64]) = *($5)
	*(($1 + [80])) = *(($5 + [16]))
	*(($1 + [72])) = *(($5 + [8]))
	$5 = *(*($3 + [20]))
	*($1 + [104]) = [0]
	*($1 + [100]) = $5
	CALL $184(($1 + [88]), (*($3 + [12]) + [40]))
	$3 = *($1 + [88])
	$5 = ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [96])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $128($6, $1)
	$4 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $4, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN6findex6findex26validate_and_to_base_assetENS0_17request_buy_orderENS0_5tokenES2_NS0_4pairE (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	$10 = *($2 + [8])
	CALL eosio_assert(((int_64)*($1 + [32]) > (int_64)0), [3840])
	$7 = ($1 + [24])
	CALL eosio_assert(((int_64)$10 == (int_64)*($7)), [3536])
	CALL eosio_assert(((int_64)*($1 + [16]) > (int_64)0), [3568])
	*((($11 + [48]) + [20])) = *(($2 + [20]))
	*((($11 + [48]) + [16])) = *(($2 + [16]))
	*((($11 + [48]) + [12])) = *(($2 + [12]))
	*(($8 = (($11 + [48]) + [8]))) = *($2 + [8])
	*($11 + [52]) = *(($2 + [4]))
	*($11 + [48]) = *($2)
	$10 = *($7)
	$5 = *($1 + [16])
	$9 = *($1 + [32])
	CALL $188((($11 + [48]) + [24]), ($2 + [24]))
	*(($11 + [20])) = *(($3 + [20]))
	*(($11 + [16])) = *(($3 + [16]))
	*(($11 + [12])) = *(($3 + [12]))
	*(($1 = ($11 + [8]))) = *(($3 + [8]))
	*($11 + [88]) = *($2 + [40])
	*($11 + [4]) = *(($3 + [4]))
	*($11) = *($3)
	CALL $188(($11 + [24]), ($3 + [24]))
	*($11 + [40]) = *($3 + [40])
	$2 = *($4 + [24])
	CALL eosio_assert(((int_64)$10 == (int_64)*($8)), [1520])
	$6 = *($1)
	$5 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $5) * (float_64)((float_64)(CASTING float_64)(int_64 $9) / (float_64)(CASTING float_64)(uint_32 $2))) * (float_64)(CASTING float_64)(uint_64 *($11 + [40]))) / (float_64)(CASTING float_64)(uint_64 *($11 + [88]))))
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$1 = [0]
	
.LABEL $label$1
	CALL eosio_assert($1, [960])
	if ( ((*(($11 + [24])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($11 + [32])))
	
.LABEL $label$6
	if ( ((*((($11 + [48]) + [24])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($11 + [80])))
	
.LABEL $label$7
	CALL eosio_assert(((int_64)$5 >= (int_64)*($4 + [28])), [3600])
	*($0) = $5
	*($0 + [8]) = $6
	*($0 + [16]) = *(($3 + [16]))
	*([0] + [4]) = ($11 + [96])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*([0] + [4]) - [112])
	*([0] + [4]) = $2
	$2 = CALL memcpy($2, $1, [40])
	$3 = ($2 + [40])
	CALL $188($3, ($1 + [40]))
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$1 = (*(*($0)) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL memcpy(($2 + [56]), $2, [40])
	CALL $188((($2 + [56]) + [40]), $3)
	CALL void $1((int_32 ($2 + [56])), (int_32 $0))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*(($2 + [104])))
	
.LABEL $label$2
	if ( ((*(($2 + [40])) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$3
	*([0] + [4]) = ($2 + [112])
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [16]))
}

int_32 .FUNC $160 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
	*(($0 + [48])) = [0]
	*($0 + [40 align=4]) = (int_64)0
	$4 = ($0 + [40])
	$3 = CALL strlen([992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($3 << [1])
	$4 = ($4 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $181($1)
	*(($0 + [40])) = ($1 | [1])
	*(($0 + [48])) = $4
	*(($0 + [44])) = $3
	
.LABEL $label$8
	CALL memcpy($4, [992], $3)
	
.LABEL $label$7
	*(($4 + $3)) = [0]
	return $0
	
.LABEL $label$6
	CALL $183($4)
	return (unreachable)
}

void .FUNC _ZN6findex6findex18request_market_buy8validateEN5eosio15extended_symbolE (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*(($0 + [24])) == (int_64)*($1)), [3536])
	CALL eosio_assert(((int_64)*($0 + [16]) > (int_64)0), [3568])
}

int_64 .FUNC _ZN6findex6findex9get_scopeEyNS0_17order_action_typeE (int_32 $0, int_64 $1, int_32 $2)
{
	return ((int_64)(CASTING uint_64)(uint_32 $2) + (int_64)((int_64)$1 * (int_64)100))
}

void .FUNC _ZN6findex6findex18request_sell_order8validateEN5eosio15extended_symbolE (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*($0 + [32]) > (int_64)0), [3840])
	CALL eosio_assert(((int_64)*(($0 + [24])) == (int_64)*($1)), [3536])
	CALL eosio_assert(((int_64)*($0 + [16]) > (int_64)0), [3568])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN6findex6findex12delblacklistEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)4344997574076792832, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $51($6, $0)
	CALL eosio_assert(((int_32)*($0 + [8]) == (int_32)$6), [144])
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$3 = CALL db_next_i64(*($0 + [12]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $51($6, $3)
	
.LABEL $label$2
	CALL $52($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $182($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $182($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [464])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $181([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [496])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $53(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [464])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $181([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [496])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $56(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [464])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $181([40])) + [24]) = $0
	CALL $59(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $60(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC _ZN6findex6findex19get_corp_pair_scopeEyy (int_32 $0, int_64 $1, int_64 $2)
{
	return ((int_64)((int_64)$1 * (int_64)100) + (int_64)$2)
}

int_32 .FUNC $152 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
	*(($0 + [48])) = [0]
	*($0 + [40 align=4]) = (int_64)0
	$4 = ($0 + [40])
	$3 = CALL strlen([992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($3 << [1])
	$4 = ($4 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $181($1)
	*(($0 + [40])) = ($1 | [1])
	*(($0 + [48])) = $4
	*(($0 + [44])) = $3
	
.LABEL $label$8
	CALL memcpy($4, [992], $3)
	
.LABEL $label$7
	*(($4 + $3)) = [0]
	return $0
	
.LABEL $label$6
	CALL $183($4)
	return (unreachable)
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [16]))
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$4 = *($2)
	$2 = *($0)
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $4)
	
.LABEL $label$2
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [16])
	*(($4 = *($1))) = (*($4) + [8])
	$4 = *($2)
	$2 = *($0 + [24])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$1 = *($1)
	$4 = *($1)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($1) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($1) = ($2 + $4)
	
.LABEL $label$4
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $87(*($1), *($0))
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $87(*($1), *($0 + [24]))
}

int_32 .FUNC $156 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	$4 = ($0 + [32])
	$3 = CALL strlen([992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($3 << [1])
	$4 = ($4 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $181($1)
	*(($0 + [32])) = ($1 | [1])
	*(($0 + [40])) = $4
	*(($0 + [36])) = $3
	
.LABEL $label$8
	CALL memcpy($4, [992], $3)
	
.LABEL $label$7
	*(($4 + $3)) = [0]
	return $0
	
.LABEL $label$6
	CALL $183($4)
	return (unreachable)
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [12]))
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*([0] + [4]) - [112])
	*([0] + [4]) = $2
	$2 = CALL memcpy($2, $1, [40])
	$3 = ($2 + [40])
	CALL $188($3, ($1 + [40]))
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$1 = (*(*($0)) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL memcpy(($2 + [56]), $2, [40])
	CALL $188((($2 + [56]) + [40]), $3)
	CALL void $1((int_32 ($2 + [56])), (int_32 $0))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*(($2 + [104])))
	
.LABEL $label$2
	if ( ((*(($2 + [40])) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$3
	*([0] + [4]) = ($2 + [112])
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]) + [32])
	$5 = *($3 + [12])
	*($1 + [32]) = *($5 + [16])
	*(($1 + [40])) = *(($5 + [24]))
	$5 = *($3 + [12])
	*($1 + [48]) = *($5 + [16])
	*(($1 + [56])) = *(($5 + [24]))
	$5 = *($3 + [16])
	*($1 + [64]) = *($5)
	*(($1 + [80])) = *(($5 + [16]))
	*(($1 + [72])) = *(($5 + [8]))
	$5 = *(*($3 + [20]))
	*($1 + [104]) = [0]
	*($1 + [100]) = $5
	CALL $184(($1 + [88]), (*($3 + [12]) + [40]))
	$3 = *($1 + [88])
	$5 = ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [96])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $128($6, $1)
	$4 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $4, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	*($4) = *($1)
	$2 = ($4 + [32])
	CALL $188($2, ($1 + [32]))
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*((($4 + [48]) + [24])) = *(($4 + [24]))
	*((($4 + [48]) + [16])) = *(($4 + [16]))
	*((($4 + [48]) + [8])) = *(($4 + [8]))
	*($4 + [48]) = *($4)
	CALL $188((($4 + [48]) + [32]), $2)
	CALL void $0((int_32 ($4 + [48])), (int_32 $1))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*(($4 + [88])))
	
.LABEL $label$2
	if ( ((*(($4 + [32])) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*(($4 + [40])))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	$4 = *(*($3 + [8]))
	*($1 + [24]) = (int_64)0
	*($1 + [16]) = $4
	$5 = *($3 + [12])
	*($1 + [32]) = *($5 + [16])
	*(($1 + [40])) = *(($5 + [24]))
	$5 = *($3 + [12])
	*($1 + [48]) = *($5 + [16])
	*(($1 + [56])) = *(($5 + [24]))
	$5 = *($3 + [16])
	*($1 + [64]) = *($5)
	*(($1 + [80])) = *(($5 + [16]))
	*(($1 + [72])) = *(($5 + [8]))
	$5 = *(*($3 + [20]))
	*($1 + [104]) = [0]
	*($1 + [100]) = $5
	CALL $184(($1 + [88]), (*($3 + [12]) + [32]))
	$3 = *($1 + [88])
	$5 = ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [96])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $128($6, $1)
	$4 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $4, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $179 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12726]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12728])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12726]) = [1]
	$7 = ($7 << [16])
	*([0] + [12728]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12728])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12728]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12726]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12726]) = [1]
	$3 = ($3 << [16])
	*([0] + [12728]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12728])
	
.LABEL $label$8
	*([0] + [12728]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC $183 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [512])
	*(($4 = CALL $181([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [576])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, (int_64)7235159537265672192, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)7235159537265672192
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)7235159537265672192
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $69(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $182($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $66($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [656])
	CALL $67($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $68($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	*($1) = *(*($3))
	CALL eosio_assert([1], [816])
	CALL eosio_assert([1], [576])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [464])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $181([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [496])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)7235159537265672192
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)7235159537265672192
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $69(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [464])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $181([56])) + [40]) = $0
	CALL $63(($8 + [32]), $6)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $64(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [128])
	*([0] + [4]) = $2
	$2 = CALL memcpy($2, $1, [40])
	CALL $188(($2 + [40]), ($1 + [40]))
	*(($2 + [64])) = *(($1 + [64]))
	*($2 + [56]) = *($1 + [56])
	CALL $188(($2 + [72]), ($1 + [72]))
	CALL $188(($2 + [84]), ($1 + [84]))
	*(($2 + [104])) = *(($1 + [104]))
	*($2 + [96]) = *($1 + [96])
	CALL $188(($2 + [112]), ($1 + [112]))
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL void $0((int_32 $2), (int_32 $1))
	if ( ((*(($2 + [112])) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*(($2 + [120])))
	
.LABEL $label$2
	if ( ((*(($2 + [84])) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*(($2 + [92])))
	
.LABEL $label$3
	if ( ((*(($2 + [72])) & [1]) == 0) ){ goto $label$4 }
	CALL $182(*(($2 + [80])))
	
.LABEL $label$4
	if ( ((*(($2 + [40])) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [128])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $78(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [36]))
	CALL $78(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [52]))
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $87($0, ($1 + [24]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$5 = *($2)
	*($1 + [8]) = *($5 + [8])
	*(($1 + [20])) = *(($5 + [20]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [12])) = *(($5 + [12]))
	$3 = *($1)
	CALL $184(($1 + [24]), (*($2) + [24]))
	*($1 + [40]) = *(*($2) + [40])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [816])
	$2 = *($1 + [24])
	$5 = ( *(($1 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [32])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $2)
	CALL $86($6, $1)
	CALL db_update_i64(*($1 + [52]), (int_64)0, $5, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$2 = *($0)
	$3 = *($4)
	*($1 + [8]) = *($3 + [8])
	*(($1 + [16])) = *(($3 + [16]))
	CALL $184(($1 + [24]), (*($4) + [24]))
	*($1 + [40]) = *(*($4) + [40])
	$4 = *($1 + [24])
	$3 = ( *(($1 + [28])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [32])
	$5 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($6 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $4)
	CALL $86($7, $1)
	$5 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-3665743317141815296, *(*($0 + [8])), $5, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [8]))
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [496])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $181($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $187($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $182($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $182 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4 + [24]) = [0]
	$2 = *($1)
	*($4 + [8]) = ($4 + [24])
	*($4 + [36]) = ($2 + [16])
	*($4 + [32]) = $2
	*($4 + [40]) = ($2 + [24])
	*($4 + [44]) = ($2 + [32])
	*($4 + [48]) = ($2 + [40])
	*($4 + [52]) = ($2 + [56])
	*($4 + [56]) = ($2 + [64])
	CALL $150(($4 + [32]), ($4 + [8]))
	$2 = *($4 + [24])
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $80($0, $2)
	$3 = *(($0 + [4]))
	$2 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = $3
	$2 = *($1)
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($2 + [16])
	*($4 + [32]) = $2
	*($4 + [40]) = ($2 + [24])
	*($4 + [44]) = ($2 + [32])
	*($4 + [48]) = ($2 + [40])
	*($4 + [52]) = ($2 + [56])
	*($4 + [56]) = ($2 + [64])
	CALL $151(($4 + [32]), ($4 + [24]))
	*([0] + [4]) = ($4 + [64])
}

void .FUNC $148 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [56]) = $3
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	$6 = [0]
	$7 = [0]
	$3 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL $181($4)
	$6 = ($3 + ($5 << [4]))
	*(($8 + [8])) = $6
	*($8) = $3
	*($8 + [4]) = $3
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $7, $2)
	$7 = ($3 + $2)
	*($8 + [4]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $3
	
.LABEL $label$2
	*(($8 + [36])) = $7
	*($8 + [24]) = $1
	*(($8 + [8])) = [0]
	*(($8 + [40])) = $6
	*($8 + [16]) = $0
	*($8 + [32]) = $3
	*($8) = (int_64)0
	CALL $149(($8 + [44]), ($8 + [56]))
	CALL $105(($8 + [64]), ($8 + [16]))
	$3 = *($8 + [64])
	CALL send_inline($3, (*($8 + [68]) - $3))
	$3 = *($8 + [64])
	if ( ($3 == 0) ){ goto $label$4 }
	*($8 + [68]) = $3
	CALL $182($3)
	
.LABEL $label$4
	$3 = *($8 + [44])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($8 + [48])) = $3
	CALL $182($3)
	
.LABEL $label$5
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($8 + [36])) = $3
	CALL $182($3)
	
.LABEL $label$6
	$3 = *($8)
	if ( ($3 == 0) ){ goto $label$7 }
	*($8 + [4]) = $3
	CALL $182($3)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $187($8)
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	*($4) = *($1)
	$2 = ($4 + [32])
	CALL $188($2, ($1 + [32]))
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*((($4 + [48]) + [24])) = *(($4 + [24]))
	*((($4 + [48]) + [16])) = *(($4 + [16]))
	*((($4 + [48]) + [8])) = *(($4 + [8]))
	*($4 + [48]) = *($4)
	CALL $188((($4 + [48]) + [32]), $2)
	CALL void $0((int_32 ($4 + [48])), (int_32 $1))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $182(*(($4 + [88])))
	
.LABEL $label$2
	if ( ((*(($4 + [32])) & [1]) == 0) ){ goto $label$3 }
	CALL $182(*(($4 + [40])))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [12]))
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	$4 = *(*($3 + [8]))
	*($1 + [24]) = (int_64)0
	*($1 + [16]) = $4
	$5 = *($3 + [12])
	*($1 + [32]) = *($5 + [16])
	*(($1 + [40])) = *(($5 + [24]))
	$5 = *($3 + [12])
	*($1 + [48]) = *($5 + [16])
	*(($1 + [56])) = *(($5 + [24]))
	$5 = *($3 + [16])
	*($1 + [64]) = *($5)
	*(($1 + [80])) = *(($5 + [16]))
	*(($1 + [72])) = *(($5 + [8]))
	$5 = *(*($3 + [20]))
	*($1 + [104]) = [0]
	*($1 + [100]) = $5
	CALL $184(($1 + [88]), (*($3 + [12]) + [32]))
	$3 = *($1 + [88])
	$5 = ( *(($1 + [92])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [96])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $128($6, $1)
	$4 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $4, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $146 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [112]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3792])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5003134530400288768)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3728])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3728])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $130(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $141 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	*($5 + [56]) = $3
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	$3 = (*($2 + [4]) - *($2))
	$4 = int_32($3 >> [4])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL $181($3)
	*(($5 + [8])) = ($3 + ($4 << [4]))
	*($5) = $3
	*($5 + [4]) = $3
	$4 = *($2)
	$2 = (*(($2 + [4])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($3, $4, $2)
	*($5 + [4]) = ($3 + $2)
	
.LABEL $label$2
	$2 = CALL $142(($5 + [16]), $5, $0, $1, ($5 + [56]))
	CALL $105(($5 + [64]), $2)
	$3 = *($5 + [64])
	CALL send_inline($3, (*($5 + [68]) - $3))
	$3 = *($5 + [64])
	if ( ($3 == 0) ){ goto $label$3 }
	*($5 + [68]) = $3
	CALL $182($3)
	
.LABEL $label$3
	$3 = *($2 + [28])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [32])) = $3
	CALL $182($3)
	
.LABEL $label$4
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [20])) = $3
	CALL $182($3)
	
.LABEL $label$5
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$6 }
	*($5 + [4]) = $2
	CALL $182($2)
	
.LABEL $label$6
	*([0] + [4]) = ($5 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $187($5)
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $143 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	*($0 + [16]) = (int_64)0
	*(($3 = ($0 + [24]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	$4 = ($0 + [32])
	$3 = CALL strlen([992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($3 << [1])
	$4 = ($4 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $181($1)
	*(($0 + [32])) = ($1 | [1])
	*(($0 + [40])) = $4
	*(($0 + [36])) = $3
	
.LABEL $label$8
	CALL memcpy($4, [992], $3)
	
.LABEL $label$7
	*(($4 + $3)) = [0]
	return $0
	
.LABEL $label$6
	CALL $183($4)
	return (unreachable)
}

int_32 .FUNC $142 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	*($0 + [16]) = *($1)
	*(($0 + [20])) = *($1 + [4])
	*($6) = *($1 + [8])
	*($0 + [8]) = $3
	*($0) = $2
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$1 = *($6)
	$6 = *($4)
	$5 = ( *($6 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [16])
	$2 = (CASTING uint_64)(uint_32 $5)
	$5 = ($0 + [28])
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $80($5, $1)
	$5 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	$6 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	$1 = [0]
	
.LABEL $label$2
	*($7 + [4]) = $1
	*($7) = $1
	*($7 + [8]) = $5
	CALL $87($7, $6)
	CALL eosio_assert(((int_32)(*($7 + [8]) - *($7 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($7 + [4]), ($6 + [16]), [8])
	$1 = (*($7 + [4]) + [8])
	*($7 + [4]) = $1
	CALL eosio_assert(((int_32)(*($7 + [8]) - $1) > (int_32)[7]), [576])
	CALL memcpy(*($7 + [4]), ($6 + [24]), [8])
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [464])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $181([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [496])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [496])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $71(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $78($0, ($1 + [24]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $77 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $182(*(($1 + [32])))
	
.LABEL $label$11
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $182($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [464])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $181([64])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [48]) = $0
	CALL $76(($8 + [32]), $6)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $77(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($4 + [32])))
	
.LABEL $label$10
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($4 + [32])))
	
.LABEL $label$7
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($4 + [32])))
	
.LABEL $label$10
	CALL $182($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $79($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $186($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $181($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $186($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $182($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $183($7)
	return (unreachable)
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [880])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $80($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [496])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC _ZN6findex6findex13get_deal_infoERKNS0_4pairERKNS0_5orderES6_RKNS0_5tokenES9_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	$10 = *($3 + [40])
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$5 }
	$7 = *($4 + [40])
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$4 }
	CALL eosio_assert(((int_64)$10 >= (int_64)$7), [3024])
	$10 = *(( $3 ? $4 : ((uint_32)*($3 + [48]) <= (uint_32)*($4 + [48])) ) + [40])
	CALL eosio_assert(((int_64)*(($3 + [32])) == (int_64)*(($4 + [32]))), [3056])
	$3 = ( $3 ? $4 : ((int_64)*($3 + [24]) <= (int_64)*($4 + [24])) )
	*(($11 + [124])) = *(($3 + [36]))
	*(($4 = ($11 + [120]))) = *(($3 + [32]))
	*($11 + [112]) = *($3 + [24])
	*($11 + [116]) = *(($3 + [28]))
	*($0) = $10
	*(($0 + [16])) = *($4)
	*($0 + [8]) = *($11 + [112])
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$10 != (int_64)0) ){ goto $label$2 }
	$7 = *($4 + [40])
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$2 }
	*((($11 + [64]) + [20])) = *(($5 + [20]))
	*((($11 + [64]) + [16])) = *(($5 + [16]))
	*((($11 + [64]) + [12])) = *(($5 + [12]))
	*(($8 = (($11 + [64]) + [8]))) = *(($5 + [8]))
	*($11 + [64]) = *($5)
	*($11 + [68]) = *(($5 + [4]))
	$10 = *(($3 + [32]))
	$9 = *($3 + [24])
	CALL $188((($11 + [64]) + [24]), ($5 + [24]))
	*((($11 + [16]) + [20])) = *(($6 + [20]))
	*((($11 + [16]) + [16])) = *(($6 + [16]))
	*((($11 + [16]) + [12])) = *(($6 + [12]))
	*(($3 = (($11 + [16]) + [8]))) = *(($6 + [8]))
	*($11 + [104]) = *($5 + [40])
	*($11 + [20]) = *(($6 + [4]))
	*($11 + [16]) = *($6)
	CALL $188((($11 + [16]) + [24]), ($6 + [24]))
	*($11 + [56]) = *($6 + [40])
	$5 = *($2 + [24])
	CALL eosio_assert(((int_64)$10 == (int_64)*($3)), [1600])
	$10 = *($8)
	*($11 + [120]) = $10
	$9 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $9) * (float_64)(CASTING float_64)(uint_64 *($11 + [104]))) / (float_64)((float_64)(CASTING float_64)(int_64 $7) / (float_64)(CASTING float_64)(uint_32 $5))) / (float_64)(CASTING float_64)(uint_64 *($11 + [56]))))
	*($11 + [112]) = $9
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [960])
	if ( ((*((($11 + [16]) + [24])) & [1]) == 0) ){ goto $label$11 }
	CALL $182(*(($11 + [48])))
	
.LABEL $label$11
	if ( ((*((($11 + [64]) + [24])) & [1]) == 0) ){ goto $label$12 }
	CALL $182(*(($11 + [96])))
	
.LABEL $label$12
	CALL eosio_assert(((int_64)*(($4 + [32])) == (int_64)*((($11 + [112]) + [8]))), [3056])
	$3 = ( ($4 + [24]) ? ($11 + [112]) : ((int_64)*($4 + [24]) <= (int_64)*($11 + [112])) )
	*(($5 = ($11 + [12]))) = *(($3 + [12]))
	*(($4 = ($11 + [8]))) = *(($3 + [8]))
	*($11) = *($3)
	*($11 + [4]) = *(($3 + [4]))
	CALL prints([3120])
	CALL $121(($11 + [112]))
	*($0) = $7
	*(($0 + [20])) = *($5)
	*(($0 + [16])) = *($4)
	*(($0 + [12])) = *($11 + [4])
	*($0 + [8]) = *($11)
	goto $label$3 
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($4 + [32])) == (int_64)*(($3 + [32]))), [3056])
	$3 = ( $3 ? $4 : ((int_64)*($4 + [24]) > (int_64)*($3 + [24])) )
	*(($11 + [124])) = *(($3 + [36]))
	*(($4 = ($11 + [120]))) = *(($3 + [32]))
	*($11 + [112]) = *($3 + [24])
	*($11 + [116]) = *(($3 + [28]))
	*($0) = $10
	*(($0 + [16])) = *($4)
	*($0 + [8]) = *($11 + [112])
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [128])
	return (unreachable)
	
.LABEL $label$2
	$7 = *($4 + [40])
	
.LABEL $label$1
	CALL _ZN6findex6findex8assert_bEbPKc((int_64)(((int_64)$7 | (int_64)$10) == 0), [1648])
}

void .FUNC _ZN6findex6findex19set_transaction_feeERKNS0_4pairERKNS0_6recordES6_RmS7_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [128])
	*([0] + [4]) = $17
	$12 = *($1 + [16])
	$11 = *($1 + [8])
	*(($17 + [120])) = [0]
	*($17 + [104]) = (int_64)-1
	*($17 + [112]) = (int_64)0
	*($17 + [88]) = *($0)
	*($17 + [96]) = ((int_64)$12 + (int_64)((int_64)$11 * (int_64)100))
	CALL $188(($17 + [72]), ($2 + [88]))
	$1 = ( *($17 + [80]) ? (($17 + [72]) | [1]) : (*($17 + [72]) & [1]) )
	$2 = [-1]
	
.LOOP $label$1:
	$10 = ($1 + $2)
	$6 = ($2 + [1])
	$2 = $6
	if ( *(($10 + [1])) ){ goto $label$1 }
	$15 = (CASTING uint_64)(uint_32 $6)
	$12 = (int_64)0
	$11 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$2:
	$13 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$15) ){ goto $label$3 }
	$2 = *($1)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$7 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$6 
	
.LABEL $label$7
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$6
	$1 = ($1 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$2 }
	if ( CALL is_account($14) ){ goto $label$8 }
	CALL $184(($17 + [72]), ($0 + [8]))
	
.LABEL $label$8
	CALL $188(($17 + [56]), ($17 + [72]))
	$7 = (*($17 + [56]) & [1])
	$8 = *($17 + [64])
	$1 = ( $8 ? (($17 + [56]) | [1]) : $7 )
	$2 = [-1]
	
.LOOP $label$9:
	$10 = ($1 + $2)
	$6 = ($2 + [1])
	$2 = $6
	if ( *(($10 + [1])) ){ goto $label$9 }
	$15 = (CASTING uint_64)(uint_32 $6)
	$12 = (int_64)0
	$11 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$10:
	$13 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$15) ){ goto $label$11 }
	$2 = *($1)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$2 = ($2 + [165])
	goto $label$12 
	
.LABEL $label$13
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$15 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$14 
	
.LABEL $label$15
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$14
	$1 = ($1 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$10 }
	if ( ($7 == 0) ){ goto $label$16 }
	CALL $182($8)
	
.LABEL $label$16
	CALL $188(($17 + [40]), ($3 + [88]))
	$1 = ( *($17 + [48]) ? (($17 + [40]) | [1]) : (*($17 + [40]) & [1]) )
	$2 = [-1]
	
.LOOP $label$17:
	$10 = ($1 + $2)
	$6 = ($2 + [1])
	$2 = $6
	if ( *(($10 + [1])) ){ goto $label$17 }
	$16 = (CASTING uint_64)(uint_32 $6)
	$12 = (int_64)0
	$11 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$18:
	$13 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$16) ){ goto $label$19 }
	$2 = *($1)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$2 = ($2 + [165])
	goto $label$20 
	
.LABEL $label$21
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$23 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$22 
	
.LABEL $label$23
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$22
	$1 = ($1 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$18 }
	if ( CALL is_account($15) ){ goto $label$24 }
	CALL $184(($17 + [40]), ($0 + [8]))
	
.LABEL $label$24
	CALL $188(($17 + [24]), ($17 + [40]))
	$3 = (*($17 + [24]) & [1])
	$7 = *($17 + [32])
	$1 = ( $7 ? (($17 + [24]) | [1]) : $3 )
	$2 = [-1]
	
.LOOP $label$25:
	$10 = ($1 + $2)
	$6 = ($2 + [1])
	$2 = $6
	if ( *(($10 + [1])) ){ goto $label$25 }
	$16 = (CASTING uint_64)(uint_32 $6)
	$12 = (int_64)0
	$11 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$26:
	$13 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$16) ){ goto $label$27 }
	$2 = *($1)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$2 = ($2 + [165])
	goto $label$28 
	
.LABEL $label$29
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$31 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$30 
	
.LABEL $label$31
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$30
	$1 = ($1 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$26 }
	if ( ($3 == 0) ){ goto $label$32 }
	CALL $182($7)
	
.LABEL $label$32
	CALL $188(($17 + [8]), ($0 + [8]))
	$1 = ( *($17 + [16]) ? (($17 + [8]) | [1]) : (*($17 + [8]) & [1]) )
	$2 = [-1]
	
.LOOP $label$33:
	$10 = ($1 + $2)
	$6 = ($2 + [1])
	$2 = $6
	if ( *(($10 + [1])) ){ goto $label$33 }
	$9 = (CASTING uint_64)(uint_32 $6)
	$12 = (int_64)0
	$11 = (int_64)59
	$16 = (int_64)0
	
.LOOP $label$34:
	$13 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$9) ){ goto $label$35 }
	$2 = *($1)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$2 = ($2 + [165])
	goto $label$36 
	
.LABEL $label$37
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$39 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$38 
	
.LABEL $label$39
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$38
	$1 = ($1 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$13 | (int_64)$16)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$34 }
	$0 = *(($17 + [112]))
	$10 = *(($17 + [116]))
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$40 }
	$1 = ($10 + [-24])
	$6 = ([0] - $0)
	
.LOOP $label$41:
	if ( ((int_64)*(*($1)) == (int_64)$16) ){ goto $label$40 }
	$10 = $1
	$2 = ($1 + [-24])
	$1 = $2
	if ( ((int_32)($2 + $6) != (int_32)[-24]) ){ goto $label$41 }
	
.LABEL $label$40
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$43 }
	$0 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($17 + [88])), [144])
	goto $label$42 
	
.LABEL $label$43
	$0 = [0]
	$1 = CALL db_find_i64(*($17 + [88]), *(($17 + [96])), (int_64)4985302929318608896, $16)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$42 }
	$0 = CALL $57(($17 + [88]), $1)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($17 + [88])), [144])
	
.LABEL $label$42
	if ( ((*($17 + [8]) & [1]) == 0) ){ goto $label$44 }
	CALL $182(*(($17 + [16])))
	
.LABEL $label$44
	$3 = *(($17 + [112]))
	$10 = *(($17 + [116]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$45 }
	$1 = ($10 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$46:
	if ( ((int_64)*(*($1)) == (int_64)$14) ){ goto $label$45 }
	$10 = $1
	$2 = ($1 + [-24])
	$1 = $2
	if ( ((int_32)($2 + $6) != (int_32)[-24]) ){ goto $label$46 }
	
.LABEL $label$45
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$51 }
	$1 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)($17 + [88])), [144])
	if ( $0 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	$1 = [0]
	$2 = CALL db_find_i64(*($17 + [88]), *(($17 + [96])), (int_64)4985302929318608896, $14)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$52 }
	$1 = CALL $57(($17 + [88]), $2)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)($17 + [88])), [144])
	
.LABEL $label$52
	if ( ($0 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	*($4) = *($0 + [20])
	if ( $1 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$47 }
	
.LABEL $label$48
	*($4) = *($1 + [20])
	
.LABEL $label$47
	$3 = *(($17 + [112]))
	$10 = *(($17 + [116]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$53 }
	$1 = ($10 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$54:
	if ( ((int_64)*(*($1)) == (int_64)$15) ){ goto $label$53 }
	$10 = $1
	$2 = ($1 + [-24])
	$1 = $2
	if ( ((int_32)($2 + $6) != (int_32)[-24]) ){ goto $label$54 }
	
.LABEL $label$53
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$59 }
	$1 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)($17 + [88])), [144])
	if ( $0 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$1 = [0]
	$2 = CALL db_find_i64(*($17 + [88]), *(($17 + [96])), (int_64)4985302929318608896, $15)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$60 }
	$1 = CALL $57(($17 + [88]), $2)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)($17 + [88])), [144])
	
.LABEL $label$60
	if ( ($0 == 0) ){ goto $label$57 }
	
.LABEL $label$58
	*($5) = *($0 + [20])
	if ( $1 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	*($5) = *($1 + [20])
	
.LABEL $label$55
	if ( ((*($17 + [40]) & [1]) == 0) ){ goto $label$61 }
	CALL $182(*(($17 + [48])))
	
.LABEL $label$61
	if ( ((*($17 + [72]) & [1]) == 0) ){ goto $label$62 }
	CALL $182(*(($17 + [80])))
	
.LABEL $label$62
	$10 = *($17 + [112])
	if ( ($10 == 0) ){ goto $label$63 }
	$6 = ($17 + [116])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$65 }
	
.LOOP $label$66:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$67 }
	CALL $182($2)
	
.LABEL $label$67
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$66 }
	$1 = *(($17 + [112]))
	goto $label$64 
	
.LABEL $label$65
	$1 = $10
	
.LABEL $label$64
	*($6) = $10
	CALL $182($1)
	
.LABEL $label$63
	*([0] + [4]) = ($17 + [128])
}

int_32 .FUNC $94 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$0), [144])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3665743317141815296, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $74($0, $5)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$0), [144])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $95 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [144])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6497942333781180416, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $134($0, $5)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)$0), [144])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN6findex6findex24assert_not_in_black_listEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$5 = [0]
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)4344997574076792832, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $51(($6 + [8]), $0) + [8]) == (int_32)($6 + [8])), [144])
	goto $label$1 
	
.LABEL $label$2
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [3152])
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($6 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $182($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $182($5)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $97 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [108]) == (int_32)$0), [144])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5003134530400288768, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $130($0, $5)
	CALL eosio_assert(((int_32)*($6 + [108]) == (int_32)$0), [144])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [40]) = (int_64)0
	*(($4 = ($0 + [48]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$2 = (uint_64)*($4) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [960])
	*(($0 + [72])) = [0]
	*($0 + [64 align=4]) = (int_64)0
	$4 = ($0 + [64])
	$3 = CALL strlen([992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($3 << [1])
	$4 = ($4 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $181($1)
	*(($0 + [64])) = ($1 | [1])
	*(($0 + [72])) = $4
	*(($0 + [68])) = $3
	
.LABEL $label$8
	CALL memcpy($4, [992], $3)
	
.LABEL $label$7
	*(($4 + $3)) = [0]
	return $0
	
.LABEL $label$6
	CALL $183($4)
	return (unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $78(*($1), *($0))
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [496])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $78(*($1), *($0 + [24]))
}

int_32 .FUNC $92 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [144])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4418113302685548544, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $70($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [144])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $93 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [144])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6224682770514313216, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $62($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [144])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	$8 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)4152997947673411584, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $137(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($9 + [8])), [144])
	CALL eosio_assert(((int_64)*($8 + [16]) == (int_64)*($2 + [16])), [3232])
	$1 = *($8)
	$6 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$6), [3248])
	$1 = ((int_64)$1 + (int_64)*($2))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [3296])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [3328])
	$4 = *($8 + [16])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3360])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	CALL eosio_assert([1], [656])
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($9 + [8])), [704])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [752])
	*($8) = $1
	*($8 + [16]) = $4
	$1 = *($8 + [8])
	*($8 + [8]) = $6
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)$6 >> (uint_64)(int_64)8)), [816])
	CALL eosio_assert([1], [576])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [64]) + [16]), ($8 + [16]), [8])
	CALL db_update_i64(*($8 + [28]), $3, ($9 + [64]), [24])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$0 = *($9 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [3392])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [512])
	*(($0 = CALL $181([40])) + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [896])
	$5 = ($0 + [8])
	$1 = (int_64)5459781
	
.LOOP $label$9:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($7, [960])
	*($0 + [24]) = ($9 + [8])
	*(($7 = ($0 + [16]))) = *(($2 + [16]))
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [576])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	CALL eosio_assert([1], [576])
	CALL memcpy((($9 + [64]) + [16]), $7, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)4152997947673411584, $3, $1), ($9 + [64]), [24]
	*($0 + [28]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$12 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$12
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$5 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$2 = CALL db_next_i64(*($8 + [28]), ($9 + [64]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	CALL $137(($9 + [8]), $2)
	
.LABEL $label$13
	CALL $140(($9 + [8]), $8)
	$0 = *($9 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $139(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$4
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $182($8)
	
.LABEL $label$3
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $182($2)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$16 }
	$8 = *(($9 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$8 = $0
	
.LABEL $label$14
	*($7) = $0
	CALL $182($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [96])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [464])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $181([120])
	$4 = CALL $131($6)
	*($6 + [108]) = $0
	CALL $132(($8 + [32]), $4)
	*($6 + [112]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [112])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $133(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($4 + [96])))
	
.LABEL $label$10
	CALL $182($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $131 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1397703940
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [56]))) = (int_64)1397703940
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [960])
	*(($2 = ($0 + [72]))) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [896])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [960])
	*($0 + [88 align=4]) = (int_64)0
	*(($0 + [96])) = (int_64)0
	*($0 + [104]) = [0]
	return $0
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $78($0, ($1 + [88]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [100]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [104]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$11 }
	CALL $182(*(($1 + [96])))
	
.LABEL $label$11
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $182($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [464])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $181([72])) + [32]) = (int_64)1397703940
	*($4 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [960])
	*($4 + [56]) = $0
	*($4 + [48 align=4]) = (int_64)0
	CALL $135(($8 + [32]), $4)
	*($4 + [64]) = [-1]
	*($4 + [60]) = $1
	*($4 + [68]) = [-1]
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $136($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $182($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [496])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [496])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [48]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [496])
	CALL memcpy(($1 + [52]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $181(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $187($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $182($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $182($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [464])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($7)
	CALL db_get_i64($1, $3, $7)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $7)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $181([40])) + [8]) = (int_64)1397703940
	*($5) = (int_64)0
	CALL eosio_assert([1], [896])
	$10 = ($5 + [8])
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [960])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [496])
	CALL memcpy($5, $3, [8])
	$6 = ($7 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [496])
	CALL memcpy($10, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [496])
	CALL memcpy(($5 + [16]), ($3 + [16]), [8])
	*($5 + [28]) = $1
	*($9 + [24]) = $5
	$8 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($9 + [16]) = $8)
	$7 = *($5 + [28])
	*($9 + [12]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($6 + [8]) = $8
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $139($2, ($9 + [24]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$12
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $182($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $5
}

int_32 .FUNC $181 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12732])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC _ZN6findex6findex8assert_bEbPKc (int_32 $0, int_32 $1)
{
	CALL eosio_assert($0, $1)
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $87($0, ($1 + [88]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [100]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [576])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [896])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [960])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $165(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $166(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [180])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $182($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [176]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $182($4)
	
.LABEL $label$1
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [140])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $182($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [136]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $182($4)
	
.LABEL $label$6
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [100])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $182($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [96]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $182($4)
	
.LABEL $label$11
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [60])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$21 }
	CALL $182(*(($2 + [32])))
	
.LABEL $label$21
	CALL $182($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($0 + [56]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $182($4)
	
.LABEL $label$16
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$22 }
	CALL $182(*(($0 + [16])))
	
.LABEL $label$22
	return $0
}

int_64 .FUNC _ZN6findex6findex31transfer_record_remark_to_referERKNS0_6recordERKNS0_4pairE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [32])
	*([0] + [4]) = $12
	CALL $188(($12 + [16]), ($1 + [88]))
	$1 = ( *($12 + [24]) ? (($12 + [16]) | [1]) : (*($12 + [16]) & [1]) )
	$7 = [-1]
	
.LOOP $label$1:
	$6 = ($1 + $7)
	$3 = ($7 + [1])
	$7 = $3
	if ( *(($6 + [1])) ){ goto $label$1 }
	$4 = (CASTING uint_64)(uint_32 $3)
	$9 = (int_64)0
	$8 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$2:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$4) ){ goto $label$3 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$7 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$6 
	
.LABEL $label$7
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$6
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$2 }
	if ( CALL is_account($10) ){ goto $label$8 }
	CALL $184(($12 + [16]), ($0 + [8]))
	
.LABEL $label$8
	CALL $188($12, ($12 + [16]))
	$0 = (*($12) & [1])
	$5 = *($12 + [8])
	$1 = ( $5 ? ($12 | [1]) : $0 )
	$7 = [-1]
	
.LOOP $label$9:
	$6 = ($1 + $7)
	$3 = ($7 + [1])
	$7 = $3
	if ( *(($6 + [1])) ){ goto $label$9 }
	$4 = (CASTING uint_64)(uint_32 $3)
	$9 = (int_64)0
	$8 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$10:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$4) ){ goto $label$11 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$7 = ($7 + [165])
	goto $label$12 
	
.LABEL $label$13
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$15 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$14 
	
.LABEL $label$15
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$14
	$1 = ($1 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$10 }
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $182($5)
	
.LABEL $label$16
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$17 }
	CALL $182(*(($12 + [24])))
	
.LABEL $label$17
	*([0] + [4]) = ($12 + [32])
	return $10
}

void .FUNC $122 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $181($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $80($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $125(($9 + [72]), ($9 + [64]))
	CALL $105(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $182($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $182($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $182($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $182($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $187(($9 + [8]))
}

void .FUNC $121 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([2848])
	CALL prints_l($2, $3)
	CALL prints([2864])
	CALL $126($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$6 = (int_64)0
	$4 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$2 }
	$7 = (int_64))((int_64)0 - $3)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = (CASTING uint_64)(uint_32 $4)
	$7 = (int_64)0
	
.LABEL $label$1
	*(($8 + [40])) = $7
	$2 = *($2)
	*($1 + [24]) = *($2)
	*(($1 + [32])) = *(($2 + [8]))
	*(($1 + [28])) = *(($2 + [4]))
	*(($1 + [36])) = *(($2 + [12]))
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*($8 + [24]) = $6
	$5 = *($1)
	CALL eosio_assert([1], [816])
	$9 = $9
	$2 = ($9 + [-64])
	*([0] + [4]) = $2
	*($8 + [4]) = $2
	*($8) = $2
	*($8 + [8]) = ($9 + [-8])
	CALL $127($8, $1)
	CALL db_update_i64(*($1 + [60]), (int_64)0, $2, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = *(($1 + [48]))
	$6 = *(($1 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$5 }
	$3 = (CASTING uint_64)(uint_32 $2)
	goto $label$4 
	
.LABEL $label$5
	$3 = (CASTING uint_64)(uint_32 $2)
	$6 = (int_64)0
	
.LABEL $label$4
	*($8 + [64]) = $3
	*($8 + [72]) = $6
	if ( (CALL memcmp(($8 + [16]), ($8 + [64]), [16]) == 0) ){ goto $label$6 }
	$9 = ($1 + [64])
	$2 = *($9)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, ($8 + [48]), $5)
	*($9) = $2
	
.LABEL $label$7
	CALL db_idx128_update($2, (int_64)0, ($8 + [64]))
	
.LABEL $label$6
	$2 = (($8 + [16]) + [16])
	$6 = (int_64)0
	$9 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$8 }
	$6 = (int_64))((int_64)0 - $3)
	
.LABEL $label$8
	*($8 + [64]) = (CASTING uint_64)(uint_32 $9)
	*($8 + [72]) = $6
	if ( (CALL memcmp($2, ($8 + [64]), [16]) == 0) ){ goto $label$9 }
	$2 = ($1 + [68])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, ($8 + [48]), $5)
	*($2) = $1
	
.LABEL $label$10
	CALL db_idx128_update($1, (int_64)0, ($8 + [64]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([2880])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [576])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $87(*($1), ($0 + [32]))
}

void .FUNC _ZN6findex6findex26transfer_refer_trading_feeEyyN5eosio5assetES2_RKNS0_4pairERKNS0_5tokenES8_ (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [576])
	*([0] + [4]) = $21
	$19 = *($5 + [16])
	$18 = *($5 + [8])
	$16 = [0]
	*(($21 + [504])) = [0]
	*($21 + [488]) = (int_64)-1
	*($21 + [496]) = (int_64)0
	$20 = *($0)
	*($21 + [472]) = $20
	$19 = ((int_64)$19 + (int_64)((int_64)$18 * (int_64)100))
	*($21 + [480]) = $19
	CALL prints([2320])
	CALL $121($3)
	$5 = CALL db_find_i64($20, $19, (int_64)4985302929318608896, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$16 = CALL $57(($21 + [472]), $5)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($21 + [472])), [144])
	
.LABEL $label$1
	CALL $188(($21 + [456]), ($0 + [8]))
	$8 = (*($21 + [456]) & [1])
	$9 = *($21 + [464])
	$5 = ( $9 ? (($21 + [456]) | [1]) : $8 )
	$17 = [-1]
	
.LOOP $label$2:
	$15 = ($5 + $17)
	$10 = ($17 + [1])
	$17 = $10
	if ( *(($15 + [1])) ){ goto $label$2 }
	$11 = (CASTING uint_64)(uint_32 $10)
	$19 = (int_64)0
	$18 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$3:
	$20 = (int_64)0
	if ( ((uint_64)$19 >= (uint_64)$11) ){ goto $label$4 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$17 = ($17 + [165])
	goto $label$5 
	
.LABEL $label$6
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	if ( ((uint_64)$19 > (uint_64)(int_64)11) ){ goto $label$8 }
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$18 & (int_64)4294967295))
	goto $label$7 
	
.LABEL $label$8
	$20 = ((int_64)$20 & (int_64)15)
	
.LABEL $label$7
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$12 = ((int_64)$20 | (int_64)$12)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$3 }
	if ( ($8 == 0) ){ goto $label$9 }
	CALL $182($9)
	
.LABEL $label$9
	if ( ($16 == 0) ){ goto $label$27 }
	$18 = *($3)
	if ( ((int_64)$18 < (int_64)2) ){ goto $label$27 }
	if ( ((int_64)$12 != (int_64)$1) ){ goto $label$26 }
	$13 = *(($6 + [16]))
	$14 = *($0)
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$33 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$17 = ($17 + [165])
	goto $label$31 
	
.LABEL $label$33
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$29
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$28 }
	*(($21 + [436])) = *(($3 + [12]))
	*(($21 + [432])) = *(($3 + [8]))
	*(($21 + [428])) = *(($3 + [4]))
	*($21 + [416]) = $1
	*($21 + [408]) = $14
	*($21 + [424]) = *($3)
	*(($21 + [448])) = [0]
	*($21 + [440]) = (int_64)0
	$17 = ($21 + [440])
	$5 = CALL strlen([2352])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$15 }
	$10 = ($21 + [424])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$25 }
	*(($21 + [440])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$27
	if ( ((int_64)*($3) < (int_64)2) ){ goto $label$18 }
	$14 = *(($6 + [16]))
	$1 = *($0)
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$39 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$17 = ($17 + [165])
	goto $label$37 
	
.LABEL $label$39
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$35
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$34 }
	*(($21 + [260])) = *(($3 + [12]))
	*(($21 + [256])) = *(($3 + [8]))
	*(($21 + [252])) = *(($3 + [4]))
	*($21 + [240]) = $12
	*($21 + [232]) = $1
	*($21 + [248]) = *($3)
	*(($21 + [272])) = [0]
	*($21 + [264]) = (int_64)0
	$17 = ($21 + [264])
	$5 = CALL strlen([2352])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$17 }
	$10 = ($21 + [248])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$42 }
	*(($21 + [264])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [264])) = ($3 | [1])
	*(($21 + [272])) = $15
	*(($21 + [268])) = $5
	
.LABEL $label$41
	CALL memcpy($15, [2352], $5)
	
.LABEL $label$40
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $1
	*($5 + [8]) = $11
	*($21 + [392]) = $5
	$5 = ($5 + [16])
	*($21 + [400]) = $5
	*($21 + [396]) = $5
	*($21 + [528]) = *($21 + [232])
	*($21 + [536]) = *((($21 + [232]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [264])) = [0]
	*(($21 + [268])) = [0]
	*((($21 + [232]) + [40])) = [0]
	CALL $122($14, (int_64)-3617168760277827584, ($21 + [392]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$43 }
	CALL $182(*($5))
	
.LABEL $label$43
	$5 = *($21 + [392])
	if ( ($5 == 0) ){ goto $label$44 }
	*($21 + [396]) = $5
	CALL $182($5)
	
.LABEL $label$44
	if ( ((*(($21 + [264])) & [1]) == 0) ){ goto $label$18 }
	CALL $182(*(($21 + [272])))
	goto $label$18 
	
.LABEL $label$26
	$19 = (int_64)0
	CALL __multi3(($21 + [24]), $18, (int_64)$18 >> (int_64)63), *($16 + [16]), (int_64)0)
	$11 = *($3 + [8])
	$20 = *((($21 + [24]) + [8]))
	$18 = *($21 + [24])
	CALL eosio_assert(( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$20 < (int_64)0) : (int_64)($20 == 0) ), [2384])
	CALL eosio_assert(( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$20 > (int_64)-1) : ((int_64)$20 == (int_64)-1) ), [2416])
	*($21 + [400]) = $11
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2464])
	*($21 + [392]) = ((int_64)$18 / (int_64)100)
	CALL eosio_assert(((int_64)$18 > (int_64)-100), [2496])
	if ( ((int_64)*($21 + [392]) < (int_64)1) ){ goto $label$19 }
	$13 = *(($6 + [16]))
	$14 = *($0)
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$45:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$50 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$17 = ($17 + [165])
	goto $label$48 
	
.LABEL $label$50
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$47
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$46
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$45 }
	*(($21 + [364])) = *($21 + [396])
	*($21 + [352]) = $12
	*(($21 + [372])) = *(($21 + [404]))
	*(($21 + [368])) = *(($21 + [400]))
	*($21 + [344]) = $14
	*($21 + [360]) = *($21 + [392])
	*(($21 + [384])) = [0]
	*($21 + [376]) = (int_64)0
	$17 = ($21 + [376])
	$5 = CALL strlen([2352])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$13 }
	$10 = ($21 + [360])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$22 }
	*(($21 + [376])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$25
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [440])) = ($3 | [1])
	*(($21 + [448])) = $15
	*(($21 + [444])) = $5
	
.LABEL $label$24
	CALL memcpy($15, [2352], $5)
	
.LABEL $label$23
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $14
	*($5 + [8]) = $11
	*($21 + [392]) = $5
	$5 = ($5 + [16])
	*($21 + [400]) = $5
	*($21 + [396]) = $5
	*($21 + [528]) = *($21 + [408])
	*($21 + [536]) = *((($21 + [408]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [440])) = [0]
	*(($21 + [444])) = [0]
	*((($21 + [408]) + [40])) = [0]
	CALL $122($13, (int_64)-3617168760277827584, ($21 + [392]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$51 }
	CALL $182(*($5))
	
.LABEL $label$51
	$5 = *($21 + [392])
	if ( ($5 == 0) ){ goto $label$52 }
	*($21 + [396]) = $5
	CALL $182($5)
	
.LABEL $label$52
	if ( ((*(($21 + [440])) & [1]) == 0) ){ goto $label$18 }
	CALL $182(*(($21 + [448])))
	goto $label$18 
	
.LABEL $label$22
	$16 = (($5 + [16]) & [-16])
	$15 = CALL $181($16)
	*(($21 + [376])) = ($16 | [1])
	*(($21 + [384])) = $15
	*(($21 + [380])) = $5
	
.LABEL $label$21
	CALL memcpy($15, [2352], $5)
	
.LABEL $label$20
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $14
	*($5 + [8]) = $11
	*($21 + [328]) = $5
	$5 = ($5 + [16])
	*($21 + [336]) = $5
	*($21 + [332]) = $5
	*($21 + [528]) = *($21 + [344])
	*($21 + [536]) = *((($21 + [344]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [376])) = [0]
	*(($21 + [380])) = [0]
	*((($21 + [344]) + [40])) = [0]
	CALL $122($13, (int_64)-3617168760277827584, ($21 + [328]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$53 }
	CALL $182(*($5))
	
.LABEL $label$53
	$5 = *($21 + [328])
	if ( ($5 == 0) ){ goto $label$54 }
	*($21 + [332]) = $5
	CALL $182($5)
	
.LABEL $label$54
	if ( ((*(($21 + [376])) & [1]) == 0) ){ goto $label$19 }
	CALL $182(*(($21 + [384])))
	
.LABEL $label$19
	$19 = *(($3 + [8]))
	*((($21 + [328]) + [8])) = $19
	*($21 + [328]) = *($3)
	CALL eosio_assert(((int_64)$19 == (int_64)*((($21 + [392]) + [8]))), [1360])
	$19 = (int_64)
	*($21 + [328]) = $19(*($21 + [328]) - *($21 + [392])))
	CALL eosio_assert(((int_64)$19 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [1440])
	CALL prints([2544])
	CALL $121(($21 + [392]))
	CALL prints([2576])
	CALL $121(($21 + [328]))
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($21 + [392]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [2608])
	if ( (CALL is_account($1) == 0) ){ goto $label$18 }
	$14 = *($0)
	if ( ((int_64)$14 == (int_64)$1) ){ goto $label$18 }
	if ( ((int_64)*($21 + [328]) < (int_64)1) ){ goto $label$18 }
	$13 = *(($6 + [16]))
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$60 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$17 = ($17 + [165])
	goto $label$58 
	
.LABEL $label$60
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$56
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$55 }
	*(($21 + [300])) = *($21 + [332])
	*($21 + [288]) = $1
	*(($21 + [308])) = *(($21 + [340]))
	*(($21 + [304])) = *(($21 + [336]))
	*($21 + [280]) = $14
	*($21 + [296]) = *($21 + [328])
	*(($21 + [320])) = [0]
	*($21 + [312]) = (int_64)0
	$17 = ($21 + [312])
	$5 = CALL strlen([2656])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$11 }
	$10 = ($21 + [296])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$63 }
	*(($21 + [312])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [312])) = ($3 | [1])
	*(($21 + [320])) = $15
	*(($21 + [316])) = $5
	
.LABEL $label$62
	CALL memcpy($15, [2656], $5)
	
.LABEL $label$61
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $14
	*($5 + [8]) = $11
	*($21 + [512]) = $5
	$5 = ($5 + [16])
	*($21 + [520]) = $5
	*($21 + [516]) = $5
	*($21 + [528]) = *($21 + [280])
	*($21 + [536]) = *((($21 + [280]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [312])) = [0]
	*(($21 + [316])) = [0]
	*((($21 + [280]) + [40])) = [0]
	CALL $122($13, (int_64)-3617168760277827584, ($21 + [512]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$64 }
	CALL $182(*($5))
	
.LABEL $label$64
	$5 = *($21 + [512])
	if ( ($5 == 0) ){ goto $label$65 }
	*($21 + [516]) = $5
	CALL $182($5)
	
.LABEL $label$65
	if ( ((*(($21 + [312])) & [1]) == 0) ){ goto $label$18 }
	CALL $182(*(($21 + [320])))
	
.LABEL $label$18
	CALL prints([2688])
	CALL $121($4)
	$3 = *(($21 + [496]))
	$15 = *(($21 + [500]))
	if ( ((int_32)$15 == (int_32)$3) ){ goto $label$66 }
	$5 = ($15 + [-24])
	$10 = ([0] - $3)
	
.LOOP $label$67:
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$66 }
	$15 = $5
	$17 = ($5 + [-24])
	$5 = $17
	if ( ((int_32)($17 + $10) != (int_32)[-24]) ){ goto $label$67 }
	
.LABEL $label$66
	if ( ((int_32)$15 == (int_32)$3) ){ goto $label$81 }
	$5 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($21 + [472])), [144])
	if ( $5 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$5 = CALL db_find_i64(*($21 + [472]), *(($21 + [480])), (int_64)4985302929318608896, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$79 }
	$5 = CALL $57(($21 + [472]), $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($21 + [472])), [144])
	
.LABEL $label$80
	$18 = *($4)
	if ( ((int_64)$18 < (int_64)2) ){ goto $label$79 }
	if ( ((int_64)$12 != (int_64)$2) ){ goto $label$78 }
	$1 = *(($7 + [16]))
	$11 = *($0)
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$12 = (int_64)0
	
.LOOP $label$82:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$87 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$17 = ($17 + [165])
	goto $label$85 
	
.LABEL $label$87
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$86
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$84
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$83
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$12 = ((int_64)$18 | (int_64)$12)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$82 }
	*(($21 + [212])) = *(($4 + [12]))
	*(($21 + [208])) = *(($4 + [8]))
	*(($21 + [204])) = *(($4 + [4]))
	*($21 + [192]) = $2
	*($21 + [184]) = $11
	*($21 + [200]) = *($4)
	*(($21 + [224])) = [0]
	*($21 + [216]) = (int_64)0
	$17 = ($21 + [216])
	$5 = CALL strlen([2720])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$14 }
	$10 = ($21 + [200])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$77 }
	*(($21 + [216])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$79
	if ( ((int_64)*($4) < (int_64)2) ){ goto $label$70 }
	$1 = *(($7 + [16]))
	$2 = *($0)
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$93 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$17 = ($17 + [165])
	goto $label$91 
	
.LABEL $label$93
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$89
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$88 }
	*(($21 + [68])) = *(($4 + [12]))
	*(($21 + [64])) = *(($4 + [8]))
	*(($21 + [60])) = *(($4 + [4]))
	*($21 + [48]) = $12
	*($21 + [40]) = $2
	*($21 + [56]) = *($4)
	*(($21 + [80])) = [0]
	*($21 + [72]) = (int_64)0
	$17 = ($21 + [72])
	$5 = CALL strlen([2720])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$16 }
	$10 = ($21 + [56])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$96 }
	*(($21 + [72])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [72])) = ($3 | [1])
	*(($21 + [80])) = $15
	*(($21 + [76])) = $5
	
.LABEL $label$95
	CALL memcpy($15, [2720], $5)
	
.LABEL $label$94
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $2
	*($5 + [8]) = $11
	*($21 + [392]) = $5
	$5 = ($5 + [16])
	*($21 + [400]) = $5
	*($21 + [396]) = $5
	*($21 + [528]) = *($21 + [40])
	*($21 + [536]) = *((($21 + [40]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [72])) = [0]
	*(($21 + [76])) = [0]
	*((($21 + [40]) + [40])) = [0]
	CALL $122($1, (int_64)-3617168760277827584, ($21 + [392]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$97 }
	CALL $182(*($5))
	
.LABEL $label$97
	$5 = *($21 + [392])
	if ( ($5 == 0) ){ goto $label$98 }
	*($21 + [396]) = $5
	CALL $182($5)
	
.LABEL $label$98
	if ( ((*(($21 + [72])) & [1]) == 0) ){ goto $label$70 }
	CALL $182(*(($21 + [80])))
	$15 = *($21 + [496])
	if ( $15 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$78
	$19 = (int_64)0
	CALL __multi3(($21 + [8]), $18, (int_64)$18 >> (int_64)63), *($5 + [16]), (int_64)0)
	$11 = *($4 + [8])
	$20 = *((($21 + [8]) + [8]))
	$18 = *($21 + [8])
	CALL eosio_assert(( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$20 < (int_64)0) : (int_64)($20 == 0) ), [2384])
	CALL eosio_assert(( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$20 > (int_64)-1) : ((int_64)$20 == (int_64)-1) ), [2416])
	*($21 + [400]) = $11
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2464])
	*($21 + [392]) = ((int_64)$18 / (int_64)100)
	CALL eosio_assert(((int_64)$18 > (int_64)-100), [2496])
	if ( ((int_64)*($21 + [392]) < (int_64)1) ){ goto $label$71 }
	$14 = *(($7 + [16]))
	$1 = *($0)
	$20 = (int_64)59
	$5 = [1296]
	$11 = (int_64)0
	
.LOOP $label$99:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$104 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$17 = ($17 + [165])
	goto $label$102 
	
.LABEL $label$104
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$103
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$101
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$100
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$11 = ((int_64)$18 | (int_64)$11)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$99 }
	*(($21 + [156])) = *($21 + [396])
	*($21 + [144]) = $12
	*(($21 + [164])) = *(($21 + [404]))
	*(($21 + [160])) = *(($21 + [400]))
	*($21 + [136]) = $1
	*($21 + [152]) = *($21 + [392])
	*(($21 + [176])) = [0]
	*($21 + [168]) = (int_64)0
	$17 = ($21 + [168])
	$5 = CALL strlen([2720])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$12 }
	$10 = ($21 + [152])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$74 }
	*(($21 + [168])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$77
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [216])) = ($3 | [1])
	*(($21 + [224])) = $15
	*(($21 + [220])) = $5
	
.LABEL $label$76
	CALL memcpy($15, [2720], $5)
	
.LABEL $label$75
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $11
	*($5 + [8]) = $12
	*($21 + [392]) = $5
	$5 = ($5 + [16])
	*($21 + [400]) = $5
	*($21 + [396]) = $5
	*($21 + [528]) = *($21 + [184])
	*($21 + [536]) = *((($21 + [184]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [216])) = [0]
	*(($21 + [220])) = [0]
	*((($21 + [184]) + [40])) = [0]
	CALL $122($1, (int_64)-3617168760277827584, ($21 + [392]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$105 }
	CALL $182(*($5))
	
.LABEL $label$105
	$5 = *($21 + [392])
	if ( ($5 == 0) ){ goto $label$106 }
	*($21 + [396]) = $5
	CALL $182($5)
	
.LABEL $label$106
	if ( ((*(($21 + [216])) & [1]) == 0) ){ goto $label$70 }
	CALL $182(*(($21 + [224])))
	$15 = *($21 + [496])
	if ( $15 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$74
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [168])) = ($3 | [1])
	*(($21 + [176])) = $15
	*(($21 + [172])) = $5
	
.LABEL $label$73
	CALL memcpy($15, [2720], $5)
	
.LABEL $label$72
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $1
	*($5 + [8]) = $11
	*($21 + [328]) = $5
	$5 = ($5 + [16])
	*($21 + [336]) = $5
	*($21 + [332]) = $5
	*($21 + [528]) = *($21 + [136])
	*($21 + [536]) = *((($21 + [136]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [168])) = [0]
	*(($21 + [172])) = [0]
	*((($21 + [136]) + [40])) = [0]
	CALL $122($14, (int_64)-3617168760277827584, ($21 + [328]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$107 }
	CALL $182(*($5))
	
.LABEL $label$107
	$5 = *($21 + [328])
	if ( ($5 == 0) ){ goto $label$108 }
	*($21 + [332]) = $5
	CALL $182($5)
	
.LABEL $label$108
	if ( ((*(($21 + [168])) & [1]) == 0) ){ goto $label$71 }
	CALL $182(*(($21 + [176])))
	
.LABEL $label$71
	CALL prints([2752])
	CALL $121(($21 + [392]))
	$19 = *(($4 + [8]))
	*((($21 + [328]) + [8])) = $19
	*($21 + [328]) = *($4)
	CALL eosio_assert(((int_64)$19 == (int_64)*((($21 + [392]) + [8]))), [1360])
	$19 = (int_64)
	*($21 + [328]) = $19(*($21 + [328]) - *($21 + [392])))
	CALL eosio_assert(((int_64)$19 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [1440])
	CALL prints([2784])
	CALL $121(($21 + [328]))
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($21 + [328]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [2608])
	if ( (CALL is_account($2) == 0) ){ goto $label$70 }
	$11 = *($0)
	if ( ((int_64)$11 == (int_64)$2) ){ goto $label$70 }
	if ( ((int_64)*($21 + [328]) < (int_64)1) ){ goto $label$70 }
	$1 = *(($7 + [16]))
	$19 = (int_64)0
	$20 = (int_64)59
	$5 = [1296]
	$12 = (int_64)0
	
.LOOP $label$109:
	if ( ((uint_64)$19 > (uint_64)(int_64)5) ){ goto $label$114 }
	$17 = *($5)
	if ( ((uint_32)(($17 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$113 }
	$17 = ($17 + [165])
	goto $label$112 
	
.LABEL $label$114
	$18 = (int_64)0
	if ( ((uint_64)$19 <= (uint_64)(int_64)11) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$113
	$17 = ( ($17 + [208]) ? [0] : ((($17 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$112
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56)
	
.LABEL $label$111
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$110
	$5 = ($5 + [1])
	$19 = ((int_64)$19 + (int_64)1)
	$12 = ((int_64)$18 | (int_64)$12)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$109 }
	*(($21 + [108])) = *($21 + [332])
	*($21 + [96]) = $2
	*(($21 + [116])) = *(($21 + [340]))
	*(($21 + [112])) = *(($21 + [336]))
	*($21 + [88]) = $11
	*($21 + [104]) = *($21 + [328])
	*(($21 + [128])) = [0]
	*($21 + [120]) = (int_64)0
	$17 = ($21 + [120])
	$5 = CALL strlen([2816])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$10 }
	$10 = ($21 + [104])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$117 }
	*(($21 + [120])) = ($5 << [1])
	$15 = ($17 + [1])
	if ( $5 ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$117
	$3 = (($5 + [16]) & [-16])
	$15 = CALL $181($3)
	*(($21 + [120])) = ($3 | [1])
	*(($21 + [128])) = $15
	*(($21 + [124])) = $5
	
.LABEL $label$116
	CALL memcpy($15, [2816], $5)
	
.LABEL $label$115
	*(($15 + $5)) = [0]
	*(($5 = CALL $181([16]))) = $11
	*($5 + [8]) = $12
	*($21 + [512]) = $5
	$5 = ($5 + [16])
	*($21 + [520]) = $5
	*($21 + [516]) = $5
	*($21 + [528]) = *($21 + [88])
	*($21 + [536]) = *((($21 + [88]) + [8]))
	*(($21 + [552])) = *(($10 + [8]))
	*($21 + [544]) = *($10)
	*(($5 = (($21 + [528]) + [40]))) = *(($17 + [8]))
	*($21 + [560]) = *($17)
	*(($21 + [120])) = [0]
	*(($21 + [124])) = [0]
	*((($21 + [88]) + [40])) = [0]
	CALL $122($1, (int_64)-3617168760277827584, ($21 + [512]), ($21 + [528]))
	if ( ((*($21 + [560]) & [1]) == 0) ){ goto $label$118 }
	CALL $182(*($5))
	
.LABEL $label$118
	$5 = *($21 + [512])
	if ( ($5 == 0) ){ goto $label$119 }
	*($21 + [516]) = $5
	CALL $182($5)
	
.LABEL $label$119
	if ( ((*(($21 + [120])) & [1]) == 0) ){ goto $label$70 }
	CALL $182(*(($21 + [128])))
	
.LABEL $label$70
	$15 = *($21 + [496])
	if ( ($15 == 0) ){ goto $label$68 }
	
.LABEL $label$69
	$10 = ($21 + [500])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$15) ){ goto $label$121 }
	
.LOOP $label$122:
	$5 = ($5 + [-24])
	$17 = *($5)
	*($5) = [0]
	if ( ($17 == 0) ){ goto $label$123 }
	CALL $182($17)
	
.LABEL $label$123
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$122 }
	$5 = *(($21 + [496]))
	goto $label$120 
	
.LABEL $label$121
	$5 = $15
	
.LABEL $label$120
	*($10) = $15
	CALL $182($5)
	
.LABEL $label$68
	*([0] + [4]) = ($21 + [576])
	return (unreachable)
	
.LABEL $label$17
	CALL $183($17)
	
.LABEL $label$16
	CALL $183($17)
	
.LABEL $label$15
	CALL $183($17)
	
.LABEL $label$14
	CALL $183($17)
	
.LABEL $label$13
	CALL $183($17)
	
.LABEL $label$12
	CALL $183($17)
	
.LABEL $label$11
	CALL $183($17)
	
.LABEL $label$10
	CALL $183($17)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [112])
	*([0] + [4]) = $3
	*(($2 = $3) + [68]) = $0
	*($2 + [56]) = *($1)
	*($2 + [60]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	CALL memset(($2 + [8]), [0], [48])
	CALL $156(($2 + [8]))
	*($2 + [76]) = $1
	*($2 + [72]) = $1
	*($2 + [80]) = ($1 + $0)
	*($2 + [88]) = ($2 + [72])
	*($2 + [100]) = ($2 + [16])
	*($2 + [104]) = ($2 + [24])
	$3 = ($2 + [40])
	*($2 + [108]) = $3
	*($2 + [96]) = ($2 + [8])
	CALL $157(($2 + [96]), ($2 + [88]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [100]) = ($2 + [56])
	*($2 + [96]) = ($2 + [68])
	CALL $158(($2 + [96]), ($2 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [112])
	return [1]
}

void .FUNC _ZN6findex6findex9sellorderENS0_18request_sell_orderE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [480])
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$15 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $15)
	CALL require_auth($15)
	*($16 + [32]) = (int_64)10000
	$2 = ($0 + [112])
	$11 = *(($0 + [140]))
	if ( ((int_32)$11 == (int_32)*(($0 + [136]))) ){ goto $label$2 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [8]) == (int_32)$2), [144])
	if ( $11 ){ goto $label$1 }
	$11 = ($16 + [32])
	goto $label$1 
	
.LABEL $label$2
	$11 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $66($2, $11)
	CALL eosio_assert(((int_32)*($11 + [8]) == (int_32)$2), [144])
	goto $label$1 
	
.LABEL $label$3
	$11 = ($16 + [32])
	
.LABEL $label$1
	$13 = *($11)
	$10 = CALL $93(($0 + [72]), *($1 + [8]), [1072])
	$11 = ($0 + [32])
	$7 = CALL $94($11, *($10 + [8]), [1104])
	$11 = CALL $94($11, *($10 + [16]), [1136])
	CALL memcpy(($16 + [352]), $1, [40])
	$3 = ($1 + [40])
	CALL $188((($16 + [352]) + [40]), $3)
	*(($4 = (($16 + [304]) + [16]))) = *(($7 + [16]))
	*(($8 = (($16 + [304]) + [8]))) = *(($7 + [8]))
	*($16 + [304]) = *($7)
	$9 = (($16 + [304]) + [24])
	CALL $188($9, ($7 + [24]))
	*($16 + [344]) = *($7 + [40])
	*((($16 + [256]) + [16])) = *(($11 + [16]))
	*((($16 + [256]) + [8])) = *(($11 + [8]))
	*($16 + [260]) = *(($11 + [4]))
	*($16 + [256]) = *($11)
	CALL $188((($16 + [256]) + [24]), ($11 + [24]))
	*($16 + [296]) = *($11 + [40])
	$12 = *($10 + [28])
	$14 = *($8)
	CALL eosio_assert(((int_64)*($16 + [384]) > (int_64)0), [3840])
	$11 = (($16 + [352]) + [24])
	CALL eosio_assert(((int_64)$14 == (int_64)*($11)), [3536])
	CALL eosio_assert(((int_64)*($16 + [368]) > (int_64)0), [3568])
	*(($7 = (($16 + [184]) + [8]))) = *($11)
	*($16 + [184]) = *($16 + [368])
	$14 = *($4)
	$6 = *($7)
	*((($16 + [32]) + [8])) = $6
	*((($16 + [408]) + [8])) = $6
	$6 = *($16 + [184])
	*($16 + [32]) = $6
	*($16 + [408]) = $6
	*($16 + [424]) = $14
	CALL eosio_assert(((int_64)*($16 + [408]) >= (int_64)$12), [3600])
	if ( ((*($16 + [280]) & [1]) == 0) ){ goto $label$4 }
	CALL $182(*((($16 + [256]) + [32])))
	
.LABEL $label$4
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($16 + [336])))
	
.LABEL $label$5
	if ( ((*(($16 + [392])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($16 + [400])))
	
.LABEL $label$6
	$12 = (int_64)
	*($16 + [232]) = $12((int_64)0 - *($16 + [408])))
	*($16 + [240]) = *($16 + [416])
	*($16 + [248]) = *((($16 + [408]) + [16]))
	*((($16 + [8]) + [8])) = *($16 + [240])
	*((($16 + [8]) + [16])) = *($16 + [248])
	*($16 + [8]) = $12
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $15, ($16 + [8]), $15)
	$12 = ((int_64)((int_64)*(($1 + [8])) * (int_64)100) | (int_64)2)
	*($16 + [224]) = $12
	$11 = [0]
	*((($16 + [184]) + [32])) = [0]
	*($16 + [192]) = $12
	*($16 + [200]) = (int_64)-1
	*($16 + [208]) = (int_64)0
	$12 = *($0)
	*($16 + [184]) = $12
	*($16 + [220]) = [0]
	*((($16 + [144]) + [32])) = [0]
	*($16 + [152]) = $15
	*($16 + [144]) = $12
	*($16 + [160]) = (int_64)-1
	*($16 + [168]) = (int_64)0
	*($16 + [136]) = ((int_64)$13 + (int_64)1)
	$13 = (int_64)0
	$7 = CALL db_lowerbound_i64($12, $15, (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	CALL $130(($16 + [144]), $7)
	*($16 + [36]) = [0]
	*($16 + [32]) = ($16 + [144])
	$13 = *(*(CALL $146(($16 + [32])) + [4]))
	$13 = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*(($7 = (($16 + [144]) + [16]))) = $13
	CALL eosio_assert((uint_64)($13 <= (int_64)-2), [3632])
	*($16 + [128]) = *($7)
	*($16 + [120]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)*($16 + [184]) == (int_64)CALL $fimport$3()), [512])
	*(($7 = CALL $181([72])) + [32]) = (int_64)1397703940
	*($7 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$4 = ($7 + [24])
	$13 = (int_64)5459781
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$10 = [0]
	
.LABEL $label$8
	CALL eosio_assert($10, [960])
	*($7 + [56]) = ($16 + [184])
	*($7 + [8]) = $15
	*($7) = *($16 + [136])
	*($7 + [16]) = *($16 + [128])
	*($7 + [40]) = *($1 + [32])
	*(($4 + [8])) = *(($1 + [24]))
	*($4) = *($1 + [16])
	*($7 + [48]) = *($16 + [120])
	*($7 + [52]) = [0]
	*($16 + [440]) = (($16 + [32]) + [56])
	*($16 + [436]) = ($16 + [32])
	*($16 + [432]) = ($16 + [32])
	CALL $127(($16 + [432]), $7)
	$13 = *($7)
	$11 = (($16 + [184]) + [8])
	*($7 + [60]) = CALL db_store_i64(*($11), (int_64)-6497942333781180416, $15, $13, ($16 + [32]), [56])
	$10 = (($16 + [184]) + [16])
	if ( (uint_64)($13 <= *($10)) ){ goto $label$13 }
	*($10) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$12 = *($7)
	$14 = *($11)
	$13 = (int_64)0
	$11 = *(($7 + [48]))
	$5 = *(($7 + [40]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$15 }
	$6 = (CASTING uint_64)(uint_32 $11)
	$13 = $5
	goto $label$14 
	
.LABEL $label$15
	$6 = (CASTING uint_64)(uint_32 $11)
	
.LABEL $label$14
	*($16 + [448]) = $6
	*($16 + [456]) = $13
	*($7 + [64]) = CALL db_idx128_store($14, (int_64)-6497942333781180416, $15, $12, ($16 + [448]))
	$12 = *($7)
	$14 = *(($16 + [192]))
	$13 = (int_64)0
	$11 = *(($7 + [48]))
	$6 = *(($7 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$16 }
	$13 = (int_64))((int_64)0 - $6)
	
.LABEL $label$16
	*($16 + [448]) = (CASTING uint_64)(uint_32 $11)
	*($16 + [456]) = $13
	*($7 + [68]) = CALL db_idx128_store($14, (int_64)-6497942333781180415, $15, $12, ($16 + [448]))
	*($16 + [448]) = $7
	$13 = *($7)
	*($16 + [32]) = $13
	$10 = *(($7 + [60]))
	*($16 + [432]) = $10
	$4 = ($16 + [212])
	$11 = *($4)
	if ( ((uint_32)$11 >= (uint_32)*(($16 + [216]))) ){ goto $label$18 }
	*($11 + [8]) = $13
	*($11 + [16]) = $10
	*($16 + [448]) = [0]
	*($11) = $7
	*($4) = ($11 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $136(($16 + [208]), ($16 + [448]), ($16 + [32]), ($16 + [432]))
	
.LABEL $label$17
	$11 = *($16 + [448])
	*($16 + [448]) = [0]
	if ( ($11 == 0) ){ goto $label$19 }
	CALL $182($11)
	
.LABEL $label$19
	*($16 + [44]) = $1
	*($16 + [36]) = ($16 + [224])
	*($16 + [32]) = ($16 + [128])
	*($16 + [40]) = ($16 + [136])
	*($16 + [48]) = ($16 + [408])
	*($16 + [52]) = ($16 + [120])
	*($16 + [432]) = $15
	CALL eosio_assert(((int_64)*($16 + [144]) == (int_64)CALL $fimport$3()), [512])
	*($16 + [452]) = ($16 + [32])
	*($16 + [448]) = ($16 + [144])
	*($16 + [456]) = ($16 + [432])
	$11 = CALL $181([120])
	CALL $131($11)
	*($11 + [108]) = ($16 + [144])
	CALL $155(($16 + [448]), $11)
	*($16 + [472]) = $11
	$13 = *($11)
	*($16 + [448]) = $13
	$10 = *($11 + [112])
	*($16 + [468]) = $10
	$4 = ($16 + [172])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*(($16 + [176]))) ){ goto $label$21 }
	*($7 + [8]) = $13
	*($7 + [16]) = $10
	*($16 + [472]) = [0]
	*($7) = $11
	*($4) = ($7 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $133(($16 + [168]), ($16 + [472]), ($16 + [448]), ($16 + [468]))
	
.LABEL $label$20
	$11 = *($16 + [472])
	*($16 + [472]) = [0]
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((*($11 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($11 + [96])))
	
.LABEL $label$23
	CALL $182($11)
	
.LABEL $label$22
	*($16 + [32]) = *($16 + [136])
	CALL $65($2, ($16 + [32]), *($0))
	*(($16 + [40])) = [0]
	*($16 + [32]) = (int_64)0
	$11 = CALL strlen([3872])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$24 }
	$7 = ($1 + [16])
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$27 }
	*($16 + [32]) = ($11 << [1])
	$10 = (($16 + [32]) | [1])
	if ( $11 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($11 + [16]) & [-16])
	$10 = CALL $181($2)
	*($16 + [32]) = ($2 | [1])
	*($16 + [40]) = $10
	*($16 + [36]) = $11
	
.LABEL $label$26
	CALL memcpy($10, [3872], $11)
	
.LABEL $label$25
	*(($10 + $11)) = [0]
	*(($16 + [84])) = *(($7 + [12]))
	*(($16 + [80])) = *(($7 + [8]))
	*(($16 + [76])) = *(($7 + [4]))
	*($16 + [56]) = $15
	*($16 + [48]) = *($16 + [136])
	*($16 + [64]) = *(($1 + [8]))
	*($16 + [72]) = *($7)
	*($16 + [88]) = *(($1 + [32]))
	CALL $188(($16 + [96]), $3)
	$6 = *($0)
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1296]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$33 }
	$7 = *($11)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$7 = ($7 + [165])
	goto $label$31 
	
.LABEL $label$33
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$29
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$28 }
	*(($11 = CALL $181([16]))) = $6
	*($11 + [8]) = $14
	*($16 + [448]) = $11
	$11 = ($11 + [16])
	*($16 + [456]) = $11
	*($16 + [452]) = $11
	CALL $148($6, (int_64)-8279439764272534016, ($16 + [448]), ($16 + [32]))
	$11 = *($16 + [448])
	if ( ($11 == 0) ){ goto $label$34 }
	*($16 + [452]) = $11
	CALL $182($11)
	
.LABEL $label$34
	if ( ((*(($16 + [96])) & [1]) == 0) ){ goto $label$35 }
	CALL $182(*(($16 + [104])))
	
.LABEL $label$35
	if ( ((*($16 + [32]) & [1]) == 0) ){ goto $label$36 }
	CALL $182(*($16 + [40]))
	
.LABEL $label$36
	$1 = *($16 + [168])
	if ( ($1 == 0) ){ goto $label$37 }
	$0 = ($16 + [172])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$39 }
	
.LOOP $label$40:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$41 }
	if ( ((*($7 + [88]) & [1]) == 0) ){ goto $label$42 }
	CALL $182(*(($7 + [96])))
	
.LABEL $label$42
	CALL $182($7)
	
.LABEL $label$41
	if ( ((int_32)$1 != (int_32)$11) ){ goto $label$40 }
	$11 = *(($16 + [168]))
	goto $label$38 
	
.LABEL $label$39
	$11 = $1
	
.LABEL $label$38
	*($0) = $1
	CALL $182($11)
	
.LABEL $label$37
	$1 = *($16 + [208])
	if ( ($1 == 0) ){ goto $label$43 }
	$0 = ($16 + [212])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$45 }
	
.LOOP $label$46:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$47 }
	CALL $182($7)
	
.LABEL $label$47
	if ( ((int_32)$1 != (int_32)$11) ){ goto $label$46 }
	$11 = *(($16 + [208]))
	goto $label$44 
	
.LABEL $label$45
	$11 = $1
	
.LABEL $label$44
	*($0) = $1
	CALL $182($11)
	
.LABEL $label$43
	*([0] + [4]) = ($16 + [480])
	return (unreachable)
	
.LABEL $label$24
	CALL $183(($16 + [32]))
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [128])
	*([0] + [4]) = $3
	*(($2 = $3) + [76]) = $0
	*($2 + [64]) = *($1)
	*($2 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	CALL memset(($2 + [8]), [0], [56])
	CALL $152(($2 + [8]))
	*($2 + [84]) = $1
	*($2 + [80]) = $1
	*($2 + [88]) = ($1 + $0)
	*($2 + [96]) = ($2 + [80])
	*($2 + [108]) = ($2 + [16])
	*($2 + [112]) = ($2 + [24])
	*($2 + [116]) = ($2 + [40])
	$3 = ($2 + [48])
	*($2 + [120]) = $3
	*($2 + [104]) = ($2 + [8])
	CALL $153(($2 + [104]), ($2 + [96]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [108]) = ($2 + [64])
	*($2 + [104]) = ($2 + [76])
	CALL $154(($2 + [104]), ($2 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [56])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [128])
	return [1]
}

void .FUNC _ZN6findex6findex10marketsellENS0_19request_market_sellE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [464])
	*([0] + [4]) = $17
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$16 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $16)
	CALL require_auth($16)
	*($17 + [32]) = (int_64)10000
	$2 = ($0 + [112])
	$12 = *(($0 + [140]))
	if ( ((int_32)$12 == (int_32)*(($0 + [136]))) ){ goto $label$2 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [8]) == (int_32)$2), [144])
	if ( $12 ){ goto $label$1 }
	$12 = ($17 + [32])
	goto $label$1 
	
.LABEL $label$2
	$12 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $66($2, $12)
	CALL eosio_assert(((int_32)*($12 + [8]) == (int_32)$2), [144])
	goto $label$1 
	
.LABEL $label$3
	$12 = ($17 + [32])
	
.LABEL $label$1
	$14 = *($12)
	$11 = CALL $93(($0 + [72]), *($1 + [8]), [1072])
	$12 = ($0 + [32])
	$6 = CALL $94($12, *($11 + [8]), [1104])
	$12 = CALL $94($12, *($11 + [16]), [1136])
	*(($4 = (($17 + [344]) + [24]))) = *(($1 + [24]))
	*(($7 = (($17 + [344]) + [16]))) = *(($1 + [16]))
	*((($17 + [344]) + [8])) = *($1 + [8])
	*($17 + [344]) = *($1)
	$3 = ($1 + [32])
	CALL $188((($17 + [344]) + [32]), $3)
	*(($8 = (($17 + [296]) + [16]))) = *(($6 + [16]))
	*(($9 = (($17 + [296]) + [8]))) = *(($6 + [8]))
	*($17 + [296]) = *($6)
	$10 = (($17 + [296]) + [24])
	CALL $188($10, ($6 + [24]))
	*($17 + [336]) = *($6 + [40])
	*((($17 + [248]) + [16])) = *(($12 + [16]))
	*((($17 + [248]) + [8])) = *(($12 + [8]))
	*($17 + [252]) = *(($12 + [4]))
	*($17 + [248]) = *($12)
	CALL $188((($17 + [248]) + [24]), ($12 + [24]))
	*($17 + [288]) = *($12 + [40])
	$13 = *($11 + [28])
	CALL eosio_assert(((int_64)*($4) == (int_64)*($9)), [3536])
	CALL eosio_assert(((int_64)*($7) > (int_64)0), [3568])
	*(($12 = (($17 + [176]) + [8]))) = *($4)
	*($17 + [176]) = *($7)
	$15 = *($8)
	$5 = *($12)
	*((($17 + [32]) + [8])) = $5
	*((($17 + [392]) + [8])) = $5
	$5 = *($17 + [176])
	*($17 + [32]) = $5
	*($17 + [392]) = $5
	*($17 + [408]) = $15
	CALL eosio_assert(((int_64)*($17 + [392]) >= (int_64)$13), [3600])
	if ( ((*($17 + [272]) & [1]) == 0) ){ goto $label$4 }
	CALL $182(*((($17 + [248]) + [32])))
	
.LABEL $label$4
	if ( ((*($10) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($17 + [328])))
	
.LABEL $label$5
	if ( ((*((($17 + [344]) + [32])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($17 + [384])))
	
.LABEL $label$6
	$13 = (int_64)
	*($17 + [224]) = $13((int_64)0 - *($17 + [392])))
	*($17 + [232]) = *($17 + [400])
	*($17 + [240]) = *((($17 + [392]) + [16]))
	*((($17 + [8]) + [8])) = *($17 + [232])
	*((($17 + [8]) + [16])) = *($17 + [240])
	*($17 + [8]) = $13
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $16, ($17 + [8]), $16)
	$13 = ((int_64)((int_64)*(($1 + [8])) * (int_64)100) | (int_64)2)
	*($17 + [216]) = $13
	$12 = [0]
	*((($17 + [176]) + [32])) = [0]
	*($17 + [184]) = $13
	*($17 + [192]) = (int_64)-1
	*($17 + [200]) = (int_64)0
	$13 = *($0)
	*($17 + [176]) = $13
	*($17 + [212]) = [0]
	*((($17 + [136]) + [32])) = [0]
	*($17 + [144]) = $16
	*($17 + [136]) = $13
	*($17 + [152]) = (int_64)-1
	*($17 + [160]) = (int_64)0
	*($17 + [128]) = ((int_64)$14 + (int_64)1)
	$14 = (int_64)0
	$6 = CALL db_lowerbound_i64($13, $16, (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	CALL $130(($17 + [136]), $6)
	*($17 + [36]) = [0]
	*($17 + [32]) = ($17 + [136])
	$14 = *(*(CALL $146(($17 + [32])) + [4]))
	$14 = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*(($6 = (($17 + [136]) + [16]))) = $14
	CALL eosio_assert((uint_64)($14 <= (int_64)-2), [3632])
	*($17 + [120]) = *($6)
	*($17 + [112]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)*($17 + [176]) == (int_64)CALL $fimport$3()), [512])
	*(($6 = CALL $181([72])) + [32]) = (int_64)1397703940
	*($6 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$4 = ($6 + [24])
	$14 = (int_64)5459781
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$11 = [0]
	
.LABEL $label$8
	CALL eosio_assert($11, [960])
	*($6 + [56]) = ($17 + [176])
	*($6 + [8]) = $16
	*($6 + [40]) = (int_64)0
	*($6) = *($17 + [128])
	*($6 + [16]) = *($17 + [120])
	*(($4 + [12])) = *(($1 + [28]))
	*(($4 + [8])) = *(($1 + [24]))
	*($4) = *($1 + [16])
	*($6 + [48]) = *($17 + [112])
	*($6 + [52]) = [0]
	*($17 + [424]) = (($17 + [32]) + [56])
	*($17 + [420]) = ($17 + [32])
	*($17 + [416]) = ($17 + [32])
	CALL $127(($17 + [416]), $6)
	$14 = *($6)
	$12 = (($17 + [176]) + [8])
	*($6 + [60]) = CALL db_store_i64(*($12), (int_64)-6497942333781180416, $16, $14, ($17 + [32]), [56])
	$11 = (($17 + [176]) + [16])
	if ( (uint_64)($14 <= *($11)) ){ goto $label$13 }
	*($11) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$13 = *($6)
	$15 = *($12)
	$12 = *(($6 + [48]))
	$14 = *(($6 + [40]))
	if ( ((int_64)$14 == (int_64)0) ){ goto $label$15 }
	$5 = (CASTING uint_64)(uint_32 $12)
	goto $label$14 
	
.LABEL $label$15
	$5 = (CASTING uint_64)(uint_32 $12)
	$14 = (int_64)0
	
.LABEL $label$14
	*($17 + [432]) = $5
	*($17 + [440]) = $14
	*($6 + [64]) = CALL db_idx128_store($15, (int_64)-6497942333781180416, $16, $13, ($17 + [432]))
	$13 = *($6)
	$15 = *(($17 + [184]))
	$14 = (int_64)0
	$12 = *(($6 + [48]))
	$5 = *(($6 + [40]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$16 }
	$14 = (int_64))((int_64)0 - $5)
	
.LABEL $label$16
	*($17 + [432]) = (CASTING uint_64)(uint_32 $12)
	*($17 + [440]) = $14
	*($6 + [68]) = CALL db_idx128_store($15, (int_64)-6497942333781180415, $16, $13, ($17 + [432]))
	*($17 + [432]) = $6
	$14 = *($6)
	*($17 + [32]) = $14
	$11 = *(($6 + [60]))
	*($17 + [416]) = $11
	$4 = ($17 + [204])
	$12 = *($4)
	if ( ((uint_32)$12 >= (uint_32)*(($17 + [208]))) ){ goto $label$18 }
	*($12 + [8]) = $14
	*($12 + [16]) = $11
	*($17 + [432]) = [0]
	*($12) = $6
	*($4) = ($12 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $136(($17 + [200]), ($17 + [432]), ($17 + [32]), ($17 + [416]))
	
.LABEL $label$17
	$12 = *($17 + [432])
	*($17 + [432]) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $182($12)
	
.LABEL $label$19
	*($17 + [44]) = $1
	*($17 + [36]) = ($17 + [216])
	*($17 + [32]) = ($17 + [120])
	*($17 + [40]) = ($17 + [128])
	*($17 + [48]) = ($17 + [392])
	*($17 + [52]) = ($17 + [112])
	*($17 + [416]) = $16
	CALL eosio_assert(((int_64)*($17 + [136]) == (int_64)CALL $fimport$3()), [512])
	*($17 + [436]) = ($17 + [32])
	*($17 + [432]) = ($17 + [136])
	*($17 + [440]) = ($17 + [416])
	$12 = CALL $181([120])
	CALL $131($12)
	*($12 + [108]) = ($17 + [136])
	CALL $147(($17 + [432]), $12)
	*($17 + [456]) = $12
	$14 = *($12)
	*($17 + [432]) = $14
	$11 = *($12 + [112])
	*($17 + [452]) = $11
	$4 = ($17 + [164])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($17 + [168]))) ){ goto $label$21 }
	*($6 + [8]) = $14
	*($6 + [16]) = $11
	*($17 + [456]) = [0]
	*($6) = $12
	*($4) = ($6 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $133(($17 + [160]), ($17 + [456]), ($17 + [432]), ($17 + [452]))
	
.LABEL $label$20
	$12 = *($17 + [456])
	*($17 + [456]) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($12 + [96])))
	
.LABEL $label$23
	CALL $182($12)
	
.LABEL $label$22
	*($17 + [32]) = *($17 + [128])
	CALL $65($2, ($17 + [32]), *($0))
	*(($17 + [40])) = [0]
	*($17 + [32]) = (int_64)0
	$12 = CALL strlen([3696])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$24 }
	$6 = ($1 + [16])
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$27 }
	*($17 + [32]) = ($12 << [1])
	$11 = (($17 + [32]) | [1])
	if ( $12 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$4 = (($12 + [16]) & [-16])
	$11 = CALL $181($4)
	*($17 + [32]) = ($4 | [1])
	*($17 + [40]) = $11
	*($17 + [36]) = $12
	
.LABEL $label$26
	CALL memcpy($11, [3696], $12)
	
.LABEL $label$25
	*(($11 + $12)) = [0]
	*(($17 + [84])) = *(($6 + [12]))
	*(($17 + [80])) = *(($6 + [8]))
	*(($17 + [76])) = *(($6 + [4]))
	*($17 + [56]) = $16
	*($17 + [48]) = *($17 + [128])
	*($17 + [64]) = *(($1 + [8]))
	*($17 + [72]) = *($6)
	$14 = (int_64)0
	*($17 + [88]) = (int_64)0
	CALL $188(($17 + [96]), $3)
	$5 = *($0)
	$13 = (int_64)59
	$12 = [1296]
	$15 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$33 }
	$6 = *($12)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$33
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$29
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$28 }
	*(($12 = CALL $181([16]))) = $5
	*($12 + [8]) = $15
	*($17 + [432]) = $12
	$12 = ($12 + [16])
	*($17 + [440]) = $12
	*($17 + [436]) = $12
	CALL $148($5, (int_64)-8279439764272534016, ($17 + [432]), ($17 + [32]))
	$12 = *($17 + [432])
	if ( ($12 == 0) ){ goto $label$34 }
	*($17 + [436]) = $12
	CALL $182($12)
	
.LABEL $label$34
	if ( ((*(($17 + [96])) & [1]) == 0) ){ goto $label$35 }
	CALL $182(*(($17 + [104])))
	
.LABEL $label$35
	if ( ((*($17 + [32]) & [1]) == 0) ){ goto $label$36 }
	CALL $182(*($17 + [40]))
	
.LABEL $label$36
	$1 = *($17 + [160])
	if ( ($1 == 0) ){ goto $label$37 }
	$0 = ($17 + [164])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$39 }
	
.LOOP $label$40:
	$12 = ($12 + [-24])
	$6 = *($12)
	*($12) = [0]
	if ( ($6 == 0) ){ goto $label$41 }
	if ( ((*($6 + [88]) & [1]) == 0) ){ goto $label$42 }
	CALL $182(*(($6 + [96])))
	
.LABEL $label$42
	CALL $182($6)
	
.LABEL $label$41
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$40 }
	$12 = *(($17 + [160]))
	goto $label$38 
	
.LABEL $label$39
	$12 = $1
	
.LABEL $label$38
	*($0) = $1
	CALL $182($12)
	
.LABEL $label$37
	$1 = *($17 + [200])
	if ( ($1 == 0) ){ goto $label$43 }
	$0 = ($17 + [204])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$45 }
	
.LOOP $label$46:
	$12 = ($12 + [-24])
	$6 = *($12)
	*($12) = [0]
	if ( ($6 == 0) ){ goto $label$47 }
	CALL $182($6)
	
.LABEL $label$47
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$46 }
	$12 = *(($17 + [200]))
	goto $label$44 
	
.LABEL $label$45
	$12 = $1
	
.LABEL $label$44
	*($0) = $1
	CALL $182($12)
	
.LABEL $label$43
	*([0] + [4]) = ($17 + [464])
	return (unreachable)
	
.LABEL $label$24
	CALL $183(($17 + [32]))
}

int_32 .FUNC _ZN6findex6findexC2Ey (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	*($0 + [8]) = [0]
	*($0) = $1
	*(($0 + [12])) = (int_64)0
	$2 = ($0 + [8])
	$4 = CALL strlen([3936])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($2) = ($4 << [1])
	$2 = ($2 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (($4 + [16]) & [-16])
	$2 = CALL $181($3)
	*(($0 + [8])) = ($3 | [1])
	*(($0 + [16])) = $2
	*(($0 + [12])) = $4
	
.LABEL $label$3
	CALL memcpy($2, [3936], $4)
	
.LABEL $label$2
	*(($2 + $4)) = [0]
	$1 = (int_64)0
	$5 = (int_64)59
	$4 = [3952]
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	*(($0 + [24])) = $6
	$1 = *($0)
	*($0 + [32]) = $1
	*(($0 + [40])) = $1
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = $1
	*(($0 + [80])) = $1
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = [0]
	*(($0 + [100])) = [0]
	*(($0 + [104])) = [0]
	*($0 + [112]) = $1
	*(($0 + [120])) = $1
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = [0]
	*(($0 + [140])) = [0]
	*(($0 + [144])) = [0]
	*($0 + [152]) = $1
	*(($0 + [160])) = $1
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = [0]
	*(($0 + [180])) = [0]
	*(($0 + [184])) = [0]
	*($0 + [192]) = (int_64)0
	return $0
	
.LABEL $label$1
	CALL $183($2)
	return (unreachable)
}

void .FUNC _ZN6findex6findex8buyorderENS0_17request_buy_orderE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [544])
	*([0] + [4]) = $14
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$13 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $13)
	CALL require_auth($13)
	*($14 + [64]) = (int_64)10000
	$2 = ($0 + [112])
	$9 = *(($0 + [140]))
	if ( ((int_32)$9 == (int_32)*(($0 + [136]))) ){ goto $label$2 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [8]) == (int_32)$2), [144])
	if ( $9 ){ goto $label$1 }
	$9 = ($14 + [64])
	goto $label$1 
	
.LABEL $label$2
	$9 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $66($2, $9)
	CALL eosio_assert(((int_32)*($9 + [8]) == (int_32)$2), [144])
	goto $label$1 
	
.LABEL $label$3
	$9 = ($14 + [64])
	
.LABEL $label$1
	$11 = *($9)
	$8 = CALL $93(($0 + [72]), *($1 + [8]), [1072])
	$9 = ($0 + [32])
	$7 = CALL $94($9, *($8 + [8]), [1104])
	$9 = CALL $94($9, *($8 + [16]), [1136])
	CALL memcpy(($14 + [416]), $1, [40])
	$3 = ($1 + [40])
	CALL $188((($14 + [416]) + [40]), $3)
	*((($14 + [368]) + [16])) = *(($7 + [16]))
	*((($14 + [368]) + [8])) = *(($7 + [8]))
	*($14 + [368]) = *($7)
	$4 = (($14 + [368]) + [24])
	CALL $188($4, ($7 + [24]))
	*($14 + [408]) = *($7 + [40])
	*((($14 + [320]) + [16])) = *(($9 + [16]))
	*((($14 + [320]) + [8])) = *(($9 + [8]))
	*($14 + [324]) = *(($9 + [4]))
	*($14 + [320]) = *($9)
	CALL $188((($14 + [320]) + [24]), ($9 + [24]))
	*($14 + [360]) = *($9 + [40])
	CALL memcpy(($14 + [280]), $8, [40])
	CALL memcpy(($14 + [24]), ($14 + [280]), [40])
	CALL _ZN6findex6findex26validate_and_to_base_assetENS0_17request_buy_orderENS0_5tokenES2_NS0_4pairE(($14 + [472]), ($14 + [416]), ($14 + [368]), ($14 + [320]), ($14 + [24]))
	if ( ((*($14 + [344]) & [1]) == 0) ){ goto $label$4 }
	CALL $182(*((($14 + [320]) + [32])))
	
.LABEL $label$4
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($14 + [400])))
	
.LABEL $label$5
	if ( ((*(($14 + [456])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($14 + [464])))
	
.LABEL $label$6
	$10 = (int_64)
	*($14 + [256]) = $10((int_64)0 - *($14 + [472])))
	*($14 + [264]) = *($14 + [480])
	*($14 + [272]) = *($14 + [488])
	*(($14 + [8])) = *($14 + [264])
	*(($14 + [16])) = *($14 + [272])
	*($14) = $10
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $13, $14, $13)
	$10 = ((int_64)((int_64)*(($1 + [8])) * (int_64)100) | (int_64)1)
	*($14 + [248]) = $10
	$9 = [0]
	*((($14 + [208]) + [32])) = [0]
	*($14 + [216]) = $10
	*($14 + [224]) = (int_64)-1
	*($14 + [232]) = (int_64)0
	$10 = *($0)
	*($14 + [208]) = $10
	*($14 + [244]) = [0]
	*((($14 + [168]) + [32])) = [0]
	*($14 + [176]) = $13
	*($14 + [168]) = $10
	*($14 + [184]) = (int_64)-1
	*($14 + [192]) = (int_64)0
	*($14 + [160]) = ((int_64)$11 + (int_64)1)
	$11 = (int_64)0
	$7 = CALL db_lowerbound_i64($10, $13, (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	CALL $130(($14 + [168]), $7)
	*($14 + [68]) = [0]
	*($14 + [64]) = ($14 + [168])
	$11 = *(*(CALL $146(($14 + [64])) + [4]))
	$11 = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*(($7 = (($14 + [168]) + [16]))) = $11
	CALL eosio_assert((uint_64)($11 <= (int_64)-2), [3632])
	*($14 + [152]) = *($7)
	*($14 + [144]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)*($14 + [208]) == (int_64)CALL $fimport$3()), [512])
	*(($7 = CALL $181([72])) + [32]) = (int_64)1397703940
	*($7 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$4 = ($7 + [24])
	$11 = (int_64)5459781
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [960])
	*($7 + [56]) = ($14 + [208])
	*($7 + [8]) = $13
	*($7) = *($14 + [160])
	*($7 + [16]) = *($14 + [152])
	*($7 + [40]) = *($1 + [32])
	*(($4 + [8])) = *(($1 + [24]))
	*($4) = *($1 + [16])
	*($7 + [48]) = *($14 + [144])
	*($7 + [52]) = [0]
	*($14 + [504]) = (($14 + [64]) + [56])
	*($14 + [500]) = ($14 + [64])
	*($14 + [496]) = ($14 + [64])
	CALL $127(($14 + [496]), $7)
	$11 = *($7)
	$9 = (($14 + [208]) + [8])
	*($7 + [60]) = CALL db_store_i64(*($9), (int_64)-6497942333781180416, $13, $11, ($14 + [64]), [56])
	$8 = (($14 + [208]) + [16])
	if ( (uint_64)($11 <= *($8)) ){ goto $label$13 }
	*($8) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$10 = *($7)
	$12 = *($9)
	$11 = (int_64)0
	$9 = *(($7 + [48]))
	$5 = *(($7 + [40]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$15 }
	$6 = (CASTING uint_64)(uint_32 $9)
	$11 = $5
	goto $label$14 
	
.LABEL $label$15
	$6 = (CASTING uint_64)(uint_32 $9)
	
.LABEL $label$14
	*($14 + [512]) = $6
	*($14 + [520]) = $11
	*($7 + [64]) = CALL db_idx128_store($12, (int_64)-6497942333781180416, $13, $10, ($14 + [512]))
	$10 = *($7)
	$12 = *(($14 + [216]))
	$11 = (int_64)0
	$9 = *(($7 + [48]))
	$6 = *(($7 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$16 }
	$11 = (int_64))((int_64)0 - $6)
	
.LABEL $label$16
	*($14 + [512]) = (CASTING uint_64)(uint_32 $9)
	*($14 + [520]) = $11
	*($7 + [68]) = CALL db_idx128_store($12, (int_64)-6497942333781180415, $13, $10, ($14 + [512]))
	*($14 + [512]) = $7
	$11 = *($7)
	*($14 + [64]) = $11
	$8 = *(($7 + [60]))
	*($14 + [496]) = $8
	$4 = ($14 + [236])
	$9 = *($4)
	if ( ((uint_32)$9 >= (uint_32)*(($14 + [240]))) ){ goto $label$18 }
	*($9 + [8]) = $11
	*($9 + [16]) = $8
	*($14 + [512]) = [0]
	*($9) = $7
	*($4) = ($9 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $136(($14 + [232]), ($14 + [512]), ($14 + [64]), ($14 + [496]))
	
.LABEL $label$17
	$9 = *($14 + [512])
	*($14 + [512]) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	CALL $182($9)
	
.LABEL $label$19
	*($14 + [76]) = $1
	*($14 + [68]) = ($14 + [248])
	*($14 + [64]) = ($14 + [152])
	*($14 + [72]) = ($14 + [160])
	*($14 + [80]) = ($14 + [472])
	*($14 + [84]) = ($14 + [144])
	*($14 + [496]) = $13
	CALL eosio_assert(((int_64)*($14 + [168]) == (int_64)CALL $fimport$3()), [512])
	*($14 + [516]) = ($14 + [64])
	*($14 + [512]) = ($14 + [168])
	*($14 + [520]) = ($14 + [496])
	$9 = CALL $181([120])
	CALL $131($9)
	*($9 + [108]) = ($14 + [168])
	CALL $164(($14 + [512]), $9)
	*($14 + [536]) = $9
	$11 = *($9)
	*($14 + [512]) = $11
	$8 = *($9 + [112])
	*($14 + [532]) = $8
	$4 = ($14 + [196])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*(($14 + [200]))) ){ goto $label$21 }
	*($7 + [8]) = $11
	*($7 + [16]) = $8
	*($14 + [536]) = [0]
	*($7) = $9
	*($4) = ($7 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $133(($14 + [192]), ($14 + [536]), ($14 + [512]), ($14 + [532]))
	
.LABEL $label$20
	$9 = *($14 + [536])
	*($14 + [536]) = [0]
	if ( ($9 == 0) ){ goto $label$22 }
	if ( ((*($9 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($9 + [96])))
	
.LABEL $label$23
	CALL $182($9)
	
.LABEL $label$22
	*($14 + [64]) = *($14 + [160])
	CALL $65($2, ($14 + [64]), *($0))
	*(($14 + [72])) = [0]
	*($14 + [64]) = (int_64)0
	$9 = CALL strlen([3920])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$24 }
	$7 = ($1 + [16])
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$27 }
	*($14 + [64]) = ($9 << [1])
	$8 = (($14 + [64]) | [1])
	if ( $9 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($9 + [16]) & [-16])
	$8 = CALL $181($2)
	*($14 + [64]) = ($2 | [1])
	*($14 + [72]) = $8
	*($14 + [68]) = $9
	
.LABEL $label$26
	CALL memcpy($8, [3920], $9)
	
.LABEL $label$25
	*(($8 + $9)) = [0]
	*(($14 + [116])) = *(($7 + [12]))
	*(($14 + [112])) = *(($7 + [8]))
	*(($14 + [108])) = *(($7 + [4]))
	*($14 + [88]) = $13
	*($14 + [80]) = *($14 + [160])
	*($14 + [96]) = *(($1 + [8]))
	*($14 + [104]) = *($7)
	*($14 + [120]) = *(($1 + [32]))
	CALL $188(($14 + [128]), $3)
	$6 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1296]
	$12 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$33 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$7 = ($7 + [165])
	goto $label$31 
	
.LABEL $label$33
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$29
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$28 }
	*(($9 = CALL $181([16]))) = $6
	*($9 + [8]) = $12
	*($14 + [512]) = $9
	$9 = ($9 + [16])
	*($14 + [520]) = $9
	*($14 + [516]) = $9
	CALL $148($6, (int_64)-8279439764272534016, ($14 + [512]), ($14 + [64]))
	$9 = *($14 + [512])
	if ( ($9 == 0) ){ goto $label$34 }
	*($14 + [516]) = $9
	CALL $182($9)
	
.LABEL $label$34
	if ( ((*(($14 + [128])) & [1]) == 0) ){ goto $label$35 }
	CALL $182(*(($14 + [136])))
	
.LABEL $label$35
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$36 }
	CALL $182(*($14 + [72]))
	
.LABEL $label$36
	$1 = *($14 + [192])
	if ( ($1 == 0) ){ goto $label$37 }
	$0 = ($14 + [196])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$39 }
	
.LOOP $label$40:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$41 }
	if ( ((*($7 + [88]) & [1]) == 0) ){ goto $label$42 }
	CALL $182(*(($7 + [96])))
	
.LABEL $label$42
	CALL $182($7)
	
.LABEL $label$41
	if ( ((int_32)$1 != (int_32)$9) ){ goto $label$40 }
	$9 = *(($14 + [192]))
	goto $label$38 
	
.LABEL $label$39
	$9 = $1
	
.LABEL $label$38
	*($0) = $1
	CALL $182($9)
	
.LABEL $label$37
	$1 = *($14 + [232])
	if ( ($1 == 0) ){ goto $label$43 }
	$0 = ($14 + [236])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$45 }
	
.LOOP $label$46:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$47 }
	CALL $182($7)
	
.LABEL $label$47
	if ( ((int_32)$1 != (int_32)$9) ){ goto $label$46 }
	$9 = *(($14 + [232]))
	goto $label$44 
	
.LABEL $label$45
	$9 = $1
	
.LABEL $label$44
	*($0) = $1
	CALL $182($9)
	
.LABEL $label$43
	*([0] + [4]) = ($14 + [544])
	return (unreachable)
	
.LABEL $label$24
	CALL $183(($14 + [64]))
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [128])
	*([0] + [4]) = $3
	*(($2 = $3) + [76]) = $0
	*($2 + [64]) = *($1)
	*($2 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	CALL memset(($2 + [8]), [0], [56])
	CALL $160(($2 + [8]))
	*($2 + [84]) = $1
	*($2 + [80]) = $1
	*($2 + [88]) = ($1 + $0)
	*($2 + [96]) = ($2 + [80])
	*($2 + [108]) = ($2 + [16])
	*($2 + [112]) = ($2 + [24])
	*($2 + [116]) = ($2 + [40])
	$3 = ($2 + [48])
	*($2 + [120]) = $3
	*($2 + [104]) = ($2 + [8])
	CALL $161(($2 + [104]), ($2 + [96]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [108]) = ($2 + [64])
	*($2 + [104]) = ($2 + [76])
	CALL $162(($2 + [104]), ($2 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [56])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [128])
	return [1]
}

void .FUNC _ZN6findex6findex9marketbuyENS0_18request_market_buyE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [336])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$12 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $12)
	CALL require_auth($12)
	*($13 + [32]) = (int_64)10000
	$2 = ($0 + [112])
	$8 = *(($0 + [140]))
	if ( ((int_32)$8 == (int_32)*(($0 + [136]))) ){ goto $label$2 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$2), [144])
	if ( $8 ){ goto $label$1 }
	$8 = ($13 + [32])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL db_find_i64(*($2), *(($0 + [120])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $66($2, $8)
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$2), [144])
	goto $label$1 
	
.LABEL $label$3
	$8 = ($13 + [32])
	
.LABEL $label$1
	$11 = *($8)
	$6 = CALL $93(($0 + [72]), *($1 + [8]), [1072])
	$8 = CALL $94(($0 + [32]), *($6 + [16]), [1136])
	$3 = ($1 + [24])
	CALL eosio_assert(((int_64)*($3) == (int_64)*($8 + [8])), [3536])
	CALL eosio_assert(((int_64)*($1 + [16]) > (int_64)0), [3568])
	CALL eosio_assert(((int_64)*($1 + [16]) >= (int_64)*($6 + [28])), [3600])
	*(($6 = (($13 + [248]) + [8]))) = *($3)
	*($13 + [248]) = *($1 + [16])
	$10 = *(($8 + [16]))
	$9 = *($6)
	*((($13 + [32]) + [8])) = $9
	*(($8 = (($13 + [264]) + [8]))) = $9
	$9 = *($13 + [248])
	*($13 + [32]) = $9
	*($13 + [264]) = $9
	*($13 + [280]) = $10
	*($13 + [240]) = $10
	*((($13 + [8]) + [16])) = $10
	*($13 + [232]) = *($8)
	*((($13 + [8]) + [8])) = *($13 + [232])
	*($13 + [224]) = (int_64))((int_64)0 - *($13 + [264]))
	*($13 + [8]) = *($13 + [224])
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $12, ($13 + [8]), $12)
	$10 = ((int_64)((int_64)*($1 + [8]) * (int_64)100) | (int_64)1)
	*($13 + [216]) = $10
	$8 = [0]
	*((($13 + [176]) + [32])) = [0]
	*($13 + [184]) = $10
	*($13 + [192]) = (int_64)-1
	*($13 + [200]) = (int_64)0
	$9 = *($0)
	*($13 + [176]) = $9
	*($13 + [212]) = [0]
	*((($13 + [136]) + [32])) = [0]
	*($13 + [144]) = $12
	*($13 + [136]) = $9
	*($13 + [152]) = (int_64)-1
	*($13 + [160]) = (int_64)0
	*($13 + [128]) = ((int_64)$11 + (int_64)1)
	$10 = (int_64)0
	$6 = CALL db_lowerbound_i64($9, $12, (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $130(($13 + [136]), $6)
	*($13 + [36]) = [0]
	*($13 + [32]) = ($13 + [136])
	$10 = *(*(CALL $146(($13 + [32])) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$3 = ($1 + [16])
	*(($6 = (($13 + [136]) + [16]))) = $10
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [3632])
	*($13 + [120]) = *($6)
	*($13 + [112]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)*($13 + [176]) == (int_64)CALL $fimport$3()), [512])
	*(($6 = CALL $181([72])) + [32]) = (int_64)1397703940
	*($6 + [24]) = (int_64)0
	CALL eosio_assert([1], [896])
	$4 = ($6 + [24])
	$10 = (int_64)5459781
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	
.LABEL $label$5
	CALL eosio_assert($7, [960])
	*($6 + [56]) = ($13 + [176])
	*($6 + [8]) = $12
	*($6 + [40]) = (int_64)0
	*($6) = *($13 + [128])
	*($6 + [16]) = *($13 + [120])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*($4) = *($3)
	*($6 + [48]) = *($13 + [112])
	*($6 + [52]) = [0]
	*($13 + [296]) = (($13 + [32]) + [56])
	*($13 + [292]) = ($13 + [32])
	*($13 + [288]) = ($13 + [32])
	CALL $127(($13 + [288]), $6)
	$10 = *($6)
	$8 = (($13 + [176]) + [8])
	*($6 + [60]) = CALL db_store_i64(*($8), (int_64)-6497942333781180416, $12, $10, ($13 + [32]), [56])
	$7 = ($13 + [192])
	if ( (uint_64)($10 <= *($7)) ){ goto $label$10 }
	*($7) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$9 = *($6)
	$11 = *($8)
	$8 = *(($6 + [48]))
	$10 = *(($6 + [40]))
	if ( ((int_64)$10 == (int_64)0) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 $8)
	goto $label$11 
	
.LABEL $label$12
	$5 = (CASTING uint_64)(uint_32 $8)
	$10 = (int_64)0
	
.LABEL $label$11
	*($13 + [304]) = $5
	*($13 + [312]) = $10
	*($6 + [64]) = CALL db_idx128_store($11, (int_64)-6497942333781180416, $12, $9, ($13 + [304]))
	$9 = *($6)
	$11 = *(($13 + [184]))
	$10 = (int_64)0
	$8 = *(($6 + [48]))
	$5 = *(($6 + [40]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$13 }
	$10 = (int_64))((int_64)0 - $5)
	
.LABEL $label$13
	*($13 + [304]) = (CASTING uint_64)(uint_32 $8)
	*($13 + [312]) = $10
	*($6 + [68]) = CALL db_idx128_store($11, (int_64)-6497942333781180415, $12, $9, ($13 + [304]))
	*($13 + [304]) = $6
	$10 = *($6)
	*($13 + [32]) = $10
	$7 = *(($6 + [60]))
	*($13 + [288]) = $7
	$4 = ($13 + [204])
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*(($13 + [208]))) ){ goto $label$15 }
	*($8 + [8]) = $10
	*($8 + [16]) = $7
	*($13 + [304]) = [0]
	*($8) = $6
	*($4) = ($8 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $136(($13 + [200]), ($13 + [304]), ($13 + [32]), ($13 + [288]))
	
.LABEL $label$14
	$8 = *($13 + [304])
	*($13 + [304]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $182($8)
	
.LABEL $label$16
	*($13 + [44]) = $1
	*($13 + [36]) = ($13 + [216])
	*($13 + [32]) = ($13 + [120])
	*($13 + [40]) = ($13 + [128])
	*($13 + [48]) = ($13 + [264])
	*($13 + [52]) = ($13 + [112])
	*($13 + [288]) = $12
	CALL eosio_assert(((int_64)*($13 + [136]) == (int_64)CALL $fimport$3()), [512])
	*($13 + [308]) = ($13 + [32])
	*($13 + [304]) = ($13 + [136])
	*($13 + [312]) = ($13 + [288])
	$8 = CALL $181([120])
	CALL $131($8)
	*($8 + [108]) = ($13 + [136])
	CALL $159(($13 + [304]), $8)
	*($13 + [328]) = $8
	$10 = *($8)
	*($13 + [304]) = $10
	$7 = *($8 + [112])
	*($13 + [324]) = $7
	$4 = ($13 + [164])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($13 + [168]))) ){ goto $label$18 }
	*($6 + [8]) = $10
	*($6 + [16]) = $7
	*($13 + [328]) = [0]
	*($6) = $8
	*($4) = ($6 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $133(($13 + [160]), ($13 + [328]), ($13 + [304]), ($13 + [324]))
	
.LABEL $label$17
	$8 = *($13 + [328])
	*($13 + [328]) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	if ( ((*($8 + [88]) & [1]) == 0) ){ goto $label$20 }
	CALL $182(*(($8 + [96])))
	
.LABEL $label$20
	CALL $182($8)
	
.LABEL $label$19
	*($13 + [32]) = *($13 + [128])
	CALL $65($2, ($13 + [32]), *($0))
	*(($13 + [40])) = [0]
	*($13 + [32]) = (int_64)0
	$8 = CALL strlen([3888])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$24 }
	*($13 + [32]) = ($8 << [1])
	$6 = (($13 + [32]) | [1])
	if ( $8 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $181($7)
	*($13 + [32]) = ($7 | [1])
	*($13 + [40]) = $6
	*($13 + [36]) = $8
	
.LABEL $label$23
	CALL memcpy($6, [3888], $8)
	
.LABEL $label$22
	*(($6 + $8)) = [0]
	*(($13 + [84])) = *(($3 + [12]))
	*(($13 + [80])) = *(($3 + [8]))
	*(($13 + [76])) = *(($3 + [4]))
	*($13 + [56]) = $12
	*($13 + [48]) = *($13 + [128])
	*($13 + [64]) = *(($1 + [8]))
	*($13 + [72]) = *($3)
	$10 = (int_64)0
	*($13 + [88]) = (int_64)0
	CALL $188(($13 + [96]), ($1 + [32]))
	$5 = *($0)
	$9 = (int_64)59
	$8 = [1296]
	$11 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$30 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$6 = ($6 + [165])
	goto $label$28 
	
.LABEL $label$30
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$25 }
	*(($8 = CALL $181([16]))) = $5
	*($8 + [8]) = $11
	*($13 + [304]) = $8
	$8 = ($8 + [16])
	*($13 + [312]) = $8
	*($13 + [308]) = $8
	CALL $148($5, (int_64)-8279439764272534016, ($13 + [304]), ($13 + [32]))
	$8 = *($13 + [304])
	if ( ($8 == 0) ){ goto $label$31 }
	*($13 + [308]) = $8
	CALL $182($8)
	
.LABEL $label$31
	if ( ((*(($13 + [96])) & [1]) == 0) ){ goto $label$32 }
	CALL $182(*(($13 + [104])))
	
.LABEL $label$32
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$33 }
	CALL $182(*($13 + [40]))
	
.LABEL $label$33
	$0 = *($13 + [160])
	if ( ($0 == 0) ){ goto $label$34 }
	$1 = ($13 + [164])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$38 }
	if ( ((*($6 + [88]) & [1]) == 0) ){ goto $label$39 }
	CALL $182(*(($6 + [96])))
	
.LABEL $label$39
	CALL $182($6)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$37 }
	$8 = *(($13 + [160]))
	goto $label$35 
	
.LABEL $label$36
	$8 = $0
	
.LABEL $label$35
	*($1) = $0
	CALL $182($8)
	
.LABEL $label$34
	$0 = *($13 + [200])
	if ( ($0 == 0) ){ goto $label$40 }
	$1 = ($13 + [204])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$44 }
	CALL $182($6)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$43 }
	$8 = *(($13 + [200]))
	goto $label$41 
	
.LABEL $label$42
	$8 = $0
	
.LABEL $label$41
	*($1) = $0
	CALL $182($8)
	
.LABEL $label$40
	*([0] + [4]) = ($13 + [336])
	return (unreachable)
	
.LABEL $label$21
	CALL $183(($13 + [32]))
}

void .FUNC $185 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $181($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $182($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [112])
	*([0] + [4]) = $3
	*(($2 = $3) + [68]) = $0
	*($2 + [56]) = *($1)
	*($2 + [60]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	CALL memset(($2 + [8]), [0], [48])
	CALL $143(($2 + [8]))
	*($2 + [76]) = $1
	*($2 + [72]) = $1
	*($2 + [80]) = ($1 + $0)
	*($2 + [88]) = ($2 + [72])
	*($2 + [100]) = ($2 + [16])
	*($2 + [104]) = ($2 + [24])
	$3 = ($2 + [40])
	*($2 + [108]) = $3
	*($2 + [96]) = ($2 + [8])
	CALL $144(($2 + [96]), ($2 + [88]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [100]) = ($2 + [56])
	*($2 + [96]) = ($2 + [68])
	CALL $145(($2 + [96]), ($2 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [112])
	return [1]
}

void .FUNC _ZN6findex6findex11cancelorderENS0_20request_cancel_orderE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$8 = *($1)
	CALL require_auth($8)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $8)
	*((($11 + [120]) + [32])) = [0]
	*($11 + [128]) = $8
	*($11 + [136]) = (int_64)-1
	*($11 + [144]) = (int_64)0
	*($11 + [120]) = *($0)
	$6 = CALL $97(($11 + [120]), *($1 + [8]), [3424])
	*($11 + [96]) = (int_64)-1
	*($11 + [104]) = [0]
	*($11 + [80]) = *($0)
	*($11 + [88]) = *($6 + [8])
	*(($11 + [108])) = [0]
	*((($11 + [80]) + [32])) = [0]
	*($11 + [116]) = [0]
	$3 = CALL $95(($11 + [80]), *($6 + [16]), [3456])
	$7 = *(($6 + [80]))
	*((($11 + [56]) + [16])) = $7
	$9 = *(($6 + [72]))
	*((($11 + [56]) + [8])) = $9
	$10 = *($6 + [64])
	*(($11 + [16])) = $7
	*(($11 + [8])) = $9
	*($11 + [56]) = $10
	*($11) = $10
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $8, $11, $8)
	CALL $111(($11 + [120]), $6)
	CALL $110(($11 + [80]), $3)
	*((($11 + [24]) + [8])) = [0]
	*($11 + [24]) = (int_64)0
	$3 = CALL strlen([3520])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($11 + [24]) = ($3 << [1])
	$5 = (($11 + [24]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $181($4)
	*($11 + [24]) = ($4 | [1])
	*($11 + [32]) = $5
	*($11 + [28]) = $3
	
.LABEL $label$3
	CALL memcpy($5, [3520], $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	*($11 + [40]) = *(($6 + [16]))
	*($11 + [48]) = *($1)
	$2 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1296]
	$9 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$10 }
	$0 = *($6)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$0 = ($0 + [165])
	goto $label$8 
	
.LABEL $label$10
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	*(($6 = CALL $181([16]))) = $2
	*($6 + [8]) = $9
	*($11 + [160]) = $6
	$6 = ($6 + [16])
	*($11 + [168]) = $6
	*($11 + [164]) = $6
	CALL $141($2, (int_64)-8279723548008251392, ($11 + [160]), ($11 + [24]))
	$6 = *($11 + [160])
	if ( ($6 == 0) ){ goto $label$11 }
	*($11 + [164]) = $6
	CALL $182($6)
	
.LABEL $label$11
	if ( ((*($11 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $182(*($11 + [32]))
	
.LABEL $label$12
	$3 = *($11 + [104])
	if ( ($3 == 0) ){ goto $label$13 }
	$1 = ($11 + [108])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $182($0)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($11 + [104]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $3
	
.LABEL $label$14
	*($1) = $3
	CALL $182($6)
	
.LABEL $label$13
	$3 = *($11 + [144])
	if ( ($3 == 0) ){ goto $label$18 }
	$1 = ($11 + [148])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$22 }
	if ( ((*($0 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($0 + [96])))
	
.LABEL $label$23
	CALL $182($0)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$21 }
	$6 = *(($11 + [144]))
	goto $label$19 
	
.LABEL $label$20
	$6 = $3
	
.LABEL $label$19
	*($1) = $3
	CALL $182($6)
	
.LABEL $label$18
	*([0] + [4]) = ($11 + [176])
	return (unreachable)
	
.LABEL $label$1
	CALL $183(($11 + [24]))
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $185($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $187 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $181(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $182($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12620])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [12428]
	$1 = (((int_32)$2 * (int_32)[12]) + [12428])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC _ZN6findex6findex26cal_return_remaining_valueERKNS0_5orderERKNS0_4pairENS0_9deal_infoERKNS0_5tokenESA_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	float_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	$10 = *($3 + [8])
	$12 = *($1 + [40])
	$9 = *($3)
	CALL prints([2896])
	$8 = (CASTING float_64)(int_64 (int_64))($12 - $9)
	CALL printdf($8))
	$12 = *($4 + [40])
	$9 = *($5 + [40])
	$3 = *($2 + [24])
	$11 = *($5 + [8])
	*($13 + [56]) = $11
	$10 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $10) * (float_64)((float_64)((float_64)((float_64)$8 / (float_64)(CASTING float_64)(uint_32 $3)) * (float_64)(CASTING float_64)(uint_64 $9)) / (float_64)(CASTING float_64)(uint_64 $12))))
	*($13 + [48]) = $10
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$10 = (uint_64)$11 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$2 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	CALL eosio_assert($2, [960])
	CALL prints([2928])
	CALL $121(($13 + [48]))
	if ( ((int_64)*($13 + [48]) < (int_64)1) ){ goto $label$7 }
	$6 = *(($5 + [16]))
	$7 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$3 = [1296]
	$11 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$13 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$13
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$9
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$8 }
	*(($13 + [20])) = *($13 + [52])
	*($13 + [8]) = *($1 + [8])
	*(($13 + [28])) = *(($13 + [60]))
	*(($13 + [24])) = *(($13 + [56]))
	*($13) = $7
	*($13 + [16]) = *($13 + [48])
	*(($13 + [40])) = [0]
	*($13 + [32]) = (int_64)0
	$2 = ($13 + [32])
	$3 = CALL strlen([2992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	$1 = ($13 + [16])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$16 }
	*(($13 + [32])) = ($3 << [1])
	$5 = ($2 + [1])
	if ( $3 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $181($4)
	*(($13 + [32])) = ($4 | [1])
	*(($13 + [40])) = $5
	*(($13 + [36])) = $3
	
.LABEL $label$15
	CALL memcpy($5, [2992], $3)
	
.LABEL $label$14
	*(($5 + $3)) = [0]
	*(($3 = CALL $181([16]))) = $7
	*($3 + [8]) = $11
	*($13 + [112]) = $3
	$3 = ($3 + [16])
	*($13 + [120]) = $3
	*($13 + [116]) = $3
	*($13 + [64]) = *($13)
	*($13 + [72]) = *(($13 + [8]))
	*(($13 + [88])) = *(($1 + [8]))
	*($13 + [80]) = *($1)
	*(($3 = (($13 + [64]) + [40]))) = *(($2 + [8]))
	*($13 + [96]) = *($2)
	*(($13 + [32])) = [0]
	*(($13 + [36])) = [0]
	*(($13 + [40])) = [0]
	CALL $122($6, (int_64)-3617168760277827584, ($13 + [112]), ($13 + [64]))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$17 }
	CALL $182(*($3))
	
.LABEL $label$17
	$3 = *($13 + [112])
	if ( ($3 == 0) ){ goto $label$18 }
	*($13 + [116]) = $3
	CALL $182($3)
	
.LABEL $label$18
	if ( ((*(($13 + [32])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($13 + [40])))
	
.LABEL $label$7
	*([0] + [4]) = ($13 + [128])
	return (unreachable)
	
.LABEL $label$6
	CALL $183($2)
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$3 = *($1)
	$8 = *($2)
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$7 = *($2)
	*((($8 = $9) + [12])) = *(($7 + [12]))
	*(($4 = ($8 + [8]))) = *(($7 + [8]))
	*($8) = *($7)
	*($8 + [4]) = *(($7 + [4]))
	$6 = *((*($2 + [4]) + [16]))
	$5 = *($4)
	*((($8 + [32]) + [8])) = $5
	*(($2 = (($8 + [16]) + [8]))) = $5
	$5 = *($8)
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*(($1 + [80])) = $6
	*(($1 + [72])) = *($2)
	*($1 + [64]) = *($8 + [16])
	CALL eosio_assert([1], [816])
	$2 = *($1 + [88])
	$7 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [96])
	$6 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8 + [36]) = $7
	*($8 + [32]) = $7
	*($8 + [40]) = ($7 + $2)
	CALL $128(($8 + [32]), $1)
	CALL db_update_i64(*($1 + [112]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$3 = *($1)
	$8 = *($2)
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$7 = *($2)
	*((($8 = $9) + [12])) = *(($7 + [12]))
	*(($4 = ($8 + [8]))) = *(($7 + [8]))
	*($8) = *($7)
	*($8 + [4]) = *(($7 + [4]))
	$6 = *((*($2 + [4]) + [16]))
	$5 = *($4)
	*((($8 + [32]) + [8])) = $5
	*(($2 = (($8 + [16]) + [8]))) = $5
	$5 = *($8)
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*(($1 + [80])) = $6
	*(($1 + [72])) = *($2)
	*($1 + [64]) = *($8 + [16])
	CALL eosio_assert([1], [816])
	$2 = *($1 + [88])
	$7 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [96])
	$6 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8 + [36]) = $7
	*($8 + [32]) = $7
	*($8 + [40]) = ($7 + $2)
	CALL $128(($8 + [32]), $1)
	CALL db_update_i64(*($1 + [112]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$6 = (int_64)0
	$4 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$2 }
	$7 = (int_64))((int_64)0 - $3)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = (CASTING uint_64)(uint_32 $4)
	$7 = (int_64)0
	
.LABEL $label$1
	*(($8 + [40])) = $7
	$2 = *($2)
	*($1 + [24]) = *($2)
	*(($1 + [32])) = *(($2 + [8]))
	*(($1 + [28])) = *(($2 + [4]))
	*(($1 + [36])) = *(($2 + [12]))
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*($8 + [24]) = $6
	$5 = *($1)
	CALL eosio_assert([1], [816])
	$9 = $9
	$2 = ($9 + [-64])
	*([0] + [4]) = $2
	*($8 + [4]) = $2
	*($8) = $2
	*($8 + [8]) = ($9 + [-8])
	CALL $127($8, $1)
	CALL db_update_i64(*($1 + [60]), (int_64)0, $2, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = *(($1 + [48]))
	$6 = *(($1 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$5 }
	$3 = (CASTING uint_64)(uint_32 $2)
	goto $label$4 
	
.LABEL $label$5
	$3 = (CASTING uint_64)(uint_32 $2)
	$6 = (int_64)0
	
.LABEL $label$4
	*($8 + [64]) = $3
	*($8 + [72]) = $6
	if ( (CALL memcmp(($8 + [16]), ($8 + [64]), [16]) == 0) ){ goto $label$6 }
	$9 = ($1 + [64])
	$2 = *($9)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, ($8 + [48]), $5)
	*($9) = $2
	
.LABEL $label$7
	CALL db_idx128_update($2, (int_64)0, ($8 + [64]))
	
.LABEL $label$6
	$2 = (($8 + [16]) + [16])
	$6 = (int_64)0
	$9 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$8 }
	$6 = (int_64))((int_64)0 - $3)
	
.LABEL $label$8
	*($8 + [64]) = (CASTING uint_64)(uint_32 $9)
	*($8 + [72]) = $6
	if ( (CALL memcmp($2, ($8 + [64]), [16]) == 0) ){ goto $label$9 }
	$2 = ($1 + [68])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, ($8 + [48]), $5)
	*($2) = $1
	
.LABEL $label$10
	CALL db_idx128_update($1, (int_64)0, ($8 + [64]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$3 = *($1)
	$8 = *($2)
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$7 = *($2 + [4])
	*((($8 = $9) + [12])) = *(($7 + [12]))
	*(($4 = ($8 + [8]))) = *(($7 + [8]))
	*($8) = *($7)
	*($8 + [4]) = *(($7 + [4]))
	$6 = *((*($2 + [8]) + [16]))
	$5 = *($4)
	*((($8 + [32]) + [8])) = $5
	*(($2 = (($8 + [16]) + [8]))) = $5
	$5 = *($8)
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*(($1 + [80])) = $6
	*(($1 + [72])) = *($2)
	*($1 + [64]) = *($8 + [16])
	CALL eosio_assert([1], [816])
	$2 = *($1 + [88])
	$7 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [96])
	$6 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8 + [36]) = $7
	*($8 + [32]) = $7
	*($8 + [40]) = ($7 + $2)
	CALL $128(($8 + [32]), $1)
	CALL db_update_i64(*($1 + [112]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$6 = (int_64)0
	$4 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$2 }
	$7 = (int_64))((int_64)0 - $3)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = (CASTING uint_64)(uint_32 $4)
	$7 = (int_64)0
	
.LABEL $label$1
	*(($8 + [40])) = $7
	$2 = *($2)
	*($1 + [24]) = *($2)
	*(($1 + [32])) = *(($2 + [8]))
	*(($1 + [28])) = *(($2 + [4]))
	*(($1 + [36])) = *(($2 + [12]))
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*($8 + [24]) = $6
	$5 = *($1)
	CALL eosio_assert([1], [816])
	$9 = $9
	$2 = ($9 + [-64])
	*([0] + [4]) = $2
	*($8 + [4]) = $2
	*($8) = $2
	*($8 + [8]) = ($9 + [-8])
	CALL $127($8, $1)
	CALL db_update_i64(*($1 + [60]), (int_64)0, $2, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = *(($1 + [48]))
	$6 = *(($1 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$5 }
	$3 = (CASTING uint_64)(uint_32 $2)
	goto $label$4 
	
.LABEL $label$5
	$3 = (CASTING uint_64)(uint_32 $2)
	$6 = (int_64)0
	
.LABEL $label$4
	*($8 + [64]) = $3
	*($8 + [72]) = $6
	if ( (CALL memcmp(($8 + [16]), ($8 + [64]), [16]) == 0) ){ goto $label$6 }
	$9 = ($1 + [64])
	$2 = *($9)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, ($8 + [48]), $5)
	*($9) = $2
	
.LABEL $label$7
	CALL db_idx128_update($2, (int_64)0, ($8 + [64]))
	
.LABEL $label$6
	$2 = (($8 + [16]) + [16])
	$6 = (int_64)0
	$9 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$8 }
	$6 = (int_64))((int_64)0 - $3)
	
.LABEL $label$8
	*($8 + [64]) = (CASTING uint_64)(uint_32 $9)
	*($8 + [72]) = $6
	if ( (CALL memcmp($2, ($8 + [64]), [16]) == 0) ){ goto $label$9 }
	$2 = ($1 + [68])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, ($8 + [48]), $5)
	*($2) = $1
	
.LABEL $label$10
	CALL db_idx128_update($1, (int_64)0, ($8 + [64]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $182($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [68]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, $9, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx128_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [288])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [336])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [400])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($4 + [96])))
	
.LABEL $label$7
	CALL $182($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($4 + [96])))
	
.LABEL $label$10
	CALL $182($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [112]))
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$6 = (int_64)0
	$4 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$2 }
	$7 = (int_64))((int_64)0 - $3)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = (CASTING uint_64)(uint_32 $4)
	$7 = (int_64)0
	
.LABEL $label$1
	*(($8 + [40])) = $7
	$2 = *($2)
	*($1 + [24]) = *($2)
	*(($1 + [32])) = *(($2 + [8]))
	*(($1 + [28])) = *(($2 + [4]))
	*(($1 + [36])) = *(($2 + [12]))
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*($8 + [24]) = $6
	$5 = *($1)
	CALL eosio_assert([1], [816])
	$9 = $9
	$2 = ($9 + [-64])
	*([0] + [4]) = $2
	*($8 + [4]) = $2
	*($8) = $2
	*($8 + [8]) = ($9 + [-8])
	CALL $127($8, $1)
	CALL db_update_i64(*($1 + [60]), (int_64)0, $2, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = *(($1 + [48]))
	$6 = *(($1 + [40]))
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$5 }
	$3 = (CASTING uint_64)(uint_32 $2)
	goto $label$4 
	
.LABEL $label$5
	$3 = (CASTING uint_64)(uint_32 $2)
	$6 = (int_64)0
	
.LABEL $label$4
	*($8 + [64]) = $3
	*($8 + [72]) = $6
	if ( (CALL memcmp(($8 + [16]), ($8 + [64]), [16]) == 0) ){ goto $label$6 }
	$9 = ($1 + [64])
	$2 = *($9)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, ($8 + [48]), $5)
	*($9) = $2
	
.LABEL $label$7
	CALL db_idx128_update($2, (int_64)0, ($8 + [64]))
	
.LABEL $label$6
	$2 = (($8 + [16]) + [16])
	$6 = (int_64)0
	$9 = *(($1 + [48]))
	$3 = *(($1 + [40]))
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$8 }
	$6 = (int_64))((int_64)0 - $3)
	
.LABEL $label$8
	*($8 + [64]) = (CASTING uint_64)(uint_32 $9)
	*($8 + [72]) = $6
	if ( (CALL memcmp($2, ($8 + [64]), [16]) == 0) ){ goto $label$9 }
	$2 = ($1 + [68])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, ($8 + [48]), $5)
	*($2) = $1
	
.LABEL $label$10
	CALL db_idx128_update($1, (int_64)0, ($8 + [64]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $119 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [704])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [752])
	$3 = *($1)
	$8 = *($2)
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$7 = *($2)
	*((($8 = $9) + [12])) = *(($7 + [12]))
	*(($4 = ($8 + [8]))) = *(($7 + [8]))
	*($8) = *($7)
	*($8 + [4]) = *(($7 + [4]))
	$6 = *((*($2 + [4]) + [16]))
	$5 = *($4)
	*((($8 + [32]) + [8])) = $5
	*(($2 = (($8 + [16]) + [8]))) = $5
	$5 = *($8)
	*($8 + [32]) = $5
	*($8 + [16]) = $5
	*(($1 + [80])) = $6
	*(($1 + [72])) = *($2)
	*($1 + [64]) = *($8 + [16])
	CALL eosio_assert([1], [816])
	$2 = *($1 + [88])
	$7 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [96])
	$6 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$7 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($9 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$2
	*($8 + [36]) = $7
	*($8 + [32]) = $7
	*($8 + [40]) = ($7 + $2)
	CALL $128(($8 + [32]), $1)
	CALL db_update_i64(*($1 + [112]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($7)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN6findex6findex9logcancelERNS0_16log_cancel_orderE (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [192])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	CALL memset(($6 + [8]), [0], [80])
	CALL $90(($6 + [8]))
	*($6 + [92]) = $1
	*($6 + [88]) = $1
	*($6 + [96]) = ($1 + $3)
	*($6 + [104]) = ($6 + [88])
	$7 = (($6 + [8]) + [16])
	*($6 + [116]) = $7
	*($6 + [120]) = ($6 + [32])
	*($6 + [124]) = ($6 + [40])
	*($6 + [128]) = ($6 + [48])
	*($6 + [132]) = ($6 + [64])
	$4 = (($6 + [8]) + [64])
	*($6 + [136]) = $4
	*($6 + [112]) = ($6 + [8])
	CALL $91(($6 + [112]), ($6 + [104]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	CALL $188(($6 + [112]), ($6 + [8]))
	CALL memcpy((($6 + [112]) + [16]), $7, [48])
	CALL $188((($6 + [112]) + [64]), $4)
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 + [112])), (int_32 $5))
	if ( ((*(($6 + [176])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($6 + [184])))
	
.LABEL $label$6
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*($6 + [120]))
	
.LABEL $label$7
	if ( ((*(($6 + [72])) & [1]) == 0) ){ goto $label$8 }
	CALL $182(*(($6 + [80])))
	
.LABEL $label$8
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $182(*($6 + [16]))
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [192])
	return [1]
}

void .FUNC _ZN6findex6findex11admincancelENS0_20request_cancel_orderE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	CALL require_auth(*($0))
	*($11 + [136]) = (int_64)-1
	*($11 + [144]) = [0]
	*($11 + [120]) = *($0)
	$8 = *($1)
	*($11 + [128]) = $8
	*((($11 + [120]) + [28])) = [0]
	*((($11 + [120]) + [32])) = [0]
	$4 = CALL $97(($11 + [120]), *($1 + [8]), [3424])
	*($11 + [96]) = (int_64)-1
	*($11 + [104]) = [0]
	*($11 + [80]) = *($0)
	*($11 + [88]) = *($4 + [8])
	*((($11 + [80]) + [28])) = [0]
	*((($11 + [80]) + [32])) = [0]
	*($11 + [116]) = [0]
	$3 = CALL $95(($11 + [80]), *($4 + [16]), [3456])
	*(($6 = (($11 + [56]) + [16]))) = *(($4 + [80]))
	*(($5 = (($11 + [56]) + [8]))) = *(($4 + [72]))
	*($11 + [56]) = *($4 + [64])
	$10 = *($0)
	*(($11 + [16])) = *($6)
	*(($11 + [8])) = *($5)
	*($11) = *($11 + [56])
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $8, $11, $10)
	CALL $111(($11 + [120]), $4)
	CALL $110(($11 + [80]), $3)
	*((($11 + [24]) + [8])) = [0]
	*($11 + [24]) = (int_64)0
	$3 = CALL strlen([3488])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($11 + [24]) = ($3 << [1])
	$6 = (($11 + [24]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($3 + [16]) & [-16])
	$6 = CALL $181($5)
	*($11 + [24]) = ($5 | [1])
	*($11 + [32]) = $6
	*($11 + [28]) = $3
	
.LABEL $label$3
	CALL memcpy($6, [3488], $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	*($11 + [40]) = *(($4 + [16]))
	*($11 + [48]) = *($1)
	$2 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$0 = [1296]
	$9 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$10 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$4 = ($4 + [165])
	goto $label$8 
	
.LABEL $label$10
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	*(($0 = CALL $181([16]))) = $2
	*($0 + [8]) = $9
	*($11 + [160]) = $0
	$0 = ($0 + [16])
	*($11 + [168]) = $0
	*($11 + [164]) = $0
	CALL $141($2, (int_64)-8279723548008251392, ($11 + [160]), ($11 + [24]))
	$0 = *($11 + [160])
	if ( ($0 == 0) ){ goto $label$11 }
	*($11 + [164]) = $0
	CALL $182($0)
	
.LABEL $label$11
	if ( ((*($11 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $182(*($11 + [32]))
	
.LABEL $label$12
	$3 = *($11 + [104])
	if ( ($3 == 0) ){ goto $label$13 }
	$1 = ($11 + [108])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $182($4)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($11 + [104]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $3
	
.LABEL $label$14
	*($1) = $3
	CALL $182($0)
	
.LABEL $label$13
	$3 = *($11 + [144])
	if ( ($3 == 0) ){ goto $label$18 }
	$1 = ($11 + [148])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($4 + [96])))
	
.LABEL $label$23
	CALL $182($4)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($11 + [144]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $3
	
.LABEL $label$19
	*($1) = $3
	CALL $182($0)
	
.LABEL $label$18
	*([0] + [4]) = ($11 + [176])
	return (unreachable)
	
.LABEL $label$1
	CALL $183(($11 + [24]))
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [80])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*(($3 = (($7 + [16]) + [8]))) = (int_64)0
	*($7 + [16]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [496])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [496])
	CALL memcpy($3, ($5 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($1 = (($7 + [32]) + [8]))) = *($3)
	*($7 + [32]) = *($7 + [16])
	*((($7 + [48]) + [8])) = *($1)
	*($7 + [48]) = *($7 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	$4 = *((($7 + [48]) + [8]))
	*((($7 + [64]) + [8])) = $4
	*(($7 + [8])) = $4
	$4 = *($7 + [48])
	*($7 + [64]) = $4
	*($7) = $4
	CALL void $1((int_32 $7), (int_32 $6))
	*([0] + [4]) = ($7 + [80])
	return [1]
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [80])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*(($3 = (($7 + [16]) + [8]))) = (int_64)0
	*($7 + [16]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [496])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [496])
	CALL memcpy($3, ($5 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($1 = (($7 + [32]) + [8]))) = *($3)
	*($7 + [32]) = *($7 + [16])
	*((($7 + [48]) + [8])) = *($1)
	*($7 + [48]) = *($7 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	$4 = *((($7 + [48]) + [8]))
	*((($7 + [64]) + [8])) = $4
	*(($7 + [8])) = $4
	$4 = *($7 + [48])
	*($7 + [64]) = $4
	*($7) = $4
	CALL void $1((int_32 $7), (int_32 $6))
	*([0] + [4]) = ($7 + [80])
	return [1]
}

void .FUNC _ZN6findex6findex8withdrawENS0_16request_withdrawE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [208])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$2 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $2)
	CALL require_auth($2)
	$10 = *($1 + [8])
	$3 = *(($0 + [56]))
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$1 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$10) ){ goto $label$1 }
	$8 = $1
	$7 = ($1 + [-24])
	$1 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [32])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$6 }
	$1 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$7), [144])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-3665743317141815296, $10)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $74($7, $1)
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$7), [144])
	
.LABEL $label$5
	$10 = *($1 + [8])
	$7 = [0]
	*(($13 + [136])) = [0]
	*($13 + [120]) = (int_64)-1
	*($13 + [128]) = (int_64)0
	$12 = *($0)
	*($13 + [104]) = $12
	*($13 + [112]) = $2
	$8 = CALL db_find_i64($12, $2, (int_64)4152997947673411584, (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $137(($13 + [104]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($13 + [104])), [144])
	if ( ((int_64)*(($1 + [8])) != (int_64)*($8 + [8])) ){ goto $label$8 }
	$7 = ((int_64)*(($1 + [16])) == (int_64)*(($8 + [16])))
	
.LABEL $label$8
	CALL eosio_assert($7, [3184])
	$10 = (int_64)0
	$12 = (int_64)
	*($13 + [80]) = $12((int_64)0 - *($8)))
	*($13 + [88]) = *(($8 + [8]))
	$1 = ($8 + [16])
	$9 = *($1)
	*((($13 + [8]) + [8])) = *($13 + [88])
	*($13 + [96]) = $9
	*((($13 + [8]) + [16])) = *($13 + [96])
	*($13 + [8]) = $12
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $2, ($13 + [8]), $2)
	$5 = *($1)
	$6 = *($0)
	$9 = (int_64)59
	$1 = [1296]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$14 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$7 = ($7 + [165])
	goto $label$12 
	
.LABEL $label$14
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$1 = ($1 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*($13 + [40]) = $2
	*($13 + [32]) = $6
	*(($13 + [56])) = *(($8 + [8]))
	$10 = *($8)
	*(($13 + [72])) = [0]
	*($13 + [48]) = $10
	*($13 + [64]) = (int_64)0
	$7 = ($13 + [64])
	$1 = CALL strlen([3408])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	$4 = ($13 + [48])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*(($13 + [64])) = ($1 << [1])
	$8 = ($7 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$0 = (($1 + [16]) & [-16])
	$8 = CALL $181($0)
	*(($13 + [64])) = ($0 | [1])
	*(($13 + [72])) = $8
	*(($13 + [68])) = $1
	
.LABEL $label$16
	CALL memcpy($8, [3408], $1)
	
.LABEL $label$15
	*(($8 + $1)) = [0]
	*(($1 = CALL $181([16]))) = $6
	*($1 + [8]) = $11
	*($13 + [192]) = $1
	$1 = ($1 + [16])
	*($13 + [200]) = $1
	*($13 + [196]) = $1
	*($13 + [144]) = *($13 + [32])
	*($13 + [152]) = *((($13 + [32]) + [8]))
	*(($13 + [168])) = *(($4 + [8]))
	*($13 + [160]) = *($4)
	*(($1 = (($13 + [144]) + [40]))) = *(($7 + [8]))
	*($13 + [176]) = *($7)
	*(($13 + [64])) = [0]
	*(($13 + [68])) = [0]
	*((($13 + [32]) + [40])) = [0]
	CALL $122($5, (int_64)-3617168760277827584, ($13 + [192]), ($13 + [144]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$18 }
	CALL $182(*($1))
	
.LABEL $label$18
	$1 = *($13 + [192])
	if ( ($1 == 0) ){ goto $label$19 }
	*($13 + [196]) = $1
	CALL $182($1)
	
.LABEL $label$19
	if ( ((*(($13 + [64])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($13 + [72])))
	
.LABEL $label$7
	$8 = *($13 + [128])
	if ( ($8 == 0) ){ goto $label$4 }
	$4 = ($13 + [132])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = ($1 + [-24])
	$7 = *($1)
	*($1) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL $182($7)
	
.LABEL $label$23
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$22 }
	$1 = *(($13 + [128]))
	goto $label$20 
	
.LABEL $label$21
	$1 = $8
	
.LABEL $label$20
	*($4) = $8
	CALL $182($1)
	
.LABEL $label$4
	*([0] + [4]) = ($13 + [208])
	return (unreachable)
	
.LABEL $label$3
	CALL $183($7)
}

void .FUNC _ZN6findex6findex12executetradeENS0_21request_execute_tradeE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [368])
	*([0] + [4]) = $14
	CALL require_auth(*($0 + [24]))
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$13 = *($1)
	$10 = *($1 + [8])
	*($14 + [344]) = $10
	$12 = *($1 + [16])
	*($14 + [336]) = $12
	$4 = CALL $93(($0 + [72]), $13, [1072])
	$1 = ($0 + [32])
	$5 = CALL $94($1, *($4 + [8]), [1104])
	$6 = CALL $94($1, *($4 + [16]), [1136])
	*((($14 + [296]) + [32])) = [0]
	$2 = ((int_64)$13 * (int_64)100)
	*($14 + [304]) = ((int_64)$2 | (int_64)1)
	*($14 + [312]) = (int_64)-1
	$11 = (int_64)0
	*($14 + [320]) = (int_64)0
	$7 = *($0)
	*($14 + [296]) = $7
	*($14 + [332]) = [0]
	*((($14 + [256]) + [32])) = [0]
	*($14 + [264]) = ((int_64)$2 | (int_64)2)
	*($14 + [256]) = $7
	*($14 + [272]) = (int_64)-1
	*($14 + [280]) = (int_64)0
	*($14 + [292]) = [0]
	$1 = CALL $95(($14 + [296]), $10, [1168])
	$3 = CALL $95(($14 + [256]), $12, [1200])
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, *($1 + [8]))
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, *($3 + [8]))
	*($14 + [232]) = (int_64)-1
	*($14 + [240]) = [0]
	$10 = *($0)
	*($14 + [216]) = $10
	*($14 + [224]) = *($1 + [8])
	*(($14 + [244])) = [0]
	*((($14 + [216]) + [32])) = [0]
	*((($14 + [176]) + [32])) = [0]
	*($14 + [200]) = (int_64)0
	*($14 + [176]) = $10
	*($14 + [192]) = (int_64)-1
	*($14 + [184]) = *($3 + [8])
	$8 = CALL $97(($14 + [216]), *($1 + [16]), [1232])
	$9 = CALL $97(($14 + [176]), *($3 + [16]), [1264])
	CALL _ZN6findex6findex13get_deal_infoERKNS0_4pairERKNS0_5orderES6_RKNS0_5tokenES9_(($14 + [152]), $14, $4, $1, $3, $5, $6)
	$10 = *($14 + [152])
	$12 = *($14 + [160])
	CALL _ZN6findex6findex19set_transaction_feeERKNS0_4pairERKNS0_6recordES6_RmS7_($0, $4, $8, $9, ($14 + [148]), ($14 + [144]))
	CALL _ZN6findex6findex30set_white_list_transaction_feeEyRmyS1_($0, *($1 + [8]), ($14 + [148]), *($3 + [8]), ($14 + [144]))
	CALL _ZN6findex6findex13deal_transferERKNS0_4pairERyS4_RKNS0_9deal_infoERmS8_RKNS0_5tokenESB_($0, $4, ($14 + [344]), ($14 + [336]), ($14 + [152]), ($14 + [148]), ($14 + [144]), $5, $6)
	*($14 + [24]) = $12
	*($14 + [16]) = $13
	*($14 + [40]) = $10
	*($14 + [32]) = *($5 + [40])
	*($14 + [48]) = *($4 + [24])
	*($14 + [52]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($14 + [352]) = *($1 + [8])
	CALL $102(($14 + [56]), ($14 + [352]))
	*($14 + [72]) = *($1 + [40])
	*($14 + [80]) = *($1)
	CALL $188((($14 + [16]) + [72]), ($8 + [88]))
	*($14 + [8]) = *($3 + [8])
	CALL $102(($14 + [100]), ($14 + [8]))
	*($14 + [112]) = *($3 + [40])
	*($14 + [120]) = *($3)
	CALL $188(($14 + [128]), ($9 + [88]))
	$2 = *($0)
	$10 = (int_64)59
	$0 = [1296]
	$12 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$6 }
	$1 = *($0)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	*(($0 = CALL $181([16]))) = $2
	*($0 + [8]) = $12
	*($14 + [352]) = $0
	$0 = ($0 + [16])
	*($14 + [360]) = $0
	*($14 + [356]) = $0
	CALL $103($2, (int_64)-8279867914920656896, ($14 + [352]), ($14 + [16]))
	$0 = *($14 + [352])
	if ( ($0 == 0) ){ goto $label$7 }
	*($14 + [356]) = $0
	CALL $182($0)
	
.LABEL $label$7
	if ( ((*(($14 + [128])) & [1]) == 0) ){ goto $label$8 }
	CALL $182(*(($14 + [136])))
	
.LABEL $label$8
	if ( ((*(($14 + [100])) & [1]) == 0) ){ goto $label$9 }
	CALL $182(*(($14 + [108])))
	
.LABEL $label$9
	if ( ((*(($14 + [88])) & [1]) == 0) ){ goto $label$10 }
	CALL $182(*(($14 + [96])))
	
.LABEL $label$10
	if ( ((*(($14 + [56])) & [1]) == 0) ){ goto $label$11 }
	CALL $182(*(($14 + [64])))
	
.LABEL $label$11
	$3 = *($14 + [200])
	if ( ($3 == 0) ){ goto $label$12 }
	$4 = ($14 + [204])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$16 }
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$17 }
	CALL $182(*(($1 + [96])))
	
.LABEL $label$17
	CALL $182($1)
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$15 }
	$0 = *(($14 + [200]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $3
	
.LABEL $label$13
	*($4) = $3
	CALL $182($0)
	
.LABEL $label$12
	$3 = *($14 + [240])
	if ( ($3 == 0) ){ goto $label$18 }
	$4 = ($14 + [244])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$22 }
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $182(*(($1 + [96])))
	
.LABEL $label$23
	CALL $182($1)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($14 + [240]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $3
	
.LABEL $label$19
	*($4) = $3
	CALL $182($0)
	
.LABEL $label$18
	$3 = *($14 + [280])
	if ( ($3 == 0) ){ goto $label$24 }
	$4 = ($14 + [284])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$26 }
	
.LOOP $label$27:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$28 }
	CALL $182($1)
	
.LABEL $label$28
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$27 }
	$0 = *(($14 + [280]))
	goto $label$25 
	
.LABEL $label$26
	$0 = $3
	
.LABEL $label$25
	*($4) = $3
	CALL $182($0)
	
.LABEL $label$24
	$3 = *($14 + [320])
	if ( ($3 == 0) ){ goto $label$29 }
	$4 = ($14 + [324])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$33 }
	CALL $182($1)
	
.LABEL $label$33
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$32 }
	$0 = *(($14 + [320]))
	goto $label$30 
	
.LABEL $label$31
	$0 = $3
	
.LABEL $label$30
	*($4) = $3
	CALL $182($0)
	
.LABEL $label$29
	*([0] + [4]) = ($14 + [368])
}

void .FUNC _ZN6findex6findex9awithdrawENS0_16request_withdrawE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [208])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*(CALL $92(($0 + [152]), (int_64)1, [1008]) + [8]) == (int_32)[1]), [1040])
	$2 = *($1)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $2)
	CALL require_auth(*($0))
	$10 = *($1 + [8])
	$3 = *(($0 + [56]))
	$8 = *(($0 + [60]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$1 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$10) ){ goto $label$1 }
	$8 = $1
	$7 = ($1 + [-24])
	$1 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$7 = ($0 + [32])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$6 }
	$1 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$7), [144])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-3665743317141815296, $10)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $74($7, $1)
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$7), [144])
	
.LABEL $label$5
	$10 = *($1 + [8])
	$7 = [0]
	*(($13 + [136])) = [0]
	*($13 + [120]) = (int_64)-1
	*($13 + [128]) = (int_64)0
	$12 = *($0)
	*($13 + [104]) = $12
	*($13 + [112]) = $2
	$8 = CALL db_find_i64($12, $2, (int_64)4152997947673411584, (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $137(($13 + [104]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($13 + [104])), [144])
	if ( ((int_64)*(($1 + [8])) != (int_64)*($8 + [8])) ){ goto $label$8 }
	$7 = ((int_64)*(($1 + [16])) == (int_64)*(($8 + [16])))
	
.LABEL $label$8
	CALL eosio_assert($7, [3184])
	$10 = (int_64)0
	$12 = (int_64)
	*($13 + [80]) = $12((int_64)0 - *($8)))
	*($13 + [88]) = *(($8 + [8]))
	$1 = ($8 + [16])
	$9 = *($1)
	*((($13 + [8]) + [8])) = *($13 + [88])
	*($13 + [96]) = $9
	*((($13 + [8]) + [16])) = *($13 + [96])
	*($13 + [8]) = $12
	CALL _ZN6findex6findex14adjust_balanceEyN5eosio14extended_assetEy($0, $2, ($13 + [8]), $2)
	$5 = *($1)
	$6 = *($0)
	$9 = (int_64)59
	$1 = [1296]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$14 }
	$7 = *($1)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$7 = ($7 + [165])
	goto $label$12 
	
.LABEL $label$14
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$1 = ($1 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*($13 + [40]) = $2
	*($13 + [32]) = $6
	*(($13 + [56])) = *(($8 + [8]))
	$10 = *($8)
	*(($13 + [72])) = [0]
	*($13 + [48]) = $10
	*($13 + [64]) = (int_64)0
	$7 = ($13 + [64])
	$1 = CALL strlen([3216])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	$4 = ($13 + [48])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*(($13 + [64])) = ($1 << [1])
	$8 = ($7 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$0 = (($1 + [16]) & [-16])
	$8 = CALL $181($0)
	*(($13 + [64])) = ($0 | [1])
	*(($13 + [72])) = $8
	*(($13 + [68])) = $1
	
.LABEL $label$16
	CALL memcpy($8, [3216], $1)
	
.LABEL $label$15
	*(($8 + $1)) = [0]
	*(($1 = CALL $181([16]))) = $6
	*($1 + [8]) = $11
	*($13 + [192]) = $1
	$1 = ($1 + [16])
	*($13 + [200]) = $1
	*($13 + [196]) = $1
	*($13 + [144]) = *($13 + [32])
	*($13 + [152]) = *((($13 + [32]) + [8]))
	*(($13 + [168])) = *(($4 + [8]))
	*($13 + [160]) = *($4)
	*(($1 = (($13 + [144]) + [40]))) = *(($7 + [8]))
	*($13 + [176]) = *($7)
	*(($13 + [64])) = [0]
	*(($13 + [68])) = [0]
	*((($13 + [32]) + [40])) = [0]
	CALL $122($5, (int_64)-3617168760277827584, ($13 + [192]), ($13 + [144]))
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$18 }
	CALL $182(*($1))
	
.LABEL $label$18
	$1 = *($13 + [192])
	if ( ($1 == 0) ){ goto $label$19 }
	*($13 + [196]) = $1
	CALL $182($1)
	
.LABEL $label$19
	if ( ((*(($13 + [64])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($13 + [72])))
	
.LABEL $label$7
	$8 = *($13 + [128])
	if ( ($8 == 0) ){ goto $label$4 }
	$4 = ($13 + [132])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = ($1 + [-24])
	$7 = *($1)
	*($1) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL $182($7)
	
.LABEL $label$23
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$22 }
	$1 = *(($13 + [128]))
	goto $label$20 
	
.LABEL $label$21
	$1 = $8
	
.LABEL $label$20
	*($4) = $8
	CALL $182($1)
	
.LABEL $label$4
	*([0] + [4]) = ($13 + [208])
	return (unreachable)
	
.LABEL $label$3
	CALL $183($7)
}

void .FUNC _ZN6findex6findex11logsetorderERNS0_9log_orderE (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [128])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*(($3 = (($10 + [32]) + [16]))) = (int_64)0
	*(($4 = (($10 + [32]) + [8]))) = (int_64)0
	*($10 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [496])
	CALL memcpy(($10 + [32]), $8, [8])
	$5 = ($1 & [-8])
	CALL eosio_assert(((int_32)$5 != (int_32)[8]), [496])
	CALL memcpy($4, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$5 != (int_32)[16]), [496])
	CALL memcpy($3, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	*(($1 = (($10 + [56]) + [16]))) = *($3)
	*(($8 = (($10 + [56]) + [8]))) = *($4)
	*($10 + [56]) = *($10 + [32])
	*((($10 + [80]) + [16])) = *($1)
	*((($10 + [80]) + [8])) = *($8)
	*($10 + [80]) = *($10 + [56])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	$6 = *((($10 + [80]) + [16]))
	*((($10 + [104]) + [16])) = $6
	$7 = *((($10 + [80]) + [8]))
	*((($10 + [104]) + [8])) = $7
	*((($10 + [8]) + [16])) = $6
	*((($10 + [8]) + [8])) = $7
	$6 = *($10 + [80])
	*($10 + [104]) = $6
	*($10 + [8]) = $6
	CALL void $1((int_32 ($10 + [8])), (int_32 $9))
	*([0] + [4]) = ($10 + [128])
	return [1]
}

void .FUNC _ZN6findex6findex13deal_transferERKNS0_4pairERyS4_RKNS0_9deal_infoERmS8_RKNS0_5tokenESB_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	float_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_32 $26
	int_32 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_32 $31
	$31 = (*([0] + [4]) - [1568])
	*([0] + [4]) = $31
	$28 = *($4)
	*(($31 + [1512])) = *(($4 + [16]))
	*($31 + [1504]) = *($4 + [8])
	$25 = *($1)
	$26 = [0]
	*((($31 + [1464]) + [32])) = [0]
	$25 = ((int_64)$25 * (int_64)100)
	*($31 + [1472]) = ((int_64)$25 | (int_64)1)
	*($31 + [1480]) = (int_64)-1
	*($31 + [1488]) = (int_64)0
	$30 = *($0)
	*($31 + [1464]) = $30
	*($31 + [1500]) = [0]
	*((($31 + [1424]) + [32])) = [0]
	*($31 + [1432]) = ((int_64)$25 | (int_64)2)
	*($31 + [1424]) = $30
	*($31 + [1440]) = (int_64)-1
	*($31 + [1448]) = (int_64)0
	*($31 + [1460]) = [0]
	$2 = CALL $95(($31 + [1464]), *($2), [1168])
	$3 = CALL $95(($31 + [1424]), *($3), [1200])
	*($31 + [1400]) = (int_64)-1
	*($31 + [1408]) = [0]
	$25 = *($0)
	*($31 + [1384]) = $25
	$9 = *($2 + [8])
	*($31 + [1392]) = $9
	*(($31 + [1412])) = [0]
	*((($31 + [1384]) + [32])) = [0]
	*((($31 + [1344]) + [32])) = [0]
	*($31 + [1344]) = $25
	*($31 + [1360]) = (int_64)-1
	*($31 + [1368]) = (int_64)0
	$10 = *($3 + [8])
	*($31 + [1352]) = $10
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $9)
	CALL _ZN6findex6findex24assert_not_in_black_listEy($0, $10)
	$11 = CALL $97(($31 + [1384]), *($2 + [16]), [1232])
	$12 = CALL $97(($31 + [1344]), *($3 + [16]), [1264])
	*($31 + [1336]) = (int_64)1397703940
	*($31 + [1328]) = (int_64)0
	CALL eosio_assert([1], [896])
	$25 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$27 = [0]
	
.LABEL $label$1
	CALL eosio_assert($27, [960])
	*($31 + [1320]) = (int_64)1397703940
	*($31 + [1312]) = (int_64)0
	CALL eosio_assert([1], [896])
	$25 = (uint_64)*($31 + [1320]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$27 = [0]
	
.LABEL $label$6
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [896])
	$25 = (int_64)5459781
	$26 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$27 = [0]
	
.LABEL $label$11
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [896])
	$25 = (int_64)5459781
	$26 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$27 = [0]
	
.LABEL $label$16
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [896])
	$25 = (int_64)5459781
	$26 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$27 = [0]
	
.LABEL $label$21
	CALL eosio_assert($27, [960])
	$25 = *($2 + [40])
	if ( ((int_64)$25 < (int_64)1) ){ goto $label$34 }
	if ( ((int_64)*($3 + [40]) < (int_64)0) ){ goto $label$33 }
	$20 = *($31 + [1512])
	$19 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 *($31 + [1504])) * (float_64)((float_64)(CASTING float_64)(uint_32 *($5)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$20 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	
.LOOP $label$37:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$37 }
	
.LABEL $label$36
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$35 }
	goto $label$31 
	
.LABEL $label$34
	if ( (int_64)($25 == 0) ){ goto $label$30 }
	
.LABEL $label$33
	$30 = *($3 + [40])
	goto $label$28 
	
.LABEL $label$32
	$27 = [0]
	
.LABEL $label$31
	CALL eosio_assert($27, [960])
	$25 = *($31 + [1504])
	$26 = (($31 + [1504]) + [8])
	$30 = *($26)
	CALL eosio_assert(((int_64)$20 == (int_64)$30), [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($25 - $19)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1328]) + [8])) = $30
	*($31 + [1328]) = $25
	CALL eosio_assert(((int_64)$25 > (int_64)0), [1472])
	$25 = *(($2 + [32]))
	*(($27 = (($31 + [1520]) + [8]))) = $25
	*($31 + [1520]) = *($2 + [24])
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1360])
	$25 = (int_64)
	*($31 + [1520]) = $25(*($31 + [1520]) - *($31 + [1504])))
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1248]) + [20])) = *(($7 + [20]))
	*((($31 + [1248]) + [16])) = *(($7 + [16]))
	$25 = *($27)
	*((($31 + [1248]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [1248]) + [8]))) = *(($7 + [8]))
	*($31 + [1252]) = *(($7 + [4]))
	$30 = *($31 + [1520])
	*($31 + [1248]) = *($7)
	$13 = ($7 + [24])
	CALL $188((($31 + [1248]) + [24]), $13)
	*((($31 + [1200]) + [20])) = *(($8 + [20]))
	*((($31 + [1200]) + [16])) = *(($8 + [16]))
	*((($31 + [1200]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [1200]) + [8]))) = *(($8 + [8]))
	*($31 + [1288]) = *($7 + [40])
	*($31 + [1204]) = *(($8 + [4]))
	*($31 + [1200]) = *($8)
	$14 = ($8 + [24])
	CALL $188((($31 + [1200]) + [24]), $14)
	*($31 + [1240]) = *($8 + [40])
	$23 = *($1 + [24])
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1520])
	$25 = *($27)
	*($31 + [1304]) = $25
	$15 = (CASTING float_64)(int_64 $28)
	$30 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $23))) * (float_64)(CASTING float_64)(uint_64 *($31 + [1240]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [1288]))))
	*($31 + [1296]) = $30
	CALL eosio_assert((uint_64)(((int_64)$30 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$25 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$27 = [0]
	
.LABEL $label$38
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [1200]) + [24])) & [1]) == 0) ){ goto $label$43 }
	CALL $182(*(($31 + [1232])))
	
.LABEL $label$43
	if ( ((*((($31 + [1248]) + [24])) & [1]) == 0) ){ goto $label$44 }
	CALL $182(*(($31 + [1280])))
	
.LABEL $label$44
	$30 = *(($31 + [1528]))
	$29 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 *($31 + [1520])) * (float_64)((float_64)(CASTING float_64)(uint_32 *($5)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$30 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$48 }
	
.LOOP $label$49:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$49 }
	
.LABEL $label$48
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	$27 = [0]
	
.LABEL $label$45
	CALL eosio_assert($27, [960])
	$25 = *($31 + [1520])
	$18 = *((($31 + [1520]) + [8]))
	CALL eosio_assert(((int_64)$30 == (int_64)$18), [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($25 - $29)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	$30 = *(($2 + [40]))
	*((($31 + [1152]) + [16])) = *(($7 + [16]))
	*(($26 = (($31 + [1152]) + [8]))) = *(($7 + [8]))
	*($31 + [1152]) = *($7)
	CALL $188((($31 + [1152]) + [24]), $13)
	*((($31 + [1104]) + [20])) = *(($8 + [20]))
	*((($31 + [1104]) + [16])) = *(($8 + [16]))
	*((($31 + [1104]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [1104]) + [8]))) = *(($8 + [8]))
	*($31 + [1192]) = *(($7 + [40]))
	*($31 + [1108]) = *(($8 + [4]))
	*($31 + [1104]) = *($8)
	CALL $188((($31 + [1104]) + [24]), $14)
	*($31 + [1144]) = *(($8 + [40]))
	$5 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$18 == (int_64)*($26)), [1520])
	$29 = *($27)
	$22 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $25) * (float_64)((float_64)(CASTING float_64)(int_64 $30) / (float_64)(CASTING float_64)(uint_32 $5))) * (float_64)(CASTING float_64)(uint_64 *($31 + [1144]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [1192]))))
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$29 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$52:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$51 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$53 }
	
.LOOP $label$54:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$51 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$54 }
	
.LABEL $label$53
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$52 }
	goto $label$50 
	
.LABEL $label$51
	$27 = [0]
	
.LABEL $label$50
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [1104]) + [24])) & [1]) == 0) ){ goto $label$55 }
	CALL $182(*(($31 + [1136])))
	
.LABEL $label$55
	if ( ((*((($31 + [1152]) + [24])) & [1]) == 0) ){ goto $label$56 }
	CALL $182(*(($31 + [1184])))
	
.LABEL $label$56
	$25 = *(($3 + [32]))
	*(($26 = (($31 + [1088]) + [8]))) = $25
	*($31 + [1088]) = *($3 + [24])
	CALL eosio_assert(((int_64)$25 == (int_64)*((($31 + [1504]) + [8]))), [1360])
	$25 = (int_64)
	*($31 + [1088]) = $25(*($31 + [1088]) - *($31 + [1504])))
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1040]) + [20])) = *(($7 + [20]))
	*((($31 + [1040]) + [16])) = *(($7 + [16]))
	$25 = *($26)
	*((($31 + [1040]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [1040]) + [8]))) = *(($7 + [8]))
	*($31 + [1044]) = *(($7 + [4]))
	$30 = *($31 + [1088])
	*($31 + [1040]) = *($7)
	CALL $188((($31 + [1040]) + [24]), $13)
	*((($31 + [992]) + [20])) = *(($8 + [20]))
	*((($31 + [992]) + [16])) = *(($8 + [16]))
	*((($31 + [992]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [992]) + [8]))) = *(($8 + [8]))
	*($31 + [1080]) = *(($7 + [40]))
	*($31 + [996]) = *(($8 + [4]))
	*($31 + [992]) = *($8)
	CALL $188((($31 + [992]) + [24]), $14)
	*($31 + [1032]) = *(($8 + [40]))
	$5 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1520])
	$25 = *($27)
	$29 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $5))) * (float_64)(CASTING float_64)(uint_64 *($31 + [1032]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [1080]))))
	CALL eosio_assert((uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$25 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$59:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	
.LOOP $label$61:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$58 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$61 }
	
.LABEL $label$60
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$59 }
	goto $label$57 
	
.LABEL $label$58
	$27 = [0]
	
.LABEL $label$57
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [992]) + [24])) & [1]) == 0) ){ goto $label$62 }
	CALL $182(*(($31 + [1024])))
	
.LABEL $label$62
	if ( ((*((($31 + [1040]) + [24])) & [1]) == 0) ){ goto $label$63 }
	CALL $182(*(($31 + [1072])))
	
.LABEL $label$63
	*((($31 + [944]) + [20])) = *(($7 + [20]))
	*((($31 + [944]) + [16])) = *(($7 + [16]))
	$25 = *((($31 + [1504]) + [8]))
	*((($31 + [944]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [944]) + [8]))) = *(($7 + [8]))
	$30 = *($31 + [1504])
	*($31 + [944]) = *($7)
	*($31 + [948]) = *(($7 + [4]))
	CALL $188((($31 + [944]) + [24]), $13)
	*((($31 + [896]) + [20])) = *(($8 + [20]))
	*((($31 + [896]) + [16])) = *(($8 + [16]))
	*((($31 + [896]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [896]) + [8]))) = *(($8 + [8]))
	*($31 + [984]) = *(($7 + [40]))
	*($31 + [900]) = *(($8 + [4]))
	*($31 + [896]) = *($8)
	CALL $188((($31 + [896]) + [24]), $14)
	*($31 + [936]) = *(($8 + [40]))
	$5 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1520])
	$18 = *($27)
	$21 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $5))) * (float_64)(CASTING float_64)(uint_64 *($31 + [936]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [984]))))
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	$25 = (uint_64)$18 >> (uint_64)(int_64)8
	$30 = $25)
	
.LOOP $label$66:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $30) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$65 }
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$67 }
	
.LOOP $label$68:
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$65 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$68 }
	
.LABEL $label$67
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$65
	$27 = [0]
	
.LABEL $label$64
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [896]) + [24])) & [1]) == 0) ){ goto $label$69 }
	CALL $182(*(($31 + [928])))
	
.LABEL $label$69
	if ( ((*((($31 + [944]) + [24])) & [1]) == 0) ){ goto $label$70 }
	CALL $182(*(($31 + [976])))
	
.LABEL $label$70
	$17 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 $21) * (float_64)((float_64)(CASTING float_64)(uint_32 *($6)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	
.LOOP $label$75:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$75 }
	
.LABEL $label$74
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	$27 = [0]
	
.LABEL $label$71
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($21 - $17)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1312]) + [8])) = $18
	*($31 + [1312]) = $25
	$30 = *((($31 + [1088]) + [8]))
	$16 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 *($31 + [1088])) * (float_64)((float_64)(CASTING float_64)(uint_32 *($6)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$30 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$78:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$77 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	
.LOOP $label$80:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$80 }
	
.LABEL $label$79
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$78 }
	goto $label$76 
	
.LABEL $label$77
	$27 = [0]
	
.LABEL $label$76
	CALL eosio_assert($27, [960])
	$25 = *($31 + [1088])
	$24 = *((($31 + [1088]) + [8]))
	CALL eosio_assert(((int_64)$30 == (int_64)$24), [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($25 - $16)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [848]) + [16])) = *(($7 + [16]))
	*(($26 = (($31 + [848]) + [8]))) = *(($7 + [8]))
	*($31 + [848]) = *($7)
	CALL $188((($31 + [848]) + [24]), $13)
	*((($31 + [800]) + [20])) = *(($8 + [20]))
	*((($31 + [800]) + [16])) = *(($8 + [16]))
	*((($31 + [800]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [800]) + [8]))) = *(($8 + [8]))
	*($31 + [888]) = *(($7 + [40]))
	*($31 + [804]) = *(($8 + [4]))
	*($31 + [800]) = *($8)
	CALL $188((($31 + [800]) + [24]), $14)
	*($31 + [840]) = *(($8 + [40]))
	$5 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$24 == (int_64)*($26)), [1520])
	$30 = *($27)
	$16 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $25) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $5))) * (float_64)(CASTING float_64)(uint_64 *($31 + [840]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [888]))))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$30 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$83:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$82 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$84 }
	
.LOOP $label$85:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$82 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$85 }
	
.LABEL $label$84
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$83 }
	goto $label$81 
	
.LABEL $label$82
	$27 = [0]
	
.LABEL $label$81
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [800]) + [24])) & [1]) == 0) ){ goto $label$86 }
	CALL $182(*(($31 + [832])))
	
.LABEL $label$86
	if ( ((*((($31 + [848]) + [24])) & [1]) == 0) ){ goto $label$87 }
	CALL $182(*(($31 + [880])))
	
.LABEL $label$87
	$26 = (((int_64)$29 < (int_64)1) | ((int_64)$16 < (int_64)1))
	if ( ((int_64)$22 < (int_64)1) ){ goto $label$91 }
	if ( ((int_64)*($31 + [1296]) <= (int_64)0) ){ goto $label$91 }
	*($31 + [792]) = $8
	*($31 + [788]) = ($31 + [1296])
	*($31 + [784]) = ($31 + [1520])
	CALL $112(($31 + [1384]), $11, ($31 + [784]))
	*($31 + [784]) = ($31 + [1520])
	CALL $113(($31 + [1464]), $2, ($31 + [784]))
	if ( $26 ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	CALL $110(($31 + [1464]), $2)
	CALL $111(($31 + [1384]), $11)
	if ( ($26 == 0) ){ goto $label$89 }
	
.LABEL $label$90
	CALL $111(($31 + [1344]), $12)
	CALL $110(($31 + [1424]), $3)
	goto $label$88 
	
.LABEL $label$89
	*($31 + [788]) = $7
	*($31 + [784]) = ($31 + [1088])
	CALL $114(($31 + [1344]), $12, ($31 + [784]))
	*($31 + [784]) = ($31 + [1088])
	CALL $115(($31 + [1424]), $3, ($31 + [784]))
	
.LABEL $label$88
	if ( ((int_64)*(($2 + [40])) <= (int_64)$28) ){ goto $label$29 }
	if ( ((int_64)*(($3 + [40])) < (int_64)1) ){ goto $label$29 }
	$30 = *(($4 + [16]))
	*((($31 + [760]) + [16])) = $30
	$28 = *(($4 + [8]))
	*((($31 + [760]) + [8])) = $28
	$25 = *($4)
	*((($31 + [32]) + [16])) = $30
	*((($31 + [32]) + [8])) = $28
	*($31 + [760]) = $25
	*($31 + [32]) = $25
	CALL _ZN6findex6findex26cal_return_remaining_valueERKNS0_5orderERKNS0_4pairENS0_9deal_infoERKNS0_5tokenESA_($0, $2, $1, ($31 + [32]), $7, $8)
	goto $label$29 
	
.LABEL $label$30
	$30 = *($3 + [40])
	if ( ((int_64)$30 < (int_64)1) ){ goto $label$28 }
	CALL prints([1568])
	$25 = *(($3 + [32]))
	*(($26 = (($31 + [1520]) + [8]))) = $25
	*($31 + [1520]) = *($3 + [24])
	CALL eosio_assert(((int_64)$25 == (int_64)*($31 + [1512])), [1360])
	$25 = (int_64)
	*($31 + [1520]) = $25(*($31 + [1520]) - *($31 + [1504])))
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [712]) + [20])) = *(($7 + [20]))
	*((($31 + [712]) + [16])) = *(($7 + [16]))
	$25 = *($26)
	*((($31 + [712]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [712]) + [8]))) = *(($7 + [8]))
	*($31 + [716]) = *(($7 + [4]))
	$30 = *($31 + [1520])
	*($31 + [712]) = *($7)
	$4 = ($7 + [24])
	CALL $188((($31 + [712]) + [24]), $4)
	*((($31 + [664]) + [20])) = *(($8 + [20]))
	*((($31 + [664]) + [16])) = *(($8 + [16]))
	*((($31 + [664]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [664]) + [8]))) = *(($8 + [8]))
	*($31 + [752]) = *($7 + [40])
	*($31 + [668]) = *(($8 + [4]))
	*($31 + [664]) = *($8)
	$13 = ($8 + [24])
	CALL $188((($31 + [664]) + [24]), $13)
	*($31 + [704]) = *($8 + [40])
	$14 = *($1 + [24])
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1520])
	$25 = *($27)
	$15 = (CASTING float_64)(int_64 $28)
	$22 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $14))) * (float_64)(CASTING float_64)(uint_64 *($31 + [704]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [752]))))
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$25 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$94:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$93 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$95 }
	
.LOOP $label$96:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$93 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$96 }
	
.LABEL $label$95
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$94 }
	goto $label$92 
	
.LABEL $label$93
	$27 = [0]
	
.LABEL $label$92
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [664]) + [24])) & [1]) == 0) ){ goto $label$97 }
	CALL $182(*(($31 + [696])))
	
.LABEL $label$97
	if ( ((*((($31 + [712]) + [24])) & [1]) == 0) ){ goto $label$98 }
	CALL $182(*(($31 + [744])))
	
.LABEL $label$98
	*((($31 + [616]) + [20])) = *(($7 + [20]))
	*((($31 + [616]) + [16])) = *(($7 + [16]))
	$25 = *((($31 + [1504]) + [8]))
	*((($31 + [616]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [616]) + [8]))) = *(($7 + [8]))
	$30 = *($31 + [1504])
	*($31 + [616]) = *($7)
	*($31 + [620]) = *(($7 + [4]))
	CALL $188((($31 + [616]) + [24]), $4)
	*((($31 + [568]) + [20])) = *(($8 + [20]))
	*((($31 + [568]) + [16])) = *(($8 + [16]))
	*((($31 + [568]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [568]) + [8]))) = *(($8 + [8]))
	*($31 + [656]) = *(($7 + [40]))
	*($31 + [572]) = *(($8 + [4]))
	*($31 + [568]) = *($8)
	CALL $188((($31 + [568]) + [24]), $13)
	*($31 + [608]) = *(($8 + [40]))
	$14 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$25 == (int_64)*($26)), [1520])
	$18 = *($27)
	$21 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $14))) * (float_64)(CASTING float_64)(uint_64 *($31 + [608]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [656]))))
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	$25 = (uint_64)$18 >> (uint_64)(int_64)8
	$30 = $25)
	
.LOOP $label$101:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $30) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$100 }
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$102 }
	
.LOOP $label$103:
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$100 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$103 }
	
.LABEL $label$102
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$101 }
	goto $label$99 
	
.LABEL $label$100
	$27 = [0]
	
.LABEL $label$99
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [568]) + [24])) & [1]) == 0) ){ goto $label$104 }
	CALL $182(*(($31 + [600])))
	
.LABEL $label$104
	if ( ((*((($31 + [616]) + [24])) & [1]) == 0) ){ goto $label$105 }
	CALL $182(*(($31 + [648])))
	
.LABEL $label$105
	$17 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 $21) * (float_64)((float_64)(CASTING float_64)(uint_32 *($6)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	
.LOOP $label$108:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$107 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$109 }
	
.LOOP $label$110:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$107 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$110 }
	
.LABEL $label$109
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$108 }
	goto $label$106 
	
.LABEL $label$107
	$27 = [0]
	
.LABEL $label$106
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($21 - $17)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1312]) + [8])) = $18
	*($31 + [1312]) = $25
	$30 = *((($31 + [1520]) + [8]))
	$28 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 *($31 + [1520])) * (float_64)((float_64)(CASTING float_64)(uint_32 *($6)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$28 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$30 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$113:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$112 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$114 }
	
.LOOP $label$115:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$112 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$115 }
	
.LABEL $label$114
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$113 }
	goto $label$111 
	
.LABEL $label$112
	$27 = [0]
	
.LABEL $label$111
	CALL eosio_assert($27, [960])
	$25 = *($31 + [1520])
	$29 = *((($31 + [1520]) + [8]))
	CALL eosio_assert(((int_64)$30 == (int_64)$29), [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($25 - $28)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	$30 = *(($3 + [40]))
	*((($31 + [520]) + [16])) = *(($7 + [16]))
	*(($26 = (($31 + [520]) + [8]))) = *(($7 + [8]))
	*($31 + [520]) = *($7)
	CALL $188((($31 + [520]) + [24]), $4)
	*((($31 + [472]) + [20])) = *(($8 + [20]))
	*((($31 + [472]) + [16])) = *(($8 + [16]))
	*((($31 + [472]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [472]) + [8]))) = *(($8 + [8]))
	*($31 + [560]) = *(($7 + [40]))
	*($31 + [476]) = *(($8 + [4]))
	*($31 + [472]) = *($8)
	CALL $188((($31 + [472]) + [24]), $13)
	*($31 + [512]) = *(($8 + [40]))
	$6 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$29 == (int_64)*($26)), [1520])
	$28 = *($27)
	$16 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $25) * (float_64)((float_64)(CASTING float_64)(int_64 $30) / (float_64)(CASTING float_64)(uint_32 $6))) * (float_64)(CASTING float_64)(uint_64 *($31 + [512]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [560]))))
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$28 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$118:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$117 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$119 }
	
.LOOP $label$120:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$117 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$120 }
	
.LABEL $label$119
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$118 }
	goto $label$116 
	
.LABEL $label$117
	$27 = [0]
	
.LABEL $label$116
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [472]) + [24])) & [1]) == 0) ){ goto $label$121 }
	CALL $182(*(($31 + [504])))
	
.LABEL $label$121
	if ( ((*((($31 + [520]) + [24])) & [1]) == 0) ){ goto $label$122 }
	CALL $182(*(($31 + [552])))
	
.LABEL $label$122
	$20 = *(($31 + [1512]))
	$19 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 *($31 + [1504])) * (float_64)((float_64)(CASTING float_64)(uint_32 *($5)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$20 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$125:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$124 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$126 }
	
.LOOP $label$127:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$124 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$127 }
	
.LABEL $label$126
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$125 }
	goto $label$123 
	
.LABEL $label$124
	$27 = [0]
	
.LABEL $label$123
	CALL eosio_assert($27, [960])
	$25 = *($31 + [1504])
	$30 = *((($31 + [1504]) + [8]))
	CALL eosio_assert(((int_64)$20 == (int_64)$30), [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($25 - $19)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [1328]) + [8])) = $30
	*($31 + [1328]) = $25
	CALL eosio_assert(((int_64)$25 > (int_64)0), [1472])
	$25 = *(($2 + [32]))
	*(($26 = (($31 + [1296]) + [8]))) = $25
	*($31 + [1296]) = *($2 + [24])
	CALL eosio_assert(((int_64)$18 == (int_64)$25), [1360])
	$25 = (int_64)
	*($31 + [1296]) = $25(*($31 + [1296]) - $21))
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [424]) + [20])) = *(($7 + [20]))
	*((($31 + [424]) + [16])) = *(($7 + [16]))
	$25 = *($26)
	*((($31 + [424]) + [12])) = *(($7 + [12]))
	*(($26 = (($31 + [424]) + [8]))) = *(($7 + [8]))
	*($31 + [428]) = *(($7 + [4]))
	$30 = *($31 + [1296])
	*($31 + [424]) = *($7)
	CALL $188((($31 + [424]) + [24]), $4)
	*((($31 + [376]) + [20])) = *(($8 + [20]))
	*((($31 + [376]) + [16])) = *(($8 + [16]))
	*((($31 + [376]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [376]) + [8]))) = *(($8 + [8]))
	*($31 + [464]) = *(($7 + [40]))
	*($31 + [380]) = *(($8 + [4]))
	*($31 + [376]) = *($8)
	CALL $188((($31 + [376]) + [24]), $13)
	*($31 + [416]) = *(($8 + [40]))
	$6 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$25 == (int_64)*($27)), [1600])
	$28 = *($26)
	$29 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $30) * (float_64)(CASTING float_64)(uint_64 *($31 + [464]))) / (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $6))) / (float_64)(CASTING float_64)(uint_64 *($31 + [416]))))
	CALL eosio_assert((uint_64)(((int_64)$29 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	$25 = (uint_64)$28 >> (uint_64)(int_64)8
	$30 = $25)
	
.LOOP $label$130:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $30) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$129 }
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$131 }
	
.LOOP $label$132:
	$30 = (uint_64)$30 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$30) & (int_64)255) != (int_64)0) ){ goto $label$129 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$132 }
	
.LABEL $label$131
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$130 }
	goto $label$128 
	
.LABEL $label$129
	$27 = [0]
	
.LABEL $label$128
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [376]) + [24])) & [1]) == 0) ){ goto $label$133 }
	CALL $182(*(($31 + [408])))
	
.LABEL $label$133
	if ( ((*((($31 + [424]) + [24])) & [1]) == 0) ){ goto $label$134 }
	CALL $182(*(($31 + [456])))
	
.LABEL $label$134
	$30 = (Rounds 0)(CALL round(((float_64)((float_64)(CASTING float_64)(int_64 $29) * (float_64)((float_64)(CASTING float_64)(uint_32 *($5)) / (float_64)(float_64)1e8)) + (float_64)(float_64)0.5)))
	CALL eosio_assert((uint_64)(((int_64)$30 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$26 = [0]
	
.LOOP $label$137:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$136 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$138 }
	
.LOOP $label$139:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$136 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$139 }
	
.LABEL $label$138
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$137 }
	goto $label$135 
	
.LABEL $label$136
	$27 = [0]
	
.LABEL $label$135
	CALL eosio_assert($27, [960])
	CALL eosio_assert([1], [1360])
	$25 = (int_64)
	CALL eosio_assert(((int_64)$25($29 - $30)) > (int_64)-4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$25 < (int_64)4611686018427387904), [1440])
	*((($31 + [328]) + [16])) = *(($7 + [16]))
	*(($26 = (($31 + [328]) + [8]))) = *(($7 + [8]))
	*($31 + [328]) = *($7)
	CALL $188((($31 + [328]) + [24]), $4)
	*((($31 + [280]) + [20])) = *(($8 + [20]))
	*((($31 + [280]) + [16])) = *(($8 + [16]))
	*((($31 + [280]) + [12])) = *(($8 + [12]))
	*(($27 = (($31 + [280]) + [8]))) = *(($8 + [8]))
	*($31 + [368]) = *(($7 + [40]))
	*($31 + [284]) = *(($8 + [4]))
	*($31 + [280]) = *($8)
	CALL $188((($31 + [280]) + [24]), $13)
	*($31 + [320]) = *(($8 + [40]))
	$4 = *(($1 + [24]))
	CALL eosio_assert(((int_64)$28 == (int_64)*($26)), [1520])
	$30 = *($27)
	$28 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $25) * (float_64)((float_64)$15 / (float_64)(CASTING float_64)(uint_32 $4))) * (float_64)(CASTING float_64)(uint_64 *($31 + [320]))) / (float_64)(CASTING float_64)(uint_64 *($31 + [368]))))
	CALL eosio_assert((uint_64)(((int_64)$28 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [896])
	$25 = (uint_64)$30 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$142:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $25) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$141 }
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$143 }
	
.LOOP $label$144:
	$25 = (uint_64)$25 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$25) & (int_64)255) != (int_64)0) ){ goto $label$141 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$144 }
	
.LABEL $label$143
	$27 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$142 }
	goto $label$140 
	
.LABEL $label$141
	$27 = [0]
	
.LABEL $label$140
	CALL eosio_assert($27, [960])
	if ( ((*((($31 + [280]) + [24])) & [1]) == 0) ){ goto $label$145 }
	CALL $182(*(($31 + [312])))
	
.LABEL $label$145
	if ( ((*((($31 + [328]) + [24])) & [1]) == 0) ){ goto $label$146 }
	CALL $182(*(($31 + [360])))
	
.LABEL $label$146
	$26 = (((int_64)$22 < (int_64)1) | ((int_64)$16 < (int_64)1))
	if ( ((int_64)$28 < (int_64)1) ){ goto $label$149 }
	if ( ((int_64)*($31 + [1296]) <= (int_64)0) ){ goto $label$149 }
	*($31 + [1092]) = $8
	*($31 + [1088]) = ($31 + [1296])
	CALL $117(($31 + [1384]), $11, ($31 + [1088]))
	*($31 + [1088]) = ($31 + [1296])
	CALL $118(($31 + [1464]), $2, ($31 + [1088]))
	if ( $26 ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$149
	CALL $110(($31 + [1464]), $2)
	CALL $111(($31 + [1384]), $11)
	if ( ($26 == 0) ){ goto $label$147 }
	
.LABEL $label$148
	CALL $111(($31 + [1344]), $12)
	CALL $110(($31 + [1424]), $3)
	goto $label$29 
	
.LABEL $label$147
	*($31 + [1092]) = $7
	*($31 + [1088]) = ($31 + [1520])
	CALL $119(($31 + [1344]), $12, ($31 + [1088]))
	*($31 + [1088]) = ($31 + [1520])
	CALL $120(($31 + [1424]), $3, ($31 + [1088]))
	
.LABEL $label$29
	*($31 + [1296]) = *(($7 + [16]))
	CALL $102(($31 + [1520]), ($31 + [1296]))
	$26 = *($31 + [1528])
	$27 = *($31 + [1520])
	CALL prints([1696])
	$4 = (($31 + [1520]) | [1])
	CALL prints(( $26 ? $4 : ($27 & [1]) ))
	if ( ((*($31 + [1520]) & [1]) == 0) ){ goto $label$150 }
	CALL $182(*(($31 + [1528])))
	
.LABEL $label$150
	*($31 + [1296]) = *(($8 + [16]))
	CALL $102(($31 + [1520]), ($31 + [1296]))
	$26 = *($31 + [1528])
	$27 = *($31 + [1520])
	CALL prints([1728])
	CALL prints(( $26 ? $4 : ($27 & [1]) ))
	if ( ((*($31 + [1520]) & [1]) == 0) ){ goto $label$151 }
	CALL $182(*(($31 + [1528])))
	
.LABEL $label$151
	CALL prints([1760])
	CALL prints([1776])
	CALL $121(($31 + [1504]))
	CALL prints([1760])
	*($31 + [1296]) = *(($2 + [8]))
	CALL $102(($31 + [1520]), ($31 + [1296]))
	$26 = *($31 + [1528])
	$27 = *($31 + [1520])
	CALL prints([1808])
	$4 = (($31 + [1520]) | [1])
	CALL prints(( $26 ? $4 : ($27 & [1]) ))
	if ( ((*($31 + [1520]) & [1]) == 0) ){ goto $label$152 }
	CALL $182(*((($31 + [1520]) + [8])))
	
.LABEL $label$152
	CALL prints([1824])
	CALL printi(*(($2 + [40])))
	CALL prints([1856])
	CALL printui(*($2))
	CALL prints([1888])
	CALL printui(*($11))
	CALL prints([1920])
	CALL $121(($11 + [48]))
	CALL prints([1968])
	CALL $121(($31 + [1328]))
	CALL prints([1760])
	*($31 + [1296]) = *(($3 + [8]))
	CALL $102(($31 + [1520]), ($31 + [1296]))
	$26 = *($31 + [1528])
	$2 = *($31 + [1520])
	CALL prints([2000])
	CALL prints(( $26 ? $4 : ($2 & [1]) ))
	if ( ((*($31 + [1520]) & [1]) == 0) ){ goto $label$153 }
	CALL $182(*(($31 + [1528])))
	
.LABEL $label$153
	CALL prints([2016])
	CALL printi(*($3 + [40]))
	CALL prints([2048])
	CALL printui(*($3))
	CALL prints([2080])
	CALL printui(*($12))
	CALL prints([2112])
	CALL $121(($12 + [48]))
	CALL prints([2160])
	CALL $121(($31 + [1312]))
	CALL prints([1760])
	CALL prints([2192])
	CALL $121(($31 + [1328]))
	CALL prints([2224])
	CALL $121(($31 + [1312]))
	$30 = *($31 + [1328])
	if ( ((int_64)$30 < (int_64)1) ){ goto $label$163 }
	$16 = *(($7 + [16]))
	$22 = *($0)
	$25 = (int_64)0
	$28 = (int_64)59
	$26 = [1296]
	$29 = (int_64)0
	
.LOOP $label$164:
	if ( ((uint_64)$25 > (uint_64)(int_64)5) ){ goto $label$169 }
	$2 = *($26)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$168 }
	$2 = ($2 + [165])
	goto $label$167 
	
.LABEL $label$169
	$30 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$168
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$167
	$30 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$166
	$30 = ((int_64)((int_64)$30 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$165
	$26 = ($26 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$29 = ((int_64)$30 | (int_64)$29)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$164 }
	*(($31 + [252])) = *($31 + [1332])
	*($31 + [240]) = $9
	*(($31 + [260])) = *(($31 + [1340]))
	*(($31 + [256])) = *(($31 + [1336]))
	*($31 + [232]) = $22
	*($31 + [248]) = *($31 + [1328])
	*(($31 + [272])) = [0]
	*($31 + [264]) = (int_64)0
	$2 = ($31 + [264])
	$26 = CALL strlen([2256])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$156 }
	$27 = ($31 + [248])
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$162 }
	*(($31 + [264])) = ($26 << [1])
	$3 = ($2 + [1])
	if ( $26 ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$163
	$25 = (int_64)0
	if ( ((int_64)$30 != (int_64)0) ){ goto $label$154 }
	$16 = *(($7 + [16]))
	$22 = *($0)
	$28 = (int_64)59
	$26 = [1296]
	$29 = (int_64)0
	
.LOOP $label$170:
	if ( ((uint_64)$25 > (uint_64)(int_64)5) ){ goto $label$175 }
	$2 = *($26)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$174 }
	$2 = ($2 + [165])
	goto $label$173 
	
.LABEL $label$175
	$30 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$172 }
	goto $label$171 
	
.LABEL $label$174
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$173
	$30 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$172
	$30 = ((int_64)((int_64)$30 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$171
	$26 = ($26 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$29 = ((int_64)$30 | (int_64)$29)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$170 }
	*(($31 + [204])) = *($31 + [1508])
	*($31 + [192]) = $9
	*(($31 + [212])) = *(($31 + [1516]))
	*(($31 + [208])) = *(($31 + [1512]))
	*($31 + [184]) = $22
	*($31 + [200]) = *($31 + [1504])
	*(($31 + [224])) = [0]
	*($31 + [216]) = (int_64)0
	$2 = ($31 + [216])
	$26 = CALL strlen([2256])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$155 }
	$27 = ($31 + [200])
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$159 }
	*(($31 + [216])) = ($26 << [1])
	$3 = ($2 + [1])
	if ( $26 ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$162
	$4 = (($26 + [16]) & [-16])
	$3 = CALL $181($4)
	*(($31 + [264])) = ($4 | [1])
	*(($31 + [272])) = $3
	*(($31 + [268])) = $26
	
.LABEL $label$161
	CALL memcpy($3, [2256], $26)
	
.LABEL $label$160
	*(($3 + $26)) = [0]
	*(($26 = CALL $181([16]))) = $22
	*($26 + [8]) = $29
	*($31 + [1296]) = $26
	$26 = ($26 + [16])
	*($31 + [1304]) = $26
	*($31 + [1300]) = $26
	*($31 + [1520]) = *($31 + [232])
	*($31 + [1528]) = *((($31 + [232]) + [8]))
	*(($31 + [1544])) = *(($27 + [8]))
	*($31 + [1536]) = *($27)
	*(($26 = (($31 + [1520]) + [40]))) = *(($2 + [8]))
	*($31 + [1552]) = *($2)
	*(($31 + [264])) = [0]
	*(($31 + [268])) = [0]
	*((($31 + [232]) + [40])) = [0]
	CALL $122($16, (int_64)-3617168760277827584, ($31 + [1296]), ($31 + [1520]))
	if ( ((*($31 + [1552]) & [1]) == 0) ){ goto $label$176 }
	CALL $182(*($26))
	
.LABEL $label$176
	$26 = *($31 + [1296])
	if ( ($26 == 0) ){ goto $label$177 }
	*($31 + [1300]) = $26
	CALL $182($26)
	
.LABEL $label$177
	if ( ((*(($31 + [264])) & [1]) == 0) ){ goto $label$154 }
	CALL $182(*(($31 + [272])))
	goto $label$154 
	
.LABEL $label$159
	$4 = (($26 + [16]) & [-16])
	$3 = CALL $181($4)
	*(($31 + [216])) = ($4 | [1])
	*(($31 + [224])) = $3
	*(($31 + [220])) = $26
	
.LABEL $label$158
	CALL memcpy($3, [2256], $26)
	
.LABEL $label$157
	*(($3 + $26)) = [0]
	*(($26 = CALL $181([16]))) = $22
	*($26 + [8]) = $29
	*($31 + [1296]) = $26
	$26 = ($26 + [16])
	*($31 + [1304]) = $26
	*($31 + [1300]) = $26
	*($31 + [1520]) = *($31 + [184])
	*($31 + [1528]) = *((($31 + [184]) + [8]))
	*(($31 + [1544])) = *(($27 + [8]))
	*($31 + [1536]) = *($27)
	*(($26 = (($31 + [1520]) + [40]))) = *(($2 + [8]))
	*($31 + [1552]) = *($2)
	*(($31 + [216])) = [0]
	*(($31 + [220])) = [0]
	*((($31 + [184]) + [40])) = [0]
	CALL $122($16, (int_64)-3617168760277827584, ($31 + [1296]), ($31 + [1520]))
	if ( ((*($31 + [1552]) & [1]) == 0) ){ goto $label$178 }
	CALL $182(*($26))
	
.LABEL $label$178
	$26 = *($31 + [1296])
	if ( ($26 == 0) ){ goto $label$179 }
	*($31 + [1300]) = $26
	CALL $182($26)
	
.LABEL $label$179
	if ( ((*(($31 + [216])) & [1]) == 0) ){ goto $label$154 }
	CALL $182(*(($31 + [224])))
	goto $label$154 
	
.LABEL $label$156
	CALL $183($2)
	
.LABEL $label$155
	CALL $183($2)
	
.LABEL $label$154
	$30 = *($31 + [1312])
	if ( ((int_64)$30 < (int_64)1) ){ goto $label$189 }
	$21 = *(($8 + [16]))
	$9 = *($0)
	$25 = (int_64)0
	$28 = (int_64)59
	$26 = [1296]
	$29 = (int_64)0
	
.LOOP $label$190:
	if ( ((uint_64)$25 > (uint_64)(int_64)5) ){ goto $label$195 }
	$2 = *($26)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$194 }
	$2 = ($2 + [165])
	goto $label$193 
	
.LABEL $label$195
	$30 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$194
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$193
	$30 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$192
	$30 = ((int_64)((int_64)$30 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$191
	$26 = ($26 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$29 = ((int_64)$30 | (int_64)$29)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$190 }
	*(($31 + [156])) = *($31 + [1316])
	*($31 + [144]) = $10
	*(($31 + [164])) = *(($31 + [1324]))
	*(($31 + [160])) = *(($31 + [1320]))
	*($31 + [136]) = $9
	*($31 + [152]) = *($31 + [1312])
	*(($31 + [176])) = [0]
	*($31 + [168]) = (int_64)0
	$2 = ($31 + [168])
	$26 = CALL strlen([2288])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$182 }
	$27 = ($31 + [152])
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$188 }
	*(($31 + [168])) = ($26 << [1])
	$3 = ($2 + [1])
	if ( $26 ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$189
	$25 = (int_64)0
	if ( ((int_64)$30 != (int_64)0) ){ goto $label$180 }
	$22 = *(($8 + [16]))
	$9 = *($0)
	$28 = (int_64)59
	$26 = [1296]
	$29 = (int_64)0
	
.LOOP $label$196:
	if ( ((uint_64)$25 > (uint_64)(int_64)5) ){ goto $label$201 }
	$2 = *($26)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$200 }
	$2 = ($2 + [165])
	goto $label$199 
	
.LABEL $label$201
	$30 = (int_64)0
	if ( ((uint_64)$25 <= (uint_64)(int_64)11) ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$200
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$199
	$30 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$198
	$30 = ((int_64)((int_64)$30 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$197
	$26 = ($26 + [1])
	$25 = ((int_64)$25 + (int_64)1)
	$29 = ((int_64)$30 | (int_64)$29)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$196 }
	*(($31 + [112])) = $18
	*(($31 + [124])) = (int_64)0
	*($31 + [96]) = $10
	*($31 + [88]) = $9
	*($31 + [104]) = $21
	*($31 + [120]) = [0]
	$2 = ($31 + [120])
	$26 = CALL strlen([2288])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$181 }
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$185 }
	*(($31 + [120])) = ($26 << [1])
	$3 = ($2 + [1])
	if ( $26 ){ goto $label$184 }
	goto $label$183 
	
.LABEL $label$188
	$4 = (($26 + [16]) & [-16])
	$3 = CALL $181($4)
	*(($31 + [168])) = ($4 | [1])
	*(($31 + [176])) = $3
	*(($31 + [172])) = $26
	
.LABEL $label$187
	CALL memcpy($3, [2288], $26)
	
.LABEL $label$186
	*(($3 + $26)) = [0]
	*(($26 = CALL $181([16]))) = $9
	*($26 + [8]) = $29
	*($31 + [1296]) = $26
	$26 = ($26 + [16])
	*($31 + [1304]) = $26
	*($31 + [1300]) = $26
	*($31 + [1520]) = *($31 + [136])
	*($31 + [1528]) = *((($31 + [136]) + [8]))
	*(($31 + [1544])) = *(($27 + [8]))
	*($31 + [1536]) = *($27)
	*(($26 = (($31 + [1520]) + [40]))) = *(($2 + [8]))
	*($31 + [1552]) = *($2)
	*(($31 + [168])) = [0]
	*(($31 + [172])) = [0]
	*((($31 + [136]) + [40])) = [0]
	CALL $122($21, (int_64)-3617168760277827584, ($31 + [1296]), ($31 + [1520]))
	if ( ((*($31 + [1552]) & [1]) == 0) ){ goto $label$202 }
	CALL $182(*($26))
	
.LABEL $label$202
	$26 = *($31 + [1296])
	if ( ($26 == 0) ){ goto $label$203 }
	*($31 + [1300]) = $26
	CALL $182($26)
	
.LABEL $label$203
	if ( ((*(($31 + [168])) & [1]) == 0) ){ goto $label$180 }
	CALL $182(*(($31 + [176])))
	goto $label$180 
	
.LABEL $label$185
	$27 = (($26 + [16]) & [-16])
	$3 = CALL $181($27)
	*(($31 + [120])) = ($27 | [1])
	*(($31 + [128])) = $3
	*(($31 + [124])) = $26
	
.LABEL $label$184
	CALL memcpy($3, [2288], $26)
	
.LABEL $label$183
	*(($3 + $26)) = [0]
	*(($26 = CALL $181([16]))) = $9
	*($26 + [8]) = $29
	*($31 + [1296]) = $26
	$26 = ($26 + [16])
	*($31 + [1304]) = $26
	*($31 + [1300]) = $26
	*($31 + [1520]) = *($31 + [88])
	*($31 + [1528]) = *((($31 + [88]) + [8]))
	*((($31 + [1520]) + [24])) = *((($31 + [88]) + [24]))
	*($31 + [1536]) = *($31 + [104])
	*(($26 = (($31 + [1520]) + [40]))) = *(($2 + [8]))
	*($31 + [1552]) = *($2)
	*(($31 + [120])) = [0]
	*(($31 + [124])) = [0]
	*((($31 + [88]) + [40])) = [0]
	CALL $122($22, (int_64)-3617168760277827584, ($31 + [1296]), ($31 + [1520]))
	if ( ((*($31 + [1552]) & [1]) == 0) ){ goto $label$204 }
	CALL $182(*($26))
	
.LABEL $label$204
	$26 = *($31 + [1296])
	if ( ($26 == 0) ){ goto $label$205 }
	*($31 + [1300]) = $26
	CALL $182($26)
	
.LABEL $label$205
	if ( ((*(($31 + [120])) & [1]) == 0) ){ goto $label$180 }
	CALL $182(*(($31 + [128])))
	goto $label$180 
	
.LABEL $label$182
	CALL $183($2)
	
.LABEL $label$181
	CALL $183($2)
	
.LABEL $label$180
	CALL $188(($31 + [1520]), ($11 + [88]))
	CALL $188(($31 + [1296]), ($12 + [88]))
	$25 = CALL _ZN6findex6findex31transfer_record_remark_to_referERKNS0_6recordERKNS0_4pairE($0, $11, $1)
	$30 = CALL _ZN6findex6findex31transfer_record_remark_to_referERKNS0_6recordERKNS0_4pairE($0, $12, $1)
	*($31 + [80]) = $20
	*($31 + [64]) = $18
	*((($31 + [16]) + [8])) = *($31 + [80])
	*($31 + [72]) = $19
	*($31 + [56]) = $17
	*(($31 + [8])) = *($31 + [64])
	*($31 + [16]) = *($31 + [72])
	*($31) = *($31 + [56])
	CALL _ZN6findex6findex26transfer_refer_trading_feeEyyN5eosio5assetES2_RKNS0_4pairERKNS0_5tokenES8_($0, $25, $30, ($31 + [16]), $31, $1, $7, $8)
	if ( ((*($31 + [1296]) & [1]) == 0) ){ goto $label$206 }
	CALL $182(*($31 + [1304]))
	
.LABEL $label$206
	if ( ((*($31 + [1520]) & [1]) == 0) ){ goto $label$207 }
	CALL $182(*($31 + [1528]))
	
.LABEL $label$207
	$7 = *($31 + [1368])
	if ( ($7 == 0) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert((int_64)(((int_64)$30 | (int_64)$25) == 0), [1648])
	$7 = *($31 + [1368])
	if ( ($7 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	$2 = ($31 + [1372])
	$26 = *($2)
	if ( ((int_32)$26 == (int_32)$7) ){ goto $label$209 }
	
.LOOP $label$210:
	$26 = ($26 + [-24])
	$8 = *($26)
	*($26) = [0]
	if ( ($8 == 0) ){ goto $label$211 }
	if ( ((*($8 + [88]) & [1]) == 0) ){ goto $label$212 }
	CALL $182(*(($8 + [96])))
	
.LABEL $label$212
	CALL $182($8)
	
.LABEL $label$211
	if ( ((int_32)$7 != (int_32)$26) ){ goto $label$210 }
	$26 = *(($31 + [1368]))
	goto $label$208 
	
.LABEL $label$209
	$26 = $7
	
.LABEL $label$208
	*($2) = $7
	CALL $182($26)
	
.LABEL $label$26
	$7 = *($31 + [1408])
	if ( ($7 == 0) ){ goto $label$213 }
	$2 = ($31 + [1412])
	$26 = *($2)
	if ( ((int_32)$26 == (int_32)$7) ){ goto $label$215 }
	
.LOOP $label$216:
	$26 = ($26 + [-24])
	$8 = *($26)
	*($26) = [0]
	if ( ($8 == 0) ){ goto $label$217 }
	if ( ((*($8 + [88]) & [1]) == 0) ){ goto $label$218 }
	CALL $182(*(($8 + [96])))
	
.LABEL $label$218
	CALL $182($8)
	
.LABEL $label$217
	if ( ((int_32)$7 != (int_32)$26) ){ goto $label$216 }
	$26 = *(($31 + [1408]))
	goto $label$214 
	
.LABEL $label$215
	$26 = $7
	
.LABEL $label$214
	*($2) = $7
	CALL $182($26)
	
.LABEL $label$213
	$7 = *($31 + [1448])
	if ( ($7 == 0) ){ goto $label$219 }
	$2 = ($31 + [1452])
	$26 = *($2)
	if ( ((int_32)$26 == (int_32)$7) ){ goto $label$221 }
	
.LOOP $label$222:
	$26 = ($26 + [-24])
	$8 = *($26)
	*($26) = [0]
	if ( ($8 == 0) ){ goto $label$223 }
	CALL $182($8)
	
.LABEL $label$223
	if ( ((int_32)$7 != (int_32)$26) ){ goto $label$222 }
	$26 = *(($31 + [1448]))
	goto $label$220 
	
.LABEL $label$221
	$26 = $7
	
.LABEL $label$220
	*($2) = $7
	CALL $182($26)
	
.LABEL $label$219
	$7 = *($31 + [1488])
	if ( ($7 == 0) ){ goto $label$224 }
	$2 = ($31 + [1492])
	$26 = *($2)
	if ( ((int_32)$26 == (int_32)$7) ){ goto $label$226 }
	
.LOOP $label$227:
	$26 = ($26 + [-24])
	$8 = *($26)
	*($26) = [0]
	if ( ($8 == 0) ){ goto $label$228 }
	CALL $182($8)
	
.LABEL $label$228
	if ( ((int_32)$7 != (int_32)$26) ){ goto $label$227 }
	$26 = *(($31 + [1488]))
	goto $label$225 
	
.LABEL $label$226
	$26 = $7
	
.LABEL $label$225
	*($2) = $7
	CALL $182($26)
	
.LABEL $label$224
	*([0] + [4]) = ($31 + [1568])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6findex6findex30set_white_list_transaction_feeEyRmyS1_ (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$8 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$7 = *($0)
	*($9 + [8]) = $7
	*($9 + [16]) = $7
	$0 = CALL db_find_i64($7, $7, (int_64)-2063328927043551232, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $54(($9 + [8]), $0) + [8]) == (int_32)($9 + [8])), [144])
	*($2) = [0]
	$8 = *(($9 + [32]))
	$6 = *(($9 + [36]))
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($6 + [-24])
	$5 = ([0] - $8)
	
.LOOP $label$4:
	if ( ((int_64)*(*($0)) == (int_64)$3) ){ goto $label$1 }
	$6 = $0
	$2 = ($0 + [-24])
	$0 = $2
	if ( ((int_32)($2 + $5) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$7 }
	$0 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [8]) == (int_32)($9 + [8])), [144])
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$0 = CALL db_find_i64(*($9 + [8]), *(($9 + [16])), (int_64)-2063328927043551232, $3)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert(((int_32)*(CALL $54(($9 + [8]), $0) + [8]) == (int_32)($9 + [8])), [144])
	
.LABEL $label$6
	*($4) = [0]
	
.LABEL $label$5
	$6 = *($9 + [32])
	if ( ($6 == 0) ){ goto $label$8 }
	$5 = ($9 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $182($2)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($9 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($5) = $6
	CALL $182($0)
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $103 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [56]) = $3
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	$6 = [0]
	$7 = [0]
	$3 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL $181($4)
	$6 = ($3 + ($5 << [4]))
	*(($8 + [8])) = $6
	*($8) = $3
	*($8 + [4]) = $3
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $7, $2)
	$7 = ($3 + $2)
	*($8 + [4]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $3
	
.LABEL $label$2
	*(($8 + [36])) = $7
	*($8 + [24]) = $1
	*(($8 + [8])) = [0]
	*(($8 + [40])) = $6
	*($8 + [16]) = $0
	*($8 + [32]) = $3
	*($8) = (int_64)0
	CALL $104(($8 + [44]), ($8 + [56]))
	CALL $105(($8 + [64]), ($8 + [16]))
	$3 = *($8 + [64])
	CALL send_inline($3, (*($8 + [68]) - $3))
	$3 = *($8 + [64])
	if ( ($3 == 0) ){ goto $label$4 }
	*($8 + [68]) = $3
	CALL $182($3)
	
.LABEL $label$4
	$3 = *($8 + [44])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($8 + [48])) = $3
	CALL $182($3)
	
.LABEL $label$5
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($8 + [36])) = $3
	CALL $182($3)
	
.LABEL $label$6
	$3 = *($8)
	if ( ($3 == 0) ){ goto $label$7 }
	*($8 + [4]) = $3
	CALL $182($3)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $187($8)
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $181([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1304]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $189($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $186($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $80($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [576])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [576])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $107(CALL $106($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4 + [16]) = [0]
	$2 = *($1)
	*($4) = ($4 + [16])
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = ($2 + [16])
	*($4 + [36]) = ($2 + [24])
	*($4 + [40]) = ($2 + [32])
	*($4 + [44]) = ($2 + [36])
	*($4 + [48]) = ($2 + [40])
	*($4 + [52]) = ($2 + [56])
	*($4 + [56]) = ($2 + [64])
	*($4 + [60]) = ($2 + [72])
	*($4 + [64]) = ($2 + [84])
	*($4 + [68]) = ($2 + [96])
	*($4 + [72]) = ($2 + [104])
	*($4 + [76]) = ($2 + [112])
	CALL $108(($4 + [24]), $4)
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $80($0, $2)
	$3 = *(($0 + [4]))
	$2 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = $3
	$2 = *($1)
	*($4 + [16]) = $4
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = ($2 + [16])
	*($4 + [36]) = ($2 + [24])
	*($4 + [40]) = ($2 + [32])
	*($4 + [44]) = ($2 + [36])
	*($4 + [48]) = ($2 + [40])
	*($4 + [52]) = ($2 + [56])
	*($4 + [56]) = ($2 + [64])
	*($4 + [60]) = ($2 + [72])
	*($4 + [64]) = ($2 + [84])
	*($4 + [68]) = ($2 + [96])
	*($4 + [72]) = ($2 + [104])
	*($4 + [76]) = ($2 + [112])
	CALL $109(($4 + [24]), ($4 + [16]))
	*([0] + [4]) = ($4 + [80])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [576])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [576])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [576])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [576])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [576])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [576])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $87(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $87(*($1), *($0 + [36]))
	CALL $87(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [576])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $87(*($1), *($0 + [52]))
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [4])
	*(($4 = *($1))) = (*($4) + [4])
	$4 = *($2)
	$2 = *($0 + [24])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $4)
	
.LABEL $label$2
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	$4 = *($2)
	$2 = *($0 + [36])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($3) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($3) = ($2 + $4)
	
.LABEL $label$4
	$4 = *($2)
	$2 = *($0 + [40])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($3) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$6 }
	*($3) = ($2 + $4)
	
.LABEL $label$6
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	$4 = *($0)
	$0 = *($0 + [52])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$1 = *($1)
	$4 = *($1)
	
.LOOP $label$7:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	*($1) = $4
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$8 }
	*($1) = ($0 + $4)
	
.LABEL $label$8
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [496])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN6findex6findex10deletepairEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$2 = *(($0 + [96]))
	$6 = *(($0 + [100]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [72])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$5 }
	$4 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$5), [144])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-6224682770514313216, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $62($5, $4)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$5), [144])
	
.LABEL $label$4
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$6 = CALL db_next_i64(*($4 + [44]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $62($5, $6)
	
.LABEL $label$6
	CALL $73($5, $4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [208])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	CALL memset(($5 + [48]), [0], [40])
	*($5 + [132]) = $1
	*($5 + [128]) = $1
	*($5 + [136]) = ($1 + $3)
	*($5 + [88]) = ($5 + [128])
	*($5 + [172]) = ($5 + [56])
	*($5 + [176]) = ($5 + [64])
	*($5 + [180]) = ($5 + [72])
	*($5 + [184]) = ($5 + [76])
	*($5 + [188]) = ($5 + [80])
	*($5 + [168]) = ($5 + [48])
	CALL $81(($5 + [168]), ($5 + [88]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	CALL memcpy(($5 + [88]), ($5 + [48]), [40])
	CALL memcpy(($5 + [128]), ($5 + [88]), [40])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL memcpy(($5 + [168]), ($5 + [128]), [40])
	CALL memcpy(($5 + [8]), ($5 + [168]), [40])
	CALL void $1((int_32 ($5 + [8])), (int_32 $4))
	*([0] + [4]) = ($5 + [208])
	return [1]
}

void .FUNC _ZN6findex6findex11deletetokenEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$2 = *(($0 + [56]))
	$6 = *(($0 + [60]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [32])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$5 }
	$4 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$5), [144])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-3665743317141815296, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $74($5, $4)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$5), [144])
	
.LABEL $label$4
	CALL eosio_assert([1], [208])
	CALL eosio_assert([1], [256])
	$6 = CALL db_next_i64(*($4 + [52]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $74($5, $6)
	
.LABEL $label$6
	CALL $75($5, $4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	CALL memset(($8 + [8]), [0], [48])
	*(($9 = (($8 + [8]) + [16]))) = (int_64)0
	*(($8 + [40])) = [0]
	*($8 + [16]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [68]) = $1
	*($8 + [64]) = $1
	*($8 + [72]) = ($1 + $3)
	*($8 + [56]) = ($8 + [64])
	$5 = (($8 + [8]) + [8])
	*($8 + [116]) = $5
	$4 = (($8 + [8]) + [24])
	*($8 + [120]) = $4
	$6 = ($8 + [48])
	*($8 + [124]) = $6
	*($8 + [112]) = ($8 + [8])
	CALL $83(($8 + [112]), ($8 + [56]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*((($8 + [64]) + [16])) = *($9)
	*((($8 + [64]) + [8])) = *($5)
	*($8 + [64]) = *($8 + [8])
	$3 = (($8 + [64]) + [24])
	CALL $188($3, $4)
	*($8 + [104]) = *($6)
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	*((($8 + [112]) + [16])) = *((($8 + [64]) + [16]))
	*((($8 + [112]) + [8])) = *((($8 + [64]) + [8]))
	*($8 + [112]) = *($8 + [64])
	CALL $188((($8 + [112]) + [24]), $3)
	*($8 + [152]) = *(($8 + [104]))
	CALL void $1((int_32 ($8 + [112])), (int_32 $7))
	if ( ((*($8 + [136]) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($8 + [144])))
	
.LABEL $label$6
	if ( ((*((($8 + [64]) + [24])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($8 + [96])))
	
.LABEL $label$7
	if ( ((*(($8 + [32])) & [1]) == 0) ){ goto $label$8 }
	CALL $182(*(($8 + [40])))
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [160])
	return [1]
}

void .FUNC _ZN6findex6findex10updatepairENS0_19request_update_pairE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *($1)
	$3 = *(($0 + [96]))
	$8 = *(($0 + [100]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$7 = ($8 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [72])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$6 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$5), [144])
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-6224682770514313216, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $62($5, $7)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$5), [144])
	
.LABEL $label$5
	CALL eosio_assert([1], [656])
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$5), [704])
	CALL eosio_assert(((int_64)*(($0 + [72])) == (int_64)CALL $fimport$3()), [752])
	*($7 + [8]) = *($1 + [8])
	*($7 + [16]) = *($1 + [16])
	$2 = *($7)
	*($7 + [24]) = *($1 + [24])
	*($7 + [28]) = *($1 + [28])
	*($7 + [32]) = *($1 + [32])
	CALL eosio_assert([1], [816])
	*($9 + [72]) = (($9 + [16]) + [36])
	*($9 + [68]) = ($9 + [16])
	*($9 + [64]) = ($9 + [16])
	CALL $82(($9 + [64]), $7)
	CALL db_update_i64(*($7 + [44]), (int_64)0, ($9 + [16]), [36])
	$7 = ($0 + [88])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [72])) == (int_64)CALL $fimport$3()), [512])
	*(($7 = CALL $181([56])) + [40]) = $5
	*($7) = $2
	*($7 + [8]) = *($1 + [8])
	*($7 + [16]) = *($1 + [16])
	*($7 + [24]) = *($1 + [24])
	*($7 + [28]) = *($1 + [28])
	*($7 + [32]) = *($1 + [32])
	*($9 + [72]) = (($9 + [16]) + [36])
	*($9 + [68]) = ($9 + [16])
	*($9 + [64]) = ($9 + [16])
	CALL $82(($9 + [64]), $7)
	$2 = *($7)
	$8 = CALL db_store_i64(*(($0 + [80])), (int_64)-6224682770514313216, $6, $2, ($9 + [16]), [36])
	*($7 + [44]) = $8
	$5 = ($0 + [88])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($9 + [64]) = $7
	$2 = *($7)
	*($9 + [16]) = $2
	*($9 + [12]) = $8
	$4 = ($0 + [100])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5 + [8]) = $2
	*($5 + [16]) = $8
	*($9 + [64]) = [0]
	*($5) = $7
	*($4) = ($5 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $64(($0 + [96]), ($9 + [64]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$8
	$7 = *($9 + [64])
	*($9 + [64]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $182($7)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [224])
	*([0] + [4]) = $3
	*(($2 = $3) + [140]) = $0
	*($2 + [128]) = *($1)
	*($2 + [132]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*((($2 = CALL memset($2, [0], [128])) + [44])) = (int_64)0
	*(($2 + [80])) = (int_64)0
	*(($2 + [88])) = (int_64)0
	*($2 + [36 align=4]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [112]) = [0]
	*(($2 + [116])) = [0]
	*(($2 + [120])) = [0]
	*($2 + [148]) = $1
	*($2 + [144]) = $1
	*($2 + [152]) = ($1 + $0)
	*($2 + [160]) = ($2 + [144])
	*($2 + [172]) = ($2 + [8])
	*($2 + [176]) = ($2 + [16])
	*($2 + [180]) = ($2 + [24])
	*($2 + [184]) = ($2 + [32])
	*($2 + [188]) = ($2 + [36])
	*($2 + [192]) = ($2 + [40])
	*($2 + [168]) = $2
	*($2 + [196]) = ($2 + [56])
	*($2 + [200]) = ($2 + [64])
	*($2 + [204]) = ($2 + [72])
	*($2 + [208]) = ($2 + [84])
	*($2 + [212]) = ($2 + [96])
	*($2 + [216]) = ($2 + [104])
	$3 = ($2 + [112])
	*($2 + [220]) = $3
	CALL $88(($2 + [168]), ($2 + [160]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [172]) = ($2 + [128])
	*($2 + [168]) = ($2 + [140])
	CALL $89(($2 + [168]), $2)
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL $182(*(($2 + [120])))
	
.LABEL $label$5
	if ( ((*(($2 + [84])) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*(($2 + [92])))
	
.LABEL $label$6
	if ( ((*(($2 + [72])) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($2 + [80])))
	
.LABEL $label$7
	if ( ((*(($2 + [40])) & [1]) == 0) ){ goto $label$8 }
	CALL $182(*(($2 + [48])))
	
.LABEL $label$8
	*([0] + [4]) = ($2 + [224])
	return [1]
}

void .FUNC _ZN6findex6findex11updatetokenENS0_20request_update_tokenE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$2 = *($1)
	$3 = *(($0 + [56]))
	$7 = *(($0 + [60]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [32])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [144])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)-3665743317141815296, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $74($5, $6)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$5), [144])
	
.LABEL $label$5
	*($8 + [16]) = $1
	CALL eosio_assert([1], [656])
	CALL $85($5, $6, ($8 + [16]))
	goto $label$3 
	
.LABEL $label$4
	$2 = *($0)
	*($8 + [8]) = $1
	*($8 + [40]) = $2
	CALL eosio_assert(((int_64)*(($0 + [32])) == (int_64)CALL $fimport$3()), [512])
	*($8 + [16]) = $5
	*($8 + [20]) = ($8 + [8])
	*($8 + [24]) = ($8 + [40])
	*(($6 = CALL $181([64])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [48]) = $5
	CALL $84(($8 + [16]), $6)
	*($8 + [32]) = $6
	$2 = *($6)
	*($8 + [16]) = $2
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$4 = ($0 + [60])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [64]))) ){ goto $label$8 }
	*($5 + [8]) = $2
	*($5 + [16]) = $7
	*($8 + [32]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $77(($0 + [56]), ($8 + [32]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$6 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$9 }
	CALL $182(*(($6 + [32])))
	
.LABEL $label$9
	CALL $182($6)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = (*([0] + [4]) - [64])
	$8 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*(($5 = ($8 + [8]))) = (int_64)0
	*(($6 = ($8 + [24]))) = (int_64)0
	*(($4 = ($8 + [16]))) = (int_64)0
	*($5) = [0]
	*($8) = (int_64)0
	*($8 + [36]) = $1
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + $3)
	CALL $78(($8 + [32]), $8)
	CALL eosio_assert(((uint_32)(*($8 + [40]) - *($8 + [36])) > (uint_32)[7]), [496])
	CALL memcpy($4, *($8 + [36]), [8])
	$5 = (*($8 + [36]) + [8])
	*($8 + [36]) = $5
	CALL eosio_assert(((uint_32)(*($8 + [40]) - $5) > (uint_32)[7]), [496])
	CALL memcpy($6, *($8 + [36]), [8])
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	CALL $188(($8 + [32]), $8)
	*((($8 + [32]) + [24])) = *(($4 + [8]))
	*($8 + [48]) = *($4)
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 ($8 + [32])), (int_32 $7))
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $182(*($8 + [40]))
	
.LABEL $label$6
	if ( ((*($8) & [1]) == 0) ){ goto $label$7 }
	CALL $182(*(($8 + [8])))
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [64])
	return [1]
}

void .FUNC _ZN6findex6findex3logERNS0_8log_dataE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	CALL $188(($10 + [16]), ($1 + [40]))
	$0 = ( *($10 + [24]) ? (($10 + [16]) | [1]) : (*($10 + [16]) & [1]) )
	$5 = [-1]
	
.LOOP $label$1:
	$4 = ($0 + $5)
	$2 = ($5 + [1])
	$5 = $2
	if ( *(($4 + [1])) ){ goto $label$1 }
	$3 = (CASTING uint_64)(uint_32 $2)
	$7 = (int_64)0
	$6 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$2:
	$9 = (int_64)0
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$3 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$5 = ($5 + [165])
	goto $label$4 
	
.LABEL $label$5
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$7 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$6 
	
.LABEL $label$7
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$6
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$2 }
	CALL require_recipient($8)
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$8 }
	CALL $182(*(($10 + [24])))
	
.LABEL $label$8
	CALL $188($10, ($1 + [84]))
	$0 = ( *($10 + [8]) ? ($10 | [1]) : (*($10) & [1]) )
	$5 = [-1]
	
.LOOP $label$9:
	$4 = ($0 + $5)
	$2 = ($5 + [1])
	$5 = $2
	if ( *(($4 + [1])) ){ goto $label$9 }
	$3 = (CASTING uint_64)(uint_32 $2)
	$7 = (int_64)0
	$6 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$10:
	$9 = (int_64)0
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$11 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$5 = ($5 + [165])
	goto $label$12 
	
.LABEL $label$13
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$15 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$14 
	
.LABEL $label$15
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$14
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$10 }
	CALL require_recipient($8)
	if ( ((*($10) & [1]) == 0) ){ goto $label$16 }
	CALL $182(*(($10 + [8])))
	
.LABEL $label$16
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $193 ()
{
	(unreachable)
}

int_64 .FUNC round (float_64 $0)
{
	int_64 $1
	int_32 $2
	float_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	$1 = (CASTING int_64)(float_64 $0)
	$2 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$2) > (uint_32)[1074]) ){ goto $label$1 }
	$3 = ( !(float_64)$0 ? $0 : ((int_64)$1 < (int_64)0) )
	if ( ((uint_32)$2 > (uint_32)[1021]) ){ goto $label$2 }
	*($4 + [8]) = ((float_64)$3 + (float_64)(float_64)4503599627370496)
	return ((float_64)$0 * (float_64)(float_64)0)
	
.LABEL $label$2
	$2 = ((float_64)$0 != (float_64)$0)
	$0 = (float_64)
	if ( (((float_64)$0(((float_64)((float_64)$3 + (float_64)(float_64)4503599627370496) + (float_64)(float_64)-4503599627370496) - $3)) <= (float_64)(float_64)0.5) | $2) ){ goto $label$4 }
	$3 = ((float_64)((float_64)$3 + (float_64)$0) + (float_64)(float_64)-1)
	goto $label$3 
	
.LABEL $label$4
	$3 = ((float_64)$3 + (float_64)$0)
	if ( (((float_64)$0 > (float_64)(float_64)-0.5) | $2) ){ goto $label$3 }
	$3 = ((float_64)$3 + (float_64)(float_64)1)
	
.LABEL $label$3
	$0 = ( !(float_64)$3 ? $3 : ((int_64)$1 < (int_64)0) )
	
.LABEL $label$1
	return $0
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}