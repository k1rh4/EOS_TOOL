(data (i32.const 8232) "failed to allocate pages\00Invalid SYMBOL name\00")
(data (i32.const 8277) "Invalid SUPPLY\00")
(data (i32.const 8292) "Maximum SUPPLY must be positive\00")
(data (i32.const 8324) "Token with that SYMBOL name exists!\00")
(data (i32.const 8360) "Token with that SYMBOL name does not exist - Please create the Token before updating!\00")
(data (i32.const 8446) "Maximum SUPPLY must exceed the current available SUPPLY\00")
(data (i32.const 8502) "SYMBOL precision mismatch\00")
(data (i32.const 8528) "Invalid SYMBOL Name\00")
(data (i32.const 8548) "Memo must be less than 256 characters\00")
(data (i32.const 8586) "Token with that SYMBOL name does not exist - Please create the Token before issuing!\00")
(data (i32.const 8671) "Invalid QUANTITY Value\00")
(data (i32.const 8694) "QUANTITY Value must be positive\00")
(data (i32.const 8726) "QUANTITY Value cannot exceed the available SUPPLY\00")
(data (i32.const 8776) "Tier Class does not exist - Please Create a Tier Class first\00")
(data (i32.const 8837) "issuer\00")
(data (i32.const 8844) "No Balance object found under the Token Balance Owner\'s Account\00")
(data (i32.const 8908) "There must be no Balance object under the Token Balance Owner\'s Account\00")
(data (i32.const 8980) "Token with that SYMBOL name does not exist - Please create the Token before Recovering!\00")
(data (i32.const 9068) "Account Tier Link does not exist!\00")
(data (i32.const 9102) "Cannot transfer to self!\00")
(data (i32.const 9127) "to Account does not exist!\00")
(data (i32.const 9154) "Token with that SYMBOL name does not exist - Please create the Token before transferring!\00")
(data (i32.const 9244) "Sender Account Balance Record does not exist - Please create a new Balance Record for that Account\00")
(data (i32.const 9343) "Sender Account and its Balance is still locked up according to the agreed Lockup Unlock Agreement\00")
(data (i32.const 9441) "postLockupPercent after a postLockupPeriod Counter has to be greater than 1\00")
(data (i32.const 9517) "Overdrawn balance will result in a breach of the Lockup Unlock Agreement\00")
(data (i32.const 9590) "Overdrawn Balance will result in a breach of the Total Staked Balance\00")
(data (i32.const 9660) "Overdrawn Balance will result in a breach of the Staked Balance\00")
(data (i32.const 9724) "Overdrawn Balance will result in a breach of the Growth Staked Balance\00")
(data (i32.const 9795) "Owner account does not exist\00")
(data (i32.const 9824) "Token with that SYMBOL name does not exist - Please create the Token before opening!\00")
(data (i32.const 9909) "Token with that SYMBOL name does not exist - Please create the Token before staking into a growth account!\00")
(data (i32.const 10016) "Invalid Balance Value\00")
(data (i32.const 10038) "Balance Value must be positive\00")
(data (i32.const 10069) "Owner Account Balance Record does not exist - Please create a new Balance Record for that Account\00")
(data (i32.const 10167) "Growth Timer not set, please contact the Admin to Set the Growth Timer\00")
(data (i32.const 10238) "Growth Staked Balance cannot exceed the Account Balance Record\00")
(data (i32.const 10301) "Total Staked Balance cannot exceed the Account Balance Record\00")
(data (i32.const 10363) "Token with that SYMBOL name does not exist - Please create the Token before staking!\00")
(data (i32.const 10448) "Global Timer not set, please contact the Admin to Set the Global Timer\00")
(data (i32.const 10519) "Staked Balance cannot exceed the Account Balance Record\00")
(data (i32.const 10575) "Please Growth Stake before choosing to Unstake\00")
(data (i32.const 10622) "Token with that SYMBOL name does not exist - Please create the Token before Growth unstaking!\00")
(data (i32.const 10716) "Overdrawn Unstaked Balance exceeds the available Growth Staked Balance\00")
(data (i32.const 10787) "Please Stake before choosing to Unstake\00")
(data (i32.const 10827) "Token with that SYMBOL name does not exist - Please create the Token before unstaking!\00")
(data (i32.const 10914) "Overdrawn Unstaked Balance exceeds the available Staked Balance\00")
(data (i32.const 10978) "Owner Growth Link does not exist!\00")
(data (i32.const 11012) "Invalid PAYOUT Value\00")
(data (i32.const 11033) "PAYOUT Value must be positive\00")
(data (i32.const 11063) "PAYOUT Value cannot exceed the available SUPPLY\00")
(data (i32.const 11111) "Thank you for keeping your EMT in the Emanate Growth Pool, here\e2\80\99s your Growth Pool reward\00")
(data (i32.const 11203) "Owner Stake Link does not exist!\00")
(data (i32.const 11236) "Thank you for keeping your EMT staked, here\'s your Accumulated Distribution Reward\00")
(data (i32.const 11319) "active\00")
(data (i32.const 11326) "Invalid QUANTITY\00")
(data (i32.const 11343) "Balance Sent must be greater than 0\00")
(data (i32.const 11379) "Token with that SYMBOL name does not exist - Please create the Token before exchanging!\00")
(data (i32.const 11467) "Balance row deleted or never existed. Action won\'t have effect.\00")
(data (i32.const 11531) "EOS Value must be Greater than $0 USD\00")
(data (i32.const 11569) "Thank you for exchanging your MNX for EMT!\00")
(data (i32.const 11612) "execute\00")
(data (i32.const 11620) "No balance object found under the Token Balance Owner\'s account\00")
(data (i32.const 11684) "Overdrawn balance will result in a nonexistent negative balance of the account\00")
(data (i32.const 11763) "Tier Class Exists!\00")
(data (i32.const 11782) "initialLockupPeriod must be greater than 0\00")
(data (i32.const 11825) "initialBlock Time must be greater than 0\00")
(data (i32.const 11866) "postLockupPercent must be less than or equal to 100%\00")
(data (i32.const 11919) "postLockupPeriod must be greater than 0\00")
(data (i32.const 11959) "initialLockUpPeriod must be greater than 0\00")
(data (i32.const 12002) "string is too long to be a valid name\00")
(data (i32.const 12040) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 12107) "character is not in allowed character set for names\00")
(data (i32.const 12159) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 12218) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 12267) "invalid symbol name\00")
(data (i32.const 12287) "emteos\00")
(data (i32.const 12294) "EMT\00")
(data (i32.const 12298) "MNX\00")
(data (i32.const 12302) "emanatenekot\00")
(data (i32.const 12315) "delphioracle\00")
(data (i32.const 12328) "string is too long to be a valid symbol_code\00")
(data (i32.const 12373) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 12426) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 12477) "error reading iterator\00")
(data (i32.const 12500) "cannot create objects in table of another contract\00")
(data (i32.const 12551) "write\00")
(data (i32.const 12557) "object passed to modify is not in multi_index\00")
(data (i32.const 12603) "cannot modify objects in table of another contract\00")
(data (i32.const 12654) "updater cannot change primary key when modifying an object\00")
(data (i32.const 12713) "attempt to add asset with different symbol\00")
(data (i32.const 12756) "addition underflow\00")
(data (i32.const 12775) "addition overflow\00")
(data (i32.const 12793) "object passed to erase is not in multi_index\00")
(data (i32.const 12838) "cannot erase objects in table of another contract\00")
(data (i32.const 12888) "attempt to remove object that was not in multi_index\00")
(data (i32.const 12941) "read\00")
(data (i32.const 12946) "cannot pass end iterator to erase\00")
(data (i32.const 12980) "cannot increment end iterator\00")
(data (i32.const 13010) "cannot pass end iterator to modify\00")
(data (i32.const 13045) "attempt to subtract asset with different symbol\00")
(data (i32.const 13093) "subtraction underflow\00")
(data (i32.const 13115) "subtraction overflow\00")
(data (i32.const 13136) "get\00")
(data (i32.const 0) "X3\00\00")
(import "env" "send_deferred" (func $fimport$0 (param i32 i64 i32 i32 i32)))
(import "env" "require_auth" (func $fimport$1 (param i64)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "abort" (func $fimport$5))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$7 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$8 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$9 (param i32)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$11 (param i32 i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$12 (param i64) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$13 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$15 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$16 (result i64)))
(import "env" "get_active_producers" (func $fimport$17 (param i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$18 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$21 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$22 (param i32 i32)))
(import "env" "__multf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$24 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$26 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$27 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$32 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$34 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$35 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$38 (param i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$39 (result i32)))
(import "env" "read_action_data" (func $fimport$40 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$41 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$42 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$43 (param i32 i32)))
(export "apply" (func $101))
(table $0 20 20 anyfunc)
(elem (i32.const 1) $88 $95 $28 $44 $90 $75 $98 $55 $22 $94 $78 $26 $81 $85 $61 $41 $92 $63 $69)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 13140))
(global $global$2 i32 (i32.const 13140))


void .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [80])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = [0]
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	$3 = *($0)
	*($1 + [8]) = $3
	*($1 + [16]) = $3
	*($1 + [32]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)7343625767893860352, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $64(($1 + [8]), $4)
	
.LABEL $label$1
	$3 = ((int_64)((int_64)CALL $17() / (int_64)1000000) + (int_64)-1)
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = CALL db_next_i64(*($2 + [12]), ($1 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $64(($1 + [8]), $4)
	
.LABEL $label$3
	CALL $99(($1 + [8]), $2)
	
.LABEL $label$2
	$3 = ((int_64)$3 & (int_64)4294967295)
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$4
	*(($0 = CALL $7([24])) + [8]) = ($1 + [8])
	*($0) = $3
	CALL memcpy(($1 + [64]), $0, [8])
	$3 = *($0)
	$4 = CALL db_store_i64(*((($1 + [8]) + [8])), (int_64)7343625767893860352, $5, $3, ($1 + [64]), [8])
	*($0 + [12]) = $4
	$2 = ($1 + [24])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$5 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($1 + [56]) = $0
	$3 = *($0)
	*($1 + [64]) = $3
	*($1 + [52]) = $4
	$6 = ($1 + [36])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($1 + [40]))) ){ goto $label$8 }
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	*($1 + [56]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $100(($1 + [32]), ($1 + [56]), ($1 + [64]), ($1 + [52]))
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9($0)
	
.LABEL $label$6
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = ($1 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($1 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($6) = $4
	CALL $9($0)
	
.LABEL $label$9
	$global$0 = ($1 + [80])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $94 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3776976373038448640, $1)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $29($2, $0)
	if ( ((int_32)*($3 + [56]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8776])
	CALL eosio_assert([0], [12946])
	CALL eosio_assert([0], [12980])
	
.LABEL $label$1
	$0 = CALL db_next_i64(*($3 + [60]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $29($2, $0)
	
.LABEL $label$3
	CALL $59($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$3 = *($6)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$7 }
	$3 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $95 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [80])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = [0]
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	$3 = *($0)
	*($1 + [8]) = $3
	*($1 + [16]) = $3
	*($1 + [32]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-3772701863208550400, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $70(($1 + [8]), $4)
	
.LABEL $label$1
	$3 = ((int_64)((int_64)CALL $17() / (int_64)1000000) + (int_64)-1)
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = CALL db_next_i64(*($2 + [12]), ($1 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $70(($1 + [8]), $4)
	
.LABEL $label$3
	CALL $96(($1 + [8]), $2)
	
.LABEL $label$2
	$3 = ((int_64)$3 & (int_64)4294967295)
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$4
	*(($0 = CALL $7([24])) + [8]) = ($1 + [8])
	*($0) = $3
	CALL memcpy(($1 + [64]), $0, [8])
	$3 = *($0)
	$4 = CALL db_store_i64(*((($1 + [8]) + [8])), (int_64)-3772701863208550400, $5, $3, ($1 + [64]), [8])
	*($0 + [12]) = $4
	$2 = ($1 + [24])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$5 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($1 + [56]) = $0
	$3 = *($0)
	*($1 + [64]) = $3
	*($1 + [52]) = $4
	$6 = ($1 + [36])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($1 + [40]))) ){ goto $label$8 }
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	*($1 + [56]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $97(($1 + [32]), ($1 + [56]), ($1 + [64]), ($1 + [52]))
	$0 = *($1 + [56])
	*($1 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9($0)
	
.LABEL $label$6
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = ($1 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($1 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($6) = $4
	CALL $9($0)
	
.LABEL $label$9
	$global$0 = ($1 + [80])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $90 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [160])
	$global$0 = $5
	CALL require_auth(*($0))
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$6 = *($0)
	*($5 + [8]) = $6
	*($5 + [16]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-3776976373038448640, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $29(($5 + [8]), $7) + [56]) == (int_32)($5 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$2
	CALL eosio_assert([0], [11763])
	
.LABEL $label$1
	$6 = ((int_64)((int_64)CALL $17() / (int_64)1000000) & (int_64)4294967295)
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$9 }
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [11782])
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [11825])
	if ( (uint_64)($3 <= (int_64)101) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_64)$3 >= (uint_64)(int_64)101) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [11866])
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [11919])
	
.LABEL $label$3
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$10
	*(($0 = CALL $7([72])) + [56]) = ($5 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	*($0 + [16]) = $6
	*($0 + [24]) = $3
	*($0 + [32]) = $4
	*($0 + [40]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*($5 + [112]) = (($5 + [48]) + [56])
	*($5 + [108]) = ($5 + [48])
	*($5 + [104]) = ($5 + [48])
	*($5 + [120]) = ($5 + [104])
	*($5 + [132]) = ($0 + [8])
	*($5 + [128]) = $0
	*($5 + [136]) = ($0 + [16])
	*($5 + [140]) = ($0 + [24])
	*($5 + [144]) = ($0 + [32])
	*($5 + [148]) = ($0 + [40])
	*($5 + [152]) = ($0 + [48])
	CALL $60(($5 + [128]), ($5 + [120]))
	$6 = *($0)
	$9 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)-3776976373038448640, $8, $6, ($5 + [48]), [56])
	*($0 + [60]) = $9
	$7 = (($5 + [8]) + [16])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$11 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($5 + [128]) = $0
	$6 = *($0)
	*($5 + [48]) = $6
	*($5 + [104]) = $9
	$10 = ($5 + [36])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$14 }
	*($7 + [8]) = $6
	*($7 + [16]) = $9
	*($5 + [128]) = [0]
	*($7) = $0
	*($10) = ($7 + [24])
	$0 = *($5 + [128])
	*($5 + [128]) = [0]
	if ( $0 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $91(($5 + [32]), ($5 + [128]), ($5 + [48]), ($5 + [104]))
	$0 = *($5 + [128])
	*($5 + [128]) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9($0)
	
.LABEL $label$12
	$9 = *($5 + [32])
	if ( ($9 == 0) ){ goto $label$15 }
	$10 = ($5 + [36])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$19 }
	CALL $9($7)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$0) ){ goto $label$18 }
	$0 = *(($5 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$0 = $9
	
.LABEL $label$16
	*($10) = $9
	CALL $9($0)
	
.LABEL $label$15
	$global$0 = ($5 + [160])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $92 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [64]) = $3
	*($5 + [72]) = $2
	*($5 + [56]) = $4
	CALL require_auth(*($0))
	$6 = [0]
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	$4 = *($0)
	*($5 + [16]) = $4
	*($5 + [24]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-3776976373038448640, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $29(($5 + [16]), $7)
	if ( ((int_32)*($6 + [56]) == (int_32)($5 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$8
	if ( ((int_64)*($5 + [72]) == (int_64)0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [8776])
	if ( ((int_64)*($5 + [72]) != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [11959])
	if ( (uint_64)(*($5 + [64]) <= (int_64)101) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_64)*($5 + [64]) >= (uint_64)(int_64)101) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)*($5 + [56]) == (int_64)0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11866])
	if ( ((int_64)*($5 + [56]) != (int_64)0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11919])
	
.LABEL $label$1
	$4 = *($0)
	*($5 + [4]) = ($5 + [64])
	*($5) = ($5 + [72])
	*($5 + [8]) = ($5 + [56])
	if ( $6 ){ goto $label$9 }
	CALL eosio_assert([0], [13010])
	
.LABEL $label$9
	CALL $93(($5 + [16]), $6, $4, $5)
	$7 = *($5 + [40])
	if ( ($7 == 0) ){ goto $label$10 }
	$8 = ($5 + [44])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $9($6)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($5 + [40]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $7
	
.LABEL $label$11
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$10
	$global$0 = ($5 + [80])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [24]) = *(*(($3 + [4])))
	*($1 + [32]) = *(*(($3 + [8])))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $123 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	CALL memcpy(($3 + [40]), $6, [8])
	*($3 + [112]) = *($3 + [40])
	*((($3 + [8]) + [8])) = $5
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [16])
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	CALL $44(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), ($3 + [120]), ($3 + [112]))
	$global$0 = ($3 + [128])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [16])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$1 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $122 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	CALL memcpy(($3 + [40]), $6, [8])
	*($3 + [112]) = *($3 + [40])
	*((($3 + [8]) + [8])) = $5
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [16])
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	CALL $41(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), ($3 + [120]), ($3 + [112]))
	$global$0 = ($3 + [128])
}

void .FUNC $130 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*(($3 + [8])) = $5
	*($3 + [20]) = ($2 + [8])
	*($3 + [16]) = $2
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	CALL $81(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [104]))
	$global$0 = ($3 + [112])
}

void .FUNC $131 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [104]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $2, [8])
	*(($3 + [8])) = $5
	*($3 + [20]) = ($2 + [8])
	*($3 + [16]) = $2
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	CALL $85(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [104]))
	$global$0 = ($3 + [112])
}

void .FUNC $132 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $88(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $133 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [136])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [136])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12941])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [120]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$8
	CALL memcpy(($3 + [112]), $5, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [32])
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	CALL $90(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), *($3 + [136]), *($3 + [128]), *($3 + [120]), *($3 + [112]))
	$global$0 = ($3 + [144])
}

void .FUNC $134 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [136])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [136])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12941])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [120]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$8
	CALL memcpy(($3 + [112]), $5, [8])
	*((($3 + [8]) + [8])) = $6
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [32])
	*($3 + [32]) = $6
	*($3 + [8]) = *($3 + [24])
	CALL $92(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), *($3 + [136]), *($3 + [128]), *($3 + [120]), *($3 + [112]))
	$global$0 = ($3 + [144])
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13136])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $141($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $136 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [16])) = $4
	*($3 + [28]) = $2
	*($3 + [24]) = $2
	*($3 + [32]) = $4
	*($3 + [8]) = *($3 + [24])
	CALL $95(CALL $112(($3 + [40]), $0, $1, ($3 + [8])))
	$global$0 = ($3 + [112])
}

void .FUNC $137 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [16])) = $4
	*($3 + [28]) = $2
	*($3 + [24]) = $2
	*($3 + [32]) = $4
	*($3 + [8]) = *($3 + [24])
	CALL $98(CALL $112(($3 + [40]), $0, $1, ($3 + [8])))
	$global$0 = ($3 + [112])
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $121($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $20($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $20($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $18($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12756])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12775])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-15])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $39(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [24]), $2, $4, [17])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [32])
}

void .FUNC $126 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $63(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $150(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $68(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $125 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*($3 + [112]) = *($3 + [32])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $61(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [112]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [24]))
}

int_32 .FUNC $42 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*(($6 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $37($0, $5)
	if ( ((int_32)*($6 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($2) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8528])
	$5 = (uint_64)*($2) >> (uint_64)(int_64)8)
	
.LABEL $label$1
	CALL require_auth(*($1))
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	*($3 + [24]) = *($0)
	*($3 + [32]) = *($1)
	$4 = CALL $42(($3 + [24]), $5, [8844])
	if ( *($4 + [16]) ){ goto $label$6 }
	*((($3 + [8]) + [8])) = *(($4 + [8]))
	*($3 + [8]) = *($4)
	CALL $43(($3 + [24]), $4)
	$8 = *(($3 + [52]))
	$9 = *(($3 + [48]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$11:
	$4 = ($8 + [-24])
	$2 = *($4)
	if ( ((int_64)(uint_64)*($2 + [8]) >> (uint_64)(int_64)8) == (int_64)$5) ){ goto $label$10 }
	$8 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$9 }
	if ( ((int_32)*(($2 + [20])) == (int_32)($3 + [24])) ){ goto $label$8 }
	CALL eosio_assert([0], [12426])
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL db_find_i64(*($3 + [24]), *((($3 + [24]) + [8])), (int_64)3607749779137757184, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	if ( ((int_32)*(CALL $37(($3 + [24]), $4) + [20]) == (int_32)($3 + [24])) ){ goto $label$8 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$8
	CALL eosio_assert([0], [8908])
	
.LABEL $label$7
	$7 = *($1)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [24])) ){ goto $label$12 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$12
	*(($4 = CALL $7([32])) + [20]) = ($3 + [24])
	*($4 + [16]) = [1]
	*($4 + [8]) = *((($3 + [8]) + [8]))
	*($4) = *($3 + [8])
	*($3 + [104]) = (($3 + [64]) + [17])
	*($3 + [100]) = ($3 + [64])
	*($3 + [96]) = ($3 + [64])
	*($3 + [112]) = ($3 + [96])
	*($3 + [124]) = ($4 + [16])
	*($3 + [120]) = $4
	CALL $39(($3 + [120]), ($3 + [112]))
	$6 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($3 + [24]) + [8])), (int_64)3607749779137757184, $7, $6), ($3 + [64]), [17]
	*($4 + [24]) = $9)
	$8 = (($3 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$13 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$13
	*($3 + [96]) = $4
	$6 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [64]) = $6)
	*($3 + [120]) = $9
	$2 = ($3 + [52])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*((($3 + [24]) + [32]))) ){ goto $label$15 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($3 + [96]) = [0]
	*($8) = $4
	*($2) = ($8 + [24])
	$4 = *($3 + [96])
	*($3 + [96]) = [0]
	if ( $4 ){ goto $label$14 }
	goto $label$6 
	
.LABEL $label$15
	CALL $40(($3 + [48]), ($3 + [96]), ($3 + [64]), ($3 + [120]))
	$4 = *($3 + [96])
	*($3 + [96]) = [0]
	if ( ($4 == 0) ){ goto $label$6 }
	
.LABEL $label$14
	CALL $9($4)
	
.LABEL $label$6
	$9 = *($3 + [48])
	if ( ($9 == 0) ){ goto $label$16 }
	$2 = ($3 + [52])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	CALL $9($8)
	
.LABEL $label$20
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$19 }
	$4 = *(($3 + [48]))
	goto $label$17 
	
.LABEL $label$18
	$4 = $9
	
.LABEL $label$17
	*($2) = $9
	CALL $9($4)
	
.LABEL $label$16
	$global$0 = ($3 + [128])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $149(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $74(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [88])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$4 = *($0)
	*($3 + [56]) = $4
	$5 = *($1)
	*($3 + [64]) = $5
	$6 = CALL db_find_i64($4, $5, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$6) < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $37(($3 + [56]), $6)
	if ( ((int_32)*($6 + [20]) == (int_32)($3 + [56])) ){ goto $label$5 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$5
	if ( ((int_64)*($6) >= (int_64)*($2)) ){ goto $label$6 }
	CALL eosio_assert([0], [11684])
	
.LABEL $label$6
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$5 = *($0)
	*($3 + [16]) = $5
	$4 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $4)
	$0 = CALL db_find_i64($5, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $23(($3 + [16]), $0) + [40]) == (int_32)($3 + [16])) ){ goto $label$9 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$9
	if ( ((int_64)*($6) != (int_64)*($2)) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	CALL eosio_assert([0], [8360])
	if ( ((int_64)*($6) == (int_64)*($2)) ){ goto $label$3 }
	
.LABEL $label$7
	$4 = *($1)
	*($3 + [8]) = $2
	CALL $54(($3 + [56]), $6, $4, ($3 + [8]))
	$0 = *($3 + [40])
	if ( ($0 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [11620])
	
.LABEL $label$3
	CALL $43(($3 + [56]), $6)
	$0 = *($3 + [40])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($3 + [44])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$6 = *($2)
	*($2) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($6)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($3 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $0
	
.LABEL $label$10
	*($1) = $0
	CALL $9($2)
	
.LABEL $label$1
	$0 = *($3 + [80])
	if ( ($0 == 0) ){ goto $label$14 }
	$1 = ($3 + [84])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$6 = *($2)
	*($2) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	CALL $9($6)
	
.LABEL $label$18
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $0
	
.LABEL $label$15
	*($1) = $0
	CALL $9($2)
	
.LABEL $label$14
	$global$0 = ($3 + [96])
	(unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [288])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($2) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8528])
	$5 = (uint_64)*($2) >> (uint_64)(int_64)8)
	
.LABEL $label$1
	*(($3 + [240])) = [0]
	*($3 + [224]) = (int_64)-1
	*($3 + [232]) = (int_64)0
	$6 = *($0)
	*($3 + [208]) = $6
	*($3 + [216]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $23(($3 + [208]), $4)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [208])) ){ goto $label$7 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$7
	CALL require_auth(*($4 + [32]))
	*((($3 + [168]) + [32])) = [0]
	*($3 + [184]) = (int_64)-1
	*($3 + [192]) = (int_64)0
	*($3 + [168]) = *($0)
	*($3 + [176]) = *($1)
	$8 = CALL $42(($3 + [168]), $5, [8844])
	if ( *($8 + [16]) ){ goto $label$8 }
	CALL $45($0, $1, $8)
	$4 = ($4 + [32])
	CALL $34($0, $4, $8, $4, [1])
	*((($3 + [128]) + [32])) = [0]
	*($3 + [144]) = (int_64)-1
	*($3 + [152]) = (int_64)0
	$7 = *($0)
	*($3 + [128]) = $7
	$6 = *($1)
	*($3 + [136]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)3607830987305648128, $6)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$10 }
	$9 = CALL $30(($3 + [128]), $4)
	if ( ((int_32)*($9 + [32]) == (int_32)($3 + [128])) ){ goto $label$9 }
	CALL eosio_assert([0], [12426])
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	CALL eosio_assert([0], [9068])
	CALL eosio_assert([0], [12946])
	CALL eosio_assert([0], [12980])
	
.LABEL $label$9
	$4 = [0]
	$2 = CALL db_next_i64(*($9 + [36]), ($3 + [88]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$11 }
	CALL $30(($3 + [128]), $2)
	
.LABEL $label$11
	CALL $46(($3 + [128]), $9)
	*((($3 + [88]) + [32])) = [0]
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	$6 = *($0)
	*($3 + [88]) = $6
	*($3 + [96]) = $6
	$9 = CALL db_find_i64($6, $6, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $47(($3 + [88]), $9)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [88])) ){ goto $label$12 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$12
	$9 = [0]
	*((($3 + [48]) + [32])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$6 = *($0)
	*($3 + [48]) = $6
	*($3 + [56]) = $6
	$1 = CALL db_find_i64($6, $6, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $48(($3 + [48]), $1)
	if ( ((int_32)*($9 + [40]) == (int_32)($3 + [48])) ){ goto $label$13 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$14 }
	$1 = CALL db_next_i64(*($4 + [44]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$15 }
	CALL $47(($3 + [88]), $1)
	
.LABEL $label$15
	CALL $49(($3 + [88]), $4)
	
.LABEL $label$14
	if ( ($9 == 0) ){ goto $label$16 }
	$4 = CALL db_next_i64(*($9 + [44]), ($3 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$17 }
	CALL $48(($3 + [48]), $4)
	
.LABEL $label$17
	CALL $50(($3 + [48]), $9)
	
.LABEL $label$16
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($6, $6, (int_64)-5003132314579369984, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$20 }
	$4 = CALL $51(($3 + [8]), $4)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [8])) ){ goto $label$21 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$21
	$6 = *($0)
	*($3 + [256]) = $8
	CALL $52(($3 + [8]), $4, $6, ($3 + [256]))
	$9 = *($3 + [32])
	if ( $9 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$7 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$22 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$22
	*(($4 = CALL $7([32])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = ($3 + [8])
	*($4 + [8]) = *(($8 + [8]))
	*($4) = *($8)
	CALL memcpy(($3 + [256]), $4, [8])
	*($3 + [280]) = *($4 + [8])
	CALL memcpy((($3 + [256]) | [8]), ($3 + [280]), [8])
	$6 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-5003132314579369984, $7, $6), ($3 + [256]), [16]
	*($4 + [20]) = $9)
	$8 = (($3 + [8]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$23 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$23
	*($3 + [280]) = $4
	$6 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [256]) = $6)
	*($3 + [252]) = $9
	$0 = ($3 + [36])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$26 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($3 + [280]) = [0]
	*($8) = $4
	*($0) = ($8 + [24])
	$4 = *($3 + [280])
	*($3 + [280]) = [0]
	if ( $4 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $53(($3 + [32]), ($3 + [280]), ($3 + [256]), ($3 + [252]))
	$4 = *($3 + [280])
	*($3 + [280]) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL $9($4)
	
.LABEL $label$24
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$0 = ($3 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$28 }
	
.LOOP $label$29:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$30 }
	CALL $9($8)
	
.LABEL $label$30
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$29 }
	$4 = *(($3 + [32]))
	goto $label$27 
	
.LABEL $label$28
	$4 = $9
	
.LABEL $label$27
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$18
	$9 = *($3 + [72])
	if ( ($9 == 0) ){ goto $label$31 }
	$0 = ($3 + [76])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$33 }
	
.LOOP $label$34:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$35 }
	CALL $9($8)
	
.LABEL $label$35
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$34 }
	$4 = *(($3 + [72]))
	goto $label$32 
	
.LABEL $label$33
	$4 = $9
	
.LABEL $label$32
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$31
	$9 = *($3 + [112])
	if ( ($9 == 0) ){ goto $label$36 }
	$0 = ($3 + [116])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$40 }
	CALL $9($8)
	
.LABEL $label$40
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($3 + [112]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $9
	
.LABEL $label$37
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$36
	$9 = *($3 + [152])
	if ( ($9 == 0) ){ goto $label$8 }
	$0 = ($3 + [156])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$42 }
	
.LOOP $label$43:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$44 }
	CALL $9($8)
	
.LABEL $label$44
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$43 }
	$4 = *(($3 + [152]))
	goto $label$41 
	
.LABEL $label$42
	$4 = $9
	
.LABEL $label$41
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$8
	$9 = *($3 + [192])
	if ( ($9 == 0) ){ goto $label$45 }
	$0 = ($3 + [196])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$47 }
	
.LOOP $label$48:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$49 }
	CALL $9($8)
	
.LABEL $label$49
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$48 }
	$4 = *(($3 + [192]))
	goto $label$46 
	
.LABEL $label$47
	$4 = $9
	
.LABEL $label$46
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$45
	$9 = *($3 + [232])
	if ( ($9 == 0) ){ goto $label$50 }
	$0 = ($3 + [236])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$52 }
	
.LOOP $label$53:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$54 }
	CALL $9($8)
	
.LABEL $label$54
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$53 }
	$4 = *(($3 + [232]))
	goto $label$51 
	
.LABEL $label$52
	$4 = $9
	
.LABEL $label$51
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$50
	$global$0 = ($3 + [288])
	return (unreachable)
	
.LABEL $label$6
	CALL eosio_assert([0], [8980])
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [164]) = $2
	*($3 + [160]) = $2
	$5 = ($2 + $4)
	*($3 + [168]) = $5
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$5 = *(($3 + [168]))
	$2 = *($3 + [164])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [144]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	$5 = *((($3 + [160]) + [8]))
	$2 = *($3 + [164])
	
.LABEL $label$6
	CALL memcpy(($3 + [144]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [136]) = (int_64)0
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	$5 = *(($3 + [168]))
	$2 = *($3 + [164])
	
.LABEL $label$7
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12941])
	$2 = *($3 + [164])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $2, [8])
	*((($3 + [128]) + [8])) = *($3 + [40])
	*($3 + [164]) = ($2 + [8])
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL $120(($3 + [160]), ($3 + [112]))
	$2 = *((($3 + [160]) + [8]))
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [160])
	*($3 + [8]) = $6
	*($3 + [24]) = $6
	CALL $55(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), ($3 + [152]), ($3 + [144]), ($3 + [128]), ($3 + [112]))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($3 + [120])))
	
.LABEL $label$9
	$global$0 = ($3 + [176])
}

void .FUNC $128 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $75(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $16 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $17 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	$4 = [0]
	*(($3 + [88])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$5 = *($0)
	*($3 + [56]) = $5
	*($3 + [64]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $48(($3 + [56]), $6)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10575])
	
.LABEL $label$1
	CALL require_auth(*($1))
	$5 = *($2 + [8])
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	*($3 + [16]) = *($0)
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($3 + [24]) = $5)
	$7 = CALL $56(($3 + [16]), $5, [10622])
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$5 }
	$5 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$9 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $9
	$6 = $0
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$5 = $9
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$0 < (int_32)[6])
	$10 = ($0 + [1])
	$0 = $10
	if ( $6 ){ goto $label$9 }
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$8 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [10016])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10038])
	
.LABEL $label$3
	if ( ((int_64)*($7 + [8]) != (int_64)*(($2 + [8]))) ){ goto $label$14 }
	if ( ((int_64)*($2) > (int_64)*($4 + [8])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [8502])
	if ( ((int_64)*($2) <= (int_64)*($4 + [8])) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [10716])
	$5 = *($1)
	*($3 + [8]) = $2
	if ( $4 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$5 = *($1)
	*($3 + [8]) = $2
	if ( $4 ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [13010])
	
.LABEL $label$10
	CALL $76(($3 + [56]), $4, $5, ($3 + [8]))
	if ( ((int_64)*(($4 + [16])) == (int_64)*(($4 + [32]))) ){ goto $label$15 }
	CALL eosio_assert([0], [12159])
	
.LABEL $label$15
	if ( ((int_64)*(($4 + [8])) > (int_64)*($4 + [24])) ){ goto $label$16 }
	$5 = *($1)
	if ( $4 ){ goto $label$17 }
	CALL eosio_assert([0], [13010])
	
.LABEL $label$17
	CALL $77(($3 + [56]), $4, $5)
	
.LABEL $label$16
	$10 = *($3 + [40])
	if ( ($10 == 0) ){ goto $label$18 }
	$4 = ($3 + [44])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$10) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$22 }
	CALL $9($6)
	
.LABEL $label$22
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($3 + [40]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $10
	
.LABEL $label$19
	*($4) = $10
	CALL $9($0)
	
.LABEL $label$18
	$10 = *($3 + [80])
	if ( ($10 == 0) ){ goto $label$23 }
	$4 = ($3 + [84])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$10) ){ goto $label$25 }
	
.LOOP $label$26:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$27 }
	CALL $9($6)
	
.LABEL $label$27
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$26 }
	$0 = *(($3 + [80]))
	goto $label$24 
	
.LABEL $label$25
	$0 = $10
	
.LABEL $label$24
	*($4) = $10
	CALL $9($0)
	
.LABEL $label$23
	$global$0 = ($3 + [96])
}

void .FUNC $18 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [48]) = ((int_64)*((*(($3 + [4])) + [24])) * (int_64)*(*($3)))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $60(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12793])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12838])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12888])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $53(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $52 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12756])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12775])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [20])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13045])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [13093])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [13115])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-15])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $39(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [24]), $2, $4, [17])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [32])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	$5 = ($global$0 - [112])
	$global$0 = $5
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$6 = *($0)
	*($5 + [8]) = $6
	$7 = *($1)
	*($5 + [16]) = $7
	$1 = CALL db_find_i64($6, $7, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$1) < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $37(($5 + [8]), $1)
	if ( ((int_32)*($1 + [20]) == (int_32)($5 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$4
	$6 = *($3)
	*($5 + [48]) = $2
	CALL $38(($5 + [8]), $1, $6, ($5 + [48]))
	$0 = *($5 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$7 = *($3)
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$5
	*(($1 = CALL $7([32])) + [20]) = ($5 + [8])
	*($1 + [16]) = $4
	*($1 + [8]) = *(($2 + [8]))
	*($1) = *($2)
	*($5 + [88]) = (($5 + [48]) + [17])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	*($5 + [96]) = ($5 + [80])
	*($5 + [108]) = ($1 + [16])
	*($5 + [104]) = $1
	CALL $39(($5 + [104]), ($5 + [96]))
	$6 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$0 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)3607749779137757184, $7, $6), ($5 + [48]), [17]
	*($1 + [24]) = $0)
	$2 = (($5 + [8]) + [16])
	if ( (uint_64)($6 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$6
	*($5 + [80]) = $1
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($5 + [48]) = $6)
	*($5 + [104]) = $0
	$3 = ($5 + [36])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $6
	*($2 + [16]) = $0
	*($5 + [80]) = [0]
	*($2) = $1
	*($3) = ($2 + [24])
	$1 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $40(($5 + [32]), ($5 + [80]), ($5 + [48]), ($5 + [104]))
	$1 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9($1)
	
.LABEL $label$7
	$0 = *($5 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$12 }
	$1 = *(($5 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$1 = $0
	
.LABEL $label$10
	*($3) = $0
	CALL $9($1)
	
.LABEL $label$1
	$global$0 = ($5 + [112])
}

int_32 .FUNC $56 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $23($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [48]) = *($1 + [24])
	*($1 + [40]) = ((int_64)*($1 + [8]) + (int_64)*($1 + [16]))
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [24])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [48])
	CALL $60(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [64])
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $117 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $22(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $120(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [12002])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [12107])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [12040])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [12107])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $112 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = (($4 + [48]) + [8]))) = *(($3 + [8]))
	*($4 + [48]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [64]) + [8])) = $3
	$2 = *($4 + [48])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [64]) = $2
	*($4 + [40]) = [12287]
	*($4 + [44]) = CALL $15([12287])
	*($4 + [16]) = *($4 + [40])
	CALL $35(($0 + [32]), ($4 + [16]))
	$3 = CALL $15([12294])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [12328])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [12293]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [12373])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*(($0 + [40])) = $2
	$3 = CALL $15([12298])
	if ( ($3 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [12328])
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$2 = (int_64)0
	
.LOOP $label$11:
	$5 = *(($3 + [12297]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [12373])
	
.LABEL $label$12
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$11 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$7 
	
.LABEL $label$8
	$2 = (int_64)4
	
.LABEL $label$7
	*(($0 + [48])) = $2
	*($4 + [32]) = [12302]
	*($4 + [36]) = CALL $15([12302])
	*($4 + [8]) = *($4 + [32])
	CALL $35(($0 + [56]), ($4 + [8]))
	*($4 + [24]) = [12315]
	*($4 + [28]) = CALL $15([12315])
	*($4) = *($4 + [24])
	CALL $35(($0 + [64]), $4)
	$global$0 = ($4 + [80])
	return $0
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $120(*($1), ($0 + [24]))
	$0 = ($0 + [40])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $110 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $7)
	*($4 + [168]) = ($4 + [112])
	*($4 + [40]) = ($4 + [128])
	CALL $115(($4 + [40]), ($4 + [168]))
	$3 = *($4 + [120])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [112])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [144])
	$1 = *($4 + [128])
	*($4 + [160]) = *($4 + [136])
	*($4 + [168]) = $1
	*($4 + [152]) = $0
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($4 + [168])), (int_32 ($4 + [160])), (int_32 ($4 + [152])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return [1]
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $26(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $119 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [164]) = $2
	*($3 + [160]) = $2
	$5 = ($2 + $4)
	*($3 + [168]) = $5
	*($3 + [152]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$5 = *(($3 + [168]))
	$2 = *($3 + [164])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [144]) = (int_64)0
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	$5 = *((($3 + [160]) + [8]))
	$2 = *($3 + [164])
	
.LABEL $label$6
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [164]) = $2
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	$2 = *($3 + [164])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $2, [8])
	*((($3 + [136]) + [8])) = *($3 + [40])
	*($3 + [164]) = ($2 + [8])
	*($3 + [128]) = [0]
	*($3 + [120]) = (int_64)0
	CALL $120(($3 + [160]), ($3 + [120]))
	$2 = *($3 + [164])
	$4 = (($3 + [160]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12941])
	$2 = *($3 + [164])
	
.LABEL $label$8
	CALL memcpy(($3 + [112]), $2, [8])
	*($3 + [164]) = (*($3 + [164]) + [8])
	$2 = *($4)
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [160])
	*($3 + [8]) = $6
	*($3 + [24]) = $6
	CALL $28(CALL $112(($3 + [40]), $0, $1, ($3 + [8])), ($3 + [152]), ($3 + [136]), ($3 + [120]), *($3 + [112]))
	if ( ((*($3 + [120]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($3 + [128])))
	
.LABEL $label$9
	$global$0 = ($3 + [176])
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *(*($0))
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *(*($0) + [4])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([72])) + [56]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	CALL $139(($3 + [32]), ($3 + [24]))
	*($5 + [60]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $91(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [240])
	$global$0 = $5
	$6 = [0]
	$7 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $7)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$8 = $9
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$7 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8528])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8548])
	
.LABEL $label$1
	$12 = [0]
	*(($5 + [152])) = [0]
	*($5 + [136]) = (int_64)-1
	*($5 + [144]) = (int_64)0
	$8 = *($0)
	*($5 + [120]) = $8
	*($5 + [128]) = $7
	$6 = CALL db_find_i64($8, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$12 = CALL $23(($5 + [120]), $6)
	if ( ((int_32)*($12 + [40]) == (int_32)($5 + [120])) ){ goto $label$8 }
	CALL eosio_assert([0], [12426])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8586])
	
.LABEL $label$8
	CALL require_auth(*($12 + [32]))
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$12 }
	$8 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$8 = $9
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$16 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_64)$7 <= (int_64)0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8671])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [8694])
	
.LABEL $label$10
	if ( ((int_64)*($12 + [8]) == (int_64)*(($2 + [8]))) ){ goto $label$17 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$17
	if ( ((int_64))(*($12 + [16]) - *($12)) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [8726])
	
.LABEL $label$18
	*(($5 + [112])) = [0]
	*($5 + [96]) = (int_64)-1
	*($5 + [104]) = (int_64)0
	$8 = *($0)
	*($5 + [80]) = $8
	*($5 + [88]) = $8
	$6 = CALL db_find_i64($8, $8, (int_64)-3776976373038448640, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$20 }
	if ( ((int_32)*(CALL $29(($5 + [80]), $6) + [56]) == (int_32)($5 + [80])) ){ goto $label$19 }
	CALL eosio_assert([0], [12426])
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [8776])
	
.LABEL $label$19
	*((($5 + [40]) + [32])) = [0]
	*($5 + [56]) = (int_64)-1
	*($5 + [64]) = (int_64)0
	$9 = *($0)
	*($5 + [40]) = $9
	$8 = *($1)
	*($5 + [48]) = $8
	$6 = CALL db_find_i64($9, $8, (int_64)3607830987305648128, $8)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$22 }
	if ( ((int_32)*(CALL $30(($5 + [40]), $6) + [32]) == (int_32)($5 + [40])) ){ goto $label$21 }
	CALL eosio_assert([0], [12426])
	goto $label$21 
	
.LABEL $label$22
	$9 = *(($12 + [32]))
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [40])) ){ goto $label$23 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$23
	*(($6 = CALL $7([48])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [32]) = ($5 + [40])
	*($6 + [24]) = $4
	*($6) = *($1)
	*($6 + [8]) = *($2)
	*($6 + [16]) = *(($2 + [8]))
	*($5 + [208]) = (($5 + [160]) + [32])
	*($5 + [204]) = ($5 + [160])
	*($5 + [200]) = ($5 + [160])
	*($5 + [216]) = ($5 + [200])
	*($5 + [228]) = ($6 + [8])
	*($5 + [224]) = $6
	*($5 + [232]) = ($6 + [24])
	CALL $31(($5 + [224]), ($5 + [216]))
	$8 = *($6)
	$11 = CALL db_store_i64(*((($5 + [40]) + [8])), (int_64)3607830987305648128, $9, $8, ($5 + [160]), [32])
	*($6 + [36]) = $11
	$10 = ($5 + [56])
	if ( (uint_64)($8 <= *($10)) ){ goto $label$24 }
	*($10) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	*($5 + [224]) = $6
	$8 = *($6)
	*($5 + [160]) = $8
	*($5 + [200]) = $11
	$13 = ($5 + [68])
	$10 = *($13)
	if ( ((uint_32)$10 >= (uint_32)*((($5 + [40]) + [32]))) ){ goto $label$26 }
	*($10 + [8]) = $8
	*($10 + [16]) = $11
	*($5 + [224]) = [0]
	*($10) = $6
	*($13) = ($10 + [24])
	$6 = *($5 + [224])
	*($5 + [224]) = [0]
	if ( $6 ){ goto $label$25 }
	goto $label$21 
	
.LABEL $label$26
	CALL $32(($5 + [64]), ($5 + [224]), ($5 + [160]), ($5 + [200]))
	$6 = *($5 + [224])
	*($5 + [224]) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$25
	CALL $9($6)
	
.LABEL $label$21
	$8 = *($0)
	*($5 + [160]) = $2
	CALL $33(($5 + [120]), $12, $8, ($5 + [160]))
	$6 = ($12 + [32])
	CALL $34($0, $6, $2, $6, [1])
	$8 = *($12 + [32])
	if ( ((int_64)*($1) == (int_64)$8) ){ goto $label$27 }
	$9 = *($0)
	*($5 + [24]) = [8837]
	*($5 + [28]) = CALL $15([8837])
	*($5 + [16]) = *($5 + [24])
	$7 = *(CALL $35(($5 + [32]), ($5 + [16])))
	*(($10 = CALL $7([16]))) = $8
	*($10 + [8]) = $7
	*($5 + [172]) = $3
	*($5 + [168]) = $2
	*(($5 + [8])) = *($5 + [168])
	*($5 + [160]) = $6
	*($5 + [164]) = $1
	*($5 + [224]) = $10
	$6 = ($10 + [16])
	*($5 + [232]) = $6
	*($5 + [228]) = $6
	*($5) = *($5 + [160])
	CALL $36($9, (int_64)-3617168760277827584, ($5 + [224]), $5)
	$6 = *($5 + [224])
	if ( ($6 == 0) ){ goto $label$27 }
	*($5 + [228]) = $6
	CALL $9($6)
	
.LABEL $label$27
	$11 = *($5 + [64])
	if ( ($11 == 0) ){ goto $label$28 }
	$2 = ($5 + [68])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$30 }
	
.LOOP $label$31:
	$6 = ($6 + [-24])
	$10 = *($6)
	*($6) = [0]
	if ( ($10 == 0) ){ goto $label$32 }
	CALL $9($10)
	
.LABEL $label$32
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$31 }
	$6 = *(($5 + [64]))
	goto $label$29 
	
.LABEL $label$30
	$6 = $11
	
.LABEL $label$29
	*($2) = $11
	CALL $9($6)
	
.LABEL $label$28
	$11 = *($5 + [104])
	if ( ($11 == 0) ){ goto $label$33 }
	$2 = ($5 + [108])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$35 }
	
.LOOP $label$36:
	$6 = ($6 + [-24])
	$10 = *($6)
	*($6) = [0]
	if ( ($10 == 0) ){ goto $label$37 }
	CALL $9($10)
	
.LABEL $label$37
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$36 }
	$6 = *(($5 + [104]))
	goto $label$34 
	
.LABEL $label$35
	$6 = $11
	
.LABEL $label$34
	*($2) = $11
	CALL $9($6)
	
.LABEL $label$33
	$11 = *($5 + [144])
	if ( ($11 == 0) ){ goto $label$38 }
	$2 = ($5 + [148])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$40 }
	
.LOOP $label$41:
	$6 = ($6 + [-24])
	$10 = *($6)
	*($6) = [0]
	if ( ($10 == 0) ){ goto $label$42 }
	CALL $9($10)
	
.LABEL $label$42
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$41 }
	$6 = *(($5 + [144]))
	goto $label$39 
	
.LABEL $label$40
	$6 = $11
	
.LABEL $label$39
	*($2) = $11
	CALL $9($6)
	
.LABEL $label$38
	$global$0 = ($5 + [240])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$5 = ($global$0 - [240])
	$global$0 = $5
	CALL require_auth(*($1))
	$6 = *($2)
	if ( ((int_64)*($1) != (int_64)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9102])
	$6 = *($2)
	
.LABEL $label$1
	if ( CALL is_account($6) ){ goto $label$2 }
	CALL eosio_assert([0], [9127])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [232])) = [0]
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [208]) = $7)
	*($5 + [216]) = (int_64)-1
	*($5 + [224]) = (int_64)0
	*($5 + [200]) = *($0)
	$8 = CALL $56(($5 + [200]), $7, [9154])
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$11 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$6 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$6 = $11
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$15 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$12 }
	
.LABEL $label$13
	$14 = ($3 + [8])
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [8671])
	$14 = ($3 + [8])
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [8694])
	if ( ((int_64)*($8 + [8]) == (int_64)*($14)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)*($8 + [8]) != (int_64)*($14)) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8502])
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($4 + [4]) <= [257]) ){ goto $label$5 }
	CALL eosio_assert([0], [8548])
	$6 = *($1)
	if ( ((int_64)$6 != (int_64)*($8 + [32])) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)*($8 + [32])) ){ goto $label$3 }
	
.LABEL $label$4
	$15 = [0]
	*((($5 + [160]) + [32])) = [0]
	*($5 + [168]) = $6
	*($5 + [176]) = (int_64)-1
	*($5 + [184]) = (int_64)0
	$11 = *($0)
	*($5 + [160]) = $11
	*((($5 + [120]) + [32])) = [0]
	*($5 + [128]) = $11
	*($5 + [120]) = $11
	*($5 + [136]) = (int_64)-1
	*($5 + [144]) = (int_64)0
	*((($5 + [80]) + [32])) = [0]
	*($5 + [88]) = $6
	*($5 + [80]) = $11
	*($5 + [96]) = (int_64)-1
	*($5 + [104]) = (int_64)0
	$10 = CALL db_find_i64($11, $6, (int_64)3607749779137757184, $7)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$17 }
	$15 = CALL $37(($5 + [160]), $10)
	if ( ((int_32)*($15 + [20]) == (int_32)($5 + [160])) ){ goto $label$16 }
	CALL eosio_assert([0], [12426])
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [9244])
	
.LABEL $label$16
	$6 = *($1)
	$12 = *(($5 + [108]))
	$4 = *(($5 + [104]))
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$20 }
	
.LOOP $label$22:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( ((int_64)*($13) == (int_64)$6) ){ goto $label$21 }
	$12 = $10
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$20 }
	if ( ((int_32)*($13 + [32]) == (int_32)($5 + [80])) ){ goto $label$19 }
	CALL eosio_assert([0], [12426])
	goto $label$19 
	
.LABEL $label$20
	$10 = CALL db_find_i64(*($5 + [80]), *(($5 + [88])), (int_64)3607830987305648128, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$18 }
	$13 = CALL $30(($5 + [80]), $10)
	if ( ((int_32)*($13 + [32]) == (int_32)($5 + [80])) ){ goto $label$19 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$19
	$6 = *($13 + [24])
	$12 = *(($5 + [148]))
	$16 = *(($5 + [144]))
	if ( ((int_32)$16 == (int_32)$12) ){ goto $label$27 }
	
.LOOP $label$29:
	$10 = ($12 + [-24])
	$4 = *($10)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$28 }
	$12 = $10
	if ( ((int_32)$16 != (int_32)$10) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	if ( ((int_32)$16 == (int_32)$12) ){ goto $label$27 }
	if ( ((int_32)*($4 + [56]) == (int_32)($5 + [120])) ){ goto $label$26 }
	CALL eosio_assert([0], [12426])
	if ( ((uint_64)*($4 + [48]) <= (uint_64)(int_64)99) ){ goto $label$25 }
	goto $label$18 
	
.LABEL $label$27
	$10 = CALL db_find_i64(*($5 + [120]), *(($5 + [128])), (int_64)-3776976373038448640, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$24 }
	$4 = CALL $29(($5 + [120]), $10)
	if ( ((int_32)*($4 + [56]) == (int_32)($5 + [120])) ){ goto $label$26 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$26
	if ( ((uint_64)*($4 + [48]) > (uint_64)(int_64)99) ){ goto $label$18 }
	
.LABEL $label$25
	$11 = CALL $17()
	CALL $57(($5 + [120]), $4, *($0))
	$11 = ((int_64)((int_64)$11 / (int_64)1000000) & (int_64)4294967295)
	$6 = *($4 + [40])
	if ( (uint_64)($6 <= $11) ){ goto $label$30 }
	CALL eosio_assert([0], [9343])
	$6 = *(($4 + [40]))
	
.LABEL $label$30
	$7 = *($4 + [32])
	if ( ((uint_64)((int_64)$7 + (int_64)$6) >= (uint_64)$11) ){ goto $label$31 }
	$6 = ((int_64)((uint_64)(int_64))($11 - $6) / (uint_64)$7) + (int_64)1
	*($5 + [40]) = $6)
	if ( ((uint_64)$6 > (uint_64)(int_64)1) ){ goto $label$32 }
	CALL eosio_assert([0], [9441])
	
.LABEL $label$32
	$6 = *($0)
	*($5 + [4]) = $4
	*($5) = ($5 + [40])
	CALL $58(($5 + [120]), $4, $6, $5)
	
.LABEL $label$31
	$6 = *(($4 + [48]))
	if ( ((uint_64)$6 > (uint_64)(int_64)99) ){ goto $label$23 }
	if ( ((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 (int_64))((int_64)100 - $6)) / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 *($13 + [8]))) < (float_64)(CASTING float_64)(int_64 (int_64))(*($15) - *($3)))) ){ goto $label$18 }
	CALL eosio_assert([0], [9517])
	goto $label$18 
	
.LABEL $label$24
	$10 = CALL db_next_i64(*($13 + [36]), ($5 + [40]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$33 }
	CALL $30(($5 + [80]), $10)
	
.LABEL $label$33
	CALL $46(($5 + [80]), $13)
	goto $label$18 
	
.LABEL $label$23
	$10 = CALL db_next_i64(*($4 + [60]), ($5 + [40]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$34 }
	CALL $29(($5 + [120]), $10)
	
.LABEL $label$34
	CALL $59(($5 + [120]), $4)
	$10 = CALL db_next_i64(*($13 + [36]), ($5 + [40]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$35 }
	CALL $30(($5 + [80]), $10)
	
.LABEL $label$35
	CALL $46(($5 + [80]), $13)
	
.LABEL $label$18
	$10 = [0]
	*((($5 + [40]) + [32])) = [0]
	*($5 + [56]) = (int_64)-1
	*($5 + [64]) = (int_64)0
	$6 = *($0)
	*($5 + [40]) = $6
	*($5 + [48]) = $6
	$12 = [0]
	$13 = CALL db_find_i64($6, $6, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$36 }
	$12 = CALL $47(($5 + [40]), $13)
	if ( ((int_32)*($12 + [40]) == (int_32)($5 + [40])) ){ goto $label$36 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$36
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = (int_64)0
	$6 = *($0)
	*($5) = $6
	*($5 + [8]) = $6
	$13 = CALL db_find_i64($6, $6, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$37 }
	$10 = CALL $48($5, $13)
	if ( ((int_32)*($10 + [40]) == (int_32)$5) ){ goto $label$37 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$37
	if ( ($12 == 0) ){ goto $label$42 }
	$6 = *($12 + [8])
	$11 = *($15)
	if ( ($10 == 0) ){ goto $label$41 }
	if ( ((int_64))((int_64))($11 - $6) - *($10 + [8])) >= (int_64)*($3)) ){ goto $label$40 }
	CALL eosio_assert([0], [9590])
	$13 = *($5 + [24])
	if ( $13 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$42
	if ( ($10 == 0) ){ goto $label$40 }
	if ( ((int_64))(*($15) - *($10 + [8])) >= (int_64)*($3)) ){ goto $label$40 }
	CALL eosio_assert([0], [9724])
	$13 = *($5 + [24])
	if ( $13 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	if ( ((int_64))($11 - $6) >= (int_64)*($3)) ){ goto $label$40 }
	CALL eosio_assert([0], [9660])
	
.LABEL $label$40
	$13 = *($5 + [24])
	if ( ($13 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	$4 = ($5 + [28])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$44 }
	
.LOOP $label$45:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$46 }
	CALL $9($12)
	
.LABEL $label$46
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$45 }
	$10 = *(($5 + [24]))
	goto $label$43 
	
.LABEL $label$44
	$10 = $13
	
.LABEL $label$43
	*($4) = $13
	CALL $9($10)
	
.LABEL $label$38
	$13 = *($5 + [64])
	if ( ($13 == 0) ){ goto $label$47 }
	$4 = ($5 + [68])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$49 }
	
.LOOP $label$50:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$51 }
	CALL $9($12)
	
.LABEL $label$51
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$50 }
	$10 = *(($5 + [64]))
	goto $label$48 
	
.LABEL $label$49
	$10 = $13
	
.LABEL $label$48
	*($4) = $13
	CALL $9($10)
	
.LABEL $label$47
	$13 = *($5 + [104])
	if ( ($13 == 0) ){ goto $label$52 }
	$4 = ($5 + [108])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$54 }
	
.LOOP $label$55:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$56 }
	CALL $9($12)
	
.LABEL $label$56
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$55 }
	$10 = *(($5 + [104]))
	goto $label$53 
	
.LABEL $label$54
	$10 = $13
	
.LABEL $label$53
	*($4) = $13
	CALL $9($10)
	
.LABEL $label$52
	$13 = *($5 + [144])
	if ( ($13 == 0) ){ goto $label$57 }
	$4 = ($5 + [148])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$59 }
	
.LOOP $label$60:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$61 }
	CALL $9($12)
	
.LABEL $label$61
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$60 }
	$10 = *(($5 + [144]))
	goto $label$58 
	
.LABEL $label$59
	$10 = $13
	
.LABEL $label$58
	*($4) = $13
	CALL $9($10)
	
.LABEL $label$57
	$13 = *($5 + [184])
	if ( ($13 == 0) ){ goto $label$62 }
	$4 = ($5 + [188])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$64 }
	
.LOOP $label$65:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$66 }
	CALL $9($12)
	
.LABEL $label$66
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$65 }
	$10 = *(($5 + [184]))
	goto $label$63 
	
.LABEL $label$64
	$10 = $13
	
.LABEL $label$63
	*($4) = $13
	CALL $9($10)
	
.LABEL $label$62
	$6 = *($1)
	
.LABEL $label$3
	CALL require_recipient($6)
	CALL require_recipient(*($2))
	CALL $41($0, $1, $14)
	CALL $45($0, $1, $3)
	CALL $34($0, $2, $3, $1, ((int_64)*($1) != (int_64)*(($8 + [32]))))
	$13 = *($5 + [224])
	if ( ($13 == 0) ){ goto $label$67 }
	$1 = ($5 + [228])
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$69 }
	
.LOOP $label$70:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$71 }
	CALL $9($12)
	
.LABEL $label$71
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$70 }
	$10 = *(($5 + [224]))
	goto $label$68 
	
.LABEL $label$69
	$10 = $13
	
.LABEL $label$68
	*($1) = $13
	CALL $9($10)
	
.LABEL $label$67
	$global$0 = ($5 + [240])
}

int_32 .FUNC $107 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [152]))) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $7)
	*($4 + [208]) = ($4 + [112])
	*($4 + [40]) = ($4 + [128])
	CALL $114(($4 + [40]), ($4 + [208]))
	$8 = *($4 + [120])
	*((($4 + [24]) + [8])) = $8
	*((($4 + [8]) + [8])) = $8
	$9 = *($4 + [112])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	*(($8 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4 + [144])
	$0 = *($4 + [136])
	$1 = *($4 + [128])
	$3 = CALL $19(($4 + [176]), ($4 + [160]))
	*((($4 + [208]) + [8])) = *($8)
	*($4 + [232]) = $1
	*($4 + [224]) = $0
	*($4 + [208]) = *($4 + [192])
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($8) + $6))
	
.LABEL $label$4
	CALL void $8((int_32 ($4 + [232])), (int_32 ($4 + [224])), (int_32 ($4 + [208])), (int_32 $3), (int_32 $6))
	if ( (*($4 + [176]) & [1]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($3 + [8]))
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [160]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [240])
	return $2
	
.LABEL $label$5
	CALL $9(*(($4 + [168])))
	$global$0 = ($4 + [240])
	return $2
}

int_32 .FUNC $106 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [128]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [108]) = $2
	*($4 + [104]) = $2
	*($4 + [112]) = ($2 + $7)
	*($4 + [152]) = ($4 + [104])
	*($4 + [32]) = ($4 + [120])
	CALL $116(($4 + [32]), ($4 + [152]))
	$3 = *($4 + [112])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [104])
	*($4) = $8
	*($4 + [16]) = $8
	CALL $112(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [144])
	$1 = *($4 + [136])
	$8 = *($4 + [128])
	$9 = *($4 + [120])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $8), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

void .FUNC $21 (int_32 $0)
{
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $138(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $25(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$6 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$10 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8277])
	$10 = *($2)
	
.LABEL $label$6
	if ( ((int_64)$10 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8292])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $23(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$13
	CALL eosio_assert([0], [8324])
	
.LABEL $label$12
	$7 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$14
	*(($4 = CALL $7([56])) + [16]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	$6 = *(($2 + [8]))
	*($4 + [8]) = $6
	*($4 + [16]) = *($2)
	*($4 + [24]) = $6
	*($4 + [32]) = *($1)
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $24(($3 + [112]), ($3 + [104]))
	$6 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $7, $6), ($3 + [48]), [40]
	*($4 + [44]) = $9)
	$8 = (($3 + [8]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$15 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$15
	*($3 + [112]) = $4
	$6 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $6)
	*($3 + [88]) = $9
	$2 = ($3 + [36])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($3 + [112]) = [0]
	*($8) = $4
	*($2) = ($8 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $25(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9($4)
	
.LABEL $label$16
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	CALL $9($8)
	
.LABEL $label$23
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $9
	
.LABEL $label$20
	*($2) = $9
	CALL $9($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $27 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($3)
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [32]) = *(*($3 + [4]))
	$7 = *($1 + [8])
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [16])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [32])
	CALL $24(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	$2 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$6 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$10 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8277])
	$10 = *($2)
	
.LABEL $label$6
	if ( ((int_64)$10 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8292])
	
.LABEL $label$11
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $5
	$8 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$4 = CALL $23(($3 + [8]), $8)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [8])) ){ goto $label$15 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$15
	if ( ((int_64)*($4) <= (int_64)*($2)) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [8360])
	if ( ((int_64)*([0]) <= (int_64)*($2)) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [8446])
	
.LABEL $label$12
	if ( ((int_64)*($4 + [8]) == (int_64)*(($2 + [8]))) ){ goto $label$16 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$16
	$6 = *($0)
	*($3 + [4]) = $1
	*($3) = $2
	CALL $27(($3 + [8]), $4, $6, $3)
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$17 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $9($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($2) = $9
	CALL $9($4)
	
.LABEL $label$17
	$global$0 = ($3 + [48])
}

int_32 .FUNC $109 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [112]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($4 + [112]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	*($4 + [120]) = *($4 + [112])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($4 + [120])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $135 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [104])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [104])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12941])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [8])) = $6
	*($3 + [20]) = ($2 + [8])
	*($3 + [16]) = $2
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	CALL $94(CALL $112(($3 + [32]), $0, $1, $3), *($3 + [104]))
	$global$0 = ($3 + [112])
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [288])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*((($3 + [168]) + [32])) = [0]
	*($3 + [184]) = (int_64)-1
	*($3 + [192]) = (int_64)0
	$5 = *($0)
	*($3 + [168]) = $5
	*($3 + [176]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $47(($3 + [168]), $7)
	if ( ((int_32)*($6 + [40]) == (int_32)($3 + [168])) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$1
	*((($3 + [128]) + [32])) = [0]
	*($3 + [144]) = (int_64)-1
	*($3 + [152]) = (int_64)0
	$5 = *($0)
	*($3 + [128]) = $5
	*($3 + [136]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $48(($3 + [128]), $7)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [128])) ){ goto $label$2 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$2
	$5 = *($2 + [8])
	*(($3 + [120])) = [0]
	$8 = (uint_64)$5 >> (uint_64)(int_64)8
	*($3 + [96]) = $8)
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	*($3 + [88]) = *($0)
	$9 = CALL $56(($3 + [88]), $8, [10363])
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$5 }
	$5 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $11
	$12 = $7
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$5 = $11
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$9 }
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [10016])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10038])
	
.LABEL $label$3
	if ( ((int_64)*($9 + [8]) == (int_64)*(($2 + [8]))) ){ goto $label$10 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$10
	$7 = [0]
	*(($3 + [80])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	$11 = *($1)
	*($3 + [56]) = $11
	$12 = CALL db_find_i64($5, $11, (int_64)3607749779137757184, $8)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$12 }
	$7 = CALL $37(($3 + [48]), $12)
	if ( ((int_32)*($7 + [20]) == (int_32)($3 + [48])) ){ goto $label$11 }
	CALL eosio_assert([0], [12426])
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [10069])
	
.LABEL $label$11
	$12 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $5
	*($3 + [32]) = (int_64)0
	$13 = CALL db_lowerbound_i64($5, $5, (int_64)-3772701863208550400, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$21 }
	$12 = CALL $70(($3 + [8]), $13)
	$5 = *($6 + [8])
	$11 = *($7)
	if ( ($4 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [10448])
	$5 = *($6 + [8])
	$11 = *($7)
	if ( $4 ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((int_64))($11 - $5) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [10519])
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_64))((int_64))($11 - $5) - *($4 + [8])) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [10301])
	$5 = *($0)
	if ( $6 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$5 = *($0)
	if ( ($6 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*($3 + [208]) = $2
	CALL $71(($3 + [168]), $6, $5, ($3 + [208]))
	if ( ((uint_64)((int_64)*($12) + (int_64)2591950) > (uint_64)((int_64)((int_64)CALL $17() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$15 }
	CALL $72(($3 + [168]), $6, *($0))
	$13 = *($3 + [32])
	if ( $13 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [168])) ){ goto $label$22 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$22
	*(($7 = CALL $7([56])) + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	*($7 + [40]) = ($3 + [168])
	*($7) = *($1)
	$11 = *($2)
	*($7 + [8]) = $11
	$8 = *(($2 + [8]))
	*($7 + [16]) = $8
	*($7 + [24]) = $11
	*($7 + [32]) = $8
	*($3 + [256]) = (($3 + [208]) + [40])
	*($3 + [252]) = ($3 + [208])
	*($3 + [248]) = ($3 + [208])
	*($3 + [264]) = ($3 + [248])
	*($3 + [276]) = ($7 + [8])
	*($3 + [272]) = $7
	*($3 + [280]) = ($7 + [24])
	CALL $73(($3 + [272]), ($3 + [264]))
	$11 = *($7)
	$13 = CALL db_store_i64(*((($3 + [168]) + [8])), (int_64)3607819369725935616, $5, $11, ($3 + [208]), [40])
	*($7 + [44]) = $13
	$12 = ($3 + [184])
	if ( (uint_64)($11 <= *($12)) ){ goto $label$23 }
	*($12) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	*($3 + [272]) = $7
	$5 = *($7)
	*($3 + [208]) = $5
	*($3 + [248]) = $13
	$0 = ($3 + [196])
	$12 = *($0)
	if ( ((uint_32)$12 >= (uint_32)*(($3 + [200]))) ){ goto $label$25 }
	*($12 + [8]) = $5
	*($12 + [16]) = $13
	*($3 + [272]) = [0]
	*($12) = $7
	*($0) = ($12 + [24])
	$7 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( $7 ){ goto $label$24 }
	goto $label$15 
	
.LABEL $label$25
	CALL $74(($3 + [192]), ($3 + [272]), ($3 + [208]), ($3 + [248]))
	$7 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$24
	CALL $9($7)
	
.LABEL $label$15
	$13 = *($3 + [32])
	if ( ($13 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$0 = ($3 + [36])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$27 }
	
.LOOP $label$28:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$29 }
	CALL $9($12)
	
.LABEL $label$29
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$28 }
	$7 = *(($3 + [32]))
	goto $label$26 
	
.LABEL $label$27
	$7 = $13
	
.LABEL $label$26
	*($0) = $13
	CALL $9($7)
	
.LABEL $label$13
	$13 = *($3 + [72])
	if ( ($13 == 0) ){ goto $label$30 }
	$0 = ($3 + [76])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$32 }
	
.LOOP $label$33:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$34 }
	CALL $9($12)
	
.LABEL $label$34
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$33 }
	$7 = *(($3 + [72]))
	goto $label$31 
	
.LABEL $label$32
	$7 = $13
	
.LABEL $label$31
	*($0) = $13
	CALL $9($7)
	
.LABEL $label$30
	$13 = *($3 + [112])
	if ( ($13 == 0) ){ goto $label$35 }
	$0 = ($3 + [116])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$37 }
	
.LOOP $label$38:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$39 }
	CALL $9($12)
	
.LABEL $label$39
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$38 }
	$7 = *(($3 + [112]))
	goto $label$36 
	
.LABEL $label$37
	$7 = $13
	
.LABEL $label$36
	*($0) = $13
	CALL $9($7)
	
.LABEL $label$35
	$13 = *($3 + [152])
	if ( ($13 == 0) ){ goto $label$40 }
	$0 = ($3 + [156])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$42 }
	
.LOOP $label$43:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$44 }
	CALL $9($12)
	
.LABEL $label$44
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$43 }
	$7 = *(($3 + [152]))
	goto $label$41 
	
.LABEL $label$42
	$7 = $13
	
.LABEL $label$41
	*($0) = $13
	CALL $9($7)
	
.LABEL $label$40
	$13 = *($3 + [192])
	if ( ($13 == 0) ){ goto $label$45 }
	$0 = ($3 + [196])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$47 }
	
.LOOP $label$48:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$49 }
	CALL $9($12)
	
.LABEL $label$49
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$48 }
	$7 = *(($3 + [192]))
	goto $label$46 
	
.LABEL $label$47
	$7 = $13
	
.LABEL $label$46
	*($0) = $13
	CALL $9($7)
	
.LABEL $label$45
	$global$0 = ($3 + [288])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $108 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [104]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($4 + [104]), $2, [8])
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [8])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	CALL $112(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [104])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	$global$0 = ($4 + [112])
	return [1]
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$5 = *($1)
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$6 = ((int_64)*($1 + [8]) + (int_64)*($2))
	*($1 + [8]) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [12756])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12775])
	if ( ((int_64)$5 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12654])
	
.LABEL $label$4
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	*($4 + [40]) = ($1 + [24])
	CALL $67(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $100(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [24]) = *($1 + [8])
	*(($1 + [32])) = *(($1 + [16]))
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($5 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [24])
	CALL $67(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [40])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth(*($3))
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9795])
	
.LABEL $label$1
	$5 = *($2)
	*(($4 + [80])) = [0]
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($4 + [56]) = $5)
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$6 = *($0)
	*($4 + [48]) = $6
	$7 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $23(($4 + [48]), $7)
	if ( ((int_32)*($7 + [40]) == (int_32)($4 + [48])) ){ goto $label$3 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$3
	if ( ((int_64)*($7 + [8]) == (int_64)*($2)) ){ goto $label$4 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($0)
	*($4 + [8]) = $6
	$8 = *($1)
	*($4 + [16]) = $8
	$0 = CALL db_find_i64($6, $8, (int_64)3607749779137757184, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $37(($4 + [8]), $0) + [20]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [12426])
	$1 = *($4 + [32])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = *($3)
	*($4) = $2
	*($4 + [120]) = $5
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$9
	*($4 + [100]) = $4
	*($4 + [96]) = ($4 + [8])
	*($4 + [104]) = ($4 + [120])
	*(($2 = CALL $7([32])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = [0]
	*($2 + [20]) = ($4 + [8])
	CALL $62(($4 + [96]), $2)
	*($4 + [112]) = $2
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($4 + [96]) = $5)
	$1 = *($2 + [24])
	*($4 + [92]) = $1
	$3 = ($4 + [36])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*((($4 + [8]) + [32]))) ){ goto $label$11 }
	*($0 + [8]) = $5
	*($0 + [16]) = $1
	*($4 + [112]) = [0]
	*($0) = $2
	*($3) = ($0 + [24])
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( $2 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$11
	CALL $40(($4 + [32]), ($4 + [112]), ($4 + [96]), ($4 + [92]))
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	CALL $9($2)
	
.LABEL $label$7
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($4 + [36])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $9($0)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($4 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $9($2)
	
.LABEL $label$5
	$1 = *($4 + [72])
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($4 + [76])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$20 }
	CALL $9($0)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$19 }
	$2 = *(($4 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$2 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $9($2)
	
.LABEL $label$16
	$global$0 = ($4 + [128])
	return (unreachable)
	
.LABEL $label$2
	CALL eosio_assert([0], [9824])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12551])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12551])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [288])
	$global$0 = $3
	CALL require_auth(*($1))
	$4 = [0]
	*((($3 + [168]) + [32])) = [0]
	*($3 + [184]) = (int_64)-1
	*($3 + [192]) = (int_64)0
	$5 = *($0)
	*($3 + [168]) = $5
	*($3 + [176]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $47(($3 + [168]), $7)
	if ( ((int_32)*($6 + [40]) == (int_32)($3 + [168])) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$1
	*((($3 + [128]) + [32])) = [0]
	*($3 + [144]) = (int_64)-1
	*($3 + [152]) = (int_64)0
	$5 = *($0)
	*($3 + [128]) = $5
	*($3 + [136]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $48(($3 + [128]), $7)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [128])) ){ goto $label$2 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$2
	$5 = *($2 + [8])
	*(($3 + [120])) = [0]
	$8 = (uint_64)$5 >> (uint_64)(int_64)8
	*($3 + [96]) = $8)
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	*($3 + [88]) = *($0)
	$9 = CALL $56(($3 + [88]), $8, [9909])
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$5 }
	$5 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $11
	$12 = $7
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$5 = $11
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$9 }
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [10016])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10038])
	
.LABEL $label$3
	if ( ((int_64)*($9 + [8]) == (int_64)*(($2 + [8]))) ){ goto $label$10 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$10
	$7 = [0]
	*(($3 + [80])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	$11 = *($1)
	*($3 + [56]) = $11
	$12 = CALL db_find_i64($5, $11, (int_64)3607749779137757184, $8)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$12 }
	$7 = CALL $37(($3 + [48]), $12)
	if ( ((int_32)*($7 + [20]) == (int_32)($3 + [48])) ){ goto $label$11 }
	CALL eosio_assert([0], [12426])
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [10069])
	
.LABEL $label$11
	$12 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $5
	*($3 + [32]) = (int_64)0
	$13 = CALL db_lowerbound_i64($5, $5, (int_64)7343625767893860352, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$21 }
	$12 = CALL $64(($3 + [8]), $13)
	$5 = *($7)
	if ( ($6 == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [10167])
	$5 = *($7)
	if ( $6 ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((int_64))($5 - *($4 + [8])) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [10238])
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_64))((int_64))($5 - *($6 + [8])) - *($4 + [8])) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [10301])
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*($3 + [208]) = $2
	CALL $65(($3 + [128]), $4, ($3 + [208]))
	if ( ((uint_64)((int_64)*($12) + (int_64)604800) > (uint_64)((int_64)((int_64)CALL $17() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$15 }
	CALL $66(($3 + [128]), $4)
	$13 = *($3 + [32])
	if ( $13 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$11 = *($1)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [128])) ){ goto $label$22 }
	CALL eosio_assert([0], [12500])
	
.LABEL $label$22
	*(($7 = CALL $7([56])) + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	*($7 + [40]) = ($3 + [128])
	*($7) = *($1)
	$5 = *($2)
	*($7 + [8]) = $5
	$8 = *(($2 + [8]))
	*($7 + [16]) = $8
	*($7 + [24]) = $5
	*($7 + [32]) = $8
	*($3 + [256]) = (($3 + [208]) + [40])
	*($3 + [252]) = ($3 + [208])
	*($3 + [248]) = ($3 + [208])
	*($3 + [264]) = ($3 + [248])
	*($3 + [276]) = ($7 + [8])
	*($3 + [272]) = $7
	*($3 + [280]) = ($7 + [24])
	CALL $67(($3 + [272]), ($3 + [264]))
	$5 = *($7)
	$13 = CALL db_store_i64(*((($3 + [128]) + [8])), (int_64)3607607410924453888, $11, $5, ($3 + [208]), [40])
	*($7 + [44]) = $13
	$12 = ($3 + [144])
	if ( (uint_64)($5 <= *($12)) ){ goto $label$23 }
	*($12) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	*($3 + [272]) = $7
	$5 = *($7)
	*($3 + [208]) = $5
	*($3 + [248]) = $13
	$2 = ($3 + [156])
	$12 = *($2)
	if ( ((uint_32)$12 >= (uint_32)*(($3 + [160]))) ){ goto $label$25 }
	*($12 + [8]) = $5
	*($12 + [16]) = $13
	*($3 + [272]) = [0]
	*($12) = $7
	*($2) = ($12 + [24])
	$7 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( $7 ){ goto $label$24 }
	goto $label$15 
	
.LABEL $label$25
	CALL $68(($3 + [152]), ($3 + [272]), ($3 + [208]), ($3 + [248]))
	$7 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$24
	CALL $9($7)
	
.LABEL $label$15
	$13 = *($3 + [32])
	if ( ($13 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$2 = ($3 + [36])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$27 }
	
.LOOP $label$28:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$29 }
	CALL $9($12)
	
.LABEL $label$29
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$28 }
	$7 = *(($3 + [32]))
	goto $label$26 
	
.LABEL $label$27
	$7 = $13
	
.LABEL $label$26
	*($2) = $13
	CALL $9($7)
	
.LABEL $label$13
	$13 = *($3 + [72])
	if ( ($13 == 0) ){ goto $label$30 }
	$2 = ($3 + [76])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$32 }
	
.LOOP $label$33:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$34 }
	CALL $9($12)
	
.LABEL $label$34
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$33 }
	$7 = *(($3 + [72]))
	goto $label$31 
	
.LABEL $label$32
	$7 = $13
	
.LABEL $label$31
	*($2) = $13
	CALL $9($7)
	
.LABEL $label$30
	$13 = *($3 + [112])
	if ( ($13 == 0) ){ goto $label$35 }
	$2 = ($3 + [116])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$37 }
	
.LOOP $label$38:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$39 }
	CALL $9($12)
	
.LABEL $label$39
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$38 }
	$7 = *(($3 + [112]))
	goto $label$36 
	
.LABEL $label$37
	$7 = $13
	
.LABEL $label$36
	*($2) = $13
	CALL $9($7)
	
.LABEL $label$35
	$13 = *($3 + [152])
	if ( ($13 == 0) ){ goto $label$40 }
	$2 = ($3 + [156])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$42 }
	
.LOOP $label$43:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$44 }
	CALL $9($12)
	
.LABEL $label$44
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$43 }
	$7 = *(($3 + [152]))
	goto $label$41 
	
.LABEL $label$42
	$7 = $13
	
.LABEL $label$41
	*($2) = $13
	CALL $9($7)
	
.LABEL $label$40
	$13 = *($3 + [192])
	if ( ($13 == 0) ){ goto $label$45 }
	$2 = ($3 + [196])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$47 }
	
.LOOP $label$48:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$49 }
	CALL $9($12)
	
.LABEL $label$49
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$48 }
	$7 = *(($3 + [192]))
	goto $label$46 
	
.LABEL $label$47
	$7 = $13
	
.LABEL $label$46
	*($2) = $13
	CALL $9($7)
	
.LABEL $label$45
	$global$0 = ($3 + [288])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *(*(*($0 + [4])))
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = *($0)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [12267])
	
.LABEL $label$1
	*($1 + [8]) = $4
	*($1) = (int_64)0
	*($1 + [16]) = [1]
	$9 = $2
	$7 = ($9 + [-32])
	$global$0 = $7
	*($3 + [4]) = $7
	*($3) = $7
	*($3 + [8]) = ($9 + [-15])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [16])
	*($3 + [24]) = $1
	CALL $39(($3 + [24]), ($3 + [16]))
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [24]) = CALL db_store_i64(*($6 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $7, [17])
	if ( (uint_64)($5 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$6
	$global$0 = ($3 + [32])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [304])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 <= (int_64)4921564679018381311) ){ goto $label$19 }
	if ( ((int_64)$2 > (int_64)7343611773636837375) ){ goto $label$18 }
	if ( ((int_64)$2 <= (int_64)5031766152489992191) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)5505800535992696832) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)6291761009417781248) ){ goto $label$1 }
	*($3 + [196]) = [0]
	*($3 + [192]) = [1]
	*($3 + [104]) = *($3 + [192])
	CALL $102($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$19
	if ( ((int_64)$2 <= (int_64)-3141110748558655489) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)-3102536759825661953) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-3075276126730321920) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-3066762342674989056) ){ goto $label$1 }
	*($3 + [164]) = [0]
	*($3 + [160]) = [2]
	*($3 + [136]) = *($3 + [160])
	CALL $103($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$18
	if ( ((int_64)$2 <= (int_64)8419140662661742591) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)8419140662661742592) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)8419219353978798080) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [3]
	*($3 + [16]) = *($3 + [280])
	CALL $104($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 > (int_64)-4157661383434960897) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-6533262907872903168) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-5003132314734034944) ){ goto $label$1 }
	*($3 + [268]) = [0]
	*($3 + [264]) = [4]
	*($3 + [32]) = *($3 + [264])
	CALL $105($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 == (int_64)4921564679018381312) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)4929339783689273344) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [5]
	*($3 + [112]) = *($3 + [184])
	CALL $106($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)-3141110748558655488) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3109319446267691008) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [6]
	*($3 + [72]) = *($3 + [224])
	CALL $102($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)7343611773636837376) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)7343625767881801728) ){ goto $label$1 }
	*($3 + [156]) = [0]
	*($3 + [152]) = [7]
	*($3 + [144]) = *($3 + [152])
	CALL $103($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)-4157661383434960896) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [260]) = [0]
	*($3 + [256]) = [8]
	*($3 + [40]) = *($3 + [256])
	CALL $107($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [300]) = [0]
	*($3 + [296]) = [9]
	*($3) = *($3 + [296])
	CALL $102($1, $1, $3)
	goto $label$1 
	
.LABEL $label$11
	*($3 + [172]) = [0]
	*($3 + [168]) = [10]
	*($3 + [128]) = *($3 + [168])
	CALL $108($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [220]) = [0]
	*($3 + [216]) = [11]
	*($3 + [80]) = *($3 + [216])
	CALL $102($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [292]) = [0]
	*($3 + [288]) = [12]
	*($3 + [8]) = *($3 + [288])
	CALL $102($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [212]) = [0]
	*($3 + [208]) = [13]
	*($3 + [88]) = *($3 + [208])
	CALL $109($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [204]) = [0]
	*($3 + [200]) = [14]
	*($3 + [96]) = *($3 + [200])
	CALL $109($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [252]) = [0]
	*($3 + [248]) = [15]
	*($3 + [48]) = *($3 + [248])
	CALL $110($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [276]) = [0]
	*($3 + [272]) = [16]
	*($3 + [24]) = *($3 + [272])
	CALL $105($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [180]) = [0]
	*($3 + [176]) = [17]
	*($3 + [120]) = *($3 + [176])
	CALL $106($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [244]) = [0]
	*($3 + [240]) = [18]
	*($3 + [56]) = *($3 + [240])
	CALL $102($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [236]) = [0]
	*($3 + [232]) = [19]
	*($3 + [64]) = *($3 + [232])
	CALL $102($1, $1, ($3 + [64]))
	
.LABEL $label$1
	CALL $21([0])
	$global$0 = ($3 + [304])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $103 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [16])) = $3
	*($4 + [28]) = $2
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [112])
	return [1]
}

int_32 .FUNC $102 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [144]))) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $7)
	*($4 + [168]) = ($4 + [112])
	*($4 + [40]) = ($4 + [128])
	CALL $111(($4 + [40]), ($4 + [168]))
	$8 = *($4 + [120])
	*((($4 + [24]) + [8])) = $8
	*((($4 + [8]) + [8])) = $8
	$9 = *($4 + [112])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	*(($8 = (($4 + [152]) + [8]))) = *($3)
	*($4 + [152]) = *($4 + [136])
	$0 = *($4 + [128])
	*((($4 + [168]) + [8])) = *($8)
	*($4 + [184]) = $0
	*($4 + [168]) = *($4 + [152])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($4 + [184])), (int_32 ($4 + [168])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	$global$0 = ($4 + [192])
	return [1]
}

int_32 .FUNC $105 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [112]), $2, [8])
	*($4 + [40]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	CALL memcpy(($4 + [40]), $8, [8])
	*(($8 = (($4 + [112]) + [8]))) = *($4 + [40])
	*((($4 + [8]) + [8])) = $3
	*($4 + [24]) = $2
	*($4 + [28]) = ($2 + [16])
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	CALL $112(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [112])
	*($4 + [128]) = *($8)
	*($4 + [136]) = $0
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 ($4 + [136])), (int_32 ($4 + [128])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	$global$0 = ($4 + [144])
	return [1]
}

int_32 .FUNC $104 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [136]))) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [128]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [108]) = $2
	*($4 + [104]) = $2
	*($4 + [112]) = ($2 + $7)
	*($4 + [200]) = ($4 + [104])
	*($4 + [32]) = ($4 + [120])
	CALL $113(($4 + [32]), ($4 + [200]))
	$8 = *($4 + [112])
	*((($4 + [16]) + [8])) = $8
	*(($4 + [8])) = $8
	$9 = *($4 + [104])
	*($4) = $9
	*($4 + [16]) = $9
	CALL $112(($4 + [32]), $0, $1, $4)
	*(($8 = (($4 + [184]) + [8]))) = *($3)
	*($4 + [184]) = *($4 + [128])
	$0 = *($4 + [120])
	$3 = CALL $19(($4 + [168]), ($4 + [144]))
	$1 = *($4 + [160])
	*((($4 + [200]) + [8])) = *($8)
	*($4 + [216]) = $0
	*($4 + [200]) = *($4 + [184])
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($8) + $6))
	
.LABEL $label$4
	CALL void $8((int_32 ($4 + [216])), (int_32 ($4 + [200])), (int_32 $3), (int_32 $1), (int_64 $6))
	if ( (*($4 + [168]) & [1]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($3 + [8]))
	if ( ($7 <= [513]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($2)
	$2 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [224])
	return $2
	
.LABEL $label$5
	CALL $9(*(($4 + [152])))
	$global$0 = ($4 + [224])
	return $2
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [40]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $152(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($5 + [48 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $153(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	float_32 $11
	$3 = ($global$0 - [224])
	$global$0 = $3
	CALL require_auth(*($0 + [56]))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$8 }
	$6 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$6 = $7
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$12 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((int_64)$10 <= (int_64)0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [11326])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [11343])
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)(uint_64)*($0 + [48]) >> (uint_64)(int_64)8)) ){ goto $label$13 }
	CALL eosio_assert([0], [8257])
	
.LABEL $label$13
	*(($3 + [184])) = [0]
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	$7 = *($0)
	*($3 + [152]) = $7
	$6 = (uint_64)*($0 + [40]) >> (uint_64)(int_64)8
	*($3 + [160]) = $6)
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	if ( ((int_32)*(CALL $23(($3 + [152]), $4) + [40]) == (int_32)($3 + [152])) ){ goto $label$14 }
	CALL eosio_assert([0], [12426])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [11379])
	
.LABEL $label$14
	*(($3 + [144])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$6 = *($0)
	*($3 + [112]) = $6
	$7 = *($0 + [56])
	*($3 + [120]) = $7
	$4 = CALL db_find_i64($6, $7, (int_64)3607749779137757184, (uint_64)*(($0 + [40])) >> (uint_64)(int_64)8)
	if ( ((int_32)$4) < (int_32)[0]) ){ goto $label$17 }
	if ( ((int_32)*(CALL $37(($3 + [112]), $4) + [20]) == (int_32)($3 + [112])) ){ goto $label$16 }
	CALL eosio_assert([0], [12426])
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [11467])
	
.LABEL $label$16
	$8 = [0]
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [108]) = [0]
	$6 = *($0 + [64])
	*($3 + [72]) = $6
	$7 = *($0 + [32])
	*($3 + [80]) = $7
	*($3 + [96]) = (int_64)0
	$4 = CALL db_lowerbound_i64($6, $7, (int_64)5310424360057438208, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$8 = CALL $89(($3 + [72]), $4)
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [12980])
	
.LABEL $label$18
	$4 = [0]
	$8 = CALL db_next_i64(*($8 + [44]), ($3 + [192]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$20 }
	$4 = CALL $89(($3 + [72]), $8)
	
.LABEL $label$20
	$6 = *($4 + [24])
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$21 }
	CALL eosio_assert([0], [11531])
	$6 = *(($4 + [24]))
	
.LABEL $label$21
	$5 = *($2)
	$7 = *(($0 + [40]))
	*($3 + [64]) = $7
	$11 = ((float_32)((float_32)(CASTING float_32)(int_64 $5) * (float_32)(float_32)100) / (float_32)(CASTING float_32)(uint_64 $6))
	if ( ((float_32)(float_32)|$11| < (float_32)(float_32)9223372036854775808) ){ goto $label$23 }
	$6 = (int_64)-9223372036854775808
	goto $label$22 
	
.LABEL $label$23
	$6 = (Rounds 0)($11)
	
.LABEL $label$22
	*($3 + [56]) = $6
	if ( (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$24 }
	CALL eosio_assert([0], [12218])
	$7 = *(($3 + [64]))
	
.LABEL $label$24
	$2 = ($0 + [56])
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$28 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$28
	$6 = $7
	
.LOOP $label$29:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$29 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [12267])
	
.LABEL $label$25
	$5 = *($3 + [56])
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$32 }
	$6 = (uint_64)*(($3 + [64])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$6 = $7
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$36 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$33 }
	
.LABEL $label$34
	$6 = (int_64)0
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], [11012])
	$6 = (int_64)0
	if ( ((int_64)*($3 + [56]) > (int_64)0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL eosio_assert([0], [11033])
	
.LABEL $label$30
	*(($3 + [48])) = [0]
	*($3 + [40]) = $6
	$4 = CALL $15([11569])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$40 }
	*($3 + [40]) = ($4 << [1])
	$8 = (($3 + [40]) | [1])
	if ( $4 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$9 = (($4 + [16]) & [-16])
	$8 = CALL $7($9)
	*($3 + [40]) = ($9 | [1])
	*($3 + [48]) = $8
	*($3 + [44]) = $4
	
.LABEL $label$39
	CALL memcpy($8, [11569], $4)
	
.LABEL $label$38
	*(($8 + $4)) = [0]
	$6 = *(($0 + [56]))
	$7 = *($0)
	*($3 + [24]) = [11612]
	*($3 + [28]) = CALL $15([11612])
	*($3 + [16]) = *($3 + [24])
	$5 = *(CALL $35(($3 + [32]), ($3 + [16])))
	*(($4 = CALL $7([16]))) = $6
	*($4 + [8]) = $5
	*($3 + [204]) = ($3 + [40])
	*($3 + [200]) = ($3 + [56])
	*(($3 + [8])) = *($3 + [200])
	*($3 + [192]) = $2
	*($3 + [196]) = $1
	*($3 + [208]) = $4
	$4 = ($4 + [16])
	*($3 + [216]) = $4
	*($3 + [212]) = $4
	*($3) = *($3 + [192])
	CALL $36($7, (int_64)-3617168760277827584, ($3 + [208]), $3)
	$4 = *($3 + [208])
	if ( ($4 == 0) ){ goto $label$41 }
	*($3 + [212]) = $4
	CALL $9($4)
	
.LABEL $label$41
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$42 }
	CALL $9(*($3 + [48]))
	
.LABEL $label$42
	$9 = *($3 + [96])
	if ( ($9 == 0) ){ goto $label$43 }
	$0 = ($3 + [100])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$45 }
	
.LOOP $label$46:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$47 }
	CALL $9($8)
	
.LABEL $label$47
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$46 }
	$4 = *(($3 + [96]))
	goto $label$44 
	
.LABEL $label$45
	$4 = $9
	
.LABEL $label$44
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$43
	$9 = *($3 + [136])
	if ( ($9 == 0) ){ goto $label$48 }
	$0 = ($3 + [140])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$50 }
	
.LOOP $label$51:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$52 }
	CALL $9($8)
	
.LABEL $label$52
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$51 }
	$4 = *(($3 + [136]))
	goto $label$49 
	
.LABEL $label$50
	$4 = $9
	
.LABEL $label$49
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$48
	$9 = *($3 + [176])
	if ( ($9 == 0) ){ goto $label$53 }
	$0 = ($3 + [180])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$55 }
	
.LOOP $label$56:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$57 }
	CALL $9($8)
	
.LABEL $label$57
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$56 }
	$4 = *(($3 + [176]))
	goto $label$54 
	
.LABEL $label$55
	$4 = $9
	
.LABEL $label$54
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$53
	$global$0 = ($3 + [224])
	return (unreachable)
	
.LABEL $label$37
	CALL $18(($3 + [40]))
}

void .FUNC $87 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*((($4 + [24]) + [24])) = $5
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	CALL $141(($4 + [52]), [24])
	$5 = ($4 + [56])
	$7 = *($5)
	$2 = *($4 + [52])
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = $7
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $151(($4 + [88]), ($4 + [80]))
	CALL $143(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$6
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $16(($4 + [8]))
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12756])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12775])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $24(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	float_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [224])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [184])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$3 = *($0)
	*($2 + [152]) = $3
	*($2 + [160]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $47(($2 + [152]), $4)
	if ( ((int_32)*($4 + [40]) == (int_32)($2 + [152])) ){ goto $label$3 }
	CALL eosio_assert([0], [12426])
	
.LABEL $label$3
	$3 = *($4 + [24])
	$5 = *($0 + [40])
	*($2 + [144]) = $5
	$6 = ((float_32)(CASTING float_32)(int_64 $3) * (float_32)(float_32)0.05000000074505806)
	if ( ((float_32)(float_32)|$6| < (float_32)(float_32)9223372036854775808) ){ goto $label$5 }
	$7 = (int_64)-9223372036854775808
	goto $label$4 
	
.LABEL $label$5
	$7 = (Rounds 0)($6)
	
.LABEL $label$4
	*($2 + [136]) = $7
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	$3 = $5)
	if ( (uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$6 }
	CALL eosio_assert([0], [12218])
	$3 = (uint_64)*(($2 + [144])) >> (uint_64)(int_64)8)
	
.LABEL $label$6
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$3 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$3 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$11 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [12267])
	
.LABEL $label$7
	$10 = [0]
	*(($2 + [128])) = [0]
	*($2 + [112]) = (int_64)-1
	*($2 + [120]) = (int_64)0
	$3 = *($0)
	*($2 + [96]) = $3
	*($2 + [104]) = $5
	$4 = CALL db_find_i64($3, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$10 = CALL $23(($2 + [96]), $4)
	if ( ((int_32)*($10 + [40]) == (int_32)($2 + [96])) ){ goto $label$12 }
	CALL eosio_assert([0], [12426])
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [8586])
	
.LABEL $label$12
	$5 = *($2 + [136])
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$15 }
	$3 = (uint_64)*(($2 + [144])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$7 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$3 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$3 = $7
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$19 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$5 <= (int_64)0) ){ goto $label$14 }
	goto $label$1 
	
.LABEL $label$15
	CALL eosio_assert([0], [11012])
	if ( ((int_64)*($2 + [136]) > (int_64)0) ){ goto $label$1 }
	
.LABEL $label$14
	CALL eosio_assert([0], [11033])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [11203])
	
.LABEL $label$1
	if ( ((int_64)*($10 + [8]) == (int_64)*(($2 + [144]))) ){ goto $label$20 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$20
	if ( ((int_64))(*($10 + [16]) - *($10)) >= (int_64)*($2 + [136])) ){ goto $label$21 }
	CALL eosio_assert([0], [11063])
	
.LABEL $label$21
	$3 = *($0)
	*($2 + [192]) = ($2 + [136])
	CALL $86(($2 + [96]), $10, $3, ($2 + [192]))
	*($2 + [192]) = *($0)
	$9 = ($10 + [32])
	CALL $34($0, $9, ($2 + [136]), ($2 + [192]), [1])
	*(($2 + [88])) = [0]
	*($2 + [80]) = (int_64)0
	$4 = CALL $15([11236])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$25 }
	*($2 + [80]) = ($4 << [1])
	$8 = (($2 + [80]) | [1])
	if ( $4 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$10 = (($4 + [16]) & [-16])
	$8 = CALL $7($10)
	*($2 + [80]) = ($10 | [1])
	*($2 + [88]) = $8
	*($2 + [84]) = $4
	
.LABEL $label$24
	CALL memcpy($8, [11236], $4)
	
.LABEL $label$23
	*(($8 + $4)) = [0]
	$3 = *($9)
	if ( ((int_64)*($1) == (int_64)$3) ){ goto $label$26 }
	$7 = *($0)
	*($2 + [64]) = [8837]
	*($2 + [68]) = CALL $15([8837])
	*($2 + [40]) = *($2 + [64])
	$5 = *(CALL $35(($2 + [72]), ($2 + [40])))
	*(($4 = CALL $7([16]))) = $3
	*($4 + [8]) = $5
	*($2 + [204]) = ($2 + [80])
	*($2 + [200]) = ($2 + [136])
	*(($2 + [32])) = *($2 + [200])
	*($2 + [192]) = $9
	*($2 + [196]) = $1
	*($2 + [208]) = $4
	$4 = ($4 + [16])
	*($2 + [216]) = $4
	*($2 + [212]) = $4
	*($2 + [24]) = *($2 + [192])
	CALL $36($7, (int_64)-3617168760277827584, ($2 + [208]), ($2 + [24]))
	$4 = *($2 + [208])
	if ( ($4 == 0) ){ goto $label$27 }
	*($2 + [212]) = $4
	CALL $9($4)
	
.LABEL $label$27
	$3 = *($0)
	*($2 + [48]) = [11319]
	*($2 + [52]) = CALL $15([11319])
	*($2 + [16]) = *($2 + [48])
	$7 = *(CALL $35(($2 + [56]), ($2 + [16])))
	*(($4 = CALL $7([16])) + [8]) = $7
	*($4) = $3
	*($2 + [208]) = $1
	*($2 + [192]) = $4
	$4 = ($4 + [16])
	*($2 + [200]) = $4
	*($2 + [196]) = $4
	*($2 + [212]) = ($2 + [136])
	*($2 + [8]) = *($2 + [208])
	CALL $87($3, (int_64)-4157661383434960896, ($2 + [192]), ($2 + [8]))
	$4 = *($2 + [192])
	if ( ($4 == 0) ){ goto $label$26 }
	*($2 + [196]) = $4
	CALL $9($4)
	
.LABEL $label$26
	if ( ((*($2 + [80]) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*($2 + [88]))
	
.LABEL $label$28
	$9 = *($2 + [120])
	if ( ($9 == 0) ){ goto $label$29 }
	$0 = ($2 + [124])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$31 }
	
.LOOP $label$32:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$33 }
	CALL $9($8)
	
.LABEL $label$33
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$32 }
	$4 = *(($2 + [120]))
	goto $label$30 
	
.LABEL $label$31
	$4 = $9
	
.LABEL $label$30
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$29
	$9 = *($2 + [176])
	if ( ($9 == 0) ){ goto $label$34 }
	$0 = ($2 + [180])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$36 }
	
.LOOP $label$37:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$38 }
	CALL $9($8)
	
.LABEL $label$38
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$37 }
	$4 = *(($2 + [176]))
	goto $label$35 
	
.LABEL $label$36
	$4 = $9
	
.LABEL $label$35
	*($0) = $9
	CALL $9($4)
	
.LABEL $label$34
	$global$0 = ($2 + [224])
	return (unreachable)
	
.LABEL $label$22
	CALL $18(($2 + [80]))
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [24]) = *($1 + [8])
	*(($1 + [32])) = *(($1 + [16]))
	$4 = *($1)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($5 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [24])
	CALL $67(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $2, [40])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$5 = *($1)
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$6 = ((int_64)*($1 + [8]) + (int_64)*($2))
	*($1 + [8]) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [12756])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12775])
	if ( ((int_64)$5 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12654])
	
.LABEL $label$4
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	*($4 + [40]) = ($1 + [24])
	CALL $67(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12756])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12775])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $24(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	float_32 $10
	int_32 $11
	$2 = ($global$0 - [208])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [184])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$4 = *($0)
	*($2 + [152]) = $4
	*($2 + [160]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)3607607410924453888, *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $48(($2 + [152]), $5)
	if ( ((int_32)*($3 + [40]) == (int_32)($2 + [152])) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10978])
	
.LABEL $label$1
	$4 = *($0 + [40])
	*($2 + [144]) = $4
	*($2 + [136]) = (int_64)0
	$5 = [0]
	$6 = (uint_64)$4 >> (uint_64)(int_64)8
	$4 = $6)
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$4 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$4 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$7 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [12267])
	
.LABEL $label$3
	$4 = (int_64)25000000
	$7 = *($3 + [24])
	if ( ((int_64)$7 > (int_64)5000000000) ){ goto $label$8 }
	$10 = ((float_32)(CASTING float_32)(int_64 $7) * (float_32)(float_32)0.004999999888241291)
	if ( ((float_32)(float_32)|$10| < (float_32)(float_32)9223372036854775808) ){ goto $label$9 }
	$4 = (int_64)-9223372036854775808
	goto $label$8 
	
.LABEL $label$9
	$4 = (Rounds 0)($10)
	
.LABEL $label$8
	*($2 + [136]) = $4
	$11 = [0]
	*(($2 + [128])) = [0]
	*($2 + [112]) = (int_64)-1
	*($2 + [120]) = (int_64)0
	$4 = *($0)
	*($2 + [96]) = $4
	*($2 + [104]) = $6
	$5 = CALL db_find_i64($4, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$11 = CALL $23(($2 + [96]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($2 + [96])) ){ goto $label$10 }
	CALL eosio_assert([0], [12426])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8586])
	
.LABEL $label$10
	$6 = *($2 + [136])
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$14 }
	$4 = (uint_64)*(($2 + [144])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$4 = $7
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	$4 = $7
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $8 ){ goto $label$18 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( ((int_64)$6 <= (int_64)0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [11012])
	if ( ((int_64)*($2 + [136]) > (int_64)0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [11033])
	
.LABEL $label$12
	if ( ((int_64)*($11 + [8]) == (int_64)*(($2 + [144]))) ){ goto $label$19 }
	CALL eosio_assert([0], [8502])
	
.LABEL $label$19
	if ( ((int_64))(*($11 + [16]) - *($11)) >= (int_64)*($2 + [136])) ){ goto $label$20 }
	CALL eosio_assert([0], [11063])
	
.LABEL $label$20
	$4 = *($0)
	*($2 + [24]) = ($2 + [136])
	CALL $82(($2 + [96]), $11, $4, ($2 + [24]))
	*($2 + [24]) = *($0)
	$9 = ($11 + [32])
	CALL $34($0, $9, ($2 + [136]), ($2 + [24]), [1])
	*(($2 + [88])) = [0]
	*($2 + [80]) = (int_64)0
	$5 = CALL $15([11111])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$27 }
	*($2 + [80]) = ($5 << [1])
	$8 = (($2 + [80]) | [1])
	if ( $5 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$11 = (($5 + [16]) & [-16])
	$8 = CALL $7($11)
	*($2 + [80]) = ($11 | [1])
	*($2 + [88]) = $8
	*($2 + [84]) = $5
	
.LABEL $label$26
	CALL memcpy($8, [11111], $5)
	
.LABEL $label$25
	*(($8 + $5)) = [0]
	$4 = *($9)
	if ( ((int_64)*($1) == (int_64)$4) ){ goto $label$21 }
	$7 = *($0)
	*($2 + [64]) = [8837]
	*($2 + [68]) = CALL $15([8837])
	*($2 + [16]) = *($2 + [64])
	$6 = *(CALL $35(($2 + [72]), ($2 + [16])))
	*(($5 = CALL $7([16]))) = $4
	*($5 + [8]) = $6
	*($2 + [36]) = ($2 + [80])
	*($2 + [32]) = ($2 + [136])
	*(($2 + [8])) = *($2 + [32])
	*($2 + [24]) = $9
	*($2 + [28]) = $1
	*($2 + [192]) = $5
	$5 = ($5 + [16])
	*($2 + [200]) = $5
	*($2 + [196]) = $5
	*($2) = *($2 + [24])
	CALL $36($7, (int_64)-3617168760277827584, ($2 + [192]), $2)
	$5 = *($2 + [192])
	if ( ($5 == 0) ){ goto $label$28 }
	*($2 + [196]) = $5
	CALL $9($5)
	
.LABEL $label$28
	$5 = [0]
	*(($2 + [56])) = [0]
	*($2 + [40]) = (int_64)-1
	$4 = *($0)
	*($2 + [24]) = $4
	*($2 + [32]) = $4
	*($2 + [48]) = (int_64)0
	$8 = CALL db_lowerbound_i64($4, $4, (int_64)7343625767893860352, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$29 }
	$5 = CALL $64(($2 + [24]), $8)
	*($2 + [192]) = ($2 + [136])
	if ( $3 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$29
	CALL eosio_assert([0], [10167])
	*($2 + [192]) = ($2 + [136])
	if ( $3 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	CALL $18(($2 + [80]))
	
.LABEL $label$23
	CALL eosio_assert([0], [13010])
	
.LABEL $label$22
	CALL $83(($2 + [152]), $3, ($2 + [192]))
	if ( ((uint_64)((int_64)*($5) + (int_64)604800) > (uint_64)((int_64)((int_64)CALL $17() / (int_64)1000000) & (int_64)4294967295)) ){ goto $label$30 }
	if ( $3 ){ goto $label$31 }
	CALL eosio_assert([0], [13010])
	
.LABEL $label$31
	CALL $84(($2 + [152]), $3)
	
.LABEL $label$30
	$9 = *($2 + [48])
	if ( ($9 == 0) ){ goto $label$21 }
	$0 = ($2 + [52])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$33 }
	
.LOOP $label$34:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$35 }
	CALL $9($8)
	
.LABEL $label$35
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$34 }
	$5 = *(($2 + [48]))
	goto $label$32 
	
.LABEL $label$33
	$5 = $9
	
.LABEL $label$32
	*($0) = $9
	CALL $9($5)
	
.LABEL $label$21
	if ( ((*($2 + [80]) & [1]) == 0) ){ goto $label$36 }
	CALL $9(*($2 + [88]))
	
.LABEL $label$36
	$9 = *($2 + [120])
	if ( ($9 == 0) ){ goto $label$37 }
	$0 = ($2 + [124])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$39 }
	
.LOOP $label$40:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$41 }
	CALL $9($8)
	
.LABEL $label$41
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$40 }
	$5 = *(($2 + [120]))
	goto $label$38 
	
.LABEL $label$39
	$5 = $9
	
.LABEL $label$38
	*($0) = $9
	CALL $9($5)
	
.LABEL $label$37
	$9 = *($2 + [176])
	if ( ($9 == 0) ){ goto $label$42 }
	$0 = ($2 + [180])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$44 }
	
.LOOP $label$45:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$46 }
	CALL $9($8)
	
.LABEL $label$46
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$45 }
	$5 = *(($2 + [176]))
	goto $label$43 
	
.LABEL $label$44
	$5 = $9
	
.LABEL $label$43
	*($0) = $9
	CALL $9($5)
	
.LABEL $label$42
	$global$0 = ($2 + [208])
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [24]) = *($1 + [8])
	*(($1 + [32])) = *(($1 + [16]))
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [24])
	CALL $73(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [7]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($6) = ((int_32)*($2 + [7]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $147(CALL $146($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12551])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12551])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12941])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12941])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $143 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $141($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $144(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *(*($0))
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0)
	$5 = *($3 + [4])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($3 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $6, [8])
	$5 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$5 = *($0)
	
.LABEL $label$4
	CALL memcpy($5, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $145(*($1), *($3 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [24]) = *($1 + [8])
	*(($1 + [32])) = *(($1 + [16]))
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [24])
	CALL $73(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $97(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [12756])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12775])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12654])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [24])
	CALL $73(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13045])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13093])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13115])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12654])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [24])
	CALL $67(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	*($1 + [24]) = *($1 + [8])
	*(($1 + [32])) = *(($1 + [16]))
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [24])
	CALL $67(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($1)
	*($2 + [7]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [7]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $36 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [48])) = $5
	*(($4 + [44])) = $6
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [8]) = (int_64)0
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($7)
	$7 = *($3 + [12])
	$2 = ( *($7 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $141($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $142(($4 + [88]), ($4 + [80]))
	CALL $143(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $9($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $16(($4 + [8]))
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [20]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	CALL $148(($3 + [40]), ($3 + [32]))
	*($5 + [24]) = $1
	*($3 + [32]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [40]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	$4 = [0]
	*(($3 + [80])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	*($3 + [56]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)3607819369725935616, *($1))
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $47(($3 + [48]), $6)
	if ( ((int_32)*($4 + [40]) == (int_32)($3 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [12426])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10787])
	
.LABEL $label$1
	CALL require_auth(*($1))
	$5 = *($2 + [8])
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($3 + [16]) = $5)
	$7 = CALL $56(($3 + [8]), $5, [10827])
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$5 }
	$5 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$9 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $9
	$6 = $0
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$5 = $9
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$0 < (int_32)[6])
	$10 = ($0 + [1])
	$0 = $10
	if ( $6 ){ goto $label$9 }
	$0 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$8 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [10016])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10038])
	
.LABEL $label$3
	if ( ((int_64)*($7 + [8]) != (int_64)*(($2 + [8]))) ){ goto $label$16 }
	$9 = *($4 + [8])
	$5 = *($2)
	if ( ((int_64)$5 > (int_64)$9) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], [8502])
	$9 = *($4 + [8])
	$5 = *($2)
	if ( ((int_64)$5 <= (int_64)$9) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [10914])
	if ( ((int_64)*(($4 + [8])) == (int_64)*($2)) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_64)$9 != (int_64)$5) ){ goto $label$12 }
	
.LABEL $label$13
	if ( $4 ){ goto $label$17 }
	CALL eosio_assert([0], [12946])
	CALL eosio_assert([0], [12980])
	
.LABEL $label$17
	$0 = CALL db_next_i64(*($4 + [44]), ($3 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$18 }
	CALL $47(($3 + [48]), $0)
	
.LABEL $label$18
	CALL $49(($3 + [48]), $4)
	$10 = *($3 + [32])
	if ( $10 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$5 = *($1)
	*($3 + [88]) = $2
	if ( $4 ){ goto $label$19 }
	CALL eosio_assert([0], [13010])
	
.LABEL $label$19
	CALL $79(($3 + [48]), $4, $5, ($3 + [88]))
	if ( ((int_64)*(($4 + [16])) == (int_64)*(($4 + [32]))) ){ goto $label$20 }
	CALL eosio_assert([0], [12159])
	
.LABEL $label$20
	if ( ((int_64)*(($4 + [8])) > (int_64)*($4 + [24])) ){ goto $label$21 }
	$5 = *($1)
	if ( $4 ){ goto $label$22 }
	CALL eosio_assert([0], [13010])
	
.LABEL $label$22
	CALL $80(($3 + [48]), $4, $5)
	
.LABEL $label$21
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$4 = ($3 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$10) ){ goto $label$24 }
	
.LOOP $label$25:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	CALL $9($6)
	
.LABEL $label$26
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$25 }
	$0 = *(($3 + [32]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $10
	
.LABEL $label$23
	*($4) = $10
	CALL $9($0)
	
.LABEL $label$10
	$10 = *($3 + [72])
	if ( ($10 == 0) ){ goto $label$27 }
	$4 = ($3 + [76])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$10) ){ goto $label$29 }
	
.LOOP $label$30:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	CALL $9($6)
	
.LABEL $label$31
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$30 }
	$0 = *(($3 + [72]))
	goto $label$28 
	
.LABEL $label$29
	$0 = $10
	
.LABEL $label$28
	*($4) = $10
	CALL $9($0)
	
.LABEL $label$27
	$global$0 = ($3 + [96])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13045])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [8]) = $7(*($1 + [8]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13093])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13115])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12654])
	
.LABEL $label$4
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [24])
	CALL $73(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12557])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12603])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12713])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [12756])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [12775])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [12654])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [32])
	CALL $24(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12477])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $140(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $32(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12551])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12551])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $129 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $78(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}

void .FUNC $127 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$5
	CALL memcpy(($3 + [120]), $2, [8])
	*($3 + [112]) = (int_64)0
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [104]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12941])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [104]) + [8])) = *($3 + [32])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [24])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	CALL $69(CALL $112(($3 + [32]), $0, $1, $3), ($3 + [120]), ($3 + [104]))
	$global$0 = ($3 + [128])
}