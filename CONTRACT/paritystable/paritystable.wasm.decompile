(data (i32.const 8244) "failed to allocate pages\00-+   0X0x\00Assertion failed: %s (%s: %s: %d)\n\00unexpected error in fixed_bytes constructor\00carry == 0\00")
(data (i32.const 8376) "\05\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00$ \00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\d0<\00\00")
(data (i32.const 8524) "\b8 \00\00")
(data (i32.const 8528) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 8624) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 10428) "(null)\00write\00paritytoken.hpp\00")
(data (i32.const 10464) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 10928) "0123456789ABCDEF")
(data (i32.const 10944) "-0X+0X 0X-0x+0x 0x\00read\00SIG\00")
(data (i32.const 10972) "inf\00Signature Key has invalid prefix\00")
(data (i32.const 11009) "INF\00No curve in signature\00")
(data (i32.const 11035) "nan\00K1\00")
(data (i32.const 11042) "NAN\00R1\00")
(data (i32.const 11049) ".\00Incorrect curve\00")
(data (i32.const 11072) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 11152) "%d\00Signature has no data\00")
(data (i32.const 11177) "%llu\00Issue fixed fee has different symbol than currency.\00")
(data (i32.const 11234) "get\00No delimiter in signature\00")
(data (i32.const 11264) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\ff\ff\ff\ff\ff\ff\ff\t\n\0b\0c\0d\0e\0f\10\ff\11\12\13\14\15\ff\16\17\18\19\1a\1b\1c\1d\1e\1f \ff\ff\ff\ff\ff\ff!\"#$%&\'()*+\ff,-./0123456789\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 11520) "DecodeBase58\00")
(data (i32.const 11533) "Decode signature failed\00")
(data (i32.const 11557) "Invalid signature\00")
(data (i32.const 11575) "Signature checksum mismatch\00")
(data (i32.const 11603) "invalid symbol name\00")
(data (i32.const 11623) "Redeem fixed fee has different symbol than currency.\00")
(data (i32.const 11676) "Issuer is not a valid EOS account.\00")
(data (i32.const 11711) "Commission account is not a valid EOS account.\00")
(data (i32.const 11758) "paritytoken with symbol already exists\00")
(data (i32.const 11797) "memo has more than 256 bytes\00")
(data (i32.const 11826) "memo has zero length\00")
(data (i32.const 11847) "paritytoken with symbol does not exist, create paritytoken before issue\00")
(data (i32.const 11919) "invalid quantity\00")
(data (i32.const 11936) "must issue positive quantity\00")
(data (i32.const 11965) "symbol precision mismatch\00")
(data (i32.const 11991) "Issue Fee\00")
(data (i32.const 12001) "signup\00")
(data (i32.const 12008) "token with symbol does not exist, create token before issue\00")
(data (i32.const 12068) "ID string has more than 256 bytes\00")
(data (i32.const 12102) "ID string has zero length\00")
(data (i32.const 12128) "Contribution id already exists.\00")
(data (i32.const 12160) "Disbursement id already exists.\00")
(data (i32.const 12192) "Qr with provided id not found\00")
(data (i32.const 12222) "QR not yet expired\00")
(data (i32.const 12241) "active\00")
(data (i32.const 12248) "qrId\00")
(data (i32.const 12253) "Provided data is incorrect or qr was expired, used\00")
(data (i32.const 12304) "Disbursement id doest not exists\00")
(data (i32.const 12337) "Disbursement status other then WAIT_APPROVE\00")
(data (i32.const 12381) "token with symbol does not exist, create token before burn\00")
(data (i32.const 12440) "must burn positive or zero quantity\00")
(data (i32.const 12476) "quantity exceeds available supply\00")
(data (i32.const 12510) "memo is required for redemption\00")
(data (i32.const 12542) "Redemption Fee\00")
(data (i32.const 12557) "cannot transfer to self\00")
(data (i32.const 12581) "eosio\00")
(data (i32.const 12587) "Only parity users can recieve transfers\00")
(data (i32.const 12627) "Transfer from account\00")
(data (i32.const 12649) "to account does not exist\00")
(data (i32.const 12675) "unable to find key\00")
(data (i32.const 12694) "must transfer positive quantity\00")
(data (i32.const 12726) "memo has more than 512 bytes\00")
(data (i32.const 12755) "At least one partner must be defined\00")
(data (i32.const 12792) "Quorum must be greatest than 0\00")
(data (i32.const 12823) "weight of partners must be great or eq quorum weight\00")
(data (i32.const 12876) "Only approved voting can be executed\00")
(data (i32.const 12913) "voting_id\00")
(data (i32.const 12923) "Unknown voting type\00")
(data (i32.const 12943) "Provided initiator is not owner of voting\00")
(data (i32.const 12985) "Only pending votes can be canceled\00")
(data (i32.const 13020) "Partner already in organization\00")
(data (i32.const 13052) "Partners list must contain at least one partner\00")
(data (i32.const 13100) "Delete partner will lead to quorum never be reached. Change quorum size first.\00")
(data (i32.const 13179) "Provided partner doesnt contains in organization\00")
(data (i32.const 13228) "Voting id not found\00")
(data (i32.const 13248) "You can provide vote only for pending voting\00")
(data (i32.const 13293) "Approve already provided\00")
(data (i32.const 13318) "Quorum size never be reached. Add more owners first.\00")
(data (i32.const 13371) "Unapprove already provided\00")
(data (i32.const 13398) "Rejected by quorum decision\00")
(data (i32.const 13426) "Incorrect condition for expire voting\00")
(data (i32.const 13464) "Invalid operation type\00")
(data (i32.const 13487) "Quantity must be a positive value\00")
(data (i32.const 13521) "Lock from jit not enabled\00")
(data (i32.const 13547) "Memo contains not valid json\00")
(data (i32.const 13576) "memo json doesnt containt voting id\00")
(data (i32.const 13612) "Multi owner transfer not approved\00")
(data (i32.const 13646) "Multi owner transfer already executed\00")
(data (i32.const 13684) "Multi owner transfer has bad recipient\00")
(data (i32.const 13723) "Multi owner transfer has bad quantity\00")
(data (i32.const 13761) "string is too long to be a valid symbol_code\00")
(data (i32.const 13806) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 13859) "contribid\00")
(data (i32.const 13869) "transfer memo doesnt contain contribid\00")
(data (i32.const 13908) "Contribution id does not exists\00")
(data (i32.const 13940) "Quantity bigger than in contribution\00")
(data (i32.const 13977) "Account other than in contribution\00")
(data (i32.const 14012) "Contribution already activated\00")
(data (i32.const 14043) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 14094) "error reading iterator\00")
(data (i32.const 14117) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 14176) "cannot pass end iterator to modify\00")
(data (i32.const 14211) "object passed to modify is not in multi_index\00")
(data (i32.const 14257) "cannot modify objects in table of another contract\00")
(data (i32.const 14308) "updater cannot change primary key when modifying an object\00")
(data (i32.const 14367) "write\00")
(data (i32.const 14373) "multiplication overflow\00")
(data (i32.const 14397) "multiplication underflow\00")
(data (i32.const 14422) "attempt to add asset with different symbol\00")
(data (i32.const 14465) "addition underflow\00")
(data (i32.const 14484) "addition overflow\00")
(data (i32.const 14502) "attempt to subtract asset with different symbol\00")
(data (i32.const 14550) "subtraction underflow\00")
(data (i32.const 14572) "subtraction overflow\00")
(data (i32.const 14593) "cannot create objects in table of another contract\00")
(data (i32.const 14644) "transfer\00")
(data (i32.const 14653) "string is too long to be a valid name\00")
(data (i32.const 14691) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 14758) "character is not in allowed character set for names\00")
(data (i32.const 14810) "{\00")
(data (i32.const 14812) "\"\00")
(data (i32.const 14814) ":\00")
(data (i32.const 14816) ",\00")
(data (i32.const 14818) "expireqr\00")
(data (i32.const 14827) "no balance object found\00")
(data (i32.const 14851) "overdrawn balance\00")
(data (i32.const 14869) "User has freezed balance\00")
(data (i32.const 14894) "QR Transfer creating restricted for multi owner accounts\00")
(data (i32.const 14951) "QR Transfer memo field must be a json format\00")
(data (i32.const 14996) "qrUserId\00")
(data (i32.const 15005) "QR Transfer must contain qrId field in memo\00")
(data (i32.const 15049) "qrSig\00")
(data (i32.const 15055) "QR Transfer must contain qrSig field in memo\00")
(data (i32.const 15100) "qrTTL\00")
(data (i32.const 15106) "QR Transfer must contain qrTTL field in memo\00")
(data (i32.const 15151) "\nUser key is: \00")
(data (i32.const 15166) "\nDuplicated id is: \00")
(data (i32.const 15186) "\nDuplicated user_key is: \00")
(data (i32.const 15212) "User has active qr with same id\00")
(data (i32.const 15244) "QrTransferWasCreated\00")
(data (i32.const 15265) "disbmtid\00")
(data (i32.const 15274) "transfer memo doesnt contain disbmtid\00")
(data (i32.const 15312) "Disbursement id does not exists\00")
(data (i32.const 15344) "Quantity other than disbursement allowed\00")
(data (i32.const 15385) "Disbursement status other than WAIT_SETTLE\00")
(data (i32.const 15428) "Initiator not a partner of organization\00")
(data (i32.const 15468) "\n\00")
(data (i32.const 15470) ": \00")
(data (i32.const 15473) " \00")
(data (i32.const 15475) "\'\00")
(data (i32.const 15477) "Cant convert string to asset\00")
(data (i32.const 15506) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 15555) "expirevoting\00")
(data (i32.const 15568) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 15601) "%lld%s%s %s\00")
(data (i32.const 15613) ".\00")
(data (i32.const 15616) "voting\00")
(data (i32.const 15623) "voting_created\00")
(data (i32.const 15638) "next primary key in table is at autoincrement limit\00")
(data (i32.const 15690) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 15744) "cannot decrement iterator at beginning of table\00")
(data (i32.const 15792) "Organization not found\00")
(data (i32.const 15815) "User not found\00")
(data (i32.const 15830) "Some account of partners does not exists\00")
(data (i32.const 15871) "Not allowed action for 2fa mode\00")
(data (i32.const 15903) "singleton does not exist\00")
(data (i32.const 15928) "read\00")
(data (i32.const 15933) "get\00")
(data (i32.const 15937) "object passed to erase is not in multi_index\00")
(data (i32.const 15982) "cannot erase objects in table of another contract\00")
(data (i32.const 16032) "attempt to remove object that was not in multi_index\00")
(data (i32.const 16085) "cannot increment end iterator\00")
(data (i32.const 16115) "Delete partner which not exists\00")
(data (i32.const 0) "\18?\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$4 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$11 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$12 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$13 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$14 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$15 (param i32 f64)))
(import "env" "memmove" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$17 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$18 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$20 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$22 (param i64 i64) (result f32)))
(import "env" "ripemd160" (func $fimport$23 (param i32 i32 i32)))
(import "env" "require_auth" (func $fimport$24 (param i64)))
(import "env" "is_account" (func $fimport$25 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$27 (result i64)))
(import "env" "db_store_i64" (func $fimport$28 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$29 (param i32 i64 i64 i64 i64)))
(import "env" "db_update_i64" (func $fimport$30 (param i32 i64 i32 i32)))
(import "env" "require_auth2" (func $fimport$31 (param i64 i64)))
(import "env" "current_time" (func $fimport$32 (result i64)))
(import "env" "db_remove_i64" (func $fimport$33 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$34 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$35 (param i32)))
(import "env" "assert_sha256" (func $fimport$36 (param i32 i32 i32)))
(import "env" "assert_sha1" (func $fimport$37 (param i32 i32 i32)))
(import "env" "assert_sha512" (func $fimport$38 (param i32 i32 i32)))
(import "env" "assert_ripemd160" (func $fimport$39 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$40 (param i32 i32 i32)))
(import "env" "__ashlti3" (func $fimport$41 (param i32 i64 i64 i32)))
(import "env" "sha1" (func $fimport$42 (param i32 i32 i32)))
(import "env" "sha512" (func $fimport$43 (param i32 i32 i32)))
(import "env" "recover_key" (func $fimport$44 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$45 (param i32 i32 i32 i32 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$46 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$47 (param i32 i64 i32)))
(import "env" "cancel_deferred" (func $fimport$48 (param i32) (result i32)))
(import "env" "require_recipient" (func $fimport$49 (param i64)))
(import "env" "prints" (func $fimport$50 (param i32)))
(import "env" "has_auth" (func $fimport$51 (param i64) (result i32)))
(import "env" "printui" (func $fimport$52 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$53 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$54 (param i32 i32) (result i32)))
(import "env" "eosio_exit" (func $fimport$55 (param i32)))
(import "env" "action_data_size" (func $fimport$56 (result i32)))
(import "env" "read_action_data" (func $fimport$57 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$58 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$59 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$60 (param i32 i32)))
(import "env" "send_deferred" (func $fimport$61 (param i32 i64 i32 i32 i32)))
(import "env" "db_idx64_store" (func $fimport$62 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$63 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$64 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$65 (param i32 i32) (result i32)))
(export "apply" (func $219))
(table $0 34 34 anyfunc)
(elem (i32.const 1) $17 $18 $19 $48 $50 $150 $166 $189 $105 $131 $154 $190 $76 $136 $125 $98 $81 $193 $192 $201 $173 $215 $213 $161 $77 $208 $115 $128 $163 $167 $101 $207 $212)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 16147))
(global $global$2 i32 (i32.const 16147))


void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $307(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $322(*($0 + [16]), $1, [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [14367])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $120 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [192])
	$global$0 = $4
	*($4 + [184]) = (int_64)-5335794350174113792
	*($4 + [176]) = $2
	$5 = CALL current_time()
	*((($4 + [112]) + [32])) = (int_64)0
	*(($4 + [152])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [124]) = [0]
	*($4 + [128]) = [0]
	*($4 + [136]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [132]) = $3
	*($4 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	$5 = *($0)
	*($4 + [56]) = [12241]
	*($4 + [60]) = CALL $2([12241])
	*($4 + [16]) = *($4 + [56])
	$6 = *(CALL $89(($4 + [64]), ($4 + [16])))
	$7 = *($0)
	*($4 + [40]) = [14818]
	*($4 + [44]) = CALL $2([14818])
	*($4 + [8]) = *($4 + [40])
	$3 = CALL $89(($4 + [48]), ($4 + [8]))
	*($4 + [32]) = $2
	*($4 + [24]) = $1
	*($4 + [72]) = $7
	*($4 + [80]) = *($3)
	*(($3 = CALL $9([16]))) = $5
	*($3 + [8]) = $6
	*((($4 + [72]) + [36])) = [0]
	$8 = ($3 + [16])
	*(($4 + [96])) = $8
	*(($4 + [92])) = $8
	*($4 + [88]) = $3
	*($4 + [100 align=4]) = (int_64)0
	CALL $95(($4 + [100]), [16])
	$3 = *($4 + [100])
	$8 = (*((($4 + [72]) + [32])) - $3)
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	
.LABEL $label$1
	$9 = (($4 + [24]) + [8])
	CALL memcpy($3, ($4 + [24]), [8])
	$3 = ($3 + [8])
	if ( ((int_32)($8 + [-8]) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	
.LABEL $label$2
	CALL memcpy($3, $9, [8])
	$8 = (($4 + [112]) + [40])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [156]))) ){ goto $label$5 }
	*($3) = *($4 + [72])
	*($3 + [16]) = [0]
	*(($3 + [8])) = *((($4 + [72]) + [8]))
	*(($9 = ($3 + [20]))) = (int_64)0
	$10 = ($4 + [88])
	*($3 + [16]) = *($10)
	$11 = (($4 + [72]) + [20])
	*($9) = *($11)
	$9 = (($4 + [72]) + [24])
	*(($3 + [24])) = *($9)
	*($9) = [0]
	*($3 + [28 align=4]) = (int_64)0
	*($11) = [0]
	*($10) = [0]
	*(($9 = ($3 + [36]))) = [0]
	$10 = ($4 + [100])
	*($3 + [28]) = *($10)
	$3 = (($4 + [72]) + [32])
	*(($3 + [32])) = *($3)
	$11 = (($4 + [72]) + [36])
	*($9) = *($11)
	*($3) = [0]
	*($10) = [0]
	*($11) = [0]
	*($8) = (*($8) + [40])
	$3 = *($4 + [88])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $122((($4 + [112]) + [36]), ($4 + [72]))
	$3 = *($4 + [100])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($4 + [104])) = $3
	CALL $11($3)
	
.LABEL $label$6
	$3 = *($4 + [88])
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [92])) = $3
	CALL $11($3)
	
.LABEL $label$3
	CALL cancel_deferred(($4 + [176]))
	CALL $123(($4 + [112]), ($4 + [176]), *($0), [0])
	CALL $124(($4 + [112]))
	$global$0 = ($4 + [192])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [60])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [56]) = *((*($3) + [52]))
	$3 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [33])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [24])
	$8 = ($1 + [56])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [36])
	$10 = ( *(($1 + [40])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$3 = ($10 + $3)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [36])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $3($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [32]) = $6
	*($5 + [36]) = $10
	*($5 + [44]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [40]) = ($1 + [48])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [64]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $189 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL require_auth($1)
	CALL $171(($0 + [136]), $2, *($0 + [32]))
	*(($5 + [40])) = [0]
	*($5 + [16]) = $2
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	*($5 + [44]) = [0]
	*($5 + [8]) = *($0)
	$6 = CALL $142(($5 + [8]), $3, [12675])
	$7 = *($6 + [8])
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$2 }
	CALL $184($0, $2, $3, *($0 + [29]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)*($6 + [16]) == (int_64)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [12943])
	$7 = *(($6 + [8]))
	
.LABEL $label$3
	if ( (($7 & [255]) == 0) ){ goto $label$4 }
	CALL eosio_assert([0], [12985])
	
.LABEL $label$4
	CALL $180(($5 + [8]), $6)
	
.LABEL $label$1
	CALL $145(($5 + [32]))
	$global$0 = ($5 + [48])
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $307(*($1), ($4 + [16]))
}

int_32 .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $247(*($1), ($0 + [24]))
}

void .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $53($2, ($1 + [24]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$6 = CALL $53(($2 + [16]), $1)
	CALL void $7((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $247(*($1), ($4 + [16]))
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $2
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	*($4) = $0
	CALL $41(*([0] + [8524]), [8279], $4)
	CALL $42([0])
	CALL abort()
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL $20($0)
	
.LABEL $label$5
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$6 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( (*(($0 + [20])) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$7 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$7
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($1 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	if ( (*([0] + [8240]) == 0) ){ goto $label$8 }
	$4 = CALL $42(*([0] + [8240]))
	
.LABEL $label$8
	$0 = *(CALL $24())
	if ( ($0 == 0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL $20($0)
	
.LABEL $label$11
	$3 = *($0 + [28])
	$2 = *($0 + [20])
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$12 }
	$5 = [0]
	if ( ((int_32)*(($0 + [76])) < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $20($0)
	$3 = *(($0 + [28]))
	$2 = *(($0 + [20]))
	
.LABEL $label$13
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$16 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	if ( *(($0 + [20])) ){ goto $label$16 }
	$2 = [-1]
	if ( $5 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$3 = *($0 + [8])
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$17 }
	CALL int_64 $0((int_32 (CASTING int_64)(int_32 ($2 - $3))), (int_64 [1]), (int_32 *($0 + [40])))
	
.LABEL $label$17
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*(($0 + [28])) = [0]
	*(($0 + [4])) = (int_64)0
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $21($0)
	
.LABEL $label$14
	$4 = ($2 | $4)
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$18 }
	CALL $21($0)
	
.LABEL $label$18
	$0 = *($0 + [56])
	if ( $0 ){ goto $label$10 }
	
.LABEL $label$9
	CALL $25()
	return $4
	
.LABEL $label$3
	$2 = [-1]
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	return $2
}

int_32 .FUNC $41 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $38($0, $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	
.LABEL $label$18
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($3, *($1))
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$4 = *($1)
	*($0 + [8]) = *($1 + [8])
	*($0) = $4
	$global$0 = ($3 + [16])
	$1
}

int_32 .FUNC $47 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [4] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $49($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $49($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $49($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $49($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [11072]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $49($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $49($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $49($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $45 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $44 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $167 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth($1)
	CALL $168(($3 + [64]), $0, $1, $1, [1])
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	CALL $169(($3 + [48]), $2)
	*(($4 = (($3 + [32]) + [8]))) = *(($3 + [104]))
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [32]) = *($3 + [96])
	$2 = (*($3 + [52]) - *($3 + [48]))
	$5 = ((int_32)$2 / (int_32)[12])
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$1 }
	$6 = CALL $9($2)
	*(($3 + [24])) = ($6 + ((int_32)$5 * (int_32)[12]))
	*($3 + [16]) = $6
	*($3 + [20]) = $6
	$5 = *($3 + [52])
	$2 = *($3 + [48])
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL $53($6, $2)
	$6 = (*($3 + [20]) + [12])
	*($3 + [20]) = $6
	$2 = ($2 + [12])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$2
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $170($0, $1, $3, [8], ($3 + [16]))
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = *($3 + [20])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($6 + [-4])))
	
.LABEL $label$8
	$6 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$2 = *($3 + [16])
	goto $label$5 
	
.LABEL $label$6
	$2 = $5
	
.LABEL $label$5
	*($3 + [20]) = $5
	CALL $11($2)
	
.LABEL $label$4
	$5 = *($3 + [48])
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = *($3 + [52])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($6 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [-4])))
	
.LABEL $label$13
	$6 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$12 }
	$2 = *($3 + [48])
	goto $label$10 
	
.LABEL $label$11
	$2 = $5
	
.LABEL $label$10
	*($3 + [52]) = $5
	CALL $11($2)
	
.LABEL $label$9
	$2 = *(($3 + [84]))
	if ( ($2 == 0) ){ goto $label$14 }
	*(($3 + [88])) = $2
	CALL $11($2)
	
.LABEL $label$14
	$global$0 = ($3 + [112])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($3 + [16]))
}

void .FUNC $166 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	$2 = CALL $53($3, $2)
	CALL $167($0, $1, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$7 = *($5)
	$5 = *($4 + [4])
	$6 = *($5 + [4])
	*($1 + [8]) = uint_32(($6 - $7) >> [4])
	$8 = *($0)
	$4 = *($4 + [8])
	$9 = ($1 + [12])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$1 }
	CALL $348($9, $7, $6)
	
.LABEL $label$1
	$6 = ($1 + [8])
	*($1 + [9]) = *($4 + [49])
	$7 = ($1 + [9])
	$10 = *($1 + [12])
	$5 = *(($1 + [16]))
	$11 = ($5 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [4]))
	$4 = [10]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$3 }
	$4 = ((((int_32)uint_32(($11 + [-16]) >> [4]) * (int_32)[9]) + $4) + [9])
	
.LABEL $label$3
	if ( ($4 <= [513]) ){ goto $label$5 }
	$5 = CALL $3($4)
	goto $label$4 
	
.LABEL $label$5
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$4
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $7
	*($3 + [44]) = $9
	CALL $185(($3 + [32]), ($3 + [24]))
	$12 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($8 + [8]), (int_64)-6496020250016874496, *(*($0 + [8])), $12, $5, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$12 >= (uint_64)*($8 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($5)
	if ( (uint_64)($12 <= *($8 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$6 = int_32($7 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $9(($6 << [4]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [4])))) = *($1)
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $11($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $163 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [64]) = $1
	CALL require_auth($1)
	CALL $155(($2 + [48]), $0, $1)
	$3 = [0]
	*($2 + [40]) = [0]
	*($2 + [32]) = (int_64)0
	$5 = *($2 + [52])
	$4 = *($2 + [48])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$6 = ($5 + [-8])
	$7 = (($2 + [16]) + [8])
	$5 = [0]
	
.LOOP $label$2:
	$1 = *($4)
	*($7) = [1]
	*($2 + [16]) = $1
	if ( ((uint_32)$5 >= (uint_32)$3) ){ goto $label$4 }
	*($5) = *($2 + [16])
	*(($5 + [8])) = *($7)
	*($2 + [36]) = ($5 + [16])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	CALL $164(($2 + [32]), ($2 + [16]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$1 }
	
.LABEL $label$3
	$4 = ($4 + [8])
	$3 = *((($2 + [32]) + [8]))
	$5 = *($2 + [36])
	goto $label$2 
	
.LABEL $label$1
	$1 = *($0)
	*($2 + [8]) = $0
	*($2 + [4]) = ($2 + [32])
	*($2) = ($2 + [64])
	*($2 + [88]) = $1
	$5 = ($0 + [136])
	if ( ((int_64)*($0 + [136]) == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$5
	*($2 + [16]) = $5
	*($2 + [20]) = $2
	*($2 + [24]) = ($2 + [88])
	*(($4 = CALL $9([40]))) = (int_64)0
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [20]) = [0]
	*($4 + [24]) = $5
	CALL $165(($2 + [16]), $4)
	*($2 + [80]) = $4
	$1 = *($4)
	*($2 + [16]) = $1
	$3 = *($4 + [28])
	*($2 + [76]) = $3
	$7 = ($0 + [164])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [168]))) ){ goto $label$10 }
	*($5 + [8]) = $1
	*($5 + [16]) = $3
	*($2 + [80]) = [0]
	*($5) = $4
	*($7) = ($5 + [24])
	$4 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $159(($0 + [160]), ($2 + [80]), ($2 + [16]), ($2 + [76]))
	$4 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $4 ){ goto $label$8 }
	
.LABEL $label$9
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$5 = *($4 + [12])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($4 + [16])) = $5
	CALL $11($5)
	
.LABEL $label$11
	CALL $11($4)
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*($2 + [36]) = $4
	CALL $11($4)
	
.LABEL $label$6
	$4 = *($2 + [48])
	if ( ($4 == 0) ){ goto $label$12 }
	*($2 + [52]) = $4
	CALL $11($4)
	
.LABEL $label$12
	$global$0 = ($2 + [96])
}

void .FUNC $162 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [9]) = *(*($3))
	$6 = ($1 + [12])
	$7 = ($1 + [9])
	$9 = *($1 + [12])
	$8 = *(($1 + [16]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	$12 = *($1)
	$3 = [10]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$3 = ((((int_32)uint_32(($10 + [-16]) >> [4]) * (int_32)[9]) + $3) + [9])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $3($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $7
	*($5 + [44]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	CALL $185(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$12 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($12 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $161 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = CALL db_lowerbound_i64(*($0 + [136]), *(($0 + [144])), (int_64)-6496020250016874496, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$3 = ($0 + [136])
	$4 = CALL $138($3, $2)
	$5 = ($0 + [49])
	$6 = (($1 + [8]) + [8])
	$7 = ($0 + [48])
	
.LOOP $label$3:
	*($1 + [39]) = *($5)
	CALL $155(($1 + [24]), $0, *($4))
	*($6) = [0]
	*($1 + [8]) = (int_64)0
	$10 = ($4 + [16])
	$2 = (*($10) - *($4 + [12]))
	if ( ($2 == 0) ){ goto $label$6 }
	$9 = int_32($2 >> [4])
	if ( ((uint_32)$9 >= (uint_32)[268435456]) ){ goto $label$1 }
	$2 = CALL $9($2)
	*($6) = ($2 + ($9 << [4]))
	*($1 + [8]) = $2
	*($1 + [12]) = $2
	$10 = *(($4 + [12]))
	$8 = (*($10) - $10)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $10, $8)
	$2 = *($1 + [12])
	$11 = ($2 + $8)
	*($1 + [12]) = $11
	$9 = *($1 + [8])
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$6 }
	$10 = *($1 + [28])
	$12 = *($1 + [24])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$7 }
	$2 = (($2 + ($8 & [-16])) - $9)
	$10 = *($7)
	
.LOOP $label$8:
	$2 = ($2 + [-16])
	if ( $2 ){ goto $label$8 }
	*($1 + [39]) = $10
	if ( ((int_32)*($1 + [39]) != (int_32)*($4 + [9])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	
.LOOP $label$9:
	$13 = *($9)
	$2 = $12
	
.LOOP $label$12:
	if ( ((int_64)*($2) == (int_64)$13) ){ goto $label$11 }
	$2 = ($2 + [8])
	if ( ((int_32)$10 != (int_32)$2) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$10 }
	$9 = ($9 + [16])
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$10
	*($1 + [39]) = *($7)
	$9 = ($9 + [16])
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)*($1 + [39]) == (int_32)*($4 + [9])) ){ goto $label$4 }
	
.LABEL $label$5
	$13 = *($0)
	*($1 + [40]) = ($1 + [39])
	CALL $162($3, $4, $13, ($1 + [40]))
	
.LABEL $label$4
	$2 = *($4 + [28])
	$4 = [0]
	$2 = CALL db_next_i64($2, ($1 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $138($3, $2)
	
.LABEL $label$13
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$14 }
	*($1 + [12]) = $2
	CALL $11($2)
	
.LABEL $label$14
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$15 }
	*($1 + [28]) = $2
	CALL $11($2)
	
.LABEL $label$15
	if ( $4 ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($1 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($1 + [8]))
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $9(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $11($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $59(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $51(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [11152], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $59(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $59(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $9(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $53(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $11($3)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *(($5 + [16]))
	$5 = CALL $171(($1 + [136]), $2, *($1 + [32]))
	$1 = *($5 + [12])
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$1 }
	
.LOOP $label$2:
	if ( ((int_64)*($1) == (int_64)$3) ){ goto $label$1 }
	$1 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$2 }
	$1 = $6
	
.LABEL $label$1
	$6 = ((int_32)$1 != (int_32)$6)
	if ( $6 ){ goto $label$3 }
	if ( $4 ){ goto $label$3 }
	*($0 + [8]) = (int_64)0
	*($0) = [0]
	*($0 + [32]) = (int_64)0
	*(($0 + [16])) = [0]
	*(($0 + [20])) = (int_64)0
	*(($0 + [28])) = [0]
	*(($0 + [40])) = [0]
	return 
	
.LABEL $label$3
	if ( $6 ){ goto $label$4 }
	CALL eosio_assert([0], [15428])
	
.LABEL $label$4
	*($0) = [1]
	*(($0 + [16])) = *(($5 + [8]))
	*($0 + [8]) = *($5)
	*(($7 = ($0 + [20]))) = [0]
	*(($0 + [24])) = (int_64)0
	$6 = (*(($5 + [16])) - *(($5 + [12])))
	if ( ($6 == 0) ){ goto $label$6 }
	$4 = int_32($6 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$5 }
	$6 = CALL $9($6)
	*(($0 + [20])) = $6
	*(($0 + [28])) = ($6 + ($4 << [4]))
	*(($4 = ($0 + [24]))) = $6
	$7 = *(($5 + [12]))
	$5 = (*(($5 + [16])) - $7)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $7, $5)
	*($4) = (*($4) + $5)
	
.LABEL $label$6
	*($0 + [32]) = *($1)
	*(($0 + [40])) = *(($1 + [8]))
	return (unreachable)
	
.LABEL $label$5
	CALL $44($7)
}

int_32 .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $46(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $2($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $56($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $11($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $56($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $241 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [448])
	$global$0 = $3
	*(($4 = $3) + [392]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = (int_64)0
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [432]) = ($4 + [320])
	*($4 + [24]) = ($4 + [336])
	CALL $253(($4 + [24]), ($4 + [432]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [400]) + [8])) = $3
	*(($6 = (($4 + [416]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [416]) = $7
	*($4 + [400]) = $7
	$3 = *($6)
	*((($4 + [432]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [416])
	*($4 + [40]) = $1
	*($4 + [432]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [436]) = ($4 + [392])
	*($4 + [432]) = ($4 + [24])
	CALL $254(($4 + [432]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( (*($4 + [376]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [348]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*(($4 + [384])))
	if ( ((*($4 + [348]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($4 + [356])))
	$2 = [1]
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [336]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [448])
	return $2
	
.LABEL $label$5
	CALL $11(*(($4 + [344])))
	$global$0 = ($4 + [448])
	return $2
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($1 + [1])
	$4 = ($1 + [4])
	$5 = ($1 + [8])
	$6 = $2
	
.LOOP $label$3:
	$11 = ($9 <= $10)
	$7 = ($7 & [1])
	$7 = *($0 + [16])
	$10 = ( *(($0 + [20])) ? uint_32($7 >> [1]) : $7 )
	$8 = ($7 & [1])
	$7 = *($1)
	$9 = ( *($4) ? uint_32($7 >> [1]) : $8 )
	$12 = ( $9 ? $10 : $11 )
	if ( ($12 == 0) ){ goto $label$5 }
	$7 = CALL $46(( *(($0 + [24])) ? (($0 + [16]) + [1]) : $7 ), ( *($5) ? $3 : $8 ), $12)
	if ( $7 ){ goto $label$4 }
	
.LABEL $label$5
	$7 = ( [-1] ? $11 : ($10 <= $9) )
	
.LABEL $label$4
	$6 = ( $6 ? $0 : ((int_32)$7 < (int_32)[0]) )
	$0 = *(($0 + (uint_32($7 >> [29]) & [4])))
	if ( $0 ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$2 }
	$10 = ($7 & [1])
	$7 = *($1)
	$7 = ( *(($1 + [4])) ? uint_32($7 >> [1]) : $10 )
	$9 = ($0 & [1])
	$0 = *($6 + [16])
	$0 = ( *($6 + [20]) ? uint_32($0 >> [1]) : $9 )
	$8 = ( $0 ? $7 : ($0 <= $7) )
	if ( ($8 == 0) ){ goto $label$6 }
	$9 = CALL $46(( *(($1 + [8])) ? $3 : $10 ), ( *($6 + [24]) ? (($6 + [16]) + [1]) : $9 ), $8)
	if ( ($9 == 0) ){ goto $label$6 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	if ( ((uint_32)$7 >= (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = $2
	
.LABEL $label$1
	return $6
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL sha256($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8314])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $68 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $59(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $51(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [11177], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $59(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $59(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $248 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $53(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $53(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $247(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $246 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [280]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [284])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $11($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [280]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$2 = *(($0 + [240]))
	if ( ($2 == 0) ){ goto $label$6 }
	$5 = ($0 + [244])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	$1 = *($4 + [44])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($4 + [48])) = $1
	CALL $11($1)
	
.LABEL $label$11
	CALL $11($4)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [240]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $2
	
.LABEL $label$7
	*($5) = $2
	CALL $11($3)
	
.LABEL $label$6
	$1 = *(($0 + [200]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [204])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $11($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [200]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$12
	$2 = *(($0 + [160]))
	if ( ($2 == 0) ){ goto $label$17 }
	$5 = ($0 + [164])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$21 }
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$22 }
	*(($4 + [16])) = $1
	CALL $11($1)
	
.LABEL $label$22
	CALL $11($4)
	
.LABEL $label$21
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($0 + [160]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $2
	
.LABEL $label$18
	*($5) = $2
	CALL $11($3)
	
.LABEL $label$17
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$23 }
	$2 = ($0 + [124])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$27 }
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*(($4 + [24])))
	
.LABEL $label$28
	CALL $11($4)
	
.LABEL $label$27
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$26 }
	$3 = *(($0 + [120]))
	goto $label$24 
	
.LABEL $label$25
	$3 = $1
	
.LABEL $label$24
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$23
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$29 }
	$2 = ($0 + [84])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$31 }
	
.LOOP $label$32:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$33 }
	if ( ((*($3 + [36]) & [1]) == 0) ){ goto $label$34 }
	CALL $11(*(($3 + [44])))
	
.LABEL $label$34
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$35
	CALL $11($3)
	
.LABEL $label$33
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$32 }
	$3 = *(($0 + [80]))
	goto $label$30 
	
.LABEL $label$31
	$3 = $1
	
.LABEL $label$30
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$29
	return $0
}

int_32 .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $277($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $57($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $57($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $52($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	CALL $247(*($1), ($4 + [8]))
	$3 = ($4 + [20])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [32])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2) = $4
	CALL $357($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $53(($2 + [64]), ($1 + [8]))
	*(($5 = (($2 + [48]) + [8]))) = *(($1 + [32]))
	*(($6 = (($2 + [32]) + [8]))) = *(($1 + [56]))
	*($2 + [48]) = *($1 + [24])
	*($2 + [32]) = *($1 + [48])
	$7 = *($1 + [20])
	$8 = *($1 + [40])
	$9 = *($1 + [64])
	$10 = *($1 + [72])
	*((($2 + [96]) + [8])) = *($6)
	*((($2 + [80]) + [8])) = *($5)
	*($2 + [96]) = *($2 + [32])
	*($2 + [80]) = *($2 + [48])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*($0) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$5 = CALL $53(($2 + [144]), $4)
	$11 = *((($2 + [80]) + [8]))
	*((($2 + [128]) + [8])) = $11
	$12 = *((($2 + [96]) + [8]))
	*((($2 + [112]) + [8])) = $12
	*((($2 + [16]) + [8])) = $11
	*(($2 + [8])) = $12
	$11 = *($2 + [80])
	*($2 + [128]) = $11
	$12 = *($2 + [96])
	*($2 + [112]) = $12
	*($2 + [16]) = $11
	*($2) = $12
	CALL void $0((int_32 $3), (int_64 $5), (int_32 ($7 & [255])), (int_32 ($2 + [16])), (int_32 ($8 & [65535])), (int_32 $2), (int_32 ($9 & [65535])), (int_32 $10), (int_64 $1))
	if ( (*($2 + [144]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

int_32 .FUNC $242 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [336]) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	*($4 + [384]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $266(($4 + [16]), ($4 + [384]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($8 = (($4 + [368]) + [8]))) = $3
	$9 = *($4)
	*($4 + [368]) = $9
	*($4 + [352]) = $9
	$3 = *($8)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [368])
	*($4 + [32]) = $1
	*($4 + [384]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [344])
	$8 = *($4 + [336])
	$1 = *($4 + [328])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [16]))
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $243 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [416])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [328]) + [24])) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [400]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $267(($4 + [16]), ($4 + [400]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [368]) + [8])) = $3
	*(($6 = (($4 + [384]) + [8]))) = $3
	$7 = *($4)
	*($4 + [384]) = $7
	*($4 + [368]) = $7
	$3 = *($6)
	*((($4 + [400]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [384])
	*($4 + [32]) = $1
	*($4 + [400]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [44]) = [513]
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*($4 + [404]) = ($4 + [360])
	*($4 + [400]) = ($4 + [16])
	CALL $268(($4 + [400]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [16]))
	if ( ((*($4 + [344]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [352])))
	
.LABEL $label$5
	$global$0 = ($4 + [416])
	return [1]
}

int_32 .FUNC $240 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [296]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($4 + [296]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [28]) = [513]
	*($4 + [32]) = [15792]
	*($4 + [36]) = [15815]
	*($4 + [40]) = [15830]
	*($4 + [44]) = [15871]
	*($4 + [48]) = (int_64)72060901179523328
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [104])) = $0
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = [0]
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*($4 + [216]) = $0
	*(($4 + [244])) = (int_64)0
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*($4 + [256]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [296])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $246($4)
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $60($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $84 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*(($4 + [56])) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = *($0)
	*($4 + [24]) = $5
	$6 = *($2 + [8])
	*($4 + [32]) = $1
	$7 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $92(($4 + [24]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($4 + [24])) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$4
	$1 = *($0)
	*($4 + [8]) = $2
	CALL $93(($4 + [24]), $7, $1, ($4 + [8]))
	$7 = *($4 + [48])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($0)
	*($4 + [16]) = $2
	CALL $94(($4 + [8]), ($4 + [24]), $1, ($4 + [16]))
	$7 = *($4 + [48])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [52])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $11($0)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($4 + [48]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL $11($2)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $9($7)
	*((($6 + [48]) + [8])) = ($7 + ($8 << [4]))
	*($6 + [48]) = $7
	*($6 + [52]) = $7
	$9 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $9, $8)
	*($6 + [52]) = ($7 + $8)
	
.LABEL $label$2
	$10 = *($1)
	*(($6 + [40])) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($2)
	*($6 + [16]) = *($3)
	*($6 + [24]) = *($4)
	$7 = ($6 + [32])
	$1 = CALL $2($5)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*(($6 + [32])) = ($1 << [1])
	$7 = ($7 + [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = (($1 + [16]) & [-16])
	$7 = CALL $9($2)
	*(($6 + [40])) = $7
	*(($6 + [36])) = $1
	*($6 + [32]) = ($2 | [1])
	
.LABEL $label$5
	CALL memcpy($7, $5, $1)
	
.LABEL $label$4
	*(($7 + $1)) = [0]
	*($0 + [8]) = (int_64)3849304916161986560
	*($0) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($0 + [16]) = *($6 + [48])
	*(($0 + [24])) = *(($6 + [56]))
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	$1 = *($6 + [32])
	$5 = ( *((($6 + [8]) + [28])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [24])
	$10 = (CASTING uint_64)(uint_32 $5)
	$5 = ($0 + [28])
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $95($5, $1)
	$5 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	$1 = [0]
	
.LABEL $label$8
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $5
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = ($6 + [8])
	CALL $332(($6 + [88]), ($6 + [80]))
	if ( ((*(($6 + [32])) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$10
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$11 }
	*($6 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$3
	CALL $52($7)
	
.LABEL $label$1
	CALL $44(($6 + [48]))
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14422])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14465])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14484])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-80])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-4])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [24])
	*($4 + [44]) = ($1 + [32])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [72])
	*($4 + [60]) = ($1 + [80])
	CALL $79(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [92]), (int_64)0, $3, [76])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [64])
}

void .FUNC $82 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [56]) = [0]
	*($4 + [48]) = (int_64)0
	$5 = *($3)
	$6 = ($5 & [1])
	$7 = ( *($3 + [8]) ? ($3 + [1]) : $6 )
	if ( ((int_32)*($7) != (int_32)[123]) ){ goto $label$6 }
	if ( ((int_32)*((($7 + ( *($3 + [4]) ? uint_32($5 >> [1]) : $6 )) + [-1])) != (int_32)[125]) ){ goto $label$6 }
	CALL $86(($4 + [32]), $0, $3)
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$3 = CALL $2([13859])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [16]) = ($3 << [1])
	$5 = (($4 + [16]) | [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $55(($4 + [48]), $3)
	goto $label$2 
	
.LABEL $label$5
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($4 + [16]) = ($6 | [1])
	*($4 + [24]) = $5
	*($4 + [20]) = $3
	
.LABEL $label$4
	CALL memcpy($5, [13859], $3)
	
.LABEL $label$3
	*(($5 + $3)) = [0]
	$3 = CALL $87(($4 + [32]), ($4 + [16]))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($4 + [24]))
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)(($4 + [32]) | [4])) ){ goto $label$8 }
	CALL eosio_assert([0], [13869])
	
.LABEL $label$8
	CALL $55(($4 + [48]), ($3 + [28]))
	CALL $88(($4 + [32]), *($4 + [36]))
	
.LABEL $label$2
	$3 = *($4 + [48])
	$5 = ($3 & [1])
	*($4 + [8]) = ( *(($4 + [56])) ? (($4 + [48]) | [1]) : $5 )
	*($4 + [12]) = ( *($4 + [52]) ? uint_32($3 >> [1]) : $5 )
	*($4) = *($4 + [8])
	$8 = *(CALL $89(($4 + [32]), $4))
	$9 = ($0 + [96])
	$5 = *(($0 + [124]))
	$7 = *(($0 + [120]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$3 = ($5 + [-24])
	$6 = *($3)
	if ( ((int_64)*($6) == (int_64)$8) ){ goto $label$11 }
	$5 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*(($6 + [52])) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	goto $label$9 
	
.LABEL $label$10
	$6 = [0]
	$3 = CALL db_find_i64(*($9), *(($0 + [104])), (int_64)4983122731445780480, $8)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $90($9, $3)
	if ( ((int_32)*($6 + [52]) == (int_32)$9) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13908])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($6 + [40]))) ){ goto $label$13 }
	CALL eosio_assert([0], [14117])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($2) <= (int_64)*($6 + [32])), [13940])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)$1), [13977])
	CALL eosio_assert(((int_32)*($0 + [55]) != (int_32)*($6 + [48])), [14012])
	$8 = *($0)
	*($4 + [32]) = $0
	if ( $6 ){ goto $label$14 }
	CALL eosio_assert([0], [14176])
	
.LABEL $label$14
	CALL $91($9, $6, $8, ($4 + [32]))
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($4 + [56])))
	
.LABEL $label$15
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $52(($4 + [16]))
}

void .FUNC $149 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [60])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [56]) = *(*($3) + [51])
	*($1 + [48]) = *(*($3 + [4]))
	$3 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [33])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [24])
	$8 = ($1 + [56])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [36])
	$10 = ( *(($1 + [40])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$3 = ($10 + $3)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [36])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $3($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [32]) = $6
	*($5 + [36]) = $10
	*($5 + [44]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [40]) = ($1 + [48])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [64]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $81 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$4 = ($global$0 - [240])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = [1]
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [11603])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = uint_32($5 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($5 <= [257]), [11797])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$9 }
	$5 = uint_32($5 >> [1])
	goto $label$8 
	
.LABEL $label$9
	$5 = *($3 + [4])
	
.LABEL $label$8
	$9 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [11826])
	*(($4 + [232])) = [0]
	*($4 + [216]) = (int_64)-1
	*($4 + [224]) = (int_64)0
	$7 = *($0)
	*($4 + [200]) = $7
	*($4 + [208]) = $6
	$11 = [0]
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $78(($4 + [200]), $5)
	if ( ((int_32)*($11 + [88]) == (int_32)($4 + [200])) ){ goto $label$10 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [11847])
	CALL require_auth(*($11 + [24]))
	$12 = ($2 + [8])
	$13 = *($12)
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)$13 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$7 = $6
	$9 = [1]
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$7 = $6
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$15 }
	$9 = [1]
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert($9, [11919])
	CALL eosio_assert(((int_64)$8 > (int_64)0), [11936])
	CALL eosio_assert(((int_64)$13 == (int_64)*($11 + [16])), [11965])
	*(($9 = (($4 + [184]) + [8]))) = *($12)
	*($4 + [184]) = *($2)
	$5 = CALL $53(($4 + [168]), $3)
	*((($4 + [64]) + [8])) = *($9)
	*($4 + [64]) = *($4 + [184])
	CALL $82($0, $1, ($4 + [64]), $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*($5 + [8]))
	$13 = *(($2 + [8]))
	$8 = *($2)
	
.LABEL $label$16
	CALL __multi3(($4 + [48]), $8, (int_64)$8 >> (int_64)63), *($11 + [48]), (int_64)0)
	$7 = *(($4 + [56]))
	$8 = *($4 + [48])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ) == 0) ){ goto $label$18 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$17 }
	CALL eosio_assert([0], [14397])
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [14373])
	
.LABEL $label$17
	$7 = ((int_64)$8 / (int_64)10000)
	$8 = *($11 + [32])
	$6 = *(($11 + [40]))
	if ( ((int_64)$13 == (int_64)$6) ){ goto $label$19 }
	CALL eosio_assert([0], [14422])
	
.LABEL $label$19
	$7 = ((int_64)$8 + (int_64)$7)
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [14484])
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [14465])
	
.LABEL $label$20
	$8 = *($2)
	$14 = *(($2 + [8]))
	if ( ((int_64)$6 == (int_64)$14) ){ goto $label$22 }
	CALL eosio_assert([0], [14502])
	
.LABEL $label$22
	$13 = (int_64)
	if ( ((int_64)$13($8 - $7)) <= (int_64)-4611686018427387904) ){ goto $label$24 }
	if ( ((int_64)$13 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [14572])
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [14550])
	
.LABEL $label$23
	*($4 + [160]) = $2
	CALL $83(($4 + [200]), $11, ($4 + [160]))
	$5 = ($11 + [24])
	$8 = *($5)
	*(($9 = (($4 + [144]) + [8]))) = *(($2 + [8]))
	$15 = *($2)
	*((($4 + [32]) + [8])) = *($9)
	*($4 + [144]) = $15
	*($4 + [32]) = *($4 + [144])
	CALL $84($0, $8, ($4 + [32]), $8)
	$8 = *($5)
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$26 }
	*($4 + [128]) = $13
	*($4 + [136]) = $14
	$13 = *($0)
	$5 = CALL $53(($4 + [112]), $3)
	*((($4 + [16]) + [8])) = *($4 + [136])
	*($4 + [16]) = *($4 + [128])
	CALL $85($0, $13, $8, $1, ($4 + [16]), $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$27 }
	CALL $11(*($5 + [8]))
	
.LABEL $label$27
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$26 }
	$8 = *(($11 + [24]))
	*(($4 + [88])) = [0]
	*($4 + [96]) = $7
	*($4 + [104]) = $6
	*($4 + [80]) = (int_64)0
	$7 = *($11 + [80])
	$6 = *($0)
	$5 = CALL $2([11991])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [80]) = ($5 << [1])
	$9 = (($4 + [80]) | [1])
	if ( $5 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$10 = (($5 + [16]) & [-16])
	$9 = CALL $9($10)
	*($4 + [80]) = ($10 | [1])
	*($4 + [88]) = $9
	*($4 + [84]) = $5
	
.LABEL $label$29
	CALL memcpy($9, [11991], $5)
	
.LABEL $label$28
	*(($9 + $5)) = [0]
	*(($4 + [8])) = *((($4 + [96]) + [8]))
	*($4) = *($4 + [96])
	CALL $85($0, $6, $8, $7, $4, ($4 + [80]))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$26 }
	CALL $11(*($4 + [88]))
	
.LABEL $label$26
	$10 = *($4 + [224])
	if ( ($10 == 0) ){ goto $label$31 }
	$2 = ($4 + [228])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$33 }
	
.LOOP $label$34:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$35 }
	CALL $11($9)
	
.LABEL $label$35
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$34 }
	$5 = *(($4 + [224]))
	goto $label$32 
	
.LABEL $label$33
	$5 = $10
	
.LABEL $label$32
	*($2) = $10
	CALL $11($5)
	
.LABEL $label$31
	$global$0 = ($4 + [240])
	return (unreachable)
	
.LABEL $label$25
	CALL $52(($4 + [80]))
}

int_32 .FUNC $145 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [56])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [60])) = $4
	CALL $11($4)
	
.LABEL $label$6
	$4 = *($3 + [44])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [48])) = $4
	CALL $11($4)
	
.LABEL $label$7
	$5 = *($3 + [28])
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($3 + [32])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($7 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($7 + [-4])))
	
.LABEL $label$12
	$7 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($3 + [28]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $11($4)
	
.LABEL $label$8
	CALL $11($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$4 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $11($4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $64 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([160])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = [0]
	*($3 + [120]) = [0]
	*($3 + [124]) = [0]
	*($3 + [128]) = (int_64)0
	$2 = CALL current_time()
	*($3 + [140 align=4]) = (int_64)0
	*($3 + [148]) = $1
	*($3 + [136]) = ((uint_64)$2 / (uint_64)(int_64)1000000)
	CALL $319(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [152])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $320(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [16])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_64 .FUNC $146 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = $1
	*($2 + [16]) = (int_64)2500
	$3 = ($0 + [256])
	$5 = *(($0 + [284]))
	$4 = *(($0 + [280]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [264])), (int_64)5037711959185686528, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $316($3, $6)
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$2
	*($2 + [8]) = ((int_64)*($7 + [8]) + (int_64)1)
	$1 = *($0)
	*($2) = ($2 + [8])
	CALL $317($3, $7, $1, $2)
	$1 = *($2 + [8])
	$global$0 = ($2 + [32])
	return $1
	
.LABEL $label$1
	$1 = *($0)
	*($2 + [12]) = ($2 + [16])
	*($2 + [8]) = ($2 + [24])
	CALL $318($2, $3, $1, ($2 + [8]))
	$1 = *($2 + [16])
	$global$0 = ($2 + [32])
	return $1
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*($4 + [72]) = $3
	*($4 + [64]) = [0]
	*($4 + [56]) = (int_64)0
	$5 = *($1)
	$6 = ($5 & [1])
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $6 )
	if ( ((int_32)*($7) != (int_32)[123]) ){ goto $label$6 }
	if ( ((int_32)*((($7 + ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )) + [-1])) != (int_32)[125]) ){ goto $label$6 }
	CALL $86(($4 + [40]), $0, $1)
	*(($4 + [32])) = [0]
	*($4 + [24]) = (int_64)0
	$1 = CALL $2([15265])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [24]) = ($1 << [1])
	$5 = (($4 + [24]) | [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $55(($4 + [56]), $1)
	goto $label$2 
	
.LABEL $label$5
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $9($6)
	*($4 + [24]) = ($6 | [1])
	*($4 + [32]) = $5
	*($4 + [28]) = $1
	
.LABEL $label$4
	CALL memcpy($5, [15265], $1)
	
.LABEL $label$3
	*(($5 + $1)) = [0]
	$1 = CALL $87(($4 + [40]), ($4 + [24]))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($4 + [32]))
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)(($4 + [40]) | [4])) ){ goto $label$8 }
	CALL eosio_assert([0], [15274])
	
.LABEL $label$8
	CALL $55(($4 + [56]), ($1 + [28]))
	CALL $88(($4 + [40]), *($4 + [44]))
	
.LABEL $label$2
	$1 = *($4 + [56])
	$5 = ($1 & [1])
	*($4 + [16]) = ( *(($4 + [64])) ? (($4 + [56]) | [1]) : $5 )
	*($4 + [20]) = ( *($4 + [60]) ? uint_32($1 >> [1]) : $5 )
	*($4 + [8]) = *($4 + [16])
	$3 = *(CALL $89(($4 + [40]), ($4 + [8])))
	$8 = ($0 + [56])
	$5 = *(($0 + [84]))
	$7 = *(($0 + [80]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$12:
	$1 = ($5 + [-24])
	$6 = *($1)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$11 }
	$5 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*(($6 + [60])) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	goto $label$9 
	
.LABEL $label$10
	$6 = [0]
	$1 = CALL db_find_i64(*($8), *(($0 + [64])), (int_64)5453992632067817472, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $102($8, $1)
	if ( ((int_32)*($6 + [60]) == (int_32)$8) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [15312])
	if ( ((int_64)*($2 + [8]) == (int_64)*(($6 + [16]))) ){ goto $label$13 }
	CALL eosio_assert([0], [14117])
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($2) == (int_64)*($6 + [8])), [15344])
	CALL eosio_assert(((int_32)*($0 + [50]) == (int_32)*($6 + [56])), [15385])
	$3 = *($0)
	*($4 + [40]) = $0
	*($4 + [44]) = ($4 + [72])
	if ( $6 ){ goto $label$14 }
	CALL eosio_assert([0], [14176])
	
.LABEL $label$14
	CALL $149($8, $6, $3, ($4 + [40]))
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($4 + [64])))
	
.LABEL $label$15
	$global$0 = ($4 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $52(($4 + [24]))
}

void .FUNC $140 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$5 = ($global$0 - [368])
	$global$0 = $5
	CALL $107(($5 + [264]), ($0 + [216]))
	if ( ((int_64)*($5 + [280]) != (int_64)$2) ){ goto $label$1 }
	$6 = ($0 + [136])
	$8 = *(($0 + [164]))
	$7 = *(($0 + [160]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$7:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$6 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	if ( ((int_32)*($10 + [24]) == (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	if ( ((int_32)*($10 + [9]) == (int_32)*($0 + [48])) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$9 = CALL db_find_i64(*($6), *(($0 + [144])), (int_64)-6496020250016874496, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$10 = CALL $138($6, $9)
	if ( ((int_32)*($10 + [24]) == (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$4
	if ( ((int_32)*($10 + [9]) != (int_32)*($0 + [48])) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [14894])
	
.LABEL $label$2
	$9 = *($4)
	$8 = ($9 & [1])
	$10 = ( *($4 + [8]) ? ($4 + [1]) : $8 )
	if ( ((int_32)*($10) != (int_32)[123]) ){ goto $label$9 }
	if ( ((int_32)*((($10 + ( *($4 + [4]) ? uint_32($9 >> [1]) : $8 )) + [-1])) == (int_32)[125]) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [14951])
	
.LABEL $label$8
	CALL $86(($5 + [248]), $0, $4)
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	$9 = CALL $2([14996])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$19 }
	*($5 + [168]) = ($9 << [1])
	$8 = (($5 + [168]) | [1])
	if ( $9 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$10 = (($9 + [16]) & [-16])
	$8 = CALL $9($10)
	*($5 + [168]) = ($10 | [1])
	*($5 + [176]) = $8
	*($5 + [172]) = $9
	
.LABEL $label$18
	CALL memcpy($8, [14996], $9)
	
.LABEL $label$17
	*(($8 + $9)) = [0]
	$9 = CALL $87(($5 + [248]), ($5 + [168]))
	*($5 + [240]) = $9
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$20 }
	CALL $11(*($5 + [176]))
	$9 = *($5 + [240])
	
.LABEL $label$20
	$7 = (($5 + [248]) | [4])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$21 }
	CALL eosio_assert([0], [15005])
	
.LABEL $label$21
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	$9 = CALL $2([15049])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$24 }
	*($5 + [168]) = ($9 << [1])
	$8 = (($5 + [168]) | [1])
	if ( $9 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$10 = (($9 + [16]) & [-16])
	$8 = CALL $9($10)
	*($5 + [168]) = ($10 | [1])
	*($5 + [176]) = $8
	*($5 + [172]) = $9
	
.LABEL $label$23
	CALL memcpy($8, [15049], $9)
	
.LABEL $label$22
	*(($8 + $9)) = [0]
	$8 = CALL $87(($5 + [248]), ($5 + [168]))
	if ( ((*($5 + [168]) & [1]) == 0) ){ goto $label$25 }
	CALL $11(*($5 + [176]))
	
.LABEL $label$25
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$26 }
	CALL eosio_assert([0], [15055])
	
.LABEL $label$26
	*(($5 + [176])) = [0]
	*($5 + [168]) = (int_64)0
	$9 = CALL $2([15100])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$29 }
	*($5 + [168]) = ($9 << [1])
	$10 = (($5 + [168]) | [1])
	if ( $9 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$4 = (($9 + [16]) & [-16])
	$10 = CALL $9($4)
	*($5 + [168]) = ($4 | [1])
	*($5 + [176]) = $10
	*($5 + [172]) = $9
	
.LABEL $label$28
	CALL memcpy($10, [15100], $9)
	
.LABEL $label$27
	*(($10 + $9)) = [0]
	$10 = CALL $87(($5 + [248]), ($5 + [168]))
	if ( (*($5 + [168]) & [1]) ){ goto $label$31 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$30 }
	goto $label$13 
	
.LABEL $label$31
	CALL $11(*($5 + [176]))
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$13 }
	
.LABEL $label$30
	CALL eosio_assert([0], [15106])
	$9 = [1]
	if ( ((*($8 + [28]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	CALL $52(($5 + [168]))
	
.LABEL $label$15
	CALL $52(($5 + [168]))
	
.LABEL $label$14
	CALL $52(($5 + [168]))
	
.LABEL $label$13
	$9 = [1]
	if ( (*($8 + [28]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = (($8 + [28]) + $9)
	goto $label$10 
	
.LABEL $label$11
	$7 = *($8 + [36])
	
.LABEL $label$10
	*(($5 + [328])) = [0]
	*($5 + [320]) = (int_64)0
	$9 = CALL $2($7)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$37 }
	*($5 + [320]) = ($9 << [1])
	$8 = (($5 + [320]) | [1])
	if ( $9 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$4 = (($9 + [16]) & [-16])
	$8 = CALL $9($4)
	*($5 + [320]) = ($4 | [1])
	*($5 + [328]) = $8
	*($5 + [324]) = $9
	
.LABEL $label$36
	CALL memcpy($8, $7, $9)
	
.LABEL $label$35
	*(($8 + $9)) = [0]
	*($5 + [128]) = [1]
	CALL $75(($5 + [168]), ($5 + [320]), ($5 + [128]))
	if ( ((*($5 + [320]) & [1]) == 0) ){ goto $label$38 }
	CALL $11(*($5 + [328]))
	
.LABEL $label$38
	*(($5 + [160])) = [0]
	*($5 + [136]) = $1
	*($5 + [144]) = (int_64)-1
	*($5 + [152]) = (int_64)0
	*($5 + [164]) = [0]
	*($5 + [128]) = *($0)
	$9 = *($5 + [240])
	$8 = ($9 + [28])
	if ( (*($8) & [1]) ){ goto $label$40 }
	$8 = ($8 + [1])
	$9 = *($8)
	if ( ($9 == 0) ){ goto $label$39 }
	goto $label$33 
	
.LABEL $label$40
	$8 = *(($9 + [36]))
	$9 = *($8)
	if ( $9 ){ goto $label$33 }
	
.LABEL $label$39
	$2 = (int_64)0
	goto $label$32 
	
.LABEL $label$34
	CALL $52(($5 + [320]))
	
.LABEL $label$33
	$8 = ($8 + [1])
	$2 = (int_64)0
	
.LOOP $label$41:
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56) + (int_64)((int_64)$2 * (int_64)10)) + (int_64)-48)
	$9 = *($8)
	$8 = ($8 + [1])
	if ( $9 ){ goto $label$41 }
	
.LABEL $label$32
	*($5 + [120]) = $2
	CALL prints([15151])
	CALL printui(*($5 + [120]))
	*($5 + [112]) = ($5 + [128])
	CALL $116(($5 + [320]), ($5 + [112]), ($5 + [120]))
	$9 = *($5 + [324])
	if ( ($9 == 0) ){ goto $label$42 }
	if ( ((int_64)*($5 + [120]) != (int_64)*($9 + [24])) ){ goto $label$42 }
	CALL prints([15166])
	CALL printui(*($9))
	CALL prints([15186])
	CALL printui(*($9 + [24]))
	CALL eosio_assert([0], [15212])
	
.LABEL $label$42
	*($5 + [104]) = CALL $146($0, (int_64)-5335794350174113792)
	if ( (*($10 + [28]) & [1]) ){ goto $label$45 }
	$4 = [0]
	$8 = [0]
	$10 = (($10 + [28]) + [1])
	$9 = *($10)
	if ( $9 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$4 = [0]
	$8 = [0]
	$10 = *($10 + [36])
	$9 = *($10)
	if ( ($9 == 0) ){ goto $label$43 }
	
.LABEL $label$44
	$8 = ($10 + [1])
	$2 = (int_64)0
	
.LOOP $label$46:
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56) + (int_64)((int_64)$2 * (int_64)10)) + (int_64)-48)
	$9 = *($8)
	$8 = ($8 + [1])
	if ( $9 ){ goto $label$46 }
	$8 = (CASTING uint_32)(uint_64 $2)
	
.LABEL $label$43
	*($5 + [100]) = $8
	$2 = *($0)
	*($5 + [324]) = $3
	*($5 + [320]) = ($5 + [104])
	*($5 + [328]) = ($5 + [100])
	*($5 + [332]) = ($5 + [240])
	*($5 + [336]) = ($5 + [120])
	*($5 + [340]) = ($5 + [168])
	CALL $147(($5 + [72]), ($5 + [128]), $2, ($5 + [320]))
	$2 = *($0)
	*($5 + [56]) = [12241]
	*($5 + [60]) = CALL $2([12241])
	*($5) = *($5 + [56])
	$9 = CALL $89(($5 + [64]), $5)
	*($5 + [72]) = $2
	$11 = *($9)
	*(($9 = CALL $9([16]))) = $2
	*($9 + [8]) = $11
	$8 = ($9 + [16])
	*((($5 + [72]) + [16])) = $8
	*((($5 + [72]) + [12])) = $8
	*($5 + [80]) = $9
	$7 = (($5 + [40]) | [4])
	*($5 + [40]) = $7
	*($5 + [44 align=4]) = (int_64)0
	CALL $68(($5 + [24]), *($5 + [104]))
	$9 = ($5 + [32])
	*(($8 = (($5 + [320]) + [12]))) = *($9)
	*($9) = $4
	*($5 + [320]) = [12248]
	*($5 + [324 align=4]) = *($5 + [24])
	*($5 + [24]) = (int_64)0
	CALL $108(($5 + [360]), ($5 + [40]), ($5 + [320]))
	if ( ((*($5 + [324]) & [1]) == 0) ){ goto $label$47 }
	CALL $11(*($8))
	
.LABEL $label$47
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$48 }
	CALL $11(*(($5 + [32])))
	
.LABEL $label$48
	$4 = (($5 + [8]) | [4])
	*($5 + [8]) = $4
	*($5 + [12 align=4]) = (int_64)0
	$8 = *($5 + [40])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$49 }
	
.LOOP $label$50:
	$10 = $8
	$9 = ($10 + [16])
	CALL $109(($5 + [8]), $4, $9, $9)
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$52 }
	
.LOOP $label$53:
	$8 = $9
	$9 = *($8)
	if ( $9 ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$51 }
	$10 = ($10 + [8])
	
.LOOP $label$54:
	$9 = *($10)
	$10 = ($9 + [8])
	$8 = *($9 + [8])
	if ( ((int_32)$9 != (int_32)*($8)) ){ goto $label$54 }
	
.LABEL $label$51
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$50 }
	
.LABEL $label$49
	CALL $110(($5 + [24]), $0, ($5 + [8]))
	CALL $148(($5 + [320]), ($5 + [72]), [15244], ($5 + [24]))
	CALL $97(($5 + [320]))
	$9 = *($5 + [348])
	if ( ($9 == 0) ){ goto $label$55 }
	*(($5 + [352])) = $9
	CALL $11($9)
	
.LABEL $label$55
	$9 = *($5 + [336])
	if ( ($9 == 0) ){ goto $label$56 }
	*(($5 + [340])) = $9
	CALL $11($9)
	
.LABEL $label$56
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$57 }
	CALL $11(*($5 + [32]))
	
.LABEL $label$57
	CALL $88(($5 + [8]), *($5 + [12]))
	CALL $120($0, $1, *($5 + [104]), *($5 + [100]))
	CALL $88(($5 + [40]), *($5 + [44]))
	$9 = *($5 + [80])
	if ( ($9 == 0) ){ goto $label$58 }
	*(($5 + [84])) = $9
	CALL $11($9)
	
.LABEL $label$58
	$10 = *($5 + [152])
	if ( ($10 == 0) ){ goto $label$59 }
	$7 = ($5 + [156])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$61 }
	
.LOOP $label$62:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$63 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$64 }
	CALL $11(*(($8 + [16])))
	
.LABEL $label$64
	CALL $11($8)
	
.LABEL $label$63
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$62 }
	$9 = *(($5 + [152]))
	goto $label$60 
	
.LABEL $label$61
	$9 = $10
	
.LABEL $label$60
	*($7) = $10
	CALL $11($9)
	
.LABEL $label$59
	CALL $88(($5 + [248]), *($5 + [252]))
	
.LABEL $label$1
	$9 = *($5 + [308])
	if ( ($9 == 0) ){ goto $label$65 }
	*(($5 + [312])) = $9
	CALL $11($9)
	
.LABEL $label$65
	$global$0 = ($5 + [368])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($2)
	if ( ($4 & [1]) ){ goto $label$2 }
	$5 = uint_32($4 >> [1])
	$6 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($2 + [4])
	$6 = *($2 + [8])
	
.LABEL $label$1
	$7 = [0]
	$4 = CALL $2([15473])
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((int_32)$5 < (int_32)$4) ){ goto $label$4 }
	$8 = ($6 + $5)
	$7 = $6
	
.LOOP $label$6:
	$5 = (($5 - $4) + [1])
	if ( ($5 == 0) ){ goto $label$4 }
	$5 = CALL $35($7, [32], $5)
	if ( ($5 == 0) ){ goto $label$4 }
	if ( (CALL $46($5, [15473], $4) == 0) ){ goto $label$7 }
	$7 = ($5 + [1])
	$5 = ($8 - $7)
	if ( ((int_32)$5 >= (int_32)$4) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$4 }
	$7 = ($5 - $6)
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $54(($3 + [16]), $2, [0], $7, $2)
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [15477])
	$7 = [-1]
	CALL $54(($3 + [16]), $2, [0], [-1], $2)
	
.LABEL $label$3
	$6 = CALL $54($3, $2, ($7 + [1]), [-1], $2)
	$7 = [0]
	$2 = [0]
	$8 = [0]
	$4 = ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) )
	$5 = ( ($4 + [1]) ? $4 : ((int_32)*($4) == (int_32)[45]) )
	$4 = *($5)
	if ( ((int_32)$4 != (int_32)[46]) ){ goto $label$9 }
	$9 = [3]
	goto $label$8 
	
.LABEL $label$9
	$9 = [0]
	
.LABEL $label$8
	
.LOOP $label$10:
	goto $label$61 
	
.LABEL $label$63
	$5 = ($5 + [1])
	$4 = *($5)
	if ( ((int_32)$4 != (int_32)[46]) ){ goto $label$31 }
	$9 = [3]
	goto $label$10 
	
.LABEL $label$62
	$2 = [1]
	$5 = ($5 + [1])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)[46]) ){ goto $label$32 }
	$9 = [0]
	goto $label$10 
	
.LABEL $label$61
	if ( ($4 == 0) ){ goto $label$33 }
	$9 = [1]
	goto $label$10 
	
.LABEL $label$60
	if ( ((uint_32)(($4 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$29 }
	$9 = [4]
	goto $label$10 
	
.LABEL $label$59
	$8 = ($8 + ((int_32)$2 != (int_32)[0]))
	$7 = ((((int_32)$7 * (int_32)[10]) + int_32(($4 << [24]) >> [24])) + [-48])
	goto $label$30 
	
.LABEL $label$58
	$5 = *($6 + [8])
	$10 = (CASTING int_64)(int_32 $7)
	$2 = ($4 & [1])
	$4 = *($3)
	$4 = ( *($6 + [4]) ? uint_32($4 >> [1]) : $2 )
	if ( ($4 <= [8]) ){ goto $label$28 }
	$9 = [29]
	goto $label$10 
	
.LABEL $label$57
	CALL eosio_assert([0], [13761])
	goto $label$26 
	
.LABEL $label$56
	if ( ($4 == 0) ){ goto $label$27 }
	$9 = [7]
	goto $label$10 
	
.LABEL $label$55
	$7 = ( $5 ? ($6 + [1]) : $2 )
	$11 = (int_64)0
	$9 = [8]
	goto $label$10 
	
.LABEL $label$54
	$2 = (($7 + $4) + [-1])
	$5 = *($2)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$24 }
	$9 = [27]
	goto $label$10 
	
.LABEL $label$53
	CALL eosio_assert([0], [13806])
	$5 = *($2)
	$9 = [9]
	goto $label$10 
	
.LABEL $label$52
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$25 }
	$9 = [10]
	goto $label$10 
	
.LABEL $label$51
	$11 = ((int_64)$11 << (int_64)8)
	$9 = [11]
	goto $label$10 
	
.LABEL $label$50
	*($0) = $10
	*($0 + [8]) = ((int_64)$11 | (int_64)(CASTING uint_64)(uint_32 ($8 & [255])))
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$22 }
	$9 = [12]
	goto $label$10 
	
.LABEL $label$49
	CALL eosio_assert([0], [15506])
	$9 = [13]
	goto $label$10 
	
.LABEL $label$48
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$4 = [0]
	$9 = [14]
	goto $label$10 
	
.LABEL $label$47
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$9 = [20]
	goto $label$10 
	
.LABEL $label$46
	$10 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$9 = [21]
	goto $label$10 
	
.LABEL $label$45
	$11 = $10
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$44
	$11 = $10
	$9 = [24]
	goto $label$10 
	
.LABEL $label$43
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$9 = [25]
	goto $label$10 
	
.LABEL $label$42
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$2 = ($4 + [1])
	$4 = $2
	if ( $5 ){ goto $label$11 }
	$9 = [26]
	goto $label$10 
	
.LABEL $label$41
	$4 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$21 }
	$9 = [22]
	goto $label$10 
	
.LABEL $label$40
	$4 = [1]
	if ( (*($3) & [1]) ){ goto $label$16 }
	$9 = [19]
	goto $label$10 
	
.LABEL $label$39
	if ( (*($3 + [16]) & $4) ){ goto $label$14 }
	$9 = [18]
	goto $label$10 
	
.LABEL $label$38
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$37
	CALL eosio_assert([0], [11603])
	$4 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$15 }
	$9 = [16]
	goto $label$10 
	
.LABEL $label$36
	CALL $11(*(($6 + [8])))
	if ( ((*($3 + [16]) & $4) == 0) ){ goto $label$13 }
	$9 = [17]
	goto $label$10 
	
.LABEL $label$35
	CALL $11(*(($3 + [24])))
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$34
	$11 = (int_64)0
	goto $label$23 
	
.LABEL $label$33
	$9 = [5]
	goto $label$10 
	
.LABEL $label$32
	$9 = [3]
	goto $label$10 
	
.LABEL $label$31
	$9 = [0]
	goto $label$10 
	
.LABEL $label$30
	$9 = [2]
	goto $label$10 
	
.LABEL $label$29
	$9 = [2]
	goto $label$10 
	
.LABEL $label$28
	$9 = [6]
	goto $label$10 
	
.LABEL $label$27
	$9 = [28]
	goto $label$10 
	
.LABEL $label$26
	$9 = [7]
	goto $label$10 
	
.LABEL $label$25
	$9 = [8]
	goto $label$10 
	
.LABEL $label$24
	$9 = [9]
	goto $label$10 
	
.LABEL $label$23
	$9 = [11]
	goto $label$10 
	
.LABEL $label$22
	$9 = [13]
	goto $label$10 
	
.LABEL $label$21
	$9 = [14]
	goto $label$10 
	
.LABEL $label$20
	$9 = [14]
	goto $label$10 
	
.LABEL $label$19
	$9 = [22]
	goto $label$10 
	
.LABEL $label$18
	$9 = [15]
	goto $label$10 
	
.LABEL $label$17
	$9 = [15]
	goto $label$10 
	
.LABEL $label$16
	$9 = [16]
	goto $label$10 
	
.LABEL $label$15
	$9 = [19]
	goto $label$10 
	
.LABEL $label$14
	$9 = [17]
	goto $label$10 
	
.LABEL $label$13
	$9 = [18]
	goto $label$10 
	
.LABEL $label$12
	$9 = [23]
	goto $label$10 
	
.LABEL $label$11
	$9 = [24]
	goto $label$10 
	$9
}

int_32 .FUNC $142 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2507685100368429056, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $179($0, $5)
	if ( ((int_32)*($6 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $278 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	$5 = ($2 + $4)
	*($3 + [408]) = $5
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [408]))
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [384]) = (int_64)0
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [400]) + [8]))
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [404])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [376]) + [8]))) = *($3 + [64])
	*($3 + [404]) = ($2 + [8])
	*($3 + [368]) = [0]
	*($3 + [360]) = (int_64)0
	CALL $247(($3 + [400]), ($3 + [360]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [400]) + [8]))
	*($3 + [48]) = *($3 + [400])
	$2 = *($2)
	*((($3 + [416]) + [8])) = $2
	*(($5 = (($3 + [432]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [432]) = $6
	*($3 + [416]) = $6
	$2 = *($5)
	*((($3 + [448]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [432])
	*($3 + [80]) = $1
	*($3 + [448]) = $1
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [96]) = [15792]
	*($3 + [92]) = [513]
	*($3 + [100]) = [15815]
	*($3 + [104]) = [15830]
	*($3 + [108]) = [15871]
	*($3 + [112]) = (int_64)72060901179523328
	*($3 + [120]) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [208])) = $0
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = [0]
	*($3 + [240]) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*(($3 + [348])) = (int_64)0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [376])
	$0 = *($3 + [392])
	$2 = CALL $53(($3 + [16]), ($3 + [360]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $81(($3 + [64]), $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$8
	CALL $246(($3 + [64]))
	if ( ((*($3 + [360]) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($3 + [368])))
	
.LABEL $label$9
	$global$0 = ($3 + [464])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	$5 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$5 = CALL $9($5)
	*((($4 + [32]) + [8])) = ($5 + ($6 << [4]))
	*($4 + [32]) = $5
	*($4 + [36]) = $5
	$7 = *(($1 + [8]))
	$6 = (*(($1 + [12])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $7, $6)
	*($4 + [36]) = ($5 + $6)
	
.LABEL $label$5
	$8 = *($1)
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	$1 = CALL $2($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$9 }
	*($4 + [8]) = ($1 << [1])
	$5 = (($4 + [8]) | [1])
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $9($6)
	*($4 + [8]) = ($6 | [1])
	*($4 + [16]) = $5
	*($4 + [12]) = $1
	
.LABEL $label$8
	CALL memcpy($5, $2, $1)
	
.LABEL $label$7
	*(($5 + $1)) = [0]
	*($0) = $8
	*($0 + [8]) = (int_64)6256973777754652672
	$1 = ($3 + [8])
	*(($5 = ($4 + [28]))) = *($1)
	$8 = *($3)
	*($3) = (int_64)0
	*($1) = [0]
	*($0 + [16]) = *($4 + [32])
	*(($0 + [24])) = *((($4 + [32]) + [8]))
	*($4 + [20 align=4]) = $8
	*($4 + [32]) = [0]
	*($4 + [36 align=4]) = (int_64)0
	CALL $323(($0 + [28]), ($4 + [8]))
	if ( (*($4 + [20]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [8]) & [1]) ){ goto $label$10 }
	goto $label$3 
	
.LABEL $label$11
	CALL $11(*($5))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$10
	CALL $11(*($4 + [16]))
	$0 = *($4 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	CALL $52(($4 + [8]))
	
.LABEL $label$4
	CALL $44(($4 + [32]))
	
.LABEL $label$3
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($4 + [36]) = $0
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($4 + [48])
	(unreachable)
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$5 = ($global$0 - [160])
	$global$0 = $5
	*($5 + [112]) = $1
	$1 = *($0)
	*($5 + [96]) = [12001]
	*($5 + [100]) = CALL $2([12001])
	*($5 + [8]) = *($5 + [96])
	CALL require_auth2($1, *(CALL $89(($5 + [104]), ($5 + [8]))))
	$6 = [0]
	$7 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	$1 = $7)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $8
	$9 = [1]
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $9 ){ goto $label$5 }
	$9 = [1]
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [11603])
	$9 = [0]
	*(($5 + [88])) = [0]
	*($5 + [72]) = (int_64)-1
	*($5 + [80]) = (int_64)0
	$1 = *($0)
	*($5 + [56]) = $1
	*($5 + [64]) = $7
	$11 = [0]
	$6 = CALL db_find_i64($1, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $78(($5 + [56]), $6)
	if ( ((int_32)*($11 + [88]) == (int_32)($5 + [56])) ){ goto $label$6 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [12008])
	$7 = *(($3 + [8]))
	$12 = *($3)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$1 = $8
	$9 = [1]
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$1 = $8
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $9 ){ goto $label$11 }
	$9 = [1]
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	
.LABEL $label$7
	CALL eosio_assert($9, [11919])
	CALL eosio_assert(((int_64)$12 > (int_64)0), [11936])
	CALL eosio_assert(((int_64)$7 == (int_64)*($11 + [16])), [11965])
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$13 }
	$6 = uint_32($6 >> [1])
	goto $label$12 
	
.LABEL $label$13
	$6 = *($2 + [4])
	
.LABEL $label$12
	CALL eosio_assert(($6 <= [257]), [12068])
	$6 = *($2)
	if ( ($6 & [1]) ){ goto $label$15 }
	$6 = uint_32($6 >> [1])
	goto $label$14 
	
.LABEL $label$15
	$6 = *($2 + [4])
	
.LABEL $label$14
	$13 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [12102])
	$6 = *($14)
	$9 = ($6 & [1])
	$14 = CALL $53(($5 + [40]), $2)
	*($5 + [128]) = ( *($14 + [8]) ? ($14 + [1]) : $9 )
	*($5 + [132]) = ( *($14 + [4]) ? uint_32($6 >> [1]) : $9 )
	*($5) = *($5 + [128])
	$1 = *(CALL $89(($5 + [16]), $5))
	$15 = ($0 + [96])
	$9 = *(($0 + [124]))
	$10 = *(($0 + [120]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$19:
	$6 = ($9 + [-24])
	$11 = *($6)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$18 }
	$9 = $6
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$17 }
	if ( ((int_32)*(($11 + [52])) == (int_32)$15) ){ goto $label$20 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$20
	$13 = $11
	goto $label$16 
	
.LABEL $label$17
	$6 = CALL db_find_i64(*($15), *(($0 + [104])), (int_64)4983122731445780480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$16 }
	$13 = CALL $90($15, $6)
	if ( ((int_32)*($13 + [52]) == (int_32)$15) ){ goto $label$16 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$16
	CALL eosio_assert(($13 == 0), [12128])
	if ( ((*($14) & [1]) == 0) ){ goto $label$21 }
	CALL $11(*(($14 + [8])))
	
.LABEL $label$21
	$1 = *($0)
	*($5 + [16]) = $2
	*($5 + [24]) = $4
	*($5 + [28]) = $3
	*($5 + [32]) = $0
	*($5 + [20]) = ($5 + [112])
	*($5 + [152]) = $1
	if ( ((int_64)*(($0 + [96])) == (int_64)CALL current_receiver()) ){ goto $label$22 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$22
	*($5 + [128]) = $15
	*($5 + [132]) = ($5 + [16])
	*($5 + [136]) = ($5 + [152])
	*(($6 = CALL $9([64])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24]) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [52]) = $15
	CALL $99(($5 + [128]), $6)
	*($5 + [144]) = $6
	$1 = *($6)
	*($5 + [128]) = $1
	$10 = *($6 + [56])
	*($5 + [124]) = $10
	$11 = ($0 + [124])
	$9 = *($11)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [128]))) ){ goto $label$27 }
	*($9 + [8]) = $1
	*($9 + [16]) = $10
	*($5 + [144]) = [0]
	*($9) = $6
	*($11) = ($9 + [24])
	$6 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL $100(($0 + [120]), ($5 + [144]), ($5 + [128]), ($5 + [124]))
	$6 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( $6 ){ goto $label$25 }
	
.LABEL $label$26
	$10 = *($5 + [80])
	if ( ($10 == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*(($6 + [24])))
	
.LABEL $label$28
	CALL $11($6)
	$10 = *($5 + [80])
	if ( $10 ){ goto $label$23 }
	
.LABEL $label$24
	$global$0 = ($5 + [160])
	return 
	
.LABEL $label$23
	$0 = ($5 + [84])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$30 }
	
.LOOP $label$31:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$32 }
	CALL $11($9)
	
.LABEL $label$32
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$31 }
	$6 = *(($5 + [80]))
	goto $label$29 
	
.LABEL $label$30
	$6 = $10
	
.LABEL $label$29
	*($0) = $10
	CALL $11($6)
	$global$0 = ($5 + [160])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [16])
	$7 = *($5)
	$8 = *($7)
	if ( ($8 & [1]) ){ goto $label$2 }
	$8 = uint_32($8 >> [1])
	$7 = ($7 + [1])
	goto $label$1 
	
.LABEL $label$2
	$8 = *($7 + [4])
	$7 = *($7 + [8])
	
.LABEL $label$1
	*($3 + [20]) = $8
	*($3 + [16]) = $7
	*($3 + [8]) = *($3 + [16])
	*($1) = *(CALL $89(($3 + [40]), ($3 + [8])))
	*($1 + [8]) = *(*($5 + [4]))
	$7 = ($1 + [16])
	CALL $55($7, *($5 + [8]))
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	*($1 + [48]) = *($6 + [54])
	$5 = *($1 + [16])
	$6 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [33])
	$9 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [48])
	$8 = ($1 + [32])
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $3($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $5)
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($1 + [8])
	*($3 + [40]) = $1
	*($3 + [48]) = $7
	*($3 + [52]) = $8
	*($3 + [56]) = $6
	CALL $306(($3 + [40]), ($3 + [32]))
	$9 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($4 + [8]), (int_64)4983122731445780480, *(*($0 + [8])), $9, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($4 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($2)
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

int_32 .FUNC $239 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [440]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [376])) = (int_64)0
	*(($4 + [392])) = (int_64)0
	*((($4 + [336]) + [88])) = (int_64)0
	*((($4 + [336]) + [80])) = (int_64)0
	*((($4 + [336]) + [72])) = (int_64)0
	*((($4 + [336]) + [64])) = (int_64)0
	*(($4 + [432])) = [0]
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [480]) = ($4 + [320])
	*($4 + [24]) = ($4 + [336])
	CALL $269(($4 + [24]), ($4 + [480]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [448]) + [8])) = $3
	*(($6 = (($4 + [464]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [464]) = $7
	*($4 + [448]) = $7
	$3 = *($6)
	*((($4 + [480]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [464])
	*($4 + [40]) = $1
	*($4 + [480]) = $1
	*((($4 + [24]) + [64])) = $0
	*((($4 + [24]) + [72])) = (int_64)-1
	*((($4 + [24]) + [80])) = (int_64)0
	*((($4 + [24]) + [88])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [484]) = ($4 + [440])
	*($4 + [480]) = ($4 + [24])
	CALL $270(($4 + [480]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( ((*($4 + [384]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [392])))
	
.LABEL $label$5
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [344])))
	
.LABEL $label$6
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $238 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	*($4 + [384]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $262(($4 + [16]), ($4 + [384]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($8 = (($4 + [368]) + [8]))) = $3
	$9 = *($4)
	*($4 + [368]) = $9
	*($4 + [352]) = $9
	$3 = *($8)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [368])
	*($4 + [32]) = $1
	*($4 + [384]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [344])
	$1 = *($4 + [336])
	$9 = *($4 + [328])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [16]))
	$global$0 = ($4 + [400])
	return [1]
}

void .FUNC $94 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($5 + [8])
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, $2, $6), ($4 + [16]), [16]
	*($5 + [20]) = $7)
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$2
	*($4 + [40]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [16]) = $6)
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [40]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $308(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

int_32 .FUNC $236 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [28])) = $2
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [36]) = [513]
	*($4 + [40]) = [15792]
	*($4 + [44]) = [15815]
	*($4 + [48]) = [15830]
	*($4 + [52]) = [15871]
	*($4 + [56]) = (int_64)72060901179523328
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [112])) = $0
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [192])) = $0
	*(($4 + [200])) = (int_64)-1
	*(($4 + [208])) = (int_64)0
	*(($4 + [216])) = [0]
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = [0]
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*($4 + [224]) = $0
	*(($4 + [252])) = (int_64)0
	*(($4 + [272])) = $0
	*(($4 + [280])) = (int_64)-1
	*(($4 + [288])) = (int_64)0
	*(($4 + [296])) = [0]
	*($4 + [264]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [8]))
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $307(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $234 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = [0]
	*($4 + [304]) = (int_64)0
	$3 = ($2 + $7)
	$8 = (($4 + [304]) + [8])
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	CALL memcpy(($4 + [304]), $2, [8])
	$9 = ($2 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL memcpy(($4 + [304]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [32])) = $3
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [9])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36]) = [513]
	*($4 + [40]) = [15792]
	*($4 + [44]) = [15815]
	*($4 + [48]) = [15830]
	*($4 + [52]) = [15871]
	*($4 + [56]) = (int_64)72060901179523328
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [112])) = $0
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [192])) = $0
	*(($4 + [200])) = (int_64)-1
	*(($4 + [208])) = (int_64)0
	*(($4 + [216])) = [0]
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = [0]
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*($4 + [224]) = $0
	*(($4 + [252])) = (int_64)0
	*(($4 + [272])) = $0
	*(($4 + [280])) = (int_64)-1
	*(($4 + [288])) = (int_64)0
	*(($4 + [296])) = [0]
	*($4 + [264]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$8 = *(($4 + [312]))
	$0 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $246(($4 + [8]))
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $233 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	*($4 + [384]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $263(($4 + [16]), ($4 + [384]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($8 = (($4 + [368]) + [8]))) = $3
	$9 = *($4)
	*($4 + [368]) = $9
	*($4 + [352]) = $9
	$3 = *($8)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [368])
	*($4 + [32]) = $1
	*($4 + [384]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [344])
	$1 = *($4 + [336])
	$9 = *($4 + [328])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [16]))
	$global$0 = ($4 + [400])
	return [1]
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [52])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [48]) = *(*($3) + [55])
	$3 = *($1 + [16])
	$6 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [33])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [16])
	$8 = ($1 + [48])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $3($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [32]) = $6
	*($5 + [40]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [32])
	CALL $306(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [56]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [48])
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $308(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $230 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [448])
	$global$0 = $3
	*(($4 = $3) + [392]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = [0]
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [432]) = ($4 + [320])
	*($4 + [24]) = ($4 + [336])
	CALL $251(($4 + [24]), ($4 + [432]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [400]) + [8])) = $3
	*(($6 = (($4 + [416]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [416]) = $7
	*($4 + [400]) = $7
	$3 = *($6)
	*((($4 + [432]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [416])
	*($4 + [40]) = $1
	*($4 + [432]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [436]) = ($4 + [392])
	*($4 + [432]) = ($4 + [24])
	CALL $252(($4 + [432]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( ((*($4 + [376]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [384])))
	
.LABEL $label$5
	if ( ((*($4 + [344]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [352])))
	
.LABEL $label$6
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $144 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [25]) = [1]
	$5 = ($1 + [8])
	*($4 + [24]) = *($5)
	$6 = *($1)
	*($4 + [32]) = [0]
	*($4 + [8]) = ($4 + [32])
	*($4 + [44]) = $5
	*($4 + [40]) = $1
	$7 = ($1 + [16])
	*($4 + [48]) = $7
	$8 = ($1 + [24])
	*($4 + [52]) = $8
	$9 = ($1 + [25])
	*($4 + [56]) = $9
	$10 = ($1 + [28])
	*($4 + [60]) = $10
	$11 = ($1 + [40])
	*($4 + [64]) = $11
	$12 = ($1 + [41])
	*($4 + [68]) = $12
	$13 = ($1 + [44])
	*($4 + [72]) = $13
	$14 = ($1 + [56])
	*($4 + [76]) = $14
	$15 = ($1 + [68])
	*($4 + [80]) = $15
	$16 = ($1 + [72])
	*($4 + [84]) = $16
	$17 = ($1 + [76])
	*($4 + [88]) = $17
	CALL $205(($4 + [40]), ($4 + [8]))
	$18 = *($4 + [32])
	if ( ($18 <= [513]) ){ goto $label$4 }
	$3 = CALL $3($18)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($3 - (($18 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $18)
	*($4 + [32]) = ($4 + [8])
	*($4 + [44]) = $5
	*($4 + [48]) = $7
	*($4 + [52]) = $8
	*($4 + [56]) = $9
	*($4 + [60]) = $10
	*($4 + [64]) = $11
	*($4 + [68]) = $12
	*($4 + [72]) = $13
	*($4 + [76]) = $14
	*($4 + [80]) = $15
	*($4 + [84]) = $16
	*($4 + [88]) = $17
	*($4 + [40]) = $1
	CALL $206(($4 + [40]), ($4 + [32]))
	CALL db_update_i64(*($1 + [84]), $2, $3, $18)
	if ( ($18 <= [513]) ){ goto $label$5 }
	CALL $4($3)
	
.LABEL $label$5
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($4 + [40]) = *($5)
	if ( (CALL $46(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$7 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$8 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($4 + [32]), $6)
	*($3) = $1
	
.LABEL $label$8
	CALL db_idx64_update($1, $2, ($4 + [40]))
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $192 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth($3)
	CALL $168(($4 + [80]), $0, $1, $3, [1])
	if ( ((int_32)*(($4 + [97])) == (int_32)*($0 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], *($0 + [44]))
	
.LABEL $label$1
	$6 = *($2)
	$5 = *($2 + [4])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert([0], [13052])
	$5 = *(($2 + [4]))
	$6 = *($2)
	
.LABEL $label$2
	if ( ((uint_32)(int_32((*(($4 + [104])) - *(($4 + [100]))) >> [4]) - int_32(($5 - $6) >> [4])) >= (uint_32)*(($4 + [96]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13100])
	$5 = *(($2 + [4]))
	$6 = *($2)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($4 + [104])
	$8 = ($4 + [100])
	
.LOOP $label$6:
	$10 = *($7)
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$8 }
	$3 = *($6)
	
.LOOP $label$9:
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$8 }
	$9 = ($9 + [16])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$7 }
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [13179])
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = *(($2 + [4]))
	
.LABEL $label$4
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	$9 = [0]
	$10 = [0]
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$10 }
	$11 = (($4 + [48]) | [1])
	$2 = (($4 + [48]) + [8])
	
.LOOP $label$11:
	$3 = *($8)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$15 }
	$10 = [0]
	$6 = *([0] + [8520])
	
.LOOP $label$17:
	*((($4 + [131]) + ($9 = $10))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$10 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$16 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$17 }
	
.LABEL $label$16
	*($2) = [0]
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$14 }
	*($4 + [48]) = ($10 << [1])
	$6 = $11
	goto $label$13 
	
.LABEL $label$15
	*($2) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [48]) = [0]
	$9 = $11
	goto $label$12 
	
.LABEL $label$14
	$7 = (($10 + [16]) & [-16])
	$6 = CALL $9($7)
	*($2) = $6
	*($4 + [48]) = ($7 | [1])
	*($4 + [52]) = $10
	
.LABEL $label$13
	$7 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$18:
	*(($6 + $9)) = *((($4 + [131]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$18 }
	$9 = ($6 + $10)
	
.LABEL $label$12
	*($9) = [0]
	$9 = *($4 + [68])
	if ( ((uint_32)$9 >= (uint_32)*((($4 + [64]) + [8]))) ){ goto $label$20 }
	*($9) = *($4 + [48])
	*(($9 + [8])) = *($2)
	*($2) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [68]) = (*($4 + [68]) + [12])
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$11 }
	goto $label$19 
	
.LABEL $label$20
	CALL $191(($4 + [64]), ($4 + [48]))
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$21 }
	CALL $11(*($2))
	
.LABEL $label$21
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$11 }
	
.LABEL $label$19
	$9 = *($4 + [64])
	$10 = *($4 + [68])
	
.LABEL $label$10
	*(($7 = (($4 + [32]) + [8]))) = *(($4 + [120]))
	*($4 + [32]) = *($4 + [112])
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = [0]
	$9 = ($10 - $9)
	$6 = ((int_32)$9 / (int_32)[12])
	if ( ($9 == 0) ){ goto $label$23 }
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$22 }
	$10 = CALL $9($9)
	*(($4 + [24])) = ($10 + ((int_32)$6 * (int_32)[12]))
	*($4 + [16]) = $10
	*($4 + [20]) = $10
	$6 = *($4 + [68])
	$9 = *($4 + [64])
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$23 }
	
.LOOP $label$24:
	CALL $53($10, $9)
	$10 = (*($4 + [20]) + [12])
	*($4 + [20]) = $10
	$9 = ($9 + [12])
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$24 }
	
.LABEL $label$23
	*(($4 + [8])) = *($7)
	*($4) = *($4 + [32])
	CALL $170($0, $1, $4, [1], ($4 + [16]))
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$25 }
	$10 = *($4 + [20])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*(($10 + [-4])))
	
.LABEL $label$29
	$10 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$28 }
	$9 = *($4 + [16])
	goto $label$26 
	
.LABEL $label$27
	$9 = $6
	
.LABEL $label$26
	*($4 + [20]) = $6
	CALL $11($9)
	
.LABEL $label$25
	$6 = *($4 + [64])
	if ( ($6 == 0) ){ goto $label$30 }
	$10 = *($4 + [68])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$32 }
	
.LOOP $label$33:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$34 }
	CALL $11(*(($10 + [-4])))
	
.LABEL $label$34
	$10 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$33 }
	$9 = *($4 + [64])
	goto $label$31 
	
.LABEL $label$32
	$9 = $6
	
.LABEL $label$31
	*($4 + [68]) = $6
	CALL $11($9)
	
.LABEL $label$30
	$9 = *(($4 + [100]))
	if ( ($9 == 0) ){ goto $label$35 }
	*(($4 + [104])) = $9
	CALL $11($9)
	
.LABEL $label$35
	$global$0 = ($4 + [144])
	return (unreachable)
	
.LABEL $label$22
	CALL $44(($4 + [16]))
}

void .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $53(($2 + [16]), ($1 + [32]))
	$7 = *($1 + [48])
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($8 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$3 = CALL $53(($2 + [64]), $6)
	*(($2 + [8])) = *($8)
	*($2) = *($2 + [80])
	CALL void $0((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $3), (int_32 $7), (int_64 $1))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($6) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($3 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($6 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $303 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	CALL memcpy(($3 + [311]), $6, [1])
	*(($3 + [32])) = $5
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [9])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [513]
	*($3 + [40]) = [15792]
	*($3 + [44]) = [15815]
	*($3 + [48]) = [15830]
	*($3 + [52]) = [15871]
	*($3 + [56]) = (int_64)72060901179523328
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [112])) = $0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = [0]
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*(($3 + [252])) = (int_64)0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*($3 + [264]) = $0
	CALL $215(($3 + [8]), *($3 + [312]), *($3 + [311]))
	CALL $246(($3 + [8]))
	$global$0 = ($3 + [320])
}

void .FUNC $302 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	$5 = ($2 + $4)
	*($3 + [424]) = $5
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [416]) + [8]))
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [407]), $2, [1])
	$2 = ($2 + [1])
	*($3 + [420]) = $2
	*($3 + [392]) = (int_64)0
	*($3 + [384]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$7
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [420])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [384]) + [8]))) = *($3 + [72])
	*($3 + [420]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $247(($3 + [416]), ($3 + [368]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [416]) + [8]))
	*($3 + [56]) = *($3 + [416])
	$2 = *($2)
	*((($3 + [432]) + [8])) = $2
	*(($4 = (($3 + [448]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [448]) = $6
	*($3 + [432]) = $6
	$2 = *($4)
	*((($3 + [464]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [448])
	*($3 + [88]) = $1
	*($3 + [464]) = $1
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [104]) = [15792]
	*($3 + [100]) = [513]
	*($3 + [108]) = [15815]
	*($3 + [112]) = [15830]
	*($3 + [116]) = [15871]
	*($3 + [120]) = (int_64)72060901179523328
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [216])) = $0
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = [0]
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*($3 + [328]) = $0
	*(($3 + [356])) = (int_64)0
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [384])
	$5 = *($3 + [407])
	$0 = *($3 + [408])
	$2 = CALL $53(($3 + [24]), ($3 + [368]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $213(($3 + [72]), $0, $5, ($3 + [8]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$9
	CALL $246(($3 + [72]))
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($3 + [376])))
	
.LABEL $label$10
	$global$0 = ($3 + [480])
}

void .FUNC $301 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	$5 = ($2 + $4)
	*($3 + [376]) = $5
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [376]))
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [372]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $247(($3 + [368]), ($3 + [336]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [368]) + [8]))
	*($3 + [24]) = *($3 + [368])
	$2 = *($2)
	*((($3 + [384]) + [8])) = $2
	*(($4 = (($3 + [400]) + [8]))) = $2
	$6 = *($3 + [24])
	*($3 + [400]) = $6
	*($3 + [384]) = $6
	$2 = *($4)
	*((($3 + [416]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [400])
	*($3 + [56]) = $1
	*($3 + [416]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [72]) = [15792]
	*($3 + [68]) = [513]
	*($3 + [76]) = [15815]
	*($3 + [80]) = [15830]
	*($3 + [84]) = [15871]
	*($3 + [88]) = (int_64)72060901179523328
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [324])) = (int_64)0
	$0 = *($3 + [352])
	$1 = *($3 + [360])
	$2 = CALL $53(($3 + [8]), ($3 + [336]))
	CALL $212(($3 + [40]), $1, $0, $3)
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$7
	CALL $246(($3 + [40]))
	if ( ((*($3 + [336]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($3 + [344])))
	
.LABEL $label$8
	$global$0 = ($3 + [432])
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

int_32 .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $307(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $247(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $304 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [448])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [388]) = $4
	*($3 + [384]) = $4
	*($3 + [392]) = ($4 + $5)
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $247(($3 + [384]), ($3 + [368]))
	*($3 + [360]) = [0]
	*($3 + [352]) = (int_64)0
	CALL $247(($3 + [384]), ($3 + [352]))
	*(($4 = (($3 + [40]) + [8]))) = *($3 + [392])
	*($3 + [40]) = *($3 + [384])
	$4 = *($4)
	*((($3 + [400]) + [8])) = $4
	*(($5 = (($3 + [416]) + [8]))) = $4
	$6 = *($3 + [40])
	*($3 + [416]) = $6
	*($3 + [400]) = $6
	$4 = *($5)
	*((($3 + [432]) + [8])) = $4
	*(($3 + [80])) = $4
	*($3 + [56]) = $0
	*($3 + [64]) = $1
	$1 = *($3 + [416])
	*($3 + [72]) = $1
	*($3 + [432]) = $1
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [88]) = [15792]
	*($3 + [84]) = [513]
	*($3 + [92]) = [15815]
	*($3 + [96]) = [15830]
	*($3 + [100]) = [15871]
	*($3 + [104]) = (int_64)72060901179523328
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [200])) = $0
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = [0]
	*($3 + [232]) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*(($3 + [340])) = (int_64)0
	$4 = CALL $53(($3 + [24]), ($3 + [368]))
	$5 = CALL $53(($3 + [8]), ($3 + [352]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$4 }
	CALL $11(*($5 + [8]))
	
.LABEL $label$4
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$5
	CALL $246(($3 + [56]))
	if ( (*($3 + [352]) & [1]) ){ goto $label$8 }
	if ( (*($3 + [368]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*(($3 + [360])))
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*(($3 + [376])))
	$global$0 = ($3 + [448])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [448])
}

int_32 .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $311(CALL $310($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $308 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $282 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [468]) = $4
	*($3 + [464]) = $4
	*($3 + [472]) = ($4 + $5)
	*($3 + [456]) = [0]
	*($3 + [448]) = (int_64)0
	CALL $247(($3 + [464]), ($3 + [448]))
	*($3 + [440]) = [0]
	*($3 + [432]) = (int_64)0
	CALL $247(($3 + [464]), ($3 + [432]))
	*($3 + [424]) = (int_64)0
	*($3 + [416]) = (int_64)0
	$4 = *($3 + [468])
	if ( ((uint_32)(*($3 + [472]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [468])
	
.LABEL $label$4
	CALL memcpy(($3 + [416]), $4, [8])
	$4 = (*($3 + [468]) + [8])
	*($3 + [468]) = $4
	*($3 + [104]) = (int_64)0
	$5 = (($3 + [464]) + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [468])
	
.LABEL $label$5
	CALL memcpy(($3 + [104]), $4, [8])
	*(($4 = (($3 + [416]) + [8]))) = *($3 + [104])
	*($3 + [468]) = (*($3 + [468]) + [8])
	*($3 + [408]) = [0]
	*($3 + [400]) = (int_64)0
	CALL $247(($3 + [464]), ($3 + [400]))
	*(($2 = (($3 + [88]) + [8]))) = *($5)
	*($3 + [88]) = *($3 + [464])
	$5 = *($2)
	*((($3 + [480]) + [8])) = $5
	*(($2 = (($3 + [496]) + [8]))) = $5
	$6 = *($3 + [88])
	*($3 + [496]) = $6
	*($3 + [480]) = $6
	$5 = *($2)
	*((($3 + [512]) + [8])) = $5
	*(($3 + [128])) = $5
	*($3 + [104]) = $0
	*($3 + [112]) = $1
	$1 = *($3 + [496])
	*($3 + [120]) = $1
	*($3 + [512]) = $1
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*($3 + [136]) = [15792]
	*($3 + [132]) = [513]
	*($3 + [140]) = [15815]
	*($3 + [144]) = [15830]
	*($3 + [148]) = [15871]
	*($3 + [152]) = (int_64)72060901179523328
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [248])) = $0
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = [0]
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*($3 + [360]) = $0
	*(($3 + [388])) = (int_64)0
	$5 = CALL $53(($3 + [72]), ($3 + [448]))
	$2 = CALL $53(($3 + [56]), ($3 + [432]))
	*(($7 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [416])
	$4 = CALL $53(($3 + [24]), ($3 + [400]))
	*((($3 + [8]) + [8])) = *($7)
	*($3 + [8]) = *($3 + [40])
	CALL $101(($3 + [104]), $5, $2, ($3 + [8]), $4)
	if ( (*($4) & [1]) ){ goto $label$10 }
	if ( (*($2) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($4 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($2 + [8]))
	$4 = [1]
	if ( (*($5) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($5 + [8]))
	
.LABEL $label$6
	CALL $246(($3 + [104]))
	if ( (*($3 + [400]) & $4) ){ goto $label$15 }
	$4 = [1]
	if ( (*($3 + [432]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*(($3 + [408])))
	$4 = [1]
	if ( ((*($3 + [432]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($3 + [440])))
	if ( ((*($3 + [448]) & $4) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( (*($3 + [448]) & $4) ){ goto $label$11 }
	
.LABEL $label$12
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$11
	CALL $11(*(($3 + [456])))
	$global$0 = ($3 + [528])
}

void .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $53($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $53(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [60])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [56]) = *((*($3) + [53]))
	$3 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [33])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [24])
	$8 = ($1 + [56])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	$10 = *($1 + [36])
	$10 = ( *(($1 + [40])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$3 = ($10 + $3)
	$7 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [36])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $3($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [32]) = $6
	*($5 + [36]) = $10
	*($5 + [44]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [40]) = ($1 + [48])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [64]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	$4 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [4])
	$4 = *($1 + [8])
	
.LABEL $label$1
	*($2 + [116]) = $3
	*($2 + [112]) = $4
	*($2 + [16]) = *($2 + [112])
	$5 = *(CALL $89(($2 + [120]), ($2 + [16])))
	$6 = ($0 + [56])
	$4 = *(($0 + [84]))
	$7 = *(($0 + [80]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$6:
	$3 = ($4 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$4 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	if ( ((int_32)*(($8 + [60])) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14043])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$3 = CALL db_find_i64(*($6), *(($0 + [64])), (int_64)5453992632067817472, $5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $102($6, $3)
	if ( ((int_32)*($8 + [60]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [12304])
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)*($0 + [51])), [12337])
	$5 = *(($8 + [16]))
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	$9 = *($0)
	*($2 + [72]) = $9
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($2 + [80]) = $5)
	$3 = [0]
	$4 = CALL db_find_i64($9, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $78(($2 + [72]), $4)
	if ( ((int_32)*($3 + [88]) == (int_32)($2 + [72])) ){ goto $label$7 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [12008])
	CALL require_auth(*($3 + [24]))
	$5 = *($0)
	*($2 + [120]) = $0
	if ( $8 ){ goto $label$8 }
	CALL eosio_assert([0], [14176])
	
.LABEL $label$8
	CALL $129($6, $8, $5, ($2 + [120]))
	$5 = *($0)
	*($2 + [32]) = [12241]
	*($2 + [36]) = CALL $2([12241])
	*($2 + [8]) = *($2 + [32])
	$3 = CALL $89(($2 + [40]), ($2 + [8]))
	*($2 + [48]) = $5
	$9 = *($3)
	*(($3 = CALL $9([16]))) = $5
	*($3 + [8]) = $9
	$4 = ($3 + [16])
	*((($2 + [48]) + [16])) = $4
	*(($2 + [60])) = $4
	*($2 + [56]) = $3
	*($2 + [24]) = *($0)
	CALL $130(($2 + [120]), ($2 + [48]), ($2 + [24]), ($8 + [48]), ($8 + [8]), $1)
	CALL $97(($2 + [120]))
	$3 = *($2 + [148])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [152])) = $3
	CALL $11($3)
	
.LABEL $label$9
	$3 = *($2 + [136])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($2 + [140])) = $3
	CALL $11($3)
	
.LABEL $label$10
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($2 + [60])) = $3
	CALL $11($3)
	
.LABEL $label$11
	$8 = *($2 + [96])
	if ( ($8 == 0) ){ goto $label$12 }
	$7 = ($2 + [100])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $11($4)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [96]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $8
	
.LABEL $label$13
	*($7) = $8
	CALL $11($3)
	
.LABEL $label$12
	$global$0 = ($2 + [160])
}

void .FUNC $286 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [624])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [564]) = $4
	*($3 + [560]) = $4
	*($3 + [568]) = ($4 + $5)
	*($3 + [552]) = [0]
	*($3 + [544]) = (int_64)0
	CALL $247(($3 + [560]), ($3 + [544]))
	*($3 + [536]) = (int_64)0
	$4 = *($3 + [564])
	if ( ((uint_32)(*($3 + [568]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [564])
	
.LABEL $label$4
	CALL memcpy(($3 + [536]), $4, [8])
	$4 = (*($3 + [564]) + [8])
	*($3 + [564]) = $4
	*($3 + [528]) = (int_64)0
	$5 = (($3 + [560]) + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [564])
	
.LABEL $label$5
	CALL memcpy(($3 + [528]), $4, [8])
	$4 = (*($3 + [564]) + [8])
	*($3 + [564]) = $4
	*($3 + [520]) = (int_64)0
	*($3 + [512]) = (int_64)0
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [564])
	
.LABEL $label$6
	CALL memcpy(($3 + [512]), $4, [8])
	$4 = (*($3 + [564]) + [8])
	*($3 + [564]) = $4
	*($3 + [160]) = (int_64)0
	$6 = (($3 + [560]) + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$4 = *($3 + [564])
	
.LABEL $label$7
	CALL memcpy(($3 + [160]), $4, [8])
	*((($3 + [512]) + [8])) = *($3 + [160])
	*($3 + [564]) = (*($3 + [564]) + [8])
	*($3 + [504]) = [0]
	$7 = (int_64)0
	*($3 + [496]) = (int_64)0
	CALL $247(($3 + [560]), ($3 + [496]))
	*($3 + [456]) = [0]
	$4 = *($3 + [564])
	$8 = [0]
	
.LOOP $label$8:
	if ( ($4 <= *($6)) ){ goto $label$9 }
	CALL eosio_assert([0], [15933])
	$4 = *($3 + [564])
	
.LABEL $label$9
	$5 = *($4)
	$2 = ($4 + [1])
	*($3 + [564]) = $2
	$4 = ($8 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$8 = ($4 + [7])
	$4 = $2
	if ( ($5 & [128]) ){ goto $label$8 }
	*($3 + [456]) = $7
	$4 = (($3 + [456]) | [4])
	$5 = (($3 + [560]) + [8])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[32]) ){ goto $label$10 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [564])
	
.LABEL $label$10
	CALL memcpy($4, $2, [33])
	*($3 + [564]) = (*($3 + [564]) + [33])
	*(($4 = (($3 + [144]) + [8]))) = *($5)
	*($3 + [144]) = *($3 + [560])
	$4 = *($4)
	*((($3 + [576]) + [8])) = $4
	*(($5 = (($3 + [592]) + [8]))) = $4
	$7 = *($3 + [144])
	*($3 + [592]) = $7
	*($3 + [576]) = $7
	$4 = *($5)
	*((($3 + [608]) + [8])) = $4
	*((($3 + [160]) + [24])) = $4
	*($3 + [160]) = $0
	*($3 + [168]) = $1
	$7 = *($3 + [592])
	*($3 + [176]) = $7
	*($3 + [608]) = $7
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [192]) = [15792]
	*($3 + [188]) = [513]
	*($3 + [196]) = [15815]
	*($3 + [200]) = [15830]
	*($3 + [204]) = [15871]
	*($3 + [208]) = (int_64)72060901179523328
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [304])) = $0
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = [0]
	*($3 + [336]) = $0
	*($3 + [376]) = $0
	*($3 + [416]) = $0
	*(($3 + [444])) = (int_64)0
	$4 = CALL $53(($3 + [128]), ($3 + [544]))
	*(($2 = (($3 + [112]) + [8]))) = *((($3 + [512]) + [8]))
	*($3 + [112]) = *($3 + [512])
	$7 = *($3 + [528])
	$0 = *($3 + [536])
	$5 = CALL $53(($3 + [96]), ($3 + [496]))
	$1 = *((($3 + [456]) + [32]))
	*((($3 + [56]) + [32])) = $1
	$9 = *((($3 + [456]) + [24]))
	*((($3 + [56]) + [24])) = $9
	$10 = *((($3 + [456]) + [16]))
	*((($3 + [56]) + [16])) = $10
	$11 = *((($3 + [456]) + [8]))
	*((($3 + [56]) + [8])) = $11
	*((($3 + [40]) + [8])) = *($2)
	*(($3 + [8])) = $11
	*(($3 + [16])) = $10
	*(($3 + [24])) = $9
	*(($3 + [32])) = $1
	$1 = *($3 + [456])
	*($3 + [56]) = $1
	*($3 + [40]) = *($3 + [112])
	*($3) = $1
	CALL $115(($3 + [160]), $4, $0, $7, ($3 + [40]), $5, $3)
	if ( ((*($5) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($5 + [8]))
	
.LABEL $label$11
	if ( ((*($4) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$12
	CALL $246(($3 + [160]))
	if ( (*($3 + [496]) & [1]) ){ goto $label$15 }
	if ( (*($3 + [544]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*(($3 + [504])))
	if ( ((*($3 + [544]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($3 + [552])))
	$global$0 = ($3 + [624])
	return 
	
.LABEL $label$13
	$global$0 = ($3 + [624])
}

void .FUNC $287 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [312]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	CALL memcpy(($3 + [304]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [36]) = [513]
	*($3 + [40]) = [15792]
	*($3 + [44]) = [15815]
	*($3 + [48]) = [15830]
	*($3 + [52]) = [15871]
	*($3 + [56]) = (int_64)72060901179523328
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [112])) = $0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = [0]
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*(($3 + [252])) = (int_64)0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*($3 + [264]) = $0
	CALL $105(($3 + [8]), *($3 + [312]), *($3 + [304]))
	CALL $246(($3 + [8]))
	$global$0 = ($3 + [320])
}

void .FUNC $284 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [356]) = $4
	*($3 + [352]) = $4
	*($3 + [360]) = ($4 + $5)
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $247(($3 + [352]), ($3 + [336]))
	*(($4 = (($3 + [24]) + [8]))) = *($3 + [360])
	*($3 + [24]) = *($3 + [352])
	$4 = *($4)
	*((($3 + [368]) + [8])) = $4
	*(($5 = (($3 + [384]) + [8]))) = $4
	$6 = *($3 + [24])
	*($3 + [384]) = $6
	*($3 + [368]) = $6
	$4 = *($5)
	*((($3 + [400]) + [8])) = $4
	*(($3 + [64])) = $4
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [384])
	*($3 + [56]) = $1
	*($3 + [400]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [72]) = [15792]
	*($3 + [68]) = [513]
	*($3 + [76]) = [15815]
	*($3 + [80]) = [15830]
	*($3 + [84]) = [15871]
	*($3 + [88]) = (int_64)72060901179523328
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [324])) = (int_64)0
	$4 = CALL $53(($3 + [8]), ($3 + [336]))
	CALL $128(($3 + [40]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$4
	CALL $246(($3 + [40]))
	if ( ((*($3 + [336]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [344])))
	
.LABEL $label$5
	$global$0 = ($3 + [416])
}

void .FUNC $285 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [36]) = [513]
	*($3 + [40]) = [15792]
	*($3 + [44]) = [15815]
	*($3 + [48]) = [15830]
	*($3 + [52]) = [15871]
	*($3 + [56]) = (int_64)72060901179523328
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [112])) = $0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = [0]
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*(($3 + [252])) = (int_64)0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*($3 + [264]) = $0
	CALL $161(($3 + [8]))
	CALL $246(($3 + [8]))
	$global$0 = ($3 + [304])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $312(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $95($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $313(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $11($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $9(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL $11($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $11($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $288 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	$5 = ($2 + $4)
	*($3 + [360]) = $5
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [360]))
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [356]) = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [356])
	
.LABEL $label$6
	CALL memcpy(($3 + [343]), $2, [1])
	*($3 + [356]) = ($2 + [1])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $255(($3 + [352]), ($3 + [328]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [352]) + [8]))
	*($3 + [16]) = *($3 + [352])
	$2 = *($2)
	*((($3 + [368]) + [8])) = $2
	*(($4 = (($3 + [384]) + [8]))) = $2
	$6 = *($3 + [16])
	*($3 + [384]) = $6
	*($3 + [368]) = $6
	$2 = *($4)
	*((($3 + [400]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [384])
	*($3 + [48]) = $1
	*($3 + [400]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*($3 + [64]) = [15792]
	*($3 + [60]) = [513]
	*($3 + [68]) = [15815]
	*($3 + [72]) = [15830]
	*($3 + [76]) = [15871]
	*($3 + [80]) = (int_64)72060901179523328
	*($3 + [88]) = $0
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [176])) = $0
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = [0]
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*(($3 + [316])) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = [0]
	$4 = *($3 + [343])
	$0 = *($3 + [344])
	$2 = (*($3 + [332]) - *($3 + [328]))
	if ( ($2 == 0) ){ goto $label$8 }
	$5 = int_32($2 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$7 }
	$2 = CALL $9($2)
	*(($3 + [8])) = ($2 + ($5 << [4]))
	*($3) = $2
	*($3 + [4]) = $2
	$7 = *($3 + [328])
	$5 = (*($3 + [332]) - $7)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $7, $5)
	*($3 + [4]) = (*($3 + [4]) + $5)
	
.LABEL $label$8
	CALL $154(($3 + [32]), $0, ($4 & [255]), $3)
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [4]) = $2
	CALL $11($2)
	
.LABEL $label$9
	CALL $246(($3 + [32]))
	$2 = *($3 + [328])
	if ( ($2 == 0) ){ goto $label$10 }
	*($3 + [332]) = $2
	CALL $11($2)
	
.LABEL $label$10
	$global$0 = ($3 + [416])
	return (unreachable)
	
.LABEL $label$7
	CALL $44($3)
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [4])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$3 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$3 = int_32($2 >> [3])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $9(($3 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$3 = (*($0) + [16])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $44($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [4]))
	$5 = ($2 + ($5 << [4]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [4]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [64])
	$global$0 = $5
	*($5 + [56]) = [0]
	*($5 + [48]) = (int_64)0
	$6 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($6 == 0) ){ goto $label$2 }
	$7 = int_32($6 >> [4])
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = CALL $9($6)
	*((($5 + [48]) + [8])) = ($6 + ($7 << [4]))
	*($5 + [48]) = $6
	*($5 + [52]) = $6
	$8 = *(($1 + [8]))
	$7 = (*(($1 + [12])) - $8)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($6, $8, $7)
	*($5 + [52]) = ($6 + $7)
	
.LABEL $label$2
	$9 = *($1)
	*(($5 + [24])) = *(($3 + [8]))
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	CALL $53((($5 + [8]) + [24]), $4)
	*($0 + [8]) = (int_64)-5002754507398971392
	*($0) = $9
	*($0 + [16]) = *($5 + [48])
	*(($0 + [24])) = *((($5 + [48]) + [8]))
	*($5 + [48]) = [0]
	*($5 + [52 align=4]) = (int_64)0
	CALL $342(($0 + [28]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*(($5 + [40])))
	
.LABEL $label$3
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$4 }
	*($5 + [52]) = $0
	CALL $11($0)
	
.LABEL $label$4
	$global$0 = ($5 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($5 + [48]))
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $9($7)
	*((($6 + [48]) + [8])) = ($7 + ($8 << [4]))
	*($6 + [48]) = $7
	*($6 + [52]) = $7
	$9 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $9, $8)
	*($6 + [52]) = ($7 + $8)
	
.LABEL $label$2
	$10 = *($1)
	*(($6 + [24])) = *(($4 + [8]))
	*($6) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16]) = *($4)
	$1 = CALL $53(($6 + [32]), $5)
	*($0 + [8]) = (int_64)-3617168760277827584
	*($0) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($0 + [16]) = *($6 + [48])
	*(($0 + [24])) = *((($6 + [48]) + [8]))
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	$1 = *($1)
	$4 = ( *(($6 + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [32])
	$10 = (CASTING uint_64)(uint_32 $4)
	$4 = ($0 + [28])
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $95($4, $1)
	$4 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$1 = [0]
	
.LABEL $label$4
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $4
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = $6
	CALL $96(($6 + [88]), ($6 + [80]))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$6
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$7 }
	*($6 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$7
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($6 + [48]))
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	$4 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [4])
	$4 = *($1 + [8])
	
.LABEL $label$1
	*($2 + [116]) = $3
	*($2 + [112]) = $4
	*($2 + [16]) = *($2 + [112])
	$5 = *(CALL $89(($2 + [120]), ($2 + [16])))
	$6 = ($0 + [56])
	$4 = *(($0 + [84]))
	$7 = *(($0 + [80]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$6:
	$3 = ($4 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$4 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	if ( ((int_32)*(($8 + [60])) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14043])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$3 = CALL db_find_i64(*($6), *(($0 + [64])), (int_64)5453992632067817472, $5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $102($6, $3)
	if ( ((int_32)*($8 + [60]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [12304])
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)*($0 + [51])), [12337])
	$5 = *(($8 + [16]))
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	$9 = *($0)
	*($2 + [72]) = $9
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($2 + [80]) = $5)
	$3 = [0]
	$4 = CALL db_find_i64($9, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $78(($2 + [72]), $4)
	if ( ((int_32)*($3 + [88]) == (int_32)($2 + [72])) ){ goto $label$7 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [12008])
	CALL require_auth(*($3 + [24]))
	$5 = *($0)
	*($2 + [120]) = $0
	if ( $8 ){ goto $label$8 }
	CALL eosio_assert([0], [14176])
	
.LABEL $label$8
	CALL $126($6, $8, $5, ($2 + [120]))
	$5 = *($0)
	*($2 + [32]) = [12241]
	*($2 + [36]) = CALL $2([12241])
	*($2 + [8]) = *($2 + [32])
	$3 = CALL $89(($2 + [40]), ($2 + [8]))
	*($2 + [48]) = $5
	$9 = *($3)
	*(($3 = CALL $9([16]))) = $5
	*($3 + [8]) = $9
	$4 = ($3 + [16])
	*((($2 + [48]) + [16])) = $4
	*(($2 + [60])) = $4
	*($2 + [56]) = $3
	*($2 + [24]) = *($0)
	CALL $127(($2 + [120]), ($2 + [48]), ($2 + [24]), ($8 + [8]), $1)
	CALL $97(($2 + [120]))
	$3 = *($2 + [148])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [152])) = $3
	CALL $11($3)
	
.LABEL $label$9
	$3 = *($2 + [136])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($2 + [140])) = $3
	CALL $11($3)
	
.LABEL $label$10
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($2 + [60])) = $3
	CALL $11($3)
	
.LABEL $label$11
	$8 = *($2 + [96])
	if ( ($8 == 0) ){ goto $label$12 }
	$7 = ($2 + [100])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $11($4)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($2 + [96]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $8
	
.LABEL $label$13
	*($7) = $8
	CALL $11($3)
	
.LABEL $label$12
	$global$0 = ($2 + [160])
}

int_32 .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15937])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [15982])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [16032])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [12])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [16])) = $7
	CALL $11($7)
	
.LABEL $label$13
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [12])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [16])) = $7
	CALL $11($7)
	
.LABEL $label$16
	CALL $11($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $349(*($1), *($0 + [12]))
}

void .FUNC $184 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [288])
	$global$0 = $4
	CALL $107(($4 + [200]), ($0 + [216]))
	$5 = *(( (($4 + [200]) + [40]) ? (($4 + [200]) + [36]) : ((int_32)*($0 + [29]) == (int_32)$3) ))
	$6 = CALL current_time()
	*(($4 + [168])) = (int_64)0
	*((($4 + [136]) + [40])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [148]) = [0]
	*($4 + [152]) = [0]
	*($4 + [160]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [156]) = $5
	*($4 + [136]) = ((CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)) + [60])
	$6 = *($0)
	*($4 + [80]) = [12241]
	*($4 + [84]) = CALL $2([12241])
	*($4 + [8]) = *($4 + [80])
	$7 = *(CALL $89(($4 + [88]), ($4 + [8])))
	$8 = *($0)
	*($4 + [64]) = [15555]
	*($4 + [68]) = CALL $2([15555])
	*($4) = *($4 + [64])
	$5 = CALL $89(($4 + [72]), $4)
	CALL $67(($4 + [16]), $3)
	$3 = ($4 + [24])
	*((($4 + [32]) + [24])) = *($3)
	*($3) = [0]
	*($4 + [40]) = $2
	*($4 + [32]) = $1
	*($4 + [96]) = $8
	*($4 + [48]) = *($4 + [16])
	*($4 + [16]) = (int_64)0
	*($4 + [104]) = *($5)
	*(($3 = CALL $9([16]))) = $6
	*($3 + [8]) = $7
	*((($4 + [96]) + [36])) = [0]
	$5 = ($3 + [16])
	*((($4 + [96]) + [24])) = $5
	*((($4 + [96]) + [20])) = $5
	*($4 + [112]) = $3
	*($4 + [124 align=4]) = (int_64)0
	$3 = *($4 + [48])
	$5 = ( *((($4 + [32]) + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [16])
	$1 = (CASTING uint_64)(uint_32 $5)
	$5 = ($4 + [124])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$1 }
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $95($5, $3)
	$9 = *(($4 + [180]))
	$10 = *(($4 + [128]))
	$5 = *(($4 + [124]))
	$11 = *(($4 + [176]))
	$3 = $11
	goto $label$2 
	
.LABEL $label$3
	$9 = [0]
	$11 = [0]
	$3 = [0]
	$10 = [0]
	$5 = [0]
	
.LABEL $label$2
	*($4 + [260]) = $5
	*($4 + [256]) = $5
	*($4 + [264]) = $10
	*($4 + [272]) = ($4 + [256])
	*($4 + [280]) = ($4 + [32])
	CALL $188(($4 + [280]), ($4 + [272]))
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$6 }
	*($11) = *($4 + [96])
	*(($11 + [8])) = *((($4 + [96]) + [8]))
	*($3 + [16]) = [0]
	*(($5 = ($3 + [20]))) = (int_64)0
	$9 = ($4 + [112])
	*($3 + [16]) = *($9)
	$10 = (($4 + [96]) + [20])
	*($5) = *($10)
	$5 = (($4 + [96]) + [24])
	*(($3 + [24])) = *($5)
	*($3 + [28 align=4]) = (int_64)0
	*(($11 = ($3 + [36]))) = [0]
	$12 = ($4 + [124])
	*($3 + [28]) = *($12)
	$3 = (($4 + [96]) + [32])
	*(($3 + [32])) = *($3)
	*($5) = [0]
	*($10) = [0]
	*($9) = [0]
	$5 = (($4 + [96]) + [36])
	*($11) = *($5)
	*($3) = [0]
	*($12) = [0]
	*($5) = [0]
	*(($3 = (($4 + [136]) + [40]))) = (*($3) + [40])
	$3 = *($4 + [112])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $122(($4 + [172]), ($4 + [96]))
	$3 = *($4 + [124])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [128])) = $3
	CALL $11($3)
	
.LABEL $label$7
	$3 = *($4 + [112])
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($4 + [116])) = $3
	CALL $11($3)
	
.LABEL $label$4
	if ( ((*(($4 + [48])) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($4 + [56])))
	
.LABEL $label$8
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($4 + [24])))
	
.LABEL $label$9
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = $2
	CALL cancel_deferred(($4 + [96]))
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = $2
	CALL $123(($4 + [136]), ($4 + [96]), *($0), [0])
	CALL $124(($4 + [136]))
	$3 = *($4 + [244])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($4 + [248])) = $3
	CALL $11($3)
	
.LABEL $label$10
	$global$0 = ($4 + [288])
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$4 = CALL $2([15473])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$9 }
	*($3 + [8]) = ($4 << [1])
	$5 = (($3 + [8]) | [1])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3 + [8]) = ($6 | [1])
	*($3 + [16]) = $5
	*($3 + [12]) = $4
	
.LABEL $label$8
	CALL memcpy($5, [15473], $4)
	
.LABEL $label$7
	*(($5 + $4)) = [0]
	*(($3 + [28])) = [0]
	*($3 + [20 align=4]) = (int_64)0
	$5 = ($3 + [20])
	$4 = CALL $2([15475])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$12 }
	*(($3 + [20])) = ($4 << [1])
	$5 = ($5 + [1])
	if ( $4 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*(($3 + [28])) = $5
	*((($3 + [8]) + [16])) = $4
	*($3 + [20]) = ($6 | [1])
	
.LABEL $label$11
	CALL memcpy($5, [15475], $4)
	
.LABEL $label$10
	*(($5 + $4)) = [0]
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	$5 = ($3 + [32])
	$4 = CALL $2([14812])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$15 }
	*(($3 + [32])) = ($4 << [1])
	$5 = ($5 + [1])
	if ( $4 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*(($3 + [40])) = $5
	*(($3 + [36])) = $4
	*($3 + [32]) = ($6 | [1])
	
.LABEL $label$14
	CALL memcpy($5, [14812], $4)
	
.LABEL $label$13
	*(($5 + $4)) = [0]
	$4 = CALL $9([36])
	$5 = CALL $53($4, ($3 + [8]))
	CALL $53(($4 + [12]), (($3 + [8]) + [12]))
	CALL $53(($4 + [24]), (($3 + [8]) + [24]))
	if ( (*($3 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($3 + [20]) & [1]) ){ goto $label$16 }
	goto $label$3 
	
.LABEL $label$17
	CALL $11(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$16
	CALL $11(*(($3 + [28])))
	$6 = [1]
	if ( (*($3 + [8]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	CALL $52(($3 + [8]))
	
.LABEL $label$5
	CALL $52($5)
	
.LABEL $label$4
	CALL $52($5)
	
.LABEL $label$3
	$6 = [1]
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $11(*($3 + [16]))
	
.LABEL $label$1
	CALL $325(($3 + [8]), $1, $2, $5)
	if ( (*($2) & $6) ){ goto $label$19 }
	*($2) = [0]
	goto $label$18 
	
.LABEL $label$19
	*(*(($2 + [8]))) = [0]
	*(($2 + [4])) = [0]
	
.LABEL $label$18
	CALL $57($2, [0])
	*(($5 = ($2 + [8]))) = *((($3 + [8]) + [8]))
	*($2) = *($3 + [8])
	CALL $325(($3 + [8]), $1, $2, ($4 + [12]))
	if ( (*($2) & [1]) ){ goto $label$21 }
	*($2) = [0]
	goto $label$20 
	
.LABEL $label$21
	*(*($5)) = [0]
	*(($2 + [4])) = [0]
	
.LABEL $label$20
	CALL $57($2, [0])
	*(($5 = ($2 + [8]))) = *((($3 + [8]) + [8]))
	*($2) = *($3 + [8])
	CALL $325(($3 + [8]), $1, $2, ($4 + [24]))
	if ( (*($2) & [1]) ){ goto $label$23 }
	*($2) = [0]
	goto $label$22 
	
.LABEL $label$23
	*(*($5)) = [0]
	*(($2 + [4])) = [0]
	
.LABEL $label$22
	CALL $57($2, [0])
	*(($2 + [8])) = *((($3 + [8]) + [8]))
	*($2) = *($3 + [8])
	CALL $53($0, $2)
	if ( ($4 == 0) ){ goto $label$24 }
	if ( (*($4 + [24]) & [1]) ){ goto $label$29 }
	if ( (*($4 + [12]) & [1]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $11(*($4 + [32]))
	if ( ((*($4 + [12]) & [1]) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $11(*($4 + [20]))
	if ( (*($4) & [1]) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	if ( ((*($4) & [1]) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL $11(*($4 + [8]))
	
.LABEL $label$25
	CALL $11($4)
	
.LABEL $label$24
	$global$0 = ($3 + [48])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$6 = ($3 + [1])
	$7 = ($2 + [1])
	$8 = *($2 + [4])
	$9 = *($2)
	$10 = ($3 + [4])
	
.LOOP $label$1:
	$11 = ($9 & [1])
	$8 = ( $8 ? uint_32(($9 & [254]) >> [1]) : $11 )
	if ( ($8 <= $5) ){ goto $label$3 }
	$12 = $5
	$14 = ($9 & [1])
	$9 = *($3)
	$9 = ( *($10) ? uint_32($9 >> [1]) : $14 )
	if ( ($9 == 0) ){ goto $label$2 }
	$8 = ($13 + $5)
	$13 = ( *(($2 + [8])) ? $7 : $11 )
	$11 = ($13 + $8)
	$12 = ($11 - $8)
	if ( ((int_32)$12 < (int_32)$9) ){ goto $label$3 }
	$15 = ( *(($3 + [8])) ? $6 : $14 )
	$14 = *($15)
	
.LOOP $label$4:
	$12 = (($12 - $9) + [1])
	if ( ($12 == 0) ){ goto $label$3 }
	$12 = CALL $35($8, $14, $12)
	if ( ($12 == 0) ){ goto $label$3 }
	if ( (CALL $46($12, $15, $9) == 0) ){ goto $label$5 }
	$8 = ($12 + [1])
	$12 = ($11 - $8)
	if ( ((int_32)$12 >= (int_32)$9) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$3 }
	$12 = ($12 - $13)
	if ( ((int_32)$12 != (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = *($2)
	if ( ($9 & [1]) ){ goto $label$6 }
	$12 = uint_32($9 >> [1])
	goto $label$2 
	
.LABEL $label$6
	$12 = *(($2 + [4]))
	
.LABEL $label$2
	$9 = CALL $54($4, $2, $5, ($12 - $5), $2)
	$5 = ($0 + [4])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)*(($0 + [8]))) ){ goto $label$11 }
	CALL $53($8, $9)
	*($5) = (*($5) + [12])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $169($0, $9)
	$5 = *($3)
	if ( (($5 & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$5 = *($10)
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = uint_32($5 >> [1])
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($4 + [8])))
	
.LABEL $label$7
	$9 = *($2)
	$8 = *(($2 + [4]))
	$11 = ( $8 ? uint_32($9 >> [1]) : ($9 & [1]) )
	if ( ((uint_32)$12 >= (uint_32)$11) ){ goto $label$12 }
	$5 = ($5 + $12)
	if ( ($5 <= $11) ){ goto $label$1 }
	
.LABEL $label$12
	$global$0 = ($4 + [16])
}

void .FUNC $358 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [80])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$8 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$8 = *((*($7) + $8))
	
.LABEL $label$1
	$0 = CALL $53(($5 + [64]), $1)
	$1 = CALL $53(($5 + [48]), $2)
	*(($2 = (($5 + [32]) + [8]))) = *(($3 + [8]))
	*($5 + [32]) = *($3)
	$3 = CALL $53(($5 + [16]), $4)
	*(($5 + [8])) = *($2)
	*($5) = *($5 + [32])
	CALL void $7((int_32 $0), (int_32 $1), (int_32 $5), (int_32 $3), (int_32 $8))
	if ( (*($3) & [1]) ){ goto $label$6 }
	if ( (*($1) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $11(*($3 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $11(*($1 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($0) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$2
	CALL $11(*($0 + [8]))
	$global$0 = ($5 + [80])
}

void .FUNC $359 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL $247(*($1), (*($0) + [48]))
	$2 = *($0)
	$3 = *($1)
	$1 = *($3 + [4])
	$4 = (int_64)0
	$5 = ($3 + [8])
	$6 = ($3 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($1 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [15933])
	$1 = *($6)
	
.LABEL $label$2
	$0 = *($1)
	$8 = ($1 + [1])
	*($6) = $8
	$1 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($0 & [127]) << $1)))
	$7 = ($1 + [7])
	$1 = $8
	if ( ($0 & [128]) ){ goto $label$1 }
	*($2 + [60]) = $4
	$1 = ($2 + [64])
	if ( ((uint_32)(*(($3 + [8])) - $8) > (uint_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$8 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $8, [33])
	*(($1 = ($3 + [4]))) = (*($1) + [33])
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $9(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $11($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $356 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $307(*($1), ($0 + [24]))
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$0 = *($0)
	$3 = ($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [56])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$0 = ($0 + [72])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$1 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $350 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $351(*($1), *($0 + [20]))
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $352(*($1), *($0 + [32]))
	CALL $352(*($1), *($0 + [36]))
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15933])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[12])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $353($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($5 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($7 + [-4])))
	
.LABEL $label$9
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$7 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$10:
	CALL $247($0, $2)
	$2 = ($2 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $352 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15933])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $354($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[12])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $9(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[12]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$3 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$5 = ($3 + ((int_32)$1 * (int_32)[12]))
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($6 + [-4])
	*(($3 + [-4])) = *($1)
	$6 = ($6 + [-12])
	*(($3 = ($3 + [-12]))) = *($6)
	*($6) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($2 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($2 + [-4])))
	
.LABEL $label$13
	$2 = $6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $11($1)
	
.LABEL $label$14
}

int_32 .FUNC $29 (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [2] ? [3] : (int_64)(((int_64)$2 | (int_64)$0) == 0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $21 (int_32 $0)
{
}

int_32 .FUNC $20 (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC $23 (int_32 $0)
{
	*($0) = [0]
}

void .FUNC $22 (int_32 $0)
{
	*($0) = [1]
}

void .FUNC $25 ()
{
	CALL $23([8228])
}

int_32 .FUNC $24 ()
{
	CALL $22([8228])
	return [8236]
}

int_32 .FUNC $27 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($2 + [20])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	if ( CALL $26($2) ){ goto $label$2 }
	$4 = *($2 + [20])
	if ( ((*(($2 + [16])) - $4) <= $1) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$5 }
	$6 = [0]
	$5 = $0
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [1])
	$7 = ($5 + $1)
	$8 = ($5 + [-1])
	$5 = $8
	if ( ((int_32)*(($7 + [-1])) != (int_32)[10]) ){ goto $label$6 }
	$6 = (($1 - $3) + [1])
	$5 = CALL int_32 $2((int_32 $0), (int_32 $6), (int_32 *($2 + [36])))
	if ( ($5 <= $6) ){ goto $label$2 }
	$0 = (($8 + $1) + [1])
	$4 = *(($2 + [20]))
	$1 = ($3 + [-1])
	
.LABEL $label$5
	CALL memcpy($4, $0, $1)
	*(($3 = ($2 + [20]))) = (*($3) + $1)
	$5 = ($6 + $1)
	
.LABEL $label$2
	return $5
	return .LABEL $label$1
}

int_32 .FUNC $26 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $329 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[12])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[12])) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($0 + [4])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$4 = ($6 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($6 + [-4])))
	
.LABEL $label$8
	$6 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$7 }
	$4 = *($0)
	goto $label$4 
	
.LABEL $label$6
	$7 = ((int_32)(*($0 + [4]) - $5) / (int_32)[12])
	$4 = ($1 + ((int_32)$7 * (int_32)[12]))
	$6 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	CALL $55($5, $1)
	$5 = ($5 + [12])
	$1 = ($1 + [12])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$11 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$2 }
	$1 = ($0 + [4])
	$5 = *($1)
	
.LOOP $label$12:
	CALL $53($5, $4)
	$5 = (*($1) + [12])
	*($1) = $5
	$4 = ($4 + [12])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$12 }
	goto $label$2 
	
.LABEL $label$11
	$2 = ($0 + [4])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($4 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($4 + [-4])))
	
.LABEL $label$15
	$4 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$14 }
	
.LABEL $label$13
	*($2) = $5
	return 
	
.LABEL $label$5
	$4 = $5
	
.LABEL $label$4
	*(($0 + [4])) = $5
	CALL $11($4)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$1 }
	$5 = [357913941]
	$4 = ((int_32)$4 / (int_32)[12])
	if ( ((uint_32)$4 > (uint_32)[178956969]) ){ goto $label$16 }
	$5 = ($4 << [1])
	$5 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$16
	$4 = ((int_32)$5 * (int_32)[12])
	$5 = CALL $9($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$17:
	CALL $53($5, $1)
	$5 = (*($4) + [12])
	*($4) = $5
	$1 = ($1 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$17 }
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $328 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $331(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [160])
	$global$0 = $6
	CALL require_auth($5)
	CALL $168(($6 + [96]), $0, $1, $5, [0])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$2 }
	$7 = uint_32($7 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$7 = *($4 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($7 <= [513]), [12726])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$8 = [0]
	*($6 + [88]) = [0]
	*($6 + [80]) = (int_64)0
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$7 }
	$9 = *([0] + [8520])
	
.LOOP $label$9:
	*((($6 + [144]) + ($7 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$8 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$8 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$8
	*(($6 + [72])) = [0]
	*($6 + [64]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$6 }
	*($6 + [64]) = ($8 << [1])
	$9 = (($6 + [64]) | [1])
	goto $label$5 
	
.LABEL $label$7
	*(($6 + [72])) = [0]
	*($6 + [64]) = (int_64)0
	*($6 + [64]) = [0]
	goto $label$4 
	
.LABEL $label$6
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $9($10)
	*($6 + [64]) = ($10 | [1])
	*($6 + [72]) = $9
	*($6 + [68]) = $8
	
.LABEL $label$5
	$10 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$10:
	*(($9 + $7)) = *((($6 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$10 }
	*(($9 + $8)) = [0]
	$7 = *($6 + [84])
	if ( ((uint_32)$7 >= (uint_32)*((($6 + [80]) + [8]))) ){ goto $label$4 }
	*($7) = *($6 + [64])
	$7 = (($6 + [64]) + [8])
	*(($7 + [8])) = *($7)
	*($7) = [0]
	*($6 + [64]) = (int_64)0
	*($6 + [84]) = (*($6 + [84]) + [12])
	goto $label$3 
	
.LABEL $label$4
	CALL $191(($6 + [80]), ($6 + [64]))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*($6 + [72]))
	
.LABEL $label$3
	CALL $194(($6 + [144]), $3)
	$7 = *($6 + [84])
	if ( ((uint_32)$7 >= (uint_32)*((($6 + [80]) + [8]))) ){ goto $label$12 }
	*($7) = *($6 + [144])
	$7 = (($6 + [144]) + [8])
	*(($7 + [8])) = *($7)
	*($7) = [0]
	*($6 + [144]) = (int_64)0
	*($6 + [84]) = (*($6 + [84]) + [12])
	goto $label$11 
	
.LABEL $label$12
	CALL $191(($6 + [80]), ($6 + [144]))
	if ( ((*($6 + [144]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($6 + [152]))
	
.LABEL $label$11
	$7 = *($6 + [84])
	if ( ((int_32)$7 == (int_32)*(($6 + [88]))) ){ goto $label$19 }
	CALL $53($7, $4)
	*($6 + [84]) = (*($6 + [84]) + [12])
	if ( (*($6 + [96]) == 0) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $169(($6 + [80]), $4)
	if ( *($6 + [96]) ){ goto $label$17 }
	
.LABEL $label$18
	*($6 + [24]) = [0]
	*($6 + [16]) = (int_64)0
	$7 = (*($6 + [84]) - *($6 + [80]))
	$9 = ((int_32)$7 / (int_32)[12])
	if ( ($7 == 0) ){ goto $label$21 }
	if ( ((uint_32)$9 >= (uint_32)[357913942]) ){ goto $label$20 }
	$8 = CALL $9($7)
	*(($6 + [24])) = ($8 + ((int_32)$9 * (int_32)[12]))
	*($6 + [16]) = $8
	*($6 + [20]) = $8
	$9 = *($6 + [84])
	$7 = *($6 + [80])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$22:
	CALL $53($8, $7)
	$8 = (*($6 + [20]) + [12])
	*($6 + [20]) = $8
	$7 = ($7 + [12])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$22 }
	
.LABEL $label$21
	CALL $172($0, $1, $5, [0], [3], ($6 + [16]))
	$9 = *($6 + [16])
	if ( ($9 == 0) ){ goto $label$16 }
	$8 = *($6 + [20])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = ($8 + [-12])
	if ( ((*($7) & [1]) == 0) ){ goto $label$25 }
	CALL $11(*(($8 + [-4])))
	
.LABEL $label$25
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$24 }
	$7 = *($6 + [16])
	*($6 + [20]) = $9
	CALL $11($7)
	$9 = *($6 + [80])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$23
	*($6 + [20]) = $9
	CALL $11($9)
	$9 = *($6 + [80])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$20
	CALL $44(($6 + [16]))
	
.LABEL $label$17
	*(($10 = (($6 + [48]) + [8]))) = *(($6 + [136]))
	*($6 + [48]) = *($6 + [128])
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = [0]
	$7 = (*($6 + [84]) - *($6 + [80]))
	$9 = ((int_32)$7 / (int_32)[12])
	if ( ($7 == 0) ){ goto $label$26 }
	if ( ((uint_32)$9 >= (uint_32)[357913942]) ){ goto $label$13 }
	$8 = CALL $9($7)
	*(($6 + [40])) = ($8 + ((int_32)$9 * (int_32)[12]))
	*($6 + [32]) = $8
	*($6 + [36]) = $8
	$9 = *($6 + [84])
	$7 = *($6 + [80])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$26 }
	
.LOOP $label$27:
	CALL $53($8, $7)
	$8 = (*($6 + [36]) + [12])
	*($6 + [36]) = $8
	$7 = ($7 + [12])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$27 }
	
.LABEL $label$26
	*(($6 + [8])) = *($10)
	*($6) = *($6 + [48])
	CALL $170($0, $1, $6, [3], ($6 + [32]))
	$9 = *($6 + [32])
	if ( ($9 == 0) ){ goto $label$16 }
	$8 = *($6 + [36])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$29 }
	
.LOOP $label$30:
	$7 = ($8 + [-12])
	if ( ((*($7) & [1]) == 0) ){ goto $label$31 }
	CALL $11(*(($8 + [-4])))
	
.LABEL $label$31
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$30 }
	$7 = *($6 + [32])
	goto $label$28 
	
.LABEL $label$29
	$7 = $9
	
.LABEL $label$28
	*($6 + [36]) = $9
	CALL $11($7)
	
.LABEL $label$16
	$9 = *($6 + [80])
	if ( ($9 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$8 = *($6 + [84])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$33 }
	
.LOOP $label$34:
	$7 = ($8 + [-12])
	if ( ((*($7) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*(($8 + [-4])))
	
.LABEL $label$35
	$8 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$34 }
	$7 = *($6 + [80])
	goto $label$32 
	
.LABEL $label$33
	$7 = $9
	
.LABEL $label$32
	*($6 + [84]) = $9
	CALL $11($7)
	
.LABEL $label$14
	$7 = *(($6 + [116]))
	if ( ($7 == 0) ){ goto $label$36 }
	*(($6 + [120])) = $7
	CALL $11($7)
	
.LABEL $label$36
	$global$0 = ($6 + [160])
	return (unreachable)
	
.LABEL $label$13
	CALL $44(($6 + [32]))
	(unreachable)
}

void .FUNC $321 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $320 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1)
	$4 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([0] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [12])
	$4 = ( *(($1 + [16])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = ($3 - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [12])
	
.LOOP $label$2:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $95($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	CALL $307($2, $1)
	CALL $307($2, $6)
	$global$0 = ($2 + [16])
}

void .FUNC $322 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[64]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [65])
	*(($1 = ($5 + [4]))) = (*($1) + [65])
	$global$0 = ($3 + [16])
}

void .FUNC $325 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($3 + [1])
	$5 = ($2 + [1])
	$6 = ($6 & [1])
	$6 = *($2)
	$7 = ( *($2 + [4]) ? uint_32($6 >> [1]) : $6 )
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = ( *($2 + [8]) ? $5 : $6 )
	$6 = $8
	$9 = ($9 & [1])
	$9 = *($3)
	$10 = ( *($3 + [4]) ? uint_32($9 >> [1]) : $9 )
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ( *($3 + [8]) ? $4 : $9 )
	$6 = $8
	
.LOOP $label$4:
	if ( (CALL $35($11, *($6), $10) == 0) ){ goto $label$3 }
	$9 = [-1]
	$6 = ($6 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$9 = ($6 - $8)
	goto $label$1 
	
.LABEL $label$2
	$9 = [-1]
	
.LABEL $label$1
	$7 = [0]
	CALL $64($2, [0], $9)
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *(($2 + [4])) ? uint_32($6 >> [1]) : $9 )
	$9 = ( *(($2 + [8])) ? $5 : $9 )
	$11 = ($10 & [1])
	$10 = *($3)
	$10 = ( *(($3 + [4])) ? uint_32($10 >> [1]) : $11 )
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = ( *(($3 + [8])) ? $4 : $11 )
	
.LOOP $label$9:
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($9 + $6)
	$6 = ($6 + [-1])
	if ( CALL $35($11, *(($7 + [-1])), $10) ){ goto $label$9 }
	$6 = ($9 + $6)
	goto $label$7 
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	$6 = (($9 + $6) + [-1])
	
.LABEL $label$7
	$7 = (([1] - $9) + $6)
	
.LABEL $label$6
	CALL $64($2, $7, [-1])
	CALL $53($0, $2)
	return 
	
.LABEL $label$5
	CALL $64($2, [0], [-1])
	CALL $53($0, $2)
}

void .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $307(*($1), *($0 + [8]))
	CALL $307(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [16]) = *(*($4 + [4]))
	*($1 + [24]) = *(*($4 + [8]))
	$5 = ($1 + [24])
	$6 = *($0)
	$8 = *($4 + [12])
	$7 = ($1 + [28])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$1 }
	CALL $329($7, *($8), *($8 + [4]))
	
.LABEL $label$1
	$9 = CALL current_time()
	*($1 + [76]) = (*(*($4 + [16]) + [36]) + (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)))
	*($3 + [16]) = [0]
	*($3) = ($3 + [16])
	$10 = ($1 + [8])
	*($3 + [28]) = $10
	*($3 + [24]) = $1
	$11 = ($1 + [16])
	*($3 + [32]) = $11
	*($3 + [36]) = $5
	$12 = ($1 + [25])
	*($3 + [40]) = $12
	*($3 + [44]) = $7
	$13 = ($1 + [40])
	*($3 + [48]) = $13
	$14 = ($1 + [41])
	*($3 + [52]) = $14
	$15 = ($1 + [44])
	*($3 + [56]) = $15
	$16 = ($1 + [56])
	*($3 + [60]) = $16
	$17 = ($1 + [68])
	*($3 + [64]) = $17
	$18 = ($1 + [72])
	*($3 + [68]) = $18
	$19 = ($1 + [76])
	*($3 + [72]) = $19
	CALL $205(($3 + [24]), $3)
	$8 = *($3 + [16])
	if ( ($8 <= [513]) ){ goto $label$3 }
	$4 = CALL $3($8)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($8 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $8)
	*($3 + [16]) = $3
	*($3 + [28]) = $10
	*($3 + [24]) = $1
	*($3 + [32]) = $11
	*($3 + [36]) = $5
	*($3 + [40]) = $12
	*($3 + [44]) = $7
	*($3 + [48]) = $13
	*($3 + [52]) = $14
	*($3 + [56]) = $15
	*($3 + [60]) = $16
	*($3 + [64]) = $17
	*($3 + [68]) = $18
	*($3 + [72]) = $19
	CALL $206(($3 + [24]), ($3 + [16]))
	$9 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($6 + [8]), (int_64)-2507685100368429056, *(*($0 + [8])), $9, $4, $8)
	if ( ($8 <= [513]) ){ goto $label$4 }
	CALL $4($4)
	
.LABEL $label$4
	if ( (uint_64)($9 <= *($6 + [16])) ){ goto $label$5 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$9 = *(($6 + [8]))
	$20 = *(*(($0 + [8])))
	$21 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [88]) = CALL db_idx64_store($9, (int_64)-2507685100368429056, $20, $21, ($3 + [24]))
	$global$0 = ($3 + [80])
}

void .FUNC $326 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$5 = ($global$0 - [160])
	$global$0 = $5
	$6 = *($0)
	*($5 + [104]) = [12001]
	*($5 + [108]) = CALL $2([12001])
	*($5 + [16]) = *($5 + [104])
	CALL require_auth2($6, *(CALL $89(($5 + [112]), ($5 + [16]))))
	$7 = [0]
	$8 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	$6 = $8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $9
	$10 = [1]
	$11 = $7
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$7 < (int_32)[6])
	$11 = ($7 + [1])
	$7 = $11
	if ( $10 ){ goto $label$5 }
	$10 = [1]
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [11603])
	$10 = [0]
	*(($5 + [96])) = [0]
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = (int_64)0
	$6 = *($0)
	*($5 + [64]) = $6
	*($5 + [72]) = $8
	$12 = [0]
	$7 = CALL db_find_i64($6, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$12 = CALL $78(($5 + [64]), $7)
	if ( ((int_32)*($12 + [88]) == (int_32)($5 + [64])) ){ goto $label$6 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [11847])
	$8 = *(($3 + [8]))
	$13 = *($3)
	if ( ((uint_64)((int_64)$13 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $9
	$10 = [1]
	$11 = $7
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$7 < (int_32)[6])
	$11 = ($7 + [1])
	$7 = $11
	if ( $10 ){ goto $label$11 }
	$10 = [1]
	$7 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$10 = [0]
	
.LABEL $label$7
	CALL eosio_assert($10, [11919])
	CALL eosio_assert(((int_64)$13 > (int_64)0), [11936])
	CALL eosio_assert(((int_64)$8 == (int_64)*($12 + [16])), [11965])
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$13 }
	$7 = uint_32($7 >> [1])
	goto $label$12 
	
.LABEL $label$13
	$7 = *($1 + [4])
	
.LABEL $label$12
	CALL eosio_assert(($7 <= [257]), [12068])
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$15 }
	$7 = uint_32($7 >> [1])
	goto $label$14 
	
.LABEL $label$15
	$7 = *($1 + [4])
	
.LABEL $label$14
	$14 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [12102])
	$7 = *($15)
	$10 = ($7 & [1])
	$15 = CALL $53(($5 + [48]), $1)
	*($5 + [128]) = ( *($15 + [8]) ? ($15 + [1]) : $10 )
	*($5 + [132]) = ( *($15 + [4]) ? uint_32($7 >> [1]) : $10 )
	*($5 + [8]) = *($5 + [128])
	$6 = *(CALL $89(($5 + [24]), ($5 + [8])))
	$16 = ($0 + [56])
	$10 = *(($0 + [84]))
	$11 = *(($0 + [80]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$17 }
	
.LOOP $label$19:
	$7 = ($10 + [-24])
	$12 = *($7)
	if ( ((int_64)*($12) == (int_64)$6) ){ goto $label$18 }
	$10 = $7
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$17 }
	if ( ((int_32)*(($12 + [60])) == (int_32)$16) ){ goto $label$20 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$20
	$14 = $12
	goto $label$16 
	
.LABEL $label$17
	$7 = CALL db_find_i64(*($16), *(($0 + [64])), (int_64)5453992632067817472, $6)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$16 }
	$14 = CALL $102($16, $7)
	if ( ((int_32)*($14 + [60]) == (int_32)$16) ){ goto $label$16 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$16
	CALL eosio_assert(($14 == 0), [12160])
	if ( ((*($15) & [1]) == 0) ){ goto $label$21 }
	CALL $11(*(($15 + [8])))
	
.LABEL $label$21
	$6 = *($0)
	*($5 + [28]) = $3
	*($5 + [24]) = $1
	*($5 + [32]) = $4
	*($5 + [36]) = $2
	*($5 + [40]) = $0
	*($5 + [152]) = $6
	if ( ((int_64)*(($0 + [56])) == (int_64)CALL current_receiver()) ){ goto $label$22 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$22
	*($5 + [128]) = $16
	*($5 + [132]) = ($5 + [24])
	*($5 + [136]) = ($5 + [152])
	*(($7 = CALL $9([72])) + [8]) = (int_64)0
	*($7) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32 align=4]) = (int_64)0
	*($7 + [40 align=4]) = (int_64)0
	*($7 + [48]) = (int_64)0
	*($7 + [60]) = $16
	CALL $103(($5 + [128]), $7)
	*($5 + [144]) = $7
	$6 = *($7)
	*($5 + [128]) = $6
	$11 = *($7 + [64])
	*($5 + [124]) = $11
	$12 = ($0 + [84])
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [88]))) ){ goto $label$27 }
	*($10 + [8]) = $6
	*($10 + [16]) = $11
	*($5 + [144]) = [0]
	*($10) = $7
	*($12) = ($10 + [24])
	$7 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL $104(($0 + [80]), ($5 + [144]), ($5 + [128]), ($5 + [124]))
	$7 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( $7 ){ goto $label$25 }
	
.LABEL $label$26
	$11 = *($5 + [88])
	if ( ($11 == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	if ( ((*($7 + [36]) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*(($7 + [44])))
	
.LABEL $label$28
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*(($7 + [32])))
	
.LABEL $label$29
	CALL $11($7)
	$11 = *($5 + [88])
	if ( $11 ){ goto $label$23 }
	
.LABEL $label$24
	$global$0 = ($5 + [160])
	return 
	
.LABEL $label$23
	$0 = ($5 + [92])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$31 }
	
.LOOP $label$32:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$33 }
	CALL $11($10)
	
.LABEL $label$33
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$32 }
	$7 = *(($5 + [88]))
	goto $label$30 
	
.LABEL $label$31
	$7 = $11
	
.LABEL $label$30
	*($0) = $11
	CALL $11($7)
	$global$0 = ($5 + [160])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [16])
	$7 = *($5)
	$8 = *($7)
	if ( ($8 & [1]) ){ goto $label$2 }
	$8 = uint_32($8 >> [1])
	$7 = ($7 + [1])
	goto $label$1 
	
.LABEL $label$2
	$8 = *($7 + [4])
	$7 = *($7 + [8])
	
.LABEL $label$1
	*($3 + [20]) = $8
	*($3 + [16]) = $7
	*($3 + [8]) = *($3 + [16])
	*($1) = *(CALL $89(($3 + [40]), ($3 + [8])))
	$7 = *($5 + [4])
	*($1 + [8]) = *($7)
	*(($1 + [16])) = *(($7 + [8]))
	$7 = ($1 + [24])
	CALL $55($7, *($5 + [8]))
	$8 = ($1 + [36])
	CALL $55($8, *($5 + [12]))
	*($1 + [56]) = *($6 + [50])
	$5 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [33])
	$9 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [56])
	$10 = ($1 + [8])
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	$11 = *(($1 + [36]))
	$11 = ( *(($1 + [40])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$5 = ($11 + $5)
	$9 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ($5 <= [513]) ){ goto $label$6 }
	$2 = CALL $3($5)
	goto $label$5 
	
.LABEL $label$6
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$5
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $5)
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = $10
	*($3 + [40]) = $1
	*($3 + [48]) = $7
	*($3 + [52]) = $8
	*($3 + [56]) = ($1 + [48])
	*($3 + [60]) = $6
	CALL $324(($3 + [40]), ($3 + [32]))
	$9 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($4 + [8]), (int_64)5453992632067817472, *(*($0 + [8])), $9, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$9 >= (uint_64)*($4 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($2)
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([72])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [60]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [36])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	CALL $338(($3 + [40]), ($3 + [32]))
	*($5 + [64]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $104(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [36]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [44])))
	
.LABEL $label$11
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [32])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $105 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [256])
	$global$0 = $3
	*($3 + [200]) = $1
	$4 = [0]
	*(($3 + [192])) = [0]
	*($3 + [168]) = $1
	*($3 + [176]) = (int_64)-1
	*($3 + [184]) = (int_64)0
	*($3 + [196]) = [0]
	$5 = *($0)
	*($3 + [160]) = $5
	$6 = CALL db_find_i64($5, $1, (int_64)-5335794350174113792, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $106(($3 + [160]), $6)
	if ( ((int_32)*($4 + [148]) == (int_32)($3 + [160])) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [12192])
	
.LABEL $label$1
	$1 = CALL current_time()
	if ( ((uint_32)(*($4 + [136]) + *($4 + [120])) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000))) ){ goto $label$3 }
	CALL eosio_assert([0], [12222])
	
.LABEL $label$3
	if ( ((int_32)*($4 + [124]) == (int_32)[1]) ){ goto $label$4 }
	CALL $107(($3 + [104]), ($0 + [216]))
	$1 = *($0)
	*($3 + [64]) = [12241]
	$2 = *($3 + [120])
	*($3 + [68]) = CALL $2([12241])
	*($3 + [8]) = *($3 + [64])
	$6 = CALL $89(($3 + [72]), ($3 + [8]))
	*($3 + [80]) = $1
	$1 = *($6)
	*(($6 = CALL $9([16]))) = $2
	*($6 + [8]) = $1
	$7 = ($6 + [16])
	*((($3 + [80]) + [16])) = $7
	*((($3 + [80]) + [12])) = $7
	*($3 + [88]) = $6
	$8 = (($3 + [48]) | [4])
	*($3 + [48]) = $8
	*($3 + [52 align=4]) = (int_64)0
	CALL $68(($3 + [32]), *($4))
	$6 = ($3 + [40])
	*(($7 = (($3 + [216]) + [12]))) = *($6)
	*($6) = [0]
	*($3 + [216]) = [12248]
	*($3 + [220 align=4]) = *($3 + [32])
	*($3 + [32]) = (int_64)0
	CALL $108(($3 + [208]), ($3 + [48]), ($3 + [216]))
	if ( ((*($3 + [220]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*($7))
	
.LABEL $label$5
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($3 + [40])))
	
.LABEL $label$6
	$9 = (($3 + [16]) | [4])
	*($3 + [16]) = $9
	*($3 + [20 align=4]) = (int_64)0
	$10 = ($4 + [32])
	$11 = (($3 + [104]) + [16])
	$7 = *($3 + [48])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	$12 = $7
	$6 = ($12 + [16])
	CALL $109(($3 + [16]), $9, $6, $6)
	$6 = *($12 + [4])
	if ( ($6 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$7 = *($12 + [8])
	if ( ((int_32)*($7) == (int_32)$12) ){ goto $label$9 }
	$12 = ($12 + [8])
	
.LOOP $label$12:
	$6 = *($12)
	$12 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$8 }
	
.LABEL $label$7
	CALL $110(($3 + [32]), $0, ($3 + [16]))
	CALL $111(($3 + [216]), ($3 + [80]), $11, ($3 + [200]), $10, ($3 + [32]))
	CALL $97(($3 + [216]))
	$6 = *($3 + [244])
	if ( ($6 == 0) ){ goto $label$13 }
	*(($3 + [248])) = $6
	CALL $11($6)
	
.LABEL $label$13
	$6 = *($3 + [232])
	if ( ($6 == 0) ){ goto $label$14 }
	*(($3 + [236])) = $6
	CALL $11($6)
	
.LABEL $label$14
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*($3 + [40]))
	
.LABEL $label$15
	CALL $88(($3 + [16]), *($3 + [20]))
	CALL $88(($3 + [48]), *($3 + [52]))
	$6 = *($3 + [88])
	if ( ($6 == 0) ){ goto $label$16 }
	*(($3 + [92])) = $6
	CALL $11($6)
	
.LABEL $label$16
	$6 = *($3 + [148])
	if ( ($6 == 0) ){ goto $label$4 }
	*(($3 + [152])) = $6
	CALL $11($6)
	
.LABEL $label$4
	CALL $112(($3 + [160]), $4)
	$12 = *($3 + [184])
	if ( ($12 == 0) ){ goto $label$17 }
	$8 = ($3 + [188])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$21 }
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$22 }
	CALL $11(*(($7 + [16])))
	
.LABEL $label$22
	CALL $11($7)
	
.LABEL $label$21
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$20 }
	$6 = *(($3 + [184]))
	goto $label$18 
	
.LABEL $label$19
	$6 = $12
	
.LABEL $label$18
	*($8) = $12
	CALL $11($6)
	
.LABEL $label$17
	$global$0 = ($3 + [256])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [36]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [44])))
	
.LABEL $label$11
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [32])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $11($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [56]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4982871457202700288, (int_64)4982871457202700288)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $113($1, $2)
	if ( ((int_32)*($2 + [56]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [15903])
	
.LABEL $label$1
	*($0) = *($2)
	$3 = *(($2 + [8]))
	$4 = *(($2 + [16]))
	$5 = *(($2 + [24]))
	$6 = *(($2 + [32]))
	$1 = *(($2 + [40]))
	*(($0 + [48])) = (int_64)0
	*(($0 + [40])) = $1
	*(($0 + [32])) = $6
	*(($0 + [24])) = $5
	*(($0 + [16])) = $4
	*(($0 + [8])) = $3
	*($0 + [44]) = [0]
	$1 = (*(($2 + [48])) - *($2 + [44]))
	if ( ($1 == 0) ){ goto $label$6 }
	$7 = int_32($1 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL $9($1)
	*(($0 + [44])) = $1
	*(($0 + [52])) = ($1 + ($7 << [3]))
	*(($0 = ($0 + [48]))) = $1
	$7 = *(($2 + [44]))
	$2 = (*(($2 + [48])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $7, $2)
	*($0) = (*($0) + $2)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$5
	CALL $44(($0 + [44]))
}

int_32 .FUNC $28 (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $109 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$2 = CALL $337($0, $1, ($4 + [12]), ($4 + [8]), $2)
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$1 }
	$global$0 = ($4 + [16])
	return $1
	
.LABEL $label$1
	$1 = CALL $9([40])
	CALL $53(($1 + [16]), $3)
	CALL $53(($1 + [28]), ($3 + [12]))
	*($1) = (int_64)0
	*($1 + [8]) = *($4 + [12])
	*($2) = $1
	$3 = $1
	$5 = *(*($0))
	if ( ($5 == 0) ){ goto $label$2 }
	*($0) = $5
	$3 = *($2)
	
.LABEL $label$2
	CALL $175(*($0 + [4]), $3)
	*($0 + [8]) = (*($0 + [8]) + [1])
	$global$0 = ($4 + [16])
	return $1
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $335(($3 + [16]), $1, $2)
	$4 = CALL $336($1, ($3 + [12]), (*($3 + [16]) + [16]))
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$2 }
	$4 = [0]
	$2 = *($3 + [16])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	*(($5 = *($3 + [16])) + [4]) = [0]
	$6 = *($3 + [12])
	*($5) = [0]
	*($5 + [8]) = $6
	*($4) = $5
	$6 = *(*($1))
	if ( ($6 == 0) ){ goto $label$3 }
	*($1) = $6
	$5 = *($4)
	
.LABEL $label$3
	CALL $175(*($1 + [4]), $5)
	$4 = [1]
	*($1 + [8]) = (*($1 + [8]) + [1])
	$5 = *($3 + [16])
	*($3 + [16]) = [0]
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $5
	*($3 + [16]) = [0]
	if ( ($2 == 0) ){ goto $label$4 }
	if ( (*(($3 + [24])) == 0) ){ goto $label$5 }
	if ( ((*(($2 + [28])) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($2 + [36])))
	
.LABEL $label$6
	if ( ((*(($2 + [16])) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($2 + [24])))
	
.LABEL $label$5
	CALL $11($2)
	
.LABEL $label$4
	$global$0 = ($3 + [32])
}

void .FUNC $318 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*(($5 = CALL $9([32])) + [16]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	*($5 + [8]) = *(*($3 + [4]))
	CALL memcpy(($4 + [16]), $5, [8])
	CALL memcpy((($4 + [16]) | [8]), ($5 + [8]), [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)5037711959185686528, $2, $6, ($4 + [16]), [16])
	*($5 + [20]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $321(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [32]) = *($6)
	*($1 + [120]) = *(*($4 + [8]))
	$6 = *(*($4 + [12]))
	$7 = ($6 + [28])
	if ( (*($7) & [1]) ){ goto $label$2 }
	$6 = ($7 + [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *(($6 + [36]))
	
.LABEL $label$1
	$7 = ($1 + [120])
	$8 = ($1 + [32])
	$9 = ($1 + [8])
	CALL $58($9, $6)
	*($1 + [24]) = *(*($4 + [16]))
	$6 = CALL memcpy(($1 + [48]), *($4 + [20]), [69])
	$4 = *($1 + [8])
	$10 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($10 + [122])
	$11 = (CASTING uint_64)(uint_32 $10)
	$10 = ($1 + [24])
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	$11 = *($1 + [48])
	
.LOOP $label$4:
	$4 = ($4 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ($4 <= [513]) ){ goto $label$6 }
	$2 = CALL $3($4)
	goto $label$5 
	
.LABEL $label$6
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$5
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $9
	*($3 + [32]) = $1
	*($3 + [40]) = $10
	*($3 + [44]) = $8
	*($3 + [48]) = $6
	*($3 + [52]) = $7
	*($3 + [56]) = ($1 + [124])
	*($3 + [60]) = ($1 + [128])
	*($3 + [64]) = ($1 + [136])
	*($3 + [68]) = ($1 + [140])
	*($3 + [72]) = ($1 + [144])
	CALL $121(($3 + [32]), ($3 + [24]))
	$11 = *($1)
	*($1 + [152]) = CALL db_store_i64(*($5 + [8]), (int_64)-5335794350174113792, *(*($0 + [8])), $11, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	if ( (uint_64)($11 <= *($5 + [16])) ){ goto $label$8 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$11 = *(($5 + [8]))
	$12 = *(*(($0 + [8])))
	$13 = *($1)
	*($3 + [32]) = *(($1 + [24]))
	*($1 + [156]) = CALL db_idx64_store($11, (int_64)-5335794350174113792, $12, $13, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $215 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [23]) = $2
	*($3 + [24]) = $1
	CALL require_auth($1)
	$4 = ($0 + [176])
	$6 = *(($0 + [204]))
	$5 = *(($0 + [200]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$2 = ($6 + [-24])
	$7 = *($2)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$6 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*(($7 + [36])) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$2 = CALL db_find_i64(*($4), *(($0 + [184])), (int_64)-3020371618460336128, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $134($4, $2)
	if ( ((int_32)*($7 + [36]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$1
	*($3 + [12]) = ($3 + [23])
	*($3 + [8]) = ($3 + [24])
	$1 = *($0)
	if ( ($7 == 0) ){ goto $label$5 }
	CALL $216($4, $7, $1, ($3 + [8]))
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$5
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$6
	$2 = CALL $9([48])
	$8 = CALL current_time()
	*($2 + [33]) = [0]
	*($2 + [36]) = $4
	*($2 + [8]) = ((uint_64)$8 / (uint_64)(int_64)1000000)
	*($2) = *($3 + [24])
	*($2 + [32]) = ( [1] ? [2] : ((int_32)*($3 + [23]) == (int_32)[1]) )
	*($3 + [72]) = (($3 + [32]) + [30])
	*($3 + [68]) = ($3 + [32])
	*($3 + [64]) = ($3 + [32])
	*($3 + [80]) = ($3 + [64])
	*($3 + [92]) = ($2 + [8])
	*($3 + [88]) = $2
	*($3 + [96]) = ($2 + [16])
	*($3 + [100]) = ($2 + [24])
	*($3 + [104]) = ($2 + [32])
	*($3 + [108]) = ($2 + [33])
	CALL $217(($3 + [88]), ($3 + [80]))
	$8 = *($2)
	$7 = CALL db_store_i64(*(($0 + [184])), (int_64)-3020371618460336128, $1, $8, ($3 + [32]), [30])
	*($2 + [40]) = $7
	$6 = ($0 + [192])
	if ( (uint_64)($8 <= *($6)) ){ goto $label$7 }
	*($6) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($3 + [88]) = $2
	$1 = *($2)
	*($3 + [32]) = $1
	*($3 + [64]) = $7
	$5 = ($0 + [204])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [208]))) ){ goto $label$10 }
	*($6 + [8]) = $1
	*($6 + [16]) = $7
	*($3 + [88]) = [0]
	*($6) = $2
	*($5) = ($6 + [24])
	$2 = *($3 + [88])
	*($3 + [88]) = [0]
	if ( $2 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $218(($0 + [200]), ($3 + [88]), ($3 + [32]), ($3 + [64]))
	$2 = *($3 + [88])
	*($3 + [88]) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11($2)
	
.LABEL $label$8
	$global$0 = ($3 + [112])
}

void .FUNC $214 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)((int_64)*(*($3)) * (int_64)*(*(($3 + [4])))) + (int_64)*($1 + [16]))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-2])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [33])
	CALL $217(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $3, [30])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $216 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	*($1) = $7
	*($1 + [32]) = ( [1] ? [2] : ((int_32)*(*($3 + [4])) == (int_32)[1]) )
	$8 = ($1 + [32])
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-2])
	*($5 + [16]) = $5
	*($5 + [40]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [44]) = ($1 + [33])
	CALL $217(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $3, [30])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $9($7)
	*((($6 + [48]) + [8])) = ($7 + ($8 << [4]))
	*($6 + [48]) = $7
	*($6 + [52]) = $7
	$9 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $9, $8)
	*($6 + [52]) = ($7 + $8)
	
.LABEL $label$2
	$10 = *($1)
	*(($6 + [40])) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($2)
	*($6 + [16]) = *($3)
	*($6 + [24]) = *($4)
	$7 = ($6 + [32])
	$1 = CALL $2($5)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*(($6 + [32])) = ($1 << [1])
	$7 = ($7 + [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = (($1 + [16]) & [-16])
	$7 = CALL $9($2)
	*(($6 + [40])) = $7
	*(($6 + [36])) = $1
	*($6 + [32]) = ($2 | [1])
	
.LABEL $label$5
	CALL memcpy($7, $5, $1)
	
.LABEL $label$4
	*(($7 + $1)) = [0]
	*($0 + [8]) = (int_64)4730615000547960512
	*($0) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($0 + [16]) = *($6 + [48])
	*(($0 + [24])) = *(($6 + [56]))
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	$1 = *($6 + [32])
	$5 = ( *((($6 + [8]) + [28])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [24])
	$10 = (CASTING uint_64)(uint_32 $5)
	$5 = ($0 + [28])
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $95($5, $1)
	$5 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	$1 = [0]
	
.LABEL $label$8
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $5
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = ($6 + [8])
	CALL $356(($6 + [88]), ($6 + [80]))
	if ( ((*(($6 + [32])) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$10
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$11 }
	*($6 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$3
	CALL $52($7)
	
.LABEL $label$1
	CALL $44(($6 + [48]))
	(unreachable)
}

void .FUNC $210 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [24]) = *($6)
	*($1 + [41]) = *(*($3))
	$7 = *($3 + [4])
	$8 = *($1)
	$9 = ($1 + [60])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)*(($1 + [64]))) ){ goto $label$4 }
	*($9) = ($10 + [8])
	*($10) = *($7)
	goto $label$3 
	
.LABEL $label$4
	CALL $160(($1 + [56]), $7)
	
.LABEL $label$3
	$3 = *($3 + [8])
	*($6) = *($3)
	if ( ((int_32)*($3) != (int_32)[2]) ){ goto $label$5 }
	*($1 + [68]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	
.LABEL $label$5
	$7 = ($1 + [41])
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$6
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [44]) = $6
	*($5 + [68]) = $7
	*($5 + [40]) = $1
	$9 = ($1 + [16])
	*($5 + [48]) = $9
	$11 = ($1 + [24])
	*($5 + [52]) = $11
	$12 = ($1 + [25])
	*($5 + [56]) = $12
	$13 = ($1 + [28])
	*($5 + [60]) = $13
	$14 = ($1 + [40])
	*($5 + [64]) = $14
	$15 = ($1 + [44])
	*($5 + [72]) = $15
	$16 = ($1 + [56])
	*($5 + [76]) = $16
	$17 = ($1 + [68])
	*($5 + [80]) = $17
	$18 = ($1 + [72])
	*($5 + [84]) = $18
	$19 = ($1 + [76])
	*($5 + [88]) = $19
	CALL $205(($5 + [40]), ($5 + [8]))
	$10 = *($5 + [32])
	if ( ($10 <= [513]) ){ goto $label$8 }
	$3 = CALL $3($10)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $10)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [48]) = $9
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $14
	*($5 + [68]) = $7
	*($5 + [72]) = $15
	*($5 + [76]) = $16
	*($5 + [80]) = $17
	*($5 + [84]) = $18
	*($5 + [88]) = $19
	*($5 + [40]) = $1
	CALL $206(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [84]), $2, $3, $10)
	if ( ($10 <= [513]) ){ goto $label$9 }
	CALL $4($3)
	
.LABEL $label$9
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [40]) = *($6)
	if ( (CALL $46(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($5 + [32]), $8)
	*($3) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [96])
}

void .FUNC $213 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [80])
	$global$0 = $5
	CALL $107(($5 + [24]), ($0 + [216]))
	CALL require_auth(*($5 + [24]))
	if ( ((uint_32)(($2 + [-1]) & [255]) >= (uint_32)[2]) ){ goto $label$9 }
	if ( ((int_64)*($3) <= (int_64)0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [13464])
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [13487])
	$6 = [1]
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = [1]
	$7 = *($4)
	if ( (($7 & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($4 + [4]) <= [513]) ){ goto $label$5 }
	CALL eosio_assert([0], [11797])
	$7 = *($4)
	if ( (($7 & $6) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ($7 & $6) ){ goto $label$3 }
	
.LABEL $label$4
	if ( uint_32(($7 & [254]) >> [1]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( *($4 + [4]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11826])
	
.LABEL $label$1
	$8 = ($0 + [176])
	$7 = *(($0 + [204]))
	$9 = *(($0 + [200]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$15:
	$4 = ($7 + [-24])
	$6 = *($4)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$14 }
	$7 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$13 }
	if ( ((int_32)*(($6 + [36])) == (int_32)$8) ){ goto $label$16 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$16
	if ( $6 ){ goto $label$12 }
	$6 = [0]
	goto $label$11 
	
.LABEL $label$13
	$6 = [0]
	$4 = CALL db_find_i64(*($8), *(($0 + [184])), (int_64)-3020371618460336128, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$11 }
	$6 = CALL $134($8, $4)
	if ( ((int_32)*($6 + [36]) == (int_32)$8) ){ goto $label$12 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$12
	if ( ((int_32)*($6 + [32]) == (int_32)[1]) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [13521])
	
.LABEL $label$10
	*($5 + [20]) = ( [1] ? [-1] : ((int_32)$2 == (int_32)[1]) )
	$1 = *($0)
	*($5 + [8]) = $3
	*($5 + [12]) = ($5 + [20])
	if ( $6 ){ goto $label$17 }
	CALL eosio_assert([0], [14176])
	
.LABEL $label$17
	CALL $214($8, $6, $1, ($5 + [8]))
	$4 = *($5 + [68])
	if ( ($4 == 0) ){ goto $label$18 }
	*(($5 + [72])) = $4
	CALL $11($4)
	
.LABEL $label$18
	$global$0 = ($5 + [80])
}

int_32 .FUNC $223 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [304]) + [8])
	CALL memcpy(($4 + [304]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [32])) = $3
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [36]) = [513]
	*($4 + [40]) = [15792]
	*($4 + [44]) = [15815]
	*($4 + [48]) = [15830]
	*($4 + [52]) = [15871]
	*($4 + [56]) = (int_64)72060901179523328
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [112])) = $0
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [192])) = $0
	*(($4 + [200])) = (int_64)-1
	*(($4 + [208])) = (int_64)0
	*(($4 + [216])) = [0]
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = [0]
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*($4 + [224]) = $0
	*(($4 + [252])) = (int_64)0
	*(($4 + [272])) = $0
	*(($4 + [280])) = (int_64)-1
	*(($4 + [288])) = (int_64)0
	*(($4 + [296])) = [0]
	*($4 + [264]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *((($4 + [304]) + [8]))
	$1 = *($4 + [304])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $4($2)
	
.LABEL $label$8
	CALL $246(($4 + [8]))
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $196 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [12]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15744])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3922893291305041920)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [15690])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [15690])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $195(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*(($5 = CALL $9([24])) + [8]) = $1
	*($5) = (int_64)100
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-3922893291305041920, $2, $6, ($4 + [16]), [8])
	*($5 + [12]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $326(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [15613] ? [15615] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $9($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $51($11, $15, [15601], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $2($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $9($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $52($0)
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([24])) + [8]) = $0
	*($5) = (int_64)100
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $326(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $4($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [448])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)4983150932911554559) ){ goto $label$28 }
	if ( ((int_64)$2 > (int_64)-3112731855308193793) ){ goto $label$27 }
	if ( ((int_64)$2 <= (int_64)-4995244626981011457) ){ goto $label$25 }
	if ( ((int_64)$2 > (int_64)-4149686224019259393) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-4995244626981011456) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)-4417316219328135168) ){ goto $label$1 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [6]
	*($3 + [192]) = *($3 + [248])
	CALL $220($1, $1, ($3 + [192]))
	CALL eosio_exit([0])
	
.LABEL $label$28
	if ( ((int_64)$2 > (int_64)5453992623555089679) ){ goto $label$26 }
	if ( ((int_64)$2 <= (int_64)5378234048358760447) ){ goto $label$24 }
	if ( ((int_64)$2 > (int_64)5453992622526300159) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)5378234048358760448) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)5453968847618539520) ){ goto $label$1 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [7]
	*($3 + [160]) = *($3 + [280])
	CALL $221($1, $1, ($3 + [160]))
	CALL eosio_exit([0])
	
.LABEL $label$27
	if ( ((int_64)$2 <= (int_64)3849304916161986559) ){ goto $label$23 }
	if ( ((int_64)$2 > (int_64)4849591931432727839) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)3849304916161986560) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)4730615000547960512) ){ goto $label$1 }
	*($3 + [324]) = [0]
	*($3 + [320]) = [8]
	*($3 + [120]) = *($3 + [320])
	CALL $222($1, $1, ($3 + [120]))
	CALL eosio_exit([0])
	
.LABEL $label$26
	if ( ((int_64)$2 <= (int_64)6292810517502951423) ){ goto $label$22 }
	if ( ((int_64)$2 > (int_64)6299106150462498495) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)6292810517502951424) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)6299106147815129088) ){ goto $label$1 }
	*($3 + [260]) = [0]
	*($3 + [256]) = [9]
	*($3 + [184]) = *($3 + [256])
	CALL $223($1, $1, ($3 + [184]))
	CALL eosio_exit([0])
	
.LABEL $label$25
	if ( ((int_64)$2 == (int_64)-8281833726126676336) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-7951555763739398144) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-5002754507398971392) ){ goto $label$1 }
	*($3 + [420]) = [0]
	*($3 + [416]) = [10]
	*($3 + [24]) = *($3 + [416])
	CALL $224($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$24
	if ( ((int_64)$2 == (int_64)4983150932911554560) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)5031766163619577856) ){ goto $label$1 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [11]
	*($3 + [64]) = *($3 + [376])
	CALL $225($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$23
	if ( ((int_64)$2 == (int_64)-3112731855308193792) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)-3020389777582063616) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)3626333793311637504) ){ goto $label$1 }
	*($3 + [372]) = [0]
	*($3 + [368]) = [12]
	*($3 + [72]) = *($3 + [368])
	CALL $226($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$22
	if ( ((int_64)$2 == (int_64)5453992623555089680) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)6110391458646196224) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)6256973777754652672) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [13]
	*($3 + [216]) = *($3 + [224])
	CALL $227($1, $1, ($3 + [216]))
	CALL eosio_exit([0])
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-4149686224019259392) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [428]) = [0]
	*($3 + [424]) = [14]
	*($3 + [16]) = *($3 + [424])
	CALL $228($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)5453992622526300160) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)5453992622734212096) ){ goto $label$1 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [15]
	*($3 + [48]) = *($3 + [392])
	CALL $229($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$19
	if ( ((int_64)$2 == (int_64)4849591931432727840) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)4983122731148656640) ){ goto $label$1 }
	*($3 + [412]) = [0]
	*($3 + [408]) = [16]
	*($3 + [32]) = *($3 + [408])
	CALL $230($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)6299106150462498496) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$1 }
	*($3 + [436]) = [0]
	*($3 + [432]) = [17]
	*($3 + [8]) = *($3 + [432])
	CALL $224($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$17
	*($3 + [356]) = [0]
	*($3 + [352]) = [18]
	*($3 + [88]) = *($3 + [352])
	CALL $231($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$16
	*($3 + [364]) = [0]
	*($3 + [360]) = [19]
	*($3 + [80]) = *($3 + [360])
	CALL $226($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$15
	*($3 + [348]) = [0]
	*($3 + [344]) = [20]
	*($3 + [96]) = *($3 + [344])
	CALL $232($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$14
	*($3 + [332]) = [0]
	*($3 + [328]) = [21]
	*($3 + [112]) = *($3 + [328])
	CALL $233($1, $1, ($3 + [112]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	*($3 + [236]) = [0]
	*($3 + [232]) = [22]
	*($3 + [208]) = *($3 + [232])
	CALL $234($1, $1, ($3 + [208]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [244]) = [0]
	*($3 + [240]) = [23]
	*($3 + [200]) = *($3 + [240])
	CALL $235($1, $1, ($3 + [200]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [276]) = [0]
	*($3 + [272]) = [24]
	*($3 + [168]) = *($3 + [272])
	CALL $236($1, $1, ($3 + [168]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [444]) = [0]
	*($3 + [440]) = [25]
	*($3) = *($3 + [440])
	CALL $237($1, $1, $3)
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [340]) = [0]
	*($3 + [336]) = [26]
	*($3 + [104]) = *($3 + [336])
	CALL $238($1, $1, ($3 + [104]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [268]) = [0]
	*($3 + [264]) = [27]
	*($3 + [176]) = *($3 + [264])
	CALL $239($1, $1, ($3 + [176]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [388]) = [0]
	*($3 + [384]) = [28]
	*($3 + [56]) = *($3 + [384])
	CALL $229($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [292]) = [0]
	*($3 + [288]) = [29]
	*($3 + [152]) = *($3 + [288])
	CALL $240($1, $1, ($3 + [152]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [300]) = [0]
	*($3 + [296]) = [30]
	*($3 + [144]) = *($3 + [296])
	CALL $221($1, $1, ($3 + [144]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [404]) = [0]
	*($3 + [400]) = [31]
	*($3 + [40]) = *($3 + [400])
	CALL $241($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [316]) = [0]
	*($3 + [312]) = [32]
	*($3 + [128]) = *($3 + [312])
	CALL $242($1, $1, ($3 + [128]))
	CALL eosio_exit([0])
	
.LABEL $label$2
	*($3 + [308]) = [0]
	*($3 + [304]) = [33]
	*($3 + [136]) = *($3 + [304])
	CALL $243($1, $1, ($3 + [136]))
	
.LABEL $label$1
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $218 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $190 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth($3)
	CALL $168(($4 + [80]), $0, $1, $3, [1])
	if ( ((int_32)*(($4 + [97])) == (int_32)*($0 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], *($0 + [44]))
	
.LABEL $label$1
	$6 = *($2 + [4])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$7 = ($4 + [104])
	$8 = ($4 + [100])
	$9 = ($0 + [40])
	
.LOOP $label$4:
	if ( CALL is_account(*($5)) ){ goto $label$5 }
	CALL eosio_assert([0], *($9))
	
.LABEL $label$5
	$11 = *($7)
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$7 }
	$3 = *($5)
	
.LOOP $label$8:
	if ( ((int_64)*($10) == (int_64)$3) ){ goto $label$7 }
	$10 = ($10 + [16])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$6 }
	CALL eosio_assert([0], [13020])
	
.LABEL $label$6
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$4 }
	$5 = *(($2 + [4]))
	$8 = *($2)
	goto $label$2 
	
.LABEL $label$3
	$8 = $5
	
.LABEL $label$2
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	$10 = [0]
	$11 = [0]
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$9 }
	$2 = (($4 + [48]) | [1])
	$9 = (($4 + [48]) + [8])
	
.LOOP $label$10:
	$3 = *($8)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$14 }
	$11 = [0]
	$6 = *([0] + [8520])
	
.LOOP $label$16:
	*((($4 + [131]) + ($10 = $11))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$10 == (int_32)[12]) )))))
	$11 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[11]) ){ goto $label$15 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*($9) = [0]
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [48]) = ($11 << [1])
	$6 = $2
	goto $label$12 
	
.LABEL $label$14
	*($9) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [48]) = [0]
	$10 = $2
	goto $label$11 
	
.LABEL $label$13
	$7 = (($11 + [16]) & [-16])
	$6 = CALL $9($7)
	*($9) = $6
	*($4 + [48]) = ($7 | [1])
	*($4 + [52]) = $11
	
.LABEL $label$12
	$7 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$17:
	*(($6 + $10)) = *((($4 + [131]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$17 }
	$10 = ($6 + $11)
	
.LABEL $label$11
	*($10) = [0]
	$10 = *($4 + [68])
	if ( ((uint_32)$10 >= (uint_32)*((($4 + [64]) + [8]))) ){ goto $label$19 }
	*($10) = *($4 + [48])
	*(($10 + [8])) = *($9)
	*($9) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [68]) = (*($4 + [68]) + [12])
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$10 }
	goto $label$18 
	
.LABEL $label$19
	CALL $191(($4 + [64]), ($4 + [48]))
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$20 }
	CALL $11(*($9))
	
.LABEL $label$20
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$18
	$10 = *($4 + [64])
	$11 = *($4 + [68])
	
.LABEL $label$9
	*(($7 = (($4 + [32]) + [8]))) = *(($4 + [120]))
	*($4 + [32]) = *($4 + [112])
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = [0]
	$10 = ($11 - $10)
	$6 = ((int_32)$10 / (int_32)[12])
	if ( ($10 == 0) ){ goto $label$22 }
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$21 }
	$11 = CALL $9($10)
	*(($4 + [24])) = ($11 + ((int_32)$6 * (int_32)[12]))
	*($4 + [16]) = $11
	*($4 + [20]) = $11
	$6 = *($4 + [68])
	$10 = *($4 + [64])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$23:
	CALL $53($11, $10)
	$11 = (*($4 + [20]) + [12])
	*($4 + [20]) = $11
	$10 = ($10 + [12])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$23 }
	
.LABEL $label$22
	*(($4 + [8])) = *($7)
	*($4) = *($4 + [32])
	CALL $170($0, $1, $4, [0], ($4 + [16]))
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$24 }
	$11 = *($4 + [20])
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$27:
	$10 = ($11 + [-12])
	if ( ((*($10) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*(($11 + [-4])))
	
.LABEL $label$28
	$11 = $10
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$27 }
	$10 = *($4 + [16])
	goto $label$25 
	
.LABEL $label$26
	$10 = $6
	
.LABEL $label$25
	*($4 + [20]) = $6
	CALL $11($10)
	
.LABEL $label$24
	$6 = *($4 + [64])
	if ( ($6 == 0) ){ goto $label$29 }
	$11 = *($4 + [68])
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$31 }
	
.LOOP $label$32:
	$10 = ($11 + [-12])
	if ( ((*($10) & [1]) == 0) ){ goto $label$33 }
	CALL $11(*(($11 + [-4])))
	
.LABEL $label$33
	$11 = $10
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$32 }
	$10 = *($4 + [64])
	goto $label$30 
	
.LABEL $label$31
	$10 = $6
	
.LABEL $label$30
	*($4 + [68]) = $6
	CALL $11($10)
	
.LABEL $label$29
	$10 = *(($4 + [100]))
	if ( ($10 == 0) ){ goto $label$34 }
	*(($4 + [104])) = $10
	CALL $11($10)
	
.LABEL $label$34
	$global$0 = ($4 + [144])
	return (unreachable)
	
.LABEL $label$21
	CALL $44(($4 + [16]))
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$7 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $9(((int_32)$6 * (int_32)[12]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$8 = *($1)
	*($1) = (int_64)0
	*(($4 = ($5 + ((int_32)$4 * (int_32)[12])))) = $8
	$1 = ($1 + [8])
	$7 = *($1)
	*($1) = [0]
	*(($4 + [8])) = $7
	$6 = ($5 + ((int_32)$6 * (int_32)[12]))
	$5 = ($4 + [12])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($2 + [-4])
	*(($4 + [-4])) = *($1)
	$2 = ($2 + [-12])
	*(($4 = ($4 + [-12]))) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $4
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($2 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($2 + [-4])))
	
.LABEL $label$9
	$2 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $11($3)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $174 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $46(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $46(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $176 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [40]) = [1]
	*($5 + [32]) = *(*($3))
	$3 = ($1 + [16])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [20]))) ){ goto $label$5 }
	*($7) = *($5 + [32])
	*(($7 + [8])) = *((($5 + [32]) + [8]))
	*($3) = (*($3) + [16])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $164(($1 + [12]), ($5 + [32]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [14308])
	
.LABEL $label$3
	$7 = ($1 + [12])
	$9 = *($1 + [12])
	$8 = *(($1 + [16]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	$3 = [10]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$7 }
	$3 = ((((int_32)uint_32(($10 + [-16]) >> [4]) * (int_32)[9]) + $3) + [9])
	
.LABEL $label$7
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $3($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [9])
	CALL $185(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $4($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [48])
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = *($1)
	$8 = (*($5 + [32]) & [1])
	$3 = CALL $53(($5 + [32]), *(*(($3 + [4])) + [28]))
	$7 = *($3 + [8])
	$9 = ( $7 ? ($3 + [1]) : $8 )
	$3 = *($9)
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 + [1])
	$10 = (int_64)0
	
.LOOP $label$6:
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56) + (int_64)((int_64)$10 * (int_64)10)) + (int_64)-48)
	$3 = *($9)
	$9 = ($9 + [1])
	if ( $3 ){ goto $label$6 }
	*($1 + [8]) = (CASTING uint_32)(uint_64 $10)
	if ( ($8 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	*($1 + [8]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $11($7)
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$7
	$8 = ($1 + [8])
	$7 = ($1 + [12])
	$11 = *($1 + [12])
	$9 = *(($1 + [16]))
	$12 = ($9 - $11)
	$10 = (CASTING uint_64)(uint_32 int_32($12 >> [4]))
	$3 = [10]
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$9 }
	$3 = ((((int_32)uint_32(($12 + [-16]) >> [4]) * (int_32)[9]) + $3) + [9])
	
.LABEL $label$9
	if ( ($3 <= [513]) ){ goto $label$11 }
	$9 = CALL $3($3)
	goto $label$10 
	
.LABEL $label$11
	$9 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$10
	*($5 + [12]) = $9
	*($5 + [8]) = $9
	*($5 + [16]) = ($9 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $8
	*($5 + [44]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [9])
	CALL $185(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $9, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $4($9)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [48])
}

int_64 .FUNC $170 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [16])
	$global$0 = $5
	*($5) = (int_64)0
	*($5 + [8]) = [0]
	$6 = (*($4 + [4]) - *($4))
	$7 = ((int_32)$6 / (int_32)[12])
	$8 = *($2 + [8])
	$9 = *($2)
	if ( ($6 == 0) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[357913942]) ){ goto $label$1 }
	$2 = CALL $9($6)
	*(($5 + [8])) = ($2 + ((int_32)$7 * (int_32)[12]))
	*($5) = $2
	*($5 + [4]) = $2
	$4 = *(($4 + [4]))
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$7 = CALL $53($2, $6)
	$2 = ($2 + [12])
	$6 = ($6 + [12])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$3 }
	*($5 + [4]) = ($7 + [12])
	
.LABEL $label$2
	$1 = CALL $172($0, $1, $9, ($8 & [255]), $3, $5)
	$4 = *($5)
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = *($5 + [4])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($6 + [-4])))
	
.LABEL $label$8
	$6 = $2
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$7 }
	$2 = *($5)
	goto $label$5 
	
.LABEL $label$6
	$2 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	CALL $11($2)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
	return $1
	
.LABEL $label$1
	CALL $44($5)
	return (unreachable)
}

int_32 .FUNC $171 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-6496020250016874496, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $138($0, $5)
	if ( ((int_32)*($6 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_64 .FUNC $172 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [352])
	$global$0 = $6
	*($6 + [288]) = $2
	*($6 + [296]) = $1
	*($6 + [287]) = $4
	CALL $107(($6 + [224]), ($0 + [216]))
	$2 = *($0)
	*($6 + [176]) = [15616]
	*($6 + [180]) = CALL $2([15616])
	*($6 + [16]) = *($6 + [176])
	CALL $89(($6 + [312]), ($6 + [16]))
	*((($6 + [184]) + [32])) = [0]
	*($6 + [184]) = $2
	*($6 + [200]) = (int_64)-1
	*($6 + [208]) = (int_64)0
	*($6 + [192]) = (int_64)-2507685100368429056
	*((($6 + [136]) + [32])) = [0]
	*($6 + [144]) = $1
	*($6 + [152]) = (int_64)-1
	*($6 + [160]) = (int_64)0
	*($6 + [172]) = [0]
	*($6 + [136]) = *($0)
	$4 = CALL db_lowerbound_i64($2, (int_64)-2507685100368429056, (int_64)-3922893291305041920, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	CALL $195(($6 + [184]), $4)
	*($6 + [316]) = [0]
	*($6 + [312]) = ($6 + [184])
	$1 = *(*(CALL $196(($6 + [312])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	*(($4 = ($6 + [200]))) = $1
	if ( (uint_64)($1 <= (int_64)-2) ){ goto $label$7 }
	CALL eosio_assert([0], [15638])
	$1 = *($4)
	
.LABEL $label$7
	if ( (int_64)($1 == 0) ){ goto $label$5 }
	if ( ((int_64)$1 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$1 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$6
	*(($6 + [200])) = (int_64)0
	
.LABEL $label$5
	$1 = (int_64)100
	goto $label$1 
	
.LABEL $label$4
	$1 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6 + [184]), *(($6 + [192])), (int_64)-3922893291305041920, (int_64)0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $195(($6 + [184]), $4)
	*($6 + [316]) = [0]
	*($6 + [312]) = ($6 + [184])
	$1 = *(*(CALL $196(($6 + [312])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	*(($6 + [200])) = $1
	if ( (uint_64)($1 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [15638])
	$1 = *(($6 + [200]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [200])) = (int_64)0
	
.LABEL $label$1
	*($6 + [128]) = $1
	$1 = *($0)
	*($6 + [104]) = ($6 + [128])
	CALL $197(($6 + [312]), ($6 + [184]), $1, ($6 + [104]))
	$1 = *($0)
	*($6 + [324]) = $5
	*($6 + [316]) = ($6 + [288])
	*($6 + [312]) = ($6 + [128])
	*($6 + [320]) = ($6 + [287])
	*($6 + [328]) = ($6 + [224])
	CALL $198(($6 + [104]), ($6 + [136]), $1, ($6 + [312]))
	if ( ($3 == 0) ){ goto $label$8 }
	$1 = *($0)
	*($6 + [88]) = [12241]
	$2 = *($6 + [288])
	*($6 + [92]) = CALL $2([12241])
	*($6 + [8]) = *($6 + [88])
	$3 = CALL $89(($6 + [96]), ($6 + [8]))
	*(($5 = (($6 + [104]) + [16]))) = [0]
	*($6 + [104]) = $1
	*($6 + [112]) = (int_64)0
	$1 = *($3)
	*(($3 = CALL $9([16]))) = $2
	*($3 + [8]) = $1
	$4 = ($3 + [16])
	*($5) = $4
	*(($6 + [116])) = $4
	*($6 + [112]) = $3
	CALL $199(($6 + [312]), ($6 + [104]), ($6 + [296]), ($6 + [128]), ($6 + [288]), [15615])
	CALL $97(($6 + [312]))
	$3 = *($6 + [340])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($6 + [344])) = $3
	CALL $11($3)
	
.LABEL $label$9
	$3 = *($6 + [328])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($6 + [332])) = $3
	CALL $11($3)
	
.LABEL $label$10
	$3 = *($6 + [112])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($6 + [116])) = $3
	CALL $11($3)
	
.LABEL $label$8
	CALL $184($0, *($6 + [296]), *($6 + [128]), *($0 + [28]))
	$1 = *($0)
	*($6 + [72]) = [12241]
	*($6 + [76]) = CALL $2([12241])
	*($6) = *($6 + [72])
	$3 = CALL $89(($6 + [80]), $6)
	*($6 + [104]) = $1
	$2 = *($3)
	*(($3 = CALL $9([16]))) = $1
	*($3 + [8]) = $2
	$5 = ($3 + [16])
	*((($6 + [104]) + [16])) = $5
	*((($6 + [104]) + [12])) = $5
	*($6 + [112]) = $3
	$7 = (($6 + [56]) | [4])
	*($6 + [56]) = $7
	*($6 + [60 align=4]) = (int_64)0
	CALL $68(($6 + [40]), *($6 + [128]))
	$3 = ($6 + [48])
	*(($5 = (($6 + [312]) + [12]))) = *($3)
	*($3) = [0]
	*($6 + [312]) = [12913]
	*($6 + [316 align=4]) = *($6 + [40])
	*($6 + [40]) = (int_64)0
	CALL $108(($6 + [304]), ($6 + [56]), ($6 + [312]))
	if ( ((*($6 + [316]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($5))
	
.LABEL $label$11
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($6 + [48])))
	
.LABEL $label$12
	$8 = (($6 + [24]) | [4])
	*($6 + [24]) = $8
	*($6 + [28 align=4]) = (int_64)0
	$5 = *($6 + [56])
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = $5
	$3 = ($4 + [16])
	CALL $109(($6 + [24]), $8, $3, $3)
	$3 = *($4 + [4])
	if ( ($3 == 0) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = $3
	$3 = *($5)
	if ( $3 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$5 = *($4 + [8])
	if ( ((int_32)*($5) == (int_32)$4) ){ goto $label$15 }
	$4 = ($4 + [8])
	
.LOOP $label$18:
	$3 = *($4)
	$4 = ($3 + [8])
	$5 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($5)) ){ goto $label$18 }
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$14 }
	
.LABEL $label$13
	CALL $110(($6 + [40]), $0, ($6 + [24]))
	CALL $200(($6 + [312]), ($6 + [104]), [15623], ($6 + [40]))
	CALL $97(($6 + [312]))
	$3 = *($6 + [340])
	if ( ($3 == 0) ){ goto $label$19 }
	*(($6 + [344])) = $3
	CALL $11($3)
	
.LABEL $label$19
	$3 = *($6 + [328])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($6 + [332])) = $3
	CALL $11($3)
	
.LABEL $label$20
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$21 }
	CALL $11(*($6 + [48]))
	
.LABEL $label$21
	CALL $88(($6 + [24]), *($6 + [28]))
	$1 = *($6 + [128])
	CALL $88(($6 + [56]), *($6 + [60]))
	$3 = *($6 + [112])
	if ( ($3 == 0) ){ goto $label$22 }
	*(($6 + [116])) = $3
	CALL $11($3)
	
.LABEL $label$22
	CALL $145(($6 + [160]))
	$4 = *($6 + [208])
	if ( ($4 == 0) ){ goto $label$23 }
	$7 = ($6 + [212])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	CALL $11($5)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$26 }
	$3 = *(($6 + [208]))
	goto $label$24 
	
.LABEL $label$25
	$3 = $4
	
.LABEL $label$24
	*($7) = $4
	CALL $11($3)
	
.LABEL $label$23
	$3 = *($6 + [268])
	if ( ($3 == 0) ){ goto $label$28 }
	*(($6 + [272])) = $3
	CALL $11($3)
	
.LABEL $label$28
	$global$0 = ($6 + [352])
	return $1
}

void .FUNC $173 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	$4 = ($global$0 - [336])
	$global$0 = $4
	CALL require_auth($3)
	$5 = ($0 + [136])
	$6 = CALL $171($5, $1, [12675])
	*(($4 + [280])) = [0]
	*($4 + [256]) = $1
	*($4 + [264]) = (int_64)-1
	*($4 + [272]) = (int_64)0
	*($4 + [284]) = [0]
	*($4 + [248]) = *($0)
	$7 = CALL $142(($4 + [248]), $2, [12675])
	if ( ((int_32)*($7 + [8]) == (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [12876])
	
.LABEL $label$1
	CALL $107(($4 + [192]), ($0 + [216]))
	*($4 + [184]) = [0]
	*($4 + [176]) = (int_64)0
	$8 = (($4 + [160]) | [4])
	*($4 + [160]) = $8
	*($4 + [164 align=4]) = (int_64)0
	CALL $68(($4 + [296]), *($7))
	*(($4 + [136])) = [0]
	*($4 + [128]) = (int_64)0
	$9 = CALL $2([12913])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$9 }
	*($4 + [128]) = ($9 << [1])
	$10 = (($4 + [128]) | [1])
	if ( $9 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $9($11)
	*($4 + [128]) = ($11 | [1])
	*($4 + [136]) = $10
	*($4 + [132]) = $9
	
.LABEL $label$8
	CALL memcpy($10, [12913], $9)
	
.LABEL $label$7
	*(($10 + $9)) = [0]
	$10 = CALL $174(($4 + [160]), ($4 + [48]), ($4 + [128]))
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	*(($9 = CALL $9([40])) + [28 align=4]) = (int_64)0
	*($9) = (int_64)0
	$11 = (($4 + [128]) + [8])
	*(($9 + [24])) = *($11)
	*($9 + [16 align=4]) = *($4 + [128])
	*($9 + [8]) = *($4 + [48])
	*($10) = $9
	*($9 + [36]) = [0]
	*($11) = [0]
	*($4 + [128]) = (int_64)0
	$11 = $9
	$12 = *(*($4 + [160]))
	if ( ($12 == 0) ){ goto $label$11 }
	*($4 + [160]) = $12
	$11 = *($10)
	
.LABEL $label$11
	CALL $175(*($4 + [164]), $11)
	*(($10 = (($4 + [160]) + [8]))) = (*($10) + [1])
	
.LABEL $label$10
	$10 = ($9 + [28])
	if ( (*($10) & [1]) ){ goto $label$13 }
	*($10) = [0]
	goto $label$12 
	
.LABEL $label$13
	*(*(($9 + [36]))) = [0]
	*(($9 + [32])) = [0]
	
.LABEL $label$12
	CALL $57($10, [0])
	$9 = (($4 + [296]) + [8])
	*(($10 + [8])) = *($9)
	*($10) = *($4 + [296])
	*($9) = [0]
	*($4 + [296]) = (int_64)0
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($4 + [136]))
	if ( ((*($4 + [296]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*(($4 + [304])))
	
.LABEL $label$14
	$9 = *($7 + [24])
	if ( ((uint_32)$9 > (uint_32)[8]) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$22
	$13 = *(($7 + [32]))
	$8 = *($7 + [28])
	if ( ((int_32)$8 == (int_32)$13) ){ goto $label$3 }
	$7 = (($4 + [296]) + [24])
	$14 = (($4 + [128]) | [8])
	$15 = ($4 + [312])
	$16 = (($4 + [296]) + [32])
	$12 = ($4 + [324])
	
.LOOP $label$23:
	$9 = *($8)
	if ( ($9 & [1]) ){ goto $label$25 }
	$9 = uint_32($9 >> [1])
	$10 = ($8 + [1])
	goto $label$24 
	
.LABEL $label$25
	$9 = *($8 + [4])
	$10 = *($8 + [8])
	
.LABEL $label$24
	*($4 + [156]) = $9
	*($4 + [152]) = $10
	*($4 + [8]) = *($4 + [152])
	$9 = CALL $89(($4 + [48]), ($4 + [8]))
	$3 = *($0)
	*($4 + [296]) = $9
	CALL $176($5, $6, $3, ($4 + [296]))
	*($15) = (int_64)-1
	*($7) = (int_64)0
	*($16) = [0]
	*(($10 = (($4 + [296]) + [8]))) = *($4 + [48])
	$3 = *($0)
	*($4 + [296]) = $3
	if ( ((int_64)$3 == (int_64)CALL current_receiver()) ){ goto $label$26 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$26
	*(($9 = CALL $9([24])) + [12]) = ($4 + [296])
	*($9 + [8]) = [1]
	*($9) = $1
	CALL memcpy(($4 + [128]), $9, [8])
	CALL memcpy($14, ($9 + [8]), [1])
	$17 = *($9)
	$11 = CALL db_store_i64(*($10), (int_64)-6219583601149356032, $3, $17, ($4 + [128]), [9])
	*($9 + [16]) = $11
	if ( (uint_64)($17 <= *($15)) ){ goto $label$27 }
	*($15) = ( (int_64)-2 ? ((int_64)$17 + (int_64)1) : ((uint_64)$17 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*($4 + [88]) = $9
	$3 = *($9)
	*($4 + [128]) = $3
	*($4 + [292]) = $11
	$10 = *($12)
	if ( ((uint_32)$10 >= (uint_32)*($16)) ){ goto $label$30 }
	*($10 + [8]) = $3
	*($10 + [16]) = $11
	*($4 + [88]) = [0]
	*($10) = $9
	*($12) = ($10 + [24])
	$9 = *($4 + [88])
	*($4 + [88]) = [0]
	if ( $9 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $157($7, ($4 + [88]), ($4 + [128]), ($4 + [292]))
	$9 = *($4 + [88])
	*($4 + [88]) = [0]
	if ( ($9 == 0) ){ goto $label$28 }
	
.LABEL $label$29
	CALL $11($9)
	
.LABEL $label$28
	$11 = *($7)
	if ( ($11 == 0) ){ goto $label$31 }
	$9 = *($12)
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$33 }
	
.LOOP $label$34:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$35 }
	CALL $11($10)
	
.LABEL $label$35
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$34 }
	$9 = *($7)
	goto $label$32 
	
.LABEL $label$33
	$9 = $11
	
.LABEL $label$32
	*($12) = $11
	CALL $11($9)
	
.LABEL $label$31
	$8 = ($8 + [12])
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$23 }
	goto $label$3 
	
.LABEL $label$21
	CALL eosio_assert([0], [12923])
	goto $label$3 
	
.LABEL $label$20
	$3 = *($0)
	*($4 + [300]) = $7
	*($4 + [296]) = $0
	CALL $177($5, $6, $3, ($4 + [296]))
	goto $label$3 
	
.LABEL $label$19
	$3 = *($0)
	*($4 + [300]) = $6
	*($4 + [296]) = $7
	*($4 + [304]) = $0
	CALL $178($5, $6, $3, ($4 + [296]))
	goto $label$3 
	
.LABEL $label$18
	$17 = *($0)
	*($4 + [112]) = [12241]
	*($4 + [116]) = CALL $2([12241])
	*($4 + [24]) = *($4 + [112])
	$9 = CALL $89(($4 + [120]), ($4 + [24]))
	*($4 + [128]) = $17
	$17 = *($9)
	*(($9 = CALL $9([16]))) = $3
	*($9 + [8]) = $17
	$10 = ($9 + [16])
	*((($4 + [128]) + [16])) = $10
	*(($4 + [140])) = $10
	*($4 + [136]) = $9
	$10 = *($9 + [24])
	$11 = ($10 & [1])
	$9 = *($7 + [28])
	$12 = ( *(($9 + [32])) ? ($9 + [25]) : $11 )
	if ( ((int_32)*($12) != (int_32)[123]) ){ goto $label$36 }
	if ( ((int_32)*((($12 + ( *(($9 + [28])) ? uint_32($10 >> [1]) : $11 )) + [-1])) != (int_32)[125]) ){ goto $label$36 }
	CALL $86(($4 + [296]), $0, ($9 + [24]))
	$12 = (($4 + [296]) | [4])
	$10 = *($4 + [296])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$37 }
	
.LOOP $label$38:
	$11 = $10
	$9 = ($11 + [16])
	CALL $109(($4 + [160]), $8, $9, $9)
	$9 = *($11 + [4])
	if ( ($9 == 0) ){ goto $label$40 }
	
.LOOP $label$41:
	$10 = $9
	$9 = *($10)
	if ( $9 ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$10 = *($11 + [8])
	if ( ((int_32)*($10) == (int_32)$11) ){ goto $label$39 }
	$11 = ($11 + [8])
	
.LOOP $label$42:
	$9 = *($11)
	$11 = ($9 + [8])
	$10 = *($9 + [8])
	if ( ((int_32)$9 != (int_32)*($10)) ){ goto $label$42 }
	
.LABEL $label$39
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$38 }
	
.LABEL $label$37
	CALL $88(($4 + [296]), *($4 + [300]))
	
.LABEL $label$36
	*($4 + [100 align=4]) = (int_64)0
	$12 = (($4 + [96]) | [4])
	*($4 + [96]) = $12
	$10 = *($4 + [160])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$43 }
	
.LOOP $label$44:
	$11 = $10
	$9 = ($11 + [16])
	CALL $109(($4 + [96]), $12, $9, $9)
	$9 = *($11 + [4])
	if ( ($9 == 0) ){ goto $label$46 }
	
.LOOP $label$47:
	$10 = $9
	$9 = *($10)
	if ( $9 ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	$10 = *($11 + [8])
	if ( ((int_32)*($10) == (int_32)$11) ){ goto $label$45 }
	$11 = ($11 + [8])
	
.LOOP $label$48:
	$9 = *($11)
	$11 = ($9 + [8])
	$10 = *($9 + [8])
	if ( ((int_32)$9 != (int_32)*($10)) ){ goto $label$48 }
	
.LABEL $label$45
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$44 }
	
.LABEL $label$43
	CALL $110(($4 + [296]), $0, ($4 + [96]))
	if ( (*($4 + [176]) & [1]) ){ goto $label$16 }
	*($4 + [176]) = [0]
	goto $label$15 
	
.LABEL $label$17
	$9 = CALL db_lowerbound_i64(*($4 + [248]), *(($4 + [256])), (int_64)-2507685100368429056, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$49 }
	$10 = CALL $179(($4 + [248]), $9)
	
.LOOP $label$50:
	$9 = [0]
	$11 = CALL db_next_i64(*($10 + [84]), ($4 + [296]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$51 }
	$9 = CALL $179(($4 + [248]), $11)
	
.LABEL $label$51
	CALL $180(($4 + [248]), $10)
	$10 = $9
	if ( $9 ){ goto $label$50 }
	
.LABEL $label$49
	$15 = *(($6 + [16]))
	$8 = *($6 + [12])
	if ( ((int_32)$8 == (int_32)$15) ){ goto $label$52 }
	$16 = ($4 + [304])
	$13 = (($4 + [296]) + [16])
	$7 = ($4 + [320])
	$14 = ($4 + [328])
	$12 = ($4 + [324])
	
.LOOP $label$53:
	$3 = *($8)
	*($16) = $3
	*($13) = (int_64)-1
	*($7) = (int_64)0
	*($14) = [0]
	$17 = *($0)
	*($4 + [296]) = $17
	$9 = CALL db_find_i64($17, $3, (int_64)-6219583601149356032, *($6))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$59 }
	$9 = CALL $156(($4 + [296]), $9)
	if ( ((int_32)*($9 + [12]) == (int_32)($4 + [296])) ){ goto $label$60 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$60
	$10 = CALL db_next_i64(*($9 + [16]), ($4 + [128]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$61 }
	CALL $156(($4 + [296]), $10)
	
.LABEL $label$61
	CALL $181(($4 + [296]), $9)
	$11 = *($7)
	if ( ($11 == 0) ){ goto $label$56 }
	$9 = *($12)
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$58 }
	
.LOOP $label$62:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$63 }
	CALL $11($10)
	
.LABEL $label$63
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$62 }
	$9 = *($7)
	goto $label$57 
	
.LABEL $label$59
	$11 = *($7)
	if ( ($11 == 0) ){ goto $label$56 }
	$9 = *($12)
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$55 }
	
.LOOP $label$64:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$65 }
	CALL $11($10)
	
.LABEL $label$65
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$64 }
	$9 = *($7)
	goto $label$54 
	
.LABEL $label$58
	$9 = $11
	
.LABEL $label$57
	*($12) = $11
	CALL $11($9)
	
.LABEL $label$56
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$15) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$9 = $11
	
.LABEL $label$54
	*($12) = $11
	CALL $11($9)
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$15) ){ goto $label$53 }
	
.LABEL $label$52
	CALL $182($5, $6)
	goto $label$2 
	
.LABEL $label$16
	*(*(($4 + [184]))) = [0]
	*($4 + [180]) = [0]
	
.LABEL $label$15
	CALL $57(($4 + [176]), [0])
	$9 = (($4 + [296]) + [8])
	*((($4 + [176]) + [8])) = *($9)
	*($9) = [0]
	*($4 + [176]) = *($4 + [296])
	*($4 + [296]) = (int_64)0
	CALL $88(($4 + [96]), *($4 + [100]))
	$11 = *($9)
	$8 = ($11 & [1])
	$10 = ($7 + [28])
	$9 = CALL $53(($4 + [64]), *($10))
	*($4 + [80]) = ( *($9 + [8]) ? ($9 + [1]) : $8 )
	*($4 + [84]) = ( *($9 + [4]) ? uint_32($11 >> [1]) : $8 )
	*($4 + [16]) = *($4 + [80])
	$11 = CALL $89(($4 + [88]), ($4 + [16]))
	$10 = CALL $53(($4 + [32]), (*($10) + [12]))
	CALL $143(($4 + [48]), $0, $10)
	CALL $183(($4 + [296]), ($4 + [128]), $6, $11, ($4 + [48]), ($4 + [176]))
	CALL $97(($4 + [296]))
	$11 = *($4 + [324])
	if ( ($11 == 0) ){ goto $label$66 }
	*(($4 + [328])) = $11
	CALL $11($11)
	
.LABEL $label$66
	$11 = *($4 + [312])
	if ( ($11 == 0) ){ goto $label$67 }
	*(($4 + [316])) = $11
	CALL $11($11)
	
.LABEL $label$67
	if ( (*($10) & [1]) ){ goto $label$69 }
	if ( (*($9) & [1]) ){ goto $label$68 }
	goto $label$5 
	
.LABEL $label$69
	CALL $11(*($10 + [8]))
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$68
	CALL $11(*(($9 + [8])))
	$9 = *($4 + [136])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $52(($4 + [128]))
	
.LABEL $label$5
	$9 = *($4 + [136])
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 + [140])) = $9
	CALL $11($9)
	
.LABEL $label$3
	CALL $184($0, $1, $2, *($0 + [29]))
	
.LABEL $label$2
	CALL $88(($4 + [160]), *($4 + [164]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$70 }
	CALL $11(*(($4 + [184])))
	
.LABEL $label$70
	$9 = *($4 + [236])
	if ( ($9 == 0) ){ goto $label$71 }
	*(($4 + [240])) = $9
	CALL $11($9)
	
.LABEL $label$71
	CALL $145(($4 + [272]))
	$global$0 = ($4 + [336])
	$9
	(unreachable)
}

void .FUNC $178 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = *($1)
	$9 = *(($7 + [32]))
	$7 = *($3)
	$8 = *($7 + [28])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	$10 = *($3 + [8])
	$11 = ($3 + [4])
	$12 = ($5 + [40])
	$13 = ($5 + [56])
	$14 = (($5 + [32]) + [32])
	$15 = ($5 + [60])
	
.LOOP $label$4:
	$3 = *($8)
	if ( ($3 & [1]) ){ goto $label$6 }
	$3 = uint_32($3 >> [1])
	$7 = ($8 + [1])
	goto $label$5 
	
.LABEL $label$6
	$3 = *($8 + [4])
	$7 = *($8 + [8])
	
.LABEL $label$5
	*($5 + [76]) = $3
	*($5 + [72]) = $7
	*($5 + [8]) = *($5 + [72])
	CALL $89(($5 + [16]), ($5 + [8]))
	$7 = *(($7 + [16]))
	$7 = *($11)
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	$16 = *($5 + [16])
	
.LOOP $label$10:
	if ( ((int_64)*($3) == (int_64)$16) ){ goto $label$9 }
	$3 = ($3 + [16])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [16115])
	$3 = $7
	
.LABEL $label$7
	$18 = ($3 + [16])
	$17 = ($1 + [16])
	$7 = (*($17) - $18)
	$19 = int_32($7 >> [4])
	if ( ($7 == 0) ){ goto $label$11 }
	CALL memmove($3, $18, $7)
	
.LABEL $label$11
	*($17) = ($3 + ($19 << [4]))
	$16 = *($10)
	$20 = *($5 + [16])
	*($12) = $20
	*((($5 + [32]) + [16])) = (int_64)-1
	*($13) = (int_64)0
	*($14) = [0]
	*($5 + [32]) = $16
	$3 = CALL db_find_i64($16, $20, (int_64)-6219583601149356032, *(*($11)))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	$3 = CALL $156(($5 + [32]), $3)
	if ( ((int_32)*($3 + [12]) == (int_32)($5 + [32])) ){ goto $label$12 }
	CALL eosio_assert([0], [14043])
	goto $label$12 
	
.LABEL $label$13
	$3 = [0]
	CALL eosio_assert([0], [12675])
	
.LABEL $label$12
	CALL $181(($5 + [32]), $3)
	$17 = *($13)
	if ( ($17 == 0) ){ goto $label$14 }
	$3 = *($15)
	if ( ((int_32)$3 == (int_32)$17) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$18 }
	CALL $11($7)
	
.LABEL $label$18
	if ( ((int_32)$17 != (int_32)$3) ){ goto $label$17 }
	$3 = *($13)
	goto $label$15 
	
.LABEL $label$16
	$3 = $17
	
.LABEL $label$15
	*($15) = $17
	CALL $11($3)
	
.LABEL $label$14
	$8 = ($8 + [12])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$3
	$17 = ($1 + [12])
	$8 = *($1 + [12])
	$7 = *(($1 + [16]))
	$13 = ($7 - $8)
	$16 = (CASTING uint_64)(uint_32 int_32($13 >> [4]))
	$3 = [10]
	
.LOOP $label$19:
	$3 = ($3 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$19 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$20 }
	$3 = ((((int_32)uint_32(($13 + [-16]) >> [4]) * (int_32)[9]) + $3) + [9])
	
.LABEL $label$20
	if ( ($3 <= [513]) ){ goto $label$22 }
	$7 = CALL $3($3)
	goto $label$21 
	
.LABEL $label$22
	$7 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$21
	*($5 + [20]) = $7
	*($5 + [16]) = $7
	*($5 + [24]) = ($7 + $3)
	*($5 + [72]) = ($5 + [16])
	*($5 + [44]) = $17
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [9])
	CALL $185(($5 + [32]), ($5 + [72]))
	CALL db_update_i64(*($1 + [28]), $2, $7, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$25 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $4($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$23 }
	
.LABEL $label$24
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$23
	$global$0 = ($5 + [80])
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [16]) = (int_64)0
	*($5 + [8]) = [0]
	*($5 + [25]) = [0]
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [36]) = [0]
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [60 align=4]) = (int_64)0
	*($5 + [68]) = [0]
	*($5 + [72]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$7 = CALL current_time()
	*($5 + [80]) = $0
	*($5 + [76]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [604800])
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [25])
	*($3 + [60]) = ($5 + [28])
	*($3 + [64]) = ($5 + [40])
	*($3 + [68]) = ($5 + [41])
	*($3 + [72]) = ($5 + [44])
	*($3 + [76]) = ($5 + [56])
	*($3 + [80]) = ($5 + [68])
	*($3 + [84]) = ($5 + [72])
	*($3 + [88]) = ($5 + [76])
	CALL $350(($3 + [40]), ($3 + [32]))
	*($5 + [88]) = [-1]
	*($5 + [84]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $328(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$1 = *($2 + [56])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [60])) = $1
	CALL $11($1)
	
.LABEL $label$11
	$1 = *($2 + [44])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [48])) = $1
	CALL $11($1)
	
.LABEL $label$12
	$0 = *($2 + [28])
	if ( ($0 == 0) ){ goto $label$13 }
	$6 = ($2 + [32])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$1 = ($4 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$17 }
	CALL $11(*(($4 + [-4])))
	
.LABEL $label$17
	$4 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$16 }
	$1 = *(($2 + [28]))
	goto $label$14 
	
.LABEL $label$15
	$1 = $0
	
.LABEL $label$14
	*($6) = $0
	CALL $11($1)
	
.LABEL $label$13
	CALL $11($2)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

int_32 .FUNC $237 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [464])
	$global$0 = $3
	*(($4 = $3) + [408]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*(($4 + [360])) = (int_64)0
	*(($4 + [384])) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [348]) = [0]
	*($4 + [352]) = (int_64)0
	*($4 + [368]) = [0]
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = [0]
	*($4 + [400]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [448]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $244(($4 + [16]), ($4 + [448]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [416]) + [8])) = $3
	*(($6 = (($4 + [432]) + [8]))) = $3
	$7 = *($4)
	*($4 + [432]) = $7
	*($4 + [416]) = $7
	$3 = *($6)
	*((($4 + [448]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [432])
	*($4 + [32]) = $1
	*($4 + [448]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [44]) = [513]
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*($4 + [452]) = ($4 + [408])
	*($4 + [448]) = ($4 + [16])
	CALL $245(($4 + [448]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [16]))
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [344])))
	
.LABEL $label$5
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $235 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [432])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [328]) + [24])) = (int_64)0
	*(($4 + [368])) = [0]
	*($4 + [336]) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [416]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $272(($4 + [16]), ($4 + [416]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [384]) + [8])) = $3
	*(($6 = (($4 + [400]) + [8]))) = $3
	$7 = *($4)
	*($4 + [400]) = $7
	*($4 + [384]) = $7
	$3 = *($6)
	*((($4 + [416]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [400])
	*($4 + [32]) = $1
	*($4 + [416]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [44]) = [513]
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*($4 + [420]) = ($4 + [376])
	*($4 + [416]) = ($4 + [16])
	CALL $273(($4 + [416]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [16]))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [368])))
	
.LABEL $label$5
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $97 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $95($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $309(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [52]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	CALL $305(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $100(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($0 + [4 align=4]) = (int_64)0
	*($0) = ($0 + [4])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	*($3 + [88]) = [0]
	*($3 + [80]) = (int_64)0
	$4 = *($2)
	$5 = ($4 & [1])
	$6 = ( *($2 + [8]) ? ($2 + [1]) : $5 )
	if ( ((int_32)*($6) != (int_32)[123]) ){ goto $label$1 }
	$4 = ( *($2 + [4]) ? uint_32($4 >> [1]) : $5 )
	if ( ((int_32)*((($6 + $4) + [-1])) != (int_32)[125]) ){ goto $label$1 }
	$5 = CALL $54(($3 + [48]), $2, [1], ($4 + [-2]), $2)
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	$2 = CALL $2([14816])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$10 }
	*($3 + [32]) = ($2 << [1])
	$4 = (($3 + [32]) | [1])
	if ( $2 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = (($2 + [16]) & [-16])
	$4 = CALL $9($6)
	*($3 + [32]) = ($6 | [1])
	*($3 + [40]) = $4
	*($3 + [36]) = $2
	
.LABEL $label$9
	CALL memcpy($4, [14816], $2)
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	CALL $186(($3 + [64]), $1, $5, ($3 + [32]))
	if ( (*($3 + [32]) & [1]) ){ goto $label$12 }
	if ( (*($3 + [48]) & [1]) ){ goto $label$11 }
	goto $label$6 
	
.LABEL $label$12
	CALL $11(*($3 + [40]))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$11
	CALL $11(*($5 + [8]))
	$7 = *($3 + [68])
	$6 = *($3 + [64])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	CALL $52(($3 + [32]))
	
.LABEL $label$6
	$7 = *($3 + [68])
	$6 = *($3 + [64])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$8 = (($3 + [80]) | [1])
	$9 = (($3 + [96]) | [1])
	$10 = (($3 + [16]) | [1])
	$11 = (($3 + [16]) + [8])
	$12 = ($0 + [4])
	
.LOOP $label$16:
	*($11) = [0]
	*($3 + [16]) = (int_64)0
	$2 = CALL $2([14814])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$19 }
	*($3 + [16]) = ($2 << [1])
	$4 = $10
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$5 = (($2 + [16]) & [-16])
	$4 = CALL $9($5)
	*($11) = $4
	*($3 + [16]) = ($5 | [1])
	*($3 + [20]) = $2
	
.LABEL $label$18
	CALL memcpy($4, [14814], $2)
	
.LABEL $label$17
	*(($4 + $2)) = [0]
	CALL $186(($3 + [48]), $1, $6, ($3 + [16]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$20 }
	CALL $11(*($11))
	
.LABEL $label$20
	$2 = *($3 + [48])
	if ( ((int_32)*($3 + [52]) == (int_32)$2) ){ goto $label$14 }
	CALL $187($3, $1, $2)
	if ( (*($3 + [96]) & [1]) ){ goto $label$22 }
	*($3 + [96]) = [0]
	goto $label$21 
	
.LABEL $label$22
	*(*((($3 + [96]) + [8]))) = [0]
	*($3 + [100]) = [0]
	
.LABEL $label$21
	CALL $57(($3 + [96]), [0])
	$4 = ($3 + [8])
	*(($2 = (($3 + [96]) + [8]))) = *($4)
	*($3 + [96]) = *($3)
	$5 = *($3 + [48])
	if ( ((uint_32)((int_32)(*($3 + [52]) - $5) / (int_32)[12]) <= (uint_32)[1]) ){ goto $label$13 }
	CALL $187($3, $1, ($5 + [12]))
	if ( (*($3 + [80]) & [1]) ){ goto $label$24 }
	*($3 + [80]) = [0]
	goto $label$23 
	
.LABEL $label$24
	*(*((($3 + [80]) + [8]))) = [0]
	*($3 + [84]) = [0]
	
.LABEL $label$23
	CALL $57(($3 + [80]), [0])
	*(($5 = (($3 + [80]) + [8]))) = *($4)
	*($3 + [80]) = *($3)
	CALL prints([15468])
	$2 = *($3 + [96])
	$4 = ($2 & [1])
	CALL prints_l(( *($2) ? $9 : $4 ), ( *($3 + [100]) ? uint_32($2 >> [1]) : $4 ))
	CALL prints([15470])
	$2 = *($3 + [80])
	$4 = ($2 & [1])
	CALL prints_l(( *($5) ? $8 : $4 ), ( *($3 + [84]) ? uint_32($2 >> [1]) : $4 ))
	$4 = CALL $174($0, $3, ($3 + [96]))
	$2 = *($4)
	if ( $2 ){ goto $label$25 }
	$2 = CALL $9([40])
	CALL $53(($2 + [16]), ($3 + [96]))
	*($2 + [28 align=4]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [8]) = *($3)
	*($4) = $2
	*($2 + [36]) = [0]
	$5 = $2
	$13 = *(*($0))
	if ( ($13 == 0) ){ goto $label$26 }
	*($0) = $13
	$5 = *($4)
	
.LABEL $label$26
	CALL $175(*($12), $5)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$25
	CALL $55(($2 + [28]), ($3 + [80]))
	$5 = *($3 + [48])
	if ( ($5 == 0) ){ goto $label$27 }
	$4 = *($3 + [52])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$29 }
	
.LOOP $label$30:
	$2 = ($4 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$31 }
	CALL $11(*(($4 + [-4])))
	
.LABEL $label$31
	$4 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$30 }
	$2 = *($3 + [48])
	goto $label$28 
	
.LABEL $label$29
	$2 = $5
	
.LABEL $label$28
	*($3 + [52]) = $5
	CALL $11($2)
	
.LABEL $label$27
	$6 = ($6 + [12])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	$6 = *($3 + [64])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$15
	CALL $52(($3 + [16]))
	
.LABEL $label$14
	CALL $45(($3 + [48]))
	
.LABEL $label$13
	CALL $45(($3 + [48]))
	
.LABEL $label$3
	$4 = *($3 + [68])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$2 = ($4 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$35 }
	CALL $11(*(($4 + [-4])))
	
.LABEL $label$35
	$4 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$34 }
	$2 = *($3 + [64])
	goto $label$32 
	
.LABEL $label$33
	$2 = $6
	
.LABEL $label$32
	*($3 + [68]) = $6
	CALL $11($2)
	
.LABEL $label$2
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*(($3 + [88])))
	
.LABEL $label$1
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$36 }
	CALL $11(*(($3 + [104])))
	
.LABEL $label$36
	$global$0 = ($3 + [112])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $232 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	*($4 + [384]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $261(($4 + [16]), ($4 + [384]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($8 = (($4 + [368]) + [8]))) = $3
	$9 = *($4)
	*($4 + [368]) = $9
	*($4 + [352]) = $9
	$3 = *($8)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [368])
	*($4 + [32]) = $1
	*($4 + [384]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [344])
	$1 = *($4 + [336])
	$9 = *($4 + [328])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [16]))
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $231 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [448])
	$global$0 = $3
	*(($4 = $3) + [392]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [336]) + [24])) = (int_64)0
	*(($4 + [376])) = [0]
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [432]) = ($4 + [320])
	*($4 + [24]) = ($4 + [336])
	CALL $259(($4 + [24]), ($4 + [432]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [400]) + [8])) = $3
	*(($6 = (($4 + [416]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [416]) = $7
	*($4 + [400]) = $7
	$3 = *($6)
	*((($4 + [432]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [416])
	*($4 + [40]) = $1
	*($4 + [432]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [436]) = ($4 + [392])
	*($4 + [432]) = ($4 + [24])
	CALL $260(($4 + [432]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( ((*($4 + [368]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [376])))
	
.LABEL $label$5
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14422])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14465])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14484])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $65 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $35(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

void .FUNC $85 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$6 = ($global$0 - [176])
	$global$0 = $6
	*($6 + [88]) = [12241]
	*($6 + [92]) = CALL $2([12241])
	*($6 + [16]) = *($6 + [88])
	$7 = *(CALL $89(($6 + [96]), ($6 + [16])))
	*($6 + [72]) = [14644]
	*($6 + [76]) = CALL $2([14644])
	*($6 + [8]) = *($6 + [72])
	$8 = CALL $89(($6 + [80]), ($6 + [8]))
	*((($6 + [24]) + [24])) = *(($4 + [8]))
	*($6 + [32]) = $3
	*($6 + [24]) = $2
	*($6 + [40]) = *($4)
	$5 = CALL $53((($6 + [24]) + [32]), $5)
	*($6 + [104]) = $1
	*($6 + [112]) = *($8)
	*(($4 = CALL $9([16]))) = $2
	*($4 + [8]) = $7
	*((($6 + [104]) + [36])) = [0]
	$8 = ($4 + [16])
	*((($6 + [104]) + [24])) = $8
	*(($6 + [124])) = $8
	*($6 + [120]) = $4
	*($6 + [132 align=4]) = (int_64)0
	$4 = *($5)
	$5 = ( *((($6 + [24]) + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($5 + [32])
	$2 = (CASTING uint_64)(uint_32 $5)
	$5 = ($6 + [132])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $95($5, $4)
	$5 = *(($6 + [136]))
	$4 = *(($6 + [132]))
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	
.LABEL $label$2
	*($6 + [148]) = $4
	*($6 + [144]) = $4
	*($6 + [152]) = $5
	*($6 + [160]) = ($6 + [144])
	*($6 + [168]) = ($6 + [24])
	CALL $96(($6 + [168]), ($6 + [160]))
	CALL $97(($6 + [104]))
	$4 = *($6 + [132])
	if ( ($4 == 0) ){ goto $label$4 }
	*(($6 + [136])) = $4
	CALL $11($4)
	
.LABEL $label$4
	$4 = *($6 + [120])
	if ( ($4 == 0) ){ goto $label$5 }
	*(($6 + [124])) = $4
	CALL $11($4)
	
.LABEL $label$5
	if ( ((*($6 + [56]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($6 + [64])))
	
.LABEL $label$6
	$global$0 = ($6 + [176])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $2($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $56($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $56($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $60($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $352(*($1), *($0 + [32]))
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [288])
	$global$0 = $2
	$3 = CALL $53(($2 + [128]), $1)
	*(($4 = (($2 + [112]) + [8]))) = *(($1 + [40]))
	*($2 + [112]) = *($1 + [32])
	$5 = *($1 + [24])
	$6 = *($1 + [16])
	$7 = CALL $53(($2 + [96]), ($1 + [48]))
	*(($8 = (($2 + [56]) + [32]))) = *(($1 + [92]))
	*(($9 = (($2 + [56]) + [24]))) = *(($1 + [84]))
	*(($10 = (($2 + [56]) + [16]))) = *(($1 + [76]))
	*(($11 = (($2 + [56]) + [8]))) = *(($1 + [68]))
	*($2 + [56]) = *($1 + [60 align=4])
	*((($2 + [160]) + [32])) = *($8)
	*((($2 + [160]) + [24])) = *($9)
	*((($2 + [160]) + [16])) = *($10)
	*((($2 + [160]) + [8])) = *($11)
	*((($2 + [144]) + [8])) = *($4)
	*($2 + [160]) = *($2 + [56])
	*($2 + [144]) = *($2 + [112])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*($0) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$4 = CALL $53(($2 + [272]), $3)
	*(($9 = (($2 + [256]) + [8]))) = *((($2 + [144]) + [8]))
	*($2 + [256]) = *($2 + [144])
	$8 = CALL $53(($2 + [240]), $7)
	$12 = *((($2 + [160]) + [32]))
	*((($2 + [200]) + [32])) = $12
	$13 = *((($2 + [160]) + [24]))
	*((($2 + [200]) + [24])) = $13
	$14 = *((($2 + [160]) + [16]))
	*((($2 + [200]) + [16])) = $14
	$15 = *((($2 + [160]) + [8]))
	*((($2 + [200]) + [8])) = $15
	*((($2 + [40]) + [8])) = *($9)
	*(($2 + [8])) = $15
	*(($2 + [16])) = $14
	*(($2 + [24])) = $13
	*(($2 + [32])) = $12
	$12 = *($2 + [160])
	*($2 + [200]) = $12
	*($2 + [40]) = *($2 + [256])
	*($2) = $12
	CALL void $0((int_32 $4), (int_32 $6), (int_64 $5), (int_64 ($2 + [40])), (int_32 $8), (int_32 $2), (int_32 $1))
	if ( (*($2 + [240]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [272]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($8 + [8]))
	if ( ((*($2 + [272]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($4 + [8]))
	$1 = [1]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = [1]
	if ( (*($7) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($3) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($7 + [8]))
	if ( ((*($3) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($3 + [8]))
	$global$0 = ($2 + [288])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [288])
}

int_32 .FUNC $277 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15933])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $95($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $276 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [544])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [484]) = $2
	*($3 + [480]) = $2
	*($3 + [488]) = ($2 + $4)
	*($3 + [472]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$5
	CALL memcpy(($3 + [472]), $2, [8])
	*($3 + [484]) = (*($3 + [484]) + [8])
	*($3 + [464]) = [0]
	*($3 + [456]) = (int_64)0
	CALL $247(($3 + [480]), ($3 + [456]))
	$2 = *($3 + [484])
	$4 = (($3 + [480]) + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$6
	CALL memcpy(($3 + [455]), $2, [1])
	$2 = (*($3 + [484]) + [1])
	*($3 + [484]) = $2
	*($3 + [440]) = (int_64)0
	*($3 + [432]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$7
	CALL memcpy(($3 + [432]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	*($3 + [96]) = (int_64)0
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$8
	CALL memcpy(($3 + [96]), $2, [8])
	*((($3 + [432]) + [8])) = *($3 + [96])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$9
	CALL memcpy(($3 + [430]), $2, [2])
	$2 = (*($3 + [484]) + [2])
	*($3 + [484]) = $2
	*($3 + [416]) = (int_64)0
	*($3 + [408]) = (int_64)0
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$10
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	*($3 + [96]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$11
	CALL memcpy(($3 + [96]), $2, [8])
	*((($3 + [408]) + [8])) = *($3 + [96])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$12
	CALL memcpy(($3 + [406]), $2, [2])
	$2 = (*($3 + [484]) + [2])
	*($3 + [484]) = $2
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [484])
	
.LABEL $label$13
	CALL memcpy(($3 + [392]), $2, [8])
	*($3 + [484]) = (*($3 + [484]) + [8])
	*(($2 = (($3 + [80]) + [8]))) = *((($3 + [480]) + [8]))
	*($3 + [80]) = *($3 + [480])
	$2 = *($2)
	*((($3 + [496]) + [8])) = $2
	*(($4 = (($3 + [512]) + [8]))) = $2
	$5 = *($3 + [80])
	*($3 + [512]) = $5
	*($3 + [496]) = $5
	$2 = *($4)
	*((($3 + [528]) + [8])) = $2
	*(($3 + [120])) = $2
	*($3 + [96]) = $0
	*($3 + [104]) = $1
	$1 = *($3 + [512])
	*($3 + [112]) = $1
	*($3 + [528]) = $1
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [128]) = [15792]
	*($3 + [124]) = [513]
	*($3 + [132]) = [15815]
	*($3 + [136]) = [15830]
	*($3 + [140]) = [15871]
	*($3 + [144]) = (int_64)72060901179523328
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [240])) = $0
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*($3 + [352]) = $0
	*(($3 + [380])) = (int_64)0
	$0 = *($3 + [472])
	$2 = CALL $53(($3 + [64]), ($3 + [456]))
	$1 = *((($3 + [432]) + [8]))
	*((($3 + [48]) + [8])) = $1
	$5 = *((($3 + [408]) + [8]))
	*((($3 + [32]) + [8])) = $5
	*((($3 + [16]) + [8])) = $1
	*(($3 + [8])) = $5
	$1 = *($3 + [432])
	*($3 + [48]) = $1
	*($3 + [16]) = $1
	$1 = *($3 + [408])
	*($3) = $1
	*($3 + [32]) = $1
	CALL $77(($3 + [96]), $0, $2, *($3 + [455]), ($3 + [16]), *($3 + [430]), $3, *($3 + [406]), *($3 + [392]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$14
	CALL $246(($3 + [96]))
	if ( ((*($3 + [456]) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($3 + [464])))
	
.LABEL $label$15
	$global$0 = ($3 + [544])
}

void .FUNC $275 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [436]) = $4
	*($3 + [432]) = $4
	*($3 + [440]) = ($4 + $5)
	*((($3 + [376]) + [52])) = [0]
	*($3 + [384]) = (int_64)0
	*($3 + [376]) = (int_64)0
	*($3 + [392]) = (int_64)0
	*($3 + [400]) = (int_64)0
	*($3 + [408]) = [0]
	*($3 + [412 align=4]) = (int_64)0
	*($3 + [420 align=4]) = (int_64)0
	*($3 + [480]) = ($3 + [432])
	*($3 + [84]) = (($3 + [376]) + [8])
	*($3 + [88]) = (($3 + [376]) + [16])
	*($3 + [92]) = (($3 + [376]) + [24])
	*($3 + [96]) = (($3 + [376]) + [32])
	*($3 + [100]) = ($3 + [409])
	*($3 + [104]) = ($3 + [412])
	*($3 + [108]) = (($3 + [376]) + [40])
	*($3 + [112]) = (($3 + [376]) + [44])
	*($3 + [80]) = ($3 + [376])
	CALL $271(($3 + [80]), ($3 + [480]))
	*(($4 = (($3 + [64]) + [8]))) = *($3 + [440])
	*($3 + [64]) = *($3 + [432])
	$4 = *($4)
	*((($3 + [448]) + [8])) = $4
	*(($5 = (($3 + [464]) + [8]))) = $4
	$6 = *($3 + [64])
	*($3 + [464]) = $6
	*($3 + [448]) = $6
	$4 = *($5)
	*((($3 + [480]) + [8])) = $4
	*((($3 + [80]) + [24])) = $4
	*($3 + [80]) = $0
	*($3 + [88]) = $1
	$1 = *($3 + [464])
	*($3 + [96]) = $1
	*($3 + [480]) = $1
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*($3 + [112]) = [15792]
	*($3 + [108]) = [513]
	*($3 + [116]) = [15815]
	*($3 + [120]) = [15830]
	*($3 + [124]) = [15871]
	*($3 + [128]) = (int_64)72060901179523328
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [224])) = $0
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = [0]
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*($3 + [336]) = $0
	*(($3 + [364])) = (int_64)0
	*((($3 + [8]) + [52])) = [0]
	*((($3 + [8]) + [40])) = *($3 + [416])
	*((($3 + [8]) + [32])) = *($3 + [408])
	*((($3 + [8]) + [24])) = *($3 + [400])
	*((($3 + [8]) + [16])) = *($3 + [392])
	*((($3 + [8]) + [8])) = *($3 + [384])
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [8]) = *($3 + [376])
	$4 = (*(($3 + [424])) - *($3 + [420]))
	if ( ($4 == 0) ){ goto $label$5 }
	$2 = int_32($4 >> [3])
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$4 }
	$4 = CALL $9($4)
	*((($3 + [8]) + [44])) = $4
	*(($5 = (($3 + [8]) + [48]))) = $4
	*(($3 + [60])) = ($4 + ($2 << [3]))
	$7 = *((($3 + [376]) + [44]))
	$2 = (*((($3 + [376]) + [48])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($4, $7, $2)
	*($5) = (*($5) + $2)
	
.LABEL $label$5
	CALL require_auth(*($3 + [80]))
	CALL $151(($3 + [296]), ($3 + [8]), *($3 + [80]))
	$4 = *($3 + [52])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [56])) = $4
	CALL $11($4)
	
.LABEL $label$6
	CALL $246(($3 + [80]))
	$4 = *(($3 + [420]))
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [424])) = $4
	CALL $11($4)
	
.LABEL $label$7
	$global$0 = ($3 + [496])
	return (unreachable)
	
.LABEL $label$4
	CALL $44((($3 + [8]) + [44]))
}

void .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = CALL $53(($2 + [16]), $1)
	$1 = CALL $53($2, ($1 + [12]))
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$5 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($5) + $0))
	
.LABEL $label$1
	$6 = CALL $53(($2 + [32]), $1)
	$4 = CALL $53(($2 + [48]), $3)
	CALL void $5((int_32 $4), (int_32 $6), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($6 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($4 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($3) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($3) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($3 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $47([5], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $279 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	$5 = ($2 + $4)
	*($3 + [424]) = $5
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [400]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [416]) + [8]))
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [392]) = (int_64)0
	*($3 + [384]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$7
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [420])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [384]) + [8]))) = *($3 + [72])
	*($3 + [420]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $247(($3 + [416]), ($3 + [368]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [416]) + [8]))
	*($3 + [56]) = *($3 + [416])
	$2 = *($2)
	*((($3 + [432]) + [8])) = $2
	*(($4 = (($3 + [448]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [448]) = $6
	*($3 + [432]) = $6
	$2 = *($4)
	*((($3 + [464]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [448])
	*($3 + [88]) = $1
	*($3 + [464]) = $1
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [104]) = [15792]
	*($3 + [100]) = [513]
	*($3 + [108]) = [15815]
	*($3 + [112]) = [15830]
	*($3 + [116]) = [15871]
	*($3 + [120]) = (int_64)72060901179523328
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [216])) = $0
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = [0]
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*($3 + [328]) = $0
	*(($3 + [356])) = (int_64)0
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [384])
	$0 = *($3 + [400])
	$1 = *($3 + [408])
	$2 = CALL $53(($3 + [24]), ($3 + [368]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $136(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$9
	CALL $246(($3 + [72]))
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($3 + [376])))
	
.LABEL $label$10
	$global$0 = ($3 + [480])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $56($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [40])) = *(($3 + [40]))
	*(($1 + [32])) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$6 = ($1 + [44])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $346($6, *($3 + [44]), *(($3 + [48])))
	
.LABEL $label$3
	$8 = *($1 + [44])
	$7 = *(($1 + [48]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$3 = [42]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$5 }
	$3 = (($9 & [-8]) + $3)
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $3($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [56]) = $6
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [33])
	*($5 + [48]) = ($1 + [36])
	*($5 + [52]) = ($1 + [40])
	CALL $347(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)(int_64)4982871457202700288) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $4($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871457202700288) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = (int_64)4982871457202700289
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([72])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = [0]
	*($3 + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52]) = [0]
	*($3 + [56]) = $1
	CALL $345(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)4982871457202700288
	$5 = *($3 + [60])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)4982871457202700288
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $334(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [44])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [48])) = $1
	CALL $11($1)
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
	CALL $151(($0 + [216]), $1, *($0))
}

void .FUNC $151 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [56]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871457202700288, (int_64)4982871457202700288)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $113($0, $4)
	if ( ((int_32)*($4 + [56]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$2
	*($3) = $1
	CALL $152($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $153($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([24])) + [12]) = $0
	*($5) = (int_64)0
	$7 = ($5 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	goto $label$7 
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy($7, $8, [1])
	*($5 + [16]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $157(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $157 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $154 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [63]) = $2
	*($4 + [64]) = $1
	CALL require_auth($1)
	if ( ((int_32)*($3 + [4]) != (int_32)*($3)) ){ goto $label$1 }
	CALL eosio_assert([0], [12755])
	
.LABEL $label$1
	if ( $2 ){ goto $label$2 }
	CALL eosio_assert([0], [12792])
	
.LABEL $label$2
	CALL $155(($4 + [48]), $0, $1)
	*($4 + [47]) = *($0 + [49])
	$6 = *(($3 + [4]))
	$5 = *($3)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	$7 = ($4 + [24])
	$8 = (($4 + [80]) | [8])
	$9 = ($4 + [16])
	$10 = ($4 + [32])
	$11 = ($4 + [28])
	$12 = ($0 + [48])
	$13 = ($0 + [40])
	$2 = [0]
	
.LOOP $label$6:
	$14 = *($5 + [8])
	if ( CALL is_account(*($5)) ){ goto $label$7 }
	CALL eosio_assert([0], *($13))
	
.LABEL $label$7
	$15 = ($2 + $14)
	$1 = *($5)
	*(($14 = ($4 + [8]))) = $1
	*($9) = (int_64)-1
	*($7) = (int_64)0
	*($10) = [0]
	$16 = *($0)
	*($4) = $16
	$2 = CALL db_find_i64($16, $1, (int_64)-6219583601149356032, *($4 + [64]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)*(CALL $156($4, $2) + [12]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$14
	$17 = *($7)
	if ( ($17 == 0) ){ goto $label$8 }
	$2 = *($11)
	if ( ((int_32)$2 == (int_32)$17) ){ goto $label$12 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$14 = *($2)
	*($2) = [0]
	if ( ($14 == 0) ){ goto $label$16 }
	CALL $11($14)
	
.LABEL $label$16
	if ( ((int_32)$17 != (int_32)$2) ){ goto $label$15 }
	$2 = *($7)
	goto $label$11 
	
.LABEL $label$13
	$16 = *($0)
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$17 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$17
	*(($2 = CALL $9([24])) + [12]) = $4
	*($2) = *($4 + [64])
	*($2 + [8]) = *(($5 + [8]))
	CALL memcpy(($4 + [80]), $2, [8])
	CALL memcpy($8, ($2 + [8]), [1])
	$1 = *($2)
	$17 = CALL db_store_i64(*($14), (int_64)-6219583601149356032, $16, $1, ($4 + [80]), [9])
	*($2 + [16]) = $17
	if ( (uint_64)($1 <= *($9)) ){ goto $label$18 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*($4 + [104]) = $2
	$1 = *($2)
	*($4 + [80]) = $1
	*($4 + [96]) = $17
	$14 = *($11)
	if ( ((uint_32)$14 >= (uint_32)*($10)) ){ goto $label$21 }
	*($14 + [8]) = $1
	*($14 + [16]) = $17
	*($4 + [104]) = [0]
	*($14) = $2
	*($11) = ($14 + [24])
	$2 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( $2 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $157($7, ($4 + [104]), ($4 + [80]), ($4 + [96]))
	$2 = *($4 + [104])
	*($4 + [104]) = [0]
	if ( ($2 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $11($2)
	
.LABEL $label$19
	$14 = *($4 + [52])
	$2 = *($4 + [48])
	if ( ((int_32)$2 == (int_32)$14) ){ goto $label$24 }
	$1 = *($5)
	
.LOOP $label$25:
	if ( ((int_64)*($2) == (int_64)$1) ){ goto $label$24 }
	$2 = ($2 + [8])
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$22 }
	
.LABEL $label$23
	*($4 + [47]) = *($12)
	
.LABEL $label$22
	$17 = *($7)
	if ( ($17 == 0) ){ goto $label$8 }
	$2 = *($11)
	if ( ((int_32)$2 == (int_32)$17) ){ goto $label$10 }
	
.LOOP $label$26:
	$2 = ($2 + [-24])
	$14 = *($2)
	*($2) = [0]
	if ( ($14 == 0) ){ goto $label$27 }
	CALL $11($14)
	
.LABEL $label$27
	if ( ((int_32)$17 != (int_32)$2) ){ goto $label$26 }
	$2 = *($7)
	goto $label$9 
	
.LABEL $label$12
	$2 = $17
	
.LABEL $label$11
	*($11) = $17
	CALL $11($2)
	goto $label$8 
	
.LABEL $label$10
	$2 = $17
	
.LABEL $label$9
	*($11) = $17
	CALL $11($2)
	
.LABEL $label$8
	$2 = ($15 & [255])
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$6 }
	if ( ((uint_32)$2 >= (uint_32)(*($4 + [63]) & [255])) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((uint_32)[0] >= (uint_32)($2 & [255])) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [12823])
	
.LABEL $label$3
	$1 = *($0)
	*($4 + [4]) = $0
	*($4 + [12]) = $3
	*($4) = ($4 + [64])
	*($4 + [8]) = ($4 + [47])
	*($4 + [16]) = ($4 + [63])
	*($4 + [104]) = $1
	$14 = ($0 + [136])
	if ( ((int_64)*($0 + [136]) == (int_64)CALL current_receiver()) ){ goto $label$28 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$28
	*($4 + [80]) = $14
	*($4 + [84]) = $4
	*($4 + [88]) = ($4 + [104])
	*(($2 = CALL $9([40]))) = (int_64)0
	*($2 + [12 align=4]) = (int_64)0
	*($2 + [20]) = [0]
	*($2 + [24]) = $14
	CALL $158(($4 + [80]), $2)
	*($4 + [96]) = $2
	$1 = *($2)
	*($4 + [80]) = $1
	$17 = *($2 + [28])
	*($4 + [76]) = $17
	$5 = ($0 + [164])
	$14 = *($5)
	if ( ((uint_32)$14 >= (uint_32)*(($0 + [168]))) ){ goto $label$33 }
	*($14 + [8]) = $1
	*($14 + [16]) = $17
	*($4 + [96]) = [0]
	*($14) = $2
	*($5) = ($14 + [24])
	$2 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( ($2 == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL $159(($0 + [160]), ($4 + [96]), ($4 + [80]), ($4 + [76]))
	$2 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( $2 ){ goto $label$31 }
	
.LABEL $label$32
	$2 = *($4 + [48])
	if ( ($2 == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$31
	$14 = *($2 + [12])
	if ( ($14 == 0) ){ goto $label$34 }
	*(($2 + [16])) = $14
	CALL $11($14)
	
.LABEL $label$34
	CALL $11($2)
	$2 = *($4 + [48])
	if ( ($2 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	*($4 + [52]) = $2
	CALL $11($2)
	
.LABEL $label$29
	$global$0 = ($4 + [112])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [56]) = $2
	CALL $107($3, ($1 + [216]))
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$1 = (*(($3 + [48])) - *($3 + [44]))
	if ( ($1 == 0) ){ goto $label$4 }
	$4 = int_32($1 >> [3])
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$1 = CALL $9($1)
	*($0) = $1
	*(($5 = ($0 + [4]))) = $1
	$4 = ($1 + ($4 << [3]))
	*(($6 = ($0 + [8]))) = $4
	$7 = *(($3 + [44]))
	$8 = (*(($3 + [48])) - $7)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $7, $8)
	$1 = (*($5) + $8)
	*($5) = $1
	$4 = *($6)
	
.LABEL $label$5
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$4 }
	*($1) = *($3 + [56])
	*(($0 + [4])) = ($1 + [8])
	$0 = *($3 + [44])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $160($0, ($3 + [56]))
	$0 = *($3 + [44])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*(($3 + [48])) = $0
	CALL $11($0)
	
.LABEL $label$2
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [8])
	if ( ((int_32)*($6) != (int_32)*(*($4 + [4]) + [49])) ){ goto $label$2 }
	$7 = *($4 + [12])
	$8 = int_32((*($7 + [4]) - *($7)) >> [4])
	goto $label$1 
	
.LABEL $label$2
	$7 = *($4 + [12])
	$8 = *(*($4 + [16]))
	
.LABEL $label$1
	*($1 + [8]) = $8
	$8 = ($1 + [12])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$3 }
	CALL $348($8, *($7), *($7 + [4]))
	$6 = *(($4 + [8]))
	
.LABEL $label$3
	$9 = ($1 + [8])
	*($1 + [9]) = *($6)
	$6 = ($1 + [9])
	$10 = *($1 + [12])
	$7 = *(($1 + [16]))
	$11 = ($7 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [4]))
	$4 = [10]
	
.LOOP $label$4:
	$4 = ($4 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$5 }
	$4 = ((((int_32)uint_32(($11 + [-16]) >> [4]) * (int_32)[9]) + $4) + [9])
	
.LABEL $label$5
	if ( ($4 <= [513]) ){ goto $label$7 }
	$7 = CALL $3($4)
	goto $label$6 
	
.LABEL $label$7
	$7 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$6
	*($3 + [12]) = $7
	*($3 + [8]) = $7
	*($3 + [16]) = ($7 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $9
	*($3 + [32]) = $1
	*($3 + [40]) = $6
	*($3 + [44]) = $8
	CALL $185(($3 + [32]), ($3 + [24]))
	$12 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)-6496020250016874496, *(*($0 + [8])), $12, $7, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$12 >= (uint_64)*($5 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $4($7)
	if ( (uint_64)($12 <= *($5 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [12])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $53(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $53(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 ($4 & [255])), (int_32 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $247(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([160])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [120]) = [0]
	*($5 + [124]) = [0]
	*($5 + [128]) = (int_64)0
	$7 = CALL current_time()
	*($5 + [140 align=4]) = (int_64)0
	*($5 + [148]) = $0
	*($5 + [136]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [120])
	*($3 + [56]) = ($5 + [124])
	*($3 + [60]) = ($5 + [128])
	*($3 + [64]) = ($5 + [136])
	*($3 + [68]) = ($5 + [140])
	*($3 + [72]) = ($5 + [144])
	CALL $341(($3 + [32]), ($3 + [24]))
	*($5 + [156]) = [-1]
	*($5 + [152]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $320(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $344 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $228 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [432])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [328]) + [24])) = (int_64)0
	*(($4 + [368])) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [416]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $249(($4 + [16]), ($4 + [416]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [384]) + [8])) = $3
	*(($6 = (($4 + [400]) + [8]))) = $3
	$7 = *($4)
	*($4 + [400]) = $7
	*($4 + [384]) = $7
	$3 = *($6)
	*((($4 + [416]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [400])
	*($4 + [32]) = $1
	*($4 + [416]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [44]) = [513]
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*($4 + [420]) = ($4 + [376])
	*($4 + [416]) = ($4 + [16])
	CALL $250(($4 + [416]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [16]))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [368])))
	
.LABEL $label$5
	$global$0 = ($4 + [432])
	return [1]
}

int_32 .FUNC $229 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $7)
	CALL $247(($4 + [320]), ($4 + [336]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($8 = (($4 + [368]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [368]) = $9
	*($4 + [352]) = $9
	$3 = *($8)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [368])
	*($4 + [40]) = $1
	*($4 + [384]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [52]) = [513]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = CALL $53(($4 + [368]), ($4 + [336]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$5 = CALL $53(($4 + [384]), $8)
	CALL void $3((int_32 $5), (int_32 $6))
	if ( (*($4 + [384]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [368]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($5 + [8]))
	if ( ((*($4 + [368]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $4($2)
	
.LABEL $label$5
	CALL $246(($4 + [24]))
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($4 + [344])))
	
.LABEL $label$10
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [14653])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [14758])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [14691])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [14758])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $88($0, *($1))
	CALL $88($0, *($1 + [4]))
	if ( ((*(($1 + [28])) & [1]) == 0) ){ goto $label$2 }
	CALL $11(*(($1 + [36])))
	
.LABEL $label$2
	if ( ((*(($1 + [16])) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$3
	CALL $11($1)
	
.LABEL $label$1
}

int_32 .FUNC $224 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [432])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = (int_64)0
	*(($4 + [368])) = [0]
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	$6 = ($2 + $5)
	*($4 + [328]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$6 = *(($4 + [328]))
	$3 = *($4 + [324])
	
.LABEL $label$4
	CALL memcpy(($4 + [336]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [324]) = $3
	$7 = (($4 + [336]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$6 = *((($4 + [320]) + [8]))
	$3 = *($4 + [324])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [324]) = $3
	*($4 + [24]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$3 = *($4 + [324])
	
.LABEL $label$6
	CALL memcpy(($4 + [24]), $3, [8])
	*(($4 + [352])) = *($4 + [24])
	*($4 + [324]) = ($3 + [8])
	CALL $247(($4 + [320]), (($4 + [336]) + [24]))
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [320]) + [8]))
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [384]) + [8])) = $3
	*(($6 = (($4 + [400]) + [8]))) = $3
	$8 = *($4 + [8])
	*($4 + [400]) = $8
	*($4 + [384]) = $8
	$3 = *($6)
	*((($4 + [416]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [400])
	*($4 + [40]) = $1
	*($4 + [416]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [420]) = ($4 + [376])
	*($4 + [416]) = ($4 + [24])
	CALL $248(($4 + [416]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $246(($4 + [24]))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($4 + [368])))
	
.LABEL $label$8
	$global$0 = ($4 + [432])
	return [1]
}

int_32 .FUNC $225 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [416])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [356])) = [0]
	*($4 + [344]) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [348 align=4]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	$6 = ($2 + $5)
	*($4 + [328]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$6 = *((($4 + [320]) + [8]))
	$3 = *($4 + [324])
	
.LABEL $label$4
	$7 = (($4 + [336]) + [8])
	CALL memcpy(($4 + [336]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [324]) = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$3 = *($4 + [324])
	
.LABEL $label$5
	CALL memcpy($7, $3, [1])
	*($4 + [324]) = ($3 + [1])
	$3 = ($4 + [348])
	CALL $255(($4 + [320]), $3)
	*(($6 = (($4 + [8]) + [8]))) = *((($4 + [320]) + [8]))
	*($4 + [8]) = *($4 + [320])
	$6 = *($6)
	*((($4 + [368]) + [8])) = $6
	*(($7 = (($4 + [384]) + [8]))) = $6
	$8 = *($4 + [8])
	*($4 + [384]) = $8
	*($4 + [368]) = $8
	$6 = *($7)
	*((($4 + [400]) + [8])) = $6
	*(($4 + [48])) = $6
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [384])
	*($4 + [40]) = $1
	*($4 + [400]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [404]) = ($4 + [360])
	*($4 + [400]) = ($4 + [24])
	CALL $256(($4 + [400]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $246(($4 + [24]))
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$7 }
	*(($4 + [352])) = $2
	CALL $11($2)
	
.LABEL $label$7
	$global$0 = ($4 + [416])
	return [1]
}

int_32 .FUNC $226 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [416])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $5)
	*($4 + [400]) = ($4 + [312])
	*($4 + [16]) = ($4 + [328])
	CALL $257(($4 + [16]), ($4 + [400]))
	*(($3 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [368]) + [8])) = $3
	*(($6 = (($4 + [384]) + [8]))) = $3
	$7 = *($4)
	*($4 + [384]) = $7
	*($4 + [368]) = $7
	$3 = *($6)
	*((($4 + [400]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [384])
	*($4 + [32]) = $1
	*($4 + [400]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [44]) = [513]
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*($4 + [404]) = ($4 + [360])
	*($4 + [400]) = ($4 + [16])
	CALL $258(($4 + [400]), ($4 + [328]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [16]))
	$2 = *((($4 + [328]) + [8]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [340])) = $2
	CALL $11($2)
	
.LABEL $label$5
	$global$0 = ($4 + [416])
	return [1]
}

int_32 .FUNC $227 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [416])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	CALL $247(($4 + [320]), ($4 + [336]))
	CALL $247(($4 + [320]), ($4 + [348]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [368]) + [8])) = $3
	*(($6 = (($4 + [384]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [384]) = $7
	*($4 + [368]) = $7
	$3 = *($6)
	*((($4 + [400]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [384])
	*($4 + [40]) = $1
	*($4 + [400]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [404]) = ($4 + [360])
	*($4 + [400]) = ($4 + [24])
	CALL $274(($4 + [400]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( ((*($4 + [348]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [356])))
	
.LABEL $label$5
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [344])))
	
.LABEL $label$6
	$global$0 = ($4 + [416])
	return [1]
}

int_32 .FUNC $220 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$3 = ($global$0 - [512])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$2 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($8)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $8)
	
.LABEL $label$1
	*(($3 = (($4 + [328]) + [32]))) = (int_64)0
	*(($9 = (($4 + [328]) + [8]))) = (int_64)0
	*(($10 = (($4 + [328]) + [16]))) = (int_64)0
	*(($11 = (($4 + [328]) + [24]))) = (int_64)0
	*(($12 = (($4 + [328]) + [40]))) = (int_64)0
	*(($13 = ($4 + [376]))) = (int_64)0
	*($3) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [364]) = [0]
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $8)
	*($4 + [456]) = ($4 + [312])
	*($4 + [20]) = $9
	*($4 + [24]) = $10
	*($4 + [28]) = $11
	*($4 + [32]) = $3
	*($4 + [36]) = ($4 + [361])
	*($4 + [40]) = ($4 + [364])
	*($4 + [44]) = $12
	*($4 + [48]) = (($4 + [328]) + [44])
	*($4 + [16]) = ($4 + [328])
	CALL $271(($4 + [16]), ($4 + [456]))
	*(($14 = ($4 + [8]))) = *($4 + [320])
	*($4) = *($4 + [312])
	$15 = *($14)
	*((($4 + [384]) + [8])) = $15
	*(($14 = (($4 + [400]) + [8]))) = $15
	$16 = *($4)
	*($4 + [400]) = $16
	*($4 + [384]) = $16
	$15 = *($14)
	*((($4 + [456]) + [8])) = $15
	*((($4 + [16]) + [24])) = $15
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [400])
	*($4 + [32]) = $1
	*($4 + [456]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	*(($4 + [452])) = [0]
	*((($4 + [400]) + [40])) = *($12)
	*((($4 + [400]) + [32])) = *($3)
	*((($4 + [400]) + [24])) = *($11)
	*((($4 + [400]) + [16])) = *($10)
	*($14) = *($9)
	*($4 + [444 align=4]) = (int_64)0
	*($4 + [400]) = *($4 + [328])
	$3 = (*($13) - *($4 + [372]))
	if ( ($3 == 0) ){ goto $label$6 }
	$9 = int_32($3 >> [3])
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$5 }
	$7 = CALL $9($3)
	*((($4 + [400]) + [44])) = $7
	*(($3 = (($4 + [400]) + [48]))) = $7
	*(($4 + [452])) = ($7 + ($9 << [3]))
	$10 = *((($4 + [328]) + [44]))
	$9 = (*((($4 + [328]) + [48])) - $10)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($7, $10, $9)
	$7 = (*($3) + $9)
	*($3) = $7
	
.LABEL $label$6
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	*(($4 + [508])) = [0]
	*((($4 + [456]) + [40])) = *((($4 + [400]) + [40]))
	*((($4 + [456]) + [32])) = *((($4 + [400]) + [32]))
	*((($4 + [456]) + [24])) = *((($4 + [400]) + [24]))
	*((($4 + [456]) + [16])) = *((($4 + [400]) + [16]))
	*((($4 + [456]) + [8])) = *((($4 + [400]) + [8]))
	*($4 + [456]) = *($4 + [400])
	*($4 + [500 align=4]) = (int_64)0
	$7 = ($7 - *((($4 + [400]) + [44])))
	if ( ($7 == 0) ){ goto $label$8 }
	$5 = int_32($7 >> [3])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$4 }
	$7 = CALL $9($7)
	*((($4 + [456]) + [44])) = $7
	*(($9 = (($4 + [456]) + [48]))) = $7
	*(($4 + [508])) = ($7 + ($5 << [3]))
	$10 = *((($4 + [400]) + [44]))
	$5 = (*((($4 + [400]) + [48])) - $10)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($7, $10, $5)
	*($9) = ($7 + $5)
	
.LABEL $label$8
	CALL void $3((int_32 ($4 + [456])), (int_32 $6))
	$7 = *($4 + [500])
	if ( ($7 == 0) ){ goto $label$9 }
	*(($4 + [504])) = $7
	CALL $11($7)
	
.LABEL $label$9
	$7 = *($4 + [444])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [448])) = $7
	CALL $11($7)
	
.LABEL $label$10
	if ( ($8 <= [513]) ){ goto $label$11 }
	CALL $4($2)
	
.LABEL $label$11
	CALL $246(($4 + [16]))
	$2 = *(($4 + [372]))
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [376])) = $2
	CALL $11($2)
	
.LABEL $label$12
	$global$0 = ($4 + [512])
	return [1]
	
.LABEL $label$5
	CALL $44((($4 + [400]) + [44]))
	
.LABEL $label$4
	CALL $44((($4 + [456]) + [44]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $221 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($4 + [316])
	
.LABEL $label$4
	CALL memcpy(($4 + [328]), $3, [8])
	*($4 + [316]) = ($3 + [8])
	$8 = (($4 + [328]) + [8])
	CALL $247(($4 + [312]), $8)
	*(($3 = ($4 + [8]))) = *((($4 + [312]) + [8]))
	*($4) = *($4 + [312])
	$3 = *($3)
	*((($4 + [352]) + [8])) = $3
	*(($9 = (($4 + [368]) + [8]))) = $3
	$10 = *($4)
	*($4 + [368]) = $10
	*($4 + [352]) = $10
	$3 = *($9)
	*((($4 + [384]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [368])
	*($4 + [32]) = $1
	*($4 + [384]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*($4 + [48]) = [15792]
	*($4 + [44]) = [513]
	*($4 + [52]) = [15815]
	*($4 + [56]) = [15830]
	*($4 + [60]) = [15871]
	*($4 + [64]) = (int_64)72060901179523328
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [160])) = $0
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*(($4 + [256])) = (int_64)0
	*(($4 + [264])) = [0]
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = [0]
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*($4 + [272]) = $0
	*(($4 + [300])) = (int_64)0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [328])
	$8 = CALL $53(($4 + [368]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $53(($4 + [384]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [384]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [368]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($5 + [8]))
	if ( ((*($4 + [368]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $4($2)
	
.LABEL $label$6
	CALL $246(($4 + [16]))
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($4 + [344])))
	
.LABEL $label$11
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $222 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [432])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [368])) = [0]
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $5)
	*($4 + [416]) = ($4 + [320])
	*($4 + [24]) = ($4 + [336])
	CALL $264(($4 + [24]), ($4 + [416]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [328])
	*($4 + [8]) = *($4 + [320])
	$3 = *($3)
	*((($4 + [384]) + [8])) = $3
	*(($6 = (($4 + [400]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [400]) = $7
	*($4 + [384]) = $7
	$3 = *($6)
	*((($4 + [416]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [400])
	*($4 + [40]) = $1
	*($4 + [416]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [56]) = [15792]
	*($4 + [60]) = [15815]
	*($4 + [64]) = [15830]
	*($4 + [68]) = [15871]
	*($4 + [72]) = (int_64)72060901179523328
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*($4 + [52]) = [513]
	*(($4 + [176])) = (int_64)-1
	*(($4 + [168])) = $0
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*(($4 + [264])) = (int_64)0
	*(($4 + [272])) = [0]
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = [0]
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*($4 + [280]) = $0
	*(($4 + [308])) = (int_64)0
	*($4 + [420]) = ($4 + [376])
	*($4 + [416]) = ($4 + [24])
	CALL $265(($4 + [416]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $246(($4 + [24]))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [368])))
	
.LABEL $label$5
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $52 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( (CALL $1(int_32(($3 << [24]) >> [24])) == 0) ){ goto $label$3 }
	$3 = *($0 + [1])
	$4 = ($0 + [1])
	$0 = $4
	if ( $3 ){ goto $label$4 }
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)[49]) ){ goto $label$2 }
	$3 = [0]
	
.LOOP $label$5:
	$4 = ($0 + $3)
	$5 = ($3 + [1])
	$3 = $5
	if ( ((int_32)*(($4 + [1])) == (int_32)[49]) ){ goto $label$5 }
	$4 = ($0 + $5)
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	$4 = $0
	
.LABEL $label$1
	$0 = ((uint_32)((int_32)CALL $2($4) * (int_32)[733]) / (uint_32)[1000])
	$6 = ($0 + [1])
	$7 = CALL $9($6)
	$8 = ($7 + $0)
	$0 = [0]
	
.LOOP $label$6:
	*(($7 + $0)) = [0]
	$0 = ($0 + [1])
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$17 }
	$3 = [0]
	
.LOOP $label$18:
	$9 = $3
	$10 = $4
	if ( CALL $1(int_32(($0 << [24]) >> [24])) ){ goto $label$16 }
	$0 = *($10)
	$11 = *(($0 + [11264]))
	if ( ((int_32)$11 == (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$0 != (int_32)[49]) ){ goto $label$20 }
	$3 = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$3 = [0]
	$0 = $8
	
.LOOP $label$22:
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$21 }
	$4 = (((int_32)*($0) * (int_32)[58]) + $11)
	*($0) = $4
	$3 = ($3 + [1])
	$0 = ($0 + [-1])
	$11 = ((int_32)$4 / (int_32)[256])
	if ( ((uint_32)($4 + [255]) > (uint_32)[510]) ){ goto $label$22 }
	if ( ($3 <= $9) ){ goto $label$22 }
	goto $label$19 
	
.LABEL $label$21
	if ( $11 ){ goto $label$9 }
	
.LABEL $label$19
	$4 = ($10 + [1])
	$0 = *($10 + [1])
	if ( $0 ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	$3 = [0]
	goto $label$15 
	
.LABEL $label$16
	$3 = $9
	$4 = $10
	
.LABEL $label$15
	$9 = ($7 + $6)
	$0 = ($4 + [-1])
	
.LOOP $label$23:
	$0 = ($0 + [1])
	if ( CALL $1(*($0)) ){ goto $label$23 }
	$4 = [0]
	if ( *($0) ){ goto $label$13 }
	$4 = ($7 + ($6 - $3))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$12 }
	$0 = $4
	if ( *($4) ){ goto $label$10 }
	$6 = ([0] - $3)
	$0 = [-1]
	$11 = $8
	
.LOOP $label$24:
	$4 = $11
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$11 }
	$0 = ($0 + [-1])
	$11 = ($4 + [1])
	if ( (*((($4 + $6) + [2])) == 0) ){ goto $label$24 }
	$0 = (($4 - $3) + [2])
	$4 = (($11 - $3) + [1])
	goto $label$10 
	
.LABEL $label$14
	$4 = [0]
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$12
	$0 = $9
	goto $label$10 
	
.LABEL $label$11
	$0 = (($4 - $3) + [2])
	$4 = $0
	
.LABEL $label$10
	$3 = (($9 - $4) + $5)
	$11 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $11) >= (uint_32)$3) ){ goto $label$25 }
	$4 = *($1 + [4])
	$4 = *($1)
	$11 = (*($1 + [4]) - $4)
	$10 = CALL $9($3)
	$12 = ($10 + ($4 - $11))
	$6 = ($12 - $11)
	$3 = ($10 + $3)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$26 }
	CALL memcpy($6, $4, $11)
	$4 = *($1)
	
.LABEL $label$26
	*($1) = $6
	*(($1 + [4])) = $12
	*(($1 + [8])) = $3
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $11($4)
	
.LABEL $label$25
	*($2 + [15]) = [0]
	CALL $73($1, $5, ($2 + [15]))
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$27 }
	$6 = ($8 + [1])
	$9 = ($1 + [8])
	$4 = ($1 + [4])
	
.LOOP $label$28:
	$3 = ($0 + [1])
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)*($9)) ){ goto $label$29 }
	*($11) = *($0)
	*($4) = (*($4) + [1])
	$0 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $74($1, $0)
	$0 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$28 }
	
.LABEL $label$27
	$4 = [1]
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $43([8358], [10441], [68], [11520])
	
.LABEL $label$8
	CALL $11($7)
	
.LABEL $label$7
	$global$0 = ($2 + [16])
	(unreachable)
	return $4
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *($0)
	$3 = *($0 + [8])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $11($4)
	$3 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = [2147483647]
	if ( ((uint_32)$3 > (uint_32)[1073741822]) ){ goto $label$6 }
	$4 = ($3 << [1])
	$5 = ( $1 ? $4 : ($4 <= $1) )
	
.LABEL $label$6
	$4 = CALL $9($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($2)
	$4 = (*($0) + [1])
	*($0) = $4
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$3 = (*($0 + [4]) - $4)
	$5 = ( $3 ? $1 : ($3 <= $1) )
	if ( ($5 == 0) ){ goto $label$8 }
	CALL memset($4, *($2), $5)
	
.LABEL $label$8
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$2 }
	$1 = ($3 - $1)
	$4 = ($0 + [4])
	$0 = *($4)
	
.LOOP $label$9:
	*($0) = *($2)
	$0 = (*($4) + [1])
	*($4) = $0
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = (*($0) + $1)
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = *($1)
	*($3 + [139]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [138]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [137]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [136]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$5 = *(($1 + [8]))
	*($3 + [131]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [130]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [129]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [128]) = (uint_64)$5 >> (uint_64)(int_64)56)
	$6 = (CASTING uint_32)(uint_64 $4)
	*($3 + [143]) = $6
	*($3 + [142]) = uint_32($6 >> [8])
	*($3 + [141]) = uint_32($6 >> [16])
	*($3 + [140]) = uint_32($6 >> [24])
	$6 = (CASTING uint_32)(uint_64 $5)
	*($3 + [135]) = $6
	*($3 + [134]) = uint_32($6 >> [8])
	*($3 + [133]) = uint_32($6 >> [16])
	*($3 + [132]) = uint_32($6 >> [24])
	$4 = *(($1 + [24]))
	*($3 + [151]) = $4
	$5 = *($1 + [16])
	*($3 + [155]) = (uint_64)$5 >> (uint_64)(int_64)32)
	*($3 + [154]) = (uint_64)$5 >> (uint_64)(int_64)40)
	*($3 + [153]) = (uint_64)$5 >> (uint_64)(int_64)48)
	*($3 + [152]) = (uint_64)$5 >> (uint_64)(int_64)56)
	*($3 + [147]) = (uint_64)$4 >> (uint_64)(int_64)32)
	*($3 + [146]) = (uint_64)$4 >> (uint_64)(int_64)40)
	*($3 + [145]) = (uint_64)$4 >> (uint_64)(int_64)48)
	*($3 + [144]) = (uint_64)$4 >> (uint_64)(int_64)56)
	$1 = (CASTING uint_32)(uint_64 $4)
	*($3 + [150]) = uint_32($1 >> [8])
	*($3 + [149]) = uint_32($1 >> [16])
	*($3 + [148]) = uint_32($1 >> [24])
	$1 = (CASTING uint_32)(uint_64 $5)
	*($3 + [159]) = $1
	*($3 + [158]) = uint_32($1 >> [8])
	*($3 + [157]) = uint_32($1 >> [16])
	*($3 + [156]) = uint_32($1 >> [24])
	$7 = ($3 + [118])
	$4 = *($2)
	$6 = ($3 + [48])
	
.LOOP $label$2:
	$1 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($3) = (($8) << [7]) | ($1 & [127]))
	$1 = $6
	if ( ((int_32)($7 - $1) <= (int_32)[0]) ){ goto $label$3 }
	CALL memcpy($1, $3, [1])
	$6 = ($1 + [1])
	if ( $8 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10435])
	CALL memcpy($1, $3, [1])
	$6 = ($1 + [1])
	if ( $8 ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($2 + [4])
	if ( ((int_32)($7 - $6) > (int_32)[64]) ){ goto $label$4 }
	CALL eosio_assert([0], [10435])
	
.LABEL $label$4
	CALL memcpy($6, $8, [65])
	$1 = CALL recover_key(($3 + [128]), ($3 + [48]), (($1 + [66]) - ($3 + [48])), $3, [38])
	*($0) = [0]
	$7 = ($3 + $1)
	$4 = (int_64)0
	$1 = $3
	$6 = [0]
	
.LOOP $label$5:
	if ( ($1 <= $7) ){ goto $label$6 }
	CALL eosio_assert([0], [11234])
	
.LABEL $label$6
	$6 = ($6 & [255])
	$8 = *($1)
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $6)))
	$1 = ($1 + [1])
	$6 = ($6 + [7])
	if ( ($8 & [128]) ){ goto $label$5 }
	*($0) = $4
	$6 = ($0 + [4])
	if ( ((uint_32)($7 - $1) > (uint_32)[32]) ){ goto $label$7 }
	CALL eosio_assert([0], [10963])
	
.LABEL $label$7
	CALL memcpy($6, $1, [33])
	$global$0 = ($3 + [160])
}

void .FUNC $71 (int_32 $0)
{
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
}

void .FUNC $77 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8)
{
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$9 = ($global$0 - [192])
	$global$0 = $9
	CALL require_auth(*($0))
	if ( (*($2) & [1]) ){ goto $label$5 }
	$10 = ($2 + [1])
	$2 = CALL $2($10)
	if ( ((uint_32)$2 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$10 = *($2 + [8])
	$2 = CALL $2($10)
	if ( ($2 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [13761])
	goto $label$2 
	
.LABEL $label$3
	if ( $2 ){ goto $label$2 }
	$11 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$11 = (int_64)0
	
.LOOP $label$6:
	$12 = (($10 + $2) + [-1])
	$13 = *($12)
	if ( ((($13 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [13806])
	$13 = *($12)
	
.LABEL $label$7
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	
.LABEL $label$1
	$14 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)(CASTING uint_64)(uint_32 $3))
	$2 = [0]
	$15 = ((int_64)$11 & (int_64)72057594037927935)
	$11 = $15
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$16 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$11 = $16
	$13 = [1]
	$12 = $2
	$2 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$11 = $16
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$13 = ((int_32)$2 < (int_32)[6])
	$12 = ($2 + [1])
	$2 = $12
	if ( $13 ){ goto $label$12 }
	$13 = [1]
	$2 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$13 = [0]
	
.LABEL $label$8
	CALL eosio_assert($13, [11603])
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$14), [11182])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)$14), [11623])
	CALL eosio_assert(CALL $fimport$25($1), [11676])
	CALL eosio_assert(CALL $fimport$25($8), [11711])
	$2 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$11 = *($0)
	*($9 + [8]) = $11
	*($9 + [16]) = $15
	$13 = CALL db_find_i64($11, $15, (int_64)-4157508551318700032, $15)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$14 }
	if ( ((int_32)*(CALL $78(($9 + [8]), $13) + [88]) == (int_32)($9 + [8])) ){ goto $label$13 }
	$2 = [0]
	CALL eosio_assert([0], [14043])
	goto $label$13 
	
.LABEL $label$14
	$2 = [1]
	
.LABEL $label$13
	CALL eosio_assert($2, [11758])
	$16 = *($0)
	if ( ((int_64)*($9 + [8]) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$15
	*(($2 = CALL $9([104]))) = (int_64)0
	*($2 + [88]) = ($9 + [8])
	*($2 + [8]) = $14
	*($2 + [16]) = $14
	*($2 + [24]) = $1
	*($2 + [48]) = $5
	*($2 + [72]) = $7
	*($2 + [80]) = $8
	*($2 + [32]) = *($4)
	*(($2 + [40])) = *(($4 + [8]))
	*($2 + [56]) = *($6)
	*(($2 + [64])) = *(($6 + [8]))
	*($9 + [144]) = (($9 + [48]) + [76])
	*($9 + [140]) = ($9 + [48])
	*($9 + [136]) = ($9 + [48])
	*($9 + [152]) = ($9 + [136])
	*($9 + [164]) = ($2 + [16])
	*($9 + [160]) = $2
	*($9 + [168]) = ($2 + [24])
	*($9 + [172]) = ($2 + [32])
	*($9 + [176]) = ($2 + [48])
	*($9 + [180]) = ($2 + [56])
	*($9 + [184]) = ($2 + [72])
	*($9 + [188]) = ($2 + [80])
	CALL $79(($9 + [160]), ($9 + [152]))
	$11 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$12 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4157508551318700032, $16, $11), ($9 + [48]), [76]
	*($2 + [92]) = $12)
	$13 = (($9 + [8]) + [16])
	if ( (uint_64)($11 <= *($13)) ){ goto $label$16 }
	*($13) = ((int_64)$11 + (int_64)1)
	
.LABEL $label$16
	*($9 + [160]) = $2
	$11 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $11)
	*($9 + [136]) = $12
	$10 = ($9 + [36])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*((($9 + [8]) + [32]))) ){ goto $label$19 }
	*($13 + [8]) = $11
	*($13 + [16]) = $12
	*($9 + [160]) = [0]
	*($13) = $2
	*($10) = ($13 + [24])
	$2 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $80(($9 + [32]), ($9 + [160]), ($9 + [48]), ($9 + [136]))
	$2 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $11($2)
	
.LABEL $label$17
	$12 = *($9 + [32])
	if ( ($12 == 0) ){ goto $label$20 }
	$10 = ($9 + [36])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = ($2 + [-24])
	$13 = *($2)
	*($2) = [0]
	if ( ($13 == 0) ){ goto $label$24 }
	CALL $11($13)
	
.LABEL $label$24
	if ( ((int_32)$12 != (int_32)$2) ){ goto $label$23 }
	$2 = *(($9 + [32]))
	goto $label$21 
	
.LABEL $label$22
	$2 = $12
	
.LABEL $label$21
	*($10) = $12
	CALL $11($2)
	
.LABEL $label$20
	$global$0 = ($9 + [192])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $9($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $11($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [176])
	$global$0 = $3
	$4 = [0]
	$5 = CALL $65($1, [95], [0])
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [11238])
	$6 = CALL $54(($3 + [160]), $1, [0], $5, $1)
	$8 = *($3 + [160])
	$7 = CALL $2([10968])
	if ( ((int_32)$7 != (int_32)( *($6 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$1 }
	$4 = (CALL $66($6, [0], [-1], [10968], $7) == 0)
	
.LABEL $label$1
	CALL eosio_assert($4, [10976])
	$8 = ($5 + [1])
	$4 = CALL $65($1, [95], $8)
	CALL eosio_assert(((int_32)$4 != (int_32)[-1]), [11013])
	$5 = CALL $54(($3 + [144]), $1, $8, ($4 + ((int_32)$5 ^ (int_32)[-1])), $1)
	$8 = *($3 + [144])
	$7 = CALL $2([11039])
	if ( ((int_32)$7 != (int_32)( *($5 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$4 }
	if ( (CALL $66($5, [0], [-1], [11039], $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = [0]
	$7 = *($3 + [144])
	$9 = CALL $2([11046])
	if ( ((int_32)$9 != (int_32)( *(($5 + [4])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$2 }
	$8 = (CALL $66($5, [0], [-1], [11046], $9) == 0)
	goto $label$2 
	
.LABEL $label$3
	$8 = [1]
	
.LABEL $label$2
	CALL eosio_assert($8, [11051])
	$8 = [0]
	$7 = *($3 + [144])
	$9 = CALL $2([11039])
	if ( ((int_32)$9 != (int_32)( *(($5 + [4])) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$5 }
	$8 = (CALL $66($5, [0], [-1], [11039], $9) == 0)
	
.LABEL $label$5
	$1 = *($3 + [128])
	$4 = CALL $54(($3 + [128]), $1, ($4 + [1]), [-1], $1)
	CALL eosio_assert(((int_32)( *($4 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) ) != (int_32)[0]), [11155])
	*($3 + [120]) = [0]
	*($3 + [112]) = (int_64)0
	CALL eosio_assert(CALL $72(( *($4 + [8]) ? ($4 + [1]) : (*($3 + [128]) & [1]) ), ($3 + [112])), [11533])
	CALL eosio_assert(((int_32)(*($3 + [116]) - *($3 + [112])) == (int_32)[69]), [11557])
	if ( (*($2) == 0) ){ goto $label$6 }
	CALL memmove(($3 + [40]), *($3 + [112]), [65])
	*($3 + [106]) = [49]
	*($3 + [105]) = ( [75] ? [82] : $8 )
	CALL ripemd160(($3 + [40]), [67], $3)
	CALL eosio_assert((CALL $46($3, (*($3 + [116]) + [-4]), [4]) == 0), [11575])
	
.LABEL $label$6
	*($0) = [0]
	$1 = *($3 + [112])
	*($0 + [4 align=1]) = *($1)
	*(($0 + [12])) = *($1 + [8 align=1])
	*(($0 + [16])) = *($1 + [12 align=1])
	*(($0 + [24])) = *($1 + [20 align=1])
	*(($0 + [32])) = *($1 + [28 align=1])
	*(($0 + [36])) = *($1 + [32 align=1])
	*(($0 + [38])) = *($1 + [34])
	*(($0 + [39])) = *($1 + [35])
	*(($0 + [40])) = *($1 + [36])
	*(($0 + [41])) = *($1 + [37])
	*(($0 + [42])) = *($1 + [38])
	*(($0 + [43])) = *($1 + [39])
	*(($0 + [44])) = *($1 + [40])
	*(($0 + [45])) = *($1 + [41])
	*(($0 + [46])) = *($1 + [42])
	*(($0 + [47])) = *($1 + [43])
	*(($0 + [48])) = *($1 + [44])
	*($0) = ((int_32)$8 ^ (int_32)[1])
	*(($0 + [65])) = *($1 + [61 align=1])
	*(($0 + [49])) = *($1 + [45 align=1])
	*(($0 + [57])) = *($1 + [53 align=1])
	*(($0 + [59])) = *($1 + [55 align=1])
	*(($0 + [63])) = *($1 + [59 align=1])
	$0 = *($3 + [112])
	if ( ($0 == 0) ){ goto $label$7 }
	*($3 + [116]) = $0
	CALL $11($0)
	
.LABEL $label$7
	if ( (*($3 + [128]) & [1]) ){ goto $label$12 }
	$0 = [1]
	if ( (*($3 + [144]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $11(*(($4 + [8])))
	$0 = [1]
	if ( ((*($3 + [144]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $11(*($5 + [8]))
	if ( ((*($3 + [160]) & $0) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( (*($3 + [160]) & $0) ){ goto $label$8 }
	
.LABEL $label$9
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$8
	CALL $11(*($6 + [8]))
	$global$0 = ($3 + [176])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([104])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [56])
	*($3 + [56]) = ($5 + [72])
	*($3 + [60]) = ($5 + [80])
	CALL $340(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $80(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $6, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $6, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [14367])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $247(*($1), ($4 + [32]))
	$0 = ($4 + [48])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2) = (int_64)0
	$3 = [0]
	*($2 + [8]) = [0]
	$4 = *($1)
	$5 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($5 == 0) ){ goto $label$6 }
	$3 = int_32($5 >> [4])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$2 }
	$5 = CALL $9($5)
	*(($2 + [8])) = ($5 + ($3 << [4]))
	*($2) = $5
	*($2 + [4]) = $5
	$6 = *(($1 + [8]))
	$3 = (*(($1 + [12])) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $6, $3)
	$3 = ($5 + $3)
	*($2 + [4]) = $3
	goto $label$4 
	
.LABEL $label$6
	$5 = [0]
	$7 = [0]
	$8 = [0]
	goto $label$3 
	
.LABEL $label$5
	$3 = $5
	
.LABEL $label$4
	$7 = $5
	$8 = $5
	
.LABEL $label$3
	$9 = *($1 + [24])
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$6 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($6) + $1))
	
.LABEL $label$7
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $8)
	if ( ($0 == 0) ){ goto $label$8 }
	$8 = int_32($0 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$0 = CALL $9($0)
	*(($2 + [24])) = ($0 + ($8 << [4]))
	*($2 + [16]) = $0
	*($2 + [20]) = $0
	$3 = ($3 - $7)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($0, $5, $3)
	*($2 + [20]) = ($0 + $3)
	
.LABEL $label$8
	CALL void $6((int_32 $4), (int_64 ($2 + [16])), (int_32 $9), (int_64 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [20]) = $1
	CALL $11($1)
	
.LABEL $label$9
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [4]) = $1
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $44($2)
	
.LABEL $label$1
	CALL $44(($2 + [16]))
	(unreachable)
}

int_32 .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $314($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $309($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $309($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $315($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [14367])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [14367])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $311($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $321(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $317 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $247(*($1), ($0 + [8]))
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $247(*($1), ($0 + [40]))
	$global$0 = ($2 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $53(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $53(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $247(*($1), *($0))
	$3 = *($0)
	CALL $247(*($1), ($3 + [12]))
	$4 = ($3 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $5, [8])
	$4 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [32])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $247(*($1), ($3 + [40]))
	$global$0 = ($2 + [16])
}

void .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $53(($2 + [48]), ($1 + [8]))
	*(($5 = (($2 + [32]) + [8]))) = *(($1 + [32]))
	*($2 + [32]) = *($1 + [24])
	$1 = CALL $53(($2 + [16]), ($1 + [40]))
	*((($2 + [64]) + [8])) = *($5)
	*($2 + [64]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$5 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($5) + $0))
	
.LABEL $label$1
	$6 = CALL $53(($2 + [112]), $4)
	*(($7 = (($2 + [96]) + [8]))) = *((($2 + [64]) + [8]))
	*($2 + [96]) = *($2 + [64])
	$8 = CALL $53(($2 + [80]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [96])
	CALL void $5((int_32 $3), (int_64 $6), (int_32 $2), (int_32 $8), (int_32 $0))
	if ( (*($2 + [80]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [112]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($8 + [8]))
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($6 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($4) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($4) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [128])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [128])
}

int_32 .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [15933])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $289($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = CALL $53(($2 + [64]), $1)
	$4 = CALL $53(($2 + [48]), ($1 + [12]))
	*(($5 = (($2 + [32]) + [8]))) = *(($1 + [32]))
	*($2 + [32]) = *($1 + [24])
	$1 = CALL $53(($2 + [16]), ($1 + [40]))
	*(($2 + [8])) = *($5)
	*($2) = *($2 + [32])
	CALL $358($0, $3, $4, $2, $1)
	if ( (*($1) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $11(*($1 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $11(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL $11(*($3 + [8]))
	$global$0 = ($2 + [80])
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $255(*($1), ($3 + [8]))
	$0 = ($3 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2) = (int_64)0
	$3 = [0]
	*($2 + [8]) = [0]
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = (*(($1 + [16])) - *($1 + [12]))
	if ( ($6 == 0) ){ goto $label$6 }
	$3 = int_32($6 >> [4])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$2 }
	$6 = CALL $9($6)
	*(($2 + [8])) = ($6 + ($3 << [4]))
	*($2) = $6
	*($2 + [4]) = $6
	$3 = *(($1 + [12]))
	$1 = (*(($1 + [16])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($6, $3, $1)
	$3 = ($6 + $1)
	*($2 + [4]) = $3
	goto $label$4 
	
.LABEL $label$6
	$6 = [0]
	$7 = [0]
	$8 = [0]
	goto $label$3 
	
.LABEL $label$5
	$3 = $6
	
.LABEL $label$4
	$7 = $6
	$8 = $6
	
.LABEL $label$3
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$9 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($9) + $1))
	
.LABEL $label$7
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $8)
	if ( ($0 == 0) ){ goto $label$8 }
	$8 = int_32($0 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$0 = CALL $9($0)
	*(($2 + [24])) = ($0 + ($8 << [4]))
	*($2 + [16]) = $0
	*($2 + [20]) = $0
	$3 = ($3 - $7)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($0, $6, $3)
	*($2 + [20]) = ($0 + $3)
	
.LABEL $label$8
	CALL void $9((int_32 $5), (int_64 ($4 & [255])), (int_32 ($2 + [16])), (int_32 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [20]) = $1
	CALL $11($1)
	
.LABEL $label$9
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [4]) = $1
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $44($2)
	
.LABEL $label$1
	CALL $44(($2 + [16]))
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [12])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15937])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [15982])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [16032])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [16]))
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15937])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [15982])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$8 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$9:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	$11 = [-24]
	$3 = ($6 + [-24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $3
	
.LABEL $label$6
	CALL eosio_assert([0], [16032])
	$11 = [-24]
	$3 = ($6 + [-24])
	$5 = *($4)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$9 = *($6)
	*($6) = [0]
	$4 = *($3)
	*($3) = $9
	if ( ($4 == 0) ){ goto $label$11 }
	$9 = *($4 + [56])
	if ( ($9 == 0) ){ goto $label$12 }
	*(($4 + [60])) = $9
	CALL $11($9)
	
.LABEL $label$12
	$9 = *($4 + [44])
	if ( ($9 == 0) ){ goto $label$13 }
	*(($4 + [48])) = $9
	CALL $11($9)
	
.LABEL $label$13
	$8 = *($4 + [28])
	if ( ($8 == 0) ){ goto $label$14 }
	$12 = ($4 + [32])
	$10 = *($12)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$18 }
	CALL $11(*(($10 + [-4])))
	
.LABEL $label$18
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$17 }
	$9 = *(($4 + [28]))
	goto $label$15 
	
.LABEL $label$16
	$9 = $8
	
.LABEL $label$15
	*($12) = $8
	CALL $11($9)
	
.LABEL $label$14
	CALL $11($4)
	
.LABEL $label$11
	*($3 + [8]) = *($6 + [8])
	*(($3 + [16])) = *(($6 + [16]))
	$3 = ($3 + [24])
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$19:
	$6 = ($6 + $11)
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	$9 = *($4 + [56])
	if ( ($9 == 0) ){ goto $label$21 }
	*(($4 + [60])) = $9
	CALL $11($9)
	
.LABEL $label$21
	$9 = *($4 + [44])
	if ( ($9 == 0) ){ goto $label$22 }
	*(($4 + [48])) = $9
	CALL $11($9)
	
.LABEL $label$22
	$8 = *($4 + [28])
	if ( ($8 == 0) ){ goto $label$23 }
	$5 = ($4 + [32])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$25 }
	
.LOOP $label$26:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$27 }
	CALL $11(*(($10 + [-4])))
	
.LABEL $label$27
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$26 }
	$9 = *(($4 + [28]))
	goto $label$24 
	
.LABEL $label$25
	$9 = $8
	
.LABEL $label$24
	*($5) = $8
	CALL $11($9)
	
.LABEL $label$23
	CALL $11($4)
	
.LABEL $label$20
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$19 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [84]))
	$9 = *(($1 + [88]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$29 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	
.LABEL $label$29
	CALL db_idx64_remove($9)
	
.LABEL $label$28
	$global$0 = ($2 + [16])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([40]))) = (int_64)0
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [24]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [9])
	*($3 + [44]) = ($5 + [12])
	CALL $333(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $159(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [12])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $139 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [112])
	$global$0 = $5
	$6 = ($0 + [136])
	$8 = *(($0 + [164]))
	$7 = *(($0 + [160]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$5:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$4 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	if ( ((int_32)*($10 + [24]) == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	goto $label$2 
	
.LABEL $label$3
	$9 = [0]
	$8 = CALL db_find_i64(*($6), *(($0 + [144])), (int_64)-6496020250016874496, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $138($6, $8) + [24]) == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$2
	$9 = *($4)
	$8 = ($9 & [1])
	$7 = ( *($4 + [8]) ? ($4 + [1]) : $8 )
	if ( ((int_32)*($7) != (int_32)[123]) ){ goto $label$7 }
	if ( ((int_32)*((($7 + ( *($4 + [4]) ? uint_32($9 >> [1]) : $8 )) + [-1])) == (int_32)[125]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13547])
	
.LABEL $label$6
	CALL $86(($5 + [96]), $0, $4)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $2([12913])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$13 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [56]) = ($7 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$12
	CALL memcpy($8, [12913], $9)
	
.LABEL $label$11
	*(($8 + $9)) = [0]
	$9 = CALL $87(($5 + [96]), ($5 + [56]))
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($5 + [64]))
	
.LABEL $label$14
	if ( ((int_32)$9 != (int_32)(($5 + [96]) | [4])) ){ goto $label$15 }
	CALL eosio_assert([0], [13576])
	
.LABEL $label$15
	*(($5 + [88])) = [0]
	*($5 + [80]) = (int_64)0
	*($5 + [92]) = [0]
	*($5 + [64]) = $1
	*($5 + [72]) = (int_64)-1
	*($5 + [56]) = *($0)
	if ( (*($9 + [28]) & [1]) ){ goto $label$17 }
	$8 = (($9 + [28]) + [1])
	$9 = *($8)
	if ( ($9 == 0) ){ goto $label$16 }
	goto $label$9 
	
.LABEL $label$17
	$8 = *($9 + [36])
	$9 = *($8)
	if ( $9 ){ goto $label$9 }
	
.LABEL $label$16
	$1 = (int_64)0
	goto $label$8 
	
.LABEL $label$10
	CALL $52(($5 + [56]))
	
.LABEL $label$9
	$8 = ($8 + [1])
	$1 = (int_64)0
	
.LOOP $label$18:
	$1 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56) + (int_64)((int_64)$1 * (int_64)10)) + (int_64)-48)
	$9 = *($8)
	$8 = ($8 + [1])
	if ( $9 ){ goto $label$18 }
	
.LABEL $label$8
	$9 = [0]
	$8 = CALL $142(($5 + [56]), $1, [12675])
	if ( ((int_32)*($8 + [24]) != (int_32)[3]) ){ goto $label$19 }
	if ( ((int_32)*($8 + [8]) == (int_32)[1]) ){ goto $label$20 }
	CALL eosio_assert([0], [13612])
	
.LABEL $label$20
	if ( (*($8 + [25]) == 0) ){ goto $label$21 }
	CALL eosio_assert([0], [13646])
	
.LABEL $label$21
	$9 = *($8 + [28])
	$7 = *($9)
	if ( ($7 & [1]) ){ goto $label$23 }
	$7 = uint_32($7 >> [1])
	$9 = ($9 + [1])
	goto $label$22 
	
.LABEL $label$23
	$7 = *($9 + [4])
	$9 = *($9 + [8])
	
.LABEL $label$22
	*($5 + [52]) = $7
	*($5 + [48]) = $9
	*($5 + [8]) = *($5 + [48])
	if ( ((int_64)*(CALL $89(($5 + [32]), ($5 + [8]))) == (int_64)$2) ){ goto $label$24 }
	CALL eosio_assert([0], [13684])
	
.LABEL $label$24
	$7 = CALL $53(($5 + [16]), (*(($8 + [28])) + [12]))
	CALL $143(($5 + [32]), $0, $7)
	if ( ((int_64)*($5 + [40]) != (int_64)*($3 + [8])) ){ goto $label$29 }
	if ( ((int_64)*($5 + [32]) != (int_64)*($3)) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL eosio_assert([0], [14117])
	if ( ((int_64)*($5 + [32]) == (int_64)*($3)) ){ goto $label$27 }
	
.LABEL $label$28
	CALL eosio_assert([0], [13723])
	$9 = [1]
	if ( (*($7) & [1]) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$9 = [1]
	if ( ((*($7) & [1]) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL $11(*($7 + [8]))
	
.LABEL $label$25
	CALL $144(($5 + [56]), $8, *($0))
	CALL $55($4, (*(($8 + [28])) + [24]))
	
.LABEL $label$19
	CALL $145(($5 + [80]))
	CALL $88(($5 + [96]), *($5 + [100]))
	
.LABEL $label$1
	$global$0 = ($5 + [112])
	(unreachable)
	return $9
}

void .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $247(*($1), *($0))
	$0 = *($0)
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($0 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2) = $0
	CALL $359($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $9($7)
	*((($6 + [48]) + [8])) = ($7 + ($8 << [4]))
	*($6 + [48]) = $7
	*($6 + [52]) = $7
	$9 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $9, $8)
	*($6 + [52]) = ($7 + $8)
	
.LABEL $label$2
	$10 = *($1)
	*(($6 + [24])) = *(($4 + [8]))
	*($6) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16]) = *($4)
	$1 = CALL $53(($6 + [32]), $5)
	*($0 + [8]) = (int_64)-3617168760277827584
	*($0) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($0 + [16]) = *($6 + [48])
	*(($0 + [24])) = *((($6 + [48]) + [8]))
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	$1 = *($1)
	$4 = ( *(($6 + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [32])
	$10 = (CASTING uint_64)(uint_32 $4)
	$4 = ($0 + [28])
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $95($4, $1)
	$4 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$1 = [0]
	
.LABEL $label$4
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $4
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = $6
	CALL $96(($6 + [88]), ($6 + [80]))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$6
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$7 }
	*($6 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$7
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($6 + [48]))
}

void .FUNC $131 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [160])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = [0]
	$6 = *($2 + [8])
	$7 = (uint_64)$6 >> (uint_64)(int_64)8
	$8 = $7)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $9
	$10 = [1]
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$5 }
	$10 = [1]
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [11603])
	$10 = [0]
	*(($4 + [152])) = [0]
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	$8 = *($0)
	*($4 + [120]) = $8
	*($4 + [128]) = $7
	$12 = [0]
	$5 = CALL db_find_i64($8, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$12 = CALL $78(($4 + [120]), $5)
	if ( ((int_32)*($12 + [88]) == (int_32)($4 + [120])) ){ goto $label$6 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [12381])
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $9
	$10 = [1]
	$11 = $5
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$11 }
	$10 = [1]
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$10 = [0]
	
.LABEL $label$7
	CALL eosio_assert($10, [11919])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [12440])
	CALL eosio_assert(((int_64)$6 == (int_64)*($12 + [8])), [11965])
	CALL eosio_assert(((int_64)$8 <= (int_64)*($12)), [12476])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$13 }
	$5 = uint_32($5 >> [1])
	goto $label$12 
	
.LABEL $label$13
	$5 = *($3 + [4])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [12510])
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$15 }
	$5 = uint_32($5 >> [1])
	goto $label$14 
	
.LABEL $label$15
	$5 = *($3 + [4])
	
.LABEL $label$14
	CALL eosio_assert(($5 <= [257]), [11797])
	CALL require_recipient($1)
	CALL __multi3(($4 + [32]), *($12 + [72]), (int_64)0, $8, (int_64)$8 >> (int_64)63))
	$8 = *(($4 + [40]))
	$7 = *($4 + [32])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$17 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$16 }
	CALL eosio_assert([0], [14397])
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [14373])
	
.LABEL $label$16
	$8 = ((int_64)$7 / (int_64)10000)
	$9 = *($12 + [56])
	$7 = *(($12 + [64]))
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$18 }
	CALL eosio_assert([0], [14422])
	
.LABEL $label$18
	$8 = ((int_64)$9 + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$20 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [14484])
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [14465])
	
.LABEL $label$19
	$9 = *(($2 + [8]))
	*((($4 + [104]) + [8])) = $9
	*($4 + [104]) = *($2)
	if ( ((int_64)$7 == (int_64)$9) ){ goto $label$21 }
	CALL eosio_assert([0], [14502])
	
.LABEL $label$21
	$9 = (int_64)
	*($4 + [104]) = $9(*($4 + [104]) - $8))
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$25 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$26 }
	CALL eosio_assert([0], [14572])
	
.LABEL $label$26
	if ( ((int_64)$8 >= (int_64)1) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL eosio_assert([0], [14550])
	if ( ((int_64)$8 < (int_64)1) ){ goto $label$23 }
	
.LABEL $label$24
	*(($4 + [80])) = [0]
	*($4 + [88]) = $8
	*($4 + [96]) = $7
	*($4 + [72]) = (int_64)0
	$8 = *($12 + [80])
	$7 = *($0)
	$5 = CALL $2([12542])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$29 }
	*($4 + [72]) = ($5 << [1])
	$10 = (($4 + [72]) | [1])
	if ( $5 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$11 = (($5 + [16]) & [-16])
	$10 = CALL $9($11)
	*($4 + [72]) = ($11 | [1])
	*($4 + [80]) = $10
	*($4 + [76]) = $5
	
.LABEL $label$28
	CALL memcpy($10, [12542], $5)
	
.LABEL $label$27
	*(($10 + $5)) = [0]
	*((($4 + [16]) + [8])) = *((($4 + [88]) + [8]))
	*($4 + [16]) = *($4 + [88])
	CALL $85($0, $7, $1, $8, ($4 + [16]), ($4 + [72]))
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$23 }
	CALL $11(*($4 + [80]))
	
.LABEL $label$23
	*($4 + [64]) = ($4 + [104])
	CALL $132(($4 + [120]), $12, ($4 + [64]))
	$8 = *((($4 + [104]) + [8]))
	*((($4 + [48]) + [8])) = $8
	*(($4 + [8])) = $8
	$8 = *($4 + [104])
	*($4) = $8
	*($4 + [48]) = $8
	CALL $133($0, $1, $4)
	$11 = *($4 + [144])
	if ( ($11 == 0) ){ goto $label$30 }
	$12 = ($4 + [148])
	$5 = *($12)
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$32 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$10 = *($5)
	*($5) = [0]
	if ( ($10 == 0) ){ goto $label$34 }
	CALL $11($10)
	
.LABEL $label$34
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$33 }
	$5 = *(($4 + [144]))
	goto $label$31 
	
.LABEL $label$32
	$5 = $11
	
.LABEL $label$31
	*($12) = $11
	CALL $11($5)
	
.LABEL $label$30
	$global$0 = ($4 + [160])
	return (unreachable)
	
.LABEL $label$22
	CALL $52(($4 + [72]))
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14502])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14550])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14572])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-80])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-4])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [24])
	*($4 + [44]) = ($1 + [32])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [72])
	*($4 + [60]) = ($1 + [80])
	CALL $79(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [92]), (int_64)0, $3, [76])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [64])
}

void .FUNC $133 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = [0]
	*(($3 + [56])) = [0]
	*($3 + [32]) = $1
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$5 = *($0)
	*($3 + [24]) = $5
	$6 = *($2 + [8])
	$7 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $92(($3 + [24]), $7)
	if ( ((int_32)*($4 + [16]) == (int_32)($3 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [14043])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [14827])
	
.LABEL $label$1
	$5 = *($2)
	CALL eosio_assert(((int_64)*($4) >= (int_64)$5), [14851])
	$8 = *(($4 + [8]))
	*((($3 + [8]) + [8])) = $8
	*($3 + [8]) = *($4)
	if ( ((int_64)$6 == (int_64)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [14502])
	
.LABEL $label$3
	$5 = (int_64)
	*($3 + [8]) = $5(*($3 + [8]) - $5))
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14572])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [14550])
	
.LABEL $label$4
	$9 = ($0 + [176])
	$5 = *($3 + [8])
	$7 = *(($0 + [204]))
	$10 = *(($0 + [200]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$11:
	$2 = ($7 + [-24])
	$11 = *($2)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$10 }
	$7 = $2
	if ( ((int_32)$10 != (int_32)$2) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$9 }
	if ( ((int_32)*(($11 + [36])) == (int_32)$9) ){ goto $label$8 }
	CALL eosio_assert([0], [14043])
	if ( (uint_64)($5 <= *($11 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$2 = CALL db_find_i64(*($9), *(($0 + [184])), (int_64)-3020371618460336128, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $134($9, $2)
	if ( ((int_32)*($11 + [36]) == (int_32)$9) ){ goto $label$8 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$8
	if ( ((uint_64)$5 >= (uint_64)*($11 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [14869])
	
.LABEL $label$6
	$1 = *($0)
	*($3) = ($3 + [8])
	CALL $135(($3 + [24]), $4, $1, $3)
	$11 = *($3 + [48])
	if ( ($11 == 0) ){ goto $label$12 }
	$10 = ($3 + [52])
	$2 = *($10)
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	CALL $11($7)
	
.LABEL $label$16
	if ( ((int_32)$11 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [48]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $11
	
.LABEL $label$13
	*($10) = $11
	CALL $11($2)
	
.LABEL $label$12
	$global$0 = ($3 + [64])
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([48]))) = (int_64)0
	$7 = CALL current_time()
	*($5 + [32]) = [2]
	*($5 + [36]) = $0
	*($5 + [8]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [33])
	CALL $339(($3 + [40]), ($3 + [32]))
	*($5 + [40]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $218(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	$6 = *($1 + [8])
	$7 = *(($3 + [8]))
	*($1 + [8]) = $7
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) == (int_64)(uint_64)$7 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$3
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *(($1 + [8]))
	CALL memcpy(($3 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $136 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$5 = ($global$0 - [336])
	$global$0 = $5
	*($5 + [320]) = $2
	*($5 + [328]) = $1
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [12557])
	CALL $107(($5 + [264]), ($0 + [216]))
	if ( ((int_32)*($5 + [297]) != (int_32)[1]) ){ goto $label$1 }
	*($5 + [208]) = [12581]
	*($5 + [212]) = CALL $2([12581])
	*($5 + [88]) = *($5 + [208])
	$6 = CALL $89(($5 + [216]), ($5 + [88]))
	*(($5 + [256])) = [0]
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = (int_64)0
	$7 = *($6)
	*($5 + [224]) = $7
	$8 = *($5 + [272])
	*($5 + [232]) = $8
	$6 = CALL db_find_i64($7, $8, (int_64)5377987680120340480, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $137(($5 + [224]), $6) + [48]) == (int_32)($5 + [224])) ){ goto $label$4 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$4
	$9 = *($5 + [248])
	if ( $9 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [12587])
	$9 = *($5 + [248])
	if ( ($9 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($5 + [252])
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$8 }
	CALL $11($11)
	
.LABEL $label$8
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$7 }
	$6 = *(($5 + [248]))
	goto $label$5 
	
.LABEL $label$6
	$6 = $9
	
.LABEL $label$5
	*($10) = $9
	CALL $11($6)
	
.LABEL $label$1
	$12 = ($0 + [136])
	$11 = *(($0 + [164]))
	$9 = *(($0 + [160]))
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$10 }
	
.LOOP $label$12:
	$6 = ($11 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$11 }
	$11 = $6
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$10 }
	if ( ((int_32)*($10 + [24]) == (int_32)$12) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	goto $label$9 
	
.LABEL $label$10
	$6 = CALL db_find_i64(*($12), *(($0 + [144])), (int_64)-6496020250016874496, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	if ( ((int_32)*(CALL $138($12, $6) + [24]) == (int_32)$12) ){ goto $label$9 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$9
	$6 = ($3 + [8])
	$2 = *($6)
	*((($5 + [192]) + [8])) = $2
	$1 = *($3)
	*((($5 + [72]) + [8])) = $2
	*($5 + [192]) = $1
	*($5 + [72]) = $1
	$2 = *($5 + [320])
	$7 = *($5 + [328])
	if ( CALL $139($0, $7, $2, ($5 + [72]), $4) ){ goto $label$13 }
	CALL prints([12627])
	CALL require_auth($7)
	
.LABEL $label$13
	*(($11 = (($5 + [176]) + [8]))) = *($6)
	*($5 + [176]) = *($3)
	$6 = CALL $53(($5 + [160]), $4)
	*((($5 + [56]) + [8])) = *($11)
	*($5 + [56]) = *($5 + [176])
	CALL $140($0, $7, $2, ($5 + [56]), $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($6 + [8]))
	
.LABEL $label$14
	CALL require_recipient($7)
	CALL require_recipient($2)
	CALL eosio_assert(CALL $fimport$25($2), [12649])
	$13 = *($3 + [8])
	$10 = [0]
	*(($5 + [256])) = [0]
	$1 = (uint_64)$13 >> (uint_64)(int_64)8
	*($5 + [232]) = $1)
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = (int_64)0
	$8 = *($0)
	*($5 + [224]) = $8
	$6 = CALL db_find_i64($8, $1, (int_64)-4157508551318700032, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$17 }
	$10 = CALL $78(($5 + [224]), $6)
	if ( ((int_32)*($10 + [88]) == (int_32)($5 + [224])) ){ goto $label$18 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$18
	if ( ((int_64)$2 == (int_64)*($0)) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert([0], [12675])
	if ( ((int_64)$2 != (int_64)*($0)) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = CALL $53(($5 + [144]), $4)
	$14 = *(($3 + [8]))
	*((($5 + [128]) + [8])) = $14
	$8 = *($3)
	*((($5 + [40]) + [8])) = $14
	*($5 + [40]) = $8
	*($5 + [128]) = $8
	CALL $141($0, $6, ($5 + [40]), $7)
	if ( ((*($6) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*($6 + [8]))
	
.LABEL $label$15
	$11 = [0]
	$14 = *($3)
	if ( ((uint_64)((int_64)$14 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$19 }
	$6 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$1 = $8
	$11 = [1]
	$9 = $6
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$1 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$11 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $11 ){ goto $label$23 }
	$11 = [1]
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$11 = [0]
	
.LABEL $label$19
	CALL eosio_assert($11, [11919])
	CALL eosio_assert(((int_64)$14 > (int_64)0), [12694])
	CALL eosio_assert(((int_64)$13 == (int_64)*($10 + [8])), [11965])
	$6 = *($4)
	if ( ($6 & [1]) ){ goto $label$25 }
	$6 = uint_32($6 >> [1])
	goto $label$24 
	
.LABEL $label$25
	$6 = *($4 + [4])
	
.LABEL $label$24
	CALL eosio_assert(($6 <= [513]), [12726])
	$6 = CALL has_auth($2)
	$11 = ($3 + [8])
	$8 = *($11)
	*((($5 + [112]) + [8])) = $8
	$1 = *($3)
	*((($5 + [24]) + [8])) = $8
	*($5 + [24]) = $1
	*($5 + [112]) = $1
	CALL $133($0, $7, ($5 + [24]))
	$8 = *($11)
	*((($5 + [96]) + [8])) = $8
	$1 = *($3)
	*((($5 + [8]) + [8])) = $8
	*($5 + [8]) = $1
	*($5 + [96]) = $1
	CALL $84($0, $2, ($5 + [8]), ( $2 ? $7 : $6 ))
	$9 = *($5 + [248])
	if ( ($9 == 0) ){ goto $label$26 }
	$0 = ($5 + [252])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$28 }
	
.LOOP $label$29:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$30 }
	CALL $11($11)
	
.LABEL $label$30
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$29 }
	$6 = *(($5 + [248]))
	goto $label$27 
	
.LABEL $label$28
	$6 = $9
	
.LABEL $label$27
	*($0) = $9
	CALL $11($6)
	
.LABEL $label$26
	$6 = *($5 + [308])
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 + [312])) = $6
	CALL $11($6)
	
.LABEL $label$31
	$global$0 = ($5 + [336])
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $343(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $344(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	return CALL $32($0, $1)
}

void .FUNC $300 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	$5 = ($2 + $4)
	*($3 + [376]) = $5
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [376]))
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [372]) = $2
	*($3 + [352]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [368]) + [8]))
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [352]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [372]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$7
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $247(($3 + [368]), ($3 + [328]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [368]) + [8]))
	*($3 + [16]) = *($3 + [368])
	$2 = *($2)
	*((($3 + [384]) + [8])) = $2
	*(($4 = (($3 + [400]) + [8]))) = $2
	$6 = *($3 + [16])
	*($3 + [400]) = $6
	*($3 + [384]) = $6
	$2 = *($4)
	*((($3 + [416]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [400])
	*($3 + [48]) = $1
	*($3 + [416]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*($3 + [64]) = [15792]
	*($3 + [60]) = [513]
	*($3 + [68]) = [15815]
	*($3 + [72]) = [15830]
	*($3 + [76]) = [15871]
	*($3 + [80]) = (int_64)72060901179523328
	*($3 + [88]) = $0
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [176])) = $0
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = [0]
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*(($3 + [316])) = (int_64)0
	$0 = *($3 + [344])
	$1 = *($3 + [352])
	$6 = *($3 + [360])
	$2 = CALL $53($3, ($3 + [328]))
	CALL $189(($3 + [32]), $6, $1, $0, $3)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$8
	CALL $246(($3 + [32]))
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($3 + [336])))
	
.LABEL $label$9
	$global$0 = ($3 + [432])
}

void .FUNC $208 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	*($4 + [168]) = $2
	*($4 + [176]) = $1
	*($4 + [160]) = $3
	CALL require_auth($2)
	CALL $168(($4 + [112]), $0, $1, $2, [1])
	*(($4 + [104])) = [0]
	*($4 + [80]) = $1
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	*($4 + [108]) = [0]
	*($4 + [72]) = *($0)
	$5 = CALL $142(($4 + [72]), $3, [13228])
	CALL eosio_assert((*($5 + [8]) == 0), [13248])
	$7 = *(($5 + [48]))
	$6 = *($5 + [44])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$2 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$3 }
	*($4 + [64]) = $7
	goto $label$1 
	
.LABEL $label$2
	*($4 + [64]) = $6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$1 }
	$2 = *($0)
	*($4 + [188]) = ($4 + [64])
	*($4 + [184]) = ($4 + [112])
	CALL $209(($4 + [72]), $5, $2, ($4 + [184]))
	
.LABEL $label$1
	$7 = *(($5 + [60]))
	$6 = *($5 + [56])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	$2 = *($4 + [168])
	
.LOOP $label$5:
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$4 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$5 }
	$6 = $7
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$6 == (int_32)$7), [13371])
	$6 = (*(($4 + [152])) + *($5 + [41]))
	*($4 + [63]) = $6
	*($4 + [62]) = ( *(($5 + [8])) ? [2] : (($6 & [255]) <= *((($4 + [112]) + [16]))) )
	$2 = *($0)
	*($4 + [188]) = ($4 + [168])
	*($4 + [184]) = ($4 + [63])
	*($4 + [192]) = ($4 + [62])
	CALL $210(($4 + [72]), $5, $2, ($4 + [184]))
	if ( ((int_32)*($4 + [62]) != (int_32)[2]) ){ goto $label$6 }
	$2 = *($0)
	*($4 + [16]) = [12241]
	$1 = *($4 + [168])
	*($4 + [20]) = CALL $2([12241])
	*($4 + [8]) = *($4 + [16])
	$6 = CALL $89(($4 + [24]), ($4 + [8]))
	*($4 + [32]) = $2
	$2 = *($6)
	*(($6 = CALL $9([16]))) = $1
	*($6 + [8]) = $2
	$7 = ($6 + [16])
	*((($4 + [32]) + [16])) = $7
	*(($4 + [44])) = $7
	*($4 + [40]) = $6
	CALL $211(($4 + [184]), ($4 + [32]), ($4 + [168]), ($4 + [176]), ($4 + [160]), [13398])
	CALL $97(($4 + [184]))
	$6 = *($4 + [212])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [216])) = $6
	CALL $11($6)
	
.LABEL $label$7
	$6 = *($4 + [200])
	if ( ($6 == 0) ){ goto $label$8 }
	*(($4 + [204])) = $6
	CALL $11($6)
	
.LABEL $label$8
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($4 + [44])) = $6
	CALL $11($6)
	
.LABEL $label$6
	CALL $145((($4 + [72]) + [24]))
	$6 = *(($4 + [132]))
	if ( ($6 == 0) ){ goto $label$9 }
	*((($4 + [112]) + [24])) = $6
	CALL $11($6)
	
.LABEL $label$9
	$global$0 = ($4 + [224])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [24]) = *($6)
	*($1 + [40]) = (*($1 + [40]) - *((*($3) + [40])))
	$8 = *(*(($3 + [4])))
	$9 = ($8 + [8])
	$7 = ($1 + [48])
	$3 = (*($7) - $9)
	$10 = int_32($3 >> [3])
	$11 = ($1 + [40])
	$12 = *($1)
	if ( ($3 == 0) ){ goto $label$4 }
	CALL memmove($8, $9, $3)
	*($7) = ($8 + ($10 << [3]))
	if ( ((int_64)$12 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14308])
	goto $label$3 
	
.LABEL $label$4
	*($7) = ($8 + ($10 << [3]))
	
.LABEL $label$3
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [44]) = $6
	*($5 + [64]) = $11
	*($5 + [40]) = $1
	$7 = ($1 + [16])
	*($5 + [48]) = $7
	$10 = ($1 + [24])
	*($5 + [52]) = $10
	$9 = ($1 + [25])
	*($5 + [56]) = $9
	$13 = ($1 + [28])
	*($5 + [60]) = $13
	$14 = ($1 + [41])
	*($5 + [68]) = $14
	$15 = ($1 + [44])
	*($5 + [72]) = $15
	$16 = ($1 + [56])
	*($5 + [76]) = $16
	$17 = ($1 + [68])
	*($5 + [80]) = $17
	$18 = ($1 + [72])
	*($5 + [84]) = $18
	$19 = ($1 + [76])
	*($5 + [88]) = $19
	CALL $205(($5 + [40]), ($5 + [8]))
	$8 = *($5 + [32])
	if ( ($8 <= [513]) ){ goto $label$6 }
	$3 = CALL $3($8)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [48]) = $7
	*($5 + [52]) = $10
	*($5 + [56]) = $9
	*($5 + [60]) = $13
	*($5 + [64]) = $11
	*($5 + [68]) = $14
	*($5 + [72]) = $15
	*($5 + [76]) = $16
	*($5 + [80]) = $17
	*($5 + [84]) = $18
	*($5 + [88]) = $19
	*($5 + [40]) = $1
	CALL $206(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [84]), $2, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($12 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *($6)
	if ( (CALL $46(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($5 + [32]), $12)
	*($3) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [96])
}

void .FUNC $202 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [24]) = *($6)
	$8 = *(*($3))
	$9 = ($8 + [8])
	$7 = ($1 + [60])
	$10 = (*($7) - $9)
	$11 = int_32($10 >> [3])
	$12 = *($1)
	$13 = $12
	if ( ($10 == 0) ){ goto $label$3 }
	CALL memmove($8, $9, $10)
	$13 = *($1)
	
.LABEL $label$3
	*($7) = ($8 + ($11 << [3]))
	*($1 + [41]) = (*($1 + [41]) - *((*($3 + [4]) + [40])))
	$10 = ($1 + [41])
	if ( ((int_64)$12 == (int_64)$13) ){ goto $label$4 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$4
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [44]) = $6
	*($5 + [68]) = $10
	*($5 + [40]) = $1
	$7 = ($1 + [16])
	*($5 + [48]) = $7
	$11 = ($1 + [24])
	*($5 + [52]) = $11
	$9 = ($1 + [25])
	*($5 + [56]) = $9
	$14 = ($1 + [28])
	*($5 + [60]) = $14
	$15 = ($1 + [40])
	*($5 + [64]) = $15
	$16 = ($1 + [44])
	*($5 + [72]) = $16
	$17 = ($1 + [56])
	*($5 + [76]) = $17
	$18 = ($1 + [68])
	*($5 + [80]) = $18
	$19 = ($1 + [72])
	*($5 + [84]) = $19
	$20 = ($1 + [76])
	*($5 + [88]) = $20
	CALL $205(($5 + [40]), ($5 + [8]))
	$8 = *($5 + [32])
	if ( ($8 <= [513]) ){ goto $label$6 }
	$3 = CALL $3($8)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [48]) = $7
	*($5 + [52]) = $11
	*($5 + [56]) = $9
	*($5 + [60]) = $14
	*($5 + [64]) = $15
	*($5 + [68]) = $10
	*($5 + [72]) = $16
	*($5 + [76]) = $17
	*($5 + [80]) = $18
	*($5 + [84]) = $19
	*($5 + [88]) = $20
	*($5 + [40]) = $1
	CALL $206(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [84]), $2, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL $4($3)
	
.LABEL $label$7
	if ( (uint_64)($12 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *($6)
	if ( (CALL $46(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($5 + [32]), $12)
	*($3) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [96])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [24]) = *($6)
	*($1 + [40]) = *(*($3))
	$7 = *($3 + [4])
	$8 = *($1)
	$9 = ($1 + [48])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)*(($1 + [52]))) ){ goto $label$4 }
	*($9) = ($10 + [8])
	*($10) = *($7)
	goto $label$3 
	
.LABEL $label$4
	CALL $160(($1 + [44]), $7)
	
.LABEL $label$3
	$3 = *($3 + [8])
	*($6) = *($3)
	if ( ((int_32)*($3) != (int_32)[1]) ){ goto $label$5 }
	*($1 + [68]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	
.LABEL $label$5
	$7 = ($1 + [40])
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$6
	*($5 + [32]) = [0]
	*($5 + [8]) = ($5 + [32])
	*($5 + [44]) = $6
	*($5 + [64]) = $7
	*($5 + [40]) = $1
	$9 = ($1 + [16])
	*($5 + [48]) = $9
	$11 = ($1 + [24])
	*($5 + [52]) = $11
	$12 = ($1 + [25])
	*($5 + [56]) = $12
	$13 = ($1 + [28])
	*($5 + [60]) = $13
	$14 = ($1 + [41])
	*($5 + [68]) = $14
	$15 = ($1 + [44])
	*($5 + [72]) = $15
	$16 = ($1 + [56])
	*($5 + [76]) = $16
	$17 = ($1 + [68])
	*($5 + [80]) = $17
	$18 = ($1 + [72])
	*($5 + [84]) = $18
	$19 = ($1 + [76])
	*($5 + [88]) = $19
	CALL $205(($5 + [40]), ($5 + [8]))
	$10 = *($5 + [32])
	if ( ($10 <= [513]) ){ goto $label$8 }
	$3 = CALL $3($10)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $10)
	*($5 + [32]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [48]) = $9
	*($5 + [52]) = $11
	*($5 + [56]) = $12
	*($5 + [60]) = $13
	*($5 + [64]) = $7
	*($5 + [68]) = $14
	*($5 + [72]) = $15
	*($5 + [76]) = $16
	*($5 + [80]) = $17
	*($5 + [84]) = $18
	*($5 + [88]) = $19
	*($5 + [40]) = $1
	CALL $206(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [84]), $2, $3, $10)
	if ( ($10 <= [513]) ){ goto $label$9 }
	CALL $4($3)
	
.LABEL $label$9
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [40]) = *($6)
	if ( (CALL $46(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$11 }
	$3 = ($1 + [88])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2507685100368429056, ($5 + [32]), $8)
	*($3) = $1
	
.LABEL $label$12
	CALL db_idx64_update($1, $2, ($5 + [40]))
	
.LABEL $label$11
	$global$0 = ($5 + [96])
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	$5 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$5 = CALL $9($5)
	*((($4 + [32]) + [8])) = ($5 + ($6 << [4]))
	*($4 + [32]) = $5
	*($4 + [36]) = $5
	$7 = *(($1 + [8]))
	$6 = (*(($1 + [12])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $7, $6)
	*($4 + [36]) = ($5 + $6)
	
.LABEL $label$5
	$8 = *($1)
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	$1 = CALL $2($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$9 }
	*($4 + [8]) = ($1 << [1])
	$5 = (($4 + [8]) | [1])
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $9($6)
	*($4 + [8]) = ($6 | [1])
	*($4 + [16]) = $5
	*($4 + [12]) = $1
	
.LABEL $label$8
	CALL memcpy($5, $2, $1)
	
.LABEL $label$7
	*(($5 + $1)) = [0]
	*($0) = $8
	*($0 + [8]) = (int_64)6256973777754652672
	$1 = ($3 + [8])
	*(($5 = ($4 + [28]))) = *($1)
	$8 = *($3)
	*($3) = (int_64)0
	*($1) = [0]
	*($0 + [16]) = *($4 + [32])
	*(($0 + [24])) = *((($4 + [32]) + [8]))
	*($4 + [20 align=4]) = $8
	*($4 + [32]) = [0]
	*($4 + [36 align=4]) = (int_64)0
	CALL $323(($0 + [28]), ($4 + [8]))
	if ( (*($4 + [20]) & [1]) ){ goto $label$11 }
	if ( (*($4 + [8]) & [1]) ){ goto $label$10 }
	goto $label$3 
	
.LABEL $label$11
	CALL $11(*($5))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$10
	CALL $11(*($4 + [16]))
	$0 = *($4 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	CALL $52(($4 + [8]))
	
.LABEL $label$4
	CALL $44(($4 + [32]))
	
.LABEL $label$3
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($4 + [36]) = $0
	CALL $11($0)
	
.LABEL $label$1
	$global$0 = ($4 + [48])
	(unreachable)
	(unreachable)
}

void .FUNC $201 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [224])
	$global$0 = $4
	*($4 + [168]) = $3
	*($4 + [176]) = $1
	*($4 + [160]) = $2
	CALL require_auth($3)
	CALL $168(($4 + [112]), $0, $1, $3, [1])
	*(($4 + [104])) = [0]
	*($4 + [80]) = $1
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	*($4 + [108]) = [0]
	*($4 + [72]) = *($0)
	$5 = CALL $142(($4 + [72]), $2, [13228])
	CALL eosio_assert((*($5 + [8]) == 0), [13248])
	$7 = *(($5 + [48]))
	$6 = *($5 + [44])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$1 }
	
.LOOP $label$2:
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$1 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$2 }
	$6 = $7
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 == (int_32)$7), [13293])
	$7 = *(($5 + [60]))
	$6 = *($5 + [56])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$4 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$5 }
	*($4 + [64]) = $7
	goto $label$3 
	
.LABEL $label$4
	*($4 + [64]) = $6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	$3 = *($0)
	*($4 + [188]) = ($4 + [112])
	*($4 + [184]) = ($4 + [64])
	CALL $202(($4 + [72]), $5, $3, ($4 + [184]))
	
.LABEL $label$3
	$6 = (*(($4 + [152])) + *($5 + [40]))
	*($4 + [63]) = $6
	*($4 + [62]) = ( *(($5 + [8])) ? [1] : (($6 & [255]) <= *((($4 + [112]) + [16]))) )
	$3 = *($0)
	*($4 + [188]) = ($4 + [168])
	*($4 + [184]) = ($4 + [63])
	*($4 + [192]) = ($4 + [62])
	CALL $203(($4 + [72]), $5, $3, ($4 + [184]))
	if ( ((int_32)*($4 + [62]) != (int_32)[1]) ){ goto $label$6 }
	$3 = *($0)
	*($4 + [16]) = [12241]
	$1 = *($4 + [168])
	*($4 + [20]) = CALL $2([12241])
	*($4 + [8]) = *($4 + [16])
	$6 = CALL $89(($4 + [24]), ($4 + [8]))
	*($4 + [32]) = $3
	$3 = *($6)
	*(($6 = CALL $9([16]))) = $1
	*($6 + [8]) = $3
	$7 = ($6 + [16])
	*((($4 + [32]) + [16])) = $7
	*(($4 + [44])) = $7
	*($4 + [40]) = $6
	CALL $204(($4 + [184]), ($4 + [32]), ($4 + [176]), ($4 + [160]), ($4 + [168]))
	CALL $97(($4 + [184]))
	$6 = *($4 + [212])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [216])) = $6
	CALL $11($6)
	
.LABEL $label$7
	$6 = *($4 + [200])
	if ( ($6 == 0) ){ goto $label$8 }
	*(($4 + [204])) = $6
	CALL $11($6)
	
.LABEL $label$8
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($4 + [44])) = $6
	CALL $11($6)
	
.LABEL $label$6
	CALL $145((($4 + [72]) + [24]))
	$6 = *(($4 + [132]))
	if ( ($6 == 0) ){ goto $label$9 }
	*((($4 + [112]) + [24])) = $6
	CALL $11($6)
	
.LABEL $label$9
	$global$0 = ($4 + [224])
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$6 = *($0 + [20])
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*($6 + [4]) - *($6)) / (int_32)[12]))
	$5 = *($1)
	$4 = *($5 + [4])
	$8 = ($5 + [8])
	
.LOOP $label$6:
	$3 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$9 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($9) << [7]) | ($3 & [127]))
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [14367])
	$4 = *(($5 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($5 + [4]))) = $4
	if ( $9 ){ goto $label$6 }
	$3 = *(($6 + [4]))
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	CALL $307($5, $4)
	$4 = ($4 + [12])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	CALL $330(*($1), *($0 + [32]))
	CALL $330(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$12 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [14367])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $207 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth($3)
	CALL $168(($4 + [80]), $0, $1, $3, [1])
	if ( ((int_32)*(($4 + [97])) == (int_32)*($0 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], *($0 + [44]))
	
.LABEL $label$1
	if ( ((uint_32)int_32((*(($4 + [104])) - *(($4 + [100]))) >> [4]) >= (uint_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [13318])
	
.LABEL $label$2
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	CALL $67(($4 + [48]), $2)
	CALL $191(($4 + [64]), ($4 + [48]))
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*($4 + [56]))
	
.LABEL $label$3
	*(($5 = (($4 + [32]) + [8]))) = *(($4 + [120]))
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = *($4 + [112])
	$2 = (*($4 + [68]) - *($4 + [64]))
	$6 = ((int_32)$2 / (int_32)[12])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$4 }
	$7 = CALL $9($2)
	*(($4 + [24])) = ($7 + ((int_32)$6 * (int_32)[12]))
	*($4 + [16]) = $7
	*($4 + [20]) = $7
	$6 = *($4 + [68])
	$2 = *($4 + [64])
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $53($7, $2)
	$7 = (*($4 + [20]) + [12])
	*($4 + [20]) = $7
	$2 = ($2 + [12])
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	*(($4 + [8])) = *($5)
	*($4) = *($4 + [32])
	CALL $170($0, $1, $4, [2], ($4 + [16]))
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = *($4 + [20])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($7 + [-4])))
	
.LABEL $label$11
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$10 }
	$2 = *($4 + [16])
	goto $label$8 
	
.LABEL $label$9
	$2 = $6
	
.LABEL $label$8
	*($4 + [20]) = $6
	CALL $11($2)
	
.LABEL $label$7
	$6 = *($4 + [64])
	if ( ($6 == 0) ){ goto $label$12 }
	$7 = *($4 + [68])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($7 + [-4])))
	
.LABEL $label$16
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$15 }
	$2 = *($4 + [64])
	goto $label$13 
	
.LABEL $label$14
	$2 = $6
	
.LABEL $label$13
	*($4 + [68]) = $6
	CALL $11($2)
	
.LABEL $label$12
	$2 = *(($4 + [100]))
	if ( ($2 == 0) ){ goto $label$17 }
	*(($4 + [104])) = $2
	CALL $11($2)
	
.LABEL $label$17
	$global$0 = ($4 + [128])
	return (unreachable)
	
.LABEL $label$4
	CALL $44(($4 + [16]))
}

void .FUNC $204 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [40]) = [0]
	*($5 + [32]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$9 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($9 == 0) ){ goto $label$2 }
	$6 = int_32($9 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $9($9)
	$6 = ($8 + ($6 << [4]))
	*((($5 + [32]) + [8])) = $6
	*($5 + [32]) = $8
	*($5 + [36]) = $8
	$9 = *(($1 + [8]))
	$7 = (*(($1 + [12])) - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $9, $7)
	$7 = ($8 + $7)
	*($5 + [36]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*($0) = *($1)
	*($0 + [8]) = (int_64)6292810517502951424
	*($0 + [16]) = $8
	*(($0 + [20])) = $7
	*(($0 + [24])) = $6
	*(($5 + [40])) = [0]
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($5 + [24]) = *($4)
	CALL $95(($0 + [28]), [24])
	$1 = *(($0 + [32]))
	$0 = *($0 + [28])
	*($5 + [52]) = $0
	*($5 + [48]) = $0
	*($5 + [56]) = $1
	*($5 + [64]) = ($5 + [48])
	*($5 + [72]) = ($5 + [8])
	CALL $355(($5 + [72]), ($5 + [64]))
	$0 = *($5 + [32])
	if ( ($0 == 0) ){ goto $label$4 }
	*($5 + [36]) = $0
	CALL $11($0)
	
.LABEL $label$4
	$global$0 = ($5 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($5 + [32]))
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [19])
	*(($2 = *($1))) = $1
	$3 = *($3)
	$3 = *($0 + [20])
	$4 = *($3 + [4])
	$5 = (CASTING uint_64)(uint_32 ((int_32)($4 - $3) / (int_32)[12]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$6 = *($3)
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ))
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	*($2) = $1
	$6 = *($3)
	$6 = ( *(($3 + [4])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	if ( ($6 == 0) ){ goto $label$5 }
	$1 = ($6 + $1)
	*($2) = $1
	
.LABEL $label$5
	$3 = ($3 + [12])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	$1 = ($1 + [2])
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [32])
	$6 = *($3 + [4])
	$4 = ($6 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	
.LOOP $label$6:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$1 = (($4 & [-8]) + $1)
	
.LABEL $label$7
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [36])
	$6 = *($3 + [4])
	$4 = ($6 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	
.LOOP $label$8:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$9 }
	$1 = (($4 & [-8]) + $1)
	
.LABEL $label$9
	*($2) = ($1 + [12])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $3($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $3($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $3($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $3(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $4($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $4 (int_32 $0)
{
}

void .FUNC $5 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $3 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8244])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $0 ()
{
	CALL $5()
}

int_32 .FUNC $1 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

int_32 .FUNC $17 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	$5 = ($global$0 - [8128])
	$global$0 = $5
	$6 = (($5 + [704]) | [8])
	$7 = (($5 + [704]) | [9])
	$8 = ([-2] - ($5 + [704]))
	$9 = ($5 + [7664])
	$10 = (($5 + [692]) + [12])
	$11 = (($5 + [352]) + [54])
	$12 = (($5 + [352]) + [55])
	$13 = [0]
	$14 = [0]
	$15 = [0]
	
.LOOP $label$4:
	if ( ($0 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$1 = *($17)
	if ( ($1 == 0) ){ goto $label$1 }
	$15 = $17
	$1 = ($1 & [255])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)$1 == (int_32)[37]) ){ goto $label$23 }
	$1 = *($15 + [1])
	$15 = ($15 + [1])
	$1 = ($1 & [255])
	if ( $1 ){ goto $label$25 }
	
.LABEL $label$24
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	$18 = $15
	
.LOOP $label$27:
	if ( ((int_32)*(($18 + [1])) != (int_32)[37]) ){ goto $label$26 }
	$15 = ($15 + [1])
	$19 = *($18 + [2])
	$1 = ($18 + [2])
	$18 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$27 }
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$22 
	
.LABEL $label$26
	$1 = $18
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	
.LABEL $label$22
	if ( (*($0) & [32]) ){ goto $label$28 }
	CALL $27($17, $15, $0)
	
.LABEL $label$28
	if ( $15 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	
.LOOP $label$29:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$31 }
	$1 = $17
	$15 = ($15 & [255])
	if ( ($15 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	if ( ((int_32)$15 == (int_32)[37]) ){ goto $label$32 }
	$15 = *($1 + [1])
	$1 = ($1 + [1])
	$15 = ($15 & [255])
	if ( $15 ){ goto $label$34 }
	
.LABEL $label$33
	$18 = ([2147483647] - $14)
	$15 = ($1 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$32
	$18 = $1
	$15 = $1
	
.LOOP $label$36:
	if ( ((int_32)*(($15 + [1])) != (int_32)[37]) ){ goto $label$35 }
	$18 = ($18 + [1])
	$19 = *($15 + [2])
	$1 = ($15 + [2])
	$15 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$36 }
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$30 
	
.LABEL $label$35
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$31
	if ( $0 ){ goto $label$1 }
	if ( ($13 == 0) ){ goto $label$46 }
	$1 = [1]
	$15 = *($4 + [4])
	if ( ($15 == 0) ){ goto $label$37 }
	CALL $40(($3 + [16]), $15, $2)
	$15 = *($4 + [8])
	if ( ($15 == 0) ){ goto $label$45 }
	CALL $40(($3 + [32]), $15, $2)
	$15 = *($4 + [12])
	if ( ($15 == 0) ){ goto $label$44 }
	CALL $40(($3 + [48]), $15, $2)
	$15 = *($4 + [16])
	if ( ($15 == 0) ){ goto $label$43 }
	CALL $40(($3 + [64]), $15, $2)
	$15 = *($4 + [20])
	if ( ($15 == 0) ){ goto $label$42 }
	CALL $40(($3 + [80]), $15, $2)
	$15 = *($4 + [24])
	if ( ($15 == 0) ){ goto $label$41 }
	CALL $40(($3 + [96]), $15, $2)
	$15 = *($4 + [28])
	if ( ($15 == 0) ){ goto $label$40 }
	CALL $40(($3 + [112]), $15, $2)
	$15 = *($4 + [32])
	if ( ($15 == 0) ){ goto $label$39 }
	CALL $40(($3 + [128]), $15, $2)
	$15 = *($4 + [36])
	if ( ($15 == 0) ){ goto $label$38 }
	CALL $40(($3 + [144]), $15, $2)
	$global$0 = ($5 + [8128])
	return [1]
	
.LABEL $label$46
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$45
	$1 = [2]
	goto $label$37 
	
.LABEL $label$44
	$1 = [3]
	goto $label$37 
	
.LABEL $label$43
	$1 = [4]
	goto $label$37 
	
.LABEL $label$42
	$1 = [5]
	goto $label$37 
	
.LABEL $label$41
	$1 = [6]
	goto $label$37 
	
.LABEL $label$40
	$1 = [7]
	goto $label$37 
	
.LABEL $label$39
	$1 = [8]
	goto $label$37 
	
.LABEL $label$38
	$1 = [9]
	
.LABEL $label$37
	$15 = ($4 + ($1 << [2]))
	
.LOOP $label$47:
	if ( *($15) ){ goto $label$18 }
	$15 = ($15 + [4])
	$14 = [1]
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[9]) ){ goto $label$47 }
	goto $label$1 
	
.LABEL $label$30
	if ( $15 ){ goto $label$29 }
	
.LABEL $label$19
	$15 = ($1 + [1])
	$16 = *($1 + [1])
	$20 = ($16 + [-48])
	if ( ((uint_32)$20 > (uint_32)[9]) ){ goto $label$50 }
	$19 = ((int_32)*($1 + [2]) == (int_32)[36])
	$15 = ( ($1 + [3]) ? $15 : $19 )
	$21 = ( $20 ? [-1] : $19 )
	$13 = ( [1] ? $13 : $19 )
	$22 = [0]
	$16 = *(($1 + ( [3] ? [1] : $19 )))
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$50
	$21 = [-1]
	$22 = [0]
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	
.LABEL $label$49
	$1 = ([1] << $1)
	if ( (($1 & [75913]) == 0) ){ goto $label$48 }
	$19 = ($15 + [1])
	$22 = [0]
	
.LOOP $label$51:
	$22 = ($1 | $22)
	$15 = $19
	$16 = *($15)
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 >= (uint_32)[32]) ){ goto $label$48 }
	$19 = ($15 + [1])
	$1 = ([1] << $1)
	if ( ($1 & [75913]) ){ goto $label$51 }
	
.LABEL $label$48
	if ( ((int_32)$16 != (int_32)[42]) ){ goto $label$57 }
	$1 = (*($15 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$56 }
	if ( ((int_32)*($15 + [2]) != (int_32)[36]) ){ goto $label$56 }
	*(($4 + ($1 << [2]))) = [10]
	$23 = ($15 + [3])
	$13 = [1]
	$20 = *((($3 + (*(($15 + [1])) << [4])) + [-768]))
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	goto $label$55 
	
.LABEL $label$57
	$20 = [0]
	$19 = ($16 + [-48])
	if ( ((uint_32)$19 > (uint_32)[9]) ){ goto $label$54 }
	$1 = [0]
	
.LOOP $label$58:
	$20 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$59 }
	$1 = ((int_32)$1 * (int_32)[10])
	$20 = ( [-1] ? ($1 + $19) : ((int_32)$19 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$59
	$19 = *($15 + [1])
	$23 = ($15 + [1])
	$15 = $23
	$1 = $20
	$19 = ($19 + [-48])
	if ( ($19 <= [10]) ){ goto $label$58 }
	if ( ((int_32)$20 >= (int_32)[0]) ){ goto $label$52 }
	goto $label$3 
	
.LABEL $label$56
	if ( $13 ){ goto $label$18 }
	$23 = ($15 + [1])
	if ( ($0 == 0) ){ goto $label$53 }
	$15 = *($2)
	*($2) = ($15 + [4])
	$13 = [0]
	$20 = *($15)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$55
	$20 = ([0] - $20)
	$22 = ($22 | [8192])
	goto $label$52 
	
.LABEL $label$54
	$23 = $15
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$20 = [0]
	
.LABEL $label$52
	$15 = [0]
	$16 = [-1]
	if ( ((int_32)*($23) != (int_32)[46]) ){ goto $label$66 }
	$19 = *($23 + [1])
	if ( ((int_32)$19 != (int_32)[42]) ){ goto $label$65 }
	$1 = (*($23 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$64 }
	if ( ((int_32)*($23 + [3]) != (int_32)[36]) ){ goto $label$64 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($23 + [4])
	$16 = *((($3 + (*(($23 + [2])) << [4])) + [-768]))
	goto $label$61 
	
.LABEL $label$66
	$1 = $23
	$24 = [0]
	goto $label$60 
	
.LABEL $label$65
	$1 = ($23 + [1])
	$25 = ($19 + [-48])
	if ( ((uint_32)$25 > (uint_32)[9]) ){ goto $label$63 }
	$23 = [0]
	$19 = $1
	
.LOOP $label$67:
	$16 = [-1]
	if ( ((uint_32)$23 > (uint_32)[214748364]) ){ goto $label$68 }
	$1 = ((int_32)$23 * (int_32)[10])
	$16 = ( [-1] ? ($1 + $25) : ((int_32)$25 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$68
	$24 = [1]
	$25 = *($19 + [1])
	$1 = ($19 + [1])
	$19 = $1
	$23 = $16
	$25 = ($25 + [-48])
	if ( ($25 <= [10]) ){ goto $label$67 }
	goto $label$60 
	
.LABEL $label$64
	if ( $13 ){ goto $label$18 }
	$1 = ($23 + [2])
	if ( ($0 == 0) ){ goto $label$62 }
	$19 = *($2)
	*($2) = ($19 + [4])
	$16 = *($19)
	goto $label$61 
	
.LABEL $label$63
	$24 = [1]
	$16 = [0]
	goto $label$60 
	
.LABEL $label$62
	$16 = [0]
	
.LABEL $label$61
	$24 = ((int_32)uint_32($16 >> [31]) ^ (int_32)[1])
	
.LABEL $label$60
	
.LOOP $label$69:
	$19 = $15
	$15 = (*($1) + [-65])
	if ( ((uint_32)$15 > (uint_32)[57]) ){ goto $label$18 }
	$1 = ($1 + [1])
	$15 = *(((((int_32)$19 * (int_32)[58]) + $15) + [10464]))
	if ( (($15 + [-1]) <= [8]) ){ goto $label$69 }
	if ( ($15 == 0) ){ goto $label$18 }
	if ( ((int_32)$15 != (int_32)[27]) ){ goto $label$72 }
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$18 }
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$73 }
	*(($4 + ($21 << [2]))) = $15
	$15 = ($3 + ($21 << [4]))
	*($5 + [424]) = *(($15 + [8]))
	*($5 + [416]) = *($15)
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$73
	if ( ($0 == 0) ){ goto $label$70 }
	CALL $40(($5 + [416]), $15, $2)
	
.LABEL $label$71
	$23 = ($22 & [-65537])
	$21 = ( $23 ? $22 : ($22 & [8192]) )
	$26 = [0]
	$27 = [8269]
	$15 = *(($1 + [-1]))
	$28 = ( ( ($15 & [-33]) ? $15 : ((int_32)($15 & [15]) == (int_32)[3]) ) ? $15 : $19 )
	$15 = ($28 + [-65])
	if ( ((uint_32)$15 > (uint_32)[55]) ){ goto $label$9 }
	$22 = $12
	goto $label$101 
	
.LABEL $label$101
	if ( ((int_32)$16 > (int_32)[-1]) ){ goto $label$102 }
	if ( $24 ){ goto $label$3 }
	
.LABEL $label$102
	$29 = *($5 + [424])
	$30 = *($5 + [416])
	*($5 + [748]) = [0]
	if ( (CALL $28($30, $29) == 0) ){ goto $label$103 }
	$31 = [1]
	$32 = [10944]
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	if ( ((int_32)CALL $29($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$103
	if ( ($21 & [2048]) ){ goto $label$99 }
	$31 = ($21 & [1])
	$32 = ( [10950] ? [10945] : $31 )
	if ( ((int_32)CALL $29($30, $29) > (int_32)[1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$100
	$29 = *($5 + [416])
	if ( ((int_64)$29 <= (int_64)-1) ){ goto $label$86 }
	if ( ($21 & [2048]) ){ goto $label$84 }
	$26 = ($21 & [1])
	$27 = ( [8271] ? [8269] : $26 )
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$99
	$31 = [1]
	$32 = [10947]
	if ( ((int_32)CALL $29($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$98
	*((($5 + [344]) + [4])) = [0]
	*($5 + [344]) = *($5 + [416])
	*($5 + [416]) = ($5 + [344])
	$16 = [-1]
	$17 = ($5 + [344])
	goto $label$96 
	
.LABEL $label$97
	$17 = *($5 + [416])
	if ( ($16 == 0) ){ goto $label$80 }
	
.LABEL $label$96
	$15 = [0]
	$18 = $17
	
.LOOP $label$104:
	$19 = *($18)
	if ( ($19 == 0) ){ goto $label$82 }
	$19 = CALL $31(($5 + [340]), $19)
	$22 = ((int_32)$19 < (int_32)[0])
	if ( $22 ){ goto $label$83 }
	if ( ((uint_32)$19 > (uint_32)($16 - $15)) ){ goto $label$83 }
	$18 = ($18 + [4])
	$15 = ($19 + $15)
	if ( ((uint_32)$16 > (uint_32)$15) ){ goto $label$104 }
	goto $label$82 
	
.LABEL $label$95
	*((($5 + [352]) + [54])) = *($5 + [416])
	$16 = [1]
	$17 = $11
	$22 = $12
	$21 = $23
	goto $label$8 
	
.LABEL $label$94
	$17 = CALL $34(*(CALL $6()))
	goto $label$88 
	
.LABEL $label$93
	$15 = [0]
	$18 = ($19 & [255])
	if ( ((uint_32)$18 > (uint_32)[7]) ){ goto $label$4 }
	goto $label$105 
	
.LABEL $label$105
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$92
	$17 = $12
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$106 }
	$17 = $12
	
.LOOP $label$107:
	*(($17 = ($17 + [-1]))) = (((CASTING uint_32)(uint_64 $29) & [7]) | [48])
	$29 = (uint_64)$29 >> (uint_64)(int_64)3
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$107 }
	
.LABEL $label$106
	if ( ($21 & [8]) ){ goto $label$81 }
	$26 = [0]
	$27 = [8269]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$91
	$16 = ( $16 ? [8] : ((uint_32)$16 > (uint_32)[8]) )
	$21 = ($21 | [8])
	$28 = [120]
	
.LABEL $label$90
	$26 = [0]
	$27 = [8269]
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$108 }
	$15 = ($28 & [32])
	$17 = $12
	
.LOOP $label$109:
	*(($17 = ($17 + [-1]))) = (*((((CASTING uint_32)(uint_64 $29) & [15]) + [10928])) | $15)
	$29 = (uint_64)$29 >> (uint_64)(int_64)4
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$109 }
	if ( (($21 & [8]) == 0) ){ goto $label$12 }
	if ( (int_64)(*($5 + [416]) == 0) ){ goto $label$12 }
	$27 = (int_32($28 >> [4]) + [8269])
	$26 = [2]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$108
	$17 = $12
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$89
	$15 = *($5 + [416])
	$17 = ( $15 ? [10428] : $15 )
	
.LABEL $label$88
	$26 = [0]
	$15 = CALL $36($17, ( [2147483647] ? $16 : ((int_32)$16 < (int_32)[0]) ))
	$22 = ($17 + $15)
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$85 }
	$21 = $23
	$16 = $15
	goto $label$8 
	
.LABEL $label$87
	$26 = [0]
	$27 = [8269]
	$29 = *($5 + [416])
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$86
	$29 = (int_64)
	*($5 + [416]) = $29((int_64)0 - $29))
	$26 = [1]
	$27 = [8269]
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$85
	$21 = $23
	$16 = $15
	if ( (*($22) == 0) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$84
	$26 = [1]
	$27 = [8270]
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$83
	if ( $22 ){ goto $label$2 }
	
.LABEL $label$82
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$23 = ($21 & [73728])
	if ( $23 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$81
	$15 = ($12 - $17)
	$27 = ( [8269] ? [8274] : ((int_32)$16 > (int_32)$15) )
	$26 = ((int_32)$16 <= (int_32)$15)
	goto $label$12 
	
.LABEL $label$80
	$15 = [0]
	$23 = ($21 & [73728])
	if ( ($23 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$79
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$78
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$77
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$76
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$75
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$74
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$70
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$18
	*(CALL $6()) = [22]
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$16 }
	$18 = ($25 <= [256])
	$25 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $25 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$111 }
	$18 = ($19 == 0)
	$19 = $25
	
.LOOP $label$112:
	if ( (($18 & [1]) == 0) ){ goto $label$113 }
	CALL $27(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$113
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$112 }
	if ( $22 ){ goto $label$16 }
	$25 = ($25 & [255])
	goto $label$110 
	
.LABEL $label$111
	if ( $19 ){ goto $label$16 }
	
.LABEL $label$110
	CALL $27(($5 + [432]), $25, $0)
	
.LABEL $label$16
	if ( ($15 == 0) ){ goto $label$114 }
	$18 = [0]
	
.LOOP $label$115:
	$19 = *($17)
	if ( ($19 == 0) ){ goto $label$114 }
	$19 = CALL $31(($5 + [340]), $19)
	$18 = ($19 + $18)
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$114 }
	if ( (*($0) & [32]) ){ goto $label$116 }
	CALL $27(($5 + [340]), $19, $0)
	
.LABEL $label$116
	$17 = ($17 + [4])
	if ( ($18 <= $15) ){ goto $label$115 }
	
.LABEL $label$114
	if ( ((int_32)$23 != (int_32)[8192]) ){ goto $label$117 }
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$117 }
	$18 = ($22 <= [256])
	$22 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$119 }
	$18 = ($19 == 0)
	$19 = $22
	
.LOOP $label$120:
	if ( (($18 & [1]) == 0) ){ goto $label$121 }
	CALL $27(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$121
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$120 }
	if ( $16 ){ goto $label$117 }
	$22 = ($22 & [255])
	goto $label$118 
	
.LABEL $label$119
	if ( $19 ){ goto $label$117 }
	
.LABEL $label$118
	CALL $27(($5 + [432]), $22, $0)
	
.LABEL $label$117
	$15 = ( $20 ? $15 : ((int_32)$20 > (int_32)$15) )
	goto $label$4 
	
.LABEL $label$15
	$30 = $29
	$17 = $12
	goto $label$13 
	
.LABEL $label$14
	$17 = $12
	
.LOOP $label$122:
	$30 = ((uint_64)$29 / (uint_64)(int_64)10)
	*(($17 = ($17 + [-1]))) = ((CASTING uint_32)(uint_64 (int_64))($29 - ((int_64)$30 * (int_64)10))) | [48])
	$15 = ((uint_64)$29 > (uint_64)(int_64)42949672959)
	$29 = $30
	if ( $15 ){ goto $label$122 }
	
.LABEL $label$13
	$15 = (CASTING uint_32)(uint_64 $30)
	if ( ($15 == 0) ){ goto $label$12 }
	
.LOOP $label$123:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$123 }
	
.LABEL $label$12
	if ( ($24 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$10
	$21 = ( ($21 & [-65537]) ? $21 : ((int_32)$16 > (int_32)[-1]) )
	$29 = *($5 + [416])
	if ( $16 ){ goto $label$124 }
	if ( ((int_64)($29 == 0) == 0) ){ goto $label$124 }
	$17 = $12
	$22 = $12
	$16 = [0]
	goto $label$8 
	
.LABEL $label$124
	$15 = (($12 - $17) + (int_64)($29 == 0))
	$16 = ( $16 ? $15 : ((int_32)$16 > (int_32)$15) )
	
.LABEL $label$9
	$22 = $12
	
.LABEL $label$8
	$24 = ($22 - $17)
	$28 = ( $24 ? $16 : ((int_32)$16 < (int_32)$24) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$3 }
	$25 = ($26 + $28)
	$15 = ( $25 ? $20 : ((int_32)$20 < (int_32)$25) )
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$125 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$125 }
	$18 = ($31 <= [256])
	$31 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $31 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$127 }
	$18 = ($19 == 0)
	$19 = $31
	
.LOOP $label$128:
	if ( (($18 & [1]) == 0) ){ goto $label$129 }
	CALL $27(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$129
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$128 }
	if ( $23 ){ goto $label$125 }
	$31 = ($31 & [255])
	goto $label$126 
	
.LABEL $label$127
	if ( $19 ){ goto $label$125 }
	
.LABEL $label$126
	CALL $27(($5 + [432]), $31, $0)
	
.LABEL $label$125
	if ( (*($0) & [32]) ){ goto $label$130 }
	CALL $27($27, $26, $0)
	
.LABEL $label$130
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$131 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$131 }
	$18 = ($26 <= [256])
	$26 = ($15 - $25)
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$133 }
	$18 = ($19 == 0)
	$19 = $26
	
.LOOP $label$134:
	if ( (($18 & [1]) == 0) ){ goto $label$135 }
	CALL $27(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$135
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$134 }
	if ( $23 ){ goto $label$131 }
	$26 = ($26 & [255])
	goto $label$132 
	
.LABEL $label$133
	if ( $19 ){ goto $label$131 }
	
.LABEL $label$132
	CALL $27(($5 + [432]), $26, $0)
	
.LABEL $label$131
	if ( ((int_32)$24 >= (int_32)$16) ){ goto $label$136 }
	$18 = ($23 <= [256])
	$23 = ($28 - $24)
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$138 }
	$18 = ($19 == 0)
	$19 = $23
	
.LOOP $label$139:
	if ( (($18 & [1]) == 0) ){ goto $label$140 }
	CALL $27(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$140
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$139 }
	if ( $22 ){ goto $label$136 }
	$23 = ($23 & [255])
	goto $label$137 
	
.LABEL $label$138
	if ( $19 ){ goto $label$136 }
	
.LABEL $label$137
	CALL $27(($5 + [432]), $23, $0)
	
.LABEL $label$136
	if ( (*($0) & [32]) ){ goto $label$141 }
	CALL $27($17, $24, $0)
	
.LABEL $label$141
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$4 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$4 }
	$18 = ($16 <= [256])
	$16 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$143 }
	$18 = ($19 == 0)
	$19 = $16
	
.LOOP $label$144:
	if ( (($18 & [1]) == 0) ){ goto $label$145 }
	CALL $27(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$145
	$20 = ($17 & [32])
	$18 = ($20 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$144 }
	if ( $20 ){ goto $label$4 }
	$16 = ($16 & [255])
	goto $label$142 
	
.LABEL $label$143
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$142
	CALL $27(($5 + [432]), $16, $0)
	goto $label$4 
	
.LABEL $label$7
	$23 = CALL __unordtf2($30, $29, $30, $29)
	$16 = ($31 + [3])
	if ( ($21 & [8192]) ){ goto $label$146 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$146 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$148 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$149:
	if ( (($15 & [1]) == 0) ){ goto $label$150 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$150
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$149 }
	if ( $17 ){ goto $label$146 }
	$22 = ($22 & [255])
	goto $label$147 
	
.LABEL $label$148
	if ( $18 ){ goto $label$146 }
	
.LABEL $label$147
	CALL $27(($5 + [432]), $22, $0)
	
.LABEL $label$146
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$155 }
	CALL $27($32, $31, $0)
	if ( ((*($0) & [32]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	if ( ($15 & [32]) ){ goto $label$153 }
	
.LABEL $label$154
	$15 = uint_32(($28 & [32]) >> [5])
	CALL $27(( ( [11035] ? [11042] : $15 ) ? ( [10972] ? [11009] : $15 ) : $23 ), [3], $0)
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$153
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	
.LABEL $label$152
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$151 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$157 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$158:
	if ( (($15 & [1]) == 0) ){ goto $label$159 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$159
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$158 }
	if ( $17 ){ goto $label$151 }
	$22 = ($22 & [255])
	goto $label$156 
	
.LABEL $label$157
	if ( $18 ){ goto $label$151 }
	
.LABEL $label$156
	CALL $27(($5 + [432]), $22, $0)
	
.LABEL $label$151
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	goto $label$5 
	
.LABEL $label$6
	CALL $37(($5 + [320]), $30, $29, ($5 + [748]))
	$30 = *($5 + [328])
	$29 = *($5 + [320])
	CALL __addtf3(($5 + [304]), $29, $30, $29, $30)
	$30 = *((($5 + [304]) + [8]))
	$29 = *($5 + [304])
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$160 }
	*($5 + [748]) = (*($5 + [748]) + [-1])
	
.LABEL $label$160
	$33 = ($28 | [32])
	if ( ((int_32)$33 != (int_32)[97]) ){ goto $label$173 }
	$22 = ($28 & [32])
	$26 = ( ($32 + [9]) ? $32 : $22 )
	if ( ((uint_32)$16 > (uint_32)[26]) ){ goto $label$171 }
	if ( (([27] - $16) == 0) ){ goto $label$171 }
	$15 = ($16 + [-27])
	$34 = (int_64)4612248968380809216
	$35 = (int_64)0
	
.LOOP $label$174:
	CALL __multf3(($5 + [208]), $35, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($5 + [208]) + [8]))
	$35 = *($5 + [208])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$174 }
	if ( ((int_32)*($26) != (int_32)[45]) ){ goto $label$172 }
	CALL __subtf3(($5 + [160]), $29, ((int_64)$30 ^ (int_64)-9223372036854775808), $35, $34)
	CALL __addtf3(($5 + [144]), $35, $34, *($5 + [160]), *((($5 + [160]) + [8])))
	$30 = ((int_64)*((($5 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$29 = *($5 + [144])
	goto $label$171 
	
.LABEL $label$173
	$15 = ((int_32)$16 < (int_32)[0])
	if ( (CALL __netf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$176 }
	CALL __multf3(($5 + [288]), $29, $30, (int_64)0, (int_64)4619285842798575616)
	$17 = (*($5 + [748]) + [-28])
	*($5 + [748]) = $17
	$30 = *((($5 + [288]) + [8]))
	$29 = *($5 + [288])
	goto $label$175 
	
.LABEL $label$176
	$17 = *($5 + [748])
	
.LABEL $label$175
	$26 = ( [6] ? $16 : $15 )
	$27 = ( ($5 + [752]) ? $9 : ((int_32)$17 < (int_32)[0]) )
	$19 = $27
	
.LOOP $label$177:
	$15 = CALL __fixunstfsi($29, $30)
	CALL __floatunsitf(($5 + [272]), $15)
	CALL __subtf3(($5 + [256]), $29, $30, *($5 + [272]), *((($5 + [272]) + [8])))
	CALL __multf3(($5 + [240]), *($5 + [256]), *((($5 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($19) = $15
	$19 = ($19 + [4])
	$30 = *((($5 + [240]) + [8]))
	$29 = *($5 + [240])
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$177 }
	if ( ((int_32)$17 < (int_32)[1]) ){ goto $label$179 }
	$18 = $27
	
.LOOP $label$180:
	$17 = ( $17 ? [29] : ((int_32)$17 < (int_32)[29]) )
	$15 = ($19 + [-4])
	if ( ($15 <= $18) ){ goto $label$181 }
	$30 = (CASTING uint_64)(uint_32 $17)
	$29 = (int_64)0
	
.LOOP $label$182:
	$29 = ((uint_64)$29 / (uint_64)(int_64)1000000000)
	$29 = ((int_64)((int_64)*($15) << (int_64)$30) + (int_64)((int_64)$29 & (int_64)4294967295))
	*($15) = (int_64))($29 - ((int_64)$29 * (int_64)1000000000))
	$15 = ($15 + [-4])
	if ( ((uint_32)$15 >= (uint_32)$18) ){ goto $label$182 }
	$15 = (CASTING uint_32)(uint_64 $29)
	if ( ($15 == 0) ){ goto $label$181 }
	*(($18 = ($18 + [-4]))) = $15
	
.LABEL $label$181
	
.LOOP $label$184:
	$15 = $19
	if ( ((uint_32)$15 <= (uint_32)$18) ){ goto $label$183 }
	$19 = ($15 + [-4])
	if ( (*($19) == 0) ){ goto $label$184 }
	
.LABEL $label$183
	$17 = (*($5 + [748]) - $17)
	*($5 + [748]) = $17
	$19 = $15
	if ( ((int_32)$17 > (int_32)[0]) ){ goto $label$180 }
	goto $label$178 
	
.LABEL $label$179
	$15 = $19
	$18 = $27
	
.LABEL $label$178
	if ( ((int_32)$17 > (int_32)[-1]) ){ goto $label$185 }
	$24 = (((uint_32)($26 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$33 != (int_32)[102]) ){ goto $label$186 }
	$36 = ($27 + ($24 << [2]))
	
.LOOP $label$187:
	$19 = ([0] - $17)
	$22 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$189 }
	$23 = uint_32([1000000000] >> $22)
	$25 = ((int_32)([-1] << $22) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$190:
	$16 = *($19)
	*($19) = (uint_32($16 >> $22) + $17)
	$17 = ((int_32)($16 & $25) * (int_32)$23)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$190 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$188 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$188 
	
.LABEL $label$189
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$188
	$17 = (*($5 + [748]) + $22)
	*($5 + [748]) = $17
	$15 = ( $36 ? $15 : ((int_32)int_32(($15 - $27) >> [2]) > (int_32)$24) )
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$187 }
	goto $label$185 
	
.LABEL $label$186
	
.LOOP $label$191:
	$19 = ([0] - $17)
	$22 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$193 }
	$23 = uint_32([1000000000] >> $22)
	$25 = ((int_32)([-1] << $22) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$194:
	$16 = *($19)
	*($19) = (uint_32($16 >> $22) + $17)
	$17 = ((int_32)($16 & $25) * (int_32)$23)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$194 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$192 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$192 
	
.LABEL $label$193
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$192
	$17 = (*($5 + [748]) + $22)
	*($5 + [748]) = $17
	$15 = ( ($18 + ($24 << [2])) ? $15 : ((int_32)int_32(($15 - $18) >> [2]) > (int_32)$24) )
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$191 }
	
.LABEL $label$185
	$19 = [0]
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$195 }
	$19 = ((int_32)int_32(($27 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$195 }
	$17 = [10]
	
.LOOP $label$196:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$196 }
	
.LABEL $label$195
	$23 = ((int_32)$33 == (int_32)[103])
	$25 = (((int_32)$26 != (int_32)[0]) & $23)
	$16 = ( [0] ? $19 : ((int_32)$33 == (int_32)[102]) )
	$17 = (($26 - $16) - $25)
	if ( ((int_32)$17 >= (int_32)(((int_32)int_32(($15 - $27) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$197 }
	$24 = ($17 + [147456])
	$36 = ((int_32)$24 / (int_32)[9])
	$33 = ($27 + ($36 << [2]))
	$22 = ($33 + [-65532])
	$17 = [10]
	$36 = ((int_32)$36 * (int_32)[9])
	if ( ((int_32)($24 - $36) > (int_32)[7]) ){ goto $label$198 }
	$16 = (((($26 + ([0] - $25)) + [147455]) - $16) - $36)
	$17 = [10]
	
.LOOP $label$199:
	$17 = ((int_32)$17 * (int_32)[10])
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$199 }
	
.LABEL $label$198
	$24 = ((uint_32)$25 / (uint_32)$17)
	$25 = *($22)
	$16 = ($25 - ((int_32)$24 * (int_32)$17))
	$36 = ($22 + [4])
	if ( ((int_32)$36 != (int_32)$15) ){ goto $label$201 }
	if ( ($16 == 0) ){ goto $label$200 }
	
.LABEL $label$201
	if ( ($24 & [1]) ){ goto $label$203 }
	$29 = (int_64)4643211215818981376
	$30 = (int_64)0
	if ( ((uint_32)$22 <= (uint_32)$18) ){ goto $label$202 }
	if ( ((int_32)$17 != (int_32)[1000000000]) ){ goto $label$202 }
	if ( ((*(($22 + [-4])) & [1]) == 0) ){ goto $label$202 }
	
.LABEL $label$203
	$29 = (int_64)4643211215818981376
	$30 = (int_64)1
	
.LABEL $label$202
	$34 = (int_64)4611123068473966592
	$24 = uint_32($17 >> [1])
	if ( ($16 <= $24) ){ goto $label$204 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$16 == (int_32)$24) ) ? (int_64)4611545280939032576 : ((int_32)$36 == (int_32)$15) )
	
.LABEL $label$204
	if ( ($31 == 0) ){ goto $label$205 }
	if ( ((int_32)*($32) != (int_32)[45]) ){ goto $label$205 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	
.LABEL $label$205
	CALL __addtf3(($5 + [224]), $30, $29, (int_64)0, $34)
	$16 = ($25 - $16)
	*($22) = $16
	if ( (CALL __eqtf2(*($5 + [224]), *((($5 + [224]) + [8])), $30, $29) == 0) ){ goto $label$200 }
	$19 = ($16 + $17)
	*($22) = $19
	if ( ($19 <= [1000000000]) ){ goto $label$206 }
	$19 = ($33 + [-65536])
	
.LOOP $label$207:
	*(($19 + [4])) = [0]
	if ( ((uint_32)$19 >= (uint_32)$18) ){ goto $label$208 }
	*(($18 = ($18 + [-4]))) = [0]
	
.LABEL $label$208
	$17 = (*($19) + [1])
	*($19) = $17
	$19 = ($19 + [-4])
	if ( ((uint_32)$17 > (uint_32)[999999999]) ){ goto $label$207 }
	$22 = ($19 + [4])
	
.LABEL $label$206
	$19 = ((int_32)int_32(($27 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$200 }
	$17 = [10]
	
.LOOP $label$209:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$209 }
	
.LABEL $label$200
	$17 = ($22 + [4])
	$15 = ( $17 ? $15 : ((uint_32)$15 > (uint_32)$17) )
	
.LABEL $label$197
	$22 = ([0] - $19)
	
.LOOP $label$212:
	$16 = $15
	if ( ((uint_32)$16 <= (uint_32)$18) ){ goto $label$211 }
	$15 = ($16 + [-4])
	if ( (*($15) == 0) ){ goto $label$212 }
	$24 = [1]
	if ( $23 ){ goto $label$210 }
	goto $label$162 
	
.LABEL $label$211
	$24 = [0]
	if ( ($23 == 0) ){ goto $label$162 }
	
.LABEL $label$210
	$15 = ($26 + ($26 == 0))
	if ( ((int_32)$15 <= (int_32)$19) ){ goto $label$170 }
	if ( ((int_32)$19 < (int_32)[-4]) ){ goto $label$170 }
	$28 = ($28 + [-1])
	$26 = (($15 + [-1]) - $19)
	$23 = ($21 & [8])
	if ( ($23 == 0) ){ goto $label$169 }
	goto $label$161 
	
.LABEL $label$172
	CALL __addtf3(($5 + [192]), $29, $30, $35, $34)
	CALL __subtf3(($5 + [176]), *($5 + [192]), *((($5 + [192]) + [8])), $35, $34)
	$30 = *((($5 + [176]) + [8]))
	$29 = *($5 + [176])
	
.LABEL $label$171
	$19 = $10
	$15 = int_32($23 >> [31])
	$23 = *($5 + [748])
	$15 = ((int_32)($23 + $15) ^ (int_32)$15)
	if ( ($15 == 0) ){ goto $label$214 }
	$18 = [0]
	
.LOOP $label$215:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [692]) + $18) + [11])) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$215 }
	$19 = ((($5 + [692]) + $18) + [12])
	if ( $18 ){ goto $label$213 }
	
.LABEL $label$214
	*(($19 = ($19 + [-1]))) = [48]
	
.LABEL $label$213
	$25 = ($31 | [2])
	*(($24 = ($19 + [-2]))) = ($28 + [15])
	*(($19 + [-1])) = ( [45] ? [43] : ((int_32)$23 < (int_32)[0]) )
	if ( ($21 & [8]) ){ goto $label$216 }
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$168 }
	$15 = ($5 + [704])
	
.LOOP $label$217:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [80]), $18)
	CALL __subtf3(($5 + [64]), $29, $30, *($5 + [80]), *((($5 + [80]) + [8])))
	CALL __multf3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [10928])) | $22)
	$30 = *((($5 + [48]) + [8]))
	$29 = *($5 + [48])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$218 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$218
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$217 }
	goto $label$167 
	
.LABEL $label$216
	$15 = ($5 + [704])
	
.LOOP $label$219:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [128]), $18)
	CALL __subtf3(($5 + [112]), $29, $30, *($5 + [128]), *((($5 + [128]) + [8])))
	CALL __multf3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [10928])) | $22)
	$30 = *((($5 + [96]) + [8]))
	$29 = *($5 + [96])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$220 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$220
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$219 }
	goto $label$167 
	
.LABEL $label$170
	$26 = ($15 + [-1])
	$28 = ($28 + [-2])
	$23 = ($21 & [8])
	if ( $23 ){ goto $label$161 }
	
.LABEL $label$169
	$15 = [9]
	if ( ($24 == 0) ){ goto $label$221 }
	$23 = *(($16 + [-4]))
	if ( ($23 == 0) ){ goto $label$221 }
	$15 = [0]
	if ( ((uint_32)$23 % (uint_32)[10]) ){ goto $label$221 }
	$17 = [10]
	$15 = [0]
	
.LOOP $label$222:
	$15 = ($15 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( (((uint_32)$23 % (uint_32)$17) == 0) ){ goto $label$222 }
	
.LABEL $label$221
	$17 = (((int_32)int_32(($16 - $27) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($28 | [32]) != (int_32)[102]) ){ goto $label$166 }
	$23 = [0]
	$15 = ($17 - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$26 = ( $26 ? $15 : ((int_32)$26 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$168
	$18 = ($5 + [704])
	
.LOOP $label$223:
	$19 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [32]), $19)
	CALL __subtf3(($5 + [16]), $29, $30, *($5 + [32]), *((($5 + [32]) + [8])))
	CALL __multf3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($15 = $18)) = (*(($19 + [10928])) | $22)
	$30 = *(($5 + [8]))
	$29 = *($5)
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$224 }
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$224 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$224
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$223 }
	
.LABEL $label$167
	$15 = [-1]
	$22 = ($10 - $24)
	if ( ((int_32)(([2147483645] - $25) - $22) < (int_32)$16) ){ goto $label$5 }
	$23 = ($18 - ($5 + [704]))
	$28 = ( ( ($16 + [2]) ? $23 : ((int_32)($8 + $18) < (int_32)$16) ) ? $23 : $16 )
	$16 = (($22 + $25) + $28)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$163 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$163 }
	$15 = ($27 <= [256])
	$27 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $27 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$165 }
	$15 = ($18 == 0)
	$18 = $27
	
.LOOP $label$225:
	if ( (($15 & [1]) == 0) ){ goto $label$226 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$226
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$225 }
	if ( $17 ){ goto $label$163 }
	$27 = ($27 & [255])
	goto $label$164 
	
.LABEL $label$166
	$23 = [0]
	$15 = (($17 + $19) - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$26 = ( $26 ? $15 : ((int_32)$26 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$165
	if ( $18 ){ goto $label$163 }
	
.LABEL $label$164
	CALL $27(($5 + [432]), $27, $0)
	
.LABEL $label$163
	if ( (*($0) & [32]) ){ goto $label$227 }
	CALL $27($26, $25, $0)
	
.LABEL $label$227
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$228 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$228 }
	$15 = ($25 <= [256])
	$25 = ($20 - $16)
	CALL memset(($5 + [432]), [48], ( $25 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$230 }
	$15 = ($18 == 0)
	$18 = $25
	
.LOOP $label$231:
	if ( (($15 & [1]) == 0) ){ goto $label$232 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$232
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$231 }
	if ( $17 ){ goto $label$228 }
	$25 = ($25 & [255])
	goto $label$229 
	
.LABEL $label$230
	if ( $18 ){ goto $label$228 }
	
.LABEL $label$229
	CALL $27(($5 + [432]), $25, $0)
	
.LABEL $label$228
	if ( (*($0) & [32]) ){ goto $label$233 }
	CALL $27(($5 + [704]), $23, $0)
	
.LABEL $label$233
	$23 = ($28 - $23)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$234 }
	$15 = ($23 <= [256])
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$236 }
	$15 = ($18 == 0)
	$18 = $23
	
.LOOP $label$237:
	if ( (($15 & [1]) == 0) ){ goto $label$238 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$238
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$237 }
	if ( $17 ){ goto $label$234 }
	$23 = ($23 & [255])
	goto $label$235 
	
.LABEL $label$236
	if ( $18 ){ goto $label$234 }
	
.LABEL $label$235
	CALL $27(($5 + [432]), $23, $0)
	
.LABEL $label$234
	if ( (*($0) & [32]) ){ goto $label$239 }
	CALL $27($24, $22, $0)
	
.LABEL $label$239
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$240 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$240 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$242 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$243:
	if ( (($15 & [1]) == 0) ){ goto $label$244 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$244
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$243 }
	if ( $17 ){ goto $label$240 }
	$22 = ($22 & [255])
	goto $label$241 
	
.LABEL $label$242
	if ( $18 ){ goto $label$240 }
	
.LABEL $label$241
	CALL $27(($5 + [432]), $22, $0)
	
.LABEL $label$240
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$162
	$23 = ($21 & [8])
	
.LABEL $label$161
	$15 = [-1]
	$25 = ($26 | $23)
	if ( ((int_32)$26 > (int_32)( [2147483645] ? [2147483646] : $25 )) ){ goto $label$5 }
	$36 = (($26 + ((int_32)$25 != (int_32)[0])) + [1])
	$37 = ((int_32)($28 | [32]) != (int_32)[102])
	if ( $37 ){ goto $label$246 }
	if ( ((int_32)$19 > (int_32)([2147483647] - $36)) ){ goto $label$5 }
	$19 = ( $19 ? [0] : ((int_32)$19 > (int_32)[0]) )
	goto $label$245 
	
.LABEL $label$246
	$17 = $10
	$38 = ((int_32)$19 < (int_32)[0])
	$15 = ( $22 ? $19 : $38 )
	if ( ($15 == 0) ){ goto $label$247 }
	
.LOOP $label$248:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$248 }
	
.LABEL $label$247
	if ( ((int_32)($10 - $17) > (int_32)[1]) ){ goto $label$249 }
	$15 = ($17 + [-1])
	
.LOOP $label$250:
	*($15) = [48]
	$19 = ($10 - $15)
	$17 = ($15 + [-1])
	$15 = $17
	if ( ((int_32)$19 < (int_32)[2]) ){ goto $label$250 }
	$17 = ($17 + [1])
	
.LABEL $label$249
	*(($33 = ($17 + [-2]))) = $28
	$15 = [-1]
	*(($17 + [-1])) = ( [45] ? [43] : $38 )
	$19 = ($10 - $33)
	if ( ((int_32)$19 > (int_32)([2147483647] - $36)) ){ goto $label$5 }
	
.LABEL $label$245
	$15 = [-1]
	$19 = ($19 + $36)
	if ( ((int_32)$19 > (int_32)((int_32)$31 ^ (int_32)[2147483647])) ){ goto $label$5 }
	$28 = ($19 + $31)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$251 }
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$251 }
	$15 = ($36 <= [256])
	$36 = ($20 - $28)
	CALL memset(($5 + [432]), [32], ( $36 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$253 }
	$15 = ($19 == 0)
	$19 = $36
	
.LOOP $label$254:
	if ( (($15 & [1]) == 0) ){ goto $label$255 }
	CALL $27(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$255
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$254 }
	if ( $22 ){ goto $label$251 }
	$36 = ($36 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $19 ){ goto $label$251 }
	
.LABEL $label$252
	CALL $27(($5 + [432]), $36, $0)
	
.LABEL $label$251
	if ( (*($0) & [32]) ){ goto $label$256 }
	CALL $27($32, $31, $0)
	
.LABEL $label$256
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$257 }
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$257 }
	$15 = ($31 <= [256])
	$31 = ($20 - $28)
	CALL memset(($5 + [432]), [48], ( $31 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$259 }
	$15 = ($19 == 0)
	$19 = $31
	
.LOOP $label$260:
	if ( (($15 & [1]) == 0) ){ goto $label$261 }
	CALL $27(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$261
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$260 }
	if ( $22 ){ goto $label$257 }
	$31 = ($31 & [255])
	goto $label$258 
	
.LABEL $label$259
	if ( $19 ){ goto $label$257 }
	
.LABEL $label$258
	CALL $27(($5 + [432]), $31, $0)
	
.LABEL $label$257
	if ( $37 ){ goto $label$272 }
	$23 = ( $27 ? $18 : ((uint_32)$18 > (uint_32)$27) )
	$22 = $23
	
.LOOP $label$273:
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$275 }
	$18 = [0]
	
.LOOP $label$276:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($6 + $18)) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$276 }
	goto $label$274 
	
.LABEL $label$275
	$18 = [0]
	
.LABEL $label$274
	$15 = ($7 + $18)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$280 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$279 }
	
.LOOP $label$281:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$281 }
	$15 = ($5 + [704])
	if ( ((*($0) & [32]) == 0) ){ goto $label$278 }
	goto $label$277 
	
.LABEL $label$280
	if ( $18 ){ goto $label$279 }
	*(($15 = ($15 + [-1]))) = [48]
	
.LABEL $label$279
	if ( (*($0) & [32]) ){ goto $label$277 }
	
.LABEL $label$278
	CALL $27($15, ($7 - $15), $0)
	
.LABEL $label$277
	$22 = ($22 + [4])
	if ( ((uint_32)$22 <= (uint_32)$27) ){ goto $label$273 }
	if ( ($25 == 0) ){ goto $label$282 }
	if ( (*($0) & [32]) ){ goto $label$282 }
	CALL $27([11049], [1], $0)
	
.LABEL $label$282
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$271 }
	if ( ((uint_32)$22 >= (uint_32)$16) ){ goto $label$270 }
	
.LOOP $label$283:
	$15 = $7
	$18 = *($22)
	if ( ($18 == 0) ){ goto $label$285 }
	$15 = $7
	
.LOOP $label$286:
	$19 = ((uint_32)$18 / (uint_32)[10])
	*(($15 = ($15 + [-1]))) = (($18 - ((int_32)$19 * (int_32)[10])) | [48])
	$17 = ((uint_32)$18 > (uint_32)[9])
	$18 = $19
	if ( $17 ){ goto $label$286 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$284 }
	
.LABEL $label$285
	
.LOOP $label$287:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$287 }
	
.LABEL $label$284
	if ( (*($0) & [32]) ){ goto $label$288 }
	CALL $27($15, ( $26 ? [9] : ((int_32)$26 < (int_32)[9]) ), $0)
	
.LABEL $label$288
	$15 = ($26 + [-9])
	if ( ((int_32)$26 < (int_32)[10]) ){ goto $label$269 }
	$26 = $15
	$22 = ($22 + [4])
	if ( ($22 <= $16) ){ goto $label$283 }
	goto $label$269 
	
.LABEL $label$272
	if ( ((int_32)$26 <= (int_32)[-1]) ){ goto $label$265 }
	$25 = ( $16 ? ($18 + [4]) : $24 )
	if ( ($23 == 0) ){ goto $label$267 }
	$22 = $18
	
.LOOP $label$289:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$291 }
	$19 = [0]
	
.LOOP $label$292:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$292 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$290 }
	
.LABEL $label$291
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$290
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$294 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$293 }
	
.LOOP $label$295:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$295 }
	goto $label$293 
	
.LABEL $label$294
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$296 }
	CALL $27($17, [1], $0)
	$15 = *($0)
	
.LABEL $label$296
	$17 = ($17 + [1])
	if ( ($15 & [32]) ){ goto $label$293 }
	CALL $27([11049], [1], $0)
	
.LABEL $label$293
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$297 }
	CALL $27($17, ( $15 ? $26 : ((int_32)$26 > (int_32)$15) ), $0)
	
.LABEL $label$297
	$26 = ($26 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$266 }
	if ( ((int_32)$26 > (int_32)[-1]) ){ goto $label$289 }
	goto $label$266 
	
.LABEL $label$271
	$15 = $26
	if ( ((int_32)$15 >= (int_32)[1]) ){ goto $label$268 }
	goto $label$264 
	
.LABEL $label$270
	$15 = $26
	
.LABEL $label$269
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$264 }
	
.LABEL $label$268
	$18 = ($15 <= [256])
	CALL memset(($5 + [432]), [48], ( $15 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$299 }
	$18 = ($19 == 0)
	$19 = $15
	
.LOOP $label$300:
	if ( (($18 & [1]) == 0) ){ goto $label$301 }
	CALL $27(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$301
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$300 }
	if ( $16 ){ goto $label$264 }
	$15 = ($15 & [255])
	goto $label$298 
	
.LABEL $label$299
	if ( $19 ){ goto $label$264 }
	
.LABEL $label$298
	CALL $27(($5 + [432]), $15, $0)
	if ( ((int_32)$21 == (int_32)[8192]) ){ goto $label$263 }
	goto $label$262 
	
.LABEL $label$267
	$22 = $18
	
.LOOP $label$302:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$304 }
	$19 = [0]
	
.LOOP $label$305:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$305 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$303 }
	
.LABEL $label$304
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$303
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$307 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$306 }
	
.LOOP $label$308:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$308 }
	goto $label$306 
	
.LABEL $label$307
	if ( (*($0) & [32]) ){ goto $label$309 }
	CALL $27($17, [1], $0)
	
.LABEL $label$309
	$17 = ($17 + [1])
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$306 }
	if ( (*($0) & [32]) ){ goto $label$306 }
	CALL $27([11049], [1], $0)
	
.LABEL $label$306
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$310 }
	CALL $27($17, ( $15 ? $26 : ((int_32)$26 > (int_32)$15) ), $0)
	
.LABEL $label$310
	$26 = ($26 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$266 }
	if ( ((int_32)$26 > (int_32)[-1]) ){ goto $label$302 }
	
.LABEL $label$266
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$265 }
	$18 = ($26 <= [256])
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$19 = *($0)
	$15 = ($19 & [32])
	if ( $18 ){ goto $label$312 }
	$15 = ($15 == 0)
	$18 = $26
	
.LOOP $label$313:
	if ( (($15 & [1]) == 0) ){ goto $label$314 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$314
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$313 }
	if ( $17 ){ goto $label$265 }
	$26 = ($26 & [255])
	goto $label$311 
	
.LABEL $label$312
	if ( $15 ){ goto $label$265 }
	
.LABEL $label$311
	CALL $27(($5 + [432]), $26, $0)
	
.LABEL $label$265
	if ( (*($0) & [32]) ){ goto $label$264 }
	CALL $27($33, ($10 - $33), $0)
	
.LABEL $label$264
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$262 }
	
.LABEL $label$263
	if ( ((int_32)$20 <= (int_32)$28) ){ goto $label$262 }
	$15 = ($16 <= [256])
	$16 = ($20 - $28)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$316 }
	$15 = ($18 == 0)
	$18 = $16
	
.LOOP $label$317:
	if ( (($15 & [1]) == 0) ){ goto $label$318 }
	CALL $27(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$318
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$317 }
	if ( $17 ){ goto $label$262 }
	$16 = ($16 & [255])
	goto $label$315 
	
.LABEL $label$316
	if ( $18 ){ goto $label$262 }
	
.LABEL $label$315
	CALL $27(($5 + [432]), $16, $0)
	
.LABEL $label$262
	$15 = ( $20 ? $28 : ((int_32)$20 > (int_32)$28) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	*(CALL $6()) = [75]
	
.LABEL $label$2
	$14 = [-1]
	
.LABEL $label$1
	$global$0 = ($5 + [8128])
	$15
	$18
	return $14
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_64 .FUNC $19 (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $247(*($1), *($0 + [8]))
	CALL $247(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $336 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $46(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $46(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

int_32 .FUNC $337 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$2 }
	$6 = ($1 + [16])
	$10 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($1 + [16])
	$7 = ( *($1 + [20]) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$3 }
	$8 = CALL $46(( *($4 + [8]) ? ($4 + [1]) : $10 ), ( *($1 + [24]) ? ($6 + [1]) : $8 ), $11)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$9 }
	$9 = *($1)
	if ( ($9 == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = $9
	$9 = *($7 + [4])
	if ( $9 ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$7 = $1
	if ( *($1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = $1
	
.LOOP $label$11:
	$7 = *($9 + [8])
	$3 = ((int_32)*($7) == (int_32)$9)
	$9 = $7
	if ( $3 ){ goto $label$11 }
	
.LABEL $label$7
	$5 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *(($7 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($9 & [1])
	$9 = *($4)
	$9 = ( *($4 + [4]) ? uint_32($9 >> [1]) : $6 )
	$8 = ( $9 ? $3 : ($9 <= $3) )
	if ( ($8 == 0) ){ goto $label$13 }
	$6 = CALL $46(( *(($7 + [24])) ? (($7 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$13 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$12 }
	goto $label$4 
	
.LABEL $label$13
	if ( ((uint_32)$3 >= (uint_32)$9) ){ goto $label$4 }
	
.LABEL $label$12
	if ( (*($1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2) = $7
	return ($7 + [4])
	
.LABEL $label$5
	*($2) = $1
	return $1
	
.LABEL $label$4
	return CALL $174($0, $2, $4)
	
.LABEL $label$1
	$10 = ($9 & [1])
	$9 = *(($1 + [16]))
	$9 = ( *(($1 + [20])) ? uint_32($9 >> [1]) : $10 )
	$8 = ($7 & [1])
	$7 = *($4)
	$7 = ( *(($4 + [4])) ? uint_32($7 >> [1]) : $8 )
	$11 = ( $7 ? $9 : ($7 <= $9) )
	if ( ($11 == 0) ){ goto $label$16 }
	$6 = CALL $46(( *($1 + [24]) ? ($6 + [1]) : $10 ), ( *($4 + [8]) ? ($4 + [1]) : $8 ), $11)
	if ( ($6 == 0) ){ goto $label$16 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((uint_32)$9 >= (uint_32)$7) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = $7
	$7 = *($9)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$9 = *($1 + [8])
	if ( ((int_32)*($9) == (int_32)$1) ){ goto $label$17 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$7 = *($3)
	$3 = ($7 + [8])
	$9 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($9)) ){ goto $label$20 }
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$22 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($7 & [1])
	$7 = *($9 + [16])
	$7 = ( *($9 + [20]) ? uint_32($7 >> [1]) : $6 )
	$8 = ( $7 ? $3 : ($7 <= $3) )
	if ( ($8 == 0) ){ goto $label$23 }
	$6 = CALL $46(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($9 + [24]) ? (($9 + [16]) + [1]) : $6 ), $8)
	if ( ($6 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = ($1 + [4])
	if ( (*($7) == 0) ){ goto $label$24 }
	*($2) = $9
	return $9
	
.LABEL $label$24
	*($2) = $1
	return $7
	
.LABEL $label$21
	return CALL $174($0, $2, $4)
	
.LABEL $label$14
	*($2) = $1
	*($3) = $1
	return $3
}

void .FUNC $334 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [44])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [48])) = $2
	CALL $11($2)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $11($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $335 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = CALL $9([40])
	*($0 + [4]) = ($1 + [4])
	*($0) = $3
	*(($0 + [8])) = [0]
	*($3 + [16 align=4]) = (int_64)0
	*(($3 + [24])) = [0]
	$4 = *($2)
	$1 = CALL $2($4)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*(($3 + [16])) = ($1 << [1])
	$5 = ($3 + [17])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $9($6)
	*(($3 + [16])) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	
.LABEL $label$3
	CALL memcpy($5, $4, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	*(($0 + [8])) = [1]
	$1 = ($2 + [12])
	*(($3 + [36])) = *($1)
	*($3 + [28 align=4]) = *($2 + [4 align=4])
	*($2 + [4 align=4]) = (int_64)0
	*($1) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $52(($3 + [16]))
}

void .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $307(*($1), ($0 + [24]))
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $255(*($1), *($0 + [12]))
}

int_32 .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $331 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$1 = ($1 + [-24])
	*($3) = $1
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$1 = *($4 + [56])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($4 + [60])) = $1
	CALL $11($1)
	
.LABEL $label$4
	$1 = *($4 + [44])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($4 + [48])) = $1
	CALL $11($1)
	
.LABEL $label$5
	$5 = *($4 + [28])
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [32])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*(($7 + [-4])))
	
.LABEL $label$10
	$7 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($4 + [28]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $11($1)
	
.LABEL $label$6
	CALL $11($4)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5335794350174113792, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [148]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $106($7, CALL $fimport$26(*($7), *($7 + [8]), (int_64)-5335794350174113792, $6))
	if ( ((int_32)*($4 + [148]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$2
	*($4 + [156]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = [0]
	if ( ((int_32)*($0) != (int_32)*($1)) ){ goto $label$1 }
	if ( ((int_32)*($0 + [4]) != (int_32)*($1 + [4])) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [5])) != (int_32)*(($1 + [5]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [6])) != (int_32)*(($1 + [6]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [7])) != (int_32)*(($1 + [7]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [8])) != (int_32)*(($1 + [8]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [9])) != (int_32)*(($1 + [9]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [10])) != (int_32)*(($1 + [10]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [11])) != (int_32)*(($1 + [11]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [12])) != (int_32)*(($1 + [12]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [13])) != (int_32)*(($1 + [13]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [14])) != (int_32)*(($1 + [14]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [15])) != (int_32)*(($1 + [15]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [16])) != (int_32)*(($1 + [16]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [17])) != (int_32)*(($1 + [17]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [18])) != (int_32)*(($1 + [18]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [19])) != (int_32)*(($1 + [19]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [20])) != (int_32)*(($1 + [20]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [21])) != (int_32)*(($1 + [21]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [22])) != (int_32)*(($1 + [22]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [23])) != (int_32)*(($1 + [23]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [24])) != (int_32)*(($1 + [24]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [25])) != (int_32)*(($1 + [25]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [26])) != (int_32)*(($1 + [26]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [27])) != (int_32)*(($1 + [27]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [28])) != (int_32)*(($1 + [28]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [29])) != (int_32)*(($1 + [29]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [30])) != (int_32)*(($1 + [30]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [31])) != (int_32)*(($1 + [31]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [32])) != (int_32)*(($1 + [32]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [33])) != (int_32)*(($1 + [33]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [34])) != (int_32)*(($1 + [34]))) ){ goto $label$1 }
	if ( ((int_32)*(($0 + [35])) != (int_32)*(($1 + [35]))) ){ goto $label$1 }
	$2 = ((int_32)*(($0 + [36])) == (int_32)*(($1 + [36])))
	
.LABEL $label$1
	return $2
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$6 = CALL $9($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, ( $7 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $63($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $52($0)
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$7 = ($global$0 - [272])
	$global$0 = $7
	*($7 + [216]) = $3
	CALL require_auth($3)
	*(($7 + [208])) = [0]
	*($7 + [184]) = $2
	*($7 + [192]) = (int_64)-1
	*($7 + [200]) = (int_64)0
	*($7 + [212]) = [0]
	*($7 + [176]) = *($0)
	*($7 + [168]) = ($7 + [176])
	if ( (*($1) & [1]) ){ goto $label$4 }
	$8 = ($1 + [1])
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($1 + [8])
	$1 = *($8)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$8 = ($8 + [1])
	$3 = (int_64)0
	
.LOOP $label$5:
	$3 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) + (int_64)((int_64)$3 * (int_64)10)) + (int_64)-48)
	$1 = *($8)
	$8 = ($8 + [1])
	if ( $1 ){ goto $label$5 }
	
.LABEL $label$1
	*($7 + [160]) = $3
	CALL $116(($7 + [152]), ($7 + [168]), ($7 + [160]))
	$1 = *($7 + [156])
	if ( ($1 == 0) ){ goto $label$7 }
	$9 = ($5 + [1])
	$10 = *($4)
	$11 = *($4 + [8])
	$12 = ($5 + [4])
	$13 = ($5 + [8])
	$8 = [0]
	
.LOOP $label$9:
	if ( ((int_64)*($1 + [24]) != (int_64)*($7 + [160])) ){ goto $label$8 }
	$3 = CALL current_time()
	if ( ((uint_32)(*($1 + [136]) + *($1 + [120])) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000))) ){ goto $label$10 }
	if ( ((int_32)*($1 + [124]) == (int_32)[1]) ){ goto $label$10 }
	if ( ((int_64)*(($1 + [40])) == (int_64)$11) ){ goto $label$11 }
	CALL eosio_assert([0], [14117])
	
.LABEL $label$11
	if ( ((int_64)*($1 + [32]) != (int_64)$10) ){ goto $label$10 }
	$4 = *($5)
	if ( ($4 & [1]) ){ goto $label$13 }
	$4 = uint_32($4 >> [1])
	$14 = $9
	goto $label$12 
	
.LABEL $label$13
	$4 = *($12)
	$14 = *($13)
	
.LABEL $label$12
	CALL $69(($7 + [224]), $14, $4)
	CALL $70(($7 + [96]), ($7 + [224]), ($1 + [48]))
	$1 = CALL $117($6, ($7 + [96]))
	if ( $1 ){ goto $label$6 }
	$8 = ($8 | $1)
	
.LABEL $label$10
	CALL $118(($7 + [152]))
	$1 = *($7 + [156])
	if ( $1 ){ goto $label$9 }
	if ( (($8 & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($8 & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12253])
	
.LABEL $label$6
	$3 = *($0)
	$1 = *($7 + [156])
	*($7 + [96]) = ($7 + [216])
	CALL $119(($7 + [176]), $1, $3, ($7 + [96]))
	CALL $107(($7 + [96]), ($0 + [216]))
	$3 = *($0)
	*($7 + [56]) = [12241]
	$10 = *($7 + [112])
	*($7 + [60]) = CALL $2([12241])
	*($7) = *($7 + [56])
	$1 = CALL $89(($7 + [64]), $7)
	*($7 + [72]) = $3
	$3 = *($1)
	*(($1 = CALL $9([16]))) = $10
	*($1 + [8]) = $3
	$8 = ($1 + [16])
	*((($7 + [72]) + [16])) = $8
	*((($7 + [72]) + [12])) = $8
	*($7 + [80]) = $1
	$4 = (($7 + [40]) | [4])
	*($7 + [40]) = $4
	*($7 + [44 align=4]) = (int_64)0
	CALL $68(($7 + [24]), *(*($7 + [156])))
	$1 = ($7 + [32])
	*(($8 = (($7 + [224]) + [12]))) = *($1)
	*($1) = [0]
	*($7 + [224]) = [12248]
	*($7 + [228 align=4]) = *($7 + [24])
	*($7 + [24]) = (int_64)0
	CALL $108(($7 + [264]), ($7 + [40]), ($7 + [224]))
	if ( ((*($7 + [228]) & [1]) == 0) ){ goto $label$14 }
	CALL $11(*($8))
	
.LABEL $label$14
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$15 }
	CALL $11(*(($7 + [32])))
	
.LABEL $label$15
	$1 = *($7 + [156])
	$14 = (($7 + [8]) | [4])
	*($7 + [8]) = $14
	*($7 + [12 align=4]) = (int_64)0
	$6 = ($1 + [32])
	$9 = (($7 + [96]) + [16])
	$8 = *($7 + [40])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = $8
	$1 = ($5 + [16])
	CALL $109(($7 + [8]), $14, $1, $1)
	$1 = *($5 + [4])
	if ( ($1 == 0) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = $1
	$1 = *($8)
	if ( $1 ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$8 = *($5 + [8])
	if ( ((int_32)*($8) == (int_32)$5) ){ goto $label$18 }
	$5 = ($5 + [8])
	
.LOOP $label$21:
	$1 = *($5)
	$5 = ($1 + [8])
	$8 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($8)) ){ goto $label$21 }
	
.LABEL $label$18
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$17 }
	
.LABEL $label$16
	CALL $110(($7 + [24]), $0, ($7 + [8]))
	CALL $111(($7 + [224]), ($7 + [72]), $9, ($7 + [216]), $6, ($7 + [24]))
	CALL $97(($7 + [224]))
	$1 = *($7 + [252])
	if ( ($1 == 0) ){ goto $label$22 }
	*(($7 + [256])) = $1
	CALL $11($1)
	
.LABEL $label$22
	$1 = *($7 + [240])
	if ( ($1 == 0) ){ goto $label$23 }
	*(($7 + [244])) = $1
	CALL $11($1)
	
.LABEL $label$23
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$24 }
	CALL $11(*($7 + [32]))
	
.LABEL $label$24
	CALL $88(($7 + [8]), *($7 + [12]))
	CALL $120($0, $2, *(*($7 + [156])), [86400])
	CALL $88(($7 + [40]), *($7 + [44]))
	$1 = *($7 + [80])
	if ( ($1 == 0) ){ goto $label$25 }
	*(($7 + [84])) = $1
	CALL $11($1)
	
.LABEL $label$25
	$1 = *($7 + [140])
	if ( ($1 == 0) ){ goto $label$26 }
	*(($7 + [144])) = $1
	CALL $11($1)
	
.LABEL $label$26
	$5 = *($7 + [200])
	if ( ($5 == 0) ){ goto $label$27 }
	$4 = ($7 + [204])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = ($1 + [-24])
	$8 = *($1)
	*($1) = [0]
	if ( ($8 == 0) ){ goto $label$31 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$32 }
	CALL $11(*(($8 + [16])))
	
.LABEL $label$32
	CALL $11($8)
	
.LABEL $label$31
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$30 }
	$1 = *(($7 + [200]))
	goto $label$28 
	
.LABEL $label$29
	$1 = $5
	
.LABEL $label$28
	*($4) = $5
	CALL $11($1)
	
.LABEL $label$27
	$global$0 = ($7 + [272])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [148]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [15937])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [15982])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [16032])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [16])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [8]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [16])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [152]))
	$9 = *($1 + [156])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5335794350174113792, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [14094])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([72])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [36 align=4]) = (int_64)0
	*($5 + [44 align=4]) = (int_64)0
	*($5 + [52]) = [0]
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [33])
	*($3 + [64]) = ($5 + [36])
	*($3 + [68]) = ($5 + [40])
	*($3 + [72]) = ($5 + [44])
	CALL $271(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)4982871457202700288
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)4982871457202700288
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $334(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [44])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [48])) = $4
	CALL $11($4)
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL $2([14810])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$5 = ($0 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0) = ($6 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($5, [14810], $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	$4 = CALL $2([14812])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [48]) = ($4 << [1])
	$5 = (($3 + [48]) | [1])
	if ( $4 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $4
	
.LABEL $label$7
	CALL memcpy($5, [14812], $4)
	
.LABEL $label$6
	*(($5 + $4)) = [0]
	$7 = ($2 + [4])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$9 }
	$6 = (($3 + [32]) | [1])
	$8 = (($3 + [48]) | [1])
	
.LOOP $label$10:
	$2 = $5
	CALL $114(($3 + [16]), ($3 + [48]), ($2 + [16]))
	$5 = *($3 + [48])
	$10 = ($5 & [1])
	$9 = (($3 + [48]) + [8])
	$5 = CALL $63(($3 + [16]), ( *($9) ? $8 : $10 ), ( *($3 + [52]) ? uint_32($5 >> [1]) : $10 ))
	$10 = ($5 + [8])
	*(($4 = (($3 + [32]) + [8]))) = *($10)
	*($3 + [32]) = *($5)
	*($5) = (int_64)0
	*($10) = [0]
	$5 = *($3 + [32])
	$10 = ($5 & [1])
	CALL $63($0, ( *($4) ? $6 : $10 ), ( *($3 + [36]) ? uint_32($5 >> [1]) : $10 ))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*($4))
	
.LABEL $label$11
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*((($3 + [16]) + [8])))
	
.LABEL $label$12
	CALL $61($0, [14814])
	CALL $114($3, ($3 + [48]), ($2 + [28]))
	$5 = *($3 + [48])
	$9 = ($5 & [1])
	$5 = CALL $63($3, ( *($9) ? $8 : $9 ), ( *($3 + [52]) ? uint_32($5 >> [1]) : $9 ))
	$9 = ($5 + [8])
	*(($10 = (($3 + [16]) + [8]))) = *($9)
	*($3 + [16]) = *($5)
	*($5) = (int_64)0
	*($9) = [0]
	$5 = CALL $61(($3 + [16]), [14816])
	$9 = ($5 + [8])
	*($4) = *($9)
	*($3 + [32]) = *($5)
	*($5) = (int_64)0
	*($9) = [0]
	$5 = *($3 + [32])
	$9 = ($5 & [1])
	CALL $63($0, ( *($4) ? $6 : $9 ), ( *($3 + [36]) ? uint_32($5 >> [1]) : $9 ))
	if ( (*($3 + [32]) & [1]) ){ goto $label$20 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $11(*($4))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $11(*($10))
	if ( ((*($3) & [1]) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( (*($3) & [1]) ){ goto $label$16 }
	
.LABEL $label$17
	$4 = *($2 + [4])
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $11(*(($3 + [8])))
	$4 = *($2 + [4])
	if ( ($4 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	
.LOOP $label$21:
	$5 = $4
	$4 = *($5)
	if ( $4 ){ goto $label$21 }
	goto $label$13 
	
.LABEL $label$14
	$5 = *($2 + [8])
	if ( ((int_32)*($5) == (int_32)$2) ){ goto $label$13 }
	$2 = ($2 + [8])
	
.LOOP $label$22:
	$4 = *($2)
	$2 = ($4 + [8])
	$5 = *($4 + [8])
	if ( ((int_32)$4 != (int_32)*($5)) ){ goto $label$22 }
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$24 }
	$4 = (uint_32($4 >> [1]) + [-1])
	*($0) = ($4 << [1])
	$4 = (($0 + $4) + [1])
	goto $label$23 
	
.LABEL $label$24
	$4 = (*($0 + [4]) + [-1])
	*($0 + [4]) = $4
	$4 = (*($0 + [8]) + $4)
	
.LABEL $label$23
	*($4) = [0]
	CALL $62($0, [125])
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$25 }
	CALL $11(*($3 + [56]))
	
.LABEL $label$25
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$5
	CALL $52(($3 + [48]))
	
.LABEL $label$1
	CALL $52($0)
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = [0]
	$8 = [0]
	$9 = [0]
	$10 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($10 == 0) ){ goto $label$2 }
	$7 = int_32($10 >> [4])
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$1 }
	$9 = CALL $9($10)
	$7 = ($9 + ($7 << [4]))
	*((($6 + [48]) + [8])) = $7
	*($6 + [48]) = $9
	*($6 + [52]) = $9
	$10 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $10)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($9, $10, $8)
	$8 = ($9 + $8)
	*($6 + [52]) = $8
	goto $label$2 
	
.LABEL $label$3
	$8 = $9
	
.LABEL $label$2
	*($0) = *($1)
	*($0 + [8]) = (int_64)-3617168760277827584
	$1 = ($5 + [8])
	$10 = *($1)
	$11 = *(($4 + [8]))
	$12 = *($4)
	*($1) = [0]
	$13 = *($5)
	$14 = *($3)
	$15 = *($2)
	*($5) = (int_64)0
	*(($6 + [24])) = $11
	*(($6 + [40])) = $10
	*($6) = $15
	*($6 + [8]) = $14
	*($6 + [16]) = $12
	*($6 + [32]) = $13
	*($0 + [16]) = $9
	*(($0 + [20])) = $8
	*(($0 + [24])) = $7
	*((($6 + [48]) + [8])) = [0]
	*($6 + [52]) = [0]
	*($6 + [48]) = [0]
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$1 = *($6 + [32])
	$9 = ( *(($6 + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($9 + [32])
	$11 = (CASTING uint_64)(uint_32 $9)
	$9 = ($0 + [28])
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $95($9, $1)
	$9 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$5 
	
.LABEL $label$6
	$9 = [0]
	$1 = [0]
	
.LABEL $label$5
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $9
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = $6
	CALL $96(($6 + [88]), ($6 + [80]))
	if ( ((*(($6 + [32])) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($6 + [40])))
	
.LABEL $label$7
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$8 }
	*($6 + [52]) = $1
	CALL $11($1)
	
.LABEL $label$8
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($6 + [48]))
}

int_32 .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [156])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [16085])
	$2 = *(($0 + [4]))
	$3 = *($2 + [156])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-5335794350174113792, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [156]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [148]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [14043])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $106($7, CALL $fimport$26(*($7), *($7 + [8]), (int_64)-5335794350174113792, $6))
	if ( ((int_32)*($4 + [148]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$5
	*($4 + [156]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $119 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [148]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [14211])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [14257])
	
.LABEL $label$2
	*($1 + [124]) = [1]
	$6 = ($1 + [24])
	*($5 + [16]) = *($6)
	*($1 + [128]) = *(*($3))
	$7 = *($1)
	*($1 + [140]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [14308])
	
.LABEL $label$3
	$8 = ($1 + [124])
	$3 = *($1 + [8])
	$9 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [122])
	$10 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [8])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	$10 = *($1 + [48])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $3($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [24]) = $5
	*($5 + [36]) = $9
	*($5 + [40]) = $6
	*($5 + [56]) = $8
	*($5 + [32]) = $1
	*($5 + [44]) = ($1 + [32])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [120])
	*($5 + [60]) = ($1 + [128])
	*($5 + [64]) = ($1 + [136])
	*($5 + [68]) = ($1 + [140])
	*($5 + [72]) = ($1 + [144])
	CALL $121(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [152]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $4($4)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [32]) = *($6)
	if ( (CALL $46(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$10 }
	$3 = *($1 + [156])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5335794350174113792, ($5 + [24]), $7)
	*(($1 + [156])) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [32]))
	
.LABEL $label$10
	$global$0 = ($5 + [80])
}

void .FUNC $299 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [304]), $5, [8])
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy(($3 + [296]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [513]
	*($3 + [32]) = [15792]
	*($3 + [36]) = [15815]
	*($3 + [40]) = [15830]
	*($3 + [44]) = [15871]
	*($3 + [48]) = (int_64)72060901179523328
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [104])) = $0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [244])) = (int_64)0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [256]) = $0
	CALL $173($3, *($3 + [312]), *($3 + [304]), *($3 + [296]))
	CALL $246($3)
	$global$0 = ($3 + [320])
}

void .FUNC $298 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*($3 + [304]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [304]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy(($3 + [296]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [513]
	*($3 + [32]) = [15792]
	*($3 + [36]) = [15815]
	*($3 + [40]) = [15830]
	*($3 + [44]) = [15871]
	*($3 + [48]) = (int_64)72060901179523328
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [104])) = $0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [244])) = (int_64)0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [256]) = $0
	CALL $208($3, *($3 + [312]), *($3 + [304]), *($3 + [296]))
	CALL $246($3)
	$global$0 = ($3 + [320])
}

void .FUNC $295 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	*($3 + [376]) = ($2 + $4)
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	CALL $255(($3 + [368]), ($3 + [344]))
	*($3 + [336]) = (int_64)0
	$2 = *($3 + [372])
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [336]), $2, [8])
	*($3 + [372]) = (*($3 + [372]) + [8])
	*(($2 = (($3 + [24]) + [8]))) = *($4)
	*($3 + [24]) = *($3 + [368])
	$2 = *($2)
	*((($3 + [384]) + [8])) = $2
	*(($4 = (($3 + [400]) + [8]))) = $2
	$5 = *($3 + [24])
	*($3 + [400]) = $5
	*($3 + [384]) = $5
	$2 = *($4)
	*((($3 + [416]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [400])
	*($3 + [56]) = $1
	*($3 + [416]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [72]) = [15792]
	*($3 + [68]) = [513]
	*($3 + [76]) = [15815]
	*($3 + [80]) = [15830]
	*($3 + [84]) = [15871]
	*($3 + [88]) = (int_64)72060901179523328
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [324])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = [0]
	$0 = *($3 + [360])
	$2 = (*($3 + [348]) - *($3 + [344]))
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = int_32($2 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$7 }
	$2 = CALL $9($2)
	*(($3 + [16])) = ($2 + ($4 << [4]))
	*($3 + [8]) = $2
	*($3 + [12]) = $2
	$6 = *($3 + [344])
	$4 = (*($3 + [348]) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $6, $4)
	*($3 + [12]) = (*($3 + [12]) + $4)
	
.LABEL $label$8
	CALL $192(($3 + [40]), $0, ($3 + [8]), *($3 + [336]))
	$2 = *($3 + [8])
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [12]) = $2
	CALL $11($2)
	
.LABEL $label$9
	CALL $246(($3 + [40]))
	$2 = *($3 + [344])
	if ( ($2 == 0) ){ goto $label$10 }
	*($3 + [348]) = $2
	CALL $11($2)
	
.LABEL $label$10
	$global$0 = ($3 + [432])
	return (unreachable)
	
.LABEL $label$7
	CALL $44(($3 + [8]))
}

void .FUNC $294 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [372]) = $2
	*($3 + [368]) = $2
	*($3 + [376]) = ($2 + $4)
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [372]) = ($2 + [8])
	*($3 + [352]) = [0]
	*($3 + [344]) = (int_64)0
	CALL $255(($3 + [368]), ($3 + [344]))
	*($3 + [336]) = (int_64)0
	$2 = *($3 + [372])
	$4 = (($3 + [368]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [372])
	
.LABEL $label$6
	CALL memcpy(($3 + [336]), $2, [8])
	*($3 + [372]) = (*($3 + [372]) + [8])
	*(($2 = (($3 + [24]) + [8]))) = *($4)
	*($3 + [24]) = *($3 + [368])
	$2 = *($2)
	*((($3 + [384]) + [8])) = $2
	*(($4 = (($3 + [400]) + [8]))) = $2
	$5 = *($3 + [24])
	*($3 + [400]) = $5
	*($3 + [384]) = $5
	$2 = *($4)
	*((($3 + [416]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [400])
	*($3 + [56]) = $1
	*($3 + [416]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [72]) = [15792]
	*($3 + [68]) = [513]
	*($3 + [76]) = [15815]
	*($3 + [80]) = [15830]
	*($3 + [84]) = [15871]
	*($3 + [88]) = (int_64)72060901179523328
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [324])) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = [0]
	$0 = *($3 + [360])
	$2 = (*($3 + [348]) - *($3 + [344]))
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = int_32($2 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$7 }
	$2 = CALL $9($2)
	*(($3 + [16])) = ($2 + ($4 << [4]))
	*($3 + [8]) = $2
	*($3 + [12]) = $2
	$6 = *($3 + [344])
	$4 = (*($3 + [348]) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $6, $4)
	*($3 + [12]) = (*($3 + [12]) + $4)
	
.LABEL $label$8
	CALL $190(($3 + [40]), $0, ($3 + [8]), *($3 + [336]))
	$2 = *($3 + [8])
	if ( ($2 == 0) ){ goto $label$9 }
	*($3 + [12]) = $2
	CALL $11($2)
	
.LABEL $label$9
	CALL $246(($3 + [40]))
	$2 = *($3 + [344])
	if ( ($2 == 0) ){ goto $label$10 }
	*($3 + [348]) = $2
	CALL $11($2)
	
.LABEL $label$10
	$global$0 = ($3 + [432])
	return (unreachable)
	
.LABEL $label$7
	CALL $44(($3 + [8]))
}

void .FUNC $297 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [304]), $5, [8])
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy(($3 + [296]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [513]
	*($3 + [32]) = [15792]
	*($3 + [36]) = [15815]
	*($3 + [40]) = [15830]
	*($3 + [44]) = [15871]
	*($3 + [48]) = (int_64)72060901179523328
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [104])) = $0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [244])) = (int_64)0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [256]) = $0
	CALL $201($3, *($3 + [312]), *($3 + [304]), *($3 + [296]))
	CALL $246($3)
	$global$0 = ($3 + [320])
}

void .FUNC $296 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	$5 = ($2 + $4)
	*($3 + [424]) = $5
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [400]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [416]) + [8]))
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [392]) = (int_64)0
	*($3 + [384]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$7
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [420])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*((($3 + [384]) + [8])) = *($3 + [64])
	*($3 + [420]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $247(($3 + [416]), ($3 + [368]))
	*($3 + [360]) = (int_64)0
	$2 = *($3 + [420])
	if ( ((uint_32)(*((($3 + [416]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [420])
	
.LABEL $label$9
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [420]) = (*($3 + [420]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [416]) + [8]))
	*($3 + [48]) = *($3 + [416])
	$2 = *($2)
	*((($3 + [432]) + [8])) = $2
	*(($5 = (($3 + [448]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [448]) = $6
	*($3 + [432]) = $6
	$2 = *($5)
	*((($3 + [464]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [448])
	*($3 + [80]) = $1
	*($3 + [464]) = $1
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [96]) = [15792]
	*($3 + [92]) = [513]
	*($3 + [100]) = [15815]
	*($3 + [104]) = [15830]
	*($3 + [108]) = [15871]
	*($3 + [112]) = (int_64)72060901179523328
	*($3 + [120]) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [208])) = $0
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = [0]
	*($3 + [240]) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*(($3 + [348])) = (int_64)0
	*(($5 = (($3 + [32]) + [8]))) = *((($3 + [384]) + [8]))
	*($3 + [32]) = *($3 + [384])
	$0 = *($3 + [400])
	$1 = *($3 + [408])
	$2 = CALL $53(($3 + [16]), ($3 + [368]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $193(($3 + [64]), $1, $0, $3, $2, *($3 + [360]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$10
	CALL $246(($3 + [64]))
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($3 + [376])))
	
.LABEL $label$11
	$global$0 = ($3 + [480])
}

void .FUNC $291 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $247(($3 + [352]), ($3 + [328]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [352]) + [8]))
	*($3 + [16]) = *($3 + [352])
	$2 = *($2)
	*((($3 + [368]) + [8])) = $2
	*(($4 = (($3 + [384]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [384]) = $5
	*($3 + [368]) = $5
	$2 = *($4)
	*((($3 + [400]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [384])
	*($3 + [48]) = $1
	*($3 + [400]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*($3 + [64]) = [15792]
	*($3 + [60]) = [513]
	*($3 + [68]) = [15815]
	*($3 + [72]) = [15830]
	*($3 + [76]) = [15871]
	*($3 + [80]) = (int_64)72060901179523328
	*($3 + [88]) = $0
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [176])) = $0
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = [0]
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*(($3 + [316])) = (int_64)0
	$2 = CALL $53($3, ($3 + [328]))
	$4 = CALL $53(($3 + [400]), $2)
	CALL $167(($3 + [32]), *($3 + [344]), $4)
	if ( ((*($3 + [400]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$7
	CALL $246(($3 + [32]))
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($3 + [336])))
	
.LABEL $label$8
	$global$0 = ($3 + [416])
}

void .FUNC $290 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [296]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($3 + [296]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [28]) = [513]
	*($3 + [32]) = [15792]
	*($3 + [36]) = [15815]
	*($3 + [40]) = [15830]
	*($3 + [44]) = [15871]
	*($3 + [48]) = (int_64)72060901179523328
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [104])) = $0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [244])) = (int_64)0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [256]) = $0
	CALL $163($3, *($3 + [296]))
	CALL $246($3)
	$global$0 = ($3 + [304])
}

void .FUNC $293 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [311]), $5, [1])
	*($3 + [296]) = (int_64)0
	$5 = ($2 + [9])
	if ( ((uint_32)($4 + [-9]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	
.LABEL $label$7
	CALL memcpy(($3 + [296]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [17])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [28]) = [513]
	*($3 + [32]) = [15792]
	*($3 + [36]) = [15815]
	*($3 + [40]) = [15830]
	*($3 + [44]) = [15871]
	*($3 + [48]) = (int_64)72060901179523328
	*($3 + [56]) = $0
	*($3 + [96]) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [104])) = $0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = [0]
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [244])) = (int_64)0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*($3 + [256]) = $0
	CALL $207($3, *($3 + [312]), *($3 + [311]), *($3 + [296]))
	CALL $246($3)
	$global$0 = ($3 + [320])
}

void .FUNC $292 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $247(($3 + [352]), ($3 + [328]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [352]) + [8]))
	*($3 + [16]) = *($3 + [352])
	$2 = *($2)
	*((($3 + [368]) + [8])) = $2
	*(($4 = (($3 + [384]) + [8]))) = $2
	$5 = *($3 + [16])
	*($3 + [384]) = $5
	*($3 + [368]) = $5
	$2 = *($4)
	*((($3 + [400]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [384])
	*($3 + [48]) = $1
	*($3 + [400]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*($3 + [64]) = [15792]
	*($3 + [60]) = [513]
	*($3 + [68]) = [15815]
	*($3 + [72]) = [15830]
	*($3 + [76]) = [15871]
	*($3 + [80]) = (int_64)72060901179523328
	*($3 + [88]) = $0
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [176])) = $0
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = [0]
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*(($3 + [316])) = (int_64)0
	$2 = CALL $53($3, ($3 + [328]))
	CALL $167(($3 + [32]), *($3 + [344]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$6
	CALL $246(($3 + [32]))
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($3 + [336])))
	
.LABEL $label$7
	$global$0 = ($3 + [416])
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [14593])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([96])) + [16]) = (int_64)0
	*($3 + [8]) = [0]
	*($3 + [25]) = [0]
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [36]) = [0]
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60 align=4]) = (int_64)0
	*($3 + [68]) = [0]
	*($3 + [72]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$2 = CALL current_time()
	*($3 + [80]) = $1
	*($3 + [76]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [604800])
	CALL $327(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [84])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $328(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$7 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($7 == 0) ){ goto $label$4 }
	$3 = *($7 + [56])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($7 + [60])) = $3
	CALL $11($3)
	
.LABEL $label$5
	$3 = *($7 + [44])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($7 + [48])) = $3
	CALL $11($3)
	
.LABEL $label$6
	$0 = *($7 + [28])
	if ( ($0 == 0) ){ goto $label$7 }
	$5 = ($7 + [32])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($1 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [-4])))
	
.LABEL $label$11
	$1 = $3
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($7 + [28]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $0
	
.LABEL $label$8
	*($5) = $0
	CALL $11($3)
	
.LABEL $label$7
	CALL $11($7)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $348 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [4])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = [268435455]
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [4])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [14367])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $330(*($1), *($0 + [32]))
}

void .FUNC $346 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [3])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $11($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = [536870911]
	if ( ((uint_32)int_32($5 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [3])
	$6 = CALL $9($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $345 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [40])) = *(($5 + [40]))
	*(($1 + [32])) = *(($5 + [32]))
	*(($1 + [24])) = *(($5 + [24]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [8])) = *(($5 + [8]))
	$6 = ($1 + [44])
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $346($6, *($5 + [44]), *(($5 + [48])))
	
.LABEL $label$1
	$8 = *($1 + [44])
	$7 = *(($1 + [48]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$5 = [42]
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$3 }
	$5 = (($9 & [-8]) + $5)
	
.LABEL $label$3
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $3($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [33])
	*($3 + [48]) = ($1 + [36])
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = $6
	CALL $347(($3 + [24]), ($3 + [16]))
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)4982871457202700288, *(*($0 + [8])), (int_64)4982871457202700288, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)(int_64)4982871457202700288) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($2)
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)4982871457202700288) ){ goto $label$6 }
	
.LABEL $label$7
	*(($4 + [16])) = (int_64)4982871457202700289
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

void .FUNC $212 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($global$0 - [112])
	$global$0 = $4
	CALL $107(($4 + [48]), ($0 + [216]))
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [44]) = [0]
	$5 = *($0)
	*($4 + [8]) = $5
	*($4 + [16]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)-2507685100368429056, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $179(($4 + [8]), $0)
	if ( ((int_32)*($0 + [80]) == (int_32)($4 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [14043])
	
.LABEL $label$2
	$1 = CALL current_time()
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000))
	if ( ((uint_32)*($0 + [76]) <= (uint_32)$6) ){ goto $label$3 }
	if ( ((uint_32)(*($0 + [68]) + *($4 + [88])) <= (uint_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [13426])
	goto $label$1 
	
.LABEL $label$3
	$6 = CALL db_next_i64(*($0 + [84]), ($4 + [104]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $179(($4 + [8]), $6)
	
.LABEL $label$4
	CALL $180(($4 + [8]), $0)
	
.LABEL $label$1
	CALL $145(($4 + [32]))
	$0 = *($4 + [92])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($4 + [96])) = $0
	CALL $11($0)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $95($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	$0 = ($4 - $3)
	if ( ((int_32)$0 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [14367])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$4 = ($3 + [8])
	*($2 + [12]) = $4
	$7 = ($1 + [8])
	if ( ((int_32)($0 + [-8]) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [14367])
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = ($3 + [16])
	*($2 + [12]) = $4
	*($2 + [24]) = *(($1 + [16]))
	if ( ((int_32)($0 + [-16]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [14367])
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [24]), [8])
	*($2 + [12]) = ($3 + [24])
	CALL $307(($2 + [8]), $6)
	$global$0 = ($2 + [32])
}

void .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $247(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	$7 = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$8 = *($0 + [16])
	$3 = *($1)
	$4 = *($3 + [4])
	$9 = [0]
	
.LOOP $label$5:
	if ( ($4 <= *(($3 + [8]))) ){ goto $label$6 }
	CALL eosio_assert([0], [15933])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	$5 = *($4)
	$6 = ($4 + [1])
	*(($3 + [4])) = $6
	$4 = ($9 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($5 & [127]) << $4)))
	$9 = ($4 + [7])
	$4 = $6
	if ( ($5 & [128]) ){ goto $label$5 }
	*($8) = $7
	$4 = ($8 + [4])
	if ( ((uint_32)(*(($3 + [8])) - $6) > (uint_32)[64]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$6 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $6, [65])
	*(($4 = ($3 + [4]))) = (*($4) + [65])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$12 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [15928])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($6) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($6, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($6 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [15928])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($6, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [15928])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [284]) = $2
	*(($3 + [272])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*(($3 + [256])) = (int_64)0
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [280]) = *($3 + [284])
	$4 = [0]
	$2 = [-1]
	if ( ((int_32)CALL $39([0], $1, ($3 + [280]), ($3 + [80]), ($3 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $20($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) <= (int_32)[0]) ){ goto $label$6 }
	$5 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($0) = ($2 & [-33])
	$5 = ($2 & [32])
	if ( *($0 + [48]) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($3 + [80])
	*($0 + [28]) = $3
	*($0 + [20]) = $3
	$7 = *($0 + [44])
	*($0 + [44]) = $3
	$2 = CALL $39($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $7
	*($6) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$7 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $7 )
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL $39($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	
.LABEL $label$3
	$1 = *($0)
	*($0) = ($1 | $5)
	$1 = ($1 & [32])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $21($0)
	
.LABEL $label$7
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	$global$0 = ($3 + [288])
	return $2
}

void .FUNC $283 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [356]) = $4
	*($3 + [352]) = $4
	*($3 + [360]) = ($4 + $5)
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $247(($3 + [352]), ($3 + [336]))
	*(($4 = (($3 + [24]) + [8]))) = *($3 + [360])
	*($3 + [24]) = *($3 + [352])
	$4 = *($4)
	*((($3 + [368]) + [8])) = $4
	*(($5 = (($3 + [384]) + [8]))) = $4
	$6 = *($3 + [24])
	*($3 + [384]) = $6
	*($3 + [368]) = $6
	$4 = *($5)
	*((($3 + [400]) + [8])) = $4
	*(($3 + [64])) = $4
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [384])
	*($3 + [56]) = $1
	*($3 + [400]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*($3 + [72]) = [15792]
	*($3 + [68]) = [513]
	*($3 + [76]) = [15815]
	*($3 + [80]) = [15830]
	*($3 + [84]) = [15871]
	*($3 + [88]) = (int_64)72060901179523328
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [184])) = $0
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = [0]
	*($3 + [216]) = $0
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*(($3 + [324])) = (int_64)0
	$4 = CALL $53(($3 + [8]), ($3 + [336]))
	CALL $125(($3 + [40]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$4
	CALL $246(($3 + [40]))
	if ( ((*($3 + [336]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [344])))
	
.LABEL $label$5
	$global$0 = ($3 + [416])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL $35($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

void .FUNC $37 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$6 = ($5) & [32767]
	if ( ((int_32)$6) == (int_32)[32767]) ){ goto $label$1 }
	if ( $6 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($4, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL $37(($4 + [16]), *($4), *(($4 + [8])), $3)
	$5 = (*($3) + [-120])
	$2 = *($4 + [24])
	$1 = *($4 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($5 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($5 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	*($3) = $5
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $34 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL $33([8624], *([0] + [20]))
	$1 = [0]
	
.LOOP $label$4:
	if ( ((int_32)*(($1 + [8528])) == (int_32)$0) ){ goto $label$3 }
	$2 = [87]
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[87]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [8624]
	
.LOOP $label$5:
	$0 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $0 ){ goto $label$5 }
	$1 = $3
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	return CALL $33($3, *([0] + [20]))
	return .LABEL $label$1
}

int_32 .FUNC $35 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	return $0
}

void .FUNC $280 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [464])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	$5 = ($2 + $4)
	*($3 + [408]) = $5
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$5 = *(($3 + [408]))
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [384]) = (int_64)0
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$5 = *((($3 + [400]) + [8]))
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [404])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [376]) + [8]))) = *($3 + [64])
	*($3 + [404]) = ($2 + [8])
	*($3 + [368]) = [0]
	*($3 + [360]) = (int_64)0
	CALL $247(($3 + [400]), ($3 + [360]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [400]) + [8]))
	*($3 + [48]) = *($3 + [400])
	$2 = *($2)
	*((($3 + [416]) + [8])) = $2
	*(($5 = (($3 + [432]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [432]) = $6
	*($3 + [416]) = $6
	$2 = *($5)
	*((($3 + [448]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [432])
	*($3 + [80]) = $1
	*($3 + [448]) = $1
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [96]) = [15792]
	*($3 + [92]) = [513]
	*($3 + [100]) = [15815]
	*($3 + [104]) = [15830]
	*($3 + [108]) = [15871]
	*($3 + [112]) = (int_64)72060901179523328
	*($3 + [120]) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [208])) = $0
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = [0]
	*($3 + [240]) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*(($3 + [348])) = (int_64)0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [376])
	$0 = *($3 + [392])
	$2 = CALL $53(($3 + [16]), ($3 + [360]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $131(($3 + [64]), $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$8
	CALL $246(($3 + [64]))
	if ( ((*($3 + [360]) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*(($3 + [368])))
	
.LABEL $label$9
	$global$0 = ($3 + [464])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL $6()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL $6()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL $30($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

void .FUNC $281 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [436]) = $2
	*($3 + [432]) = $2
	*($3 + [440]) = ($2 + $4)
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [436])
	
.LABEL $label$5
	CALL memcpy(($3 + [424]), $2, [8])
	*($3 + [436]) = ($2 + [8])
	*($3 + [416]) = [0]
	*($3 + [408]) = (int_64)0
	CALL $247(($3 + [432]), ($3 + [408]))
	*($3 + [400]) = (int_64)0
	*($3 + [392]) = (int_64)0
	$2 = *($3 + [436])
	$4 = (($3 + [432]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [436])
	
.LABEL $label$6
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = (*($3 + [436]) + [8])
	*($3 + [436]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [15928])
	$2 = *($3 + [436])
	
.LABEL $label$7
	CALL memcpy(($3 + [80]), $2, [8])
	*(($4 = (($3 + [392]) + [8]))) = *($3 + [80])
	*($3 + [436]) = (*($3 + [436]) + [8])
	*($3 + [384]) = [0]
	*($3 + [376]) = (int_64)0
	CALL $247(($3 + [432]), ($3 + [376]))
	*(($2 = (($3 + [64]) + [8]))) = *((($3 + [432]) + [8]))
	*($3 + [64]) = *($3 + [432])
	$2 = *($2)
	*((($3 + [448]) + [8])) = $2
	*(($5 = (($3 + [464]) + [8]))) = $2
	$6 = *($3 + [64])
	*($3 + [464]) = $6
	*($3 + [448]) = $6
	$2 = *($5)
	*((($3 + [480]) + [8])) = $2
	*(($3 + [104])) = $2
	*($3 + [80]) = $0
	*($3 + [88]) = $1
	$1 = *($3 + [464])
	*($3 + [96]) = $1
	*($3 + [480]) = $1
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*($3 + [112]) = [15792]
	*($3 + [108]) = [513]
	*($3 + [116]) = [15815]
	*($3 + [120]) = [15830]
	*($3 + [124]) = [15871]
	*($3 + [128]) = (int_64)72060901179523328
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*($3 + [216]) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [224])) = $0
	*(($3 + [240])) = (int_64)0
	*(($3 + [248])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = [0]
	*($3 + [256]) = $0
	*($3 + [296]) = $0
	*($3 + [336]) = $0
	*(($3 + [364])) = (int_64)0
	$0 = *($3 + [424])
	$2 = CALL $53(($3 + [48]), ($3 + [408]))
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [392])
	$4 = CALL $53(($3 + [16]), ($3 + [376]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $98(($3 + [80]), $0, $2, $3, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$8
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$9
	CALL $246(($3 + [80]))
	if ( (*($3 + [376]) & [1]) ){ goto $label$12 }
	if ( (*($3 + [408]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $11(*(($3 + [384])))
	if ( ((*($3 + [408]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $11(*(($3 + [416])))
	$global$0 = ($3 + [496])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [496])
}