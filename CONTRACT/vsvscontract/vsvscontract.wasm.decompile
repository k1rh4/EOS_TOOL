(data (i32.const 4) "\a0m\00\00")
(data (i32.const 16) "@@@@@@@@token apply: (receiver, code, action): (\00")
(data (i32.const 80) ",\00")
(data (i32.const 96) ",@@\00")
(data (i32.const 112) "@@)\n\00")
(data (i32.const 128) "onerror\00")
(data (i32.const 144) "eosio\00")
(data (i32.const 160) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 224) "clear\00")
(data (i32.const 240) "create\00")
(data (i32.const 256) "reducesupply\00")
(data (i32.const 272) "issue\00")
(data (i32.const 288) "destroytoken\00")
(data (i32.const 304) "tradetoken\00")
(data (i32.const 320) "checkhacker\00")
(data (i32.const 336) "checkplayer\00")
(data (i32.const 352) "clearall\00")
(data (i32.const 368) "candy\00")
(data (i32.const 384) "lockpledge\00")
(data (i32.const 400) "unlockpledge\00")
(data (i32.const 416) "mining\00")
(data (i32.const 432) "miningdice\00")
(data (i32.const 448) "checkim\00")
(data (i32.const 464) "checkto\00")
(data (i32.const 480) "deduction\00")
(data (i32.const 496) "transfer\00")
(data (i32.const 512) "fixpledge\00")
(data (i32.const 528) "fixsupply\00")
(data (i32.const 544) "changeimpawn\00")
(data (i32.const 560) "recallimpawn\00")
(data (i32.const 576) "impawn\00")
(data (i32.const 592) "unimpawn\00")
(data (i32.const 608) "unimpawnly\00")
(data (i32.const 624) "invalid quantity\00")
(data (i32.const 656) "must transfer positive quantity\00")
(data (i32.const 688) "memo has more than 256 bytes\00")
(data (i32.const 720) "level error\00")
(data (i32.const 736) "balance not found\00")
(data (i32.const 768) "invalid symbol name\00")
(data (i32.const 800) "balance not enough\00")
(data (i32.const 832) "time out of range\00")
(data (i32.const 864) "over level\00")
(data (i32.const 880) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 944) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1008) "cannot create objects in table of another contract\00")
(data (i32.const 1072) "cannot pass end iterator to modify\00")
(data (i32.const 1120) "object passed to modify is not in multi_index\00")
(data (i32.const 1168) "cannot modify objects in table of another contract\00")
(data (i32.const 1232) "attempt to add asset with different symbol\00")
(data (i32.const 1280) "addition underflow\00")
(data (i32.const 1312) "addition overflow\00")
(data (i32.const 1344) "write\00")
(data (i32.const 1360) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1424) "cannot pass end iterator to erase\00")
(data (i32.const 1472) "cannot increment end iterator\00")
(data (i32.const 1504) "object passed to erase is not in multi_index\00")
(data (i32.const 1552) "cannot erase objects in table of another contract\00")
(data (i32.const 1616) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1680) "error reading iterator\00")
(data (i32.const 1712) "read\00")
(data (i32.const 1728) "no balance object found\00")
(data (i32.const 1760) "overdrawn balance\00")
(data (i32.const 1792) "attempt to subtract asset with different symbol\00")
(data (i32.const 1840) "subtraction underflow\00")
(data (i32.const 1872) "subtraction overflow\00")
(data (i32.const 1904) "pledge function locked!\00")
(data (i32.const 1936) "unable to find key\00")
(data (i32.const 1968) "symbol precision mismatch\00")
(data (i32.const 2000) "active\00")
(data (i32.const 2016) "get\00")
(data (i32.const 2032) "must unpledging positive quantity\00")
(data (i32.const 2080) "olevel error\00")
(data (i32.const 2096) "nlevel error\00")
(data (i32.const 2112) "level change error\00")
(data (i32.const 2160) "cannot transfer to self\00")
(data (i32.const 2192) "to account does not exist\00")
(data (i32.const 2224) "memo has more than 256 byte\00")
(data (i32.const 2256) "jsurgb234oq1\00")
(data (i32.const 2272) "forbid exchange\00")
(data (i32.const 2288) "qwer11223344\00")
(data (i32.const 2304) "gtf32t1od12j\00")
(data (i32.const 2320) "l4w43dmikvog\00")
(data (i32.const 2336) "xs3wrwnavn3z\00")
(data (i32.const 2352) "uhrowgyygyke\00")
(data (i32.const 2368) "wnze2qwdiyne\00")
(data (i32.const 2384) "xqlmzg4sem2a\00")
(data (i32.const 2400) "yihu2ir43cvq\00")
(data (i32.const 2416) "token with symbol does not exist, create token before issue\00")
(data (i32.const 2480) "vsvsvsvipvip\00")
(data (i32.const 2496) "from account not exists\00")
(data (i32.const 2528) "must destroy positive quantity\00")
(data (i32.const 2560) "quantity exceeds available supply\00")
(data (i32.const 2608) "to account not exists\00")
(data (i32.const 2640) "must issue positive quantity\00")
(data (i32.const 2672) "token with symbol does not exist, create token before reduce\00")
(data (i32.const 2736) "must reduce positive quantity\00")
(data (i32.const 2768) "invalid supply\00")
(data (i32.const 2784) "max-supply must be positive\00")
(data (i32.const 2816) "token with symbol already exists\00")
(data (i32.const 2852) "\00\00\00\00@B\0f\00\01\00\00\00\a0\bb\0d\00\02\00\00\00\b0q\0b\00\03\00\00\00\c0\'\t\00\04\00\00\00 \a1\07\00\05\00\00\00\80\1a\06\00\06\00\00\00\e0\93\04\00\07\00\00\00@\0d\03\00\08\00\00\00\a0\86\01\00\t\00\00\00P\c3\00\00")
(data (i32.const 2936) "\01\00\00\00\00\00\00\00\9a\99\99\99\99\99\e9?\02\00\00\00\00\00\00\00333333\c3?\04\00\00\00\00\00\00\00\9a\99\99\99\99\99\a9?")
(data (i32.const 2984) "\01\00\00\00\00\00\00\00\90\91\b9yR\847\de\02\00\00\00\00\00\00\00\a0\b2\b9\aa\d2\ac\0e\de\04\00\00\00\00\00\00\00 \8d\ca\db\a5\ac\0e\de\03\00\00\00\00\00\00\00\90\a7Jn\bb\847\de\05\00\00\00\00\00\00\00@\0frXM\9a\d5I\06\00\00\00\00\00\00\00\00\919x\e3\8d7\de\07\00\00\00\00\00\00\00\90\d5\c9\ea\e0\8d7\de")
(data (i32.const 3104) "Quantity must be positive\00")
(data (i32.const 11536) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 11632) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 11648) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 11664) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$8 (param i32)))
(import "env" "db_store_i64" (func $fimport$9 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$10 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$11 (param i32 i32)))
(import "env" "is_account" (func $fimport$12 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "printn" (func $fimport$14 (param i64)))
(import "env" "prints" (func $fimport$15 (param i32)))
(import "env" "read_action_data" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$17 (param i64)))
(import "env" "require_auth2" (func $fimport$18 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$19 (param i64)))
(import "env" "send_deferred" (func $fimport$20 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$21 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN5eosio5token6createEyNS_5assetE" (func $7))
(export "_ZN5eosio5token12reducesupplyENS_5assetE" (func $9))
(export "_ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $11))
(export "_ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $13))
(export "_ZN5eosio5token10tradetokenEy" (func $14))
(export "_ZN5eosio5token11checkhackerEyy" (func $16))
(export "_ZN5eosio5token11checkplayerEyy" (func $18))
(export "_ZN5eosio5token6miningEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $19))
(export "_ZN5eosio5token10miningdiceEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $21))
(export "_ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $22))
(export "_ZN5eosio5token9fixpledgeENS_5assetE" (func $24))
(export "_ZN5eosio5token9fixsupplyENS_5assetE" (func $25))
(export "_ZN5eosio5token5candyEyNS_5assetE" (func $26))
(export "_ZN5eosio5token9deductionEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $27))
(export "_ZN5eosio5token7checkimEy" (func $28))
(export "_ZN5eosio5token7checktoEyyy" (func $29))
(export "_ZN5eosio5token5clearEyNS_5assetE" (func $31))
(export "_ZN5eosio5token10lockpledgeEv" (func $32))
(export "_ZN5eosio5token12unlockpledgeEv" (func $34))
(export "_ZN5eosio5token12changeimpawnEyNS_5assetEyyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $35))
(export "_ZN5eosio5token12recallimpawnEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $37))
(export "_ZN5eosio5token6impawnEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $38))
(export "_ZN5eosio5token8unimpawnEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $40))
(export "_ZN5eosio5token10unimpawnlyEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $41))
(export "_ZN5eosio5token28sub_unpledging_level_balanceEyNS_5assetEy" (func $46))
(export "_ZN5eosio5token11add_balanceEyNS_5assetEy" (func $47))
(export "_ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy" (func $67))
(export "_ZN5eosio5token28add_unpledging_level_balanceEyNS_5assetEy" (func $68))
(export "_ZN5eosio5token11sub_balanceEyNS_5assetE" (func $98))
(export "_ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy" (func $99))
(export "_ZN5eosio5token19require_banexchangeEy" (func $130))
(export "_ZN5eosio10miningpropENS_5assetES0_" (func $142))
(export "_ZN5eosio5token19sub_pledged_balanceEyNS_5assetE" (func $143))
(export "_ZN5eosio5token19add_pledged_balanceEyNS_5assetE" (func $146))
(export "_ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE" (func $147))
(export "_ZN5eosio5token22add_unpledging_balanceEyNS_5assetE" (func $148))
(export "_ZN5eosio5token15sub_all_balanceEyNS_5assetE" (func $149))
(export "malloc" (func $150))
(export "free" (func $153))
(export "pow" (func $160))
(export "sqrt" (func $161))
(export "fabs" (func $162))
(export "scalbn" (func $163))
(export "memcmp" (func $164))
(export "strlen" (func $165))
(table $0 25 25 anyfunc)
(elem (i32.const 0) $166 $21 $18 $41 $24 $14 $7 $35 $11 $32 $19 $16 $28 $22 $40 $27 $13 $37 $9 $29 $31 $34 $26 $25 $38)



void .FUNC _ZN5eosio5token11sub_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	*($7 + [120]) = $1
	*((($7 + [80]) + [32])) = [0]
	*($7 + [88]) = $1
	*($7 + [96]) = (int_64)-1
	*($7 + [104]) = (int_64)0
	$4 = *($0)
	*($7 + [80]) = $4
	*((($7 + [40]) + [32])) = [0]
	*($7 + [40]) = $4
	*($7 + [56]) = (int_64)-1
	*($7 + [64]) = (int_64)0
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($7 + [48]) = $5)
	$3 = CALL db_find_i64($4, $5, (int_64)3774689537475637248, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $49(($7 + [40]), $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)($7 + [40])), [944])
	*($7 + [36]) = $3
	*($7 + [32]) = ($7 + [40])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [36]) = [0]
	*($7 + [32]) = ($7 + [40])
	
.LABEL $label$1
	$1 = *($2)
	$3 = CALL $104(($7 + [80]), (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8), [1728]
	CALL eosio_assert(((int_64)*($3)) >= (int_64)$1), [1760])
	if ( ((int_64)$1 != (int_64)*($3)) ){ goto $label$6 }
	CALL $105(($7 + [80]), $3)
	if ( (*($7 + [36]) == 0) ){ goto $label$5 }
	$1 = *($7 + [32])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	$3 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($3), [1424])
	CALL eosio_assert($3, [1472])
	$3 = CALL db_next_i64(*($2 + [28]), ($7 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	CALL $49((CASTING uint_32)(uint_64 $1), $3)
	
.LABEL $label$7
	CALL $54(($7 + [40]), $2)
	$0 = *($7 + [64])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($7 + [8]) = $2
	*($7 + [20]) = $0
	*($7 + [12]) = ($7 + [32])
	*($7 + [16]) = ($7 + [40])
	*($7 + [24]) = ($7 + [120])
	CALL $106(($7 + [80]), $3, ($7 + [8]))
	
.LABEL $label$5
	$0 = *($7 + [64])
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($7 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $155($3)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($7 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $0
	
.LABEL $label$8
	*($6) = $0
	CALL $155($2)
	
.LABEL $label$3
	$0 = *($7 + [104])
	if ( ($0 == 0) ){ goto $label$12 }
	$6 = ($7 + [108])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	CALL $155($3)
	
.LABEL $label$16
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($7 + [104]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $0
	
.LABEL $label$13
	*($6) = $0
	CALL $155($2)
	
.LABEL $label$12
	*([0] + [4]) = ($7 + [128])
}

void .FUNC _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	*($8 + [64]) = $1
	*($8 + [56]) = $3
	*($8 + [32]) = (int_64)-1
	*($8 + [40]) = [0]
	$3 = *($0)
	*($8 + [16]) = $3
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($8 + [24]) = $6)
	*(($5 = ($8 + [44]))) = [0]
	*(($7 = ($8 + [48]))) = [0]
	$0 = CALL db_find_i64($3, $6, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $60(($8 + [16]), $0)
	CALL eosio_assert(((int_32)*($0 + [248]) == (int_32)($8 + [16])), [944])
	*($8 + [84]) = $2
	*($8 + [80]) = ($8 + [56])
	CALL eosio_assert([1], [1072])
	CALL $102(($8 + [16]), $0, ($8 + [80]))
	$5 = *($8 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($8 + [64])
	*($8 + [4]) = $2
	*($8) = ($8 + [64])
	*($8 + [8]) = ($8 + [56])
	*($8 + [104]) = $1
	CALL eosio_assert(((int_64)*($8 + [16]) == (int_64)CALL $fimport$2()), [1008])
	*($8 + [84]) = $8
	*($8 + [80]) = ($8 + [16])
	*($8 + [88]) = ($8 + [104])
	$2 = CALL $154([264])
	CALL $61($2)
	*($2 + [248]) = ($8 + [16])
	CALL $103(($8 + [80]), $2)
	*($8 + [96]) = $2
	$1 = *($2)
	*($8 + [80]) = $1
	$4 = *($2 + [252])
	*($8 + [76]) = $4
	$0 = *($5)
	if ( ((uint_32)$0 >= (uint_32)*($7)) ){ goto $label$5 }
	*($0 + [8]) = $1
	*($0 + [16]) = $4
	*($8 + [96]) = [0]
	*($0) = $2
	*(($8 + [44])) = ($0 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $63(($8 + [40]), ($8 + [96]), ($8 + [80]), ($8 + [76]))
	
.LABEL $label$4
	$2 = *($8 + [96])
	*($8 + [96]) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $155($2)
	
.LABEL $label$6
	$5 = *($8 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [44])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $155($0)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($8 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($7) = $5
	CALL $155($2)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [112])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $96(*($1), ($0 + [32]))
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*((($5 + [32]) + [12])) = *(($1 + [20]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [16]))
	*($5 + [32]) = *($1 + [8])
	*($5 + [36]) = *(($1 + [12]))
	$2 = *($1)
	$3 = *($1 + [24])
	CALL $159(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $159(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $5), (int_32 $3), (int_64 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $155(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $155(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $97($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $157($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $154($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $157($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $155($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $156($7)
	return (unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2016])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $71($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1712])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $90 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [768])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $159(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $159(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $155(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $155(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $122 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [768])
	return $0
}

void .FUNC _ZN5eosio5token19require_banexchangeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2256]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2288]
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$6
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2304]
	$6 = (int_64)0
	
.LOOP $label$9:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$10 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$10
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2320]
	$6 = (int_64)0
	
.LOOP $label$13:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$14 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$2 = ($2 + [165])
	goto $label$15 
	
.LABEL $label$16
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$14
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$13 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2336]
	$6 = (int_64)0
	
.LOOP $label$17:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$18 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$2 = ($2 + [165])
	goto $label$19 
	
.LABEL $label$20
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$18
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$17 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2352]
	$6 = (int_64)0
	
.LOOP $label$21:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$22 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$2 = ($2 + [165])
	goto $label$23 
	
.LABEL $label$24
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$22
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$21 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2368]
	$6 = (int_64)0
	
.LOOP $label$25:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$26 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$2 = ($2 + [165])
	goto $label$27 
	
.LABEL $label$28
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$26
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$25 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2384]
	$6 = (int_64)0
	
.LOOP $label$29:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$30 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$2 = ($2 + [165])
	goto $label$31 
	
.LABEL $label$32
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$30
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$29 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [2400]
	$6 = (int_64)0
	
.LOOP $label$33:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$34 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$2 = ($2 + [165])
	goto $label$35 
	
.LABEL $label$36
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$34
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$33 }
	CALL eosio_assert(((int_64)$6 != (int_64)$1), [2272])
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $159($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $159(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $155(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $155(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $154([32])
	$6 = CALL $137($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $135(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([80])
	CALL $122($6)
	*($6 + [64]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $123(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $124(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = *($2)
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$3), [1792])
	$5 = (int_64)
	*($1) = $5(*($1) - *($4)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1872])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = (float_64)1
	$2 = *($2 + [4])
	$5 = *($2)
	if ( ((int_64)$5 < (int_64)10000000000001) ){ goto $label$1 }
	$6 = (CASTING float_64)(int_32 ((int_32)([95] - (CASTING uint_32)(uint_64 ((int_64))(*($2 + [16]) - $5) / (int_64)1000000000000))) / (int_32)[3]))
	
.LABEL $label$1
	$5 = (Rounds 0)(((float_64)CALL pow((float_64)0.8, $6) * (float_64)(float_64)1e6))
	*($1 + [48]) = (int_64))($5 - ((int_64)$5 % (int_64)100))
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$8 = $8
	$2 = ($8 + [-80])
	*([0] + [4]) = $2
	*($7 + [4]) = $2
	*($7) = $2
	*($7 + [8]) = ($8 + [-8])
	*($7 + [16]) = $7
	*($7 + [28]) = ($1 + [16])
	*($7 + [24]) = $1
	*($7 + [32]) = ($1 + [32])
	*($7 + [36]) = ($1 + [48])
	*($7 + [40]) = ($1 + [64])
	CALL $69(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $2, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $137 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio5token6impawnEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [320])
	*([0] + [4]) = $12
	*($12 + [184]) = $3
	CALL require_auth($1)
	$9 = [0]
	*((($12 + [144]) + [32])) = [0]
	*($12 + [160]) = (int_64)-1
	$3 = *($0)
	*($12 + [144]) = $3
	*($12 + [152]) = $3
	*($12 + [168]) = (int_64)0
	$11 = [0]
	$7 = CALL db_find_i64($3, $3, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $64(($12 + [144]), $7)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($12 + [144])), [944])
	
.LABEL $label$1
	CALL eosio_assert(($11 == 0), [1904])
	$3 = *($2 + [8])
	*((($12 + [104]) + [32])) = [0]
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	*($12 + [112]) = $3)
	*($12 + [120]) = (int_64)-1
	*($12 + [128]) = (int_64)0
	*($12 + [104]) = *($0)
	$7 = CALL $65(($12 + [104]), $3, [1936])
	*((($12 + [64]) + [32])) = [0]
	*($12 + [72]) = $3
	*($12 + [80]) = (int_64)-1
	*($12 + [88]) = (int_64)0
	$6 = *($0)
	*($12 + [64]) = $6
	$11 = CALL db_find_i64($6, $3, (int_64)8406652938591240192, $3)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $66(($12 + [64]), $11)
	CALL eosio_assert(((int_32)*($9 + [96]) == (int_32)($12 + [64])), [944])
	
.LABEL $label$2
	CALL require_recipient($1)
	$6 = *(($2 + [8]))
	$10 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$3 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$10 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	
.LABEL $label$3
	CALL eosio_assert($10, [624])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [656])
	CALL eosio_assert(((int_64)$6 == (int_64)*($7 + [8])), [1968])
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$9 }
	$11 = uint_32($11 >> [1])
	goto $label$8 
	
.LABEL $label$9
	$11 = *($4 + [4])
	
.LABEL $label$8
	CALL eosio_assert(($11 <= [257]), [688])
	$3 = *($12 + [184])
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)5), [720])
	$10 = ($2 + [8])
	*(($11 = (($12 + [48]) + [8]))) = *($10)
	$8 = *($2)
	*((($12 + [16]) + [12])) = *((($12 + [48]) + [12]))
	*((($12 + [16]) + [8])) = *($11)
	*($12 + [48]) = $8
	*($12 + [20]) = *($12 + [52])
	*($12 + [16]) = *($12 + [48])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($12 + [16]))
	*(($11 = (($12 + [32]) + [8]))) = *($10)
	$8 = *($2)
	*(($12 + [12])) = *((($12 + [32]) + [12]))
	*(($12 + [8])) = *($11)
	*($12 + [32]) = $8
	*($12 + [4]) = *($12 + [36])
	*($12) = *($12 + [32])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $1, $12, $3)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)($12 + [104])), [1120])
	CALL eosio_assert(((int_64)*($12 + [104]) == (int_64)CALL $fimport$2()), [1168])
	$11 = ($7 + [8])
	$3 = *($11)
	CALL eosio_assert(((int_64)$6 == (int_64)*(($7 + [40]))), [1232])
	$1 = ((int_64)*($7 + [32]) + (int_64)$5)
	*($7 + [32]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($7 + [32]) < (int_64)4611686018427387904), [1312])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$3) == (int_64)(uint_64)*($11) >> (uint_64)(int_64)8)), [1360])
	*($12 + [280]) = (($12 + [192]) + [72])
	*($12 + [276]) = ($12 + [192])
	*($12 + [272]) = ($12 + [192])
	*($12 + [312]) = ($12 + [272])
	*($12 + [292]) = ($7 + [16])
	*($12 + [288]) = $7
	*($12 + [296]) = ($7 + [32])
	*($12 + [300]) = ($7 + [48])
	*($12 + [304]) = ($7 + [64])
	CALL $69(($12 + [288]), ($12 + [312]))
	CALL db_update_i64(*($7 + [76]), (int_64)0, ($12 + [192]), [72])
	$11 = (($12 + [104]) + [16])
	if ( (uint_64)($3 <= *($11)) ){ goto $label$10 }
	*($11) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$10
	if ( ($9 == 0) ){ goto $label$13 }
	*($12 + [196]) = $2
	*($12 + [192]) = ($12 + [184])
	CALL eosio_assert([1], [1072])
	CALL $101(($12 + [64]), $9, ($12 + [192]))
	$2 = *($12 + [88])
	if ( $2 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$3 = *($0)
	*($12 + [272]) = $2
	*($12 + [276]) = ($12 + [184])
	*($12 + [288]) = $3
	CALL eosio_assert(((int_64)*($12 + [64]) == (int_64)CALL $fimport$2()), [1008])
	*($12 + [196]) = ($12 + [272])
	*($12 + [192]) = ($12 + [64])
	*($12 + [200]) = ($12 + [288])
	$11 = CALL $154([112])
	CALL $86($11)
	*($11 + [96]) = ($12 + [64])
	CALL $100(($12 + [192]), $11)
	*($12 + [312]) = $11
	$3 = (uint_64)*($11 + [8]) >> (uint_64)(int_64)8
	*($12 + [192]) = $3)
	$2 = *($11 + [100])
	*($12 + [308]) = $2
	$0 = ($12 + [92])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($12 + [96]))) ){ goto $label$15 }
	*($7 + [8]) = $3
	*($7 + [16]) = $2
	*($12 + [312]) = [0]
	*($7) = $11
	*($0) = ($7 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $88(($12 + [88]), ($12 + [312]), ($12 + [192]), ($12 + [308]))
	
.LABEL $label$14
	$11 = *($12 + [312])
	*($12 + [312]) = [0]
	if ( ($11 == 0) ){ goto $label$16 }
	CALL $155($11)
	
.LABEL $label$16
	$2 = *($12 + [88])
	if ( ($2 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$0 = ($12 + [92])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	CALL $155($7)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$19 }
	$11 = *(($12 + [88]))
	goto $label$17 
	
.LABEL $label$18
	$11 = $2
	
.LABEL $label$17
	*($0) = $2
	CALL $155($11)
	
.LABEL $label$11
	$2 = *($12 + [128])
	if ( ($2 == 0) ){ goto $label$21 }
	$0 = ($12 + [132])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$23 }
	
.LOOP $label$24:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	CALL $155($7)
	
.LABEL $label$25
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$24 }
	$11 = *(($12 + [128]))
	goto $label$22 
	
.LABEL $label$23
	$11 = $2
	
.LABEL $label$22
	*($0) = $2
	CALL $155($11)
	
.LABEL $label$21
	$2 = *($12 + [168])
	if ( ($2 == 0) ){ goto $label$26 }
	$0 = ($12 + [172])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$28 }
	
.LOOP $label$29:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$30 }
	CALL $155($7)
	
.LABEL $label$30
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$29 }
	$11 = *(($12 + [168]))
	goto $label$27 
	
.LABEL $label$28
	$11 = $2
	
.LABEL $label$27
	*($0) = $2
	CALL $155($11)
	
.LABEL $label$26
	*([0] + [4]) = ($12 + [320])
}

void .FUNC $126 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $154($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*((($9 + [24]) + [24])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*(($9 + [56])) = [0]
	*(($9 + [60])) = [0]
	$8 = *($3 + [24])
	$2 = ( *(($3 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [24])
	$0 = (CASTING uint_64)(uint_32 $2)
	$6 = ($3 + [24])
	$2 = (($9 + [24]) + [28])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $71($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [64]) = $8
	*($9 + [72]) = $2
	CALL eosio_assert(((int_32)($2 - $8) > (int_32)[7]), [1344])
	CALL memcpy($8, $3, [8])
	$7 = ($8 + [8])
	CALL eosio_assert(((int_32)($2 - $7) > (int_32)[7]), [1344])
	CALL memcpy($7, ($3 + [8]), [8])
	$7 = ($8 + [16])
	CALL eosio_assert(((int_32)($2 - $7) > (int_32)[7]), [1344])
	CALL memcpy($7, ($3 + [16]), [8])
	*($9 + [68]) = ($8 + [24])
	CALL $82(($9 + [64]), $6)
	CALL $127(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [68]) = $8
	CALL $155($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $155($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $155($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $155($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $158(($9 + [8]))
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $154([40])
	$6 = CALL $55($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $53(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $154([32])
	$6 = CALL $56($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $51(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $43($0, *($1))
	CALL $43($0, *($1 + [4]))
	CALL $155($1)
	
.LABEL $label$1
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $42($0, *($1))
	CALL $42($0, *($1 + [4]))
	CALL $155($1)
	
.LABEL $label$1
}

void .FUNC _ZN5eosio5token10unimpawnlyEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$5 = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [624])
	CALL eosio_assert(((int_64)$8 > (int_64)0), [656])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [688])
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)5), [720])
	$6 = *($2 + [8])
	*(($9 + [104])) = [0]
	*($9 + [80]) = (uint_64)$6 >> (uint_64)(int_64)8)
	*($9 + [88]) = (int_64)-1
	*($9 + [96]) = (int_64)0
	*($9 + [72]) = *($0)
	$2 = CALL $45(($9 + [72]), $1, [736])
	CALL eosio_assert([1], [880])
	$6 = (int_64)5462355
	$8 = (int_64)1398362884
	$7 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	
.LABEL $label$8
	CALL eosio_assert($5, [768])
	$6 = ((int_64)$3 + (int_64)-1)
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	CALL eosio_assert(((int_64)*($2 + [24]) > (int_64)0), [800])
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($2 + [44])) > (uint_32)[86399]), [832])
	$8 = *(($2 + [32]))
	$6 = *($2 + [24])
	goto $label$13 
	
.LABEL $label$18
	CALL eosio_assert([0], [864])
	$6 = (int_64)0
	goto $label$13 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)*($2 + [64]) > (int_64)0), [800])
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($2 + [84])) > (uint_32)[86399]), [832])
	$8 = *(($2 + [72]))
	$6 = *($2 + [64])
	goto $label$13 
	
.LABEL $label$16
	CALL eosio_assert(((int_64)*($2 + [104]) > (int_64)0), [800])
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($2 + [124])) > (uint_32)[86399]), [832])
	$8 = *(($2 + [112]))
	$6 = *($2 + [104])
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert(((int_64)*($2 + [144]) > (int_64)0), [800])
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($2 + [164])) > (uint_32)[86399]), [832])
	$8 = *(($2 + [152]))
	$6 = *($2 + [144])
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert(((int_64)*($2 + [184]) > (int_64)0), [800])
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($2 + [204])) > (uint_32)[86399]), [832])
	$8 = *(($2 + [192]))
	$6 = *($2 + [184])
	
.LABEL $label$13
	*($9 + [64]) = $8
	*((($9 + [24]) + [8])) = $8
	*($9 + [56]) = $6
	*($9 + [24]) = $6
	CALL _ZN5eosio5token28sub_unpledging_level_balanceEyNS_5assetEy($0, $1, ($9 + [24]), $3)
	*($9 + [48]) = $8
	$3 = *($0)
	*((($9 + [8]) + [8])) = $8
	*($9 + [40]) = $6
	*($9 + [8]) = $6
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, ($9 + [8]), $3)
	$5 = *($9 + [96])
	if ( ($5 == 0) ){ goto $label$20 }
	$2 = ($9 + [100])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$22 }
	
.LOOP $label$23:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$24 }
	CALL $155($0)
	
.LABEL $label$24
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$23 }
	$7 = *(($9 + [96]))
	goto $label$21 
	
.LABEL $label$22
	$7 = $5
	
.LABEL $label$21
	*($2) = $5
	CALL $155($7)
	
.LABEL $label$20
	*([0] + [4]) = ($9 + [112])
	(CASTING uint_32)(uint_64 $6)
}

void .FUNC _ZN5eosio5token8unimpawnEyNS_5assetEyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [416])
	*([0] + [4]) = $13
	*($13 + [296]) = $3
	CALL require_auth($1)
	$7 = [0]
	*((($13 + [256]) + [32])) = [0]
	*($13 + [272]) = (int_64)-1
	$3 = *($0)
	*($13 + [256]) = $3
	*($13 + [264]) = $3
	*($13 + [280]) = (int_64)0
	$9 = [0]
	$6 = CALL db_find_i64($3, $3, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $64(($13 + [256]), $6)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($13 + [256])), [944])
	
.LABEL $label$1
	CALL eosio_assert(($9 == 0), [1904])
	$3 = *($2 + [8])
	*((($13 + [216]) + [32])) = [0]
	$12 = (uint_64)$3 >> (uint_64)(int_64)8
	*($13 + [224]) = $12)
	*($13 + [232]) = (int_64)-1
	*($13 + [240]) = (int_64)0
	*($13 + [216]) = *($0)
	$6 = CALL $65(($13 + [216]), $12, [1936])
	*((($13 + [176]) + [32])) = [0]
	*($13 + [184]) = $12
	*($13 + [192]) = (int_64)-1
	*($13 + [200]) = (int_64)0
	$3 = *($0)
	*($13 + [176]) = $3
	$9 = CALL db_find_i64($3, $12, (int_64)8406652938591240192, $12)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $66(($13 + [176]), $9)
	CALL eosio_assert(((int_32)*($7 + [96]) == (int_32)($13 + [176])), [944])
	
.LABEL $label$2
	$8 = [0]
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$3 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [624])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [656])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*($6 + [8])), [1968])
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$9 }
	$9 = uint_32($9 >> [1])
	goto $label$8 
	
.LABEL $label$9
	$9 = *($4 + [4])
	
.LABEL $label$8
	CALL eosio_assert(($9 <= [257]), [688])
	CALL eosio_assert((uint_64)(((int_64)*($13 + [296]) + (int_64)-1) <= (int_64)5), [720])
	*(($13 + [168])) = [0]
	*($13 + [144]) = $12
	*($13 + [152]) = (int_64)-1
	*($13 + [160]) = (int_64)0
	*($13 + [136]) = *($0)
	$9 = CALL $45(($13 + [136]), $1, [736])
	$3 = ((int_64)*($13 + [296]) + (int_64)-1)
	if ( ((uint_64)$3 > (uint_64)(int_64)4) ){ goto $label$14 }
	goto $label$10 
	
.LABEL $label$15
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($9 + [80])) > (uint_32)[604799]), [832])
	goto $label$10 
	
.LABEL $label$14
	CALL eosio_assert([0], [864])
	goto $label$10 
	
.LABEL $label$13
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($9 + [120])) > (uint_32)[2591999]), [832])
	goto $label$10 
	
.LABEL $label$12
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($9 + [160])) > (uint_32)[7775999]), [832])
	goto $label$10 
	
.LABEL $label$11
	CALL current_time()
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) - *($9 + [200])) > (uint_32)[15551999]), [832])
	
.LABEL $label$10
	$9 = ($2 + [8])
	$12 = *($9)
	*((($13 + [120]) + [8])) = $12
	$3 = *($2)
	*((($13 + [16]) + [8])) = $12
	*($13 + [120]) = $3
	$12 = *($13 + [296])
	*($13 + [16]) = $3
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($13 + [16]), $12)
	$12 = *($9)
	*((($13 + [104]) + [8])) = $12
	$3 = *($2)
	*(($13 + [8])) = $12
	*($13 + [104]) = $3
	$12 = *($13 + [296])
	*($13) = $3
	CALL _ZN5eosio5token28add_unpledging_level_balanceEyNS_5assetEy($0, $1, $13, $12)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($13 + [216])), [1120])
	CALL eosio_assert(((int_64)*($13 + [216]) == (int_64)CALL $fimport$2()), [1168])
	$8 = ($6 + [8])
	$3 = *($8)
	CALL eosio_assert(((int_64)*($9) == (int_64)*(($6 + [40]))), [1792])
	$12 = (int_64)
	*($6 + [32]) = $12(*($6 + [32]) - *($2)))
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($6 + [32]) < (int_64)4611686018427387904), [1872])
	$12 = (uint_64)$3 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$12) == (int_64)(uint_64)*($8) >> (uint_64)(int_64)8)), [1360])
	*($13 + [96]) = (($13 + [304]) + [72])
	*($13 + [92]) = ($13 + [304])
	*($13 + [88]) = ($13 + [304])
	*($13 + [384]) = ($13 + [88])
	*($13 + [36]) = ($6 + [16])
	*($13 + [32]) = $6
	*($13 + [40]) = ($6 + [32])
	*($13 + [44]) = ($6 + [48])
	*($13 + [48]) = ($6 + [64])
	CALL $69(($13 + [32]), ($13 + [384]))
	$3 = (int_64)0
	CALL db_update_i64(*($6 + [76]), (int_64)0, ($13 + [304]), [72])
	$9 = (($13 + [216]) + [16])
	if ( (uint_64)($12 <= *($9)) ){ goto $label$16 }
	*($9) = ((int_64)$12 + (int_64)1)
	
.LABEL $label$16
	*($13 + [308]) = $2
	*($13 + [304]) = ($13 + [296])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1072])
	CALL $70(($13 + [176]), $7, ($13 + [304]))
	$12 = CALL current_time()
	*(($13 + [332])) = [0]
	*((($13 + [304]) + [32])) = [0]
	*($13 + [316]) = [0]
	*($13 + [320]) = [0]
	*($13 + [324]) = [0]
	*($13 + [328]) = [0]
	*($13 + [304]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [340]) = [0]
	*((($13 + [304]) + [40])) = [0]
	*(($13 + [348])) = [0]
	*($13 + [352]) = [0]
	*(($13 + [356])) = [0]
	*(($13 + [360])) = [0]
	$8 = ($13 + [340])
	$5 = *($0)
	$10 = (int_64)59
	$9 = [2000]
	$11 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$3 > (uint_64)(int_64)5) ){ goto $label$22 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$6 = ($6 + [165])
	goto $label$20 
	
.LABEL $label$22
	$12 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$18
	$9 = ($9 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$17 }
	*($13 + [96]) = $11
	*($13 + [88]) = $5
	$3 = (int_64)0
	$10 = (int_64)59
	$9 = [608]
	$11 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$3 > (uint_64)(int_64)9) ){ goto $label$28 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$6 = ($6 + [165])
	goto $label$26 
	
.LABEL $label$28
	$12 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$24
	$9 = ($9 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$23 }
	*($13 + [80]) = $11
	*((($13 + [32]) + [20])) = *(($2 + [12]))
	*((($13 + [32]) + [16])) = *(($2 + [8]))
	*((($13 + [32]) + [12])) = *(($2 + [4]))
	*($13 + [32]) = $1
	*($13 + [40]) = *($2)
	*($13 + [56]) = *($13 + [296])
	$2 = (($13 + [32]) + [32])
	CALL $159($2, $4)
	$6 = *(($13 + [344]))
	if ( ((uint_32)$6 >= (uint_32)*(($13 + [348]))) ){ goto $label$32 }
	*($6 + [16 align=4]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = *($13 + [80])
	*($6) = $3
	*(($0 = ($6 + [24]))) = [0]
	$9 = CALL $154([16])
	*($6 + [16]) = $9
	$8 = ($9 + [16])
	*($0) = $8
	*(($9 + [8])) = *((($13 + [88]) + [8]))
	*($9) = *($13 + [88])
	*(($6 + [20])) = $8
	*($6 + [28]) = [0]
	*(($6 + [32])) = [0]
	*(($6 + [36])) = [0]
	$9 = *($2)
	$2 = ( *((($13 + [32]) + [36])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($2 + [32])
	$3 = (CASTING uint_64)(uint_32 $2)
	$2 = ($6 + [28])
	
.LOOP $label$33:
	$9 = ($9 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$33 }
	if ( ($9 == 0) ){ goto $label$31 }
	CALL $71($2, $9)
	$2 = *(($6 + [32]))
	$9 = *(($6 + [28]))
	goto $label$30 
	
.LABEL $label$32
	CALL $73($8, ($13 + [88]), $0, ($13 + [80]), ($13 + [32]))
	goto $label$29 
	
.LABEL $label$31
	$2 = [0]
	$9 = [0]
	
.LABEL $label$30
	*($13 + [388]) = $9
	*($13 + [384]) = $9
	*($13 + [392]) = $2
	*($13 + [400]) = ($13 + [384])
	*($13 + [408]) = ($13 + [32])
	CALL $72(($13 + [408]), ($13 + [400]))
	*(($9 = (($13 + [304]) + [40]))) = (*($9) + [40])
	
.LABEL $label$29
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$34 }
	CALL $155(*(($13 + [72])))
	
.LABEL $label$34
	*(($13 + [324])) = [86400]
	$3 = (int_64)0
	$10 = (int_64)59
	$9 = [592]
	$11 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$3 > (uint_64)(int_64)7) ){ goto $label$40 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$6 = ($6 + [165])
	goto $label$38 
	
.LABEL $label$40
	$12 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$36
	$9 = ($9 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$35 }
	*($13 + [32]) = (int_64)0
	*($13 + [40]) = ((int_64)$11 + (int_64)$1)
	$10 = *($13 + [32])
	$12 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$3 = ((int_64)$12 + (int_64)$10)
	*($13 + [32]) = $3
	*($13 + [40]) = ((int_64)*($13 + [40]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($3 <= $12)) : (uint_64)($3 <= $10) ))
	CALL $74(($13 + [88]), ($13 + [304]))
	$9 = *($13 + [88])
	CALL send_deferred(($13 + [32]), $1, $9, (*($13 + [92]) - $9), [0])
	$9 = *($13 + [88])
	if ( ($9 == 0) ){ goto $label$41 }
	*($13 + [92]) = $9
	CALL $155($9)
	
.LABEL $label$41
	CALL $75(($13 + [304]))
	$2 = *($13 + [160])
	if ( ($2 == 0) ){ goto $label$42 }
	$0 = ($13 + [164])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$44 }
	
.LOOP $label$45:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$46 }
	CALL $155($6)
	
.LABEL $label$46
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$45 }
	$9 = *(($13 + [160]))
	goto $label$43 
	
.LABEL $label$44
	$9 = $2
	
.LABEL $label$43
	*($0) = $2
	CALL $155($9)
	
.LABEL $label$42
	$2 = *($13 + [200])
	if ( ($2 == 0) ){ goto $label$47 }
	$0 = ($13 + [204])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$49 }
	
.LOOP $label$50:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$51 }
	CALL $155($6)
	
.LABEL $label$51
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$50 }
	$9 = *(($13 + [200]))
	goto $label$48 
	
.LABEL $label$49
	$9 = $2
	
.LABEL $label$48
	*($0) = $2
	CALL $155($9)
	
.LABEL $label$47
	$2 = *($13 + [240])
	if ( ($2 == 0) ){ goto $label$52 }
	$0 = ($13 + [244])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$54 }
	
.LOOP $label$55:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$56 }
	CALL $155($6)
	
.LABEL $label$56
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$55 }
	$9 = *(($13 + [240]))
	goto $label$53 
	
.LABEL $label$54
	$9 = $2
	
.LABEL $label$53
	*($0) = $2
	CALL $155($9)
	
.LABEL $label$52
	$2 = *($13 + [280])
	if ( ($2 == 0) ){ goto $label$57 }
	$0 = ($13 + [284])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$59 }
	
.LOOP $label$60:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$61 }
	CALL $155($6)
	
.LABEL $label$61
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$60 }
	$9 = *(($13 + [280]))
	goto $label$58 
	
.LABEL $label$59
	$9 = $2
	
.LABEL $label$58
	*($0) = $2
	CALL $155($9)
	
.LABEL $label$57
	*([0] + [4]) = ($13 + [416])
	(CASTING uint_32)(uint_64 $3)
}

void .FUNC _ZN5eosio5token11add_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [160])
	*([0] + [4]) = $8
	*($8 + [112]) = $1
	*((($8 + [72]) + [32])) = [0]
	*($8 + [80]) = $1
	*($8 + [88]) = (int_64)-1
	*($8 + [96]) = (int_64)0
	$6 = *($0)
	*($8 + [72]) = $6
	$5 = [0]
	$4 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$4) < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $48(($8 + [72]), $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($8 + [72])), [944])
	$1 = *($8 + [112])
	
.LABEL $label$1
	*($8 + [48]) = (int_64)-1
	*($8 + [56]) = [0]
	$6 = *($0)
	*($8 + [32]) = $6
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8
	*($8 + [40]) = $7)
	*(($8 + [60])) = [0]
	*((($8 + [32]) + [32])) = [0]
	$4 = CALL db_find_i64($6, $7, (int_64)3774689537475637248, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$4 = CALL $49(($8 + [32]), $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($8 + [32])), [944])
	*($8 + [28]) = $4
	*($8 + [24]) = ($8 + [32])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($8 + [28]) = [0]
	*($8 + [24]) = ($8 + [32])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($8) = $2
	*($8 + [12]) = $0
	*($8 + [4]) = ($8 + [24])
	*($8 + [8]) = ($8 + [32])
	*($8 + [16]) = ($8 + [112])
	CALL eosio_assert([1], [1072])
	CALL $52(($8 + [72]), $5, $8)
	$5 = *($8 + [56])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	*($8) = $2
	*($8 + [12]) = $0
	*($8 + [4]) = ($8 + [24])
	*($8 + [8]) = ($8 + [32])
	*($8 + [16]) = ($8 + [112])
	*($8 + [152]) = $3
	CALL eosio_assert(((int_64)*($8 + [72]) == (int_64)CALL $fimport$2()), [1008])
	*($8 + [132]) = $8
	*($8 + [128]) = ($8 + [72])
	*($8 + [136]) = ($8 + [152])
	*(($0 = CALL $154([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$5 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	
.LABEL $label$7
	CALL eosio_assert($5, [768])
	*($0 + [16]) = ($8 + [72])
	CALL $50(($8 + [128]), $0)
	*($8 + [144]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($8 + [128]) = $1)
	$5 = *($0 + [20])
	*($8 + [124]) = $5
	$4 = ($8 + [100])
	$2 = *($4)
	if ( ((uint_32)$2 >= (uint_32)*(($8 + [104]))) ){ goto $label$13 }
	*($2 + [8]) = $1
	*($2 + [16]) = $5
	*($8 + [144]) = [0]
	*($2) = $0
	*($4) = ($2 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $51(($8 + [96]), ($8 + [144]), ($8 + [128]), ($8 + [124]))
	
.LABEL $label$12
	$2 = *($8 + [144])
	*($8 + [144]) = [0]
	if ( ($2 == 0) ){ goto $label$14 }
	CALL $155($2)
	
.LABEL $label$14
	$5 = *($8 + [56])
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($8 + [60])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL $155($0)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($8 + [56]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $5
	
.LABEL $label$15
	*($4) = $5
	CALL $155($2)
	
.LABEL $label$2
	$5 = *($8 + [96])
	if ( ($5 == 0) ){ goto $label$19 }
	$4 = ($8 + [100])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$23 }
	CALL $155($0)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$22 }
	$2 = *(($8 + [96]))
	goto $label$20 
	
.LABEL $label$21
	$2 = $5
	
.LABEL $label$20
	*($4) = $5
	CALL $155($2)
	
.LABEL $label$19
	*([0] + [4]) = ($8 + [160])
}

void .FUNC _ZN5eosio5token28sub_unpledging_level_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*($6 + [88]) = $3
	*($6 + [64]) = (int_64)-1
	*($6 + [72]) = [0]
	*($6 + [48]) = *($0)
	*($6 + [56]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	*((($6 + [48]) + [28])) = [0]
	*((($6 + [48]) + [32])) = [0]
	$4 = CALL $45(($6 + [48]), $1, [1728])
	*($6 + [12]) = $4
	*($6 + [16]) = $2
	*($6 + [8]) = ($6 + [88])
	CALL $57(($6 + [48]), $4, ($6 + [8]))
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = [0]
	*($6 + [8]) = *($0)
	*($6 + [16]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	*((($6 + [8]) + [28])) = [0]
	*((($6 + [8]) + [32])) = [0]
	$2 = CALL $45(($6 + [8]), $1, [1728])
	if ( ((int_64)*($2 + [24]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [64]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [104]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [144]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [184]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [8]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [48]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [88]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [128]) != (int_64)0) ){ goto $label$1 }
	if ( ((int_64)*($2 + [168]) != (int_64)0) ){ goto $label$1 }
	CALL $58(($6 + [8]), $2)
	
.LABEL $label$1
	$4 = *($6 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $155($0)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$5 }
	$2 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$2 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL $155($2)
	
.LABEL $label$2
	$4 = *($6 + [72])
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($6 + [76])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $155($0)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($6 + [72]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $4
	
.LABEL $label$8
	*($5) = $4
	CALL $155($2)
	
.LABEL $label$7
	*([0] + [4]) = ($6 + [96])
}

int_32 .FUNC $45 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [248]) == (int_32)$0), [944])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3665743478920894880, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $60($0, $5)
	CALL eosio_assert(((int_32)*($6 + [248]) == (int_32)$0), [944])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $44($0, *($1))
	CALL $44($0, *($1 + [4]))
	CALL $155($1)
	
.LABEL $label$1
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $166 ()
{
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $96(*($1), ($0 + [32]))
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [880])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [768])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [1712])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1712])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1712])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN5eosio5token12reducesupplyENS_5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$6 = [0]
	$2 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$5 = $2)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [768])
	$7 = [0]
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $2
	$4 = [0]
	$6 = CALL db_find_i64($5, $2, (int_64)-4157508551318700032, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $89(($8 + [8]), $6)
	CALL eosio_assert(((int_32)*($4 + [72]) == (int_32)($8 + [8])), [944])
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [2672])
	$2 = *(($1 + [8]))
	$3 = *($1)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$7 = [0]
	
.LABEL $label$7
	CALL eosio_assert($7, [624])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2736])
	CALL eosio_assert(((int_64)$2 == (int_64)*($4 + [8])), [1968])
	*($8 + [4]) = $4
	*($8) = $1
	CALL $141(($8 + [8]), $4, $8)
	$1 = *($8 + [32])
	if ( ($1 == 0) ){ goto $label$12 }
	$7 = ($8 + [36])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $155($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$15 }
	$6 = *(($8 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $1
	
.LABEL $label$13
	*($7) = $1
	CALL $155($6)
	
.LABEL $label$12
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $6 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	*($0) = $1
	$3 = [0]
	*(($2 = ($0 + [12]))) = [0]
	*(($4 = ($0 + [16]))) = [0]
	*($0 + [8]) = $2
	$10 = [2852]
	$6 = ($0 + [8])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$2 }
	$11 = [21]
	goto $label$1 
	
.LABEL $label$2
	$11 = [3]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$147 
	
.LABEL $label$164
	$3 = *(($0 + [12]))
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$67 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$163
	$8 = $3
	if ( ($3 == 0) ){ goto $label$52 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$162
	$9 = $8
	$8 = *($9 + [4])
	if ( $8 ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$161
	$9 = $2
	if ( $3 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$160
	$8 = $2
	$11 = [20]
	goto $label$3 
	
.LABEL $label$159
	$9 = *($8 + [8])
	$5 = ((int_32)*($9) == (int_32)$8)
	$8 = $9
	if ( $5 ){ goto $label$51 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$158
	$8 = *($10)
	if ( ((int_32)*($9 + [16]) >= (int_32)$8) ){ goto $label$50 }
	$11 = [17]
	goto $label$3 
	
.LABEL $label$157
	if ( ($3 == 0) ){ goto $label$66 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$156
	$3 = ($9 + [4])
	if ( *($3) ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$155
	$5 = $2
	if ( $3 ){ goto $label$63 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$154
	$9 = $2
	$3 = $2
	if ( *($3) ){ goto $label$56 }
	goto $label$57 
	
.LABEL $label$153
	$3 = $9
	$11 = [7]
	goto $label$3 
	
.LABEL $label$152
	$9 = *($3 + [16])
	if ( ((int_32)$8 >= (int_32)$9) ){ goto $label$49 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$151
	$5 = $3
	$9 = *($3)
	if ( $9 ){ goto $label$58 }
	goto $label$59 
	
.LABEL $label$150
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$48 }
	$11 = [13]
	goto $label$3 
	
.LABEL $label$149
	$5 = ($3 + [4])
	$9 = *($3 + [4])
	if ( $9 ){ goto $label$47 }
	$11 = [9]
	goto $label$3 
	
.LABEL $label$148
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$147
	$9 = $3
	if ( *($3) ){ goto $label$60 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$146
	*(($8 = CALL $154([24])) + [16 align=4]) = *($10)
	*($8) = (int_64)0
	*($8 + [8]) = $9
	*($3) = $8
	$9 = *(*($6))
	if ( ($9 == 0) ){ goto $label$46 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$145
	*($6) = $9
	$8 = *($3)
	$11 = [12]
	goto $label$3 
	
.LABEL $label$144
	CALL $125(*(($0 + [12])), $8)
	*($4) = (*($4) + [1])
	$11 = [1]
	goto $label$3 
	
.LABEL $label$143
	$10 = ($10 + [8])
	if ( ((int_32)$10 != (int_32)[2932]) ){ goto $label$55 }
	$11 = [22]
	goto $label$3 
	
.LABEL $label$142
	$3 = [0]
	*(($4 = ($0 + [28]))) = [0]
	*(($2 = ($0 + [24]))) = [0]
	*($0 + [20]) = $2
	$10 = [2936]
	$6 = ($0 + [20])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$141
	$3 = *(($0 + [24]))
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$78 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$140
	$8 = $3
	if ( ($3 == 0) ){ goto $label$39 }
	$11 = [24]
	goto $label$3 
	
.LABEL $label$139
	$9 = $8
	$8 = *($9 + [4])
	if ( $8 ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$138
	$9 = $2
	if ( $3 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$137
	$8 = $2
	$11 = [74]
	goto $label$3 
	
.LABEL $label$136
	$9 = *($8 + [8])
	$5 = ((int_32)*($9) == (int_32)$8)
	$8 = $9
	if ( $5 ){ goto $label$38 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$135
	$8 = *($10)
	if ( ((int_32)*($9 + [16]) >= (int_32)$8) ){ goto $label$37 }
	$11 = [72]
	goto $label$3 
	
.LABEL $label$134
	if ( ($3 == 0) ){ goto $label$77 }
	$11 = [34]
	goto $label$3 
	
.LABEL $label$133
	$3 = ($9 + [4])
	if ( *($3) ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$132
	if ( ($3 == 0) ){ goto $label$74 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$131
	$5 = $2
	goto $label$36 
	
.LABEL $label$130
	$5 = $3
	$3 = $9
	$11 = [28]
	goto $label$3 
	
.LABEL $label$129
	$9 = *($3 + [16])
	if ( ((int_32)$8 >= (int_32)$9) ){ goto $label$35 }
	$11 = [70]
	goto $label$3 
	
.LABEL $label$128
	$9 = *($3)
	if ( $9 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$127
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$34 }
	$11 = [66]
	goto $label$3 
	
.LABEL $label$126
	$5 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ($9 == 0) ){ goto $label$7 }
	$11 = [67]
	goto $label$3 
	
.LABEL $label$125
	$3 = $5
	goto $label$4 
	
.LABEL $label$124
	$9 = $2
	$3 = $2
	if ( *($3) ){ goto $label$33 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$123
	$8 = CALL $154([32])
	$1 = *(($10 + [8]))
	$7 = *($10)
	*($8) = (int_64)0
	*(($8 + [24])) = $1
	*($8 + [16]) = $7
	*($8 + [8]) = $9
	*($3) = $8
	$9 = *(*($6))
	if ( ($9 == 0) ){ goto $label$28 }
	$11 = [36]
	goto $label$3 
	
.LABEL $label$122
	*($6) = $9
	$8 = *($3)
	$11 = [37]
	goto $label$3 
	
.LABEL $label$121
	CALL $125(*(($0 + [24])), $8)
	*($4) = (*($4) + [1])
	$11 = [31]
	goto $label$3 
	
.LABEL $label$120
	$10 = ($10 + [16])
	if ( ((int_32)$10 != (int_32)[2984]) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$119
	$9 = $3
	if ( *($3) ){ goto $label$68 }
	goto $label$69 
	
.LABEL $label$118
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$117
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$70 }
	goto $label$71 
	
.LABEL $label$116
	$3 = [0]
	*(($6 = ($0 + [40]))) = [0]
	*(($2 = ($0 + [36]))) = [0]
	*($0 + [32]) = $2
	$10 = [2984]
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$115
	$3 = *(($0 + [36]))
	if ( ((int_32)*(($0 + [32])) == (int_32)$2) ){ goto $label$89 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$114
	$8 = $3
	if ( ($3 == 0) ){ goto $label$23 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$113
	$9 = $8
	$8 = *($9 + [4])
	if ( $8 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$112
	$9 = $2
	if ( $3 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$111
	$8 = $2
	$11 = [65]
	goto $label$3 
	
.LABEL $label$110
	$9 = *($8 + [8])
	$5 = ((int_32)*($9) == (int_32)$8)
	$8 = $9
	if ( $5 ){ goto $label$22 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$109
	$8 = *($10)
	if ( ((int_32)*($9 + [16]) >= (int_32)$8) ){ goto $label$21 }
	$11 = [63]
	goto $label$3 
	
.LABEL $label$108
	if ( ($3 == 0) ){ goto $label$88 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$107
	$3 = ($9 + [4])
	if ( *($3) ){ goto $label$86 }
	goto $label$87 
	
.LABEL $label$106
	if ( ($3 == 0) ){ goto $label$85 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$105
	$5 = $2
	goto $label$20 
	
.LABEL $label$104
	$5 = $3
	$3 = $9
	$11 = [45]
	goto $label$3 
	
.LABEL $label$103
	$9 = *($3 + [16])
	if ( ((int_32)$8 >= (int_32)$9) ){ goto $label$19 }
	$11 = [61]
	goto $label$3 
	
.LABEL $label$102
	$9 = *($3)
	if ( $9 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$101
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$18 }
	$11 = [57]
	goto $label$3 
	
.LABEL $label$100
	$5 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ($9 == 0) ){ goto $label$11 }
	$11 = [58]
	goto $label$3 
	
.LABEL $label$99
	$3 = $5
	goto $label$8 
	
.LABEL $label$98
	$9 = $2
	$3 = $2
	if ( *($3) ){ goto $label$17 }
	$11 = [52]
	goto $label$3 
	
.LABEL $label$97
	$8 = CALL $154([32])
	$1 = *(($10 + [8]))
	$7 = *($10)
	*($8) = (int_64)0
	*(($8 + [24])) = $1
	*($8 + [16]) = $7
	*($8 + [8]) = $9
	*($3) = $8
	$9 = ($0 + [32])
	$5 = *(*($9))
	if ( ($5 == 0) ){ goto $label$12 }
	$11 = [53]
	goto $label$3 
	
.LABEL $label$96
	*($9) = $5
	$8 = *($3)
	$11 = [54]
	goto $label$3 
	
.LABEL $label$95
	CALL $125(*(($0 + [36])), $8)
	*($6) = (*($6) + [1])
	$11 = [48]
	goto $label$3 
	
.LABEL $label$94
	$10 = ($10 + [16])
	if ( ((int_32)$10 != (int_32)[3096]) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$93
	$9 = $3
	if ( *($3) ){ goto $label$79 }
	goto $label$80 
	
.LABEL $label$92
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$83 }
	goto $label$84 
	
.LABEL $label$91
	$9 = $3
	$3 = $5
	if ( *($3) ){ goto $label$81 }
	goto $label$82 
	
.LABEL $label$90
	return $0
	
.LABEL $label$89
	$11 = [50]
	goto $label$3 
	
.LABEL $label$88
	$11 = [55]
	goto $label$3 
	
.LABEL $label$87
	$11 = [52]
	goto $label$3 
	
.LABEL $label$86
	$11 = [48]
	goto $label$3 
	
.LABEL $label$85
	$11 = [55]
	goto $label$3 
	
.LABEL $label$84
	$11 = [52]
	goto $label$3 
	
.LABEL $label$83
	$11 = [48]
	goto $label$3 
	
.LABEL $label$82
	$11 = [52]
	goto $label$3 
	
.LABEL $label$81
	$11 = [48]
	goto $label$3 
	
.LABEL $label$80
	$11 = [52]
	goto $label$3 
	
.LABEL $label$79
	$11 = [48]
	goto $label$3 
	
.LABEL $label$78
	$11 = [33]
	goto $label$3 
	
.LABEL $label$77
	$11 = [38]
	goto $label$3 
	
.LABEL $label$76
	$11 = [35]
	goto $label$3 
	
.LABEL $label$75
	$11 = [31]
	goto $label$3 
	
.LABEL $label$74
	$11 = [38]
	goto $label$3 
	
.LABEL $label$73
	$11 = [35]
	goto $label$3 
	
.LABEL $label$72
	$11 = [31]
	goto $label$3 
	
.LABEL $label$71
	$11 = [35]
	goto $label$3 
	
.LABEL $label$70
	$11 = [31]
	goto $label$3 
	
.LABEL $label$69
	$11 = [35]
	goto $label$3 
	
.LABEL $label$68
	$11 = [31]
	goto $label$3 
	
.LABEL $label$67
	$11 = [21]
	goto $label$3 
	
.LABEL $label$66
	$11 = [16]
	goto $label$3 
	
.LABEL $label$65
	$11 = [10]
	goto $label$3 
	
.LABEL $label$64
	$11 = [1]
	goto $label$3 
	
.LABEL $label$63
	$11 = [7]
	goto $label$3 
	
.LABEL $label$62
	$11 = [10]
	goto $label$3 
	
.LABEL $label$61
	$11 = [1]
	goto $label$3 
	
.LABEL $label$60
	$11 = [1]
	goto $label$3 
	
.LABEL $label$59
	$11 = [0]
	goto $label$3 
	
.LABEL $label$58
	$11 = [14]
	goto $label$3 
	
.LABEL $label$57
	$11 = [10]
	goto $label$3 
	
.LABEL $label$56
	$11 = [1]
	goto $label$3 
	
.LABEL $label$55
	$11 = [2]
	goto $label$3 
	
.LABEL $label$54
	$11 = [5]
	goto $label$3 
	
.LABEL $label$53
	$11 = [4]
	goto $label$3 
	
.LABEL $label$52
	$11 = [19]
	goto $label$3 
	
.LABEL $label$51
	$11 = [20]
	goto $label$3 
	
.LABEL $label$50
	$11 = [6]
	goto $label$3 
	
.LABEL $label$49
	$11 = [8]
	goto $label$3 
	
.LABEL $label$48
	$11 = [9]
	goto $label$3 
	
.LABEL $label$47
	$11 = [14]
	goto $label$3 
	
.LABEL $label$46
	$11 = [12]
	goto $label$3 
	
.LABEL $label$45
	$11 = [16]
	goto $label$3 
	
.LABEL $label$44
	$11 = [18]
	goto $label$3 
	
.LABEL $label$43
	$11 = [33]
	goto $label$3 
	
.LABEL $label$42
	$11 = [23]
	goto $label$3 
	
.LABEL $label$41
	$11 = [25]
	goto $label$3 
	
.LABEL $label$40
	$11 = [24]
	goto $label$3 
	
.LABEL $label$39
	$11 = [73]
	goto $label$3 
	
.LABEL $label$38
	$11 = [74]
	goto $label$3 
	
.LABEL $label$37
	$11 = [26]
	goto $label$3 
	
.LABEL $label$36
	$11 = [28]
	goto $label$3 
	
.LABEL $label$35
	$11 = [29]
	goto $label$3 
	
.LABEL $label$34
	$11 = [30]
	goto $label$3 
	
.LABEL $label$33
	$11 = [31]
	goto $label$3 
	
.LABEL $label$32
	$11 = [39]
	goto $label$3 
	
.LABEL $label$31
	$11 = [32]
	goto $label$3 
	
.LABEL $label$30
	$11 = [38]
	goto $label$3 
	
.LABEL $label$29
	$11 = [34]
	goto $label$3 
	
.LABEL $label$28
	$11 = [37]
	goto $label$3 
	
.LABEL $label$27
	$11 = [50]
	goto $label$3 
	
.LABEL $label$26
	$11 = [40]
	goto $label$3 
	
.LABEL $label$25
	$11 = [42]
	goto $label$3 
	
.LABEL $label$24
	$11 = [41]
	goto $label$3 
	
.LABEL $label$23
	$11 = [64]
	goto $label$3 
	
.LABEL $label$22
	$11 = [65]
	goto $label$3 
	
.LABEL $label$21
	$11 = [43]
	goto $label$3 
	
.LABEL $label$20
	$11 = [45]
	goto $label$3 
	
.LABEL $label$19
	$11 = [46]
	goto $label$3 
	
.LABEL $label$18
	$11 = [47]
	goto $label$3 
	
.LABEL $label$17
	$11 = [48]
	goto $label$3 
	
.LABEL $label$16
	$11 = [56]
	goto $label$3 
	
.LABEL $label$15
	$11 = [49]
	goto $label$3 
	
.LABEL $label$14
	$11 = [55]
	goto $label$3 
	
.LABEL $label$13
	$11 = [51]
	goto $label$3 
	
.LABEL $label$12
	$11 = [54]
	goto $label$3 
	
.LABEL $label$11
	$11 = [60]
	goto $label$3 
	
.LABEL $label$10
	$11 = [62]
	goto $label$3 
	
.LABEL $label$9
	$11 = [59]
	goto $label$3 
	
.LABEL $label$8
	$11 = [59]
	goto $label$3 
	
.LABEL $label$7
	$11 = [69]
	goto $label$3 
	
.LABEL $label$6
	$11 = [71]
	goto $label$3 
	
.LABEL $label$5
	$11 = [68]
	goto $label$3 
	
.LABEL $label$4
	$11 = [68]
	goto $label$3 
	return $11
}

void .FUNC _ZN5eosio5token6createEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$8 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$7 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [768])
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$8 = [0]
	$7 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [2768])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [2784])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$7 = *($0)
	*($9 + [8]) = $7
	*($9 + [16]) = $4
	$8 = CALL db_find_i64($7, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $89(($9 + [8]), $8) + [72]) == (int_32)($9 + [8])), [944])
	$8 = [0]
	goto $label$11 
	
.LABEL $label$12
	$8 = [1]
	
.LABEL $label$11
	CALL eosio_assert($8, [2816])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$2()), [1008])
	$8 = CALL $154([88])
	CALL $90($8)
	*($8 + [72]) = ($9 + [8])
	*($8 + [8]) = $3
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	*($8 + [40]) = $3
	*($8 + [56]) = $3
	*($8 + [48]) = (int_64)1000000
	*($8 + [64]) = $1
	*($9 + [136]) = (($9 + [48]) + [72])
	*($9 + [132]) = ($9 + [48])
	*($9 + [128]) = ($9 + [48])
	*($9 + [144]) = ($9 + [128])
	*($9 + [156]) = ($8 + [16])
	*($9 + [152]) = $8
	*($9 + [160]) = ($8 + [32])
	*($9 + [164]) = ($8 + [48])
	*($9 + [168]) = ($8 + [64])
	CALL $69(($9 + [152]), ($9 + [144]))
	$7 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4157508551318700032, $4, $7), ($9 + [48]), [72]
	*($8 + [76]) = $6)
	$2 = (($9 + [8]) + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$13 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($9 + [152]) = $8
	$7 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	*($9 + [128]) = $6
	$2 = *((($9 + [8]) + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [40]))) ){ goto $label$15 }
	*($2 + [8]) = $7
	*($2 + [16]) = $6
	*($9 + [152]) = [0]
	*($2) = $8
	*(($9 + [36])) = ($2 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $92(($9 + [32]), ($9 + [152]), ($9 + [48]), ($9 + [128]))
	
.LABEL $label$14
	$8 = *($9 + [152])
	*($9 + [152]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $155($8)
	
.LABEL $label$16
	$6 = *($9 + [32])
	if ( ($6 == 0) ){ goto $label$17 }
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $155($2)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $6
	
.LABEL $label$18
	*($0) = $6
	CALL $155($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [176])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [432])
	*([0] + [4]) = $9
	CALL prints([16])
	CALL printn($0)
	CALL prints([80])
	CALL printn($1)
	CALL prints([96])
	CALL printn($2)
	CALL prints([112])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [128]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [144]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [160])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [224]
	$7 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$22 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$18
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [240]
	$7 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$28 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [256]
	$7 = (int_64)0
	
.LOOP $label$29:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$30 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$30
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [272]
	$7 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$38 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$3 = ($3 + [165])
	goto $label$36 
	
.LABEL $label$38
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$34
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$33 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [288]
	$7 = (int_64)0
	
.LOOP $label$39:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$40 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$40
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$39 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [304]
	$7 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$48 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$48
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [320]
	$7 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$54 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$54
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$49 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [336]
	$7 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$60 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$3 = ($3 + [165])
	goto $label$58 
	
.LABEL $label$60
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$56
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$55 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$66 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$3 = ($3 + [165])
	goto $label$64 
	
.LABEL $label$66
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$62
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$61 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [368]
	$7 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$72 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$3 = ($3 + [165])
	goto $label$70 
	
.LABEL $label$72
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$68
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$67 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [384]
	$7 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$78 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$3 = ($3 + [165])
	goto $label$76 
	
.LABEL $label$78
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$74
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$73 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [400]
	$7 = (int_64)0
	
.LOOP $label$79:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$80 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$3 = ($3 + [165])
	goto $label$81 
	
.LABEL $label$82
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$80
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$79 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [416]
	$7 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$88 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$3 = ($3 + [165])
	goto $label$86 
	
.LABEL $label$88
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$84
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$83 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [432]
	$7 = (int_64)0
	
.LOOP $label$89:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$94 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$3 = ($3 + [165])
	goto $label$92 
	
.LABEL $label$94
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$93
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$91
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$90
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$89 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [448]
	$7 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$100 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$3 = ($3 + [165])
	goto $label$98 
	
.LABEL $label$100
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$96
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$95 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [464]
	$7 = (int_64)0
	
.LOOP $label$101:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$106 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$105 }
	$3 = ($3 + [165])
	goto $label$104 
	
.LABEL $label$106
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$105
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$104
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$103
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$102
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$101 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [480]
	$7 = (int_64)0
	
.LOOP $label$107:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$112 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$3 = ($3 + [165])
	goto $label$110 
	
.LABEL $label$112
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$111
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$109
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$108
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$107 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [496]
	$7 = (int_64)0
	
.LOOP $label$113:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$118 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$117 }
	$3 = ($3 + [165])
	goto $label$116 
	
.LABEL $label$118
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$115 }
	goto $label$114 
	
.LABEL $label$117
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$116
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$115
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$114
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$113 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [512]
	$7 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$124 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$3 = ($3 + [165])
	goto $label$122 
	
.LABEL $label$124
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$120
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$119 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [528]
	$7 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$130 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$3 = ($3 + [165])
	goto $label$128 
	
.LABEL $label$130
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$126
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$125 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [544]
	$7 = (int_64)0
	
.LOOP $label$131:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$132 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$134 }
	$3 = ($3 + [165])
	goto $label$133 
	
.LABEL $label$134
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$133
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$132
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$131 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [560]
	$7 = (int_64)0
	
.LOOP $label$135:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$136 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$138 }
	$3 = ($3 + [165])
	goto $label$137 
	
.LABEL $label$138
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$137
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$136
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$135 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [576]
	$7 = (int_64)0
	
.LOOP $label$139:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$144 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$3 = ($3 + [165])
	goto $label$142 
	
.LABEL $label$144
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$141
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$140
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$139 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [592]
	$7 = (int_64)0
	
.LOOP $label$145:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$150 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$149 }
	$3 = ($3 + [165])
	goto $label$148 
	
.LABEL $label$150
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$149
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$148
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$147
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$146
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$145 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [608]
	$7 = (int_64)0
	
.LOOP $label$151:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$156 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$155 }
	$3 = ($3 + [165])
	goto $label$154 
	
.LABEL $label$156
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$153 }
	goto $label$152 
	
.LABEL $label$155
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$154
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$153
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$152
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$151 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	$4 = CALL $6(($9 + [384]), $0)
	if ( ((int_64)$2 > (int_64)4851652458868551167) ){ goto $label$180 }
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$179 }
	if ( ((int_64)$2 > (int_64)-5003383987156436689) ){ goto $label$177 }
	if ( ((int_64)$2 == (int_64)-8281826397301604352) ){ goto $label$173 }
	if ( ((int_64)$2 == (int_64)-7807295961876660224) ){ goto $label$172 }
	if ( ((int_64)$2 != (int_64)-7807295956805582848) ){ goto $label$157 }
	*($9 + [316]) = [0]
	*($9 + [312]) = [1]
	*($9 + [64 align=4]) = *($9 + [312])
	CALL $12($4, ($9 + [64]))
	goto $label$157 
	
.LABEL $label$180
	if ( ((int_64)$2 > (int_64)5373819537648517119) ){ goto $label$178 }
	if ( ((int_64)$2 > (int_64)4851652672400392191) ){ goto $label$176 }
	if ( ((int_64)$2 == (int_64)4851652458868551168) ){ goto $label$171 }
	if ( ((int_64)$2 == (int_64)4851652482348089344) ){ goto $label$170 }
	if ( ((int_64)$2 != (int_64)4851652602186870272) ){ goto $label$157 }
	*($9 + [332]) = [0]
	*($9 + [328]) = [2]
	*($9 + [48 align=4]) = *($9 + [328])
	CALL $17($4, ($9 + [48]))
	goto $label$157 
	
.LABEL $label$179
	if ( ((int_64)$2 > (int_64)-3106564264722016097) ){ goto $label$175 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$169 }
	if ( ((int_64)$2 == (int_64)-3108281320141225984) ){ goto $label$168 }
	if ( ((int_64)$2 != (int_64)-3108281320131821568) ){ goto $label$157 }
	*($9 + [196]) = [0]
	*($9 + [192]) = [3]
	*($9 + [184 align=4]) = *($9 + [192])
	CALL $39($4, ($9 + [184]))
	goto $label$157 
	
.LABEL $label$178
	if ( ((int_64)$2 > (int_64)6610032281588334591) ){ goto $label$174 }
	if ( ((int_64)$2 == (int_64)5373819537648517120) ){ goto $label$167 }
	if ( ((int_64)$2 == (int_64)5382254363876267312) ){ goto $label$166 }
	if ( ((int_64)$2 != (int_64)6609974361712492544) ){ goto $label$157 }
	*($9 + [300]) = [0]
	*($9 + [296]) = [4]
	*($9 + [80 align=4]) = *($9 + [296])
	CALL $10($4, ($9 + [80]))
	goto $label$157 
	
.LABEL $label$177
	if ( ((int_64)$2 == (int_64)-5003383987156436688) ){ goto $label$165 }
	if ( ((int_64)$2 == (int_64)-5002474256040369184) ){ goto $label$164 }
	if ( ((int_64)$2 != (int_64)-3617352132944674816) ){ goto $label$157 }
	*($9 + [348]) = [0]
	*($9 + [344]) = [5]
	*($9 + [32 align=4]) = *($9 + [344])
	CALL $15($4, ($9 + [32]))
	goto $label$157 
	
.LABEL $label$176
	if ( ((int_64)$2 == (int_64)4851652672400392192) ){ goto $label$163 }
	if ( ((int_64)$2 == (int_64)4923678490122780672) ){ goto $label$162 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$157 }
	*($9 + [380]) = [0]
	*($9 + [376]) = [6]
	*($9) = *($9 + [376])
	CALL $8($4, $9)
	goto $label$157 
	
.LABEL $label$175
	if ( ((int_64)$2 == (int_64)-3106564264722016096) ){ goto $label$161 }
	if ( ((int_64)$2 == (int_64)4730643280948101120) ){ goto $label$160 }
	if ( ((int_64)$2 != (int_64)4849591927003789616) ){ goto $label$157 }
	*($9 + [228]) = [0]
	*($9 + [224]) = [7]
	*($9 + [152 align=4]) = *($9 + [224])
	CALL $36($4, ($9 + [152]))
	goto $label$157 
	
.LABEL $label$174
	if ( ((int_64)$2 == (int_64)6610032281588334592) ){ goto $label$159 }
	if ( ((int_64)$2 == (int_64)8406652927137021952) ){ goto $label$158 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$157 }
	*($9 + [364]) = [0]
	*($9 + [360]) = [8]
	*($9 + [16 align=4]) = *($9 + [360])
	CALL $12($4, ($9 + [16]))
	goto $label$157 
	
.LABEL $label$173
	*($9 + [244]) = [0]
	*($9 + [240]) = [9]
	*($9 + [136 align=4]) = *($9 + [240])
	CALL $33($4, ($9 + [136]))
	goto $label$157 
	
.LABEL $label$172
	*($9 + [324]) = [0]
	*($9 + [320]) = [10]
	*($9 + [56 align=4]) = *($9 + [320])
	CALL $20($4, ($9 + [56]))
	goto $label$157 
	
.LABEL $label$171
	*($9 + [340]) = [0]
	*($9 + [336]) = [11]
	*($9 + [40 align=4]) = *($9 + [336])
	CALL $17($4, ($9 + [40]))
	goto $label$157 
	
.LABEL $label$170
	*($9 + [268]) = [0]
	*($9 + [264]) = [12]
	*($9 + [112 align=4]) = *($9 + [264])
	CALL $15($4, ($9 + [112]))
	goto $label$157 
	
.LABEL $label$169
	*($9 + [308]) = [0]
	*($9 + [304]) = [13]
	*($9 + [72 align=4]) = *($9 + [304])
	CALL $23($4, ($9 + [72]))
	goto $label$157 
	
.LABEL $label$168
	*($9 + [204]) = [0]
	*($9 + [200]) = [14]
	*($9 + [176 align=4]) = *($9 + [200])
	CALL $39($4, ($9 + [176]))
	goto $label$157 
	
.LABEL $label$167
	*($9 + [276]) = [0]
	*($9 + [272]) = [15]
	*($9 + [104 align=4]) = *($9 + [272])
	CALL $12($4, ($9 + [104]))
	goto $label$157 
	
.LABEL $label$166
	*($9 + [356]) = [0]
	*($9 + [352]) = [16]
	*($9 + [24 align=4]) = *($9 + [352])
	CALL $12($4, ($9 + [24]))
	goto $label$157 
	
.LABEL $label$165
	*($9 + [220]) = [0]
	*($9 + [216]) = [17]
	*($9 + [160 align=4]) = *($9 + [216])
	CALL $20($4, ($9 + [160]))
	goto $label$157 
	
.LABEL $label$164
	*($9 + [372]) = [0]
	*($9 + [368]) = [18]
	*($9 + [8 align=4]) = *($9 + [368])
	CALL $10($4, ($9 + [8]))
	goto $label$157 
	
.LABEL $label$163
	*($9 + [260]) = [0]
	*($9 + [256]) = [19]
	*($9 + [120 align=4]) = *($9 + [256])
	CALL $30($4, ($9 + [120]))
	goto $label$157 
	
.LABEL $label$162
	*($9 + [252]) = [0]
	*($9 + [248]) = [20]
	*($9 + [128 align=4]) = *($9 + [248])
	CALL $8($4, ($9 + [128]))
	goto $label$157 
	
.LABEL $label$161
	*($9 + [236]) = [0]
	*($9 + [232]) = [21]
	*($9 + [144 align=4]) = *($9 + [232])
	CALL $33($4, ($9 + [144]))
	goto $label$157 
	
.LABEL $label$160
	*($9 + [284]) = [0]
	*($9 + [280]) = [22]
	*($9 + [96 align=4]) = *($9 + [280])
	CALL $8($4, ($9 + [96]))
	goto $label$157 
	
.LABEL $label$159
	*($9 + [292]) = [0]
	*($9 + [288]) = [23]
	*($9 + [88 align=4]) = *($9 + [288])
	CALL $10($4, ($9 + [88]))
	goto $label$157 
	
.LABEL $label$158
	*($9 + [212]) = [0]
	*($9 + [208]) = [24]
	*($9 + [168 align=4]) = *($9 + [208])
	CALL $39($4, ($9 + [168]))
	
.LABEL $label$157
	CALL $42(($4 + [32]), *(($4 + [36])))
	CALL $43(($4 + [20]), *(($4 + [24])))
	CALL $44(($4 + [8]), *(($4 + [12])))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [432])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN5eosio5token10tradetokenEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [576])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	CALL eosio_assert([1], [880])
	$3 = [0]
	$8 = (int_64)21334
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	$6 = [0]
	*((($12 + [392]) + [32])) = [0]
	*($12 + [400]) = (int_64)21334
	*($12 + [408]) = (int_64)-1
	*($12 + [416]) = (int_64)0
	*($12 + [392]) = *($0)
	$10 = CALL $65(($12 + [392]), (int_64)21334, [1936])
	*((($12 + [352]) + [32])) = [0]
	*($12 + [360]) = (int_64)21334
	*($12 + [368]) = (int_64)-1
	*($12 + [376]) = (int_64)0
	$8 = *($0)
	*($12 + [352]) = $8
	$5 = [0]
	$3 = CALL db_find_i64($8, (int_64)21334, (int_64)8406652938591240192, (int_64)21334)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $66(($12 + [352]), $3)
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [944])
	
.LABEL $label$6
	*((($12 + [312]) + [32])) = [0]
	*($12 + [328]) = (int_64)-1
	*($12 + [336]) = (int_64)0
	$8 = *($0)
	*($12 + [312]) = $8
	*($12 + [320]) = $1
	$3 = CALL db_find_i64($8, $1, (int_64)3607749779137757184, (int_64)21334)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $48(($12 + [312]), $3)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($12 + [312])), [944])
	
.LABEL $label$7
	CALL eosio_assert([1], [880])
	$8 = (int_64)21334
	$11 = (int_64)5461508
	$3 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$9 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$9 = [0]
	
.LABEL $label$8
	CALL eosio_assert($9, [768])
	if ( ($6 == 0) ){ goto $label$14 }
	$2 = (int_64)0
	if ( ((int_64)*($6) < (int_64)1) ){ goto $label$13 }
	$3 = ($6 + [8])
	$8 = *($3)
	*((($12 + [296]) + [8])) = $8
	$11 = *($6)
	*((($12 + [96]) + [8])) = $8
	*($12 + [296]) = $11
	*($12 + [100]) = *($12 + [300])
	*($12 + [96]) = *($12 + [296])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($12 + [96]))
	$11 = *($3)
	$2 = *($6)
	goto $label$13 
	
.LABEL $label$14
	$2 = (int_64)0
	
.LABEL $label$13
	CALL eosio_assert([1], [880])
	$8 = (int_64)21334
	$3 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$9 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$9 = [0]
	
.LABEL $label$15
	CALL eosio_assert($9, [768])
	*(($12 + [288])) = [0]
	*($12 + [272]) = (int_64)-1
	$8 = (int_64)0
	*($12 + [280]) = (int_64)0
	$4 = *($0)
	*($12 + [256]) = $4
	*($12 + [264]) = (int_64)21334
	$3 = CALL db_find_i64($4, (int_64)21334, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$3 = CALL $60(($12 + [256]), $3)
	CALL eosio_assert(((int_32)*($3 + [248]) == (int_32)($12 + [256])), [944])
	if ( ((int_64)*($3 + [8]) < (int_64)1) ){ goto $label$22 }
	$9 = ($3 + [16])
	$8 = *($9)
	*((($12 + [240]) + [8])) = $8
	$6 = ($3 + [8])
	$4 = *($6)
	*((($12 + [80]) + [8])) = $8
	*($12 + [240]) = $4
	*($12 + [84]) = *($12 + [244])
	*($12 + [80]) = *($12 + [240])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($12 + [80]), (int_64)1)
	CALL eosio_assert(((int_64)*($9) == (int_64)5461508), [1232])
	$8 = *($6)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [1120])
	CALL eosio_assert(((int_64)*($12 + [352]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($5 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)$4), [1792])
	$7 = (int_64)
	*($5) = $7(*($5) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [536]) = (($12 + [432]) + [96])
	*($12 + [532]) = ($12 + [432])
	*($12 + [528]) = ($12 + [432])
	*($12 + [552]) = ($12 + [528])
	*($12 + [132]) = ($5 + [16])
	*($12 + [128]) = $5
	*($12 + [136]) = ($5 + [32])
	*($12 + [140]) = ($5 + [48])
	*($12 + [144]) = ($5 + [64])
	*($12 + [148]) = ($5 + [80])
	CALL $83(($12 + [128]), ($12 + [552]))
	CALL db_update_i64(*($5 + [100]), (int_64)0, ($12 + [432]), [96])
	$9 = (($12 + [352]) + [16])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$21 }
	*($9) = ((int_64)$4 + (int_64)1)
	goto $label$21 
	
.LABEL $label$22
	$8 = (int_64)0
	
.LABEL $label$21
	if ( ((int_64)*($3 + [48]) < (int_64)1) ){ goto $label$23 }
	$9 = ($3 + [56])
	$4 = *($9)
	*((($12 + [224]) + [8])) = $4
	$6 = ($3 + [48])
	$7 = *($6)
	*((($12 + [64]) + [8])) = $4
	*($12 + [224]) = $7
	*($12 + [68]) = *($12 + [228])
	*($12 + [64]) = *($12 + [224])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($12 + [64]), (int_64)2)
	CALL eosio_assert(((int_64)*($9) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [1120])
	CALL eosio_assert(((int_64)*($12 + [352]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($5 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)*(($5 + [24]))), [1792])
	$7 = (int_64)
	*($5 + [16]) = $7(*($5 + [16]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [16]) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [536]) = (($12 + [432]) + [96])
	*($12 + [532]) = ($12 + [432])
	*($12 + [528]) = ($12 + [432])
	*($12 + [552]) = ($12 + [528])
	*($12 + [132]) = ($5 + [16])
	*($12 + [128]) = $5
	*($12 + [136]) = ($5 + [32])
	*($12 + [140]) = ($5 + [48])
	*($12 + [144]) = ($5 + [64])
	*($12 + [148]) = ($5 + [80])
	CALL $83(($12 + [128]), ($12 + [552]))
	CALL db_update_i64(*($5 + [100]), (int_64)0, ($12 + [432]), [96])
	$9 = (($12 + [352]) + [16])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$23 }
	*($9) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$23
	if ( ((int_64)*($3 + [88]) < (int_64)1) ){ goto $label$24 }
	$9 = ($3 + [96])
	$4 = *($9)
	*((($12 + [208]) + [8])) = $4
	$6 = ($3 + [88])
	$7 = *($6)
	*((($12 + [48]) + [8])) = $4
	*($12 + [208]) = $7
	*($12 + [52]) = *($12 + [212])
	*($12 + [48]) = *($12 + [208])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($12 + [48]), (int_64)3)
	CALL eosio_assert(((int_64)*($9) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [1120])
	CALL eosio_assert(((int_64)*($12 + [352]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($5 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)*(($5 + [40]))), [1792])
	$7 = (int_64)
	*($5 + [32]) = $7(*($5 + [32]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [32]) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [536]) = (($12 + [432]) + [96])
	*($12 + [532]) = ($12 + [432])
	*($12 + [528]) = ($12 + [432])
	*($12 + [552]) = ($12 + [528])
	*($12 + [132]) = ($5 + [16])
	*($12 + [128]) = $5
	*($12 + [136]) = ($5 + [32])
	*($12 + [140]) = ($5 + [48])
	*($12 + [144]) = ($5 + [64])
	*($12 + [148]) = ($5 + [80])
	CALL $83(($12 + [128]), ($12 + [552]))
	CALL db_update_i64(*($5 + [100]), (int_64)0, ($12 + [432]), [96])
	$9 = (($12 + [352]) + [16])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$24 }
	*($9) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$24
	if ( ((int_64)*($3 + [128]) < (int_64)1) ){ goto $label$25 }
	$9 = ($3 + [136])
	$4 = *($9)
	*((($12 + [192]) + [8])) = $4
	$6 = ($3 + [128])
	$7 = *($6)
	*((($12 + [32]) + [8])) = $4
	*($12 + [192]) = $7
	*($12 + [36]) = *($12 + [196])
	*($12 + [32]) = *($12 + [192])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($12 + [32]), (int_64)4)
	CALL eosio_assert(((int_64)*($9) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [1120])
	CALL eosio_assert(((int_64)*($12 + [352]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($5 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)*(($5 + [56]))), [1792])
	$7 = (int_64)
	*($5 + [48]) = $7(*($5 + [48]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [48]) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [536]) = (($12 + [432]) + [96])
	*($12 + [532]) = ($12 + [432])
	*($12 + [528]) = ($12 + [432])
	*($12 + [552]) = ($12 + [528])
	*($12 + [132]) = ($5 + [16])
	*($12 + [128]) = $5
	*($12 + [136]) = ($5 + [32])
	*($12 + [140]) = ($5 + [48])
	*($12 + [144]) = ($5 + [64])
	*($12 + [148]) = ($5 + [80])
	CALL $83(($12 + [128]), ($12 + [552]))
	CALL db_update_i64(*($5 + [100]), (int_64)0, ($12 + [432]), [96])
	$9 = (($12 + [352]) + [16])
	if ( (uint_64)($4 <= *($9)) ){ goto $label$25 }
	*($9) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$25
	if ( ((int_64)*($3 + [168]) < (int_64)1) ){ goto $label$26 }
	$9 = ($3 + [176])
	$4 = *($9)
	*((($12 + [176]) + [8])) = $4
	$3 = ($3 + [168])
	$7 = *($3)
	*((($12 + [16]) + [8])) = $4
	*($12 + [176]) = $7
	*($12 + [20]) = *($12 + [180])
	*($12 + [16]) = *($12 + [176])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($12 + [16]), (int_64)5)
	CALL eosio_assert(((int_64)*($9) == (int_64)5461508), [1232])
	$8 = ((int_64)*($3) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)($12 + [352])), [1120])
	CALL eosio_assert(((int_64)*($12 + [352]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($5 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)*(($5 + [72]))), [1792])
	$7 = (int_64)
	*($5 + [64]) = $7(*($5 + [64]) - *($3)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($5 + [64]) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [536]) = (($12 + [432]) + [96])
	*($12 + [532]) = ($12 + [432])
	*($12 + [528]) = ($12 + [432])
	*($12 + [552]) = ($12 + [528])
	*($12 + [132]) = ($5 + [16])
	*($12 + [128]) = $5
	*($12 + [136]) = ($5 + [32])
	*($12 + [140]) = ($5 + [48])
	*($12 + [144]) = ($5 + [64])
	*($12 + [148]) = ($5 + [80])
	CALL $83(($12 + [128]), ($12 + [552]))
	CALL db_update_i64(*($5 + [100]), (int_64)0, ($12 + [432]), [96])
	$3 = (($12 + [352]) + [16])
	if ( (uint_64)($4 <= *($3)) ){ goto $label$26 }
	*($3) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$26
	*((($12 + [128]) + [32])) = [0]
	*($12 + [136]) = (int_64)21334
	*($12 + [144]) = (int_64)-1
	*($12 + [128]) = *($0)
	*($12 + [152]) = (int_64)0
	$3 = CALL $45(($12 + [128]), $1, [1728])
	if ( ((int_64)*($3 + [24]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [64]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [104]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [144]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [184]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [8]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [48]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [88]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [128]) != (int_64)0) ){ goto $label$27 }
	if ( ((int_64)*($3 + [168]) != (int_64)0) ){ goto $label$27 }
	CALL $58(($12 + [128]), $3)
	
.LABEL $label$27
	CALL eosio_assert(((int_32)*($10 + [72]) == (int_32)($12 + [392])), [1120])
	CALL eosio_assert(((int_64)*($12 + [392]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($10 + [8])
	CALL eosio_assert(((int_64)5461508 == (int_64)*(($10 + [40]))), [1792])
	$7 = (int_64)
	*($10 + [32]) = $7(*($10 + [32]) - $8))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($10 + [32]) < (int_64)4611686018427387904), [1872])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($12 + [560]) = (($12 + [432]) + [72])
	*($12 + [556]) = ($12 + [432])
	*($12 + [552]) = ($12 + [432])
	*($12 + [568]) = ($12 + [552])
	*($12 + [532]) = ($10 + [16])
	*($12 + [528]) = $10
	*($12 + [536]) = ($10 + [32])
	*($12 + [540]) = ($10 + [48])
	*($12 + [544]) = ($10 + [64])
	CALL $69(($12 + [528]), ($12 + [568]))
	CALL db_update_i64(*($10 + [76]), (int_64)0, ($12 + [432]), [72])
	$3 = (($12 + [392]) + [16])
	if ( (uint_64)($4 <= *($3)) ){ goto $label$28 }
	*($3) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$28
	$10 = *($12 + [152])
	if ( ($10 == 0) ){ goto $label$20 }
	$9 = ($12 + [156])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$32 }
	CALL $155($5)
	
.LABEL $label$32
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$31 }
	$3 = *(($12 + [152]))
	goto $label$29 
	
.LABEL $label$30
	$3 = $10
	
.LABEL $label$29
	*($9) = $10
	CALL $155($3)
	
.LABEL $label$20
	CALL eosio_assert(((int_64)5461508 == (int_64)$11), [1232])
	$2 = ((int_64)$8 + (int_64)$2)
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1312])
	$5 = ($0 + [36])
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$37 }
	$5 = ($0 + [36])
	
.LOOP $label$38:
	$10 = *($3 + [16])
	if ( ((int_32)$10 < (int_32)[8]) ){ goto $label$40 }
	$10 = *($3)
	if ( $10 ){ goto $label$39 }
	goto $label$36 
	
.LABEL $label$40
	if ( ((int_32)$10 == (int_32)[7]) ){ goto $label$35 }
	$5 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$35 }
	$3 = $5
	
.LABEL $label$39
	$5 = $3
	$3 = $10
	goto $label$38 
	
.LABEL $label$37
	$3 = $5
	$10 = *($5)
	if ( $10 ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$36
	$5 = $3
	
.LABEL $label$35
	$10 = *($5)
	if ( $10 ){ goto $label$33 }
	
.LABEL $label$34
	*(($10 = CALL $154([32]))) = (int_64)0
	*($10 + [8]) = $3
	*($5) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = [7]
	$3 = $10
	$9 = ($0 + [32])
	$6 = *(*($9))
	if ( ($6 == 0) ){ goto $label$41 }
	*($9) = $6
	$3 = *($5)
	
.LABEL $label$41
	CALL $125(*(($0 + [36])), $3)
	*(($3 = ($0 + [40]))) = (*($3) + [1])
	
.LABEL $label$33
	*($12 + [120]) = $11
	$8 = *(($10 + [24]))
	$4 = *($0)
	*(($12 + [8])) = $11
	*($12 + [112]) = $2
	*($12) = $2
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $8, $12, $4)
	*(($12 + [464])) = [0]
	*($12 + [440]) = (int_64)21334
	*($12 + [448]) = (int_64)-1
	*($12 + [456]) = (int_64)0
	$4 = *($0)
	*($12 + [432]) = $4
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$2()), [1008])
	*(($5 = CALL $154([48])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$0 = ($5 + [8])
	$8 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$44:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	
.LOOP $label$46:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	$10 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$43
	$10 = [0]
	
.LABEL $label$42
	CALL eosio_assert($10, [768])
	*($5 + [32]) = ($12 + [432])
	*(($5 + [8])) = $2
	*($5) = $1
	*(($5 + [16])) = $11
	*($5 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($12 + [560]) = (($12 + [128]) + [32])
	*($12 + [556]) = ($12 + [128])
	*($12 + [552]) = ($12 + [128])
	*($12 + [568]) = ($12 + [552])
	*($12 + [532]) = $0
	*($12 + [528]) = $5
	*($12 + [536]) = ($5 + [24])
	CALL $132(($12 + [528]), ($12 + [568]))
	$8 = *($5)
	$10 = CALL db_store_i64(*((($12 + [432]) + [8])), (int_64)-3617352270456291328, $4, $8, ($12 + [128]), [32])
	*($5 + [36]) = $10
	$3 = (($12 + [432]) + [16])
	if ( (uint_64)($8 <= *($3)) ){ goto $label$47 }
	*($3) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$47
	*($12 + [528]) = $5
	$8 = *($5)
	*($12 + [128]) = $8
	*($12 + [552]) = $10
	$0 = ($12 + [460])
	$3 = *($0)
	if ( ((uint_32)$3 >= (uint_32)*((($12 + [432]) + [32]))) ){ goto $label$49 }
	*($3 + [8]) = $8
	*($3 + [16]) = $10
	*($12 + [528]) = [0]
	*($3) = $5
	*($0) = ($3 + [24])
	goto $label$48 
	
.LABEL $label$49
	CALL $133(($12 + [456]), ($12 + [528]), ($12 + [128]), ($12 + [552]))
	
.LABEL $label$48
	$3 = *($12 + [528])
	*($12 + [528]) = [0]
	if ( ($3 == 0) ){ goto $label$50 }
	CALL $155($3)
	
.LABEL $label$50
	$10 = *($12 + [456])
	if ( ($10 == 0) ){ goto $label$51 }
	$0 = ($12 + [460])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$53 }
	
.LOOP $label$54:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$55 }
	CALL $155($5)
	
.LABEL $label$55
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$54 }
	$3 = *(($12 + [456]))
	goto $label$52 
	
.LABEL $label$53
	$3 = $10
	
.LABEL $label$52
	*($0) = $10
	CALL $155($3)
	
.LABEL $label$51
	$10 = *($12 + [280])
	if ( ($10 == 0) ){ goto $label$56 }
	$0 = ($12 + [284])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$58 }
	
.LOOP $label$59:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$60 }
	CALL $155($5)
	
.LABEL $label$60
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$59 }
	$3 = *(($12 + [280]))
	goto $label$57 
	
.LABEL $label$58
	$3 = $10
	
.LABEL $label$57
	*($0) = $10
	CALL $155($3)
	
.LABEL $label$56
	$10 = *($12 + [336])
	if ( ($10 == 0) ){ goto $label$61 }
	$0 = ($12 + [340])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$63 }
	
.LOOP $label$64:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$65 }
	CALL $155($5)
	
.LABEL $label$65
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$64 }
	$3 = *(($12 + [336]))
	goto $label$62 
	
.LABEL $label$63
	$3 = $10
	
.LABEL $label$62
	*($0) = $10
	CALL $155($3)
	
.LABEL $label$61
	$10 = *($12 + [376])
	if ( ($10 == 0) ){ goto $label$66 }
	$0 = ($12 + [380])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$68 }
	
.LOOP $label$69:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$70 }
	CALL $155($5)
	
.LABEL $label$70
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$69 }
	$3 = *(($12 + [376]))
	goto $label$67 
	
.LABEL $label$68
	$3 = $10
	
.LABEL $label$67
	*($0) = $10
	CALL $155($3)
	
.LABEL $label$66
	$10 = *($12 + [416])
	if ( ($10 == 0) ){ goto $label$71 }
	$0 = ($12 + [420])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$73 }
	
.LOOP $label$74:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$75 }
	CALL $155($5)
	
.LABEL $label$75
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$74 }
	$3 = *(($12 + [416]))
	goto $label$72 
	
.LABEL $label$73
	$3 = $10
	
.LABEL $label$72
	*($0) = $10
	CALL $155($3)
	
.LABEL $label$71
	*([0] + [4]) = ($12 + [576])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1712])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN5eosio5token11checkhackerEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [496])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	CALL eosio_assert([1], [880])
	$9 = [0]
	$8 = (int_64)21334
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [768])
	$9 = [0]
	*((($11 + [312]) + [32])) = [0]
	*($11 + [320]) = (int_64)21334
	*($11 + [328]) = (int_64)-1
	*($11 + [336]) = (int_64)0
	*($11 + [312]) = *($0)
	$3 = CALL $65(($11 + [312]), (int_64)21334, [1936])
	*((($11 + [272]) + [32])) = [0]
	*($11 + [280]) = (int_64)21334
	*($11 + [288]) = (int_64)-1
	*($11 + [296]) = (int_64)0
	$8 = *($0)
	*($11 + [272]) = $8
	$4 = [0]
	$10 = CALL db_find_i64($8, (int_64)21334, (int_64)8406652938591240192, (int_64)21334)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $66(($11 + [272]), $10)
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [944])
	
.LABEL $label$6
	CALL eosio_assert([1], [880])
	$8 = (int_64)21334
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$10 = [0]
	
.LABEL $label$7
	CALL eosio_assert($10, [768])
	*(($11 + [264])) = [0]
	*($11 + [248]) = (int_64)-1
	$8 = (int_64)0
	*($11 + [256]) = (int_64)0
	$5 = *($0)
	*($11 + [232]) = $5
	*($11 + [240]) = (int_64)21334
	$9 = CALL db_find_i64($5, (int_64)21334, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$9 = CALL $60(($11 + [232]), $9)
	CALL eosio_assert(((int_32)*($9 + [248]) == (int_32)($11 + [232])), [944])
	$8 = (int_64)0
	if ( ((int_64)((int_64)$2 | (int_64)1) != (int_64)1) ){ goto $label$13 }
	if ( ((int_64)*($9 + [8]) < (int_64)1) ){ goto $label$13 }
	$10 = ($9 + [16])
	$8 = *($10)
	*((($11 + [216]) + [8])) = $8
	$6 = ($9 + [8])
	$5 = *($6)
	*((($11 + [80]) + [8])) = $8
	*($11 + [216]) = $5
	*($11 + [84]) = *($11 + [220])
	*($11 + [80]) = *($11 + [216])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [80]), (int_64)1)
	CALL eosio_assert(((int_64)*($10) == (int_64)5461508), [1232])
	$8 = *($6)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [1120])
	CALL eosio_assert(((int_64)*($11 + [272]) == (int_64)CALL $fimport$2()), [1168])
	$5 = *($4 + [8])
	CALL eosio_assert(((int_64)*($10) == (int_64)$5), [1792])
	$7 = (int_64)
	*($4) = $7(*($4) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($4) < (int_64)4611686018427387904), [1872])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$5) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [480]) = (($11 + [352]) + [96])
	*($11 + [476]) = ($11 + [352])
	*($11 + [472]) = ($11 + [352])
	*($11 + [448]) = ($11 + [472])
	*($11 + [116]) = ($4 + [16])
	*($11 + [112]) = $4
	*($11 + [120]) = ($4 + [32])
	*($11 + [124]) = ($4 + [48])
	*($11 + [128]) = ($4 + [64])
	*($11 + [132]) = ($4 + [80])
	CALL $83(($11 + [112]), ($11 + [448]))
	CALL db_update_i64(*($4 + [100]), (int_64)0, ($11 + [352]), [96])
	$10 = (($11 + [272]) + [16])
	if ( (uint_64)($5 <= *($10)) ){ goto $label$13 }
	*($10) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$13
	if ( ((int_64)((int_64)$2 | (int_64)2) != (int_64)2) ){ goto $label$14 }
	if ( ((int_64)*($9 + [48]) < (int_64)1) ){ goto $label$14 }
	$10 = ($9 + [56])
	$5 = *($10)
	*((($11 + [200]) + [8])) = $5
	$6 = ($9 + [48])
	$7 = *($6)
	*((($11 + [64]) + [8])) = $5
	*($11 + [200]) = $7
	*($11 + [68]) = *($11 + [204])
	*($11 + [64]) = *($11 + [200])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [64]), (int_64)2)
	CALL eosio_assert(((int_64)*($10) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [1120])
	CALL eosio_assert(((int_64)*($11 + [272]) == (int_64)CALL $fimport$2()), [1168])
	$5 = *($4 + [8])
	CALL eosio_assert(((int_64)*($10) == (int_64)*(($4 + [24]))), [1792])
	$7 = (int_64)
	*($4 + [16]) = $7(*($4 + [16]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($4 + [16]) < (int_64)4611686018427387904), [1872])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$5) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [480]) = (($11 + [352]) + [96])
	*($11 + [476]) = ($11 + [352])
	*($11 + [472]) = ($11 + [352])
	*($11 + [448]) = ($11 + [472])
	*($11 + [116]) = ($4 + [16])
	*($11 + [112]) = $4
	*($11 + [120]) = ($4 + [32])
	*($11 + [124]) = ($4 + [48])
	*($11 + [128]) = ($4 + [64])
	*($11 + [132]) = ($4 + [80])
	CALL $83(($11 + [112]), ($11 + [448]))
	CALL db_update_i64(*($4 + [100]), (int_64)0, ($11 + [352]), [96])
	$10 = (($11 + [272]) + [16])
	if ( (uint_64)($5 <= *($10)) ){ goto $label$14 }
	*($10) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$14
	if ( ((int_64)*($9 + [88]) < (int_64)1) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)3) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$15 }
	
.LABEL $label$16
	$10 = ($9 + [96])
	$5 = *($10)
	*((($11 + [184]) + [8])) = $5
	$6 = ($9 + [88])
	$7 = *($6)
	*((($11 + [48]) + [8])) = $5
	*($11 + [184]) = $7
	*($11 + [52]) = *($11 + [188])
	*($11 + [48]) = *($11 + [184])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [48]), (int_64)3)
	CALL eosio_assert(((int_64)*($10) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [1120])
	CALL eosio_assert(((int_64)*($11 + [272]) == (int_64)CALL $fimport$2()), [1168])
	$5 = *($4 + [8])
	CALL eosio_assert(((int_64)*($10) == (int_64)*(($4 + [40]))), [1792])
	$7 = (int_64)
	*($4 + [32]) = $7(*($4 + [32]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($4 + [32]) < (int_64)4611686018427387904), [1872])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$5) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [480]) = (($11 + [352]) + [96])
	*($11 + [476]) = ($11 + [352])
	*($11 + [472]) = ($11 + [352])
	*($11 + [448]) = ($11 + [472])
	*($11 + [116]) = ($4 + [16])
	*($11 + [112]) = $4
	*($11 + [120]) = ($4 + [32])
	*($11 + [124]) = ($4 + [48])
	*($11 + [128]) = ($4 + [64])
	*($11 + [132]) = ($4 + [80])
	CALL $83(($11 + [112]), ($11 + [448]))
	CALL db_update_i64(*($4 + [100]), (int_64)0, ($11 + [352]), [96])
	$10 = (($11 + [272]) + [16])
	if ( (uint_64)($5 <= *($10)) ){ goto $label$15 }
	*($10) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$15
	if ( ((int_64)((int_64)$2 | (int_64)4) != (int_64)4) ){ goto $label$17 }
	if ( ((int_64)*($9 + [128]) < (int_64)1) ){ goto $label$17 }
	$10 = ($9 + [136])
	$5 = *($10)
	*((($11 + [168]) + [8])) = $5
	$6 = ($9 + [128])
	$7 = *($6)
	*((($11 + [32]) + [8])) = $5
	*($11 + [168]) = $7
	*($11 + [36]) = *($11 + [172])
	*($11 + [32]) = *($11 + [168])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [32]), (int_64)4)
	CALL eosio_assert(((int_64)*($10) == (int_64)5461508), [1232])
	$8 = ((int_64)*($6) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [1120])
	CALL eosio_assert(((int_64)*($11 + [272]) == (int_64)CALL $fimport$2()), [1168])
	$5 = *($4 + [8])
	CALL eosio_assert(((int_64)*($10) == (int_64)*(($4 + [56]))), [1792])
	$7 = (int_64)
	*($4 + [48]) = $7(*($4 + [48]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($4 + [48]) < (int_64)4611686018427387904), [1872])
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$5) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [480]) = (($11 + [352]) + [96])
	*($11 + [476]) = ($11 + [352])
	*($11 + [472]) = ($11 + [352])
	*($11 + [448]) = ($11 + [472])
	*($11 + [116]) = ($4 + [16])
	*($11 + [112]) = $4
	*($11 + [120]) = ($4 + [32])
	*($11 + [124]) = ($4 + [48])
	*($11 + [128]) = ($4 + [64])
	*($11 + [132]) = ($4 + [80])
	CALL $83(($11 + [112]), ($11 + [448]))
	CALL db_update_i64(*($4 + [100]), (int_64)0, ($11 + [352]), [96])
	$10 = (($11 + [272]) + [16])
	if ( (uint_64)($5 <= *($10)) ){ goto $label$17 }
	*($10) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$17
	if ( ((int_64)*($9 + [168]) < (int_64)1) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)5) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$18 }
	
.LABEL $label$19
	$10 = ($9 + [176])
	$2 = *($10)
	*((($11 + [152]) + [8])) = $2
	$9 = ($9 + [168])
	$5 = *($9)
	*((($11 + [16]) + [8])) = $2
	*($11 + [152]) = $5
	*($11 + [20]) = *($11 + [156])
	*($11 + [16]) = *($11 + [152])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [16]), (int_64)5)
	CALL eosio_assert(((int_64)*($10) == (int_64)5461508), [1232])
	$8 = ((int_64)*($9) + (int_64)$8)
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($11 + [272])), [1120])
	CALL eosio_assert(((int_64)*($11 + [272]) == (int_64)CALL $fimport$2()), [1168])
	$2 = *($4 + [8])
	CALL eosio_assert(((int_64)*($10) == (int_64)*(($4 + [72]))), [1792])
	$5 = (int_64)
	*($4 + [64]) = $5(*($4 + [64]) - *($9)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($4 + [64]) < (int_64)4611686018427387904), [1872])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($4 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [480]) = (($11 + [352]) + [96])
	*($11 + [476]) = ($11 + [352])
	*($11 + [472]) = ($11 + [352])
	*($11 + [448]) = ($11 + [472])
	*($11 + [116]) = ($4 + [16])
	*($11 + [112]) = $4
	*($11 + [120]) = ($4 + [32])
	*($11 + [124]) = ($4 + [48])
	*($11 + [128]) = ($4 + [64])
	*($11 + [132]) = ($4 + [80])
	CALL $83(($11 + [112]), ($11 + [448]))
	CALL db_update_i64(*($4 + [100]), (int_64)0, ($11 + [352]), [96])
	$9 = (($11 + [272]) + [16])
	if ( (uint_64)($2 <= *($9)) ){ goto $label$18 }
	*($9) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$18
	*((($11 + [112]) + [32])) = [0]
	*($11 + [120]) = (int_64)21334
	*($11 + [128]) = (int_64)-1
	*($11 + [112]) = *($0)
	*($11 + [136]) = (int_64)0
	$9 = CALL $45(($11 + [112]), $1, [1728])
	if ( ((int_64)*($9 + [24]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [64]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [104]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [144]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [184]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [8]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [48]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [88]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [128]) != (int_64)0) ){ goto $label$20 }
	if ( ((int_64)*($9 + [168]) != (int_64)0) ){ goto $label$20 }
	CALL $58(($11 + [112]), $9)
	
.LABEL $label$20
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)($11 + [312])), [1120])
	CALL eosio_assert(((int_64)*($11 + [312]) == (int_64)CALL $fimport$2()), [1168])
	$2 = *($3 + [8])
	CALL eosio_assert(((int_64)5461508 == (int_64)*(($3 + [40]))), [1792])
	$5 = (int_64)
	*($3 + [32]) = $5(*($3 + [32]) - $8))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($3 + [32]) < (int_64)4611686018427387904), [1872])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($3 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($11 + [456]) = (($11 + [352]) + [72])
	*($11 + [452]) = ($11 + [352])
	*($11 + [448]) = ($11 + [352])
	*($11 + [464]) = ($11 + [448])
	*($11 + [476]) = ($3 + [16])
	*($11 + [472]) = $3
	*($11 + [480]) = ($3 + [32])
	*($11 + [484]) = ($3 + [48])
	*($11 + [488]) = ($3 + [64])
	CALL $69(($11 + [472]), ($11 + [464]))
	CALL db_update_i64(*($3 + [76]), (int_64)0, ($11 + [352]), [72])
	$9 = (($11 + [312]) + [16])
	if ( (uint_64)($2 <= *($9)) ){ goto $label$21 }
	*($9) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$21
	$3 = *($11 + [136])
	if ( ($3 == 0) ){ goto $label$12 }
	$10 = ($11 + [140])
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $155($4)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$24 }
	$9 = *(($11 + [136]))
	goto $label$22 
	
.LABEL $label$23
	$9 = $3
	
.LABEL $label$22
	*($10) = $3
	CALL $155($9)
	
.LABEL $label$12
	*($11 + [104]) = (int_64)5461508
	$2 = *($0)
	*(($11 + [8])) = (int_64)5461508
	*($11 + [96]) = $8
	*($11) = $8
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $11, $2)
	$3 = *($11 + [256])
	if ( ($3 == 0) ){ goto $label$26 }
	$0 = ($11 + [260])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$28 }
	
.LOOP $label$29:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$30 }
	CALL $155($4)
	
.LABEL $label$30
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$29 }
	$9 = *(($11 + [256]))
	goto $label$27 
	
.LABEL $label$28
	$9 = $3
	
.LABEL $label$27
	*($0) = $3
	CALL $155($9)
	
.LABEL $label$26
	$3 = *($11 + [296])
	if ( ($3 == 0) ){ goto $label$31 }
	$0 = ($11 + [300])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$33 }
	
.LOOP $label$34:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$35 }
	CALL $155($4)
	
.LABEL $label$35
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$34 }
	$9 = *(($11 + [296]))
	goto $label$32 
	
.LABEL $label$33
	$9 = $3
	
.LABEL $label$32
	*($0) = $3
	CALL $155($9)
	
.LABEL $label$31
	$3 = *($11 + [336])
	if ( ($3 == 0) ){ goto $label$36 }
	$0 = ($11 + [340])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$38 }
	
.LOOP $label$39:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	CALL $155($4)
	
.LABEL $label$40
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$39 }
	$9 = *(($11 + [336]))
	goto $label$37 
	
.LABEL $label$38
	$9 = $3
	
.LABEL $label$37
	*($0) = $3
	CALL $155($9)
	
.LABEL $label$36
	*([0] + [4]) = ($11 + [496])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1712])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1712])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $140(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	CALL eosio_assert(CALL $fimport$12($1), [2608])
	$9 = [0]
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [768])
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$7 }
	$9 = uint_32($9 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($9 <= [257]), [688])
	$10 = [0]
	*(($11 + [120])) = [0]
	*($11 + [104]) = (int_64)-1
	*($11 + [112]) = (int_64)0
	$8 = *($0)
	*($11 + [88]) = $8
	*($11 + [96]) = $4
	$6 = [0]
	$9 = CALL db_find_i64($8, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $89(($11 + [88]), $9)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($11 + [88])), [944])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2416])
	CALL require_auth(*($6 + [64]))
	$7 = ($2 + [8])
	$5 = *($7)
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	CALL eosio_assert($10, [624])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [2640])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [1968])
	CALL eosio_assert(((int_64)$4 <= (int_64))(*($6 + [16]) - *($6))), [2560])
	*($11 + [84]) = $6
	*($11 + [80]) = $2
	CALL $139(($11 + [88]), $6, ($11 + [80]))
	$9 = ($6 + [64])
	$8 = *($9)
	*(($6 = (($11 + [64]) + [8]))) = *($7)
	*($11 + [64]) = *($2)
	*((($11 + [16]) + [8])) = *($6)
	*($11 + [16]) = *($11 + [64])
	*($11 + [20]) = *($11 + [68])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $8, ($11 + [16]), $8)
	$8 = *($9)
	if ( ((int_64)$8 == (int_64)$1) ){ goto $label$14 }
	*(($9 = (($11 + [48]) + [8]))) = *(($2 + [8]))
	*($11 + [48]) = *($2)
	CALL $159(($11 + [32]), $3)
	*(($11 + [8])) = *($9)
	*($11) = *($11 + [48])
	CALL _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $8, $1, $11, ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL $155(*($11 + [40]))
	
.LABEL $label$14
	$2 = *($11 + [112])
	if ( ($2 == 0) ){ goto $label$15 }
	$10 = ($11 + [116])
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $155($6)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$18 }
	$9 = *(($11 + [112]))
	goto $label$16 
	
.LABEL $label$17
	$9 = $2
	
.LABEL $label$16
	*($10) = $2
	CALL $155($9)
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [128])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [768])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [1712])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1712])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1712])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $96(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $138(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $155(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN5eosio5token12destroytokenEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$12($1), [2496])
	$10 = [0]
	$4 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$9 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [768])
	$10 = *($3)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [688])
	*((($11 + [72]) + [32])) = [0]
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	$9 = *($0)
	*($11 + [72]) = $9
	*($11 + [80]) = $4
	$7 = [0]
	$10 = CALL db_find_i64($9, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $89(($11 + [72]), $10)
	CALL eosio_assert(((int_32)*($7 + [72]) == (int_32)($11 + [72])), [944])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2416])
	*((($11 + [32]) + [32])) = [0]
	*($11 + [48]) = (int_64)-1
	*($11 + [56]) = (int_64)0
	$9 = *($0)
	*($11 + [32]) = $9
	*($11 + [40]) = $4
	$10 = CALL db_find_i64($9, $4, (int_64)4520939206305906688, $4)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $134(($11 + [32]), $10)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($11 + [32])), [944])
	CALL eosio_assert([1], [1072])
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($11 + [32])), [1120])
	CALL eosio_assert(((int_64)*($11 + [32]) == (int_64)CALL $fimport$2()), [1168])
	$9 = *($10 + [8])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)$9), [1232])
	$4 = ((int_64)*($10) + (int_64)*($2))
	*($10) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($10) < (int_64)4611686018427387904), [1312])
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$9) == (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)), [1360])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($11 + [112]), $10, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($11 + [112]) | [8]), ($10 + [8]), [8])
	CALL db_update_i64(*($10 + [20]), (int_64)0, ($11 + [112]), [16])
	$10 = (($11 + [32]) + [16])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$9 }
	*($10) = ((int_64)$9 + (int_64)1)
	goto $label$9 
	
.LABEL $label$10
	$4 = *($0)
	CALL eosio_assert(((int_64)*($11 + [32]) == (int_64)CALL $fimport$2()), [1008])
	*(($3 = CALL $154([32])) + [8]) = (int_64)1398362884
	*($3) = (int_64)0
	CALL eosio_assert([1], [880])
	$5 = ($3 + [8])
	$9 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [768])
	*($3 + [16]) = ($11 + [32])
	*(($10 = ($3 + [8]))) = *(($2 + [8]))
	*($3) = *($2)
	CALL eosio_assert([1], [1344])
	CALL memcpy(($11 + [112]), $3, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($11 + [112]) | [8]), $5, [8])
	$9 = (uint_64)*($10) >> (uint_64)(int_64)8
	$8 = CALL db_store_i64(*((($11 + [32]) + [8])), (int_64)4520939206305906688, $4, $9), ($11 + [112]), [16]
	*($3 + [20]) = $8)
	$5 = (($11 + [32]) + [16])
	if ( (uint_64)($9 <= *($5)) ){ goto $label$16 }
	*($5) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$16
	*($11 + [136]) = $3
	$9 = (uint_64)*($10) >> (uint_64)(int_64)8
	*($11 + [112]) = $9)
	*($11 + [132]) = $8
	$5 = ($11 + [60])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($11 + [64]))) ){ goto $label$18 }
	*($10 + [8]) = $9
	*($10 + [16]) = $8
	*($11 + [136]) = [0]
	*($10) = $3
	*($5) = ($10 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $135(($11 + [56]), ($11 + [136]), ($11 + [112]), ($11 + [132]))
	
.LABEL $label$17
	$10 = *($11 + [136])
	*($11 + [136]) = [0]
	if ( ($10 == 0) ){ goto $label$9 }
	CALL $155($10)
	
.LABEL $label$9
	$8 = ($2 + [8])
	$6 = *($8)
	$3 = [0]
	$4 = *($2)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$19 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$3 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$3 = [0]
	
.LABEL $label$19
	CALL eosio_assert($3, [624])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [2528])
	CALL eosio_assert(((int_64)$6 == (int_64)*($7 + [8])), [1968])
	CALL eosio_assert(((int_64)$4 <= (int_64)*($7)), [2560])
	*($11 + [116]) = $7
	*($11 + [112]) = $2
	CALL $136(($11 + [72]), $7, ($11 + [112]))
	*(($10 = (($11 + [16]) + [8]))) = *($8)
	$9 = *($2)
	*(($11 + [12])) = *((($11 + [16]) + [12]))
	*(($11 + [8])) = *($10)
	*($11 + [16]) = $9
	*($11 + [4]) = *($11 + [20])
	*($11) = *($11 + [16])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, $11)
	$7 = *($11 + [56])
	if ( ($7 == 0) ){ goto $label$24 }
	$0 = ($11 + [60])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$26 }
	
.LOOP $label$27:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$28 }
	CALL $155($2)
	
.LABEL $label$28
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$27 }
	$10 = *(($11 + [56]))
	goto $label$25 
	
.LABEL $label$26
	$10 = $7
	
.LABEL $label$25
	*($0) = $7
	CALL $155($10)
	
.LABEL $label$24
	$7 = *($11 + [96])
	if ( ($7 == 0) ){ goto $label$29 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$33 }
	CALL $155($2)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$32 }
	$10 = *(($11 + [96]))
	goto $label$30 
	
.LABEL $label$31
	$10 = $7
	
.LABEL $label$30
	*($0) = $7
	CALL $155($10)
	
.LABEL $label$29
	*([0] + [4]) = ($11 + [144])
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $155($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $155($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $155($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $155($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $155($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $155($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $155($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $155($5)
	
.LABEL $label$12
	return $0
}

void .FUNC _ZN5eosio5token11checkplayerEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [400])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	CALL eosio_assert([1], [880])
	$8 = [0]
	$7 = (int_64)21334
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	$9 = [0]
	*(($11 + [392])) = [0]
	*($11 + [376]) = (int_64)-1
	*($11 + [384]) = (int_64)0
	$7 = *($0)
	*($11 + [360]) = $7
	*($11 + [368]) = (int_64)21334
	$8 = CALL db_find_i64($7, (int_64)21334, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $60(($11 + [360]), $8)
	CALL eosio_assert(((int_32)*($10 + [248]) == (int_32)($11 + [360])), [944])
	$9 = *(($11 + [384]))
	$4 = *(($11 + [388]))
	if ( ((int_32)$4 != (int_32)$9) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	$10 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = ($4 + [-24])
	$3 = ([0] - $9)
	
.LOOP $label$9:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$6 }
	$4 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$12 }
	$8 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [248]) == (int_32)($11 + [360])), [944])
	if ( $10 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$8 = CALL db_find_i64(*($11 + [360]), *(($11 + [368])), (int_64)-3665743478920894880, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $60(($11 + [360]), $8)
	CALL eosio_assert(((int_32)*($8 + [248]) == (int_32)($11 + [360])), [944])
	if ( ($10 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ($8 == 0) ){ goto $label$10 }
	if ( ((int_64)*($10 + [8]) < (int_64)1) ){ goto $label$13 }
	$8 = ($10 + [16])
	$7 = *($8)
	*((($11 + [344]) + [8])) = $7
	$6 = *($10 + [8])
	*((($11 + [144]) + [8])) = $7
	*($11 + [344]) = $6
	*($11 + [148]) = *($11 + [348])
	*($11 + [144]) = *($11 + [344])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [144]), (int_64)1)
	*(($5 = (($11 + [328]) + [8]))) = *($8)
	$7 = *($10 + [8])
	*((($11 + [128]) + [12])) = *((($11 + [328]) + [12]))
	*((($11 + [128]) + [8])) = *($5)
	*($11 + [328]) = $7
	*($11 + [132]) = *($11 + [332])
	*($11 + [128]) = *($11 + [328])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $2, ($11 + [128]), (int_64)1)
	
.LABEL $label$13
	if ( ((int_64)*($10 + [48]) < (int_64)1) ){ goto $label$14 }
	$8 = ($10 + [56])
	$7 = *($8)
	*((($11 + [312]) + [8])) = $7
	$6 = *($10 + [48])
	*((($11 + [112]) + [8])) = $7
	*($11 + [312]) = $6
	*($11 + [116]) = *($11 + [316])
	*($11 + [112]) = *($11 + [312])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [112]), (int_64)2)
	*(($5 = (($11 + [296]) + [8]))) = *($8)
	$7 = *($10 + [48])
	*((($11 + [96]) + [12])) = *((($11 + [296]) + [12]))
	*((($11 + [96]) + [8])) = *($5)
	*($11 + [296]) = $7
	*($11 + [100]) = *($11 + [300])
	*($11 + [96]) = *($11 + [296])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $2, ($11 + [96]), (int_64)2)
	
.LABEL $label$14
	if ( ((int_64)*($10 + [88]) < (int_64)1) ){ goto $label$15 }
	$8 = ($10 + [96])
	$7 = *($8)
	*((($11 + [280]) + [8])) = $7
	$6 = *($10 + [88])
	*((($11 + [80]) + [8])) = $7
	*($11 + [280]) = $6
	*($11 + [84]) = *($11 + [284])
	*($11 + [80]) = *($11 + [280])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [80]), (int_64)3)
	*(($5 = (($11 + [264]) + [8]))) = *($8)
	$7 = *($10 + [88])
	*((($11 + [64]) + [12])) = *((($11 + [264]) + [12]))
	*((($11 + [64]) + [8])) = *($5)
	*($11 + [264]) = $7
	*($11 + [68]) = *($11 + [268])
	*($11 + [64]) = *($11 + [264])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $2, ($11 + [64]), (int_64)3)
	
.LABEL $label$15
	if ( ((int_64)*($10 + [128]) < (int_64)1) ){ goto $label$16 }
	$8 = ($10 + [136])
	$7 = *($8)
	*((($11 + [248]) + [8])) = $7
	$6 = *($10 + [128])
	*((($11 + [48]) + [8])) = $7
	*($11 + [248]) = $6
	*($11 + [52]) = *($11 + [252])
	*($11 + [48]) = *($11 + [248])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [48]), (int_64)4)
	*(($5 = (($11 + [232]) + [8]))) = *($8)
	$7 = *($10 + [128])
	*((($11 + [32]) + [12])) = *((($11 + [232]) + [12]))
	*((($11 + [32]) + [8])) = *($5)
	*($11 + [232]) = $7
	*($11 + [36]) = *($11 + [236])
	*($11 + [32]) = *($11 + [232])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $2, ($11 + [32]), (int_64)4)
	
.LABEL $label$16
	if ( ((int_64)*($10 + [168]) < (int_64)1) ){ goto $label$17 }
	$8 = ($10 + [176])
	$7 = *($8)
	*((($11 + [216]) + [8])) = $7
	$6 = *($10 + [168])
	*((($11 + [16]) + [8])) = $7
	*($11 + [216]) = $6
	*($11 + [20]) = *($11 + [220])
	*($11 + [16]) = *($11 + [216])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [16]), (int_64)5)
	*(($5 = (($11 + [200]) + [8]))) = *($8)
	$7 = *($10 + [168])
	*(($11 + [12])) = *((($11 + [200]) + [12]))
	*(($11 + [8])) = *($5)
	*($11 + [200]) = $7
	*($11 + [4]) = *($11 + [204])
	*($11) = *($11 + [200])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $2, $11, (int_64)5)
	
.LABEL $label$17
	*(($11 + [192])) = [0]
	*($11 + [168]) = (int_64)21334
	*($11 + [176]) = (int_64)-1
	*($11 + [160]) = *($0)
	*($11 + [184]) = (int_64)0
	$8 = CALL $45(($11 + [160]), $1, [1728])
	if ( ((int_64)*($8 + [24]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [64]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [104]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [144]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [184]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [8]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [48]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [88]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [128]) != (int_64)0) ){ goto $label$18 }
	if ( ((int_64)*($8 + [168]) != (int_64)0) ){ goto $label$18 }
	CALL $58(($11 + [160]), $8)
	
.LABEL $label$18
	$4 = *($11 + [184])
	if ( ($4 == 0) ){ goto $label$10 }
	$3 = ($11 + [188])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$20 }
	
.LOOP $label$21:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	CALL $155($5)
	
.LABEL $label$22
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$21 }
	$8 = *(($11 + [184]))
	goto $label$19 
	
.LABEL $label$20
	$8 = $4
	
.LABEL $label$19
	*($3) = $4
	CALL $155($8)
	
.LABEL $label$10
	$4 = *($11 + [384])
	if ( ($4 == 0) ){ goto $label$23 }
	$3 = ($11 + [388])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$26:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	CALL $155($5)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$26 }
	$8 = *(($11 + [384]))
	goto $label$24 
	
.LABEL $label$25
	$8 = $4
	
.LABEL $label$24
	*($3) = $4
	CALL $155($8)
	
.LABEL $label$23
	*([0] + [4]) = ($11 + [400])
}

void .FUNC _ZN5eosio5token6miningEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	$9 = (int_64)0
	$10 = (int_64)59
	$6 = [2480]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL eosio_assert([1], [880])
	$9 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	
.LABEL $label$5
	CALL eosio_assert($4, [768])
	*(($11 + [80])) = [0]
	*($11 + [64]) = (int_64)-1
	$9 = (int_64)0
	*($11 + [72]) = (int_64)0
	$10 = *($0)
	*($11 + [48]) = $10
	*($11 + [56]) = (int_64)21334
	$6 = [0]
	$4 = CALL db_find_i64($10, (int_64)21334, (int_64)-4157508551318700032, (int_64)21334)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $89(($11 + [48]), $4)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)($11 + [48])), [944])
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2416])
	$5 = ((uint_64)((int_64)*($6 + [48]) * (int_64)$2) / (uint_64)(int_64)10000)
	$2 = *($0)
	$8 = (int_64)59
	$6 = [2000]
	$7 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$16 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$12
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$7 = ((int_64)$10 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$11 }
	*(($4 = (($11 + [8]) + [16]))) = (int_64)5461508
	*($11 + [16]) = $5
	*($11 + [8]) = $1
	CALL $159(($11 + [32]), $3)
	*(($6 = CALL $154([16]))) = $2
	*($6 + [8]) = $7
	*($11 + [128]) = $6
	$6 = ($6 + [16])
	*($11 + [136]) = $6
	*($11 + [132]) = $6
	*($11 + [88]) = *($11 + [8])
	*((($11 + [88]) + [16])) = *($4)
	*($11 + [96]) = *($11 + [16])
	$6 = (($11 + [8]) + [32])
	*(($4 = (($11 + [88]) + [32]))) = *($6)
	*($11 + [112]) = *($11 + [32])
	*($11 + [32]) = [0]
	*(($11 + [36])) = [0]
	*($6) = [0]
	CALL $126($2, (int_64)8516769789752901632, ($11 + [128]), ($11 + [88]))
	if ( ((*($11 + [112]) & [1]) == 0) ){ goto $label$17 }
	CALL $155(*($4))
	
.LABEL $label$17
	$6 = *($11 + [128])
	if ( ($6 == 0) ){ goto $label$18 }
	*($11 + [132]) = $6
	CALL $155($6)
	
.LABEL $label$18
	if ( ((*(($11 + [32])) & [1]) == 0) ){ goto $label$19 }
	CALL $155(*(($11 + [40])))
	
.LABEL $label$19
	$0 = *($11 + [72])
	if ( ($0 == 0) ){ goto $label$20 }
	$3 = ($11 + [76])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$22 }
	
.LOOP $label$23:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	CALL $155($4)
	
.LABEL $label$24
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$23 }
	$6 = *(($11 + [72]))
	goto $label$21 
	
.LABEL $label$22
	$6 = $0
	
.LABEL $label$21
	*($3) = $0
	CALL $155($6)
	
.LABEL $label$20
	*([0] + [4]) = ($11 + [144])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [248]) == (int_32)$0), [1504])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1552])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1616])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [252]))
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [72])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [76])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [80])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [84])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [88])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [92])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [96])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [48])
	$12 = $13
	*([0] + [4]) = $13
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3 + [12])
	$10 = *($3)
	*($1) = *($10)
	*(($1 + [8])) = *(($10 + [8]))
	$5 = *($3 + [4])
	$10 = *($5 + [4])
	if ( ((int_64)*($1) < (int_64)100000000) ){ goto $label$3 }
	$5 = *(($3 + [8]))
	if ( ($10 == 0) ){ goto $label$2 }
	CALL eosio_assert([1], [1072])
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$5), [1120])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$2()), [1168])
	*(($10 + [20])) = *(($1 + [12]))
	*(($3 = ($10 + [16]))) = *(($1 + [8]))
	*(($10 + [12])) = *(($1 + [4]))
	*($10 + [8]) = *($1)
	$9 = *($10)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $10, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), ($10 + [8]), [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $3, [8])
	CALL db_update_i64(*($10 + [28]), (int_64)0, ($12 + [16]), [24])
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$1 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$3
	if ( ($10 == 0) ){ goto $label$1 }
	$3 = *(($3 + [8]))
	$9 = *($5)
	$10 = (CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)32)
	$5 = ((int_32)$10) != (int_32)[0]
	CALL eosio_assert($5), [1424])
	CALL eosio_assert($5, [1472])
	$5 = CALL db_next_i64(*($10 + [28]), ($12 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $49((CASTING uint_32)(uint_64 $9), $5)
	
.LABEL $label$4
	CALL $54($3, $10)
	goto $label$1 
	
.LABEL $label$2
	$7 = *($3 + [16])
	$6 = *($4)
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$2()), [1008])
	*(($3 = CALL $154([40])) + [16]) = (int_64)1398362884
	*($3 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$8 = ($3 + [16])
	$4 = ($3 + [8])
	$9 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$11 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$11 = [0]
	
.LABEL $label$5
	CALL eosio_assert($11, [768])
	*($3 + [24]) = $5
	$9 = *($7)
	*(($4 + [12])) = *(($1 + [12]))
	*(($4 + [8])) = *(($1 + [8]))
	*(($4 + [4])) = *(($1 + [4]))
	*($4) = *($1)
	*($3) = $9
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $3, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), $4, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $8, [8])
	$9 = *($3)
	$4 = CALL db_store_i64(*($5 + [8]), (int_64)3774689537475637248, $6, $9, ($12 + [16]), [24])
	*($3 + [28]) = $4
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$10 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($12 + [8]) = $3
	$9 = *($3)
	*($12 + [16]) = $9
	*($12 + [4]) = $4
	$11 = ($5 + [28])
	$10 = *($11)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [32]))) ){ goto $label$12 }
	*($10 + [8]) = $9
	*($10 + [16]) = $4
	*($12 + [8]) = [0]
	*($10) = $3
	*($11) = ($10 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $53(($5 + [24]), ($12 + [8]), ($12 + [16]), ($12 + [4]))
	
.LABEL $label$11
	$10 = *($12 + [8])
	*($12 + [8]) = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	CALL $155($10)
	
.LABEL $label$1
	$3 = $13
	$10 = ($3 + [-16])
	*([0] + [4]) = $10
	CALL eosio_assert([1], [1344])
	CALL memcpy($10, $1, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($3 + [-8]), ($1 + [8]), [8])
	$9 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $9), $10, [16])
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$13 }
	*(($2 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [48])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($2 + [12])
	$10 = *($1 + [8])
	$5 = *($2)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$10), [1232])
	$3 = ((int_64)*($1) + (int_64)*($5))
	*($1) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1312])
	$3 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = *($2 + [4])
	$5 = *($6 + [4])
	if ( ((int_64)*($1) < (int_64)100000000) ){ goto $label$3 }
	$6 = *(($2 + [8]))
	if ( ($5 == 0) ){ goto $label$2 }
	CALL eosio_assert([1], [1072])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [1120])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [1168])
	*(($5 + [20])) = *(($1 + [12]))
	*(($2 = ($5 + [16]))) = *(($1 + [8]))
	*(($5 + [12])) = *(($1 + [4]))
	*($5 + [8]) = *($1)
	$10 = *($5)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $5, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), ($5 + [8]), [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $2, [8])
	CALL db_update_i64(*($5 + [28]), (int_64)0, ($12 + [16]), [24])
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$1 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$1 }
	$5 = *(($2 + [8]))
	$10 = *($6)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$10 >> (uint_64)(int_64)32)
	$6 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($6), [1424])
	CALL eosio_assert($6, [1472])
	$6 = CALL db_next_i64(*($2 + [28]), ($12 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $49((CASTING uint_32)(uint_64 $10), $6)
	
.LABEL $label$4
	CALL $54($5, $2)
	goto $label$1 
	
.LABEL $label$2
	$8 = *($2 + [16])
	$7 = *($4)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [1008])
	*(($5 = CALL $154([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$9 = ($5 + [16])
	$4 = ($5 + [8])
	$10 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$11 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$11 = [0]
	
.LABEL $label$5
	CALL eosio_assert($11, [768])
	*($5 + [24]) = $6
	$10 = *($8)
	*(($4 + [12])) = *(($1 + [12]))
	*(($4 + [8])) = *(($1 + [8]))
	*(($4 + [4])) = *(($1 + [4]))
	*($4) = *($1)
	*($5) = $10
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $5, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), $4, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $9, [8])
	$10 = *($5)
	$4 = CALL db_store_i64(*($6 + [8]), (int_64)3774689537475637248, $7, $10, ($12 + [16]), [24])
	*($5 + [28]) = $4
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$10 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($12 + [8]) = $5
	$10 = *($5)
	*($12 + [16]) = $10
	*($12 + [4]) = $4
	$11 = ($6 + [28])
	$2 = *($11)
	if ( ((uint_32)$2 >= (uint_32)*(($6 + [32]))) ){ goto $label$12 }
	*($2 + [8]) = $10
	*($2 + [16]) = $4
	*($12 + [8]) = [0]
	*($2) = $5
	*($11) = ($2 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $53(($6 + [24]), ($12 + [8]), ($12 + [16]), ($12 + [4]))
	
.LABEL $label$11
	$2 = *($12 + [8])
	*($12 + [8]) = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $155($2)
	
.LABEL $label$1
	$5 = ($1 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*($5) >> (uint_64)(int_64)8)), [1360])
	$13 = $13
	$2 = ($13 + [-16])
	*([0] + [4]) = $2
	CALL eosio_assert([1], [1344])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($13 + [-8]), $5, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1504])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1552])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1616])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC _ZN5eosio5token12unlockpledgeEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$3 = *($0)
	*($5) = $3
	*($5 + [8]) = $3
	*($5 + [24]) = (int_64)0
	$0 = CALL db_find_i64($3, $3, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $64($5, $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$5), [944])
	CALL eosio_assert([1], [1424])
	CALL eosio_assert([1], [1472])
	$2 = CALL db_next_i64(*($0 + [20]), ($5 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $64($5, $2)
	
.LABEL $label$2
	CALL $111($5, $0)
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($5 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $155($2)
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $1
	
.LABEL $label$4
	*($4) = $1
	CALL $155($0)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	$5 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [248]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1)
	$4 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [24]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [32]))), [1792])
	$4 = (int_64)
	*($1 + [24]) = $4(*($1 + [24]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [64]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1792])
	$4 = (int_64)
	*($1 + [64]) = $4(*($1 + [64]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [104]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [112]))), [1792])
	$4 = (int_64)
	*($1 + [104]) = $4(*($1 + [104]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [144]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [152]))), [1792])
	$4 = (int_64)
	*($1 + [144]) = $4(*($1 + [144]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [144]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [184]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [192]))), [1792])
	$4 = (int_64)
	*($1 + [184]) = $4(*($1 + [184]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [184]) < (int_64)4611686018427387904), [1872])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1360])
	$6 = $6
	$2 = ($6 + [-256])
	*([0] + [4]) = $2
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = ($6 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [44])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [80])
	*($5 + [56]) = ($1 + [84])
	*($5 + [60]) = ($1 + [88])
	*($5 + [64]) = ($1 + [104])
	*($5 + [68]) = ($1 + [120])
	*($5 + [72]) = ($1 + [124])
	*($5 + [76]) = ($1 + [128])
	*($5 + [80]) = ($1 + [144])
	*($5 + [84]) = ($1 + [160])
	*($5 + [88]) = ($1 + [164])
	*($5 + [92]) = ($1 + [168])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [204])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [116]) = ($1 + [240])
	*($5 + [120]) = ($1 + [244])
	CALL $59(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [248])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [128])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([184])
	CALL $118($6)
	*($6 + [168]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [44])
	*($8 + [60]) = ($6 + [48])
	*($8 + [64]) = ($6 + [64])
	*($8 + [68]) = ($6 + [80])
	*($8 + [72]) = ($6 + [84])
	*($8 + [76]) = ($6 + [88])
	*($8 + [80]) = ($6 + [104])
	*($8 + [84]) = ($6 + [120])
	*($8 + [88]) = ($6 + [124])
	*($8 + [92]) = ($6 + [128])
	*($8 + [96]) = ($6 + [144])
	*($8 + [100]) = ($6 + [160])
	*($8 + [104]) = ($6 + [164])
	CALL $119(($8 + [40]), ($8 + [32]))
	*($6 + [172]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [172])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $120(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [112])
	return $6
}

int_32 .FUNC $114 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	return $0
}

void .FUNC _ZN5eosio5token12changeimpawnEyNS_5assetEyyNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [224])
	*([0] + [4]) = $11
	*($11 + [216]) = $3
	*($11 + [208]) = $4
	CALL require_auth($1)
	$8 = [0]
	*((($11 + [168]) + [32])) = [0]
	*($11 + [184]) = (int_64)-1
	$4 = *($0)
	*($11 + [168]) = $4
	*($11 + [176]) = $4
	*($11 + [192]) = (int_64)0
	$10 = CALL db_find_i64($4, $4, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $64(($11 + [168]), $10) + [16]) == (int_32)($11 + [168])), [944])
	$10 = [0]
	goto $label$1 
	
.LABEL $label$2
	$10 = [1]
	
.LABEL $label$1
	CALL eosio_assert($10, [1904])
	$4 = *($2 + [8])
	*((($11 + [128]) + [32])) = [0]
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($11 + [136]) = $4)
	*($11 + [144]) = (int_64)-1
	*($11 + [152]) = (int_64)0
	*($11 + [128]) = *($0)
	$6 = CALL $65(($11 + [128]), $4, [1936])
	*((($11 + [88]) + [32])) = [0]
	*($11 + [96]) = $4
	*($11 + [104]) = (int_64)-1
	*($11 + [112]) = (int_64)0
	$3 = *($0)
	*($11 + [88]) = $3
	$10 = CALL db_find_i64($3, $4, (int_64)8406652938591240192, $4)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $66(($11 + [88]), $10)
	CALL eosio_assert(((int_32)*($8 + [96]) == (int_32)($11 + [88])), [944])
	
.LABEL $label$3
	$3 = *(($2 + [8]))
	$9 = [0]
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	
.LABEL $label$4
	CALL eosio_assert($9, [624])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [656])
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [1968])
	$10 = *($5)
	if ( ($10 & [1]) ){ goto $label$10 }
	$10 = uint_32($10 >> [1])
	goto $label$9 
	
.LABEL $label$10
	$10 = *($5 + [4])
	
.LABEL $label$9
	CALL eosio_assert(($10 <= [257]), [688])
	$4 = *($11 + [216])
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)-1) <= (int_64)5), [2080])
	$3 = *($11 + [208])
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)5), [2096])
	CALL eosio_assert((uint_64)($4 <= $3), [2112])
	$9 = ($2 + [8])
	*(($10 = (($11 + [72]) + [8]))) = *($9)
	$7 = *($2)
	*((($11 + [24]) + [12])) = *((($11 + [72]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [72]) = $7
	*($11 + [28]) = *($11 + [76])
	*($11 + [24]) = *($11 + [72])
	CALL _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [24]), $4)
	*(($10 = (($11 + [56]) + [8]))) = *($9)
	$4 = *($2)
	*((($11 + [8]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [56]) = $4
	*($11 + [12]) = *($11 + [60])
	*($11 + [8]) = *($11 + [56])
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $1, ($11 + [8]), $3)
	*($11 + [44]) = $2
	*($11 + [40]) = ($11 + [216])
	*($11 + [48]) = ($11 + [208])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1072])
	CALL $110(($11 + [88]), $8, ($11 + [40]))
	$0 = *($11 + [112])
	if ( ($0 == 0) ){ goto $label$11 }
	$9 = ($11 + [116])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $155($2)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$14 }
	$10 = *(($11 + [112]))
	goto $label$12 
	
.LABEL $label$13
	$10 = $0
	
.LABEL $label$12
	*($9) = $0
	CALL $155($10)
	
.LABEL $label$11
	$0 = *($11 + [152])
	if ( ($0 == 0) ){ goto $label$16 }
	$9 = ($11 + [156])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $155($2)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$19 }
	$10 = *(($11 + [152]))
	goto $label$17 
	
.LABEL $label$18
	$10 = $0
	
.LABEL $label$17
	*($9) = $0
	CALL $155($10)
	
.LABEL $label$16
	$0 = *($11 + [192])
	if ( ($0 == 0) ){ goto $label$21 }
	$9 = ($11 + [196])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$10 = ($10 + [-24])
	$2 = *($10)
	*($10) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $155($2)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$24 }
	$10 = *(($11 + [192]))
	goto $label$22 
	
.LABEL $label$23
	$10 = $0
	
.LABEL $label$22
	*($9) = $0
	CALL $155($10)
	
.LABEL $label$21
	*([0] + [4]) = ($11 + [224])
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([56])
	CALL $114($6)
	*($6 + [44]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [40])
	CALL $115(($8 + [32]), ($8 + [24]))
	*($6 + [48]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [48])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $116(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [1504])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1552])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1616])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	$5 = *($2 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$3), [1792])
	$4 = (int_64)
	*($1) = $4(*($1) - *($5)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	$5 = *($2 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [24]))), [1792])
	$4 = (int_64)
	*($1 + [16]) = $4(*($1 + [16]) - *($5)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$4
	$5 = *($2 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [40]))), [1792])
	$4 = (int_64)
	*($1 + [32]) = $4(*($1 + [32]) - *($5)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$3
	$5 = *($2 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [56]))), [1792])
	$4 = (int_64)
	*($1 + [48]) = $4(*($1 + [48]) - *($5)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($2 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [72]))), [1792])
	$4 = (int_64)
	*($1 + [64]) = $4(*($1 + [64]) - *($5)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1872])
	
.LABEL $label$1
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_64)*(*($2 + [8])) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$14
	$2 = *($2 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [8]))), [1232])
	$4 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1312])
	goto $label$8 
	
.LABEL $label$13
	CALL eosio_assert([0], [864])
	goto $label$8 
	
.LABEL $label$12
	$2 = *($2 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [24]))), [1232])
	$4 = ((int_64)*($1 + [16]) + (int_64)*($2))
	*($1 + [16]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1312])
	goto $label$8 
	
.LABEL $label$11
	$2 = *($2 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [40]))), [1232])
	$4 = ((int_64)*($1 + [32]) + (int_64)*($2))
	*($1 + [32]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [1312])
	goto $label$8 
	
.LABEL $label$10
	$2 = *($2 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1232])
	$4 = ((int_64)*($1 + [48]) + (int_64)*($2))
	*($1 + [48]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1312])
	goto $label$8 
	
.LABEL $label$9
	$2 = *($2 + [4])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1232])
	$4 = ((int_64)*($1 + [64]) + (int_64)*($2))
	*($1 + [64]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1312])
	
.LABEL $label$8
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$7 = $7
	$2 = ($7 + [-96])
	*([0] + [4]) = $2
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = $7
	*($6 + [16]) = $6
	*($6 + [28]) = ($1 + [16])
	*($6 + [24]) = $1
	*($6 + [32]) = ($1 + [32])
	*($6 + [36]) = ($1 + [48])
	*($6 + [40]) = ($1 + [64])
	*($6 + [44]) = ($1 + [80])
	CALL $83(($6 + [24]), ($6 + [16]))
	CALL db_update_i64(*($1 + [100]), (int_64)0, $2, [96])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$15
	*([0] + [4]) = ($6 + [48])
	(CASTING uint_32)(uint_64 $4)
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1504])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1552])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1616])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = *($2)
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$3), [1232])
	$5 = ((int_64)*($1) + (int_64)*($4))
	*($1) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1312])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = (float_64)1
	$2 = *($2 + [4])
	$5 = *($2)
	if ( ((int_64)$5 < (int_64)10000000000001) ){ goto $label$1 }
	$6 = (CASTING float_64)(int_32 ((int_32)([95] - (CASTING uint_32)(uint_64 ((int_64))(*($2 + [16]) - $5) / (int_64)1000000000000))) / (int_32)[3]))
	
.LABEL $label$1
	$5 = (Rounds 0)(((float_64)CALL pow((float_64)0.8, $6) * (float_64)(float_64)1e6))
	*($1 + [48]) = (int_64))($5 - ((int_64)$5 % (int_64)100))
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$8 = $8
	$2 = ($8 + [-80])
	*([0] + [4]) = $2
	*($7 + [4]) = $2
	*($7) = $2
	*($7 + [8]) = ($8 + [-8])
	*($7 + [16]) = $7
	*($7 + [28]) = ($1 + [16])
	*($7 + [24]) = $1
	*($7 + [32]) = ($1 + [32])
	*($7 + [36]) = ($1 + [48])
	*($7 + [40]) = ($1 + [64])
	CALL $69(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $2, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $118 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [136]))) = (int_64)1398362884
	*($0 + [128]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [152]))) = (int_64)1398362884
	*($0 + [144]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$3 = [0]
	
.LABEL $label$36
	CALL eosio_assert($3, [768])
	return $0
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [64])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $152 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11622]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11624])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11622]) = [1]
	$7 = ($7 << [16])
	*([0] + [11624]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11624])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11624]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11622]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11622]) = [1]
	$3 = ($3 << [16])
	*([0] + [11624]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11624])
	
.LABEL $label$8
	*([0] + [11624]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11516])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11324]
	$1 = (((int_32)$2 * (int_32)[12]) + [11324])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $151([3132], $0)
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $152($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11536])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $156 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $154(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $155($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $154 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11628])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $155 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $158 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $154($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [11648])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [11632]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [11664]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

void .FUNC _ZN5eosio5token7checktoEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [464])
	*([0] + [4]) = $19
	CALL require_auth(*($0))
	CALL eosio_assert([1], [880])
	$18 = [0]
	$16 = (int_64)21334
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [768])
	$17 = [0]
	*(($19 + [72])) = [0]
	*($19 + [56]) = (int_64)-1
	$16 = *($0)
	*($19 + [40]) = $16
	*($19 + [48]) = (int_64)21334
	*($19 + [64]) = (int_64)0
	$18 = CALL db_lowerbound_i64($16, (int_64)21334, (int_64)-3665743478920894976, (int_64)0)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$6 }
	$17 = CALL $117(($19 + [40]), $18)
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)1) ){ goto $label$9 }
	$5 = *(($19 + [64]))
	$17 = *(($19 + [68]))
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$10 }
	$18 = ($17 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$11:
	if ( ((int_64)*(*($18)) == (int_64)$1) ){ goto $label$10 }
	$17 = $18
	$7 = ($18 + [-24])
	$18 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$12 }
	$17 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [168]) == (int_32)($19 + [40])), [944])
	if ( ((int_64)($2 == 0) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$12
	$17 = [0]
	$18 = CALL db_find_i64(*($19 + [40]), *(($19 + [48])), (int_64)-3665743478920894976, $1)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$9 }
	$17 = CALL $117(($19 + [40]), $18)
	CALL eosio_assert(((int_32)*($17 + [168]) == (int_32)($19 + [40])), [944])
	
.LABEL $label$9
	if ( (int_64)($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$5 = ($19 + [24])
	$4 = (($19 + [80]) + [248])
	$8 = ($19 + [8])
	$9 = ($19 + [16])
	$10 = ($19 + [32])
	$11 = (($19 + [360]) + [28])
	$12 = ($19 + [396])
	$13 = ($19 + [428])
	$14 = ($19 + [436])
	$16 = (int_64)0
	
.LOOP $label$13:
	if ( ($17 == 0) ){ goto $label$7 }
	*($5) = (int_64)0
	*($8) = (int_64)21334
	*($9) = (int_64)-1
	*($10) = [0]
	$1 = *($0)
	*($19) = $1
	$18 = CALL db_find_i64($1, (int_64)21334, (int_64)-3665743478920894880, *($17))
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*(CALL $60($19, $18) + [248]) == (int_32)$19), [944])
	goto $label$14 
	
.LABEL $label$15
	$3 = *($0)
	CALL eosio_assert(((int_64)*($19) == (int_64)CALL $fimport$2()), [1008])
	$18 = CALL $154([264])
	CALL $61($18)
	*($18 + [248]) = $19
	*($18) = *($17)
	*(($18 + [20])) = *(($17 + [20]))
	$7 = ($17 + [16])
	*(($18 + [16])) = *($7)
	*(($18 + [12])) = *(($17 + [12]))
	*($18 + [8]) = *($17 + [8])
	*($18 + [24]) = *($17 + [24])
	$6 = ($17 + [32])
	*(($18 + [32])) = *($6)
	*($18 + [40]) = *($17 + [40])
	*($18 + [44]) = *($17 + [44])
	*(($18 + [60])) = *(($17 + [60]))
	*(($18 + [56])) = *(($17 + [56]))
	*(($18 + [52])) = *(($17 + [52]))
	*($18 + [48]) = *($17 + [48])
	*($18 + [64]) = *($17 + [64])
	*(($18 + [72])) = *(($17 + [72]))
	*($18 + [80]) = *($17 + [80])
	*($18 + [84]) = *($17 + [84])
	*(($18 + [100])) = *(($17 + [100]))
	*(($18 + [96])) = *(($17 + [96]))
	*(($18 + [92])) = *(($17 + [92]))
	*($18 + [88]) = *($17 + [88])
	*($18 + [104]) = *($17 + [104])
	*(($18 + [112])) = *(($17 + [112]))
	*($18 + [120]) = *($17 + [120])
	*($18 + [124]) = *($17 + [124])
	*(($18 + [140])) = *(($17 + [140]))
	*(($18 + [136])) = *(($17 + [136]))
	*(($18 + [132])) = *(($17 + [132]))
	*($18 + [128]) = *($17 + [128])
	*($18 + [144]) = *($17 + [144])
	*(($18 + [152])) = *(($17 + [152]))
	*($18 + [160]) = *($17 + [160])
	*($18 + [164]) = *($17 + [164])
	*($18 + [176]) = *($7)
	*($18 + [192]) = *($6)
	*($18 + [216]) = *($7)
	*($18 + [232]) = *($6)
	*((($19 + [336]) + [8])) = $4
	*($19 + [340]) = ($19 + [80])
	*($19 + [336]) = ($19 + [80])
	*($19 + [352]) = ($19 + [336])
	*((($19 + [360]) + [8])) = ($18 + [24])
	*((($19 + [360]) + [12])) = ($18 + [40])
	*((($19 + [360]) + [16])) = ($18 + [44])
	*((($19 + [360]) + [20])) = ($18 + [48])
	*((($19 + [360]) + [24])) = ($18 + [64])
	*($19 + [364]) = ($18 + [8])
	*($19 + [360]) = $18
	*($11) = ($18 + [80])
	*((($19 + [360]) + [32])) = ($18 + [84])
	*($12) = ($18 + [88])
	*((($19 + [360]) + [40])) = ($18 + [104])
	*((($19 + [360]) + [44])) = ($18 + [120])
	*((($19 + [360]) + [48])) = ($18 + [124])
	*((($19 + [360]) + [52])) = ($18 + [128])
	*((($19 + [360]) + [56])) = ($18 + [144])
	*((($19 + [360]) + [60])) = ($18 + [160])
	*((($19 + [360]) + [64])) = ($18 + [164])
	*($13) = ($18 + [168])
	*((($19 + [360]) + [72])) = ($18 + [184])
	*($14) = ($18 + [200])
	*((($19 + [360]) + [80])) = ($18 + [204])
	*((($19 + [360]) + [84])) = ($18 + [208])
	*((($19 + [360]) + [88])) = ($18 + [224])
	*((($19 + [360]) + [92])) = ($18 + [240])
	*((($19 + [360]) + [96])) = ($18 + [244])
	CALL $59(($19 + [360]), ($19 + [352]))
	$1 = *($18)
	$6 = CALL db_store_i64(*($8), (int_64)-3665743478920894880, $3, $1, ($19 + [80]), [248])
	*($18 + [252]) = $6
	if ( (uint_64)($1 <= *($9)) ){ goto $label$16 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($19 + [360]) = $18
	$1 = *($18)
	*($19 + [80]) = $1
	*($19 + [336]) = $6
	$15 = ($19 + [28])
	$7 = *($15)
	if ( ((uint_32)$7 >= (uint_32)*($10)) ){ goto $label$18 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($19 + [360]) = [0]
	*($7) = $18
	*($15) = ($7 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $63($5, ($19 + [360]), ($19 + [80]), ($19 + [336]))
	
.LABEL $label$17
	$18 = *($19 + [360])
	*($19 + [360]) = [0]
	if ( ($18 == 0) ){ goto $label$14 }
	CALL $155($18)
	
.LABEL $label$14
	CALL eosio_assert([1], [1472])
	$18 = *($17 + [172])
	$17 = [0]
	$18 = CALL db_next_i64($18, ($19 + [80]))
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$19 }
	$17 = CALL $117(($19 + [40]), $18)
	
.LABEL $label$19
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$20 }
	$15 = ($19 + [28])
	$18 = *($15)
	if ( ((int_32)$18 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$23:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$24 }
	CALL $155($7)
	
.LABEL $label$24
	if ( ((int_32)$6 != (int_32)$18) ){ goto $label$23 }
	$18 = *($5)
	goto $label$21 
	
.LABEL $label$22
	$18 = $6
	
.LABEL $label$21
	*($15) = $6
	CALL $155($18)
	
.LABEL $label$20
	$16 = ((int_64)$16 + (int_64)1)
	if ( (uint_64)($16 <= $2) ){ goto $label$13 }
	
.LABEL $label$7
	$17 = *($19 + [64])
	if ( ($17 == 0) ){ goto $label$25 }
	$6 = ($19 + [68])
	$18 = *($6)
	if ( ((int_32)$18 == (int_32)$17) ){ goto $label$27 }
	
.LOOP $label$28:
	$18 = ($18 + [-24])
	$7 = *($18)
	*($18) = [0]
	if ( ($7 == 0) ){ goto $label$29 }
	CALL $155($7)
	
.LABEL $label$29
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$28 }
	$18 = *(($19 + [64]))
	goto $label$26 
	
.LABEL $label$27
	$18 = $17
	
.LABEL $label$26
	*($6) = $17
	CALL $155($18)
	
.LABEL $label$25
	*([0] + [4]) = ($19 + [464])
}

void .FUNC _ZN5eosio5token7checkimEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [224])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	CALL eosio_assert([1], [880])
	$6 = [0]
	$5 = (int_64)21334
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$2 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	CALL eosio_assert($2, [768])
	*((($7 + [40]) + [32])) = [0]
	*($7 + [56]) = (int_64)-1
	*($7 + [64]) = (int_64)0
	$5 = *($0)
	*($7 + [40]) = $5
	*($7 + [48]) = (int_64)21334
	$6 = CALL db_find_i64($5, (int_64)21334, (int_64)8406652938591141888, (int_64)21334)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$2 = CALL $121(($7 + [40]), $6)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)($7 + [40])), [944])
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	*($7 + [8]) = (int_64)21334
	$6 = CALL db_find_i64($5, (int_64)21334, (int_64)8406652938591240192, (int_64)21334)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $66($7, $6) + [96]) == (int_32)$7), [944])
	$0 = *($7 + [24])
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$3 = *($0)
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$2()), [1008])
	$6 = CALL $154([112])
	CALL $86($6)
	*($6 + [96]) = $7
	$4 = ($2 + [8])
	*(($0 = ($6 + [8]))) = *($4)
	*($6) = *($2)
	*($6 + [16]) = *($2 + [16])
	*(($6 + [24])) = *(($2 + [24]))
	*(($6 + [40])) = *(($2 + [40]))
	*($6 + [32]) = *($2 + [32])
	*(($6 + [56])) = *(($2 + [56]))
	*($6 + [48]) = *($2 + [48])
	*($6 + [72]) = *($4)
	*($6 + [88]) = *($4)
	*($7 + [184]) = (($7 + [80]) + [96])
	*($7 + [180]) = ($7 + [80])
	*($7 + [176]) = ($7 + [80])
	*($7 + [192]) = ($7 + [176])
	*($7 + [204]) = ($6 + [16])
	*($7 + [200]) = $6
	*($7 + [208]) = ($6 + [32])
	*($7 + [212]) = ($6 + [48])
	*($7 + [216]) = ($6 + [64])
	*($7 + [220]) = ($6 + [80])
	CALL $83(($7 + [200]), ($7 + [192]))
	$5 = (uint_64)*($0) >> (uint_64)(int_64)8
	$4 = CALL db_store_i64(*(($7 + [8])), (int_64)8406652938591240192, $3, $5), ($7 + [80]), [96]
	*($6 + [100]) = $4)
	$2 = ($7 + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$10 }
	*($2) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$10
	*($7 + [200]) = $6
	$5 = (uint_64)*($0) >> (uint_64)(int_64)8
	*($7 + [80]) = $5)
	*($7 + [176]) = $4
	$0 = ($7 + [28])
	$2 = *($0)
	if ( ((uint_32)$2 >= (uint_32)*(($7 + [32]))) ){ goto $label$12 }
	*($2 + [8]) = $5
	*($2 + [16]) = $4
	*($7 + [200]) = [0]
	*($2) = $6
	*($0) = ($2 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $88(($7 + [24]), ($7 + [200]), ($7 + [80]), ($7 + [176]))
	
.LABEL $label$11
	$6 = *($7 + [200])
	*($7 + [200]) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $155($6)
	
.LABEL $label$13
	$0 = *($7 + [24])
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$4 = ($7 + [28])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $155($2)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$16 }
	$6 = *(($7 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $0
	
.LABEL $label$14
	*($4) = $0
	CALL $155($6)
	
.LABEL $label$7
	$0 = *($7 + [64])
	if ( ($0 == 0) ){ goto $label$6 }
	$4 = ($7 + [68])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $155($2)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$20 }
	$6 = *(($7 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$6 = $0
	
.LABEL $label$18
	*($4) = $0
	CALL $155($6)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [224])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [48])
	$7 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$5 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *(($2 + [4]))
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$3), [1232])
	$5 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [24]))), [1232])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($2))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [40]))), [1232])
	$5 = ((int_64)*($1 + [32]) + (int_64)*($2))
	*($1 + [32]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1232])
	$5 = ((int_64)*($1 + [48]) + (int_64)*($2))
	*($1 + [48]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1232])
	$5 = ((int_64)*($1 + [64]) + (int_64)*($2))
	*($1 + [64]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1312])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$2 = $6
	$6 = ($2 + [-96])
	*([0] + [4]) = $6
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = $2
	*($7 + [16]) = $7
	*($7 + [28]) = ($1 + [16])
	*($7 + [24]) = $1
	*($7 + [32]) = ($1 + [32])
	*($7 + [36]) = ($1 + [48])
	*($7 + [40]) = ($1 + [64])
	*($7 + [44]) = ($1 + [80])
	CALL $83(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [100]), (int_64)0, $6, [96])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
	(CASTING uint_32)(uint_64 $5)
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [48])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($2 + [12])
	$10 = *($1 + [8])
	$5 = *($2)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$10), [1792])
	$3 = (int_64)
	*($1) = $3(*($1) - *($5)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1872])
	$3 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = *($2 + [4])
	$5 = *($6 + [4])
	if ( ((int_64)*($1) < (int_64)100000000) ){ goto $label$3 }
	$6 = *(($2 + [8]))
	if ( ($5 == 0) ){ goto $label$2 }
	CALL eosio_assert([1], [1072])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [1120])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [1168])
	*(($5 + [20])) = *(($1 + [12]))
	*(($2 = ($5 + [16]))) = *(($1 + [8]))
	*(($5 + [12])) = *(($1 + [4]))
	*($5 + [8]) = *($1)
	$10 = *($5)
	CALL eosio_assert([1], [1360])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $5, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), ($5 + [8]), [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $2, [8])
	CALL db_update_i64(*($5 + [28]), (int_64)0, ($12 + [16]), [24])
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$1 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$1 }
	$5 = *(($2 + [8]))
	$10 = *($6)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$10 >> (uint_64)(int_64)32)
	$6 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($6), [1424])
	CALL eosio_assert($6, [1472])
	$6 = CALL db_next_i64(*($2 + [28]), ($12 + [16]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $49((CASTING uint_32)(uint_64 $10), $6)
	
.LABEL $label$4
	CALL $54($5, $2)
	goto $label$1 
	
.LABEL $label$2
	$8 = *($2 + [16])
	$7 = *($4)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$2()), [1008])
	*(($5 = CALL $154([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$9 = ($5 + [16])
	$4 = ($5 + [8])
	$10 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$11 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$11 = [0]
	
.LABEL $label$5
	CALL eosio_assert($11, [768])
	*($5 + [24]) = $6
	$10 = *($8)
	*(($4 + [12])) = *(($1 + [12]))
	*(($4 + [8])) = *(($1 + [8]))
	*(($4 + [4])) = *(($1 + [4]))
	*($4) = *($1)
	*($5) = $10
	CALL eosio_assert([1], [1344])
	CALL memcpy(($12 + [16]), $5, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) | [8]), $4, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($12 + [16]) + [16]), $9, [8])
	$10 = *($5)
	$4 = CALL db_store_i64(*($6 + [8]), (int_64)3774689537475637248, $7, $10, ($12 + [16]), [24])
	*($5 + [28]) = $4
	if ( (uint_64)($10 <= *($6 + [16])) ){ goto $label$10 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($12 + [8]) = $5
	$10 = *($5)
	*($12 + [16]) = $10
	*($12 + [4]) = $4
	$11 = ($6 + [28])
	$2 = *($11)
	if ( ((uint_32)$2 >= (uint_32)*(($6 + [32]))) ){ goto $label$12 }
	*($2 + [8]) = $10
	*($2 + [16]) = $4
	*($12 + [8]) = [0]
	*($2) = $5
	*($11) = ($2 + [24])
	goto $label$11 
	
.LABEL $label$12
	CALL $53(($6 + [24]), ($12 + [8]), ($12 + [16]), ($12 + [4]))
	
.LABEL $label$11
	$2 = *($12 + [8])
	*($12 + [8]) = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $155($2)
	
.LABEL $label$1
	$5 = ($1 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*($5) >> (uint_64)(int_64)8)), [1360])
	$13 = $13
	$2 = ($13 + [-16])
	*([0] + [4]) = $2
	CALL eosio_assert([1], [1344])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy(($13 + [-8]), $5, [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $2, [16])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
}

void .FUNC _ZN5eosio5token10miningdiceEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [144])
	*([0] + [4]) = $15
	$7 = ($0 + [36])
	$10 = *($7)
	if ( ($10 == 0) ){ goto $label$5 }
	$7 = ($0 + [36])
	
.LOOP $label$6:
	$9 = *($10 + [16])
	if ( ((int_32)$9 < (int_32)[8]) ){ goto $label$8 }
	$9 = *($10)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$9 == (int_32)[7]) ){ goto $label$3 }
	$7 = ($10 + [4])
	$9 = *($10 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$10 = $7
	
.LABEL $label$7
	$7 = $10
	$10 = $9
	goto $label$6 
	
.LABEL $label$5
	$10 = $7
	$9 = *($7)
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$7 = $10
	
.LABEL $label$3
	$9 = *($7)
	if ( $9 ){ goto $label$1 }
	
.LABEL $label$2
	*(($9 = CALL $154([32]))) = (int_64)0
	*($9 + [8]) = $10
	*($7) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [7]
	$10 = $9
	$8 = ($0 + [32])
	$4 = *(*($8))
	if ( ($4 == 0) ){ goto $label$9 }
	*($8) = $4
	$10 = *($7)
	
.LABEL $label$9
	CALL $125(*(($0 + [36])), $10)
	*(($10 = ($0 + [40]))) = (*($10) + [1])
	
.LABEL $label$1
	CALL require_auth(*(($9 + [24])))
	CALL eosio_assert([1], [880])
	$12 = (int_64)5462355
	$10 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$7 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	
.LABEL $label$10
	CALL eosio_assert($7, [768])
	*(($15 + [80])) = [0]
	*($15 + [64]) = (int_64)-1
	$12 = (int_64)0
	*($15 + [72]) = (int_64)0
	$14 = *($0)
	*($15 + [48]) = $14
	*($15 + [56]) = (int_64)21334
	$10 = [0]
	$7 = CALL db_find_i64($14, (int_64)21334, (int_64)-4157508551318700032, (int_64)21334)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	$10 = CALL $89(($15 + [48]), $7)
	CALL eosio_assert(((int_32)*($10 + [72]) == (int_32)($15 + [48])), [944])
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [2416])
	$6 = ((int_64)((int_64)*($2) * (int_64)*($10 + [48])) / (int_64)10000)
	$5 = *($0)
	$11 = (int_64)59
	$10 = [2000]
	$13 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$21 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$7 = ($7 + [165])
	goto $label$19 
	
.LABEL $label$21
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$17
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$16 }
	*(($7 = (($15 + [8]) + [16]))) = (int_64)5461508
	*($15 + [16]) = $6
	*($15 + [8]) = $1
	CALL $159(($15 + [32]), $3)
	*(($10 = CALL $154([16]))) = $5
	*($10 + [8]) = $13
	*($15 + [128]) = $10
	$10 = ($10 + [16])
	*($15 + [136]) = $10
	*($15 + [132]) = $10
	*($15 + [88]) = *($15 + [8])
	*((($15 + [88]) + [16])) = *($7)
	*($15 + [96]) = *($15 + [16])
	$10 = (($15 + [8]) + [32])
	*(($7 = (($15 + [88]) + [32]))) = *($10)
	*($15 + [112]) = *($15 + [32])
	*($15 + [32]) = [0]
	*(($15 + [36])) = [0]
	*($10) = [0]
	CALL $126($5, (int_64)8516769789752901632, ($15 + [128]), ($15 + [88]))
	if ( ((*($15 + [112]) & [1]) == 0) ){ goto $label$22 }
	CALL $155(*($7))
	
.LABEL $label$22
	$10 = *($15 + [128])
	if ( ($10 == 0) ){ goto $label$23 }
	*($15 + [132]) = $10
	CALL $155($10)
	
.LABEL $label$23
	if ( ((*(($15 + [32])) & [1]) == 0) ){ goto $label$24 }
	CALL $155(*(($15 + [40])))
	
.LABEL $label$24
	$9 = *($15 + [72])
	if ( ($9 == 0) ){ goto $label$25 }
	$0 = ($15 + [76])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$27 }
	
.LOOP $label$28:
	$10 = ($10 + [-24])
	$7 = *($10)
	*($10) = [0]
	if ( ($7 == 0) ){ goto $label$29 }
	CALL $155($7)
	
.LABEL $label$29
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$28 }
	$10 = *(($15 + [72]))
	goto $label$26 
	
.LABEL $label$27
	$10 = $9
	
.LABEL $label$26
	*($0) = $9
	CALL $155($10)
	
.LABEL $label$25
	*([0] + [4]) = ($15 + [144])
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [1712])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $96(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $131(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $155(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [768])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $128(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $129(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $155(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [2160])
	CALL require_auth($1)
	CALL _ZN5eosio5token19require_banexchangeEy($10, $1)
	CALL _ZN5eosio5token19require_banexchangeEy($10, $2)
	CALL eosio_assert(CALL $fimport$12($2), [2192])
	$5 = *($3 + [8])
	$8 = [0]
	*(($11 + [104])) = [0]
	$9 = (uint_64)$5 >> (uint_64)(int_64)8
	*($11 + [80]) = $9)
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	*($11 + [72]) = *($0)
	$6 = CALL $65(($11 + [72]), $9, [1936])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$7 = *($3)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [624])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [656])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [1968])
	$10 = *($4)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [2224])
	$8 = ($3 + [8])
	*(($10 = (($11 + [56]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [24]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [56]) = $9
	*($11 + [28]) = *($11 + [60])
	*($11 + [24]) = *($11 + [56])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($11 + [24]))
	*(($10 = (($11 + [40]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [40]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [40]) = $9
	*($11 + [12]) = *($11 + [44])
	*($11 + [8]) = *($11 + [40])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $2, ($11 + [8]), $1)
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$8 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $155($3)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$11 }
	$10 = *(($11 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$10 = $8
	
.LABEL $label$9
	*($0) = $8
	CALL $155($10)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [112])
}

void .FUNC _ZN5eosio5token9fixsupplyENS_5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [176])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$3 = *($1 + [8])
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($0)
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	*($6 + [16]) = $4)
	$0 = CALL $65(($6 + [8]), $4, [1936])
	CALL eosio_assert(((int_32)*($0 + [72]) == (int_32)($6 + [8])), [1120])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$4), [1792])
	$3 = (int_64)
	*($0) = $3(*($0) - *($1)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [1872])
	$3 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$3) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($6 + [136]) = (($6 + [48]) + [72])
	*($6 + [132]) = ($6 + [48])
	*($6 + [128]) = ($6 + [48])
	*($6 + [144]) = ($6 + [128])
	*($6 + [156]) = ($0 + [16])
	*($6 + [152]) = $0
	*($6 + [160]) = ($0 + [32])
	*($6 + [164]) = ($0 + [48])
	*($6 + [168]) = ($0 + [64])
	CALL $69(($6 + [152]), ($6 + [144]))
	CALL db_update_i64(*($0 + [76]), (int_64)0, ($6 + [48]), [72])
	if ( (uint_64)($3 <= *($6 + [24])) ){ goto $label$1 }
	*((($6 + [8]) + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $155($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $155($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [176])
}

void .FUNC _ZN5eosio5token9fixpledgeENS_5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [176])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$3 = *($1 + [8])
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = *($0)
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	*($6 + [16]) = $4)
	$0 = CALL $65(($6 + [8]), $4, [1936])
	CALL eosio_assert(((int_32)*($0 + [72]) == (int_32)($6 + [8])), [1120])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$4 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [40]))), [1792])
	$3 = (int_64)
	*($0 + [32]) = $3(*($0 + [32]) - *($1)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($0 + [32]) < (int_64)4611686018427387904), [1872])
	$3 = (uint_64)$4 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$3) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($6 + [136]) = (($6 + [48]) + [72])
	*($6 + [132]) = ($6 + [48])
	*($6 + [128]) = ($6 + [48])
	*($6 + [144]) = ($6 + [128])
	*($6 + [156]) = ($0 + [16])
	*($6 + [152]) = $0
	*($6 + [160]) = ($0 + [32])
	*($6 + [164]) = ($0 + [48])
	*($6 + [168]) = ($0 + [64])
	CALL $69(($6 + [152]), ($6 + [144]))
	CALL db_update_i64(*($0 + [76]), (int_64)0, ($6 + [48]), [72])
	if ( (uint_64)($3 <= *($6 + [24])) ){ goto $label$1 }
	*((($6 + [8]) + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$1
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$2 }
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $155($1)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($5) = $2
	CALL $155($0)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [176])
}

void .FUNC _ZN5eosio5token9deductionEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	$4 = ($0 + [36])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$5 }
	$10 = ($0 + [36])
	
.LOOP $label$6:
	$9 = *($5 + [16])
	if ( ((int_32)$9 < (int_32)[8]) ){ goto $label$8 }
	$9 = *($5)
	if ( $9 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$9 == (int_32)[7]) ){ goto $label$3 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $10
	
.LABEL $label$7
	$10 = $5
	$5 = $9
	goto $label$6 
	
.LABEL $label$5
	$5 = $4
	$10 = $4
	$9 = *($10)
	if ( $9 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$10 = $5
	
.LABEL $label$3
	$9 = *($10)
	if ( $9 ){ goto $label$1 }
	
.LABEL $label$2
	*(($9 = CALL $154([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [7]
	$5 = $9
	$7 = ($0 + [32])
	$6 = *(*($7))
	if ( ($6 == 0) ){ goto $label$9 }
	*($7) = $6
	$5 = *($10)
	
.LABEL $label$9
	CALL $125(*(($0 + [36])), $5)
	*(($5 = ($0 + [40]))) = (*($5) + [1])
	
.LABEL $label$1
	CALL require_auth(*(($9 + [24])))
	*(($5 = (($11 + [48]) + [8]))) = *(($2 + [8]))
	$8 = *($2)
	*((($11 + [16]) + [12])) = *((($11 + [48]) + [12]))
	*((($11 + [16]) + [8])) = *($5)
	*($11 + [48]) = $8
	*($11 + [20]) = *($11 + [52])
	*($11 + [16]) = *($11 + [48])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($11 + [16]))
	$10 = ($0 + [36])
	$5 = *($10)
	if ( ($5 == 0) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = *($5 + [16])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$17 }
	$9 = *($5)
	if ( $9 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((int_32)$9 == (int_32)[6]) ){ goto $label$12 }
	$10 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$12 }
	$5 = $10
	
.LABEL $label$16
	$10 = $5
	$5 = $9
	goto $label$15 
	
.LABEL $label$14
	$5 = $4
	$10 = $4
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$10 = $5
	
.LABEL $label$12
	$9 = *($10)
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL $154([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($10) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [6]
	$5 = $9
	$4 = ($0 + [32])
	$7 = *(*($4))
	if ( ($7 == 0) ){ goto $label$18 }
	*($4) = $7
	$5 = *($10)
	
.LABEL $label$18
	CALL $125(*(($0 + [36])), $5)
	*(($5 = ($0 + [40]))) = (*($5) + [1])
	
.LABEL $label$10
	*((($11 + [32]) + [12])) = *(($2 + [12]))
	*(($5 = (($11 + [32]) + [8]))) = *(($2 + [8]))
	*($11 + [32]) = *($2)
	*($11 + [36]) = *(($2 + [4]))
	$1 = *(($9 + [24]))
	$8 = *($0)
	*(($11 + [8])) = *($5)
	*($11) = *($11 + [32])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $11, $8)
	*([0] + [4]) = ($11 + [64])
}

void .FUNC _ZN5eosio5token5candyEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [96])
	*([0] + [4]) = $13
	$5 = ($0 + [36])
	$8 = *($5)
	if ( ($8 == 0) ){ goto $label$5 }
	$5 = ($0 + [36])
	
.LOOP $label$6:
	$7 = *($8 + [16])
	if ( ((int_32)$7 < (int_32)[8]) ){ goto $label$8 }
	$7 = *($8)
	if ( $7 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)[7]) ){ goto $label$3 }
	$5 = ($8 + [4])
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = $5
	
.LABEL $label$7
	$5 = $8
	$8 = $7
	goto $label$6 
	
.LABEL $label$5
	$8 = $5
	$7 = *($5)
	if ( $7 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $8
	
.LABEL $label$3
	$7 = *($5)
	if ( $7 ){ goto $label$1 }
	
.LABEL $label$2
	*(($7 = CALL $154([32]))) = (int_64)0
	*($7 + [8]) = $8
	*($5) = $7
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = [7]
	$8 = $7
	$6 = ($0 + [32])
	$3 = *(*($6))
	if ( ($3 == 0) ){ goto $label$9 }
	*($6) = $3
	$8 = *($5)
	
.LABEL $label$9
	CALL $125(*(($0 + [36])), $8)
	*(($8 = ($0 + [40]))) = (*($8) + [1])
	
.LABEL $label$1
	CALL require_auth(*(($7 + [24])))
	$4 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [2000]
	$11 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$15 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$5 = ($5 + [165])
	goto $label$13 
	
.LABEL $label$15
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$8 = CALL strlen([2144])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$19 }
	*($13 + [8]) = ($8 << [1])
	$5 = (($13 + [8]) | [1])
	if ( $8 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$7 = (($8 + [16]) & [-16])
	$5 = CALL $154($7)
	*($13 + [8]) = ($7 | [1])
	*($13 + [16]) = $5
	*($13 + [12]) = $8
	
.LABEL $label$18
	CALL memcpy($5, [2144], $8)
	
.LABEL $label$17
	*(($5 + $8)) = [0]
	*(($5 = (($13 + [24]) + [8]))) = *(($2 + [8]))
	*($13 + [24]) = *($2)
	$7 = *($13 + [8])
	*($13 + [8]) = [0]
	$0 = *($13 + [16])
	$2 = *($13 + [12])
	*($13 + [12]) = [0]
	*($13 + [16]) = [0]
	*(($8 = CALL $154([16]))) = $4
	*($8 + [8]) = $11
	*(($13 + [60])) = *((($13 + [24]) + [12]))
	*((($13 + [40]) + [12])) = *($13 + [28])
	$6 = ($8 + [16])
	*($13 + [88]) = $6
	*((($13 + [40]) + [16])) = *($5)
	*($13 + [80]) = $8
	*($13 + [40]) = $1
	*($13 + [84]) = $6
	*($13 + [48]) = *($13 + [24])
	*($13 + [64]) = $7
	*(($13 + [68])) = $2
	*(($8 = ($13 + [72]))) = $0
	CALL $126($4, (int_64)8516769789752901632, ($13 + [80]), ($13 + [40]))
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$20 }
	CALL $155(*($8))
	
.LABEL $label$20
	$8 = *($13 + [80])
	if ( ($8 == 0) ){ goto $label$21 }
	*($13 + [84]) = $8
	CALL $155($8)
	
.LABEL $label$21
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$22 }
	CALL $155(*(($13 + [16])))
	
.LABEL $label$22
	*([0] + [4]) = ($13 + [96])
	return (unreachable)
	
.LABEL $label$16
	CALL $156(($13 + [8]))
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*((($6 + [32]) + [12])) = *(($1 + [20]))
	*(($5 = (($6 + [32]) + [8]))) = *(($1 + [16]))
	*($6 + [32]) = *($1 + [8])
	*($6 + [36]) = *(($1 + [12]))
	$2 = *($1)
	$4 = *($1 + [32])
	$3 = *($1 + [24])
	CALL $159(($6 + [16]), ($1 + [40]))
	*((($6 + [48]) + [8])) = *($5)
	*($6 + [48]) = *($6 + [32])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*(*($0)) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($5 = (($6 + [80]) + [8]))) = *((($6 + [48]) + [8]))
	*($6 + [80]) = *($6 + [48])
	CALL $159(($6 + [64]), ($6 + [16]))
	*(($6 + [8])) = *($5)
	*($6) = *($6 + [80])
	CALL void $0((int_32 $2), (int_64 $6), (int_32 $3), (int_64 $4), (int_64 ($6 + [64])), (int_32 $1))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $155(*($6 + [72]))
	
.LABEL $label$2
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $155(*($6 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $135 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC _ZN5eosio5token28add_unpledging_level_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*($7 + [56]) = $3
	*($7 + [32]) = (int_64)-1
	*($7 + [40]) = [0]
	$3 = *($0)
	*($7 + [16]) = $3
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($7 + [24]) = $5)
	*(($7 + [44])) = [0]
	*(($7 + [48])) = [0]
	$0 = [0]
	$4 = CALL db_find_i64($3, $5, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $60(($7 + [16]), $4)
	CALL eosio_assert(((int_32)*($0 + [248]) == (int_32)($7 + [16])), [944])
	
.LABEL $label$1
	*($7 + [12]) = $2
	*($7 + [8]) = ($7 + [56])
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1072])
	CALL $84(($7 + [16]), $0, ($7 + [8]))
	$4 = *($7 + [40])
	if ( ($4 == 0) ){ goto $label$2 }
	$6 = ($7 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $155($2)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($7 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($6) = $4
	CALL $155($0)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [64])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $96(*($1), ($0 + [40]))
}

int_32 .FUNC $65 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$0), [944])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $89($0, $5)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$0), [944])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1680])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $154([32])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1712])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [1712])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $93(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN5eosio5token25sub_pledged_level_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	*($6 + [56]) = $3
	*($6 + [32]) = (int_64)-1
	*($6 + [40]) = [0]
	*($6 + [16]) = *($0)
	*($6 + [24]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	*(($5 = ($6 + [44]))) = [0]
	*(($6 + [48])) = [0]
	$0 = CALL $45(($6 + [16]), $1, [1728])
	*($6 + [4]) = $0
	*($6 + [8]) = $2
	*($6) = ($6 + [56])
	CALL $85(($6 + [16]), $0, $6)
	CALL $45(($6 + [16]), $1, [1728])
	$4 = *($6 + [40])
	if ( ($4 == 0) ){ goto $label$1 }
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $155($0)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($6 + [40]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $4
	
.LABEL $label$2
	*(($6 + [44])) = $4
	CALL $155($2)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [64])
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([112])
	CALL $86($6)
	*($6 + [96]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [16])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [48])
	*($8 + [56]) = ($6 + [64])
	*($8 + [60]) = ($6 + [80])
	CALL $87(($8 + [40]), ($8 + [32]))
	*($6 + [100]) = $1
	*($8 + [32]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [40]) = $5)
	$7 = *($6 + [100])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $88(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC $61 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [136]))) = (int_64)1398362884
	*($0 + [128]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [152]))) = (int_64)1398362884
	*($0 + [144]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$3 = [0]
	
.LABEL $label$36
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [176]))) = (int_64)1398362884
	*($0 + [168]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$3 = [0]
	
.LABEL $label$41
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [192]))) = (int_64)1398362884
	*($0 + [184]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$3 = [0]
	
.LABEL $label$46
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [216]))) = (int_64)1398362884
	*($0 + [208]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$3 = [0]
	
.LABEL $label$51
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [232]))) = (int_64)1398362884
	*($0 + [224]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$58:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$57 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	
.LOOP $label$60:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$57 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$60 }
	
.LABEL $label$59
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	$3 = [0]
	
.LABEL $label$56
	CALL eosio_assert($3, [768])
	return $0
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([264])
	CALL $61($6)
	*($6 + [248]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [44])
	*($8 + [60]) = ($6 + [48])
	*($8 + [64]) = ($6 + [64])
	*($8 + [68]) = ($6 + [80])
	*($8 + [72]) = ($6 + [84])
	*($8 + [76]) = ($6 + [88])
	*($8 + [80]) = ($6 + [104])
	*($8 + [84]) = ($6 + [120])
	*($8 + [88]) = ($6 + [124])
	*($8 + [92]) = ($6 + [128])
	*($8 + [96]) = ($6 + [144])
	*($8 + [100]) = ($6 + [160])
	*($8 + [104]) = ($6 + [164])
	*($8 + [108]) = ($6 + [168])
	*($8 + [112]) = ($6 + [184])
	*($8 + [116]) = ($6 + [200])
	*($8 + [120]) = ($6 + [204])
	*($8 + [124]) = ($6 + [208])
	*($8 + [128]) = ($6 + [224])
	*($8 + [132]) = ($6 + [240])
	*($8 + [136]) = ($6 + [244])
	CALL $62(($8 + [40]), ($8 + [32]))
	*($6 + [252]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [252])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $63(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [144])
	return $6
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [72])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [76])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [80])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [84])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [88])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [92])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [96])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1712])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [48])
	$7 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$5 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *(($2 + [4]))
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$3), [1232])
	$5 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [24]))), [1232])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($2))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [40]))), [1232])
	$5 = ((int_64)*($1 + [32]) + (int_64)*($2))
	*($1 + [32]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1232])
	$5 = ((int_64)*($1 + [48]) + (int_64)*($2))
	*($1 + [48]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1312])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1232])
	$5 = ((int_64)*($1 + [64]) + (int_64)*($2))
	*($1 + [64]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1312])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$2 = $6
	$6 = ($2 + [-96])
	*([0] + [4]) = $6
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = $2
	*($7 + [16]) = $7
	*($7 + [28]) = ($1 + [16])
	*($7 + [24]) = $1
	*($7 + [32]) = ($1 + [32])
	*($7 + [36]) = ($1 + [48])
	*($7 + [40]) = ($1 + [64])
	*($7 + [44]) = ($1 + [80])
	CALL $83(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [100]), (int_64)0, $6, [96])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
	(CASTING uint_32)(uint_64 $5)
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$3 = *($0 + [4])
	*($1 + [8]) = *(*($3) + [8])
	*(($1 + [24])) = *(*($3) + [8])
	$2 = *($0)
	*(($1 + [40])) = *(*($3) + [8])
	*(($1 + [56])) = *(*($3) + [8])
	*(($1 + [72])) = *(*($3) + [8])
	*(($1 + [88])) = *(*($3) + [8])
	$4 = ((int_64)*(*($3 + [4])) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [8])) = *(($3 + [8]))
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	$3 = *($3)
	*($1 + [16]) = *($3)
	*(($1 + [24])) = *(($3 + [8]))
	goto $label$1 
	
.LABEL $label$4
	$3 = *($3)
	*($1 + [32]) = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	$3 = *($3)
	*($1 + [48]) = *($3)
	*(($1 + [56])) = *(($3 + [8]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [64]) = *($3)
	*(($1 + [72])) = *(($3 + [8]))
	
.LABEL $label$1
	$6 = $6
	$3 = ($6 + [-96])
	*([0] + [4]) = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $6
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [16])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [32])
	*($5 + [36]) = ($1 + [48])
	*($5 + [40]) = ($1 + [64])
	*($5 + [44]) = ($1 + [80])
	CALL $83(($5 + [24]), ($5 + [16]))
	$4 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($1 + [100]) = CALL db_store_i64(*($2 + [8]), (int_64)8406652938591240192, *(*($0 + [8])), $4), $3, [96])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	$5 = $6
	*([0] + [4]) = $6
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*(($1 + [16])) = *(*($3 + [4]) + [8])
	$2 = *($0)
	*(($1 + [56])) = *(*($3 + [4]) + [8])
	*(($1 + [96])) = *(*($3 + [4]) + [8])
	*(($1 + [136])) = *(*($3 + [4]) + [8])
	*(($1 + [176])) = *(*($3 + [4]) + [8])
	*(($1 + [216])) = *(*($3 + [4]) + [8])
	*(($1 + [32])) = *(*($3 + [4]) + [8])
	*(($1 + [72])) = *(*($3 + [4]) + [8])
	*(($1 + [112])) = *(*($3 + [4]) + [8])
	*(($1 + [152])) = *(*($3 + [4]) + [8])
	*(($1 + [192])) = *(*($3 + [4]) + [8])
	*(($1 + [232])) = *(*($3 + [4]) + [8])
	$4 = ((int_64)*(*($3 + [8])) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	$3 = *(($3 + [4]))
	*($1 + [8]) = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	*($1 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	$3 = *(($3 + [4]))
	*($1 + [48]) = *($3)
	*(($1 + [56])) = *(($3 + [8]))
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$4
	$3 = *(($3 + [4]))
	*($1 + [88]) = *($3)
	*(($1 + [96])) = *(($3 + [8]))
	*($1 + [120]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$3
	$3 = *(($3 + [4]))
	*($1 + [128]) = *($3)
	*(($1 + [136])) = *(($3 + [8]))
	*($1 + [160]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($3 + [4]))
	*($1 + [168]) = *($3)
	*(($1 + [176])) = *(($3 + [8]))
	*($1 + [200]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	
.LABEL $label$1
	$6 = $6
	$3 = ($6 + [-256])
	*([0] + [4]) = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($6 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [44])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [80])
	*($5 + [56]) = ($1 + [84])
	*($5 + [60]) = ($1 + [88])
	*($5 + [64]) = ($1 + [104])
	*($5 + [68]) = ($1 + [120])
	*($5 + [72]) = ($1 + [124])
	*($5 + [76]) = ($1 + [128])
	*($5 + [80]) = ($1 + [144])
	*($5 + [84]) = ($1 + [160])
	*($5 + [88]) = ($1 + [164])
	*($5 + [92]) = ($1 + [168])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [204])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [116]) = ($1 + [240])
	*($5 + [120]) = ($1 + [244])
	CALL $59(($5 + [24]), ($5 + [16]))
	$4 = *($1)
	*($1 + [252]) = CALL db_store_i64(*($2 + [8]), (int_64)-3665743478920894880, *(*($0 + [8])), $4, $3, [248])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [128])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [128])
	$6 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [248]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1)
	$4 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *(($2 + [4]))
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))), [1232])
	$4 = ((int_64)*($1 + [8]) + (int_64)*($2))
	*($1 + [8]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1312])
	*($1 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1232])
	$4 = ((int_64)*($1 + [48]) + (int_64)*($2))
	*($1 + [48]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1312])
	*($1 + [80]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [96]))), [1232])
	$4 = ((int_64)*($1 + [88]) + (int_64)*($2))
	*($1 + [88]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [1312])
	*($1 + [120]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [136]))), [1232])
	$4 = ((int_64)*($1 + [128]) + (int_64)*($2))
	*($1 + [128]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [128]) < (int_64)4611686018427387904), [1312])
	*($1 + [160]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [176]))), [1232])
	$4 = ((int_64)*($1 + [168]) + (int_64)*($2))
	*($1 + [168]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [168]) < (int_64)4611686018427387904), [1312])
	*($1 + [200]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1360])
	$2 = $5
	$5 = ($2 + [-256])
	*([0] + [4]) = $5
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($2 + [-8])
	*($6 + [16]) = $6
	*($6 + [28]) = ($1 + [8])
	*($6 + [24]) = $1
	*($6 + [32]) = ($1 + [24])
	*($6 + [36]) = ($1 + [40])
	*($6 + [40]) = ($1 + [44])
	*($6 + [44]) = ($1 + [48])
	*($6 + [48]) = ($1 + [64])
	*($6 + [52]) = ($1 + [80])
	*($6 + [56]) = ($1 + [84])
	*($6 + [60]) = ($1 + [88])
	*($6 + [64]) = ($1 + [104])
	*($6 + [68]) = ($1 + [120])
	*($6 + [72]) = ($1 + [124])
	*($6 + [76]) = ($1 + [128])
	*($6 + [80]) = ($1 + [144])
	*($6 + [84]) = ($1 + [160])
	*($6 + [88]) = ($1 + [164])
	*($6 + [92]) = ($1 + [168])
	*($6 + [96]) = ($1 + [184])
	*($6 + [100]) = ($1 + [200])
	*($6 + [104]) = ($1 + [204])
	*($6 + [108]) = ($1 + [208])
	*($6 + [112]) = ($1 + [224])
	*($6 + [116]) = ($1 + [240])
	*($6 + [120]) = ($1 + [244])
	CALL $59(($6 + [24]), ($6 + [16]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $5, [248])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [128])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1504])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1552])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1616])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $104 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [944])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $48($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [944])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1680])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $154([88])
	CALL $90($6)
	*($6 + [72]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [16])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [48])
	*($8 + [56]) = ($6 + [64])
	CALL $91(($8 + [40]), ($8 + [32]))
	*($6 + [76]) = $1
	*($8 + [32]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [40]) = $5)
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $92(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1712])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1712])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1712])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $86 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [768])
	*(($2 = ($0 + [88]))) = (int_64)1398362884
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [880])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [768])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	$5 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [248]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1)
	$4 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [8]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))), [1792])
	$4 = (int_64)
	*($1 + [8]) = $4(*($1 + [8]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [48]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1792])
	$4 = (int_64)
	*($1 + [48]) = $4(*($1 + [48]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [88]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [96]))), [1792])
	$4 = (int_64)
	*($1 + [88]) = $4(*($1 + [88]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [128]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [136]))), [1792])
	$4 = (int_64)
	*($1 + [128]) = $4(*($1 + [128]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [128]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*(*($2 + [4]) + [168]) >= (int_64)*(*($2 + [8]))), [1760])
	$2 = *($2 + [8])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [176]))), [1792])
	$4 = (int_64)
	*($1 + [168]) = $4(*($1 + [168]) - *($2)))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [168]) < (int_64)4611686018427387904), [1872])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1360])
	$6 = $6
	$2 = ($6 + [-256])
	*([0] + [4]) = $2
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = ($6 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [40])
	*($5 + [40]) = ($1 + [44])
	*($5 + [44]) = ($1 + [48])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [80])
	*($5 + [56]) = ($1 + [84])
	*($5 + [60]) = ($1 + [88])
	*($5 + [64]) = ($1 + [104])
	*($5 + [68]) = ($1 + [120])
	*($5 + [72]) = ($1 + [124])
	*($5 + [76]) = ($1 + [128])
	*($5 + [80]) = ($1 + [144])
	*($5 + [84]) = ($1 + [160])
	*($5 + [88]) = ($1 + [164])
	*($5 + [92]) = ($1 + [168])
	*($5 + [96]) = ($1 + [184])
	*($5 + [100]) = ($1 + [200])
	*($5 + [104]) = ($1 + [204])
	*($5 + [108]) = ($1 + [208])
	*($5 + [112]) = ($1 + [224])
	*($5 + [116]) = ($1 + [240])
	*($5 + [120]) = ($1 + [244])
	CALL $59(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $2, [248])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [128])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [128])
	$6 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [248]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1)
	$4 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *(($2 + [4]))
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [32]))), [1232])
	$4 = ((int_64)*($1 + [24]) + (int_64)*($2))
	*($1 + [24]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [1312])
	*($1 + [44]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1232])
	$4 = ((int_64)*($1 + [64]) + (int_64)*($2))
	*($1 + [64]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1312])
	*($1 + [84]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [112]))), [1232])
	$4 = ((int_64)*($1 + [104]) + (int_64)*($2))
	*($1 + [104]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [1312])
	*($1 + [124]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [152]))), [1232])
	$4 = ((int_64)*($1 + [144]) + (int_64)*($2))
	*($1 + [144]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [144]) < (int_64)4611686018427387904), [1312])
	*($1 + [164]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [192]))), [1232])
	$4 = ((int_64)*($1 + [184]) + (int_64)*($2))
	*($1 + [184]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [184]) < (int_64)4611686018427387904), [1312])
	*($1 + [204]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1360])
	$2 = $5
	$5 = ($2 + [-256])
	*([0] + [4]) = $5
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($2 + [-8])
	*($6 + [16]) = $6
	*($6 + [28]) = ($1 + [8])
	*($6 + [24]) = $1
	*($6 + [32]) = ($1 + [24])
	*($6 + [36]) = ($1 + [40])
	*($6 + [40]) = ($1 + [44])
	*($6 + [44]) = ($1 + [48])
	*($6 + [48]) = ($1 + [64])
	*($6 + [52]) = ($1 + [80])
	*($6 + [56]) = ($1 + [84])
	*($6 + [60]) = ($1 + [88])
	*($6 + [64]) = ($1 + [104])
	*($6 + [68]) = ($1 + [120])
	*($6 + [72]) = ($1 + [124])
	*($6 + [76]) = ($1 + [128])
	*($6 + [80]) = ($1 + [144])
	*($6 + [84]) = ($1 + [160])
	*($6 + [88]) = ($1 + [164])
	*($6 + [92]) = ($1 + [168])
	*($6 + [96]) = ($1 + [184])
	*($6 + [100]) = ($1 + [200])
	*($6 + [104]) = ($1 + [204])
	*($6 + [108]) = ($1 + [208])
	*($6 + [112]) = ($1 + [224])
	*($6 + [116]) = ($1 + [240])
	*($6 + [120]) = ($1 + [244])
	CALL $59(($6 + [24]), ($6 + [16]))
	CALL db_update_i64(*($1 + [252]), (int_64)0, $5, [248])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [128])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1344])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1344])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1344])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1344])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1344])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1344])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1344])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN5eosio5token15sub_all_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [416])
	*([0] + [4]) = $10
	$3 = *($2)
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3104])
	$4 = *($2 + [8])
	*((($10 + [248]) + [32])) = [0]
	$5 = (uint_64)$4 >> (uint_64)(int_64)8
	*($10 + [256]) = $5)
	*($10 + [264]) = (int_64)-1
	*($10 + [272]) = (int_64)0
	*($10 + [248]) = *($0)
	$9 = CALL $65(($10 + [248]), $5, [1936])
	*((($10 + [208]) + [32])) = [0]
	*($10 + [216]) = $1
	*($10 + [224]) = (int_64)-1
	*($10 + [232]) = (int_64)0
	$7 = *($0)
	*($10 + [208]) = $7
	$6 = CALL db_find_i64($7, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$15 }
	$6 = CALL $48(($10 + [208]), $6)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($10 + [208])), [944])
	if ( ((int_64)*($6) >= (int_64)$3) ){ goto $label$14 }
	*((($10 + [152]) + [32])) = [0]
	*($10 + [168]) = (int_64)-1
	$7 = *($0)
	*($10 + [152]) = $7
	*($10 + [160]) = $7
	*($10 + [176]) = (int_64)0
	$2 = CALL db_find_i64($7, $7, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*(CALL $64(($10 + [152]), $2) + [16]) == (int_32)($10 + [152])), [944])
	$2 = [0]
	goto $label$10 
	
.LABEL $label$15
	*((($10 + [152]) + [32])) = [0]
	*($10 + [168]) = (int_64)-1
	$7 = *($0)
	*($10 + [152]) = $7
	*($10 + [160]) = $7
	*($10 + [176]) = (int_64)0
	$2 = CALL db_find_i64($7, $7, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $64(($10 + [152]), $2) + [16]) == (int_32)($10 + [152])), [944])
	$2 = [0]
	goto $label$12 
	
.LABEL $label$14
	$5 = *(($2 + [8]))
	*((($10 + [192]) + [8])) = $5
	$4 = *($2)
	*((($10 + [48]) + [8])) = $5
	*($10 + [192]) = $4
	*($10 + [52]) = *($10 + [196])
	*($10 + [48]) = *($10 + [192])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($10 + [48]))
	$2 = *($10 + [232])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$13
	$2 = [1]
	
.LABEL $label$12
	CALL eosio_assert($2, [1904])
	*((($10 + [96]) + [32])) = [0]
	*($10 + [104]) = $5
	*($10 + [112]) = (int_64)-1
	*($10 + [120]) = (int_64)0
	*($10 + [96]) = *($0)
	if ( ((int_64)*(CALL $144(($10 + [96]), $1, [1728]) + [8]) >= (int_64)$3) ){ goto $label$17 }
	CALL eosio_assert([0], [1760])
	$2 = *($10 + [120])
	if ( $2 ){ goto $label$16 }
	goto $label$7 
	
.LABEL $label$17
	*($10 + [72]) = $4
	*(($10 + [8])) = $4
	*($10 + [64]) = $3
	*($10) = $3
	CALL _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE($0, $1, $10)
	CALL eosio_assert(((int_32)*($9 + [72]) == (int_32)($10 + [248])), [1120])
	CALL eosio_assert(((int_64)*($10 + [248]) == (int_64)CALL $fimport$2()), [1168])
	$1 = *($9 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)*(($9 + [40]))), [1792])
	$5 = (int_64)
	*($9 + [32]) = $5(*($9 + [32]) - $3))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($9 + [32]) < (int_64)4611686018427387904), [1872])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($10 + [376]) = (($10 + [288]) + [72])
	*($10 + [372]) = ($10 + [288])
	*($10 + [368]) = ($10 + [288])
	*($10 + [384]) = ($10 + [368])
	*($10 + [396]) = ($9 + [16])
	*($10 + [392]) = $9
	*($10 + [400]) = ($9 + [32])
	*($10 + [404]) = ($9 + [48])
	*($10 + [408]) = ($9 + [64])
	CALL $69(($10 + [392]), ($10 + [384]))
	CALL db_update_i64(*($9 + [76]), (int_64)0, ($10 + [288]), [72])
	$9 = (($10 + [248]) + [16])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$18 }
	*($9) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$18
	$2 = *($10 + [120])
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$16
	$6 = ($10 + [124])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$19:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$20 }
	CALL $155($0)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$19 }
	$9 = *(($10 + [120]))
	goto $label$8 
	
.LABEL $label$11
	$2 = [1]
	
.LABEL $label$10
	CALL eosio_assert($2, [1904])
	$8 = ($6 + [8])
	*(($2 = (($10 + [136]) + [8]))) = *($8)
	$7 = *($6)
	*((($10 + [32]) + [12])) = *((($10 + [136]) + [12]))
	*((($10 + [32]) + [8])) = *($2)
	*($10 + [136]) = $7
	*($10 + [36]) = *($10 + [140])
	*($10 + [32]) = *($10 + [136])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($10 + [32]))
	CALL eosio_assert(((int_64)*($8) == (int_64)$4), [1792])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($3 - *($6))) > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1872])
	*((($10 + [96]) + [32])) = [0]
	*($10 + [104]) = $5
	*($10 + [112]) = (int_64)-1
	*($10 + [120]) = (int_64)0
	*($10 + [96]) = *($0)
	if ( ((int_64)*(CALL $144(($10 + [96]), $1, [1728]) + [8]) >= (int_64)$3) ){ goto $label$22 }
	CALL eosio_assert([0], [1760])
	$2 = *($10 + [120])
	if ( $2 ){ goto $label$21 }
	goto $label$4 
	
.LABEL $label$22
	*($10 + [88]) = $4
	*((($10 + [16]) + [8])) = $4
	*($10 + [80]) = $3
	*($10 + [16]) = $3
	CALL _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE($0, $1, ($10 + [16]))
	CALL eosio_assert(((int_32)*($9 + [72]) == (int_32)($10 + [248])), [1120])
	CALL eosio_assert(((int_64)*($10 + [248]) == (int_64)CALL $fimport$2()), [1168])
	$1 = *($9 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)*(($9 + [40]))), [1792])
	$5 = (int_64)
	*($9 + [32]) = $5(*($9 + [32]) - $3))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($9 + [32]) < (int_64)4611686018427387904), [1872])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)), [1360])
	*($10 + [376]) = (($10 + [288]) + [72])
	*($10 + [372]) = ($10 + [288])
	*($10 + [368]) = ($10 + [288])
	*($10 + [384]) = ($10 + [368])
	*($10 + [396]) = ($9 + [16])
	*($10 + [392]) = $9
	*($10 + [400]) = ($9 + [32])
	*($10 + [404]) = ($9 + [48])
	*($10 + [408]) = ($9 + [64])
	CALL $69(($10 + [392]), ($10 + [384]))
	CALL db_update_i64(*($9 + [76]), (int_64)0, ($10 + [288]), [72])
	$9 = (($10 + [248]) + [16])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$23 }
	*($9) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$23
	$2 = *($10 + [120])
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$21
	$6 = ($10 + [124])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$24:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$25 }
	CALL $155($0)
	
.LABEL $label$25
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$24 }
	$9 = *(($10 + [120]))
	goto $label$5 
	
.LABEL $label$9
	$9 = $2
	
.LABEL $label$8
	*($6) = $2
	CALL $155($9)
	
.LABEL $label$7
	$2 = *($10 + [176])
	if ( ($2 == 0) ){ goto $label$3 }
	$6 = ($10 + [180])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$27 }
	
.LOOP $label$28:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$29 }
	CALL $155($0)
	
.LABEL $label$29
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$28 }
	$9 = *(($10 + [176]))
	goto $label$26 
	
.LABEL $label$27
	$9 = $2
	
.LABEL $label$26
	*($6) = $2
	CALL $155($9)
	$2 = *($10 + [232])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	$9 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $155($9)
	
.LABEL $label$4
	$2 = *($10 + [176])
	if ( ($2 == 0) ){ goto $label$3 }
	$6 = ($10 + [180])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$31 }
	
.LOOP $label$32:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$33 }
	CALL $155($0)
	
.LABEL $label$33
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$32 }
	$9 = *(($10 + [176]))
	goto $label$30 
	
.LABEL $label$31
	$9 = $2
	
.LABEL $label$30
	*($6) = $2
	CALL $155($9)
	
.LABEL $label$3
	$2 = *($10 + [232])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($10 + [236])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$35 }
	
.LOOP $label$36:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$37 }
	CALL $155($0)
	
.LABEL $label$37
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$36 }
	$9 = *(($10 + [232]))
	goto $label$34 
	
.LABEL $label$35
	$9 = $2
	
.LABEL $label$34
	*($6) = $2
	CALL $155($9)
	
.LABEL $label$1
	$2 = *($10 + [272])
	if ( ($2 == 0) ){ goto $label$38 }
	$6 = ($10 + [276])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$40 }
	
.LOOP $label$41:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$42 }
	CALL $155($0)
	
.LABEL $label$42
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$41 }
	$9 = *(($10 + [272]))
	goto $label$39 
	
.LABEL $label$40
	$9 = $2
	
.LABEL $label$39
	*($6) = $2
	CALL $155($9)
	
.LABEL $label$38
	*([0] + [4]) = ($10 + [416])
}

void .FUNC _ZN5eosio5token22add_unpledging_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	$5 = *($0)
	*($8 + [8]) = $5
	$3 = *($2 + [8])
	$6 = (uint_64)$3 >> (uint_64)(int_64)8
	*($8 + [16]) = $6)
	*(($8 + [36])) = [0]
	*((($8 + [8]) + [32])) = [0]
	$0 = [0]
	$4 = CALL db_find_i64($5, $6, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $112(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [944])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [1072])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [1120])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [32]))), [1232])
	$5 = ((int_64)*($0 + [24]) + (int_64)*($2))
	*($0 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($0 + [24]) < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1360])
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $145(($8 + [128]), ($8 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($8 + [48]), [44])
	$0 = ($8 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$2 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $155($2)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$4
	*($7) = $4
	CALL $155($0)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1344])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

int_32 .FUNC $144 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$0), [944])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3665743359353290752, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $112($0, $5)
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$0), [944])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN5eosio5token22sub_unpledging_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = [0]
	*($7 + [8]) = *($0)
	$3 = *($2 + [8])
	*($7 + [16]) = (uint_64)$3 >> (uint_64)(int_64)8)
	*(($7 + [36])) = [0]
	*((($7 + [8]) + [32])) = [0]
	$4 = *($2)
	$0 = CALL $144(($7 + [8]), $1, [1728])
	CALL eosio_assert(((int_64)*($0 + [24]) >= (int_64)$4), [1760])
	if ( ((int_64)$4 != (int_64)*($0 + [24])) ){ goto $label$5 }
	if ( ((int_64)*($0 + [8]) == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($7 + [8])), [1120])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [32]))), [1792])
	$4 = (int_64)
	*(($2 = ($0 + [24]))) = $4(*($2) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [1872])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1360])
	*($7 + [112]) = (($7 + [48]) + [44])
	*($7 + [108]) = ($7 + [48])
	*($7 + [104]) = ($7 + [48])
	*($7 + [120]) = ($7 + [104])
	*($7 + [132]) = ($0 + [8])
	*($7 + [128]) = $0
	*($7 + [136]) = $2
	*($7 + [140]) = ($0 + [40])
	CALL $145(($7 + [128]), ($7 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($7 + [48]), [44])
	$0 = ($7 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$5 = *($7 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL $113(($7 + [8]), $0)
	
.LABEL $label$3
	$5 = *($7 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $155($2)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [144])
}

void .FUNC _ZN5eosio5token19add_pledged_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	$5 = *($0)
	*($8 + [8]) = $5
	$3 = *($2 + [8])
	$6 = (uint_64)$3 >> (uint_64)(int_64)8
	*($8 + [16]) = $6)
	*(($8 + [36])) = [0]
	*(($8 + [40])) = [0]
	$0 = CALL db_find_i64($5, $6, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $112(($8 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [944])
	CALL eosio_assert([1], [1072])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [1120])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$1 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)*(($0 + [16]))), [1232])
	$5 = ((int_64)*($0 + [8]) + (int_64)*($2))
	*($0 + [8]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($0 + [8]) < (int_64)4611686018427387904), [1312])
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [1360])
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $145(($8 + [128]), ($8 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($8 + [48]), [44])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$4 = *($8 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1008])
	$0 = CALL $154([56])
	CALL $114($0)
	*($0 + [44]) = ($8 + [8])
	*($0) = $1
	*(($0 + [20])) = *(($2 + [12]))
	*(($0 + [16])) = *(($2 + [8]))
	*(($0 + [12])) = *(($2 + [4]))
	*($0 + [8]) = *($2)
	*($0 + [32]) = $3
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $145(($8 + [128]), ($8 + [120]))
	$5 = *($0)
	$4 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-3665743359353290752, $1, $5, ($8 + [48]), [44])
	*($0 + [48]) = $4
	$2 = (($8 + [8]) + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$5 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [128]) = $0
	$1 = *($0)
	*($8 + [48]) = $1
	*($8 + [104]) = $4
	$7 = ($8 + [36])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($2 + [8]) = $1
	*($2 + [16]) = $4
	*($8 + [128]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $116(($8 + [32]), ($8 + [128]), ($8 + [48]), ($8 + [104]))
	
.LABEL $label$6
	$0 = *($8 + [128])
	*($8 + [128]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $155($0)
	
.LABEL $label$3
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $155($2)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($7) = $4
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	float_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$5 = *($2)
	*($1 + [16]) = *($5)
	*(($1 + [28])) = *(($5 + [12]))
	*(($1 + [24])) = *(($5 + [8]))
	*(($1 + [20])) = *(($5 + [4]))
	$4 = ($1 + [16])
	$3 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	$7 = (float_64)1
	$5 = *($2 + [4])
	$6 = *($5)
	if ( ((int_64)$6 < (int_64)10000000000001) ){ goto $label$1 }
	$7 = (CASTING float_64)(int_32 ((int_32)([95] - (CASTING uint_32)(uint_64 ((int_64))(*($5 + [16]) - $6) / (int_64)1000000000000))) / (int_32)[3]))
	
.LABEL $label$1
	$6 = (Rounds 0)(((float_64)CALL pow((float_64)0.8, $7) * (float_64)(float_64)1e6))
	*($1 + [48]) = (int_64))($6 - ((int_64)$6 % (int_64)100))
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$2 = $9
	$5 = ($2 + [-80])
	*([0] + [4]) = $5
	*($8 + [4]) = $5
	*($8) = $5
	*($8 + [8]) = ($2 + [-8])
	*($8 + [16]) = $8
	*($8 + [28]) = $4
	*($8 + [24]) = $1
	*($8 + [32]) = ($1 + [32])
	*($8 + [36]) = ($1 + [48])
	*($8 + [40]) = ($1 + [64])
	CALL $69(($8 + [24]), ($8 + [16]))
	CALL db_update_i64(*($1 + [76]), (int_64)0, $5, [72])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [768])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [1712])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [1712])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC _ZN5eosio5token19sub_pledged_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = [0]
	*($8 + [8]) = *($0)
	$5 = *($2 + [8])
	*($8 + [16]) = (uint_64)$5 >> (uint_64)(int_64)8)
	*(($8 + [36])) = [0]
	*(($8 + [40])) = [0]
	$6 = *($2)
	$0 = CALL $144(($8 + [8]), $1, [1728])
	CALL eosio_assert(((int_64)*($0 + [8]) >= (int_64)$6), [1760])
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)($8 + [8])), [1120])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($0)
	CALL eosio_assert(((int_64)$5 == (int_64)*(($0 + [16]))), [1792])
	$5 = (int_64)
	*($0 + [8]) = $5(*($0 + [8]) - $6))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($0 + [8]) < (int_64)4611686018427387904), [1872])
	CALL eosio_assert(((int_64)$3 == (int_64)*($0)), [1360])
	*($8 + [112]) = (($8 + [48]) + [44])
	*($8 + [108]) = ($8 + [48])
	*($8 + [104]) = ($8 + [48])
	*($8 + [120]) = ($8 + [104])
	*($8 + [132]) = ($0 + [8])
	*($8 + [128]) = $0
	*($8 + [136]) = ($0 + [24])
	*($8 + [140]) = ($0 + [40])
	CALL $145(($8 + [128]), ($8 + [120]))
	CALL db_update_i64(*($0 + [48]), (int_64)0, ($8 + [48]), [44])
	if ( (uint_64)($3 <= *($8 + [24])) ){ goto $label$1 }
	*((($8 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	CALL $144(($8 + [8]), $1, [1728])
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $155($2)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($8 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($7) = $4
	CALL $155($0)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [144])
}

int_64 .FUNC _ZN5eosio10miningpropENS_5assetES0_ (int_32 $0, int_32 $1)
{
	int_64 $2
	float_64 $3
	$2 = (Rounds 0)(((float_64)CALL pow((float_64)0.8, $3) * (float_64)(float_64)1e6))
	(int_64))($2 - ((int_64)$2 % (int_64)100))
	$3 = (float_64)1
	$2 = *($1)
	if ( ((int_64)$2 < (int_64)10000000000001) ){ goto $label$1 }
	$3 = (CASTING float_64)(int_32 ((int_32)([95] - (CASTING uint_32)(uint_64 ((int_64))(*($0) - $2) / (int_64)1000000000000))) / (int_32)[3]))
	return .LABEL $label$1
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1344])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1344])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $82(*($1), ($0 + [32]))
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $158($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $154([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [32])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $71($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	*($10 + [16]) = $10
	*($10 + [24]) = $4
	$5 = ($9 + [40])
	CALL $72(($10 + [24]), ($10 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $155($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $155($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $155($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [48])
	$7 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1120])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1168])
	$3 = *($1 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	$5 = ((int_64)*(*($2)) + (int_64)-1)
	if ( ((uint_64)$5 > (uint_64)(int_64)4) ){ goto $label$6 }
	$2 = *(($2 + [4]))
	goto $label$7 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$3), [1792])
	$5 = (int_64)
	*($1) = $5(*($1) - *($2)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [864])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [24]))), [1792])
	$5 = (int_64)
	*($1 + [16]) = $5(*($1 + [16]) - *($2)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [40]))), [1792])
	$5 = (int_64)
	*($1 + [32]) = $5(*($1 + [32]) - *($2)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))), [1792])
	$5 = (int_64)
	*($1 + [48]) = $5(*($1 + [48]) - *($2)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [1872])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [72]))), [1792])
	$5 = (int_64)
	*($1 + [64]) = $5(*($1 + [64]) - *($2)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1840])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [1872])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1360])
	$2 = $6
	$6 = ($2 + [-96])
	*([0] + [4]) = $6
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = $2
	*($7 + [16]) = $7
	*($7 + [28]) = ($1 + [16])
	*($7 + [24]) = $1
	*($7 + [32]) = ($1 + [32])
	*($7 + [36]) = ($1 + [48])
	*($7 + [40]) = ($1 + [64])
	*($7 + [44]) = ($1 + [80])
	CALL $83(($7 + [24]), ($7 + [16]))
	CALL db_update_i64(*($1 + [100]), (int_64)0, $6, [96])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
	(CASTING uint_32)(uint_64 $5)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $154($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $158($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $155($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1344])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1344])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1344])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1344])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1344])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1344])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $76($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $71($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $77($4, $1)
	CALL $79(CALL $78(CALL $78($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [16])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [768])
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $94(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $95(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $155(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	*(($5 = $4) + [76]) = $0
	*($5 + [64]) = *($1)
	*($5 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [880])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [768])
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [84]) = $0
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + $2)
	*($5 + [96]) = ($5 + [80])
	*($5 + [104]) = ($5 + [8])
	CALL $108(($5 + [104]), ($5 + [96]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [84]) = ($5 + [64])
	*($5 + [80]) = ($5 + [76])
	CALL $109(($5 + [80]), ($5 + [8]))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$10 }
	CALL $155(*(($5 + [56])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [112])
	return [1]
}

void .FUNC _ZN5eosio5token12recallimpawnEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [384])
	*([0] + [4]) = $9
	*($9 + [248]) = $2
	CALL require_auth($1)
	$7 = [0]
	*(($9 + [240])) = [0]
	*($9 + [224]) = (int_64)-1
	$2 = *($0)
	*($9 + [208]) = $2
	*($9 + [216]) = $2
	*($9 + [232]) = (int_64)0
	$5 = [0]
	$4 = CALL db_find_i64($2, $2, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $64(($9 + [208]), $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)($9 + [208])), [944])
	
.LABEL $label$1
	CALL eosio_assert(($5 == 0), [1904])
	CALL eosio_assert([1], [880])
	$2 = (int_64)21334
	
.LOOP $label$4:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [768])
	*((($9 + [168]) + [32])) = [0]
	*($9 + [176]) = (int_64)21334
	*($9 + [184]) = (int_64)-1
	*($9 + [192]) = (int_64)0
	*($9 + [168]) = *($0)
	$5 = CALL $65(($9 + [168]), (int_64)21334, [1936])
	*((($9 + [128]) + [32])) = [0]
	*($9 + [136]) = (int_64)21334
	*($9 + [144]) = (int_64)-1
	*($9 + [152]) = (int_64)0
	$2 = *($0)
	*($9 + [128]) = $2
	$7 = CALL db_find_i64($2, (int_64)21334, (int_64)8406652938591240192, (int_64)21334)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $66(($9 + [128]), $7)
	CALL eosio_assert(((int_32)*($8 + [96]) == (int_32)($9 + [128])), [944])
	
.LABEL $label$7
	$7 = [0]
	$2 = (int_64)21334
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$4 = [0]
	
.LABEL $label$8
	CALL eosio_assert($4, [624])
	CALL eosio_assert(((int_64)5461508 == (int_64)*($5 + [8])), [1968])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$14 }
	$7 = uint_32($7 >> [1])
	goto $label$13 
	
.LABEL $label$14
	$7 = *($3 + [4])
	
.LABEL $label$13
	CALL eosio_assert(($7 <= [257]), [688])
	CALL eosio_assert((uint_64)(((int_64)*($9 + [248]) + (int_64)-1) <= (int_64)5), [720])
	$7 = [0]
	*(($9 + [120])) = [0]
	*($9 + [104]) = (int_64)-1
	*($9 + [112]) = (int_64)0
	$2 = *($0)
	*($9 + [88]) = $2
	*($9 + [96]) = (int_64)21334
	$3 = [0]
	$4 = CALL db_find_i64($2, (int_64)21334, (int_64)-3665743478920894880, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	$3 = CALL $60(($9 + [88]), $4)
	CALL eosio_assert(((int_32)*($3 + [248]) == (int_32)($9 + [88])), [944])
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [736])
	*($9 + [80]) = (int_64)1398362884
	*($9 + [72]) = (int_64)0
	CALL eosio_assert([1], [880])
	$2 = (uint_64)*($9 + [80]) >> (uint_64)(int_64)8)
	
.LOOP $label$17:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert($4, [768])
	$2 = ((int_64)*($9 + [248]) + (int_64)-1)
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$26
	*(($9 + [80])) = *(($3 + [32]))
	$2 = *($3 + [24])
	*($9 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2032])
	goto $label$20 
	
.LABEL $label$25
	CALL eosio_assert([0], [864])
	goto $label$20 
	
.LABEL $label$24
	*(($9 + [80])) = *(($3 + [72]))
	$2 = *($3 + [64])
	*($9 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2032])
	goto $label$20 
	
.LABEL $label$23
	*(($9 + [80])) = *(($3 + [112]))
	$2 = *($3 + [104])
	*($9 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2032])
	goto $label$20 
	
.LABEL $label$22
	*(($9 + [80])) = *(($3 + [152]))
	$2 = *($3 + [144])
	*($9 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2032])
	goto $label$20 
	
.LABEL $label$21
	*(($9 + [80])) = *(($3 + [192]))
	$2 = *($3 + [184])
	*($9 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2032])
	
.LABEL $label$20
	$7 = (($9 + [72]) + [8])
	$2 = *($7)
	*((($9 + [56]) + [8])) = $2
	*((($9 + [24]) + [8])) = $2
	$2 = *($9 + [72])
	*($9 + [56]) = $2
	$6 = *($9 + [248])
	*($9 + [24]) = $2
	CALL _ZN5eosio5token28sub_unpledging_level_balanceEyNS_5assetEy($0, $1, ($9 + [24]), $6)
	$2 = *($7)
	*((($9 + [40]) + [8])) = $2
	*((($9 + [8]) + [8])) = $2
	$2 = *($9 + [72])
	*($9 + [40]) = $2
	$6 = *($9 + [248])
	*($9 + [8]) = $2
	CALL _ZN5eosio5token25add_pledged_level_balanceEyNS_5assetEy($0, $1, ($9 + [8]), $6)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)($9 + [168])), [1120])
	CALL eosio_assert(((int_64)*($9 + [168]) == (int_64)CALL $fimport$2()), [1168])
	$4 = ($5 + [8])
	$2 = *($4)
	CALL eosio_assert(((int_64)*($7) == (int_64)*(($5 + [40]))), [1232])
	$1 = ((int_64)*($5 + [32]) + (int_64)*($9 + [72]))
	*($5 + [32]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($5 + [32]) < (int_64)4611686018427387904), [1312])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($4) >> (uint_64)(int_64)8)), [1360])
	*($9 + [344]) = (($9 + [256]) + [72])
	*($9 + [340]) = ($9 + [256])
	*($9 + [336]) = ($9 + [256])
	*($9 + [352]) = ($9 + [336])
	*($9 + [364]) = ($5 + [16])
	*($9 + [360]) = $5
	*($9 + [368]) = ($5 + [32])
	*($9 + [372]) = ($5 + [48])
	*($9 + [376]) = ($5 + [64])
	CALL $69(($9 + [360]), ($9 + [352]))
	CALL db_update_i64(*($5 + [76]), (int_64)0, ($9 + [256]), [72])
	$7 = (($9 + [168]) + [16])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$27 }
	*($7) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$27
	*($9 + [260]) = ($9 + [72])
	*($9 + [256]) = ($9 + [248])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1072])
	CALL $107(($9 + [128]), $8, ($9 + [256]))
	$4 = *($9 + [112])
	if ( ($4 == 0) ){ goto $label$28 }
	$0 = ($9 + [116])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$30 }
	
.LOOP $label$31:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$32 }
	CALL $155($5)
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$31 }
	$7 = *(($9 + [112]))
	goto $label$29 
	
.LABEL $label$30
	$7 = $4
	
.LABEL $label$29
	*($0) = $4
	CALL $155($7)
	
.LABEL $label$28
	$4 = *($9 + [152])
	if ( ($4 == 0) ){ goto $label$33 }
	$0 = ($9 + [156])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$35 }
	
.LOOP $label$36:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	CALL $155($5)
	
.LABEL $label$37
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$36 }
	$7 = *(($9 + [152]))
	goto $label$34 
	
.LABEL $label$35
	$7 = $4
	
.LABEL $label$34
	*($0) = $4
	CALL $155($7)
	
.LABEL $label$33
	$4 = *($9 + [192])
	if ( ($4 == 0) ){ goto $label$38 }
	$0 = ($9 + [196])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$40 }
	
.LOOP $label$41:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$42 }
	CALL $155($5)
	
.LABEL $label$42
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$41 }
	$7 = *(($9 + [192]))
	goto $label$39 
	
.LABEL $label$40
	$7 = $4
	
.LABEL $label$39
	*($0) = $4
	CALL $155($7)
	
.LABEL $label$38
	$4 = *($9 + [232])
	if ( ($4 == 0) ){ goto $label$43 }
	$0 = ($9 + [236])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$45 }
	
.LOOP $label$46:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$47 }
	CALL $155($5)
	
.LABEL $label$47
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$46 }
	$7 = *(($9 + [232]))
	goto $label$44 
	
.LABEL $label$45
	$7 = $4
	
.LABEL $label$44
	*($0) = $4
	CALL $155($7)
	
.LABEL $label$43
	*([0] + [4]) = ($9 + [384])
	(CASTING uint_32)(uint_64 $2)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1344])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1344])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1344])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $80(CALL $81($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1344])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1344])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $80($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC _ZN5eosio5token10lockpledgeEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*((($6 + [8]) + [32])) = [0]
	*($6 + [24]) = (int_64)-1
	$1 = *($0)
	*($6 + [8]) = $1
	*($6 + [16]) = $1
	*($6 + [32]) = (int_64)0
	$3 = CALL db_find_i64($1, $1, (int_64)-6027757892927488000, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $64(($6 + [8]), $3) + [16]) == (int_32)($6 + [8])), [944])
	$2 = *($6 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$2()), [1008])
	*(($0 = CALL $154([32])) + [16]) = ($6 + [8])
	*($0 + [8]) = (int_64)1
	*($0) = (int_64)0
	CALL eosio_assert([1], [1344])
	CALL memcpy(($6 + [64]), $0, [8])
	CALL eosio_assert([1], [1344])
	CALL memcpy((($6 + [64]) | [8]), ($0 + [8]), [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)-6027757892927488000, $4, $1, ($6 + [64]), [16])
	*($0 + [20]) = $2
	$3 = (($6 + [8]) + [16])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$4 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($6 + [56]) = $0
	$1 = *($0)
	*($6 + [64]) = $1
	*($6 + [52]) = $2
	$5 = ($6 + [36])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($6 + [40]))) ){ goto $label$6 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($6 + [56]) = [0]
	*($3) = $0
	*($5) = ($3 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $93(($6 + [32]), ($6 + [56]), ($6 + [64]), ($6 + [52]))
	
.LABEL $label$5
	$0 = *($6 + [56])
	*($6 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $155($0)
	
.LABEL $label$7
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $155($3)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($6 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $2
	
.LABEL $label$8
	*($5) = $2
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [80])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1712])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [1712])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [1712])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN5eosio5token5clearEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = [0]
	$4 = *($0)
	*($7) = $4
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($7 + [8]) = $5)
	*(($7 + [28])) = [0]
	*(($7 + [32])) = [0]
	$0 = [0]
	$2 = CALL db_find_i64($4, $5, (int_64)-3665743359353290752, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $112($7, $2)
	CALL eosio_assert(((int_32)*($0 + [44]) == (int_32)$7), [944])
	
.LABEL $label$1
	$2 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($2, [1424])
	CALL eosio_assert($2, [1472])
	$2 = CALL db_next_i64(*($0 + [48]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $112($7, $2)
	
.LABEL $label$2
	CALL $113($7, $0)
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $155($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $155($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $159(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $159(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $155(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $155(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $71($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1344])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1344])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $80(CALL $81($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}