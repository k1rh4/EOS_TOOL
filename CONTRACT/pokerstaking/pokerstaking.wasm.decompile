(data (i32.const 8192) "Action does not exist\00")
(data (i32.const 8214) "User return record already exists\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8334) "No return records to erase\00")
(data (i32.const 8361) "Staking record not found\00")
(data (i32.const 8386) "POKER sucessfully unstaked\00")
(data (i32.const 8413) "The contract has already been initialized\00")
(data (i32.const 8455) "Initialize the contract first\00")
(data (i32.const 8485) "Config value is not being changed\00")
(data (i32.const 8519) "Contract activeness is not being changed\00")
(data (i32.const 8560) "Please return the extra EOS first\00")
(data (i32.const 8594) "The user is already unstaking\00")
(data (i32.const 8624) "Interface disabled\00")
(data (i32.const 8643) "Please initialize contract first\00")
(data (i32.const 8676) "Contract is disabled\00")
(data (i32.const 8697) "The user is not unstaking\00")
(data (i32.const 8723) "The unstake lock period has not yet ended\00")
(data (i32.const 8765) "POKER sucessfully unstaked. Stake again to receive dividends! Play the first-ever poker game on EOS Poker: https://eospoker.win\00")
(data (i32.const 8893) "Return info not found\00")
(data (i32.const 8915) "Return amount mismatch\00")
(data (i32.const 8938) "Only POKER token can be staked\00")
(data (i32.const 8969) "Must stake positive amount\00")
(data (i32.const 8996) "The user is unstaking. Cancel the unstake process first before staking again!\00")
(data (i32.const 9074) "Stake amount overflow\00")
(data (i32.const 9096) "POKER\00")
(data (i32.const 9102) "string is too long to be a valid symbol_code\00")
(data (i32.const 9147) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9200) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9249) "invalid symbol name\00")
(data (i32.const 9269) "write\00")
(data (i32.const 9275) "read\00")
(data (i32.const 9280) "get\00")
(data (i32.const 9284) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9335) "error reading iterator\00")
(data (i32.const 9358) "cannot create objects in table of another contract\00")
(data (i32.const 9409) "cannot pass end iterator to erase\00")
(data (i32.const 9443) "cannot increment end iterator\00")
(data (i32.const 9473) "object passed to erase is not in multi_index\00")
(data (i32.const 9518) "cannot erase objects in table of another contract\00")
(data (i32.const 9568) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9621) "cannot pass end iterator to modify\00")
(data (i32.const 9656) "object passed to modify is not in multi_index\00")
(data (i32.const 9702) "cannot modify objects in table of another contract\00")
(data (i32.const 9753) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9812) "attempt to subtract asset with different symbol\00")
(data (i32.const 9860) "subtraction underflow\00")
(data (i32.const 9882) "subtraction overflow\00")
(data (i32.const 9903) "singleton does not exist\00")
(data (i32.const 9928) "attempt to add asset with different symbol\00")
(data (i32.const 9971) "addition underflow\00")
(data (i32.const 9990) "addition overflow\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "read_action_data" (func $fimport$2 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$4 (param i64)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$6 (result i64)))
(import "env" "db_store_i64" (func $fimport$7 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$10 (result i64)))
(import "env" "send_inline" (func $fimport$11 (param i32 i32)))
(import "env" "db_get_i64" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$13 (param i32)))
(import "env" "db_update_i64" (func $fimport$14 (param i32 i64 i32 i32)))
(import "env" "abort" (func $fimport$15))
(import "env" "memset" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$18 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$21 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$22 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$26 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$28 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$29 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$30 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$33 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$35 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$36 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$37 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $1))
(export "_ZdlPv" (func $65))
(export "_Znwj" (func $63))
(export "_Znaj" (func $64))
(export "_ZdaPv" (func $66))
(export "_ZnwjSt11align_val_t" (func $67))
(export "_ZnajSt11align_val_t" (func $68))
(export "_ZdlPvSt11align_val_t" (func $69))
(export "_ZdaPvSt11align_val_t" (func $70))
(table $0 12 12 anyfunc)
(elem (i32.const 1) $2 $4 $6 $8 $12 $13 $15 $17 $18 $20 $21)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18424))
(global $global$2 i32 (i32.const 18424))


int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $80($1)
	
.LABEL $label$2
	*(CALL $75()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $80(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $83($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$3 = [0]
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-4993458656277168128, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $22($1, $0)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [8334])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$0 = [0]
	$4 = CALL db_next_i64(*($3 + [20]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $22($1, $4)
	
.LABEL $label$4
	CALL $24($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$3 }
	
.LABEL $label$2
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($1 + [24]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $4
	
.LABEL $label$6
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$global$0 = ($1 + [48])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $74($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$8 = CALL $80($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$2
	CALL read_action_data($8, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $8
	*(($4 + [24])) = ($8 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $8
	*($4 + [32]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9102])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = (int_64)0
	
.LOOP $label$9:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$10
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$0 = (int_64)4
	
.LABEL $label$5
	*($4 + [40]) = $0
	$2 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	$6 = *((*($2) + $6))
	
.LABEL $label$11
	CALL void $2((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $83($8)
	
.LABEL $label$12
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $77 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $76 (int_32 $0)
{
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $83($0)
	
.LABEL $label$1
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0)
	$6 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*(($0 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $78(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10008])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $78(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9473])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9518])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9568])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*(*($3) + [4]) + [8]))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [20])
	CALL $49(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $21 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [128])) = [0]
	*($2 + [112]) = (int_64)-1
	*($2 + [120]) = (int_64)0
	$4 = *($0)
	*($2 + [96]) = $4
	*($2 + [104]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4157660971118100480, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $27(($2 + [96]), $5)
	if ( ((int_32)*($3 + [24]) == (int_32)($2 + [96])) ){ goto $label$3 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$3
	*($2 + [92]) = $3
	*($2 + [88]) = ($2 + [96])
	goto $label$1 
	
.LABEL $label$2
	*($2 + [92]) = [0]
	*($2 + [88]) = ($2 + [96])
	
.LABEL $label$1
	$5 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [8361])
	*($2 + [48]) = $1
	$4 = *($3 + [8])
	$1 = *($0 + [40])
	*(($3 = (($2 + [40]) + [24]))) = $1
	*($2 + [40]) = *($0)
	*($2 + [56]) = $4
	if ( (uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$4 }
	CALL eosio_assert([0], [9200])
	$1 = *($3)
	
.LABEL $label$4
	$6 = ($2 + [56])
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$4 = $1
	$3 = $5
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$4 = $1
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$3 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $3 ){ goto $label$9 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [9249])
	
.LABEL $label$5
	*(($2 + [80])) = [0]
	*($2 + [72]) = (int_64)0
	$7 = ($2 + [72])
	$5 = CALL $77([8386])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*(($2 + [72])) = ($5 << [1])
	$3 = ($7 + [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$8 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($8)
	*(($2 + [80])) = $3
	*(($2 + [76])) = $5
	*($2 + [72]) = ($8 | [1])
	
.LABEL $label$12
	CALL memcpy($3, [8386], $5)
	
.LABEL $label$11
	*(($3 + $5)) = [0]
	*(($3 = ($2 + [24]))) = [0]
	*($2 + [8]) = (int_64)-3617168760277827584
	*($2 + [16]) = (int_64)0
	*($2) = *($0 + [32])
	$4 = *($0)
	*(($5 = CALL _Znwj([16]))) = $4
	*($5 + [8]) = (int_64)3617214756542218240
	*(($2 + [36])) = [0]
	$8 = ($5 + [16])
	*($3) = $8
	*(($2 + [20])) = $8
	*($2 + [16]) = $5
	*($2 + [28 align=4]) = (int_64)0
	$5 = *((($2 + [40]) + [32]))
	$3 = ( *((($2 + [40]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [32])
	$4 = (CASTING uint_64)(uint_32 $3)
	$3 = ($2 + [28])
	
.LOOP $label$14:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$14 }
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $31($3, $5)
	$3 = *(($2 + [32]))
	$5 = *(($2 + [28]))
	goto $label$15 
	
.LABEL $label$16
	$3 = [0]
	$5 = [0]
	
.LABEL $label$15
	*($2 + [140]) = $5
	*($2 + [136]) = $5
	*($2 + [144]) = $3
	*($2 + [152]) = ($2 + [136])
	*($2 + [164]) = ($2 + [48])
	*($2 + [168]) = $6
	*($2 + [172]) = $7
	*($2 + [160]) = ($2 + [40])
	CALL $32(($2 + [160]), ($2 + [152]))
	CALL $33($2)
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$17 }
	*(($2 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$18 }
	*(($2 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$18
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4157495357179166720, (uint_64)*(($0 + [40])) >> (uint_64)(int_64)8)
	if ( ((int_32)$5) < (int_32)[0]) ){ goto $label$19 }
	$5 = CALL $34($2, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$2) ){ goto $label$20 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$20
	$4 = *($0)
	*($2 + [164]) = $0
	*($2 + [160]) = ($2 + [88])
	CALL $35($2, $5, $4, ($2 + [160]))
	
.LABEL $label$19
	$4 = *($2 + [88])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$21 }
	CALL eosio_assert([0], [9409])
	CALL eosio_assert([0], [9443])
	
.LABEL $label$21
	$3 = CALL db_next_i64(*($5 + [28]), ($2 + [160]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$22 }
	CALL $27((CASTING uint_32)(uint_64 $4), $3)
	
.LABEL $label$22
	CALL $29(($2 + [96]), $5)
	$7 = *($2 + [24])
	if ( ($7 == 0) ){ goto $label$23 }
	$0 = ($2 + [28])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$25 }
	
.LOOP $label$26:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	CALL _ZdlPv($3)
	
.LABEL $label$27
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$26 }
	$5 = *(($2 + [24]))
	goto $label$24 
	
.LABEL $label$25
	$5 = $7
	
.LABEL $label$24
	*($0) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$23
	if ( ((*(($2 + [72])) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*(($2 + [80])))
	
.LABEL $label$28
	$7 = *($2 + [120])
	if ( ($7 == 0) ){ goto $label$29 }
	$0 = ($2 + [124])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$33 }
	CALL _ZdlPv($3)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$32 }
	$5 = *(($2 + [120]))
	goto $label$30 
	
.LABEL $label$31
	$5 = $7
	
.LABEL $label$30
	*($0) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$29
	$global$0 = ($2 + [176])
	return (unreachable)
	
.LABEL $label$10
	CALL $71($7)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $36(($2 + [8]), $5)
	if ( ((int_32)*($4 + [8]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8455])
	CALL $38($2, ($2 + [8]))
	CALL eosio_assert(((int_32)*($2) != (int_32)$1), [8485])
	*($2) = $1
	CALL $37(($2 + [8]), $2, *($0))
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL _ZdlPv($1)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $74($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9335])
	
.LABEL $label$5
	$2 = CALL $80($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $23(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $83($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $57(*($1), ($4 + [16]))
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9473])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9518])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9568])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9335])
	
.LABEL $label$5
	$4 = CALL $80($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([40]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [20])
	CALL $59(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $50(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $83($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $72($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $72(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $74 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9269])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9269])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9269])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [20])
	CALL $49(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $83($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC $80 (int_32 $0)
{
	return CALL $81([10028], $0)
}

void .FUNC $43 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = $2
	$0 = [0]
	$3 = CALL db_find_i64($2, $2, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $36(($1 + [8]), $3)
	if ( ((int_32)*($0 + [8]) == (int_32)($1 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8643])
	CALL $38($1, ($1 + [8]))
	CALL eosio_assert(*($1 + [4]), [8676])
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($1 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($1 + [48])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $74($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9269])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9269])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $0, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($0 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9269])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$7 = *($1 + [8])
	$8 = *(($6 + [8]))
	*($1 + [8]) = $8
	$3 = *($3 + [4])
	*($1 + [16]) = *($3)
	*(($1 + [24])) = *(($3 + [8]))
	$6 = ($1 + [16])
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)$7) == (int_64)(uint_64)$8 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	*($5 + [16]) = $5
	*($5 + [28]) = $6
	*($5 + [24]) = $1
	CALL $41(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [32])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $57(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *((*(($3 + [4])) + [40]))
	$8 = *(*(*($3) + [4]) + [8])
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9200])
	
.LABEL $label$3
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $10
	$11 = $3
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $10
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$3 < (int_32)[6])
	$12 = ($3 + [1])
	$3 = $12
	if ( $11 ){ goto $label$8 }
	$3 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9249])
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [24])) == (int_64)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9812])
	
.LABEL $label$9
	$6 = (int_64)
	*($1 + [16]) = $6(*($1 + [16]) - $8))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9860])
	$6 = *(($1 + [16]))
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9882])
	
.LABEL $label$11
	if ( ((int_64)$9 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$12 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$12
	$11 = $4
	$3 = ($11 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $11
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $41(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$13
	$global$0 = ($5 + [32])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *($3 + [4])
	$8 = *($7 + [40])
	$9 = *(*(*($3) + [4]) + [8])
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9200])
	
.LABEL $label$3
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$12 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $12
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $12
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$13 = ((int_32)$11 < (int_32)[6])
	$14 = ($11 + [1])
	$11 = $14
	if ( $13 ){ goto $label$8 }
	$11 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9249])
	
.LABEL $label$4
	if ( ((int_64)$8 == (int_64)*(($1 + [8]))) ){ goto $label$9 }
	CALL eosio_assert([0], [9812])
	
.LABEL $label$9
	$6 = (int_64)
	*($1) = $6(*($1) - $9))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9860])
	$6 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9882])
	
.LABEL $label$11
	$8 = *(($7 + [40]))
	$9 = *(*(*($3) + [4]) + [8])
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$12 }
	CALL eosio_assert([0], [9200])
	
.LABEL $label$12
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$12 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$6 = $12
	$13 = $11
	$11 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	$6 = $12
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$13 = ((int_32)$11 < (int_32)[6])
	$14 = ($11 + [1])
	$11 = $14
	if ( $13 ){ goto $label$17 }
	$11 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [9249])
	
.LABEL $label$13
	if ( ((int_64)$8 == (int_64)*(($1 + [24]))) ){ goto $label$18 }
	CALL eosio_assert([0], [9928])
	
.LABEL $label$18
	$6 = ((int_64)*($1 + [16]) + (int_64)$9)
	*($1 + [16]) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [9971])
	$6 = *(($1 + [16]))
	
.LABEL $label$19
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [9990])
	
.LABEL $label$20
	if ( ((int_64)$10 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$21 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$21
	$13 = $4
	$11 = ($13 + [-32])
	$global$0 = $11
	*($5 + [4]) = $11
	*($5) = $11
	*($5 + [8]) = $13
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $41(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $11, [32])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$22 }
	*(($0 + [16])) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$22
	$global$0 = ($5 + [32])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$5 = *($1)
	*($1 + [20]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$3
	$6 = $3
	$3 = ($6 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [20])
	CALL $49(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $82 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10020]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10024])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10020]) = [1]
	$2 = ($2 << [16])
	*([0] + [10024]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10024])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10024]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10020]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10020]) = [1]
	$3 = ($3 << [16])
	*([0] + [10024]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10024])
	
.LABEL $label$10
	*([0] + [10024]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $51 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *((*(($3 + [4])) + [40]))
	$8 = *(*($3))
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9200])
	
.LABEL $label$3
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $10
	$11 = $3
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $10
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$3 < (int_32)[6])
	$12 = ($3 + [1])
	$3 = $12
	if ( $11 ){ goto $label$8 }
	$3 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9249])
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [8])) == (int_64)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9928])
	
.LABEL $label$9
	$6 = ((int_64)*($1) + (int_64)$8)
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9971])
	$6 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9990])
	
.LABEL $label$11
	if ( ((int_64)$9 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$12 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$12
	$11 = $4
	$3 = ($11 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $11
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $41(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$13
	$global$0 = ($5 + [32])
}

void .FUNC $83 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18412])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18220]
	$3 = (((int_32)$1 * (int_32)[12]) + [18220])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $75())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $79($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $82($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8248])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $75 ()
{
	return [10012]
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9269])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $71 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $36(($2 + [8]), $5)
	if ( ((int_32)*($4 + [8]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8455])
	CALL $38($2, ($2 + [8]))
	CALL eosio_assert(((int_32)*($2 + [4]) ^ (int_32)$1), [8519])
	*($2 + [4]) = $1
	CALL $37(($2 + [8]), $2, *($0))
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL _ZdlPv($1)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
}

int_32 .FUNC $9 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$8 = CALL $80($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	CALL eosio_assert([0], [9275])
	goto $label$1 
	
.LABEL $label$3
	$8 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$2
	CALL read_action_data($8, $7)
	
.LABEL $label$1
	CALL memcpy($4, $8, [1])
	$9 = *($4)
	*(($4 + [20])) = ($8 + [1])
	*(($4 + [24])) = ($8 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $8
	*($4 + [32]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9102])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = (int_64)0
	
.LOOP $label$9:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$10
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$0 = (int_64)4
	
.LABEL $label$5
	*($4 + [40]) = $0
	$2 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	$6 = *((*($2) + $6))
	
.LABEL $label$11
	CALL void $2((int_32 ((int_32)($9 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $83($8)
	
.LABEL $label$12
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $36(($2 + [8]), $5)
	if ( ((int_32)*($4 + [8]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$1
	CALL eosio_assert(($4 == 0), [8413])
	*($2 + [4]) = [0]
	*($2) = $1
	CALL $37(($2 + [8]), $2, *($0))
	$1 = *($2 + [32])
	if ( ($1 == 0) ){ goto $label$2 }
	$5 = ($2 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$6 }
	CALL _ZdlPv($4)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $1
	
.LABEL $label$3
	*($5) = $1
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($2 + [48])
}

int_32 .FUNC $7 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$7 = CALL $80($8)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$2
	CALL read_action_data($7, $8)
	
.LABEL $label$1
	*($4 + [56]) = [0]
	$2 = ($7 + $8)
	if ( ((uint_32)$8 > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$4
	CALL memcpy(($4 + [56]), $7, [4])
	*(($4 + [28])) = ($7 + [4])
	*(($4 + [32])) = $2
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $7
	*($4 + [40]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9102])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = (int_64)0
	
.LOOP $label$9:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$10
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$0 = (int_64)4
	
.LABEL $label$5
	*($4 + [48]) = $0
	$2 = (($4 + [8]) + int_32($5 >> [1]))
	$3 = *($4 + [56])
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	$6 = *((*($2) + $6))
	
.LABEL $label$11
	CALL void $2((int_32 $3), (int_32 $6))
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL $83($7)
	
.LABEL $label$12
	$global$0 = ($4 + [64])
	return [1]
}

void .FUNC $4 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-4993458656277168128, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $22(($3 + [8]), $6) + [16]) == (int_32)($3 + [8])) ){ goto $label$1 }
	$4 = [0]
	CALL eosio_assert([0], [9284])
	goto $label$1 
	
.LABEL $label$2
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [8214])
	$7 = *($0)
	if ( ((int_64)*($3 + [8]) == (int_64)CALL current_receiver()) ){ goto $label$3 }
	CALL eosio_assert([0], [9358])
	
.LABEL $label$3
	*(($0 = CALL _Znwj([32])) + [16]) = ($3 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	CALL memcpy(($3 + [64]), $0, [8])
	CALL memcpy((($3 + [64]) | [8]), ($0 + [8]), [8])
	$5 = *($0)
	$6 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4993458656277168128, $7, $5, ($3 + [64]), [16])
	*($0 + [20]) = $6
	$4 = (($3 + [8]) + [16])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($3 + [56]) = $0
	$5 = *($0)
	*($3 + [64]) = $5
	*($3 + [52]) = $6
	$8 = ($3 + [36])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$7 }
	*($4 + [8]) = $5
	*($4 + [16]) = $6
	*($3 + [56]) = [0]
	*($4) = $0
	*($8) = ($4 + [24])
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $23(($3 + [32]), ($3 + [56]), ($3 + [64]), ($3 + [52]))
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$8 }
	$8 = ($3 + [36])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($3 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($8) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$8
	$global$0 = ($3 + [80])
}

int_32 .FUNC $5 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$8 = CALL $80($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$2
	CALL read_action_data($8, $7)
	
.LABEL $label$1
	*($4 + [56]) = (int_64)0
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$5
	$2 = ($8 + $7)
	$3 = (($4 + [48]) + [8])
	CALL memcpy(($4 + [48]), $8, [8])
	$9 = ($8 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [24])) = $2
	*($4 + [16]) = $8
	*(($4 + [20])) = ($8 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [32]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9102])
	goto $label$9 
	
.LABEL $label$10
	if ( ($2 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$0 = (int_64)0
	
.LOOP $label$11:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$12
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$11 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$7 
	
.LABEL $label$8
	$0 = (int_64)4
	
.LABEL $label$7
	*($4 + [40]) = $0
	$2 = ($4 + int_32($5 >> [1]))
	$0 = *(($4 + [56]))
	$1 = *($4 + [48])
	if ( (($5 & [1]) == 0) ){ goto $label$13 }
	$6 = *((*($2) + $6))
	
.LABEL $label$13
	CALL void $2((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$14 }
	CALL $83($8)
	
.LABEL $label$14
	$global$0 = ($4 + [64])
	return [1]
}

void .FUNC $2 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [272])
	$global$0 = $2
	CALL require_auth($1)
	$3 = [0]
	*((($2 + [192]) + [32])) = [0]
	*($2 + [208]) = (int_64)-1
	*($2 + [216]) = (int_64)0
	$4 = *($0)
	*($2 + [192]) = $4
	*($2 + [200]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-4993458656277168128, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $22(($2 + [192]), $6)
	if ( ((int_32)*($5 + [16]) == (int_32)($2 + [192])) ){ goto $label$1 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$1
	CALL eosio_assert(($5 == 0), [8560])
	*((($2 + [152]) + [32])) = [0]
	*($2 + [168]) = (int_64)-1
	*($2 + [176]) = (int_64)0
	$4 = *($0)
	*($2 + [152]) = $4
	*($2 + [160]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $36(($2 + [152]), $5)
	if ( ((int_32)*($3 + [8]) == (int_32)($2 + [152])) ){ goto $label$2 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$2
	$5 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [8643])
	CALL $38(($2 + [144]), ($2 + [152]))
	CALL eosio_assert(*($2 + [148]), [8676])
	*(($2 + [136])) = [0]
	*($2 + [120]) = (int_64)-1
	*($2 + [128]) = (int_64)0
	$4 = *($0)
	*($2 + [104]) = $4
	*($2 + [112]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)-4157660971118100480, $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$4 }
	$5 = CALL $27(($2 + [104]), $3)
	if ( ((int_32)*($5 + [24]) == (int_32)($2 + [104])) ){ goto $label$5 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$5
	*($2 + [100]) = $5
	*($2 + [96]) = ($2 + [104])
	goto $label$3 
	
.LABEL $label$4
	*($2 + [100]) = [0]
	*($2 + [96]) = ($2 + [104])
	
.LABEL $label$3
	$3 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [8361])
	CALL eosio_assert(((int_32)*(*($2 + [100]) + [20]) != (int_32)[0]), [8697])
	CALL eosio_assert(((uint_32)(*($2 + [144]) + *(*($2 + [100]) + [20])) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$10() / (uint_64)(int_64)1000000))), [8723])
	*($2 + [56]) = $1
	$1 = *(*($2 + [100]) + [8])
	$4 = *($0 + [40])
	*(($5 = (($2 + [48]) + [24]))) = $4
	*($2 + [48]) = *($0)
	*($2 + [64]) = $1
	if ( (uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$6 }
	CALL eosio_assert([0], [9200])
	$4 = *($5)
	
.LABEL $label$6
	$7 = ($2 + [64])
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$1 = $4
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$1 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$11 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9249])
	
.LABEL $label$7
	*(($2 + [88])) = [0]
	*($2 + [80]) = (int_64)0
	$6 = ($2 + [80])
	$3 = CALL $77([8765])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$15 }
	*(($2 + [80])) = ($3 << [1])
	$5 = ($6 + [1])
	if ( $3 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*(($2 + [88])) = $5
	*(($2 + [84])) = $3
	*($2 + [80]) = ($8 | [1])
	
.LABEL $label$14
	CALL memcpy($5, [8765], $3)
	
.LABEL $label$13
	*(($5 + $3)) = [0]
	*(($5 = ($2 + [32]))) = [0]
	*($2 + [16]) = (int_64)-3617168760277827584
	*($2 + [24]) = (int_64)0
	*($2 + [8]) = *($0 + [32])
	$1 = *($0)
	*(($3 = CALL _Znwj([16]))) = $1
	*($3 + [8]) = (int_64)3617214756542218240
	*((($2 + [8]) + [36])) = [0]
	$8 = ($3 + [16])
	*($5) = $8
	*(($2 + [28])) = $8
	*($2 + [24]) = $3
	*($2 + [36 align=4]) = (int_64)0
	$3 = *((($2 + [48]) + [32]))
	$5 = ( *((($2 + [48]) + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($5 + [32])
	$1 = (CASTING uint_64)(uint_32 $5)
	$5 = ($2 + [36])
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$16 }
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $31($5, $3)
	$5 = *(($2 + [40]))
	$3 = *(($2 + [36]))
	goto $label$17 
	
.LABEL $label$18
	$5 = [0]
	$3 = [0]
	
.LABEL $label$17
	*($2 + [236]) = $3
	*($2 + [232]) = $3
	*($2 + [240]) = $5
	*($2 + [248]) = ($2 + [232])
	*($2 + [260]) = ($2 + [56])
	*($2 + [264]) = $7
	*($2 + [268]) = $6
	*($2 + [256]) = ($2 + [48])
	CALL $32(($2 + [256]), ($2 + [248]))
	CALL $33(($2 + [8]))
	$3 = *($2 + [36])
	if ( ($3 == 0) ){ goto $label$19 }
	*(($2 + [40])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$19
	$3 = *($2 + [24])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($2 + [28])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$20
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$1 = *($0)
	*($2 + [8]) = $1
	*($2 + [16]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)-4157495357179166720, (uint_64)*(($0 + [40])) >> (uint_64)(int_64)8)
	if ( ((int_32)$3) < (int_32)[0]) ){ goto $label$21 }
	$3 = CALL $34(($2 + [8]), $3)
	if ( ((int_32)*($3 + [32]) == (int_32)($2 + [8])) ){ goto $label$22 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$22
	$1 = *($0)
	*($2 + [260]) = $0
	*($2 + [256]) = ($2 + [96])
	CALL $46(($2 + [8]), $3, $1, ($2 + [256]))
	
.LABEL $label$21
	$1 = *($2 + [96])
	$3 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $3) ){ goto $label$23 }
	CALL eosio_assert([0], [9409])
	CALL eosio_assert([0], [9443])
	
.LABEL $label$23
	$5 = CALL db_next_i64(*($3 + [28]), ($2 + [256]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$24 }
	CALL $27((CASTING uint_32)(uint_64 $1), $5)
	
.LABEL $label$24
	CALL $29(($2 + [104]), $3)
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$25 }
	$0 = ($2 + [36])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL _ZdlPv($5)
	
.LABEL $label$29
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$28 }
	$3 = *(($2 + [32]))
	goto $label$26 
	
.LABEL $label$27
	$3 = $6
	
.LABEL $label$26
	*($0) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$25
	if ( ((*(($2 + [80])) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($2 + [88])))
	
.LABEL $label$30
	$6 = *($2 + [128])
	if ( ($6 == 0) ){ goto $label$31 }
	$0 = ($2 + [132])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	CALL _ZdlPv($5)
	
.LABEL $label$35
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$34 }
	$3 = *(($2 + [128]))
	goto $label$32 
	
.LABEL $label$33
	$3 = $6
	
.LABEL $label$32
	*($0) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$31
	$6 = *($2 + [176])
	if ( ($6 == 0) ){ goto $label$36 }
	$0 = ($2 + [180])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$38 }
	
.LOOP $label$39:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	CALL _ZdlPv($5)
	
.LABEL $label$40
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$39 }
	$3 = *(($2 + [176]))
	goto $label$37 
	
.LABEL $label$38
	$3 = $6
	
.LABEL $label$37
	*($0) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$36
	$6 = *($2 + [216])
	if ( ($6 == 0) ){ goto $label$41 }
	$0 = ($2 + [220])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$43 }
	
.LOOP $label$44:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$45 }
	CALL _ZdlPv($5)
	
.LABEL $label$45
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$44 }
	$3 = *(($2 + [216]))
	goto $label$42 
	
.LABEL $label$43
	$3 = $6
	
.LABEL $label$42
	*($0) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$41
	$global$0 = ($2 + [272])
	return (unreachable)
	
.LABEL $label$12
	CALL $71($6)
}

int_32 .FUNC $3 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$8 = CALL $80($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$2
	CALL read_action_data($8, $7)
	
.LABEL $label$1
	*($4 + [56]) = (int_64)0
	$2 = ($8 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$5
	CALL memcpy(($4 + [56]), $8, [8])
	*(($4 + [28])) = ($8 + [8])
	*(($4 + [32])) = $2
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $8
	*($4 + [40]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [9102])
	goto $label$8 
	
.LABEL $label$9
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$0 = (int_64)0
	
.LOOP $label$10:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$11
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$10 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$6 
	
.LABEL $label$7
	$0 = (int_64)4
	
.LABEL $label$6
	*($4 + [48]) = $0
	$2 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [56])
	if ( (($5 & [1]) == 0) ){ goto $label$12 }
	$6 = *((*($2) + $6))
	
.LABEL $label$12
	CALL void $2((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$13 }
	CALL $83($8)
	
.LABEL $label$13
	$global$0 = ($4 + [64])
	return [1]
}

void .FUNC memory ()
{
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [368])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$17 }
	if ( ((int_64)$2 <= (int_64)4730614985703555071) ){ goto $label$16 }
	if ( ((int_64)$2 > (int_64)4923676692038673919) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)4730614985703555072) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)4849591930391801344) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4921564679018381312) ){ goto $label$2 }
	*($3 + [268]) = [0]
	*($3 + [264]) = [1]
	*($3 + [80]) = *($3 + [264])
	CALL $3($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$17
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$18 }
	*(($3 + [240])) = [0]
	*($3 + [224]) = $1
	*($3 + [216]) = $0
	*($3 + [232]) = (int_64)0
	*($3 + [248]) = (int_64)6138787003766218032
	$4 = CALL $77([9096])
	if ( ($4 <= [8]) ){ goto $label$14 }
	CALL eosio_assert([0], [9102])
	goto $label$13 
	
.LABEL $label$18
	CALL eosio_assert([0], [8192])
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 <= (int_64)-4417032211232980993) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4417032211232980992) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)3626371211675041792) ){ goto $label$2 }
	*($3 + [348]) = [0]
	*($3 + [344]) = [2]
	*($3) = *($3 + [344])
	CALL $5($1, $1, $3)
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 == (int_64)4923676692038673920) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)4982871454518345728) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$2 }
	*($3 + [316]) = [0]
	*($3 + [312]) = [3]
	*($3 + [32]) = *($3 + [312])
	CALL $7($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$14
	if ( ($4 == 0) ){ goto $label$11 }
	
.LABEL $label$13
	$2 = (int_64)0
	
.LOOP $label$19:
	$5 = *(($4 + [9095]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$20 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$20
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$19 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4417357895863107584) ){ goto $label$2 }
	*($3 + [292]) = [0]
	*($3 + [288]) = [4]
	*($3 + [56]) = *($3 + [288])
	CALL $9($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$11
	$2 = (int_64)4
	
.LABEL $label$10
	*($3 + [256]) = $2
	CALL $10(($3 + [168]))
	*(($4 = (($3 + [128]) + [8]))) = *(($3 + [192]))
	*($3 + [128]) = *($3 + [184])
	$2 = *($3 + [176])
	$0 = *($3 + [168])
	$6 = *($4)
	*((($3 + [352]) + [8])) = $6
	*(($5 = (($3 + [144]) + [8]))) = $6
	*($3 + [160]) = $1
	$1 = *($3 + [128])
	*($3 + [144]) = $1
	*($3 + [352]) = $1
	$7 = ($3 + [200])
	$4 = CALL $72(($3 + [112]), $7)
	*(($3 + [104])) = *($3 + [160])
	*((($3 + [88]) + [8])) = *($5)
	*($3 + [88]) = *($3 + [144])
	CALL $11(($3 + [216]), $0, $2, ($3 + [88]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$21
	if ( ((*($7) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [208])))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [276]) = [0]
	*($3 + [272]) = [5]
	*($3 + [72]) = *($3 + [272])
	CALL $3($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [332]) = [0]
	*($3 + [328]) = [6]
	*($3 + [16]) = *($3 + [328])
	CALL $14($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [300]) = [0]
	*($3 + [296]) = [7]
	*($3 + [48]) = *($3 + [296])
	CALL $16($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [284]) = [0]
	*($3 + [280]) = [8]
	*($3 + [64]) = *($3 + [280])
	CALL $3($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [340]) = [0]
	*($3 + [336]) = [9]
	*($3 + [8]) = *($3 + [336])
	CALL $19($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [308]) = [0]
	*($3 + [304]) = [10]
	*($3 + [40]) = *($3 + [304])
	CALL $7($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [324]) = [0]
	*($3 + [320]) = [11]
	*($3 + [24]) = *($3 + [320])
	CALL $3($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8192])
	
.LABEL $label$1
	CALL $76([0])
	$global$0 = ($3 + [368])
}

int_32 .FUNC $14 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$5 = [0]
	$6 = CALL action_data_size()
	if ( ($6 == 0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$5 = CALL $80($6)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($3 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	CALL read_action_data($5, $6)
	
.LABEL $label$1
	*((($4 + [88]) + [24])) = [0]
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [76]) = $5
	*($4 + [72]) = $5
	*($4 + [80]) = ($5 + $6)
	*($4 + [144]) = ($4 + [72])
	*($4 + [24]) = ($4 + [88])
	CALL $25(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [80])
	*($4 + [8]) = *($4 + [72])
	*(($2 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($2)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [56]) = (int_64)6138787003766218032
	$3 = CALL $77([9096])
	if ( ($3 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9102])
	goto $label$6 
	
.LABEL $label$7
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$0 = (int_64)0
	
.LOOP $label$8:
	$2 = *(($3 + [9095]))
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$9
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$8 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$0 = (int_64)4
	
.LABEL $label$4
	*($4 + [64]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $26(($4 + [144]), ($4 + [88]))
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$12 }
	$3 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $83($5)
	$3 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $3
	
.LABEL $label$10
	$global$0 = ($4 + [160])
	return $3
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth(*($0))
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$4 = *($0)
	*($3 + [8]) = $4
	*($3 + [16]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4157495357179166720, (uint_64)*($0 + [40]) >> (uint_64)(int_64)8)
	if ( ((int_32)$5) < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $34(($3 + [8]), $5)
	if ( ((int_32)*($5 + [32]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$4
	$4 = *($0)
	*($3 + [52]) = $2
	*($3 + [48]) = $1
	CALL $40(($3 + [8]), $5, $4, ($3 + [48]))
	$2 = *($3 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = *($0)
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [9358])
	
.LABEL $label$5
	*(($0 = CALL _Znwj([48])) + [32]) = ($3 + [8])
	*($0 + [8]) = *(($1 + [8]))
	*($0) = *($1)
	*($0 + [16]) = *($2)
	*(($0 + [24])) = *(($2 + [8]))
	*($3 + [88]) = (($3 + [48]) + [32])
	*($3 + [84]) = ($3 + [48])
	*($3 + [80]) = ($3 + [48])
	*($3 + [96]) = ($3 + [80])
	*($3 + [108]) = ($0 + [16])
	*($3 + [104]) = $0
	CALL $41(($3 + [104]), ($3 + [96]))
	$4 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157495357179166720, $6, $4), ($3 + [48]), [32]
	*($0 + [36]) = $2)
	$1 = (($3 + [8]) + [16])
	if ( (uint_64)($4 <= *($1)) ){ goto $label$6 }
	*($1) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$6
	*($3 + [80]) = $0
	$4 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $4)
	*($3 + [104]) = $2
	$5 = ($3 + [36])
	$1 = *($5)
	if ( ((uint_32)$1 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$9 }
	*($1 + [8]) = $4
	*($1 + [16]) = $2
	*($3 + [80]) = [0]
	*($1) = $0
	*($5) = ($1 + [24])
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $42(($3 + [32]), ($3 + [80]), ($3 + [48]), ($3 + [104]))
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($3 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL _ZdlPv($1)
	
.LABEL $label$13
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($3 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $2
	
.LABEL $label$10
	*($5) = $2
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [112])
}

int_32 .FUNC $16 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$8 = CALL $80($7)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$2
	CALL read_action_data($8, $7)
	
.LABEL $label$1
	*((($4 + [112]) + [24])) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [100]) = $8
	*($4 + [96]) = $8
	*($4 + [104]) = ($8 + $7)
	*($4 + [224]) = ($4 + [96])
	*($4 + [48]) = ($4 + [112])
	CALL $39(($4 + [48]), ($4 + [224]))
	*(($2 = (($4 + [32]) + [8]))) = *($4 + [104])
	*($4 + [32]) = *($4 + [96])
	*(($3 = (($4 + [208]) + [8]))) = *($2)
	*($4 + [208]) = *($4 + [32])
	$2 = *($3)
	*((($4 + [224]) + [8])) = $2
	*((($4 + [48]) + [24])) = $2
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	$0 = *($4 + [208])
	*($4 + [64]) = $0
	*($4 + [224]) = $0
	*($4 + [80]) = (int_64)6138787003766218032
	$2 = CALL $77([9096])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9102])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = (int_64)0
	
.LOOP $label$9:
	$3 = *(($2 + [9095]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9147])
	
.LABEL $label$10
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$0 = ((int_64)((int_64)$0 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$0 = (int_64)4
	
.LABEL $label$5
	*($4 + [88]) = $0
	*(($2 = (($4 + [160]) + [8]))) = *((($4 + [112]) + [8]))
	*(($3 = (($4 + [144]) + [8]))) = *(($4 + [136]))
	*($4 + [160]) = *($4 + [112])
	*($4 + [144]) = *($4 + [128])
	*((($4 + [192]) + [8])) = *($3)
	*((($4 + [176]) + [8])) = *($2)
	*($4 + [192]) = *($4 + [144])
	*($4 + [176]) = *($4 + [160])
	$2 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	$6 = *((*($2) + $6))
	
.LABEL $label$11
	$0 = *((($4 + [176]) + [8]))
	*((($4 + [224]) + [8])) = $0
	$1 = *((($4 + [192]) + [8]))
	*((($4 + [208]) + [8])) = $1
	*((($4 + [16]) + [8])) = $0
	*(($4 + [8])) = $1
	$0 = *($4 + [176])
	*($4 + [224]) = $0
	$1 = *($4 + [192])
	*($4 + [208]) = $1
	*($4 + [16]) = $0
	*($4) = $1
	CALL void $2((int_32 ($4 + [16])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $83($8)
	
.LABEL $label$12
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $17 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [144])
	$global$0 = $2
	CALL require_auth($1)
	CALL $43($0)
	*((($2 + [104]) + [32])) = [0]
	*($2 + [120]) = (int_64)-1
	*($2 + [128]) = (int_64)0
	$3 = *($0)
	*($2 + [104]) = $3
	*($2 + [112]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)-4993458656277168128, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$5 = [0]
	if ( ((int_32)*(CALL $22(($2 + [104]), $4) + [16]) == (int_32)($2 + [104])) ){ goto $label$1 }
	$5 = [0]
	CALL eosio_assert([0], [9284])
	goto $label$1 
	
.LABEL $label$2
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [8560])
	*((($2 + [64]) + [32])) = [0]
	*($2 + [80]) = (int_64)-1
	*($2 + [88]) = (int_64)0
	$3 = *($0)
	*($2 + [64]) = $3
	*($2 + [72]) = $3
	$5 = CALL db_find_i64($3, $3, (int_64)-4157660971118100480, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$4 }
	$5 = CALL $27(($2 + [64]), $5)
	if ( ((int_32)*($5 + [24]) == (int_32)($2 + [64])) ){ goto $label$5 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$5
	*($2 + [60]) = $5
	*($2 + [56]) = ($2 + [64])
	$4 = [1]
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	*($2 + [60]) = [0]
	*($2 + [56]) = ($2 + [64])
	$4 = [0]
	
.LABEL $label$3
	CALL eosio_assert($4, [8361])
	CALL eosio_assert((*($5 + [20]) == 0), [8594])
	$1 = *($0)
	if ( $5 ){ goto $label$6 }
	CALL eosio_assert([0], [9621])
	
.LABEL $label$6
	CALL $44(($2 + [64]), $5, $1)
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$1 = *($0)
	*($2 + [16]) = $1
	*($2 + [24]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)-4157495357179166720, (uint_64)*($0 + [40]) >> (uint_64)(int_64)8)
	if ( ((int_32)$5) < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $34(($2 + [16]), $5)
	if ( ((int_32)*($5 + [32]) == (int_32)($2 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$8
	$1 = *($0)
	*($2 + [12]) = $0
	*($2 + [8]) = ($2 + [56])
	CALL $45(($2 + [16]), $5, $1, ($2 + [8]))
	$4 = *($2 + [40])
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($2 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $4
	
.LABEL $label$9
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$4 = *($2 + [88])
	if ( ($4 == 0) ){ goto $label$13 }
	$6 = ($2 + [92])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$17 }
	CALL _ZdlPv($5)
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($2 + [88]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $4
	
.LABEL $label$14
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$13
	$4 = *($2 + [128])
	if ( ($4 == 0) ){ goto $label$18 }
	$6 = ($2 + [132])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	CALL _ZdlPv($5)
	
.LABEL $label$22
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$21 }
	$0 = *(($2 + [128]))
	goto $label$19 
	
.LABEL $label$20
	$0 = $4
	
.LABEL $label$19
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$18
	$global$0 = ($2 + [144])
}

void .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $80($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $47(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $11 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [160])
	$global$0 = $5
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	$6 = *($3 + [16])
	if ( ((int_64)$6 != (int_64)6138663591592764928) ){ goto $label$7 }
	*(($5 + [112])) = [0]
	*($5 + [88]) = $2
	*($5 + [80]) = $2
	*($5 + [96]) = (int_64)-1
	*($5 + [104]) = (int_64)0
	$0 = [0]
	$7 = CALL db_find_i64($2, $2, (int_64)-4993458656277168128, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$0 = CALL $22(($5 + [80]), $7)
	if ( ((int_32)*($0 + [16]) == (int_32)($5 + [80])) ){ goto $label$8 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8893])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*($3)), [8915])
	if ( $0 ){ goto $label$9 }
	CALL eosio_assert([0], [9409])
	CALL eosio_assert([0], [9443])
	
.LABEL $label$9
	$3 = CALL db_next_i64(*($0 + [20]), ($5 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	CALL $22(($5 + [80]), $3)
	
.LABEL $label$10
	CALL $24(($5 + [80]), $0)
	$7 = *($5 + [104])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($5 + [108])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($5 + [104]))
	goto $label$5 
	
.LABEL $label$7
	$7 = [0]
	$8 = [0]
	if ( ((int_64)$6 != (int_64)*($0 + [32])) ){ goto $label$13 }
	$8 = ((int_64)*($3 + [8]) == (int_64)*($0 + [40]))
	
.LABEL $label$13
	CALL eosio_assert($8, [8938])
	CALL $43($0)
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [8969])
	*((($5 + [80]) + [32])) = [0]
	*($5 + [96]) = (int_64)-1
	*($5 + [104]) = (int_64)0
	$2 = *($0)
	*($5 + [80]) = $2
	*($5 + [88]) = $2
	$8 = CALL db_find_i64($2, $2, (int_64)-4993458656277168128, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $22(($5 + [80]), $8)
	if ( ((int_32)*($7 + [16]) == (int_32)($5 + [80])) ){ goto $label$14 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$14
	CALL eosio_assert(($7 == 0), [8560])
	*((($5 + [40]) + [32])) = [0]
	*($5 + [56]) = (int_64)-1
	*($5 + [64]) = (int_64)0
	$2 = *($0)
	*($5 + [40]) = $2
	*($5 + [48]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)-4157660971118100480, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $27(($5 + [40]), $7)
	if ( ((int_32)*($7 + [24]) == (int_32)($5 + [40])) ){ goto $label$16 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$16
	CALL eosio_assert((*($7 + [20]) == 0), [8996])
	$2 = *($3)
	*($5) = ((int_64)$2 + (int_64)*($7 + [8]))
	CALL eosio_assert(((int_64)$2 > (int_64)0), [9074])
	$2 = *($0)
	*($5 + [144]) = $5
	CALL $48(($5 + [40]), $7, $2, ($5 + [144]))
	goto $label$2 
	
.LABEL $label$15
	$6 = *($0)
	if ( ((int_64)*($5 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$17 }
	CALL eosio_assert([0], [9358])
	
.LABEL $label$17
	*(($7 = CALL _Znwj([40])) + [24]) = ($5 + [40])
	*($7) = $1
	*($7 + [8]) = *($3)
	$2 = CALL current_time()
	*($7 + [20]) = [0]
	*($7 + [16]) = ((uint_64)$2 / (uint_64)(int_64)1000000)
	*($5 + [128]) = ($5 + [24])
	*($5 + [124]) = $5
	*($5 + [120]) = $5
	*($5 + [136]) = ($5 + [120])
	*($5 + [148]) = ($7 + [8])
	*($5 + [144]) = $7
	*($5 + [152]) = ($7 + [16])
	*($5 + [156]) = ($7 + [20])
	CALL $49(($5 + [144]), ($5 + [136]))
	$2 = *($7)
	$9 = CALL db_store_i64(*((($5 + [40]) + [8])), (int_64)-4157660971118100480, $6, $2, $5, [24])
	*($7 + [28]) = $9
	$8 = (($5 + [40]) + [16])
	if ( (uint_64)($2 <= *($8)) ){ goto $label$18 }
	*($8) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*($5 + [144]) = $7
	$2 = *($7)
	*($5) = $2
	*($5 + [120]) = $9
	$10 = ($5 + [68])
	$8 = *($10)
	if ( ((uint_32)$8 >= (uint_32)*(($5 + [72]))) ){ goto $label$4 }
	*($8 + [8]) = $2
	*($8 + [16]) = $9
	*($5 + [144]) = [0]
	*($8) = $7
	*($10) = ($8 + [24])
	$7 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$0 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL _ZdlPv($0)
	$global$0 = ($5 + [160])
	return 
	
.LABEL $label$4
	CALL $50(($5 + [64]), ($5 + [144]), $5, ($5 + [120]))
	$7 = *($5 + [144])
	*($5 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv($7)
	
.LABEL $label$2
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = (int_64)0
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)-4157495357179166720, (uint_64)*($0 + [40]) >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$19 }
	$7 = CALL $34($5, $7)
	if ( ((int_32)*($7 + [32]) == (int_32)$5) ){ goto $label$20 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$20
	$2 = *($0)
	*($5 + [148]) = $0
	*($5 + [144]) = $3
	CALL $51($5, $7, $2, ($5 + [144]))
	$7 = *($5 + [24])
	if ( ($7 == 0) ){ goto $label$19 }
	$8 = ($5 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$24 }
	CALL _ZdlPv($3)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$23 }
	$0 = *(($5 + [24]))
	goto $label$21 
	
.LABEL $label$22
	$0 = $7
	
.LABEL $label$21
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$19
	$7 = *($5 + [64])
	if ( ($7 == 0) ){ goto $label$25 }
	$8 = ($5 + [68])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$27 }
	
.LOOP $label$28:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL _ZdlPv($3)
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$28 }
	$0 = *(($5 + [64]))
	goto $label$26 
	
.LABEL $label$27
	$0 = $7
	
.LABEL $label$26
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$25
	$7 = *($5 + [104])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($5 + [108])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$33 }
	CALL _ZdlPv($3)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$32 }
	$0 = *(($5 + [104]))
	goto $label$30 
	
.LABEL $label$31
	$0 = $7
	
.LABEL $label$30
	*($8) = $7
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($5 + [160])
}

void .FUNC $12 (int_32 $0, int_64 $1)
{
	CALL eosio_assert([0], [8624])
}

void .FUNC $13 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $2
	CALL require_auth(*($0))
	$5 = [0]
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($0)
	*($4 + [8]) = $6
	*($4 + [16]) = $6
	$7 = CALL db_find_i64($6, $6, (int_64)-4157660971118100480, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL $27(($4 + [8]), $7)
	if ( ((int_32)*($5 + [24]) == (int_32)($4 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$3
	*($4 + [4]) = $5
	*($4) = ($4 + [8])
	$5 = [1]
	$2 = *($4 + [48])
	goto $label$1 
	
.LABEL $label$2
	*($4 + [4]) = [0]
	*($4) = ($4 + [8])
	
.LABEL $label$1
	CALL eosio_assert($5, [8361])
	$7 = *(($4 + [36]))
	$8 = *(($4 + [32]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$10:
	$5 = ($7 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$9 }
	$7 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$8 }
	if ( ((int_32)*($9 + [24]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [9284])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL db_find_i64(*($4 + [8]), *(($4 + [16])), (int_64)-4157660971118100480, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $27(($4 + [8]), $5)
	if ( ((int_32)*($9 + [24]) == (int_32)($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$7
	$2 = *($0)
	*($4 + [56]) = $4
	CALL $28(($4 + [8]), $9, $2, ($4 + [56]))
	$2 = *($4)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$11 }
	CALL eosio_assert([0], [9409])
	CALL eosio_assert([0], [9443])
	
.LABEL $label$11
	$7 = CALL db_next_i64(*($5 + [28]), ($4 + [56]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	CALL $27((CASTING uint_32)(uint_64 $2), $7)
	
.LABEL $label$12
	CALL $29(($4 + [8]), $5)
	$9 = *($4 + [32])
	if ( $9 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = *($0)
	$5 = *($4 + [4])
	*($4 + [56]) = ($4 + [48])
	if ( $5 ){ goto $label$13 }
	CALL eosio_assert([0], [9621])
	
.LABEL $label$13
	CALL $30(($4 + [8]), $5, $2, ($4 + [56]))
	$9 = *($4 + [32])
	if ( ($9 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = ($4 + [36])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$17 }
	CALL _ZdlPv($7)
	
.LABEL $label$17
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($4 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $9
	
.LABEL $label$14
	*($8) = $9
	CALL _ZdlPv($5)
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($4 + [64])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9335])
	
.LABEL $label$5
	$2 = CALL $80($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([20])) + [4]) = [0]
	*($5) = [86400]
	*($5 + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$7
	CALL memcpy($5, $2, [4])
	$7 = ($2 + [4])
	if ( ((int_32)$4 != (int_32)[4]) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	CALL memcpy(($3 + [16]), $7, [1])
	*(($5 + [4])) = ((int_32)*($3 + [16]) != (int_32)[0])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)4982871467403247616
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = (int_64)4982871467403247616
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $62(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $83($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $36($0, $4)
	if ( ((int_32)*($4 + [8]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$2
	*($3) = $1
	CALL $53($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $54($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9335])
	
.LABEL $label$5
	$4 = CALL $80($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	CALL $61(($3 + [40]), ($3 + [32]))
	*($5 + [36]) = $1
	*($3 + [32]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [40]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $42(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $83($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *((*(($3 + [4])) + [40]))
	$8 = *(*(*($3) + [4]) + [8])
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [9200])
	
.LABEL $label$3
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$6 = $10
	$11 = $3
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $10
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$3 < (int_32)[6])
	$12 = ($3 + [1])
	$3 = $12
	if ( $11 ){ goto $label$8 }
	$3 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9249])
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [24])) == (int_64)$7) ){ goto $label$9 }
	CALL eosio_assert([0], [9812])
	
.LABEL $label$9
	$6 = (int_64)
	*($1 + [16]) = $6(*($1 + [16]) - $8))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9860])
	$6 = *(($1 + [16]))
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$11 }
	CALL eosio_assert([0], [9882])
	
.LABEL $label$11
	if ( ((int_64)$9 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$12 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$12
	$11 = $4
	$3 = ($11 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $11
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $41(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$13
	$global$0 = ($5 + [32])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9269])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9269])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9269])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $60(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $33 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $31($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $52(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	*($1) = $7
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9753])
	
.LABEL $label$3
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [20])
	CALL $49(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $74($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9280])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $31($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($0 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $80($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10008])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $80($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $74($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [8]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$4
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4982871467403247616, (int_64)4982871467403247616)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $36($1, $2)
	if ( ((int_32)*($2 + [8]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [9284])
	
.LABEL $label$2
	*($0) = *($2)
	return (unreachable)
	
.LABEL $label$1
	CALL eosio_assert([0], [9903])
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $56(CALL $55($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9269])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9656])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9702])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [4]))) = *(($3 + [4]))
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [4])
	*($5 + [15]) = *($6)
	CALL memcpy(($3 + [-12]), ($5 + [15]), [1])
	CALL db_update_i64(*(($1 + [12])), $2, $4, [5])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871467403247616) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)4982871467403247617
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9358])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([20])) + [4]) = [0]
	*($5) = [86400]
	*($5 + [8]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [4]) = *(($3 + [4]))
	CALL memcpy(($4 + [16]), $5, [4])
	*($4 + [24]) = *($5 + [4])
	CALL memcpy((($4 + [16]) | [4]), ($4 + [24]), [1])
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)4982871467403247616, $2, (int_64)4982871467403247616, ($4 + [16]), [5])
	*($5 + [12]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4982871467403247616) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)4982871467403247617
	
.LABEL $label$2
	*($4 + [24]) = $5
	*($4 + [16]) = (int_64)4982871467403247616
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)4982871467403247616
	*($3 + [16]) = $6
	*($4 + [24]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $62(($1 + [24]), ($4 + [24]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [24])
	*($4 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9269])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9269])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9269])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9269])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $58($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $73($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $73($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $71($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}