(data (i32.const 8192) "eosio.token\00LC_ALL\00\00-+   0X0x\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8231) "thebetxtoken\00strftime_l called\00uncaught_exceptions not yet implemented\n\00LANG\00(null)\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8401) "bitpietokens\00%p\00C.UTF-8\00")
(data (i32.const 8425) "transfer\00POSIX\00-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 8459) "Token not accepted for transfer\00MUSL_LOCPATH\00inf\00")
(data (i32.const 8508) "string is too long to be a valid name\00stoull\00INF\00")
(data (i32.const 8557) "thirteenth character in name cannot be a letter that comes after j\00nan\00")
(data (i32.const 8628) "character is not in allowed character set for names\00%Lf\00NAN\00")
(data (i32.const 8688) "Contract is init\00.\00")
(data (i32.const 8707) "error reading iterator\00%.0Lf\00")
(data (i32.const 8736) "read\00C\00")
(data (i32.const 8743) "cannot create objects in table of another contract\00")
(data (i32.const 8794) "write\00")
(data (i32.const 8800) "cannot pass end iterator to modify\00%llu\00")
(data (i32.const 8840) "object passed to modify is not in multi_index\00")
(data (i32.const 8886) "cannot modify objects in table of another contract\00")
(data (i32.const 8937) "updater cannot change primary key when modifying an object\00true\00")
(data (i32.const 9004) "Id not found in globalvars\00\00t\00\00\00r\00\00\00u\00\00\00e\00\00\00\00\00\00\00")
(data (i32.const 9052) "object passed to iterator_to is not in multi_index\00false\00")
(data (i32.const 9112) "token symbol is invalid\00f\00\00\00a\00\00\00l\00\00\00s\00\00\00e\00\00\00\00\00\00\00")
(data (i32.const 9160) "string is too long to be a valid symbol_code\00")
(data (i32.const 9205) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9258) "cannot increment end iterator\00%m/%d/%y\00")
(data (i32.const 9300) "Record does not exist\00\00\00%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00%\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 9360) "cannot pass end iterator to erase\00: no conversion\00")
(data (i32.const 9410) "object passed to erase is not in multi_index\00%H:%M:%S\00: out of range\00")
(data (i32.const 9479) "cannot erase objects in table of another contract\00")
(data (i32.const 9532) "attempt to remove object that was not in multi_index\00\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00\00\00\00\00")
(data (i32.const 9624) "name not found; exiting ...\00")
(data (i32.const 9652) "get\00%a %b %d %H:%M:%S %Y\00")
(data (i32.const 9677) "Bet doesn\'t exist\00")
(data (i32.const 9696) "unable to find key\00\00%\00\00\00a\00\00\00 \00\00\00%\00\00\00b\00\00\00 \00\00\00%\00\00\00d\00\00\00 \00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00Y\00\00\00\00\00\00\00")
(data (i32.const 9800) "Not found ref reward ratio\00")
(data (i32.const 9827) "Not found partner ratio\00%I:%M:%S %p\00")
(data (i32.const 9863) "Not found dividend ratio\00")
(data (i32.const 9888) "Bet id: \00\00\00\00%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00\00\00\00\00")
(data (i32.const 9948) " -- Winner! Play: betx.fun\00")
(data (i32.const 9975) " Bet id: \00")
(data (i32.const 9985) " -- Referral reward! Play betx.fun\00")
(data (i32.const 10020) " -- Partner dividend! Play betx.fun\00")
(data (i32.const 10056) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10105) "invalid symbol name\00")
(data (i32.const 10125) "Not found global variable GLOBAL_ID_BETX_RATIO\00")
(data (i32.const 10176) "X(\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00>\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\01\00\00@\01\00\00\847\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 10328) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 10364) "@\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\11\00\00\008\00\00\00\f8\ff\ff\ff\00\00\00\00\12\00\00\00\13\00\00\00\c0\ff\ff\ff\c0\ff\ff\ff\00\00\00\00\14\00\00\00\15\00\00\00")
(data (i32.const 10432) "\88(\00\00\fc(\00\00<)\00\00P)\00\00l)\00\00\80)\00\00$)\00\00\10)\00\00\b0(\00\00\9c(\00\00")
(data (i32.const 10480) "@\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\17\00\00\008\00\00\00\f8\ff\ff\ff\00\00\00\00\18\00\00\00\19\00\00\00\c0\ff\ff\ff\c0\ff\ff\ff\00\00\00\00\1a\00\00\00\1b\00\00\00")
(data (i32.const 10544) "@\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\1d\00\00\00\c0\ff\ff\ff\c0\ff\ff\ff\00\00\00\00\1e\00\00\00\1f\00\00\00")
(data (i32.const 10592) "8\00\00\00\00\00\00\00\00\00\00\00 \00\00\00!\00\00\00\c8\ff\ff\ff\c8\ff\ff\ff\00\00\00\00\"\00\00\00#\00\00\00")
(data (i32.const 10632) "\00\00\00\00\00\00\00\00$\00\00\00%\00\00\00&\00\00\00\'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\00-\00\00\00.\00\00\00/\00\00\000\00\00\001\00\00\00")
(data (i32.const 10696) "Bet Id doesn\'t exist\00")
(data (i32.const 10717) " -- REFUND. Sorry for the inconvenience.\00")
(data (i32.const 10758) "This token is not accepted by contract.\00")
(data (i32.const 10798) "Invalid asset\00Sunday\00")
(data (i32.const 10819) "Bet needs to be greater than \00Monday\00")
(data (i32.const 10856) "Roll must be >= 2, <= 96.\00Tuesday\00")
(data (i32.const 10890) "Potential payout too large. Please bet less.\00Wednesday\00")
(data (i32.const 10945) "-\00Thursday\00")
(data (i32.const 10956) "Not found global variable GLOBAL_ID_MAX_LOSE_RATIO\00Friday\00")
(data (i32.const 11014) "0123456789abcdef\00Saturday\00")
(data (i32.const 11040) " -- SUSPEND. Sorry for the inconvenience.\00Sun\00")
(data (i32.const 11086) "betId not found.\00Mon\00")
(data (i32.const 11107) "thebetxowner\00Tue\00")
(data (i32.const 11124) "betxresolver\00Wed\00")
(data (i32.const 11141) "thebetxdivid\00Thu\00")
(data (i32.const 11158) "EOS\00Fri\00")
(data (i32.const 11166) "BETX\00Sat\00")
(data (i32.const 11176) "\00\00\00\00\00\00\00\002\00\00\003\00\00\00&\00\00\00\'\00\00\004\00\00\005\00\00\00*\00\00\00+\00\00\00,\00\00\006\00\00\00.\00\00\007\00\00\000\00\00\008\00\00\00")
(data (i32.const 11240) "\00\00\00\00\00\00\00\009\00\00\00:\00\00\00")
(data (i32.const 11256) "\00\00\00\00\00\00\00\00M\00\00\00N\00\00\00O\00\00\00P\00\00\00Q\00\00\00R\00\00\00")
(data (i32.const 22616) "\00\00\00\00\00\00\00\00S\00\00\00T\00\00\00O\00\00\00U\00\00\00V\00\00\00W\00\00\00")
(data (i32.const 22648) "\00\00\00\00\00\00\00\00X\00\00\00Y\00\00\00O\00\00\00Z\00\00\00[\00\00\00\\\00\00\00]\00\00\00^\00\00\00_\00\00\00`\00\00\00a\00\00\00b\00\00\00c\00\00\00d\00\00\00")
(data (i32.const 22720) "0123456789abcdefABCDEFxX+-pPiInN\00")
(data (i32.const 22756) "\00\00\00\00\00\00\00\00e\00\00\00f\00\00\00O\00\00\00g\00\00\00h\00\00\00i\00\00\00j\00\00\00k\00\00\00l\00\00\00m\00\00\00n\00\00\00o\00\00\00p\00\00\00q\00\00\00")
(data (i32.const 22820) "\00\00\00\00\00\00\00\00r\00\00\00s\00\00\00O\00\00\00t\00\00\00u\00\00\00v\00\00\00w\00\00\00x\00\00\00y\00\00\00z\00\00\00{\00\00\00")
(data (i32.const 22872) "\00\00\00\00\00\00\00\00|\00\00\00}\00\00\00O\00\00\00~\00\00\00\7f\00\00\00\80\00\00\00\81\00\00\00\82\00\00\00\83\00\00\00\84\00\00\00\85\00\00\00")
(data (i32.const 22924) "%\00\00\00\00\00")
(data (i32.const 22930) "%p\00\00\00\00")
(data (i32.const 22936) "\00\00\00\00\00\00\00\00\86\00\00\00\87\00\00\00O\00\00\00\88\00\00\00\89\00\00\00\8a\00\00\00\8b\00\00\00\8c\00\00\00\8d\00\00\00\8e\00\00\00\f8\ff\ff\ff\00\00\00\00\8f\00\00\00\90\00\00\00\91\00\00\00\92\00\00\00\93\00\00\00\94\00\00\00\95\00\00\00")
(data (i32.const 23020) "%I:%M:%S %p")
(data (i32.const 23031) "%H:%M")
(data (i32.const 23036) "\00\00\00\00\00\00\00\00\96\00\00\00\97\00\00\00O\00\00\00\98\00\00\00\99\00\00\00\9a\00\00\00\9b\00\00\00\9c\00\00\00\9d\00\00\00\9e\00\00\00\f8\ff\ff\ff\00\00\00\00\9f\00\00\00\a0\00\00\00\a1\00\00\00\a2\00\00\00\a3\00\00\00\a4\00\00\00\a5\00\00\00")
(data (i32.const 23120) "%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00%\00\00\00y\00\00\00")
(data (i32.const 23152) "%\00\00\00Y\00\00\00-\00\00\00%\00\00\00m\00\00\00-\00\00\00%\00\00\00d\00\00\00")
(data (i32.const 23184) "%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00")
(data (i32.const 23232) "%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00")
(data (i32.const 23264) "%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00")
(data (i32.const 23296) "\00\00\00\00\00\00\00\00\a6\00\00\00\a7\00\00\00O\00\00\00\a8\00\00\00")
(data (i32.const 23320) "\00\00\00\00\00\00\00\00\a9\00\00\00\aa\00\00\00O\00\00\00\ab\00\00\00")
(data (i32.const 23344) "\00\00\00\00\00\00\00\00\ac\00\00\00\ad\00\00\00O\00\00\00\ae\00\00\00\af\00\00\00\b0\00\00\00\b1\00\00\00\b2\00\00\00\b3\00\00\00\b4\00\00\00\b5\00\00\00\b6\00\00\00")
(data (i32.const 23400) "\00\00\00\00\00\00\00\00\b7\00\00\00\b8\00\00\00O\00\00\00\b9\00\00\00\ba\00\00\00\bb\00\00\00\bc\00\00\00\bd\00\00\00\be\00\00\00\bf\00\00\00\c0\00\00\00\c1\00\00\00")
(data (i32.const 23456) "\00\00\00\00\00\00\00\00\c2\00\00\00\c3\00\00\00O\00\00\00\c4\00\00\00\c5\00\00\00\c6\00\00\00\c7\00\00\00\c8\00\00\00\c9\00\00\00\ca\00\00\00\cb\00\00\00\cc\00\00\00")
(data (i32.const 23512) "\00\00\00\00\00\00\00\00\cd\00\00\00\ce\00\00\00O\00\00\00\cf\00\00\00\d0\00\00\00\d1\00\00\00\d2\00\00\00\d3\00\00\00\d4\00\00\00\d5\00\00\00\d6\00\00\00\d7\00\00\00")
(data (i32.const 23568) "\00\00\00\00\00\00\00\00\d8\00\00\00\d9\00\00\00O\00\00\00\da\00\00\00\db\00\00\00")
(data (i32.const 23596) "\00\00\00\00\00\00\00\00\dc\00\00\00\dd\00\00\00O\00\00\00\de\00\00\00\df\00\00\00")
(data (i32.const 23624) "0123456789\00")
(data (i32.const 23636) "\00\00\00\00\00\00\00\00\e0\00\00\00\e1\00\00\00O\00\00\00\e2\00\00\00\e3\00\00\00")
(data (i32.const 23664) "\00\00\00\00\00\00\00\00\e4\00\00\00\e5\00\00\00O\00\00\00\e6\00\00\00\e7\00\00\00")
(data (i32.const 23692) "\00\00\00\00\00\00\00\00\e8\00\00\00\e9\00\00\00O\00\00\00\ea\00\00\00\eb\00\00\00\ec\00\00\00")
(data (i32.const 23724) "\00\00\00\00\00\00\00\00\ed\00\00\00\ee\00\00\00O\00\00\00\ef\00\00\00\f0\00\00\00\f1\00\00\00")
(data (i32.const 23756) "\00\00\00\00\00\00\00\00\f2\00\00\00\f3\00\00\00O\00\00\00")
(data (i32.const 23776) "\00\00\00\00\00\00\00\00\f4\00\00\00\f5\00\00\00O\00\00\00\f6\00\00\00\f7\00\00\00\f8\00\00\00\f9\00\00\00\fa\00\00\00\fb\00\00\00\fc\00\00\00\fd\00\00\00")
(data (i32.const
(data (i32.const 24864) "\00\00\00\00\00\00\00\00\fe\00\00\00\ff\00\00\00O\00\00\00\00\01\00\00\01\01\00\00\02\01\00\00\03\01\00\00\04\01\00\00\05\01\00\00\06\01\00\00")
(data (i32.const 24912) "\00\00\00\00\00\00\00\00\07\01\00\00\08\01\00\00O\00\00\00\t\01\00\00\n\01\00\00\0b\01\00\00\0c\01\00\00\0d\01\00\00")
(data (i32.const 24952) "\00\00\00\00\00\00\00\00\0e\01\00\00\0f\01\00\00O\00\00\00\10\01\00\00\11\01\00\00\12\01\00\00\13\01\00\00\14\01\00\00")
(data (i32.const 24992) "\00\00\00\00\00\00\00\00\15\01\00\00\16\01\00\00O\00\00\00")
(data (i32.const 25012) "\00\00\00\00\00\00\00\00\15\01\00\00\17\01\00\00O\00\00\00\18\01\00\00\19\01\00\00\1a\01\00\00\1b\01\00\00\1c\01\00\00\1d\01\00\00\1e\01\00\00\1f\01\00\00 \01\00\00!\01\00\00\"\01\00\00#\01\00\00")
(data (i32.const 25080) "\00\00\00\00\00\00\00\00\15\01\00\00$\01\00\00O\00\00\00%\01\00\00&\01\00\00\'\01\00\00(\01\00\00)\01\00\00*\01\00\00+\01\00\00")
(data (i32.const 25128) "\00\00\00\00\00\00\00\00\15\01\00\00,\01\00\00O\00\00\00-\01\00\00.\01\00\00/\01\00\000\01\00\001\01\00\002\01\00\003\01\00\00")
(data (i32.const 25176) "\00\00\00\00\00\00\00\00\15\01\00\004\01\00\00O\00\00\005\01\00\006\01\00\007\01\00\008\01\00\009\01\00\00:\01\00\00;\01\00\00")
(data (i32.const 25224) "S\00\00\00u\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25252) "M\00\00\00o\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25280) "T\00\00\00u\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25312) "W\00\00\00e\00\00\00d\00\00\00n\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25352) "T\00\00\00h\00\00\00u\00\00\00r\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25388) "F\00\00\00r\00\00\00i\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25416) "S\00\00\00a\00\00\00t\00\00\00u\00\00\00r\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25452) "S\00\00\00u\00\00\00n\00\00\00\00\00\00\00")
(data (i32.const 25468) "M\00\00\00o\00\00\00n\00\00\00\00\00\00\00")
(data (i32.const 25484) "T\00\00\00u\00\00\00e\00\00\00\00\00\00\00")
(data (i32.const 25500) "W\00\00\00e\00\00\00d\00\00\00\00\00\00\00")
(data (i32.const 25516) "T\00\00\00h\00\00\00u\00\00\00\00\00\00\00")
(data (i32.const 25532) "F\00\00\00r\00\00\00i\00\00\00\00\00\00\00")
(data (i32.const 25548) "S\00\00\00a\00\00\00t\00\00\00\00\00\00\00")
(data (i32.const 25564) "January\00")
(data (i32.const 25572) "February\00")
(data (i32.const 25581) "March\00")
(data (i32.const 25587) "April\00")
(data (i32.const 25593) "May\00")
(data (i32.const 25597) "June\00")
(data (i32.const 25602) "July\00")
(data (i32.const 25607) "August\00")
(data (i32.const 25614) "September\00")
(data (i32.const 25624) "October\00")
(data (i32.const 25632) "November\00")
(data (i32.const 25641) "December\00")
(data (i32.const 25650) "Jan\00")
(data (i32.const 25654) "Feb\00")
(data (i32.const 25658) "Mar\00")
(data (i32.const 25662) "Apr\00")
(data (i32.const 25666) "Jun\00")
(data (i32.const 25670) "Jul\00")
(data (i32.const 25674) "Aug\00")
(data (i32.const 25678) "Sep\00")
(data (i32.const 25682) "Oct\00")
(data (i32.const 25686) "Nov\00")
(data (i32.const 25690) "Dec\00")
(data (i32.const 25696) "J\00\00\00a\00\00\00n\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25728) "F\00\00\00e\00\00\00b\00\00\00r\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25764) "M\00\00\00a\00\00\00r\00\00\00c\00\00\00h\00\00\00\00\00\00\00")
(data (i32.const 25788) "A\00\00\00p\00\00\00r\00\00\00i\00\00\00l\00\00\00\00\00\00\00")
(data (i32.const 25812) "M\00\00\00a\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25828) "J\00\00\00u\00\00\00n\00\00\00e\00\00\00\00\00\00\00")
(data (i32.const 25848) "J\00\00\00u\00\00\00l\00\00\00y\00\00\00\00\00\00\00")
(data (i32.const 25868) "A\00\00\00u\00\00\00g\00\00\00u\00\00\00s\00\00\00t\00\00\00\00\00\00\00")
(data (i32.const 25896) "S\00\00\00e\00\00\00p\00\00\00t\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 25936) "O\00\00\00c\00\00\00t\00\00\00o\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 25968) "N\00\00\00o\00\00\00v\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 26004) "D\00\00\00e\00\00\00c\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 26040) "J\00\00\00a\00\00\00n\00\00\00\00\00\00\00")
(data (i32.const 26056) "F\00\00\00e\00\00\00b\00\00\00\00\00\00\00")
(data (i32.const 26072) "M\00\00\00a\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 26088) "A\00\00\00p\00\00\00r\00\00\00\00\00\00\00")
(data (i32.const 26104) "J\00\00\00u\00\00\00n\00\00\00\00\00\00\00")
(data (i32.const 26120) "J\00\00\00u\00\00\00l\00\00\00\00\00\00\00")
(data (i32.const 26136) "A\00\00\00u\00\00\00g\00\00\00\00\00\00\00")
(data (i32.const 26152) "S\00\00\00e\00\00\00p\00\00\00\00\00\00\00")
(data (i32.const 26168) "O\00\00\00c\00\00\00t\00\00\00\00\00\00\00")
(data (i32.const 26184) "N\00\00\00o\00\00\00v\00\00\00\00\00\00\00")
(data (i32.const 26200) "D\00\00\00e\00\00\00c\00\00\00\00\00\00\00")
(data (i32.const 26216) "AM\00")
(data (i32.const 26219) "PM\00")
(data (i32.const 26224) "A\00\00\00M\00\00\00\00\00\00\00")
(data (i32.const 26236) "P\00\00\00M\00\00\00\00\00\00\00")
(data (i32.const 26256) "\12\11\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f`\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11\11a\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11\11bc\10\10\10d\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11e\11\11f\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11gh\10\10\10\10\10\10\10\10\10i\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10jklm\10\10\10\10\10\10\10\10n\10\10\10\10\10\10\10op\10\10\10\10q\10\10r\10\10\10\10\10\10\10\10\10\10\10\10\10\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\c3\ff\03\00\1fP\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\df\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\02\fe\ff\ff\ff\ff\00\00\00\00\00\ff\bf\b6\00\ff\ff\ff\07\07\00\00\00\ff\07\ff\ff\ff\ff\ff\ff\ff\fe\ff\c3\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\1f\fe\e1\ff\9f\00\00\ff\ff\ff\ff\ff\ff\00\e0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\00\ff\ff\ff\ff\ff\070\04\ff\ff\ff\fc\ff\1f\00\00\ff\ff\ff\01\ff\07\00\00\00\00\00\00\ff\ff\df?\00\00\f0\ff\f8\03\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\df\e1\ff\cf\ff\fe\ff\ef\9f\f9\ff\ff\fd\c5\e3\9fY\80\b0\cf\ff\03\10\ee\87\f9\ff\ff\fdm\c3\87\19\02^\c0\ff?\00\ee\bf\fb\ff\ff\fd\ed\e3\bf\1b\01\00\cf\ff\00\1e\ee\9f\f9\ff\ff\fd\ed\e3\9f\19\c0\b0\cf\ff\02\00\ec\c7=\d6\18\c7\ff\c3\c7\1d\81\00\c0\ff\00\00\ef\df\fd\ff\ff\fd\ff\e3\df\1d`\07\cf\ff\00\00\ef\df\fd\ff\ff\fd\ef\e3\df\1d`@\cf\ff\06\00\ef\df\fd\ff\ff\ff\ff\e7\df]\f0\80\cf\ff\00\fc\ec\ff\7f\fc\ff\ff\fb/\7f\80_\ff\c0\ff\0c\00\fe\ff\ff\ff\ff\7f\ff\07? \ff\03\00\00\00\00\96%\f0\fe\ae\ec\ff;_ \ff\f3\00\00\00\00\01\00\00\00\ff\03\00\00\ff\fe\ff\ff\ff\1f\fe\ff\03\ff\ff\fe\ff\ff\ff\1f\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\7f\f9\ff\03\ff\ff\e7\c1\ff\ff\7f@\ff3\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\f7\ff\ff\ff\ff\ff\ff\ff\ff\ff=\7f=\ff\ff\ff\ff\ff=\ff\ff\ff\ff=\7f=\ff\7f\ff\ff\ff\ff\ff\ff\ff=\ff\ff\ff\ff\ff\ff\ff\ff\87\00\00\00\00\ff\ff\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??\fe\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\9f\ff\ff\fe\ff\ff\07\ff\ff\ff\ff\ff\ff\ff\ff\ff\c7\ff\01\ff\df\0f\00\ff\ff\0f\00\ff\ff\0f\00\ff\df\0d\00\ff\ff\ff\ff\ff\ff\cf\ff\ff\01\80\10\ff\03\00\00\00\00\ff\03\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\ff\ff\ff\ff\ff\07\ff\ff\ff\ff\ff\ff\ff\ff?\00\ff\ff\ff\7f\ff\0f\ff\01\c0\ff\ff\ff\ff?\1f\00\ff\ff\ff\ff\ff\0f\ff\ff\ff\03\ff\03\00\00\00\00\ff\ff\ff\0f\ff\ff\ff\ff\ff\ff\ff\7f\fe\ff\1f\00\ff\03\ff\03\80\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ef\ff\ef\0f\ff\03\00\00\00\00\ff\ff\ff\ff\ff\f3\ff\ff\ff\ff\ff\ff\bf\ff\03\00\ff\ff\ff\ff\ff\ff?\00\ff\e3\ff\ff\ff\ff\ff?\ff\01\00\00\00\00\00\00\00\00\00\00\00\deo\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80\ff\1f\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\80\00\00\ff\1f\00\00\00\00\00\00\00\00\00\00\00\00\84\fc/>P\bd\ff\f3\e0C\00\00\ff\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\ff\ff\80\00\00\ff\ff\7f\00\7f\7f\7f\7f\7f\7f\7f\7f\ff\ff\ff\ff\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\e0\00\00\00\fe\03>\1f\fe\ff\ff\ff\ff\ff\ff\ff\ff\ff\7f\e0\fe\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\e0\ff\ff\ff\ff\7f\fe\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\7f\00\00\ff\ff\ff\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\07\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1f\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff?\ff\1f\ff\ff\ff\0f\00\00\ff\ff\ff\ff\ff\7f\f0\8f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80\ff\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f9\ff\ff\ff\7f\ff\00\00\00\00\00\00\00\80\ff\bb\f7\ff\ff\ff\00\00\00\ff\ff\ff\ff\ff\ff\0f\00\ff\ff\ff\ff\ff\ff\ff\ff/\00\ff\03\00\00\fc(\ff\ff\ff\ff\ff\07\ff\ff\ff\ff\07\00\ff\ff\ff\1f\ff\ff\ff\ff\ff\ff\f7\ff\00\80\ff\03\df\ff\ff\7f\ff\ff\ff\ff\ff\ff\7f\00\ff?\ff\03\ff\ff\7f\c4\ff\ff\ff\ff\ff\ff\ff\7f\05\00\008\ff\ff<\00~~~\00\7f\7f\ff\ff\ff\ff\ff\f7?\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\07\ff\03\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\0f\00\ff\ff\7f\f8\ff\ff\ff\ff\ff\0f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\00\00\00\00\7f\00\f8\e0\ff\fd\7f_\db\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\00\00\ff\ff\ff\ff\ff\ff\ff\ff\fc\ff\ff\ff\ff\ff\ff\00\00\00\00\00\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\df\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1f\00\00\ff\03\fe\ff\ff\07\fe\ff\ff\07\c0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\7f\fc\fc\fc\1c\00\00\00\00\ff\ef\ff\ff\7f\ff\ff\b7\ff?\ff?\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\1f\ff\ff\ff\ff\ff\ff\01\00\00\00\00\00\ff\ff\ff\ff\00\e0\ff\ff\ff\07\ff\ff\ff\ff\ff\07\ff\ff\ff?\ff\ff\ff\ff\0f\ff>\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\03\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f\ff\ff\ff\ff\ff\00\ff\ff\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\7f\00\ff\ff?\00\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\fd\ff\ff\ff\ff\bf\91\ff\ff?\00\ff\ff\7f\00\ff\ff\ff\7f\00\00\00\00\00\00\00\00\ff\ff7\00\ff\ff?\00\ff\ff\ff\03\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\c0\00\00\00\00\00\00\00\00o\f0\ef\fe\ff\ff\0f\00\00\00\00\00\ff\ff\ff\1f\ff\ff\ff\1f\00\00\00\00\ff\fe\ff\ff\1f\00\00\00\ff\ff\ff\ff\ff\ff?\00\ff\ff?\00\ff\ff\07\00\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\01\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\ff\ff?\00\00\00\c0\ff\00\00\fc\ff\ff\ff\ff\ff\ff\01\00\00\ff\ff\ff\01\ff\03\ff\ff\ff\ff\ff\ff\c7\ff\00\00\ff\ff\ff\ffG\00\ff\ff\ff\ff\ff\ff\ff\ff\1e\00\ff\17\00\00\00\00\ff\ff\fb\ff\ff\ff\9f@\00\00\00\00\00\00\00\00\7f\bd\ff\bf\ff\01\ff\ff\ff\ff\ff\ff\ff\01\ff\03\ef\9f\f9\ff\ff\fd\ed\e3\9f\19\81\e0\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\bb\07\ff\03\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\b3\00\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff?\7f\00\00\00?\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\7f\11\00\ff\03\00\00\00\00\ff\ff\ff\ff\ff\ff?\00\ff\03\00\00\00\00\00\00\ff\ff\ff\e3\ff\07\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\00\80\ff\ff\ff\ff\ff\ff\e7\7f\00\00\ff\ff\ff\ff\ff\ff\cf\ff\ff\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\01\ff\fd\ff\ff\ff\ff\7f\7f\01\00\ff\03\00\00\fc\ff\ff\ff\fc\ff\ff\fe\7f\00\00\00\00\00\00\00\00\00\7f\fb\ff\ff\ff\ff\7f\b4\cb\00\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\7f\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\01\ff\ff\ff\7f\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff?\00\00\ff\ff\ff\ff\ff\ff\7f\00\0f\00\ff\03\f8\ff\ff\e0\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\1f\00\ff\ff\ff\ff\ff\7f\00\00\f8\ff\00\00\00\00\00\00\00\00\03\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1f\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\7f\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\0f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\07\ff\1f\ff\01\ffC\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\cf\ff\ff\ff\ff\ff\ff\7f\ff\ff\f9\db\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1f\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\8f\00\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ef\ff\ff\ff\96\fe\f7\n\84\ea\96\aa\96\f7\f7^\ff\fb\ff\0f\ee\fb\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 30208) "\c0\00 \1f\00\01\01/2\01\01\059\01\01\0fJ\01\01-y\01\01\05p\03\01\03\91\03 \11\a3\03 \t\00\04P\10\10\04  `\04\01!\8a\04\015\c1\04\01\0d\d0\04\01?\14\05\01\1b1\050&\a0\01\01\05\b3\01\01\03\cd\01\01\0f\de\01\01\11\f8\01\01\'\"\02\01\11\d8\03\01\17\00\1e\01\95\a0\1e\01_\08\1f\f8\08\18\1f\f8\06(\1f\f8\088\1f\f8\08H\1f\f8\06h\1f\f8\08\88\1f\f8\08\98\1f\f8\08\a8\1f\f8\08\b8\1f\f8\02\ba\1f\b6\02\c8\1f\aa\04\d8\1f\f8\02\da\1f\9c\02\e8\1f\f8\02\ea\1f\90\02\f8\1f\80\02\fa\1f\82\02\f0\13\08\06\98\a6\01\03\96\a7\01\tF\02\01\t\10\05\01\03`!\10\10\00,0/g,\01\05\80,\01c\eb,\01\03@\a6\01-\80\a6\01\17\"\a7\01\0d2\a7\01=y\a7\01\03~\a7\01\t\90\a7\01\03\a0\a7\01\t\b4\a7\01\03!\ff \1a\00\00\00\00")
(data (i32.const 30480) "I\001\01S\00\7f\010\01i\00x\01\ff\00\81\01S\02\82\01\83\01\84\01\85\01\86\01T\02\87\01\88\01\89\01V\02\8a\01W\02\8b\01\8c\01\8e\01\dd\01\8f\01Y\02\90\01[\02\91\01\92\01\93\01`\02\94\01c\02\96\01i\02\97\01h\02\98\01\99\01\9c\01o\02\9d\01r\02\9f\01u\02\a6\01\80\02\a7\01\a8\01\a9\01\83\02\ac\01\ad\01\ae\01\88\02\af\01\b0\01\b1\01\8a\02\b2\01\8b\02\b7\01\92\02\b8\01\b9\01\bc\01\bd\01\c4\01\c6\01\c4\01\c5\01\c5\01\c6\01\c7\01\c9\01\c7\01\c8\01\c8\01\c9\01\ca\01\cc\01\ca\01\cb\01\cb\01\cc\01\f1\01\f3\01\f1\01\f2\01\f2\01\f3\01\f4\01\f5\01\f6\01\95\01\f7\01\bf\01 \02\9e\01\86\03\ac\03\88\03\ad\03\89\03\ae\03\8a\03\af\03\8c\03\cc\03\8e\03\cd\03\8f\03\ce\03\99\03E\03\99\03\be\1f\a3\03\c2\03\f7\03\f8\03\fa\03\fb\03`\1e\9b\1e\9e\1e\df\00Y\1fQ\1f[\1fS\1f]\1fU\1f_\1fW\1f\bc\1f\b3\1f\cc\1f\c3\1f\ec\1f\e5\1f\fc\1f\f3\1f:\02e,;\02<\02=\02\9a\01>\02f,A\02B\02C\02\80\01D\02\89\02E\02\8c\02\f4\03\b8\03\f9\03\f2\03\fd\03{\03\fe\03|\03\ff\03}\03\c0\04\cf\04&!\c9\03*!k\00+!\e5\002!N!\83!\84!`,a,b,k\02c,}\1dd,}\02m,Q\02n,q\02o,P\02p,R\02r,s,u,v,~,?\02\7f,@\02\f2,\f3,}\a7y\1d\8b\a7\8c\a7\8d\a7e\02\aa\a7f\02\c7\10\'-\cd\10--v\03w\03\9c\03\b5\00\92\03\d0\03\98\03\d1\03\a6\03\d5\03\a0\03\d6\03\9a\03\f0\03\a1\03\f1\03\95\03\f5\03\cf\03\d7\03\ab\a7\\\02\ac\a7a\02\ad\a7l\02\ae\a7j\02\b0\a7\9e\02\b1\a7\87\02\b2\a7\9d\02\b3\a7S\ab\12\04\80\1c\14\04\81\1c\1e\04\82\1c!\04\83\1c\"\04\84\1c\"\04\85\1c*\04\86\1cb\04\87\1cJ\a6\88\1c\00\00\00\00")
(data (i32.const 31040) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 31136) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 32944) "\de\12\04\95\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 32964) "\b0\80\00\00\14\00\00\00C.UTF-8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 33024) "\c4\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 33056) "LC_CTYPE\00\00\00\00LC_NUMERIC\00\00LC_TIME\00\00\00\00\00LC_COLLATE\00\00LC_MONETARY\00LC_MESSAGES\00")
(data (i32.const 33136) "\02\00\00\c0\03\00\00\c0\04\00\00\c0\05\00\00\c0\06\00\00\c0\07\00\00\c0\08\00\00\c0\t\00\00\c0\n\00\00\c0\0b\00\00\c0\0c\00\00\c0\0d\00\00\c0\0e\00\00\c0\0f\00\00\c0\10\00\00\c0\11\00\00\c0\12\00\00\c0\13\00\00\c0\14\00\00\c0\15\00\00\c0\16\00\00\c0\17\00\00\c0\18\00\00\c0\19\00\00\c0\1a\00\00\c0\1b\00\00\c0\1c\00\00\c0\1d\00\00\c0\1e\00\00\c0\1f\00\00\c0\00\00\00\b3\01\00\00\c3\02\00\00\c3\03\00\00\c3\04\00\00\c3\05\00\00\c3\06\00\00\c3\07\00\00\c3\08\00\00\c3\t\00\00\c3\n\00\00\c3\0b\00\00\c3\0c\00\00\c3\0d\00\00\d3\0e\00\00\c3\0f\00\00\c3\00\00\0c\bb\01\00\0c\c3\02\00\0c\c3\03\00\0c\c3\04\00\0c\db")
(data (i32.const 33344) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 33424) "\c8\'\00\00")
(data (i32.const 33440) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 33904) "0123456789ABCDEF")
(data (i32.const 33920) "\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05")
(data (i32.const 33952) "\18\00\00\005\00\00\00q\00\00\00")
(data (i32.const 33964) "k\ff\ff\ff\ce\fb\ff\ff\92\bf\ff\ff")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "read_action_data" (func $fimport$2 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$4 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "memset" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$9 (param i32 i32 i32 i32 i32)))
(import "env" "sha256" (func $fimport$10 (param i32 i32 i32)))
(import "env" "send_inline" (func $fimport$11 (param i32 i32)))
(import "env" "current_time" (func $fimport$12 (result i64)))
(import "env" "send_deferred" (func $fimport$13 (param i32 i64 i32 i32 i32)))
(import "env" "is_account" (func $fimport$14 (param i64) (result i32)))
(import "env" "read_transaction" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$16 (param i64)))
(import "env" "current_receiver" (func $fimport$17 (result i64)))
(import "env" "db_get_i64" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$19 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$20 (param i32 i64 i32 i32)))
(import "env" "db_idx64_store" (func $fimport$21 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$22 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$23 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$24 (param i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$25 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$26))
(import "env" "memmove" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$28 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$32 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$33 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$35 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$36 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$38 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$39 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$40 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$41 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$42 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$43 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$44 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$45 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$46 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$47 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $1))
(export "_ZdlPv" (func $520))
(export "_Znaj" (func $519))
(export "_Znwj" (func $518))
(export "_ZTCNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE0_NS_13basic_istreamIcS2_EE" (global $global$3))
(export "_ZTCNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE0_NS_14basic_iostreamIcS2_EE" (global $global$4))
(export "_ZTCNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE8_NS_13basic_ostreamIcS2_EE" (global $global$5))
(export "_ZdaPv" (func $521))
(export "_ZnwjSt11align_val_t" (func $522))
(export "_ZnajSt11align_val_t" (func $523))
(export "_ZdlPvSt11align_val_t" (func $524))
(export "_ZdaPvSt11align_val_t" (func $525))
(table $0 322 322 anyfunc)
(elem (i32.const 1) $3 $5 $7 $8 $9 $11 $13 $15 $17 $19 $20 $21 $23 $25 $26 $127 $128 $129 $130 $131 $132 $179 $182 $180 $183 $181 $184 $168 $170 $169 $171 $173 $175 $174 $176 $133 $134 $156 $157 $135 $136 $160 $161 $162 $137 $164 $138 $166 $139 $153 $154 $158 $159 $163 $165 $167 $150 $185 $200 $201 $367 $650 $487 $489 $491 $493 $495 $497 $499 $501 $503 $505 $507 $509 $511 $513 $186 $188 $410 $189 $190 $191 $192 $193 $194 $195 $196 $197 $198 $199 $203 $208 $211 $214 $217 $220 $223 $227 $229 $231 $233 $234 $235 $237 $241 $243 $245 $247 $249 $251 $255 $257 $259 $260 $261 $262 $263 $267 $268 $269 $270 $273 $274 $275 $276 $277 $278 $281 $282 $283 $284 $286 $287 $289 $290 $291 $292 $293 $294 $295 $296 $298 $486 $490 $494 $506 $510 $498 $502 $302 $303 $304 $305 $306 $307 $308 $309 $311 $488 $492 $496 $508 $512 $500 $504 $314 $315 $316 $317 $318 $319 $320 $321 $322 $323 $324 $325 $326 $327 $328 $329 $330 $331 $332 $333 $334 $335 $336 $337 $338 $339 $340 $341 $342 $343 $344 $345 $346 $347 $348 $349 $350 $351 $352 $353 $354 $355 $356 $357 $358 $359 $360 $361 $362 $363 $364 $365 $366 $370 $372 $373 $374 $377 $379 $380 $381 $384 $385 $386 $387 $390 $391 $392 $393 $394 $395 $396 $397 $398 $399 $400 $403 $404 $424 $425 $426 $427 $428 $429 $430 $431 $432 $433 $514 $442 $443 $444 $445 $446 $447 $448 $449 $472 $473 $476 $478 $480 $482 $484 $474 $475 $477 $479 $481 $483 $485 $187 $409 $411 $412 $413 $414 $415 $416 $417 $418 $419 $420 $421 $422 $423 $434 $435 $436 $437 $438 $439 $440 $441 $450 $451 $453 $455 $456 $457 $458 $460 $461 $462 $464 $466 $467 $468 $469 $471 $587 $589 $593 $594 $595 $625)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 33976))
(global $global$2 i32 (i32.const 33976))
(global $global$3 i32 (i32.const 10544))
(global $global$4 i32 (i32.const 10480))
(global $global$5 i32 (i32.const 10592))


void .FUNC $505 (int_32 $0)
{
	if ( ((*([0] + [11652]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11660]))
	
.LABEL $label$1
}

int_32 .FUNC $504 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11664]) == 0) ){ goto $label$1 }
	return [11652]
	
.LABEL $label$1
	*([0] + [11652 align=4]) = (int_64)0
	*([0] + [11660]) = [0]
	$1 = CALL $635([9588])
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[2]) ){ goto $label$6 }
	*([0] + [11652]) = ($1 << [1])
	$2 = [11656]
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [4]) & [-4])
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$2 = CALL _Znwj(($3 << [2]))
	*([0] + [11652]) = ($3 | [1])
	*([0] + [11660]) = $2
	*([0] + [11656]) = $1
	
.LABEL $label$5
	CALL $636($2, [9588], $1)
	
.LABEL $label$4
	*(($2 + ($1 << [2]))) = [0]
	CALL $567([72], [0], [8192])
	*([0] + [11664]) = [1]
	return [11652]
	
.LABEL $label$3
	CALL $526([11652])
	
.LABEL $label$2
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $507 (int_32 $0)
{
	if ( ((*([0] + [11668]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11676]))
	
.LABEL $label$1
}

int_32 .FUNC $506 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11680]) == 0) ){ goto $label$1 }
	return [11668]
	
.LABEL $label$1
	*([0] + [11668 align=4]) = (int_64)0
	*([0] + [11676]) = [0]
	$1 = CALL $632([9656])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [11668]) = ($1 << [1])
	$2 = [11669]
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL _Znwj($3)
	*([0] + [11668]) = ($3 | [1])
	*([0] + [11676]) = $2
	*([0] + [11672]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [9656], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	CALL $567([73], [0], [8192])
	*([0] + [11680]) = [1]
	return [11668]
	
.LABEL $label$2
	CALL $526([11668])
	return (unreachable)
}

void .FUNC $501 (int_32 $0)
{
	if ( ((*([0] + [11620]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11628]))
	
.LABEL $label$1
}

int_32 .FUNC $500 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11632]) == 0) ){ goto $label$1 }
	return [11620]
	
.LABEL $label$1
	*([0] + [11620 align=4]) = (int_64)0
	*([0] + [11628]) = [0]
	$1 = CALL $635([9324])
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[2]) ){ goto $label$6 }
	*([0] + [11620]) = ($1 << [1])
	$2 = [11624]
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [4]) & [-4])
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$2 = CALL _Znwj(($3 << [2]))
	*([0] + [11620]) = ($3 | [1])
	*([0] + [11628]) = $2
	*([0] + [11624]) = $1
	
.LABEL $label$5
	CALL $636($2, [9324], $1)
	
.LABEL $label$4
	*(($2 + ($1 << [2]))) = [0]
	CALL $567([70], [0], [8192])
	*([0] + [11632]) = [1]
	return [11620]
	
.LABEL $label$3
	CALL $526([11620])
	
.LABEL $label$2
	CALL abort()
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $468 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $469 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	return CALL $470($2, $3, $4, [1114111], [0])
}

int_32 .FUNC $466 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	*($4) = $2
	return [3]
}

int_32 .FUNC $467 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $464 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = ($global$0 - [16])
	$global$0 = $8
	*($8 + [12]) = $2
	*($8 + [8]) = $5
	$5 = CALL $465($2, $3, ($8 + [12]), $5, $6, ($8 + [8]), [1114111], [0])
	*($4) = *($8 + [12])
	*($7) = *($8 + [8])
	$global$0 = ($8 + [16])
	return $5
}

int_32 .FUNC $465 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	*($2) = $0
	*($5) = $3
	$3 = *($2)
	if ( (($7 & [4]) == 0) ){ goto $label$1 }
	if ( ((int_32)($1 - $3) < (int_32)[3]) ){ goto $label$1 }
	if ( ((int_32)*($3) != (int_32)[239]) ){ goto $label$1 }
	if ( ((int_32)*($3 + [1]) != (int_32)[187]) ){ goto $label$1 }
	if ( ((int_32)*($3 + [2]) != (int_32)[191]) ){ goto $label$1 }
	$3 = ($3 + [3])
	*($2) = $3
	
.LABEL $label$1
	$8 = [0]
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$14 }
	$0 = *($5)
	
.LOOP $label$15:
	$8 = [1]
	$9 = $0
	if ( ((uint_32)$9 >= (uint_32)$4) ){ goto $label$14 }
	$0 = *($3)
	$7 = ($0 & [255])
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$17 }
	if ( ((uint_32)$7 > (uint_32)$6) ){ goto $label$13 }
	$0 = [1]
	goto $label$16 
	
.LABEL $label$17
	if ( ($7 <= [194]) ){ goto $label$12 }
	if ( ((uint_32)$7 > (uint_32)[223]) ){ goto $label$18 }
	if ( ((int_32)($1 - $3) < (int_32)[2]) ){ goto $label$14 }
	$8 = [2]
	$10 = *($3 + [1])
	if ( ((int_32)($10 & [192]) != (int_32)[128]) ){ goto $label$14 }
	$0 = [2]
	$8 = [2]
	$7 = (($10 & [63]) | (($7 << [6]) & [1984]))
	if ( ((uint_32)$7 <= (uint_32)$6) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$18
	if ( ((uint_32)$7 > (uint_32)[239]) ){ goto $label$25 }
	if ( ((int_32)($1 - $3) < (int_32)[3]) ){ goto $label$14 }
	$11 = *($3 + [2])
	$10 = *($3 + [1])
	if ( ((int_32)$7 == (int_32)[237]) ){ goto $label$24 }
	if ( ((int_32)$7 != (int_32)[224]) ){ goto $label$23 }
	if ( ((int_32)($10 & [224]) == (int_32)[160]) ){ goto $label$22 }
	goto $label$7 
	
.LABEL $label$25
	if ( ((uint_32)$7 > (uint_32)[244]) ){ goto $label$11 }
	if ( ((int_32)($1 - $3) < (int_32)[4]) ){ goto $label$14 }
	$12 = *($3 + [3])
	$11 = *($3 + [2])
	$10 = *($3 + [1])
	if ( ((int_32)$7 == (int_32)[244]) ){ goto $label$21 }
	if ( ((int_32)$7 != (int_32)[240]) ){ goto $label$20 }
	if ( ((($10 + [112]) & [255]) <= [48]) ){ goto $label$19 }
	goto $label$6 
	
.LABEL $label$24
	if ( ((int_32)($10 & [224]) == (int_32)[128]) ){ goto $label$22 }
	goto $label$5 
	
.LABEL $label$23
	if ( ((int_32)($10 & [192]) != (int_32)[128]) ){ goto $label$4 }
	
.LABEL $label$22
	if ( ((int_32)($11 & [192]) != (int_32)[128]) ){ goto $label$10 }
	$0 = [3]
	$8 = [2]
	$7 = (((($10 & [63]) << [6]) | (($7 << [12]) & [61440])) | ($11 & [63]))
	if ( ((uint_32)$7 <= (uint_32)$6) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$21
	if ( ((int_32)($10 & [240]) == (int_32)[128]) ){ goto $label$19 }
	goto $label$3 
	
.LABEL $label$20
	if ( ((int_32)($10 & [192]) != (int_32)[128]) ){ goto $label$2 }
	
.LABEL $label$19
	if ( ((int_32)($11 & [192]) != (int_32)[128]) ){ goto $label$9 }
	if ( ((int_32)($12 & [192]) != (int_32)[128]) ){ goto $label$8 }
	$0 = [4]
	$8 = [2]
	$7 = ((((($10 & [63]) << [12]) | (($7 << [18]) & [1835008])) | (($11 << [6]) & [4032])) | ($12 & [63]))
	if ( ((uint_32)$7 > (uint_32)$6) ){ goto $label$14 }
	
.LABEL $label$16
	*($2) = ($3 + $0)
	$0 = (*($5) + [4])
	*($5) = $0
	*($9) = $7
	$3 = *($2)
	if ( ($3 <= $1) ){ goto $label$15 }
	$8 = [0]
	
.LABEL $label$14
	return $8
	
.LABEL $label$13
	return [2]
	
.LABEL $label$12
	return [2]
	
.LABEL $label$11
	return [2]
	
.LABEL $label$10
	return [2]
	
.LABEL $label$9
	return [2]
	
.LABEL $label$8
	return [2]
	
.LABEL $label$7
	return [2]
	
.LABEL $label$6
	return [2]
	
.LABEL $label$5
	return [2]
	
.LABEL $label$4
	return [2]
	
.LABEL $label$3
	return [2]
	
.LABEL $label$2
	return [2]
}

int_32 .FUNC $462 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = ($global$0 - [16])
	$global$0 = $8
	*($8 + [12]) = $2
	*($8 + [8]) = $5
	$5 = CALL $463($2, $3, ($8 + [12]), $5, $6, ($8 + [8]), [1114111], [0])
	*($4) = *($8 + [12])
	*($7) = *($8 + [8])
	$global$0 = ($8 + [16])
	return $5
}

int_32 .FUNC $463 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	*($2) = $0
	*($5) = $3
	if ( (($7 & [2]) == 0) ){ goto $label$7 }
	$0 = [1]
	if ( ((int_32)($4 - $3) < (int_32)[3]) ){ goto $label$6 }
	*($5) = ($3 + [1])
	*($3) = [239]
	$3 = *($5)
	*($5) = ($3 + [1])
	*($3) = [187]
	$3 = *($5)
	*($5) = ($3 + [1])
	*($3) = [191]
	
.LABEL $label$7
	$3 = *($2)
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = *($3)
	if ( ((uint_32)$3 > (uint_32)$6) ){ goto $label$5 }
	if ( ((int_32)($3 & [-2048]) == (int_32)[55296]) ){ goto $label$4 }
	if ( ((uint_32)$3 > (uint_32)[127]) ){ goto $label$11 }
	$0 = [1]
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[1]) ){ goto $label$6 }
	*($5) = ($7 + [1])
	*($7) = $3
	goto $label$10 
	
.LABEL $label$11
	if ( ((uint_32)$3 > (uint_32)[2047]) ){ goto $label$12 }
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[2]) ){ goto $label$3 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [6]) | [192])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	goto $label$10 
	
.LABEL $label$12
	$7 = *($5)
	$0 = ($4 - $7)
	if ( ((uint_32)$3 > (uint_32)[65535]) ){ goto $label$13 }
	if ( ((int_32)$0 < (int_32)[3]) ){ goto $label$2 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [12]) | [224])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = ((uint_32($3 >> [6]) & [63]) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	goto $label$10 
	
.LABEL $label$13
	if ( ((int_32)$0 < (int_32)[4]) ){ goto $label$1 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [18]) | [240])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = ((uint_32($3 >> [12]) & [63]) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = ((uint_32($3 >> [6]) & [63]) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	
.LABEL $label$10
	$3 = (*($2) + [4])
	*($2) = $3
	if ( ($3 <= $1) ){ goto $label$9 }
	
.LABEL $label$8
	$0 = [0]
	
.LABEL $label$6
	return $0
	
.LABEL $label$5
	return [2]
	
.LABEL $label$4
	return [2]
	
.LABEL $label$3
	return [1]
	
.LABEL $label$2
	return [1]
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC $460 (int_32 $0)
{
	return [4]
}

void .FUNC $461 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $534 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $535 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $534($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $597 (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8794])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$8 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [8794])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [8794])
	CALL memcpy(*($6), ($7 + [8]), [8])
	*($6) = (*($6) + [8])
	CALL $113(CALL $112($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$4 = *($6)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $553 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [8794])
	CALL memcpy(*($0 + [4]), $1, [4])
	$3 = (*($0 + [4]) + [4])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[1]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$3 = (*($0 + [4]) + [2])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[3]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$5 = *($1 + [12])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$6 = ((int_64)$5) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) > (int_32)[0]), [8794])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($2 + [14]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $6 ){ goto $label$1 }
	$7 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [8794])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($1 + [16]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$5 = *($1 + [20])
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$1 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($1) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [8794])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $1 ){ goto $label$2 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $473 (int_32 $0)
{
	*($0) = [24920]
	if ( ((*($0 + [12]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [20])))
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $503 (int_32 $0)
{
	if ( ((*([0] + [11636]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11644]))
	
.LABEL $label$1
}

int_32 .FUNC $364 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $530 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $502 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11648]) == 0) ){ goto $label$1 }
	return [11636]
	
.LABEL $label$1
	*([0] + [11636 align=4]) = (int_64)0
	*([0] + [11644]) = [0]
	$1 = CALL $632([9455])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [11636]) = ($1 << [1])
	$2 = [11637]
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL _Znwj($3)
	*([0] + [11636]) = ($3 | [1])
	*([0] + [11644]) = $2
	*([0] + [11640]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [9455], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	CALL $567([71], [0], [8192])
	*([0] + [11648]) = [1]
	return [11636]
	
.LABEL $label$2
	CALL $526([11636])
	return (unreachable)
}

void .FUNC $450 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($1 + [48])
	if ( ($2 & [16]) ){ goto $label$9 }
	if ( ($2 & [8]) ){ goto $label$8 }
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	return 
	
.LABEL $label$9
	$3 = *($1 + [24])
	$2 = *($1 + [44])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$10 }
	*(($1 + [44])) = $3
	$2 = $3
	
.LABEL $label$10
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = *($1 + [20])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$4 = ($0 + [1])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = *($1 + [8])
	$2 = *($1 + [16])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 > (uint_32)[10]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$4 = ($0 + [1])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$7
	$5 = (($3 + [16]) & [-16])
	$4 = CALL _Znwj($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$6
	$0 = $4
	
.LOOP $label$11:
	*($0) = *($1)
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$11 }
	*(($4 + $3)) = [0]
	return 
	
.LABEL $label$5
	$5 = (($3 + [16]) & [-16])
	$4 = CALL _Znwj($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$4
	$0 = $4
	
.LOOP $label$12:
	*($0) = *($1)
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$12 }
	*(($4 + $3)) = [0]
	return (unreachable)
	
.LABEL $label$3
	CALL $526($0)
	
.LABEL $label$2
	*($4) = [0]
	return 
	
.LABEL $label$1
	*($4) = [0]
}

int_32 .FUNC $189 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = [-1]
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$2 }
	$7 = *($3)
	$6 = *($1)
	if ( ((int_32)$6 < (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$1 }
	$1 = ($1 + [1])
	$3 = ($3 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$3
	$5 = ((int_32)$1 != (int_32)$2)
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	return [1]
}

void .FUNC $188 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*(($5 = CALL _Znwj([24])) + [8]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-6219583600791126016, $2, $6, ($4 + [16]), [8])
	*($5 + [12]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $100(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	CALL _ZdlPv($5)
	
.LABEL $label$4
	$global$0 = ($4 + [32])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [9410])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [9479])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [9532])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [52]))
	$6 = *(($1 + [56]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4060986518620078080, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

int_32 .FUNC $264 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [16])
	$global$0 = $5
	*($5 + [12]) = $4
	$2 = CALL $576($2)
	$0 = CALL $591($0, $1, $3, *($5 + [12]))
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $576($2)
	
.LABEL $label$1
	$global$0 = ($5 + [16])
	return $0
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$7 = ($global$0 - [32])
	$global$0 = $7
	$8 = *($6)
	$9 = (CASTING uint_64)(uint_32 [59])
	*($7 + [4 align=4]) = $9
	*($7) = [11500]
	$10 = $8
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11500], ($7 + [16]), [60])
	$10 = *($6)
	
.LABEL $label$1
	$11 = *(((*($8 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	*($7 + [4 align=4]) = $9
	*($7) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$2 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11540], ($7 + [16]), [60])
	
.LABEL $label$2
	$12 = *(((*($10 + [16]) + (*([0] + [11544]) << [2])) + [-4]))
	CALL void $7((int_32 $12), (int_32 *(*($12) + [20])))
	$8 = *($7)
	if ( (( *($7 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) == 0) ){ goto $label$5 }
	*($5) = $3
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$7 }
	$13 = $0
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = CALL int_32 $11((int_32 int_32(($8 << [24]) >> [24])), (int_32 *(*($11) + [28])))
	$6 = *($5)
	*($5) = ($6 + [1])
	*($6) = $8
	$13 = ($0 + [1])
	
.LABEL $label$6
	if ( ((int_32)($2 - $13) < (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)*($13) != (int_32)[48]) ){ goto $label$8 }
	if ( ((int_32)(*($13 + [1]) | [32]) != (int_32)[120]) ){ goto $label$8 }
	$8 = CALL int_32 $11((int_32 [48]), (int_32 *(*($11) + [28])))
	$6 = *($5)
	*($5) = ($6 + [1])
	*($6) = $8
	$8 = CALL int_32 $11((int_32 *(($13 + [1]))), (int_32 *(*($11) + [28])))
	$6 = *($5)
	*($5) = ($6 + [1])
	*($6) = $8
	$13 = ($13 + [2])
	
.LABEL $label$8
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$9 }
	$8 = ($2 + [-1])
	if ( ((uint_32)$8 <= (uint_32)$13) ){ goto $label$9 }
	$6 = $13
	
.LOOP $label$10:
	$10 = *($6)
	*($6) = *($8)
	*($8) = $10
	$8 = ($8 + [-1])
	$6 = ($6 + [1])
	if ( ($6 <= $8) ){ goto $label$10 }
	
.LABEL $label$9
	$14 = CALL int_32 $12((int_32 *(*($12) + [16])))
	if ( ((uint_32)$13 >= (uint_32)$2) ){ goto $label$11 }
	$15 = ($7 | [1])
	$10 = [0]
	$16 = ($7 + [8])
	$6 = $13
	$8 = [0]
	
.LOOP $label$12:
	$12 = *((( *($16) ? $15 : (*($7) & [1]) ) + $10))
	if ( ($12 == 0) ){ goto $label$13 }
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$13 }
	$8 = *($5)
	*($5) = ($8 + [1])
	*($8) = $14
	$8 = *($7)
	$10 = ($10 + ($10 <= (( *($7 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) + [-1])))
	$8 = [0]
	
.LABEL $label$13
	$12 = CALL int_32 $11((int_32 *($6)), (int_32 *(*($11) + [28])))
	$17 = *($5)
	*($5) = ($17 + [1])
	*($17) = $12
	$8 = ($8 + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = *($5)
	$10 = ($3 + ($13 - $0))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$4 }
	$8 = ($6 + [-1])
	if ( ((uint_32)$8 <= (uint_32)$10) ){ goto $label$3 }
	$6 = ($3 + (($13 + [1]) - $0))
	
.LOOP $label$14:
	$10 = ($6 + [-1])
	$11 = *($10)
	*($10) = *($8)
	*($8) = $11
	$8 = ($8 + [-1])
	$10 = ($6 <= $8)
	$6 = ($6 + [1])
	if ( $10 ){ goto $label$14 }
	$6 = *($5)
	goto $label$3 
	
.LABEL $label$5
	CALL int_32 $11((int_32 $0), (int_32 $2), (int_32 $3), (int_32 *(*($11) + [32])))
	$6 = ($3 + ($2 - $0))
	*($5) = $6
	goto $label$3 
	
.LABEL $label$4
	$6 = $10
	
.LABEL $label$3
	*($4) = ( $6 ? ($3 + ($1 - $0)) : ((int_32)$1 == (int_32)$2) )
	if ( ((*($7) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$15
	$global$0 = ($7 + [32])
}

int_32 .FUNC $266 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	if ( ($0 == 0) ){ goto $label$5 }
	$7 = *($4 + [12])
	$8 = [0]
	$9 = ($2 - $1)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$6 }
	if ( ((int_32)CALL int_32 $0((int_32 $1), (int_32 $9), (int_32 *(*($0) + [48]))) != (int_32)$9) ){ goto $label$1 }
	
.LABEL $label$6
	$1 = ($3 - $1)
	$1 = ( ($7 - $1) ? [0] : ((int_32)$7 > (int_32)$1) )
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$9 = ($6 | [1])
	$7 = $9
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($6 + [16])
	return [0]
	
.LABEL $label$4
	$8 = (($1 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($6) = ($8 | [1])
	*($6 + [8]) = $7
	*($6 + [4]) = $1
	$9 = ($6 | [1])
	
.LABEL $label$3
	CALL memset($7, ($5 & [255]), $1)
	$8 = [0]
	*(($7 + $1)) = [0]
	$5 = ($6 + [8])
	$7 = CALL int_32 $0((int_32 ( *($5) ? $9 : (*($6) & [1]) )), (int_32 $1), (int_32 *(*($0) + [48])))
	if ( ((*($6) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($5))
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($3 - $2)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$8 }
	$8 = [0]
	if ( ((int_32)CALL int_32 $0((int_32 $2), (int_32 $1), (int_32 *(*($0) + [48]))) != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$8
	*(($4 + [12])) = [0]
	$8 = $0
	
.LABEL $label$1
	$global$0 = ($6 + [16])
	return $8
}

int_32 .FUNC $267 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($6 = $5) + [24]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [27756]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [100]
	
.LABEL $label$4
	*(($8 + [2])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 + [23])
	$8 = ($5 + [-32])
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$13 = ($8 + $12)
	$7 = $13
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [1]) | [44]) + [14]) & [112]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $265($8, $7, $13, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $266($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = *(*($3))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	$3 = *($3)
	*($1 + [8 align=1]) = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	*(($1 + [24])) = *(($3 + [16]))
	*(($1 + [32])) = *(($3 + [24]))
	*(($1 + [40])) = *(($3 + [32]))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [34])
	CALL db_update_i64(*($1 + [52]), $2, $4, [42])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [48])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8736])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[33]), [8736])
	CALL memcpy(($5 + [8]), ($2 + [8]), [34])
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $95(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([64])
	CALL $94($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $95(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([64])) + [48]) = $1
	CALL $96(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $97(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $4)
	*(($5 = CALL _Znwj([64])) + [48]) = $0
	CALL $98(($3 + [32]), $5)
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $97(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $527($2, ($1 + [8]))
	$5 = *($1 + [48])
	$6 = *($1 + [40])
	$7 = *($1 + [32])
	$8 = *($1 + [24])
	$1 = *($0 + [4])
	$9 = *($1 + [4])
	$0 = (*($0) + int_32($9 >> [1]))
	$1 = *($1)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$9 = CALL $527(($2 + [16]), $4)
	CALL void $0((int_32 $3), (int_64 $9), (int_32 $8), (int_64 $7), (int_64 $6), (int_64 $5), (int_64 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($9 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	CALL $55(*($1), ($3 + [8]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [48]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $550 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

void .FUNC $509 (int_32 $0)
{
	if ( ((*([0] + [11684]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11692]))
	
.LABEL $label$1
}

void .FUNC $362 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

int_32 .FUNC $457 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $508 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11696]) == 0) ){ goto $label$1 }
	return [11684]
	
.LABEL $label$1
	*([0] + [11684 align=4]) = (int_64)0
	*([0] + [11692]) = [0]
	$1 = CALL $635([9716])
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[2]) ){ goto $label$6 }
	*([0] + [11684]) = ($1 << [1])
	$2 = [11688]
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [4]) & [-4])
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$2 = CALL _Znwj(($3 << [2]))
	*([0] + [11684]) = ($3 | [1])
	*([0] + [11692]) = $2
	*([0] + [11688]) = $1
	
.LABEL $label$5
	CALL $636($2, [9716], $1)
	
.LABEL $label$4
	*(($2 + ($1 << [2]))) = [0]
	CALL $567([74], [0], [8192])
	*([0] + [11696]) = [1]
	return [11684]
	
.LABEL $label$3
	CALL $526([11684])
	
.LABEL $label$2
	CALL abort()
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	return [-1]
}

int_32 .FUNC $166 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = [0]
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	$4 = ($0 + [28])
	$5 = ($0 + [24])
	
.LOOP $label$2:
	$7 = *($4)
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$3 }
	$7 = ($7 - $6)
	$8 = ($2 - $3)
	$7 = ( $8 ? $7 : ((int_32)$8 < (int_32)$7) )
	if ( ($7 == 0) ){ goto $label$4 }
	CALL memcpy($6, $1, $7)
	$6 = *($5)
	
.LABEL $label$4
	*($5) = ($6 + $7)
	$1 = ($1 + $7)
	$3 = ($7 + $3)
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)CALL int_32 $0((int_32 *($1)), (int_32 *(*($0) + [52]))) == (int_32)[-1]) ){ goto $label$1 }
	$1 = ($1 + [1])
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	return [-1]
}

int_32 .FUNC $164 (int_32 $0)
{
	int_32 $1
	$1 = [-1]
	if ( ((int_32)CALL int_32 $0((int_32 *(*($0) + [36]))) == (int_32)[-1]) ){ goto $label$1 }
	$1 = *($0 + [12])
	*($0 + [12]) = ($1 + [1])
	$1 = *($1)
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $163 (int_32 $0)
{
	return [-1]
}

int_32 .FUNC $162 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = [0]
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	$4 = ($0 + [16])
	$5 = ($0 + [12])
	
.LOOP $label$2:
	$7 = *($4)
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$3 }
	$7 = ($7 - $6)
	$8 = ($2 - $3)
	$7 = ( $8 ? $7 : ((int_32)$8 < (int_32)$7) )
	if ( ($7 == 0) ){ goto $label$4 }
	CALL memcpy($1, $6, $7)
	$6 = *($5)
	
.LABEL $label$4
	*($5) = ($6 + $7)
	$1 = ($1 + $7)
	$3 = ($7 + $3)
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = CALL int_32 $0((int_32 *(*($0) + [40])))
	if ( ((int_32)$6 == (int_32)[-1]) ){ goto $label$1 }
	*($1) = $6
	$1 = ($1 + [1])
	$3 = ([1] + $3)
	if ( ((int_32)$3 < (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $161 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $160 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $537 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[1073741808]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[2]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$1 = ($0 + [4])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($2 + [4]) & [-4])
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$1 = CALL _Znwj(($4 << [2]))
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL $636($1, $3, $2)
	
.LABEL $label$3
	*(($1 + ($2 << [2]))) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$5 = CALL $61($6, $1, *($2), *($3), $4)
	$10 = ($5 + [40])
	$8 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	$11 = ($8 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$5 = ($7 + $1)
	*((($8 = ($6 + $1)) + [-32])) = *(($5 + [-32]))
	*(($8 + [-40])) = *(($5 + [-40]))
	*(($2 = ($8 + [-24]))) = (int_64)0
	*(($3 = ($8 + [-16]))) = [0]
	$4 = ($5 + [-24])
	*($2) = *($4)
	$2 = ($5 + [-16])
	*($3) = *($2)
	*($2) = [0]
	*(($2 = ($8 + [-12]))) = (int_64)0
	*(($8 = ($8 + [-4]))) = [0]
	$3 = ($5 + [-12])
	*($2) = *($3)
	*($4) = (int_64)0
	$5 = ($5 + [-4])
	*($8) = *($5)
	*($5) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$5 = ($6 + $1)
	$8 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $8
	
.LABEL $label$5
	*($0) = $5
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($8 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($8 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = ($8 + [-40])
	$1 = *(($8 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [-20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $169 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($1 = ($0 + *((*($0) + [-12])))) + [8]) = [11248]
	$2 = *($1 + [48])
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ($1 + [8])
	$0 = (($2 << [2]) + [-4])
	$4 = ($1 + [44])
	$5 = ($1 + [40])
	
.LOOP $label$2:
	CALL void [0]((int_32 $3), (int_32 *((*($4) + $0))), (int_32 *((*($5) + $0))))
	$0 = ($0 + [-4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($1 + [36]))
	CALL $650(*(($1 + [40])))
	CALL $650(*(($1 + [44])))
	CALL $650(*($1 + [56]))
	CALL $650(*($1 + [68]))
	return $1
}

int_32 .FUNC $168 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = [11248]
	$1 = *(($0 + [48]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [8])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [44])
	$5 = ($0 + [40])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [36]))
	CALL $650(*(($0 + [40])))
	CALL $650(*(($0 + [44])))
	CALL $650(*(($0 + [56])))
	CALL $650(*(($0 + [68])))
	return $0
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [24]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [32]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($2) = $0
	CALL $116($2, $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $578 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = ( $3 ? [14200] : $3 )
	$3 = *($5)
	if ( ($1 == 0) ){ goto $label$9 }
	$6 = [-2]
	if ( ($2 == 0) ){ goto $label$3 }
	$7 = ( $0 ? ($4 + [12]) : $0 )
	if ( ($3 == 0) ){ goto $label$8 }
	$8 = $2
	goto $label$5 
	
.LABEL $label$9
	if ( ($3 == 0) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	$3 = *($1)
	$0 = int_32(($3 << [24]) >> [24])
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	*($7) = $3
	$global$0 = ($4 + [16])
	return ((int_32)$0 != (int_32)[0])
	
.LABEL $label$7
	$global$0 = ($4 + [16])
	return [0]
	
.LABEL $label$6
	if ( (*([0]) == 0) ){ goto $label$10 }
	$3 = ($3 + [-194])
	if ( ((uint_32)$3 > (uint_32)[50]) ){ goto $label$4 }
	$3 = *((($3 << [2]) + [33136]))
	$8 = ($2 + [-1])
	if ( ($8 == 0) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$5 
	
.LABEL $label$10
	*($7) = ($0 & [57343])
	$global$0 = ($4 + [16])
	return [1]
	
.LABEL $label$5
	$0 = *($1)
	$6 = uint_32($0 >> [3])
	if ( ((uint_32)(($6 + [-16]) | (int_32($3 >> [26]) + $6)) > (uint_32)[7]) ){ goto $label$4 }
	$6 = ($1 + [1])
	$1 = ($8 + [-1])
	
.LOOP $label$11:
	$3 = ((($0 & [255]) + [-128]) | ($3 << [6]))
	if ( ((int_32)$3 >= (int_32)[0]) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = ($1 + [-1])
	$0 = *($6)
	$6 = ($6 + [1])
	if ( ((int_32)($0 & [192]) == (int_32)[128]) ){ goto $label$11 }
	
.LABEL $label$4
	*($5) = [0]
	*(CALL $564()) = [84]
	$6 = [-1]
	
.LABEL $label$3
	$global$0 = ($4 + [16])
	return $6
	
.LABEL $label$2
	*($5) = $3
	$global$0 = ($4 + [16])
	return [-2]
	
.LABEL $label$1
	*($7) = $3
	*($5) = [0]
	$global$0 = ($4 + [16])
	return ($2 - $1)
}

int_32 .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $64($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $106(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

int_32 .FUNC $456 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $609 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $608($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_64 .FUNC $595 (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

void .FUNC $60 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = $1
	$3 = ($0 + [160])
	$1 = *($0 + [64])
	$5 = *(($0 + [188]))
	$4 = *(($0 + [184]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $29($3, $6)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$1 = *($0)
	*($2) = ($2 + [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8800])
	CALL $105($3, $7, $1, $2)
	$global$0 = ($2 + [16])
}

int_64 .FUNC $63 (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = (int_64)0
	if ( ((int_64)*($0 + [400]) != (int_64)$2) ){ goto $label$1 }
	$4 = ($0 + [160])
	$3 = *($0 + [104])
	$6 = *(($0 + [188]))
	$5 = *(($0 + [184]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$3) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	goto $label$2 
	
.LABEL $label$3
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [168])), (int_64)7235159551874301952, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $29($4, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [10125])
	$2 = *($8 + [8])
	$2 = ((int_64)$2 * (int_64)$1)
	$3 = CALL $107($0, *($0 + [376]), *($0 + [408]))
	$3 = ( (int_64)0 ? ( $3 ? $2 : (uint_64)($3 <= $2) ) : (int_64)($3 == 0) )
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $643 (int_32 $0)
{
	return CALL $644([14220], $0)
}

int_32 .FUNC $416 (int_32 $0, int_32 $1)
{
	int_32 $2
	( ($1 + [-32]) ? $1 : CALL $559($1, $2) )
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$3 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$3
	return $1
	
.LABEL $label$2
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	return .LABEL $label$1
}

int_32 .FUNC $241 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $242($0, $1, $2, $3, $4, $5)
}

void .FUNC $613 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	*($0) = $1
	*($0 + [8]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 (((CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)48)) & [32768]) | ((CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)) & [32767]))) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
}

int_32 .FUNC $563 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = CALL $558($0)
	if ( (($0 + [-43968]) <= [21312]) ){ goto $label$1 }
	if ( (($0 + [-43008]) <= [851]) ){ goto $label$1 }
	if ( (($0 + [-11776]) <= [30784]) ){ goto $label$1 }
	if ( (($0 + [-1536]) <= [2560]) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($0 + [-4256]) > (uint_32)[45]) ){ goto $label$2 }
	if ( ($0 <= [4294]) ){ goto $label$3 }
	if ( ((int_32)$0 == (int_32)[4301]) ){ goto $label$3 }
	if ( ((int_32)$0 != (int_32)[4295]) ){ goto $label$1 }
	
.LABEL $label$3
	return ($0 + [7264])
	
.LABEL $label$2
	$2 = ($1 == 0)
	if ( ((uint_32)($0 + [-11520]) > (uint_32)[37]) ){ goto $label$4 }
	if ( ($2 == 0) ){ goto $label$4 }
	return ($0 + [-7264])
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$5 }
	if ( ((uint_32)($0 + [-5024]) > (uint_32)[79]) ){ goto $label$5 }
	return ($0 + [38864])
	
.LABEL $label$5
	if ( (((($0 + [-43888]) <= [80]) & $2) == 0) ){ goto $label$6 }
	return ($0 + [-38864])
	
.LABEL $label$6
	$3 = ($1 + [-1])
	$4 = (($1 << [1]) + [-1])
	$2 = [-256]
	
.LOOP $label$11:
	$6 = *(($2 + [30466]))
	$5 = ($0 - *(($2 + [30464])))
	if ( (($5 - ($3 & $6)) <= *(($2 + [30467]))) ){ goto $label$10 }
	$2 = ($2 + [4])
	if ( $2 ){ goto $label$11 }
	$3 = (([1] - $1) << [1])
	$2 = *(($3 + [30480]))
	if ( ($2 == 0) ){ goto $label$12 }
	$6 = (($1 << [1]) + [30480])
	$3 = ($3 + [30484])
	
.LOOP $label$13:
	if ( ((int_32)($2 & [65535]) == (int_32)$0) ){ goto $label$8 }
	$6 = ($6 + [4])
	$2 = *($3)
	$3 = ($3 + [4])
	if ( $2 ){ goto $label$13 }
	
.LABEL $label$12
	$2 = (((int_32)$1 * (int_32)[40]) + $0)
	if ( ((uint_32)($2 + [-66600]) > (uint_32)[39]) ){ goto $label$9 }
	return (($0 + ((int_32)$1 * (int_32)[80])) + [-40])
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$14 }
	return (($1 + $0) - ($5 & [1]))
	
.LABEL $label$14
	return (((int_32)$4 * (int_32)$6) + $0)
	
.LABEL $label$9
	if ( ((uint_32)($2 + [-66776]) > (uint_32)[35]) ){ goto $label$7 }
	return (($0 + ((int_32)$1 * (int_32)[80])) + [-40])
	
.LABEL $label$8
	return *($6)
	
.LABEL $label$7
	$2 = (($1 << [6]) + $0)
	if ( ((uint_32)($2 + [-68800]) > (uint_32)[50]) ){ goto $label$15 }
	return (($0 + ($1 << [7])) + [-64])
	
.LABEL $label$15
	if ( ((uint_32)(($0 + ($1 << [5])) + [-71872]) > (uint_32)[31]) ){ goto $label$16 }
	return ($2 + [-32])
	
.LABEL $label$16
	if ( ((uint_32)(($0 + ((int_32)$1 * (int_32)[34])) + [-125218]) > (uint_32)[33]) ){ goto $label$1 }
	$0 = (($0 + ((int_32)$1 * (int_32)[68])) + [-34])
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $562 (int_32 $0)
{
	CALL $563($0, [0])
	if ( ((uint_32)$0 > (uint_32)[127]) ){ goto $label$1 }
	return CALL $561($0)
	return .LABEL $label$1
}

int_32 .FUNC $561 (int_32 $0)
{
	return ( ($0 & [95]) ? $0 : (($0 + [-97]) <= [26]) )
}

int_32 .FUNC $560 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = [1]
	if ( (($0 + [-48]) <= [10]) ){ goto $label$1 }
	$2 = ((($0 | [32]) + [-97]) <= [6])
	
.LABEL $label$1
	return $2
}

int_32 .FUNC $567 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $639([13836])
	$3 = *([0] + [13844])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [13848])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [13852]
	*([0] + [13844]) = [13852]
	$4 = *([0] + [13848])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $646([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [13844])
	*([0] + [13844]) = $3
	*([0] + [13848]) = [0]
	
.LABEL $label$2
	*([0] + [13848]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $640([13836])
	return [0]
	
.LABEL $label$1
	CALL $640([13836])
	return [-1]
}

void .FUNC $566 (int_32 $0)
{
}

int_32 .FUNC $565 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL $568([31136], *([0] + [20]))
	$1 = [0]
	
.LOOP $label$4:
	if ( ((int_32)*(($1 + [31040])) == (int_32)$0) ){ goto $label$3 }
	$2 = [87]
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[87]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [31136]
	
.LOOP $label$5:
	$0 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $0 ){ goto $label$5 }
	$1 = $3
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	return CALL $568($3, *([0] + [20]))
	return .LABEL $label$1
}

int_32 .FUNC $564 ()
{
	return [13828]
}

void .FUNC $569 (int_32 $0)
{
	if ( (CALL $574($0) == 0) ){ goto $label$1 }
	CALL $650($0)
	
.LABEL $label$1
}

int_32 .FUNC $568 (int_32 $0, int_32 $1)
{
	return CALL $572($0, $1)
}

int_32 .FUNC $398 (int_32 $0, int_32 $1, int_32 $2)
{
	return [-1]
}

void .FUNC $399 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	CALL $537($0, $5)
}

int_32 .FUNC $648 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	*($3 + [12]) = [0]
	$4 = (($2 + [4]) & [7])
	$5 = ( (($2 + [8]) - $4) ? $2 : $4 )
	if ( ($1 == 0) ){ goto $label$4 }
	$4 = *($0 + [8384])
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$4 }
	$2 = ($0 + [8192])
	$6 = ($2 + ((int_32)$4 * (int_32)[12]))
	
.LOOP $label$8:
	$4 = *(($2 + [4]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)($4 + [4]) > (uint_32)$1) ){ goto $label$9 }
	if ( ((uint_32)($4 + *($2)) > (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$9
	$2 = ($2 + [12])
	if ( ($2 <= $6) ){ goto $label$8 }
	goto $label$4 
	
.LABEL $label$7
	$7 = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = *($0 + [8384])
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	$2 = ($0 + [8192])
	$6 = ($2 + ((int_32)$4 * (int_32)[12]))
	
.LOOP $label$10:
	$4 = *(($2 + [4]))
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((uint_32)($4 + [4]) > (uint_32)$1) ){ goto $label$11 }
	if ( ((uint_32)($4 + *($2)) > (uint_32)$1) ){ goto $label$5 }
	
.LABEL $label$11
	$2 = ($2 + [12])
	if ( ($2 <= $6) ){ goto $label$10 }
	goto $label$3 
	
.LABEL $label$6
	$7 = CALL $649($2, $1, $5, ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*(($1 = ($1 + [-4]))) = (*($1) & [2147483647])
	$global$0 = ($3 + [16])
	return [0]
	
.LABEL $label$4
	$7 = [0]
	$8 = CALL $644($0, $5)
	if ( ($8 == 0) ){ goto $label$3 }
	$2 = *($3 + [12])
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($2 == 0) ){ goto $label$1 }
	CALL memcpy($8, $1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($0 + [8384])
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$1 }
	$2 = ($0 + [8192])
	$6 = ($2 + ((int_32)$4 * (int_32)[12]))
	
.LOOP $label$12:
	$4 = *(($2 + [4]))
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((uint_32)($4 + [4]) > (uint_32)$1) ){ goto $label$13 }
	if ( ((uint_32)($4 + *($2)) > (uint_32)$1) ){ goto $label$2 }
	
.LABEL $label$13
	$2 = ($2 + [12])
	if ( ($2 <= $6) ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$3
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$2
	*(($1 = ($1 + [-4]))) = (*($1) & [2147483647])
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $8
}

int_32 .FUNC $649 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = *($0)
	$5 = ($1 + [-4])
	$6 = *($5)
	$7 = ($6 & [2147483647])
	*($3) = $7
	$9 = *($0 + [4])
	$4 = ($4 + $9)
	$8 = ($1 + $7)
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$1 }
	*($3) = [0]
	return [0]
	
.LABEL $label$1
	$10 = [0]
	if ( (($4 - $2) <= $1) ){ goto $label$2 }
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$4 }
	*(($1 + $2)) = (($6 - $2) & [2147483647])
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)($9 + *($0 + [8]))) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	if ( (($4 - $1) <= $2) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($1 + $7)
	if ( ((uint_32)$0 >= (uint_32)$4) ){ goto $label$6 }
	$0 = *($0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$7 = (($7 + ($0 & [2147483647])) + [4])
	if ( ($7 <= $2) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ($7 <= $2) ){ goto $label$2 }
	$0 = ((*($5) & [-2147483648]) | $2)
	*($5) = $0
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$8 }
	*(($1 + $2)) = ((([2147483644] - $2) + $7) & [2147483647])
	$0 = *($5)
	
.LABEL $label$8
	*($5) = ($0 | [-2147483648])
	goto $label$3 
	
.LABEL $label$5
	*($5) = ((*($5) & [-2147483648]) | $2)
	*(($0 = ($0 + [8]))) = (($2 - *($3)) + *($0))
	
.LABEL $label$3
	$10 = $1
	
.LABEL $label$2
	return $10
}

int_32 .FUNC $552 ()
{
	CALL $585(*([0] + [33424]), [8262], [0])
	CALL abort()
	return (unreachable)
}

void .FUNC $531 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $390 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$6 = ($global$0 - [496])
	$global$0 = $6
	CALL $151(($6 + [488]), $3)
	$7 = *($6 + [488])
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11492]
	$8 = [0]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($6 + [456]) = ($6 + [16])
	*($6 + [440]) = ($6 + [456])
	CALL $516([11492], ($6 + [440]), [60])
	
.LABEL $label$1
	$9 = ($5 + [4])
	$10 = *(((*($7 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	$7 = ($7 & [1])
	$7 = *($5)
	if ( (( *($5 + [4]) ? uint_32($7 >> [1]) : $7 ) == 0) ){ goto $label$2 }
	$8 = ((int_32)*(( *($5 + [8]) ? $9 : $7 )) == (int_32)CALL int_32 $10((int_32 [45]), (int_32 *(*($10) + [44]))))
	
.LABEL $label$2
	*($6 + [464]) = [0]
	*($6 + [456]) = (int_64)0
	*($6 + [448]) = [0]
	*($6 + [440]) = (int_64)0
	*($6 + [432]) = [0]
	*($6 + [424]) = (int_64)0
	CALL $388($2, $8, ($6 + [488]), ($6 + [480]), ($6 + [476]), ($6 + [472]), ($6 + [456]), ($6 + [440]), ($6 + [424]), ($6 + [420]))
	$2 = *($6 + [420])
	$7 = ($2 & [1])
	$2 = *($5)
	$12 = uint_32($2 >> [1])
	$11 = *($9)
	$13 = ( $11 ? $12 : $7 )
	if ( ((int_32)$13 <= (int_32)$2) ){ goto $label$4 }
	$14 = *($6 + [440])
	$14 = ( *($6 + [444]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($6 + [424])
	$15 = ( *($6 + [428]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$13 = (($2 + (($13 - $2) << [1])) + [1])
	goto $label$3 
	
.LABEL $label$4
	$14 = *($6 + [440])
	$14 = ( *($6 + [444]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($6 + [424])
	$15 = ( *($6 + [428]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$13 = ($2 + [2])
	
.LABEL $label$3
	$14 = (($13 + $15) + $14)
	if ( ($14 <= [101]) ){ goto $label$10 }
	$14 = CALL $643(($14 << [2]))
	if ( ($14 == 0) ){ goto $label$8 }
	$2 = *($5)
	$12 = uint_32($2 >> [1])
	$7 = ($2 & [1])
	$11 = *(($5 + [4]))
	$2 = *($6 + [420])
	$15 = $14
	goto $label$9 
	
.LABEL $label$10
	$14 = [0]
	$15 = ($6 + [16])
	
.LABEL $label$9
	$5 = ( *($5 + [8]) ? $9 : $7 )
	CALL $389($15, ($6 + [12]), ($6 + [8]), *($3 + [4]), $5, ($5 + (( $11 ? $12 : $7 ) << [2])), $10, $8, ($6 + [480]), *($6 + [476]), *($6 + [472]), ($6 + [456]), ($6 + [440]), ($6 + [424]), $2)
	$3 = CALL $280($1, $15, *($6 + [12]), *($6 + [8]), $3, $4)
	if ( ($14 == 0) ){ goto $label$11 }
	CALL $650($14)
	
.LABEL $label$11
	if ( (*($6 + [424]) & [1]) ){ goto $label$13 }
	if ( (*($6 + [440]) & [1]) ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$13
	CALL _ZdlPv(*(($6 + [432])))
	if ( ((*($6 + [440]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($6 + [448])))
	if ( (*($6 + [456]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL $517()
	
.LABEL $label$7
	if ( ((*($6 + [456]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($6 + [464])))
	
.LABEL $label$5
	$2 = *($5 + [4])
	*(($5 = *($6 + [488])) + [4]) = ($2 + [-1])
	if ( ($2 == 0) ){ goto $label$14 }
	$global$0 = ($6 + [496])
	return $3
	
.LABEL $label$14
	CALL void $5((int_32 *(*($5) + [8])))
	$global$0 = ($6 + [496])
	(unreachable)
	return $3
}

int_32 .FUNC $391 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $392 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $393 (int_32 $0, int_32 $1, int_32 $2)
{
	return [-1]
}

void .FUNC $394 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	CALL $527($0, $5)
}

void .FUNC $395 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $396 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $397 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $442 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0) = [24872]
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $485 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL $635([9136])
	if ( ((uint_32)$2 >= (uint_32)[1073741808]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[2]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$3 = ($0 + [4])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($2 + [4]) & [-4])
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$3 = CALL _Znwj(($4 << [2]))
	*($0) = ($4 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL $636($3, [9136], $2)
	
.LABEL $label$3
	*(($3 + ($2 << [2]))) = [0]
	return (unreachable)
	
.LABEL $label$2
	CALL $526($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

int_32 .FUNC $486 (int_32 $0)
{
	if ( (*([0] + [11560]) == 0) ){ goto $label$1 }
	return *([0] + [11556])
	
.LABEL $label$1
	if ( *([0] + [11912]) ){ goto $label$2 }
	*([0] + [11744]) = (int_64)0
	*([0] + [11752]) = (int_64)0
	*([0] + [11760]) = (int_64)0
	*([0] + [11768]) = (int_64)0
	*([0] + [11776]) = (int_64)0
	*([0] + [11784]) = (int_64)0
	*([0] + [11792]) = (int_64)0
	*([0] + [11800]) = (int_64)0
	*([0] + [11808]) = (int_64)0
	*([0] + [11816]) = (int_64)0
	*([0] + [11824]) = (int_64)0
	*([0] + [11832]) = (int_64)0
	*([0] + [11840]) = (int_64)0
	*([0] + [11848]) = (int_64)0
	*([0] + [11856]) = (int_64)0
	*([0] + [11864]) = (int_64)0
	*([0] + [11872]) = [0]
	*([0] + [11876 align=4]) = (int_64)0
	*([0] + [11884 align=4]) = (int_64)0
	*([0] + [11892 align=4]) = (int_64)0
	*([0] + [11900 align=4]) = (int_64)0
	*([0] + [11908]) = [0]
	CALL $567([63], [0], [8192])
	*([0] + [11912]) = [1]
	
.LABEL $label$2
	CALL $532([11744], [10812])
	CALL $532([11756], [10849])
	CALL $532([11768], [10882])
	CALL $532([11780], [10935])
	CALL $532([11792], [10947])
	CALL $532([11804], [11007])
	CALL $532([11816], [11031])
	CALL $532([11828], [11082])
	CALL $532([11840], [11103])
	CALL $532([11852], [11120])
	CALL $532([11864], [11137])
	CALL $532([11876], [11154])
	CALL $532([11888], [11162])
	CALL $532([11900], [11171])
	*([0] + [11560]) = [1]
	*([0] + [11556]) = [11744]
	return [11744]
}

void .FUNC $487 (int_32 $0)
{
	if ( ((*([0] + [11900]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11908]))
	
.LABEL $label$1
	if ( ((*([0] + [11888]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [11896]))
	
.LABEL $label$2
	if ( ((*([0] + [11876]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [11884]))
	
.LABEL $label$3
	if ( ((*([0] + [11864]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [11872]))
	
.LABEL $label$4
	if ( ((*([0] + [11852]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [11860]))
	
.LABEL $label$5
	if ( ((*([0] + [11840]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [11848]))
	
.LABEL $label$6
	if ( ((*([0] + [11828]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [11836]))
	
.LABEL $label$7
	if ( ((*([0] + [11816]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [11824]))
	
.LABEL $label$8
	if ( ((*([0] + [11804]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [11812]))
	
.LABEL $label$9
	if ( ((*([0] + [11792]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [11800]))
	
.LABEL $label$10
	if ( ((*([0] + [11780]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [11788]))
	
.LABEL $label$11
	if ( ((*([0] + [11768]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [11776]))
	
.LABEL $label$12
	if ( (*([0] + [11756]) & [1]) ){ goto $label$15 }
	if ( (*([0] + [11744]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL _ZdlPv(*([0] + [11764]))
	if ( ((*([0] + [11744]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*([0] + [11752]))
	return 
	
.LABEL $label$13
}

void .FUNC $480 (int_32 $0, int_32 $1)
{
	CALL $527($0, ($1 + [12]))
}

void .FUNC $481 (int_32 $0, int_32 $1)
{
	CALL $527($0, ($1 + [16]))
}

int_32 .FUNC $454 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	*($2) = $0
	*($5) = $3
	$3 = *($2)
	if ( (($7 & [4]) == 0) ){ goto $label$1 }
	if ( ((int_32)($1 - $3) < (int_32)[3]) ){ goto $label$1 }
	if ( ((int_32)*($3) != (int_32)[239]) ){ goto $label$1 }
	if ( ((int_32)*($3 + [1]) != (int_32)[187]) ){ goto $label$1 }
	if ( ((int_32)*($3 + [2]) != (int_32)[191]) ){ goto $label$1 }
	$3 = ($3 + [3])
	*($2) = $3
	
.LABEL $label$1
	$8 = [0]
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$7 }
	$0 = *($5)
	
.LOOP $label$8:
	if ( ((uint_32)$0 >= (uint_32)$4) ){ goto $label$6 }
	$8 = [2]
	$7 = *($3)
	if ( ((uint_32)$7 > (uint_32)$6) ){ goto $label$7 }
	if ( ((int_32)int_32(($7 << [24]) >> [24]) < (int_32)[0]) ){ goto $label$10 }
	*($0) = $7
	$3 = ($3 + [1])
	goto $label$9 
	
.LABEL $label$10
	if ( ($7 <= [194]) ){ goto $label$7 }
	if ( ((uint_32)$7 > (uint_32)[223]) ){ goto $label$11 }
	if ( ((int_32)($1 - $3) < (int_32)[2]) ){ goto $label$5 }
	$9 = *($3 + [1])
	if ( ((int_32)($9 & [192]) != (int_32)[128]) ){ goto $label$7 }
	$7 = (($9 & [63]) | (($7 << [6]) & [1984]))
	if ( ((uint_32)$7 > (uint_32)$6) ){ goto $label$7 }
	*($0) = $7
	$3 = ($3 + [2])
	goto $label$9 
	
.LABEL $label$11
	if ( ((uint_32)$7 > (uint_32)[239]) ){ goto $label$18 }
	if ( ((int_32)($1 - $3) < (int_32)[3]) ){ goto $label$4 }
	$10 = *($3 + [2])
	$9 = *($3 + [1])
	if ( ((int_32)$7 == (int_32)[237]) ){ goto $label$17 }
	if ( ((int_32)$7 != (int_32)[224]) ){ goto $label$16 }
	if ( ((int_32)($9 & [224]) == (int_32)[160]) ){ goto $label$15 }
	goto $label$7 
	
.LABEL $label$18
	if ( ((uint_32)$7 > (uint_32)[244]) ){ goto $label$7 }
	if ( ((int_32)($1 - $3) < (int_32)[4]) ){ goto $label$3 }
	$10 = *($3 + [3])
	$9 = *($3 + [2])
	$3 = *($3 + [1])
	if ( ((int_32)$7 == (int_32)[244]) ){ goto $label$14 }
	if ( ((int_32)$7 != (int_32)[240]) ){ goto $label$13 }
	if ( ((($3 + [112]) & [255]) <= [48]) ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$17
	if ( ((int_32)($9 & [224]) == (int_32)[128]) ){ goto $label$15 }
	goto $label$7 
	
.LABEL $label$16
	if ( ((int_32)($9 & [192]) != (int_32)[128]) ){ goto $label$7 }
	
.LABEL $label$15
	if ( ((int_32)($10 & [192]) != (int_32)[128]) ){ goto $label$7 }
	$7 = (((($9 & [63]) << [6]) | ($7 << [12])) | ($10 & [63]))
	if ( ((uint_32)($7 & [65535]) > (uint_32)$6) ){ goto $label$7 }
	*($0) = $7
	$3 = ($3 + [3])
	goto $label$9 
	
.LABEL $label$14
	if ( ((int_32)($3 & [240]) == (int_32)[128]) ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$13
	if ( ((int_32)($3 & [192]) != (int_32)[128]) ){ goto $label$7 }
	
.LABEL $label$12
	if ( ((int_32)($9 & [192]) != (int_32)[128]) ){ goto $label$7 }
	if ( ((int_32)($10 & [192]) != (int_32)[128]) ){ goto $label$7 }
	if ( ((int_32)($4 - $0) < (int_32)[4]) ){ goto $label$2 }
	$10 = ($10 & [63])
	$11 = ($9 << [6])
	$7 = ($7 & [7])
	if ( ((uint_32)((((($3 << [12]) & [258048]) | ($7 << [18])) | ($11 & [4032])) | $10) > (uint_32)$6) ){ goto $label$7 }
	*($5) = ($0 + [2])
	*($0 + [2]) = ((($11 & [960]) | $10) | [56320])
	*($0) = ((((uint_32($9 >> [4]) & [3]) | (($3 << [2]) & [60])) | ((((uint_32($3 >> [4]) & [3]) | ($7 << [2])) << [6]) + [16320])) | [55296])
	$3 = (*($2) + [4])
	
.LABEL $label$9
	*($2) = $3
	$0 = (*($5) + [2])
	*($5) = $0
	$3 = *($2)
	if ( ($3 <= $1) ){ goto $label$8 }
	$8 = [0]
	
.LABEL $label$7
	return $8
	
.LABEL $label$6
	return [1]
	
.LABEL $label$5
	return [1]
	
.LABEL $label$4
	return [1]
	
.LABEL $label$3
	return [1]
	
.LABEL $label$2
	return [1]
}

void .FUNC $483 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL $635([9032])
	if ( ((uint_32)$2 >= (uint_32)[1073741808]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[2]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$3 = ($0 + [4])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($2 + [4]) & [-4])
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$3 = CALL _Znwj(($4 << [2]))
	*($0) = ($4 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL $636($3, [9032], $2)
	
.LABEL $label$3
	*(($3 + ($2 << [2]))) = [0]
	return (unreachable)
	
.LABEL $label$2
	CALL $526($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

int_32 .FUNC $559 (int_32 $0, int_32 $1)
{
	return ((int_32)CALL $562($0) != (int_32)$0)
}

int_32 .FUNC $488 (int_32 $0)
{
	if ( (*([0] + [11568]) == 0) ){ goto $label$1 }
	return *([0] + [11564])
	
.LABEL $label$1
	if ( *([0] + [12088]) ){ goto $label$2 }
	*([0] + [11920]) = (int_64)0
	*([0] + [11928]) = (int_64)0
	*([0] + [11936]) = (int_64)0
	*([0] + [11944]) = (int_64)0
	*([0] + [11952]) = (int_64)0
	*([0] + [11960]) = (int_64)0
	*([0] + [11968]) = (int_64)0
	*([0] + [11976]) = (int_64)0
	*([0] + [11984]) = (int_64)0
	*([0] + [11992]) = (int_64)0
	*([0] + [12000]) = (int_64)0
	*([0] + [12008]) = (int_64)0
	*([0] + [12016]) = (int_64)0
	*([0] + [12024]) = (int_64)0
	*([0] + [12032]) = (int_64)0
	*([0] + [12040]) = (int_64)0
	*([0] + [12048]) = [0]
	*([0] + [12052 align=4]) = (int_64)0
	*([0] + [12060 align=4]) = (int_64)0
	*([0] + [12068 align=4]) = (int_64)0
	*([0] + [12076 align=4]) = (int_64)0
	*([0] + [12084]) = [0]
	CALL $567([64], [0], [8192])
	*([0] + [12088]) = [1]
	
.LABEL $label$2
	CALL $540([11920], [25224])
	CALL $540([11932], [25252])
	CALL $540([11944], [25280])
	CALL $540([11956], [25312])
	CALL $540([11968], [25352])
	CALL $540([11980], [25388])
	CALL $540([11992], [25416])
	CALL $540([12004], [25452])
	CALL $540([12016], [25468])
	CALL $540([12028], [25484])
	CALL $540([12040], [25500])
	CALL $540([12052], [25516])
	CALL $540([12064], [25532])
	CALL $540([12076], [25548])
	*([0] + [11568]) = [1]
	*([0] + [11564]) = [11920]
	return [11920]
}

void .FUNC $489 (int_32 $0)
{
	if ( ((*([0] + [12076]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [12084]))
	
.LABEL $label$1
	if ( ((*([0] + [12064]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [12072]))
	
.LABEL $label$2
	if ( ((*([0] + [12052]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [12060]))
	
.LABEL $label$3
	if ( ((*([0] + [12040]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [12048]))
	
.LABEL $label$4
	if ( ((*([0] + [12028]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [12036]))
	
.LABEL $label$5
	if ( ((*([0] + [12016]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [12024]))
	
.LABEL $label$6
	if ( ((*([0] + [12004]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [12012]))
	
.LABEL $label$7
	if ( ((*([0] + [11992]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [12000]))
	
.LABEL $label$8
	if ( ((*([0] + [11980]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [11988]))
	
.LABEL $label$9
	if ( ((*([0] + [11968]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [11976]))
	
.LABEL $label$10
	if ( ((*([0] + [11956]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [11964]))
	
.LABEL $label$11
	if ( ((*([0] + [11944]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [11952]))
	
.LABEL $label$12
	if ( (*([0] + [11932]) & [1]) ){ goto $label$15 }
	if ( (*([0] + [11920]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL _ZdlPv(*([0] + [11940]))
	if ( ((*([0] + [11920]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL _ZdlPv(*([0] + [11928]))
	return 
	
.LABEL $label$13
}

void .FUNC $365 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $87 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)0
	*($0) = *(*(*($2 + [4])) + [64])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

void .FUNC $367 (int_32 $0)
{
}

int_32 .FUNC $366 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$7 = ($global$0 - [288])
	$global$0 = $7
	*($7 + [280]) = $1
	*($7 + [172]) = [61]
	*($7 + [168]) = ($7 + [176])
	CALL $151(($7 + [160]), $4)
	$1 = *($7 + [160])
	*($7 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [16]) = [11500]
	$8 = ($7 + [276])
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [144]) = ($7 + [16])
	*($7 + [128]) = ($7 + [144])
	CALL $516([11500], ($7 + [128]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	*($7 + [159]) = [0]
	if ( (CALL $368(($7 + [280]), $2, $3, ($7 + [160]), *($4 + [4]), $5, ($7 + [159]), $1, ($7 + [168]), ($7 + [164]), $8) == 0) ){ goto $label$8 }
	$9 = [0]
	*(($4 = ($7 + [154]))) = *([0] + [23634])
	*(($7 + [152])) = *([0] + [23632 align=1])
	*($7 + [144]) = *([0] + [23624 align=1])
	CALL int_32 $1((int_32 ($7 + [144])), (int_32 $4), (int_32 ($7 + [128])), (int_32 *(*($1) + [32])))
	$4 = ($7 + [16])
	$1 = (*($7 + [164]) - *($7 + [168]))
	if ( ((int_32)$1 < (int_32)[99]) ){ goto $label$9 }
	$9 = CALL $643(($1 + [2]))
	$4 = $9
	if ( ($9 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	if ( (*($7 + [159]) == 0) ){ goto $label$10 }
	*($4) = [45]
	$4 = ($4 + [1])
	
.LABEL $label$10
	$1 = *($7 + [168])
	if ( ((uint_32)$1 >= (uint_32)*($7 + [164])) ){ goto $label$11 }
	$10 = ($7 + [137])
	$11 = (($7 + [128]) + [8])
	$12 = (($7 + [128]) + [7])
	$13 = (($7 + [128]) + [6])
	$14 = (($7 + [128]) + [5])
	$15 = (($7 + [128]) + [4])
	$16 = (($7 + [128]) + [3])
	$17 = (($7 + [128]) + [2])
	$18 = (($7 + [128]) + [1])
	$19 = ($7 + [138])
	
.LOOP $label$12:
	$3 = ($7 + [128])
	$8 = *($1)
	if ( ((int_32)*($7 + [128]) == (int_32)$8) ){ goto $label$13 }
	$3 = $18
	if ( ((int_32)*((($7 + [128]) + [1])) == (int_32)$8) ){ goto $label$13 }
	$3 = $17
	if ( ((int_32)*((($7 + [128]) + [2])) == (int_32)$8) ){ goto $label$13 }
	$3 = $16
	if ( ((int_32)*((($7 + [128]) + [3])) == (int_32)$8) ){ goto $label$13 }
	$3 = $15
	if ( ((int_32)*((($7 + [128]) + [4])) == (int_32)$8) ){ goto $label$13 }
	$3 = $14
	if ( ((int_32)*((($7 + [128]) + [5])) == (int_32)$8) ){ goto $label$13 }
	$3 = $13
	if ( ((int_32)*((($7 + [128]) + [6])) == (int_32)$8) ){ goto $label$13 }
	$3 = $12
	if ( ((int_32)*((($7 + [128]) + [7])) == (int_32)$8) ){ goto $label$13 }
	$3 = $11
	if ( ((int_32)*((($7 + [128]) + [8])) == (int_32)$8) ){ goto $label$13 }
	$3 = ( $10 ? $19 : ((int_32)*($10) == (int_32)$8) )
	
.LABEL $label$13
	*($4) = *((($7 + [144]) + ($3 - ($7 + [128]))))
	$4 = ($4 + [1])
	$1 = ($1 + [1])
	if ( ($1 <= *($7 + [164])) ){ goto $label$12 }
	
.LABEL $label$11
	*($4) = [0]
	*($7) = $6
	if ( ((int_32)CALL $592(($7 + [16]), [8680], $7) != (int_32)[1]) ){ goto $label$7 }
	if ( ($9 == 0) ){ goto $label$8 }
	CALL $650($9)
	
.LABEL $label$8
	$4 = *($7 + [280])
	if ( ($4 == 0) ){ goto $label$15 }
	if ( ((int_32)*($4 + [12]) == (int_32)*($4 + [16])) ){ goto $label$14 }
	if ( ($2 == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$15
	$4 = [0]
	if ( $2 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$14
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) == (int_32)[-1]) ){ goto $label$16 }
	$4 = *($7 + [280])
	if ( $2 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$16
	$4 = [0]
	*($7 + [280]) = [0]
	if ( $2 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$7
	CALL abort()
	
.LABEL $label$6
	CALL $517()
	
.LABEL $label$5
	if ( $4 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$17 }
	if ( ($4 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$17
	if ( ((int_32)($4 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$2 }
	
.LABEL $label$3
	*($5) = (*($5) | [2])
	
.LABEL $label$2
	$1 = *($7 + [280])
	$3 = *($4 + [4])
	*(($4 = *($7 + [160])) + [4]) = ($3 + [-1])
	if ( $3 ){ goto $label$18 }
	CALL void $4((int_32 *(*($4) + [8])))
	
.LABEL $label$18
	$4 = *($7 + [168])
	*($7 + [168]) = [0]
	if ( ($4 == 0) ){ goto $label$19 }
	CALL void $4((int_32 *($7 + [172])))
	
.LABEL $label$19
	$global$0 = ($7 + [288])
	(unreachable)
	(unreachable)
	return $1
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	$6 = *($1 + [8])
	$7 = *($1)
	CALL $123($3, $1)
	$7 = ((int_64)$6 + (int_64)$7)
	CALL eosio_assert(((int_64)$7 == (int_64)((int_64)*($1 + [8]) + (int_64)*($1))), [8937])
	$3 = *($1 + [16])
	$8 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [16])
	$6 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [16])
	$9 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$4 = CALL $643($3)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert(((int_32)($3 + [-8]) > (int_32)[7]), [8794])
	CALL memcpy(($4 + [8]), $9, [8])
	*($5 + [4]) = ($4 + [16])
	CALL $111($5, $8)
	CALL db_update_i64(*($1 + [32]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $650($4)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2) = [0]
	CALL $119($2, $1)
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $64($0, $4)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($2 + [4]) = $0
	*($2) = $0
	*($2 + [8]) = $3
	CALL $120($2, $1)
	CALL $122(CALL $121(CALL $121($2, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $248 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $219($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

int_32 .FUNC $249 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $250($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $246 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $216($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

int_32 .FUNC $247 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $248($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $244 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $213($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

int_32 .FUNC $245 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $246($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $242 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $210($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

int_32 .FUNC $243 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $244($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $240 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	$10 = *($3)
	if ( ((int_32)$10 != (int_32)$2) ){ goto $label$1 }
	$11 = ((int_32)*($9 + [96]) == (int_32)$0)
	if ( $11 ){ goto $label$2 }
	if ( ((int_32)*($9 + [100]) != (int_32)$0) ){ goto $label$1 }
	
.LABEL $label$2
	*($3) = ($2 + [1])
	*($2) = ( [43] ? [45] : $11 )
	*($4) = [0]
	return [0]
	
.LABEL $label$1
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$4 }
	$6 = *($6)
	if ( (( *($6 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$4 }
	$0 = [0]
	$9 = *($8)
	if ( ((int_32)($9 - $7) > (int_32)[159]) ){ goto $label$3 }
	*($9) = *($4)
	*($8) = ($9 + [4])
	*($4) = [0]
	return [0]
	
.LABEL $label$4
	$6 = $9
	if ( ((int_32)*($9) == (int_32)$0) ){ goto $label$5 }
	if ( ((int_32)*($9 + [4]) != (int_32)$0) ){ goto $label$6 }
	$6 = ($9 + [4])
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)*($9 + [8]) != (int_32)$0) ){ goto $label$7 }
	$6 = ($9 + [8])
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_32)*($9 + [12]) != (int_32)$0) ){ goto $label$8 }
	$6 = ($9 + [12])
	goto $label$5 
	
.LABEL $label$8
	if ( ((int_32)*($9 + [16]) != (int_32)$0) ){ goto $label$9 }
	$6 = ($9 + [16])
	goto $label$5 
	
.LABEL $label$9
	if ( ((int_32)*($9 + [20]) != (int_32)$0) ){ goto $label$10 }
	$6 = ($9 + [20])
	goto $label$5 
	
.LABEL $label$10
	if ( ((int_32)*($9 + [24]) != (int_32)$0) ){ goto $label$11 }
	$6 = ($9 + [24])
	goto $label$5 
	
.LABEL $label$11
	if ( ((int_32)*($9 + [28]) != (int_32)$0) ){ goto $label$12 }
	$6 = ($9 + [28])
	goto $label$5 
	
.LABEL $label$12
	if ( ((int_32)*($9 + [32]) != (int_32)$0) ){ goto $label$13 }
	$6 = ($9 + [32])
	goto $label$5 
	
.LABEL $label$13
	if ( ((int_32)*($9 + [36]) != (int_32)$0) ){ goto $label$14 }
	$6 = ($9 + [36])
	goto $label$5 
	
.LABEL $label$14
	if ( ((int_32)*($9 + [40]) != (int_32)$0) ){ goto $label$15 }
	$6 = ($9 + [40])
	goto $label$5 
	
.LABEL $label$15
	if ( ((int_32)*($9 + [44]) != (int_32)$0) ){ goto $label$16 }
	$6 = ($9 + [44])
	goto $label$5 
	
.LABEL $label$16
	if ( ((int_32)*($9 + [48]) != (int_32)$0) ){ goto $label$17 }
	$6 = ($9 + [48])
	goto $label$5 
	
.LABEL $label$17
	if ( ((int_32)*($9 + [52]) != (int_32)$0) ){ goto $label$18 }
	$6 = ($9 + [52])
	goto $label$5 
	
.LABEL $label$18
	if ( ((int_32)*($9 + [56]) != (int_32)$0) ){ goto $label$19 }
	$6 = ($9 + [56])
	goto $label$5 
	
.LABEL $label$19
	if ( ((int_32)*($9 + [60]) != (int_32)$0) ){ goto $label$20 }
	$6 = ($9 + [60])
	goto $label$5 
	
.LABEL $label$20
	if ( ((int_32)*($9 + [64]) != (int_32)$0) ){ goto $label$21 }
	$6 = ($9 + [64])
	goto $label$5 
	
.LABEL $label$21
	if ( ((int_32)*($9 + [68]) != (int_32)$0) ){ goto $label$22 }
	$6 = ($9 + [68])
	goto $label$5 
	
.LABEL $label$22
	if ( ((int_32)*($9 + [72]) != (int_32)$0) ){ goto $label$23 }
	$6 = ($9 + [72])
	goto $label$5 
	
.LABEL $label$23
	if ( ((int_32)*($9 + [76]) != (int_32)$0) ){ goto $label$24 }
	$6 = ($9 + [76])
	goto $label$5 
	
.LABEL $label$24
	if ( ((int_32)*($9 + [80]) != (int_32)$0) ){ goto $label$25 }
	$6 = ($9 + [80])
	goto $label$5 
	
.LABEL $label$25
	if ( ((int_32)*($9 + [84]) != (int_32)$0) ){ goto $label$26 }
	$6 = ($9 + [84])
	goto $label$5 
	
.LABEL $label$26
	if ( ((int_32)*($9 + [88]) != (int_32)$0) ){ goto $label$27 }
	$6 = ($9 + [88])
	goto $label$5 
	
.LABEL $label$27
	if ( ((int_32)*($9 + [92]) != (int_32)$0) ){ goto $label$28 }
	$6 = ($9 + [92])
	goto $label$5 
	
.LABEL $label$28
	if ( ((int_32)*($9 + [96]) != (int_32)$0) ){ goto $label$29 }
	$6 = ($9 + [96])
	goto $label$5 
	
.LABEL $label$29
	$6 = ( ($9 + [100]) ? ($9 + [104]) : ((int_32)*($9 + [100]) == (int_32)$0) )
	
.LABEL $label$5
	$0 = [-1]
	$9 = ($6 - $9)
	if ( ((int_32)$9 > (int_32)[92]) ){ goto $label$3 }
	$6 = int_32($9 >> [2])
	if ( ((int_32)$1 == (int_32)[8]) ){ goto $label$33 }
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$32 }
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$31 }
	
.LABEL $label$33
	if ( ((int_32)$6 >= (int_32)$1) ){ goto $label$3 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$9 >= (int_32)[88]) ){ goto $label$30 }
	
.LABEL $label$31
	*($3) = ($10 + [1])
	*($10) = *(($6 + [22720]))
	*($4) = (*($4) + [1])
	return [0]
	
.LABEL $label$30
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$3 }
	if ( ((int_32)($10 - $2) > (int_32)[2]) ){ goto $label$3 }
	$0 = [-1]
	if ( ((int_32)*(($10 + [-1])) != (int_32)[48]) ){ goto $label$3 }
	*($4) = [0]
	*($3) = ($10 + [1])
	*($10) = *(($6 + [22720]))
	return [0]
	
.LABEL $label$3
	return $0
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $64($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [8794])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [8794])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $113(CALL $112($2, $4), $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $606 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	$5 = ($global$0 - [8128])
	$global$0 = $5
	$6 = (($5 + [704]) | [8])
	$7 = (($5 + [704]) | [9])
	$8 = ([-2] - ($5 + [704]))
	$9 = ($5 + [7664])
	$10 = (($5 + [692]) + [12])
	$11 = (($5 + [352]) + [54])
	$12 = (($5 + [352]) + [55])
	$13 = [0]
	$14 = [0]
	$15 = [0]
	
.LOOP $label$4:
	if ( ($0 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$1 = *($17)
	if ( ($1 == 0) ){ goto $label$1 }
	$15 = $17
	$1 = ($1 & [255])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)$1 == (int_32)[37]) ){ goto $label$23 }
	$1 = *($15 + [1])
	$15 = ($15 + [1])
	$1 = ($1 & [255])
	if ( $1 ){ goto $label$25 }
	
.LABEL $label$24
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	$18 = $15
	
.LOOP $label$27:
	if ( ((int_32)*(($18 + [1])) != (int_32)[37]) ){ goto $label$26 }
	$15 = ($15 + [1])
	$19 = *($18 + [2])
	$1 = ($18 + [2])
	$18 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$27 }
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$22 
	
.LABEL $label$26
	$1 = $18
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	
.LABEL $label$22
	if ( (*($0) & [32]) ){ goto $label$28 }
	CALL $600($17, $15, $0)
	
.LABEL $label$28
	if ( $15 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	
.LOOP $label$29:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$31 }
	$1 = $17
	$15 = ($15 & [255])
	if ( ($15 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	if ( ((int_32)$15 == (int_32)[37]) ){ goto $label$32 }
	$15 = *($1 + [1])
	$1 = ($1 + [1])
	$15 = ($15 & [255])
	if ( $15 ){ goto $label$34 }
	
.LABEL $label$33
	$18 = ([2147483647] - $14)
	$15 = ($1 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$32
	$18 = $1
	$15 = $1
	
.LOOP $label$36:
	if ( ((int_32)*(($15 + [1])) != (int_32)[37]) ){ goto $label$35 }
	$18 = ($18 + [1])
	$19 = *($15 + [2])
	$1 = ($15 + [2])
	$15 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$36 }
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$30 
	
.LABEL $label$35
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$31
	if ( $0 ){ goto $label$1 }
	if ( ($13 == 0) ){ goto $label$46 }
	$1 = [1]
	$15 = *($4 + [4])
	if ( ($15 == 0) ){ goto $label$37 }
	CALL $607(($3 + [16]), $15, $2)
	$15 = *($4 + [8])
	if ( ($15 == 0) ){ goto $label$45 }
	CALL $607(($3 + [32]), $15, $2)
	$15 = *($4 + [12])
	if ( ($15 == 0) ){ goto $label$44 }
	CALL $607(($3 + [48]), $15, $2)
	$15 = *($4 + [16])
	if ( ($15 == 0) ){ goto $label$43 }
	CALL $607(($3 + [64]), $15, $2)
	$15 = *($4 + [20])
	if ( ($15 == 0) ){ goto $label$42 }
	CALL $607(($3 + [80]), $15, $2)
	$15 = *($4 + [24])
	if ( ($15 == 0) ){ goto $label$41 }
	CALL $607(($3 + [96]), $15, $2)
	$15 = *($4 + [28])
	if ( ($15 == 0) ){ goto $label$40 }
	CALL $607(($3 + [112]), $15, $2)
	$15 = *($4 + [32])
	if ( ($15 == 0) ){ goto $label$39 }
	CALL $607(($3 + [128]), $15, $2)
	$15 = *($4 + [36])
	if ( ($15 == 0) ){ goto $label$38 }
	CALL $607(($3 + [144]), $15, $2)
	$global$0 = ($5 + [8128])
	return [1]
	
.LABEL $label$46
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$45
	$1 = [2]
	goto $label$37 
	
.LABEL $label$44
	$1 = [3]
	goto $label$37 
	
.LABEL $label$43
	$1 = [4]
	goto $label$37 
	
.LABEL $label$42
	$1 = [5]
	goto $label$37 
	
.LABEL $label$41
	$1 = [6]
	goto $label$37 
	
.LABEL $label$40
	$1 = [7]
	goto $label$37 
	
.LABEL $label$39
	$1 = [8]
	goto $label$37 
	
.LABEL $label$38
	$1 = [9]
	
.LABEL $label$37
	$15 = ($4 + ($1 << [2]))
	
.LOOP $label$47:
	if ( *($15) ){ goto $label$18 }
	$15 = ($15 + [4])
	$14 = [1]
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[9]) ){ goto $label$47 }
	goto $label$1 
	
.LABEL $label$30
	if ( $15 ){ goto $label$29 }
	
.LABEL $label$19
	$15 = ($1 + [1])
	$16 = *($1 + [1])
	$20 = ($16 + [-48])
	if ( ((uint_32)$20 > (uint_32)[9]) ){ goto $label$50 }
	$19 = ((int_32)*($1 + [2]) == (int_32)[36])
	$15 = ( ($1 + [3]) ? $15 : $19 )
	$21 = ( $20 ? [-1] : $19 )
	$13 = ( [1] ? $13 : $19 )
	$22 = [0]
	$16 = *(($1 + ( [3] ? [1] : $19 )))
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$50
	$21 = [-1]
	$22 = [0]
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	
.LABEL $label$49
	$1 = ([1] << $1)
	if ( (($1 & [75913]) == 0) ){ goto $label$48 }
	$19 = ($15 + [1])
	$22 = [0]
	
.LOOP $label$51:
	$22 = ($1 | $22)
	$15 = $19
	$16 = *($15)
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 >= (uint_32)[32]) ){ goto $label$48 }
	$19 = ($15 + [1])
	$1 = ([1] << $1)
	if ( ($1 & [75913]) ){ goto $label$51 }
	
.LABEL $label$48
	if ( ((int_32)$16 != (int_32)[42]) ){ goto $label$57 }
	$1 = (*($15 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$56 }
	if ( ((int_32)*($15 + [2]) != (int_32)[36]) ){ goto $label$56 }
	*(($4 + ($1 << [2]))) = [10]
	$23 = ($15 + [3])
	$13 = [1]
	$20 = *((($3 + (*(($15 + [1])) << [4])) + [-768]))
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	goto $label$55 
	
.LABEL $label$57
	$20 = [0]
	$19 = ($16 + [-48])
	if ( ((uint_32)$19 > (uint_32)[9]) ){ goto $label$54 }
	$1 = [0]
	
.LOOP $label$58:
	$20 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$59 }
	$1 = ((int_32)$1 * (int_32)[10])
	$20 = ( [-1] ? ($1 + $19) : ((int_32)$19 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$59
	$19 = *($15 + [1])
	$23 = ($15 + [1])
	$15 = $23
	$1 = $20
	$19 = ($19 + [-48])
	if ( ($19 <= [10]) ){ goto $label$58 }
	if ( ((int_32)$20 >= (int_32)[0]) ){ goto $label$52 }
	goto $label$3 
	
.LABEL $label$56
	if ( $13 ){ goto $label$18 }
	$23 = ($15 + [1])
	if ( ($0 == 0) ){ goto $label$53 }
	$15 = *($2)
	*($2) = ($15 + [4])
	$13 = [0]
	$20 = *($15)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$55
	$20 = ([0] - $20)
	$22 = ($22 | [8192])
	goto $label$52 
	
.LABEL $label$54
	$23 = $15
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$20 = [0]
	
.LABEL $label$52
	$15 = [0]
	$16 = [-1]
	if ( ((int_32)*($23) != (int_32)[46]) ){ goto $label$66 }
	$19 = *($23 + [1])
	if ( ((int_32)$19 != (int_32)[42]) ){ goto $label$65 }
	$1 = (*($23 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$64 }
	if ( ((int_32)*($23 + [3]) != (int_32)[36]) ){ goto $label$64 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($23 + [4])
	$16 = *((($3 + (*(($23 + [2])) << [4])) + [-768]))
	goto $label$61 
	
.LABEL $label$66
	$1 = $23
	$24 = [0]
	goto $label$60 
	
.LABEL $label$65
	$1 = ($23 + [1])
	$25 = ($19 + [-48])
	if ( ((uint_32)$25 > (uint_32)[9]) ){ goto $label$63 }
	$23 = [0]
	$19 = $1
	
.LOOP $label$67:
	$16 = [-1]
	if ( ((uint_32)$23 > (uint_32)[214748364]) ){ goto $label$68 }
	$1 = ((int_32)$23 * (int_32)[10])
	$16 = ( [-1] ? ($1 + $25) : ((int_32)$25 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$68
	$24 = [1]
	$25 = *($19 + [1])
	$1 = ($19 + [1])
	$19 = $1
	$23 = $16
	$25 = ($25 + [-48])
	if ( ($25 <= [10]) ){ goto $label$67 }
	goto $label$60 
	
.LABEL $label$64
	if ( $13 ){ goto $label$18 }
	$1 = ($23 + [2])
	if ( ($0 == 0) ){ goto $label$62 }
	$19 = *($2)
	*($2) = ($19 + [4])
	$16 = *($19)
	goto $label$61 
	
.LABEL $label$63
	$24 = [1]
	$16 = [0]
	goto $label$60 
	
.LABEL $label$62
	$16 = [0]
	
.LABEL $label$61
	$24 = ((int_32)uint_32($16 >> [31]) ^ (int_32)[1])
	
.LABEL $label$60
	
.LOOP $label$69:
	$19 = $15
	$15 = (*($1) + [-65])
	if ( ((uint_32)$15 > (uint_32)[57]) ){ goto $label$18 }
	$1 = ($1 + [1])
	$15 = *(((((int_32)$19 * (int_32)[58]) + $15) + [33440]))
	if ( (($15 + [-1]) <= [8]) ){ goto $label$69 }
	if ( ($15 == 0) ){ goto $label$18 }
	if ( ((int_32)$15 != (int_32)[27]) ){ goto $label$72 }
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$18 }
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$73 }
	*(($4 + ($21 << [2]))) = $15
	$15 = ($3 + ($21 << [4]))
	*($5 + [424]) = *(($15 + [8]))
	*($5 + [416]) = *($15)
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$73
	if ( ($0 == 0) ){ goto $label$70 }
	CALL $607(($5 + [416]), $15, $2)
	
.LABEL $label$71
	$23 = ($22 & [-65537])
	$21 = ( $23 ? $22 : ($22 & [8192]) )
	$26 = [0]
	$27 = [8212]
	$15 = *(($1 + [-1]))
	$28 = ( ( ($15 & [-33]) ? $15 : ((int_32)($15 & [15]) == (int_32)[3]) ) ? $15 : $19 )
	$15 = ($28 + [-65])
	if ( ((uint_32)$15 > (uint_32)[55]) ){ goto $label$9 }
	$22 = $12
	goto $label$101 
	
.LABEL $label$101
	if ( ((int_32)$16 > (int_32)[-1]) ){ goto $label$102 }
	if ( $24 ){ goto $label$3 }
	
.LABEL $label$102
	$29 = *($5 + [424])
	$30 = *($5 + [416])
	*($5 + [748]) = [0]
	if ( (CALL $601($30, $29) == 0) ){ goto $label$103 }
	$31 = [1]
	$32 = [8440]
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	if ( ((int_32)CALL $602($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$103
	if ( ($21 & [2048]) ){ goto $label$99 }
	$31 = ($21 & [1])
	$32 = ( [8446] ? [8441] : $31 )
	if ( ((int_32)CALL $602($30, $29) > (int_32)[1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$100
	$29 = *($5 + [416])
	if ( ((int_64)$29 <= (int_64)-1) ){ goto $label$86 }
	if ( ($21 & [2048]) ){ goto $label$84 }
	$26 = ($21 & [1])
	$27 = ( [8214] ? [8212] : $26 )
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$99
	$31 = [1]
	$32 = [8443]
	if ( ((int_32)CALL $602($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$98
	*((($5 + [344]) + [4])) = [0]
	*($5 + [344]) = *($5 + [416])
	*($5 + [416]) = ($5 + [344])
	$16 = [-1]
	$17 = ($5 + [344])
	goto $label$96 
	
.LABEL $label$97
	$17 = *($5 + [416])
	if ( ($16 == 0) ){ goto $label$80 }
	
.LABEL $label$96
	$15 = [0]
	$18 = $17
	
.LOOP $label$104:
	$19 = *($18)
	if ( ($19 == 0) ){ goto $label$82 }
	$19 = CALL $603(($5 + [340]), $19)
	$22 = ((int_32)$19 < (int_32)[0])
	if ( $22 ){ goto $label$83 }
	if ( ((uint_32)$19 > (uint_32)($16 - $15)) ){ goto $label$83 }
	$18 = ($18 + [4])
	$15 = ($19 + $15)
	if ( ((uint_32)$16 > (uint_32)$15) ){ goto $label$104 }
	goto $label$82 
	
.LABEL $label$95
	*((($5 + [352]) + [54])) = *($5 + [416])
	$16 = [1]
	$17 = $11
	$22 = $12
	$21 = $23
	goto $label$8 
	
.LABEL $label$94
	$17 = CALL $565(*(CALL $564()))
	goto $label$88 
	
.LABEL $label$93
	$15 = [0]
	$18 = ($19 & [255])
	if ( ((uint_32)$18 > (uint_32)[7]) ){ goto $label$4 }
	goto $label$105 
	
.LABEL $label$105
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$92
	$17 = $12
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$106 }
	$17 = $12
	
.LOOP $label$107:
	*(($17 = ($17 + [-1]))) = (((CASTING uint_32)(uint_64 $29) & [7]) | [48])
	$29 = (uint_64)$29 >> (uint_64)(int_64)3
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$107 }
	
.LABEL $label$106
	if ( ($21 & [8]) ){ goto $label$81 }
	$26 = [0]
	$27 = [8212]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$91
	$16 = ( $16 ? [8] : ((uint_32)$16 > (uint_32)[8]) )
	$21 = ($21 | [8])
	$28 = [120]
	
.LABEL $label$90
	$26 = [0]
	$27 = [8212]
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$108 }
	$15 = ($28 & [32])
	$17 = $12
	
.LOOP $label$109:
	*(($17 = ($17 + [-1]))) = (*((((CASTING uint_32)(uint_64 $29) & [15]) + [33904])) | $15)
	$29 = (uint_64)$29 >> (uint_64)(int_64)4
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$109 }
	if ( (($21 & [8]) == 0) ){ goto $label$12 }
	if ( (int_64)(*($5 + [416]) == 0) ){ goto $label$12 }
	$27 = (int_32($28 >> [4]) + [8212])
	$26 = [2]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$108
	$17 = $12
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$89
	$15 = *($5 + [416])
	$17 = ( $15 ? [8308] : $15 )
	
.LABEL $label$88
	$26 = [0]
	$15 = CALL $634($17, ( [2147483647] ? $16 : ((int_32)$16 < (int_32)[0]) ))
	$22 = ($17 + $15)
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$85 }
	$21 = $23
	$16 = $15
	goto $label$8 
	
.LABEL $label$87
	$26 = [0]
	$27 = [8212]
	$29 = *($5 + [416])
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$86
	$29 = (int_64)
	*($5 + [416]) = $29((int_64)0 - $29))
	$26 = [1]
	$27 = [8212]
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$85
	$21 = $23
	$16 = $15
	if ( (*($22) == 0) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$84
	$26 = [1]
	$27 = [8213]
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$83
	if ( $22 ){ goto $label$2 }
	
.LABEL $label$82
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$23 = ($21 & [73728])
	if ( $23 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$81
	$15 = ($12 - $17)
	$27 = ( [8212] ? [8217] : ((int_32)$16 > (int_32)$15) )
	$26 = ((int_32)$16 <= (int_32)$15)
	goto $label$12 
	
.LABEL $label$80
	$15 = [0]
	$23 = ($21 & [73728])
	if ( ($23 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$79
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$78
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$77
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$76
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$75
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$74
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$70
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$18
	*(CALL $564()) = [22]
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$16 }
	$18 = ($25 <= [256])
	$25 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $25 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$111 }
	$18 = ($19 == 0)
	$19 = $25
	
.LOOP $label$112:
	if ( (($18 & [1]) == 0) ){ goto $label$113 }
	CALL $600(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$113
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$112 }
	if ( $22 ){ goto $label$16 }
	$25 = ($25 & [255])
	goto $label$110 
	
.LABEL $label$111
	if ( $19 ){ goto $label$16 }
	
.LABEL $label$110
	CALL $600(($5 + [432]), $25, $0)
	
.LABEL $label$16
	if ( ($15 == 0) ){ goto $label$114 }
	$18 = [0]
	
.LOOP $label$115:
	$19 = *($17)
	if ( ($19 == 0) ){ goto $label$114 }
	$19 = CALL $603(($5 + [340]), $19)
	$18 = ($19 + $18)
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$114 }
	if ( (*($0) & [32]) ){ goto $label$116 }
	CALL $600(($5 + [340]), $19, $0)
	
.LABEL $label$116
	$17 = ($17 + [4])
	if ( ($18 <= $15) ){ goto $label$115 }
	
.LABEL $label$114
	if ( ((int_32)$23 != (int_32)[8192]) ){ goto $label$117 }
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$117 }
	$18 = ($22 <= [256])
	$22 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$119 }
	$18 = ($19 == 0)
	$19 = $22
	
.LOOP $label$120:
	if ( (($18 & [1]) == 0) ){ goto $label$121 }
	CALL $600(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$121
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$120 }
	if ( $16 ){ goto $label$117 }
	$22 = ($22 & [255])
	goto $label$118 
	
.LABEL $label$119
	if ( $19 ){ goto $label$117 }
	
.LABEL $label$118
	CALL $600(($5 + [432]), $22, $0)
	
.LABEL $label$117
	$15 = ( $20 ? $15 : ((int_32)$20 > (int_32)$15) )
	goto $label$4 
	
.LABEL $label$15
	$30 = $29
	$17 = $12
	goto $label$13 
	
.LABEL $label$14
	$17 = $12
	
.LOOP $label$122:
	$30 = ((uint_64)$29 / (uint_64)(int_64)10)
	*(($17 = ($17 + [-1]))) = ((CASTING uint_32)(uint_64 (int_64))($29 - ((int_64)$30 * (int_64)10))) | [48])
	$15 = ((uint_64)$29 > (uint_64)(int_64)42949672959)
	$29 = $30
	if ( $15 ){ goto $label$122 }
	
.LABEL $label$13
	$15 = (CASTING uint_32)(uint_64 $30)
	if ( ($15 == 0) ){ goto $label$12 }
	
.LOOP $label$123:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$123 }
	
.LABEL $label$12
	if ( ($24 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$10
	$21 = ( ($21 & [-65537]) ? $21 : ((int_32)$16 > (int_32)[-1]) )
	$29 = *($5 + [416])
	if ( $16 ){ goto $label$124 }
	if ( ((int_64)($29 == 0) == 0) ){ goto $label$124 }
	$17 = $12
	$22 = $12
	$16 = [0]
	goto $label$8 
	
.LABEL $label$124
	$15 = (($12 - $17) + (int_64)($29 == 0))
	$16 = ( $16 ? $15 : ((int_32)$16 > (int_32)$15) )
	
.LABEL $label$9
	$22 = $12
	
.LABEL $label$8
	$24 = ($22 - $17)
	$28 = ( $24 ? $16 : ((int_32)$16 < (int_32)$24) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$3 }
	$25 = ($26 + $28)
	$15 = ( $25 ? $20 : ((int_32)$20 < (int_32)$25) )
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$125 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$125 }
	$18 = ($36 <= [256])
	$36 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $36 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$127 }
	$18 = ($19 == 0)
	$19 = $36
	
.LOOP $label$128:
	if ( (($18 & [1]) == 0) ){ goto $label$129 }
	CALL $600(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$129
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$128 }
	if ( $23 ){ goto $label$125 }
	$36 = ($36 & [255])
	goto $label$126 
	
.LABEL $label$127
	if ( $19 ){ goto $label$125 }
	
.LABEL $label$126
	CALL $600(($5 + [432]), $36, $0)
	
.LABEL $label$125
	if ( (*($0) & [32]) ){ goto $label$130 }
	CALL $600($27, $26, $0)
	
.LABEL $label$130
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$131 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$131 }
	$18 = ($26 <= [256])
	$26 = ($15 - $25)
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$133 }
	$18 = ($19 == 0)
	$19 = $26
	
.LOOP $label$134:
	if ( (($18 & [1]) == 0) ){ goto $label$135 }
	CALL $600(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$135
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$134 }
	if ( $23 ){ goto $label$131 }
	$26 = ($26 & [255])
	goto $label$132 
	
.LABEL $label$133
	if ( $19 ){ goto $label$131 }
	
.LABEL $label$132
	CALL $600(($5 + [432]), $26, $0)
	
.LABEL $label$131
	if ( ((int_32)$24 >= (int_32)$16) ){ goto $label$136 }
	$18 = ($23 <= [256])
	$23 = ($28 - $24)
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$138 }
	$18 = ($19 == 0)
	$19 = $23
	
.LOOP $label$139:
	if ( (($18 & [1]) == 0) ){ goto $label$140 }
	CALL $600(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$140
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$139 }
	if ( $22 ){ goto $label$136 }
	$23 = ($23 & [255])
	goto $label$137 
	
.LABEL $label$138
	if ( $19 ){ goto $label$136 }
	
.LABEL $label$137
	CALL $600(($5 + [432]), $23, $0)
	
.LABEL $label$136
	if ( (*($0) & [32]) ){ goto $label$141 }
	CALL $600($17, $24, $0)
	
.LABEL $label$141
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$4 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$4 }
	$18 = ($16 <= [256])
	$16 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$143 }
	$18 = ($19 == 0)
	$19 = $16
	
.LOOP $label$144:
	if ( (($18 & [1]) == 0) ){ goto $label$145 }
	CALL $600(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$145
	$20 = ($17 & [32])
	$18 = ($20 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$144 }
	if ( $20 ){ goto $label$4 }
	$16 = ($16 & [255])
	goto $label$142 
	
.LABEL $label$143
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$142
	CALL $600(($5 + [432]), $16, $0)
	goto $label$4 
	
.LABEL $label$7
	$23 = CALL __unordtf2($30, $29, $30, $29)
	$16 = ($31 + [3])
	if ( ($21 & [8192]) ){ goto $label$146 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$146 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$148 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$149:
	if ( (($15 & [1]) == 0) ){ goto $label$150 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$150
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$149 }
	if ( $17 ){ goto $label$146 }
	$22 = ($22 & [255])
	goto $label$147 
	
.LABEL $label$148
	if ( $18 ){ goto $label$146 }
	
.LABEL $label$147
	CALL $600(($5 + [432]), $22, $0)
	
.LABEL $label$146
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$155 }
	CALL $600($32, $31, $0)
	if ( ((*($0) & [32]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	if ( ($15 & [32]) ){ goto $label$153 }
	
.LABEL $label$154
	$15 = uint_32(($28 & [32]) >> [5])
	CALL $600(( ( [8624] ? [8684] : $15 ) ? ( [8504] ? [8553] : $15 ) : $23 ), [3], $0)
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$153
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	
.LABEL $label$152
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$151 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$157 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$158:
	if ( (($15 & [1]) == 0) ){ goto $label$159 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$159
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$158 }
	if ( $17 ){ goto $label$151 }
	$22 = ($22 & [255])
	goto $label$156 
	
.LABEL $label$157
	if ( $18 ){ goto $label$151 }
	
.LABEL $label$156
	CALL $600(($5 + [432]), $22, $0)
	
.LABEL $label$151
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	goto $label$5 
	
.LABEL $label$6
	CALL $604(($5 + [320]), $30, $29, ($5 + [748]))
	$30 = *($5 + [328])
	$29 = *($5 + [320])
	CALL __addtf3(($5 + [304]), $29, $30, $29, $30)
	$30 = *((($5 + [304]) + [8]))
	$29 = *($5 + [304])
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$160 }
	*($5 + [748]) = (*($5 + [748]) + [-1])
	
.LABEL $label$160
	$33 = ($28 | [32])
	if ( ((int_32)$33 != (int_32)[97]) ){ goto $label$173 }
	$22 = ($28 & [32])
	$26 = ( ($32 + [9]) ? $32 : $22 )
	if ( ((uint_32)$16 > (uint_32)[26]) ){ goto $label$171 }
	if ( (([27] - $16) == 0) ){ goto $label$171 }
	$15 = ($16 + [-27])
	$34 = (int_64)4612248968380809216
	$35 = (int_64)0
	
.LOOP $label$174:
	CALL __multf3(($5 + [208]), $35, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($5 + [208]) + [8]))
	$35 = *($5 + [208])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$174 }
	if ( ((int_32)*($26) != (int_32)[45]) ){ goto $label$172 }
	CALL __subtf3(($5 + [160]), $29, ((int_64)$30 ^ (int_64)-9223372036854775808), $35, $34)
	CALL __addtf3(($5 + [144]), $35, $34, *($5 + [160]), *((($5 + [160]) + [8])))
	$30 = ((int_64)*((($5 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$29 = *($5 + [144])
	goto $label$171 
	
.LABEL $label$173
	$15 = ((int_32)$16 < (int_32)[0])
	if ( (CALL __netf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$176 }
	CALL __multf3(($5 + [288]), $29, $30, (int_64)0, (int_64)4619285842798575616)
	$22 = (*($5 + [748]) + [-28])
	*($5 + [748]) = $22
	$30 = *((($5 + [288]) + [8]))
	$29 = *($5 + [288])
	goto $label$175 
	
.LABEL $label$176
	$22 = *($5 + [748])
	
.LABEL $label$175
	$27 = ( [6] ? $16 : $15 )
	$36 = ( ($5 + [752]) ? $9 : ((int_32)$22 < (int_32)[0]) )
	$19 = $36
	
.LOOP $label$177:
	$15 = CALL __fixunstfsi($29, $30)
	CALL __floatunsitf(($5 + [272]), $15)
	CALL __subtf3(($5 + [256]), $29, $30, *($5 + [272]), *((($5 + [272]) + [8])))
	CALL __multf3(($5 + [240]), *($5 + [256]), *((($5 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($19) = $15
	$19 = ($19 + [4])
	$30 = *((($5 + [240]) + [8]))
	$29 = *($5 + [240])
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$177 }
	if ( ((int_32)$22 < (int_32)[1]) ){ goto $label$180 }
	$18 = $36
	
.LOOP $label$181:
	$17 = ( $22 ? [29] : ((int_32)$22 < (int_32)[29]) )
	$15 = ($19 + [-4])
	if ( ($15 <= $18) ){ goto $label$182 }
	$30 = (CASTING uint_64)(uint_32 $17)
	$29 = (int_64)0
	
.LOOP $label$183:
	$29 = ((uint_64)$29 / (uint_64)(int_64)1000000000)
	$29 = ((int_64)((int_64)*($15) << (int_64)$30) + (int_64)((int_64)$29 & (int_64)4294967295))
	*($15) = (int_64))($29 - ((int_64)$29 * (int_64)1000000000))
	$15 = ($15 + [-4])
	if ( ((uint_32)$15 >= (uint_32)$18) ){ goto $label$183 }
	$15 = (CASTING uint_32)(uint_64 $29)
	if ( ($15 == 0) ){ goto $label$182 }
	*(($18 = ($18 + [-4]))) = $15
	
.LABEL $label$182
	
.LOOP $label$185:
	$15 = $19
	if ( ((uint_32)$15 <= (uint_32)$18) ){ goto $label$184 }
	$19 = ($15 + [-4])
	if ( (*($19) == 0) ){ goto $label$185 }
	
.LABEL $label$184
	$19 = $15
	$22 = ($22 - $17)
	if ( ((int_32)$22 > (int_32)[0]) ){ goto $label$181 }
	*($5 + [748]) = $22
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	goto $label$179 
	
.LABEL $label$180
	$15 = $19
	$18 = $36
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	
.LABEL $label$179
	$26 = (((uint_32)($27 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$33 != (int_32)[102]) ){ goto $label$187 }
	$37 = ($36 + ($26 << [2]))
	
.LOOP $label$188:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$190 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$191:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$191 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$189 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$189 
	
.LABEL $label$190
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$189
	$15 = ( $37 ? $15 : ((int_32)int_32(($15 - $36) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$188 }
	goto $label$186 
	
.LABEL $label$187
	
.LOOP $label$192:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$194 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$195:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$195 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$193 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$193 
	
.LABEL $label$194
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$193
	$15 = ( ($18 + ($26 << [2])) ? $15 : ((int_32)int_32(($15 - $18) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$192 }
	
.LABEL $label$186
	*($5 + [748]) = $22
	
.LABEL $label$178
	$19 = [0]
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$196 }
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$196 }
	$17 = [10]
	
.LOOP $label$197:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$197 }
	
.LABEL $label$196
	$23 = ((int_32)$33 == (int_32)[103])
	$25 = (((int_32)$27 != (int_32)[0]) & $23)
	$16 = ( [0] ? $19 : ((int_32)$33 == (int_32)[102]) )
	$17 = (($27 - $16) - $25)
	if ( ((int_32)$17 >= (int_32)(((int_32)int_32(($15 - $36) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$198 }
	$24 = ($17 + [147456])
	$26 = ((int_32)$24 / (int_32)[9])
	$37 = ($36 + ($26 << [2]))
	$22 = ($37 + [-65532])
	$17 = [10]
	$26 = ((int_32)$26 * (int_32)[9])
	if ( ((int_32)($24 - $26) > (int_32)[7]) ){ goto $label$199 }
	$16 = (((($27 + ([0] - $25)) + [147455]) - $16) - $26)
	$17 = [10]
	
.LOOP $label$200:
	$17 = ((int_32)$17 * (int_32)[10])
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$200 }
	
.LABEL $label$199
	$24 = ((uint_32)$25 / (uint_32)$17)
	$25 = *($22)
	$16 = ($25 - ((int_32)$24 * (int_32)$17))
	$26 = ($22 + [4])
	if ( ((int_32)$26 != (int_32)$15) ){ goto $label$202 }
	if ( ($16 == 0) ){ goto $label$201 }
	
.LABEL $label$202
	if ( ($24 & [1]) ){ goto $label$204 }
	$29 = (int_64)4643211215818981376
	$30 = (int_64)0
	if ( ((uint_32)$22 <= (uint_32)$18) ){ goto $label$203 }
	if ( ((int_32)$17 != (int_32)[1000000000]) ){ goto $label$203 }
	if ( ((*(($22 + [-4])) & [1]) == 0) ){ goto $label$203 }
	
.LABEL $label$204
	$29 = (int_64)4643211215818981376
	$30 = (int_64)1
	
.LABEL $label$203
	$34 = (int_64)4611123068473966592
	$24 = uint_32($17 >> [1])
	if ( ($16 <= $24) ){ goto $label$205 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$16 == (int_32)$24) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$15) )
	
.LABEL $label$205
	if ( ($31 == 0) ){ goto $label$206 }
	if ( ((int_32)*($32) != (int_32)[45]) ){ goto $label$206 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	
.LABEL $label$206
	CALL __addtf3(($5 + [224]), $30, $29, (int_64)0, $34)
	$16 = ($25 - $16)
	*($22) = $16
	if ( (CALL __eqtf2(*($5 + [224]), *((($5 + [224]) + [8])), $30, $29) == 0) ){ goto $label$201 }
	$19 = ($16 + $17)
	*($22) = $19
	if ( ($19 <= [1000000000]) ){ goto $label$207 }
	$19 = ($37 + [-65536])
	
.LOOP $label$208:
	*(($19 + [4])) = [0]
	if ( ((uint_32)$19 >= (uint_32)$18) ){ goto $label$209 }
	*(($18 = ($18 + [-4]))) = [0]
	
.LABEL $label$209
	$17 = (*($19) + [1])
	*($19) = $17
	$19 = ($19 + [-4])
	if ( ((uint_32)$17 > (uint_32)[999999999]) ){ goto $label$208 }
	$22 = ($19 + [4])
	
.LABEL $label$207
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$201 }
	$17 = [10]
	
.LOOP $label$210:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$210 }
	
.LABEL $label$201
	$17 = ($22 + [4])
	$15 = ( $17 ? $15 : ((uint_32)$15 > (uint_32)$17) )
	
.LABEL $label$198
	$22 = ([0] - $19)
	
.LOOP $label$213:
	$16 = $15
	if ( ((uint_32)$16 <= (uint_32)$18) ){ goto $label$212 }
	$15 = ($16 + [-4])
	if ( (*($15) == 0) ){ goto $label$213 }
	$24 = [1]
	if ( $23 ){ goto $label$211 }
	goto $label$162 
	
.LABEL $label$212
	$24 = [0]
	if ( ($23 == 0) ){ goto $label$162 }
	
.LABEL $label$211
	$15 = ($27 + ($27 == 0))
	if ( ((int_32)$15 <= (int_32)$19) ){ goto $label$170 }
	if ( ((int_32)$19 < (int_32)[-4]) ){ goto $label$170 }
	$28 = ($28 + [-1])
	$27 = (($15 + [-1]) - $19)
	$23 = ($21 & [8])
	if ( ($23 == 0) ){ goto $label$169 }
	goto $label$161 
	
.LABEL $label$172
	CALL __addtf3(($5 + [192]), $29, $30, $35, $34)
	CALL __subtf3(($5 + [176]), *($5 + [192]), *((($5 + [192]) + [8])), $35, $34)
	$30 = *((($5 + [176]) + [8]))
	$29 = *($5 + [176])
	
.LABEL $label$171
	$19 = $10
	$15 = int_32($23 >> [31])
	$23 = *($5 + [748])
	$15 = ((int_32)($23 + $15) ^ (int_32)$15)
	if ( ($15 == 0) ){ goto $label$215 }
	$18 = [0]
	
.LOOP $label$216:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [692]) + $18) + [11])) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$216 }
	$19 = ((($5 + [692]) + $18) + [12])
	if ( $18 ){ goto $label$214 }
	
.LABEL $label$215
	*(($19 = ($19 + [-1]))) = [48]
	
.LABEL $label$214
	$25 = ($31 | [2])
	*(($24 = ($19 + [-2]))) = ($28 + [15])
	*(($19 + [-1])) = ( [45] ? [43] : ((int_32)$23 < (int_32)[0]) )
	if ( ($21 & [8]) ){ goto $label$217 }
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$168 }
	$15 = ($5 + [704])
	
.LOOP $label$218:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [80]), $18)
	CALL __subtf3(($5 + [64]), $29, $30, *($5 + [80]), *((($5 + [80]) + [8])))
	CALL __multf3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [33904])) | $22)
	$30 = *((($5 + [48]) + [8]))
	$29 = *($5 + [48])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$219 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$219
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$218 }
	goto $label$167 
	
.LABEL $label$217
	$15 = ($5 + [704])
	
.LOOP $label$220:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [128]), $18)
	CALL __subtf3(($5 + [112]), $29, $30, *($5 + [128]), *((($5 + [128]) + [8])))
	CALL __multf3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [33904])) | $22)
	$30 = *((($5 + [96]) + [8]))
	$29 = *($5 + [96])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$221 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$221
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$220 }
	goto $label$167 
	
.LABEL $label$170
	$27 = ($15 + [-1])
	$28 = ($28 + [-2])
	$23 = ($21 & [8])
	if ( $23 ){ goto $label$161 }
	
.LABEL $label$169
	$15 = [9]
	if ( ($24 == 0) ){ goto $label$222 }
	$23 = *(($16 + [-4]))
	if ( ($23 == 0) ){ goto $label$222 }
	$15 = [0]
	if ( ((uint_32)$23 % (uint_32)[10]) ){ goto $label$222 }
	$17 = [10]
	$15 = [0]
	
.LOOP $label$223:
	$15 = ($15 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( (((uint_32)$23 % (uint_32)$17) == 0) ){ goto $label$223 }
	
.LABEL $label$222
	$17 = (((int_32)int_32(($16 - $36) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($28 | [32]) != (int_32)[102]) ){ goto $label$166 }
	$23 = [0]
	$15 = ($17 - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$168
	$18 = ($5 + [704])
	
.LOOP $label$224:
	$19 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [32]), $19)
	CALL __subtf3(($5 + [16]), $29, $30, *($5 + [32]), *((($5 + [32]) + [8])))
	CALL __multf3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($15 = $18)) = (*(($19 + [33904])) | $22)
	$30 = *(($5 + [8]))
	$29 = *($5)
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$225 }
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$225 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$225
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$224 }
	
.LABEL $label$167
	$15 = [-1]
	$22 = ($10 - $24)
	if ( ((int_32)(([2147483645] - $25) - $22) < (int_32)$16) ){ goto $label$5 }
	$23 = ($18 - ($5 + [704]))
	$28 = ( ( ($16 + [2]) ? $23 : ((int_32)($8 + $18) < (int_32)$16) ) ? $23 : $16 )
	$16 = (($22 + $25) + $28)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$163 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$163 }
	$15 = ($27 <= [256])
	$27 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $27 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$165 }
	$15 = ($18 == 0)
	$18 = $27
	
.LOOP $label$226:
	if ( (($15 & [1]) == 0) ){ goto $label$227 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$227
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$226 }
	if ( $17 ){ goto $label$163 }
	$27 = ($27 & [255])
	goto $label$164 
	
.LABEL $label$166
	$23 = [0]
	$15 = (($17 + $19) - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$165
	if ( $18 ){ goto $label$163 }
	
.LABEL $label$164
	CALL $600(($5 + [432]), $27, $0)
	
.LABEL $label$163
	if ( (*($0) & [32]) ){ goto $label$228 }
	CALL $600($26, $25, $0)
	
.LABEL $label$228
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$229 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$229 }
	$15 = ($25 <= [256])
	$25 = ($20 - $16)
	CALL memset(($5 + [432]), [48], ( $25 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$231 }
	$15 = ($18 == 0)
	$18 = $25
	
.LOOP $label$232:
	if ( (($15 & [1]) == 0) ){ goto $label$233 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$233
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$232 }
	if ( $17 ){ goto $label$229 }
	$25 = ($25 & [255])
	goto $label$230 
	
.LABEL $label$231
	if ( $18 ){ goto $label$229 }
	
.LABEL $label$230
	CALL $600(($5 + [432]), $25, $0)
	
.LABEL $label$229
	if ( (*($0) & [32]) ){ goto $label$234 }
	CALL $600(($5 + [704]), $23, $0)
	
.LABEL $label$234
	$23 = ($28 - $23)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$235 }
	$15 = ($23 <= [256])
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$237 }
	$15 = ($18 == 0)
	$18 = $23
	
.LOOP $label$238:
	if ( (($15 & [1]) == 0) ){ goto $label$239 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$239
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$238 }
	if ( $17 ){ goto $label$235 }
	$23 = ($23 & [255])
	goto $label$236 
	
.LABEL $label$237
	if ( $18 ){ goto $label$235 }
	
.LABEL $label$236
	CALL $600(($5 + [432]), $23, $0)
	
.LABEL $label$235
	if ( (*($0) & [32]) ){ goto $label$240 }
	CALL $600($24, $22, $0)
	
.LABEL $label$240
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$241 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$241 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$243 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$244:
	if ( (($15 & [1]) == 0) ){ goto $label$245 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$245
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$244 }
	if ( $17 ){ goto $label$241 }
	$22 = ($22 & [255])
	goto $label$242 
	
.LABEL $label$243
	if ( $18 ){ goto $label$241 }
	
.LABEL $label$242
	CALL $600(($5 + [432]), $22, $0)
	
.LABEL $label$241
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$162
	$23 = ($21 & [8])
	
.LABEL $label$161
	$15 = [-1]
	$25 = ($27 | $23)
	if ( ((int_32)$27 > (int_32)( [2147483645] ? [2147483646] : $25 )) ){ goto $label$5 }
	$26 = (($27 + ((int_32)$25 != (int_32)[0])) + [1])
	$33 = ((int_32)($28 | [32]) != (int_32)[102])
	if ( $33 ){ goto $label$247 }
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	$19 = ( $19 ? [0] : ((int_32)$19 > (int_32)[0]) )
	goto $label$246 
	
.LABEL $label$247
	$17 = $10
	$38 = ((int_32)$19 < (int_32)[0])
	$15 = ( $22 ? $19 : $38 )
	if ( ($15 == 0) ){ goto $label$248 }
	
.LOOP $label$249:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$249 }
	
.LABEL $label$248
	if ( ((int_32)($10 - $17) > (int_32)[1]) ){ goto $label$250 }
	$15 = ($17 + [-1])
	
.LOOP $label$251:
	*($15) = [48]
	$19 = ($10 - $15)
	$17 = ($15 + [-1])
	$15 = $17
	if ( ((int_32)$19 < (int_32)[2]) ){ goto $label$251 }
	$17 = ($17 + [1])
	
.LABEL $label$250
	*(($37 = ($17 + [-2]))) = $28
	$15 = [-1]
	*(($17 + [-1])) = ( [45] ? [43] : $38 )
	$19 = ($10 - $37)
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	
.LABEL $label$246
	$15 = [-1]
	$19 = ($19 + $26)
	if ( ((int_32)$19 > (int_32)((int_32)$31 ^ (int_32)[2147483647])) ){ goto $label$5 }
	$26 = ($19 + $31)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$252 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$252 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$254 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$255:
	if ( (($15 & [1]) == 0) ){ goto $label$256 }
	CALL $600(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$256
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$255 }
	if ( $22 ){ goto $label$252 }
	$28 = ($28 & [255])
	goto $label$253 
	
.LABEL $label$254
	if ( $19 ){ goto $label$252 }
	
.LABEL $label$253
	CALL $600(($5 + [432]), $28, $0)
	
.LABEL $label$252
	if ( (*($0) & [32]) ){ goto $label$257 }
	CALL $600($32, $31, $0)
	
.LABEL $label$257
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$258 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$258 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [48], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$260 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$261:
	if ( (($15 & [1]) == 0) ){ goto $label$262 }
	CALL $600(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$262
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$261 }
	if ( $22 ){ goto $label$258 }
	$28 = ($28 & [255])
	goto $label$259 
	
.LABEL $label$260
	if ( $19 ){ goto $label$258 }
	
.LABEL $label$259
	CALL $600(($5 + [432]), $28, $0)
	
.LABEL $label$258
	if ( $33 ){ goto $label$273 }
	$23 = ( $36 ? $18 : ((uint_32)$18 > (uint_32)$36) )
	$22 = $23
	
.LOOP $label$274:
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$276 }
	$18 = [0]
	
.LOOP $label$277:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($6 + $18)) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$277 }
	goto $label$275 
	
.LABEL $label$276
	$18 = [0]
	
.LABEL $label$275
	$15 = ($7 + $18)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$281 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$280 }
	
.LOOP $label$282:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$282 }
	$15 = ($5 + [704])
	if ( ((*($0) & [32]) == 0) ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$281
	if ( $18 ){ goto $label$280 }
	*(($15 = ($15 + [-1]))) = [48]
	
.LABEL $label$280
	if ( (*($0) & [32]) ){ goto $label$278 }
	
.LABEL $label$279
	CALL $600($15, ($7 - $15), $0)
	
.LABEL $label$278
	$22 = ($22 + [4])
	if ( ((uint_32)$22 <= (uint_32)$36) ){ goto $label$274 }
	if ( ($25 == 0) ){ goto $label$283 }
	if ( (*($0) & [32]) ){ goto $label$283 }
	CALL $600([8705], [1], $0)
	
.LABEL $label$283
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$272 }
	if ( ((uint_32)$22 >= (uint_32)$16) ){ goto $label$271 }
	
.LOOP $label$284:
	$15 = $7
	$18 = *($22)
	if ( ($18 == 0) ){ goto $label$286 }
	$15 = $7
	
.LOOP $label$287:
	$19 = ((uint_32)$18 / (uint_32)[10])
	*(($15 = ($15 + [-1]))) = (($18 - ((int_32)$19 * (int_32)[10])) | [48])
	$17 = ((uint_32)$18 > (uint_32)[9])
	$18 = $19
	if ( $17 ){ goto $label$287 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$285 }
	
.LABEL $label$286
	
.LOOP $label$288:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$288 }
	
.LABEL $label$285
	if ( (*($0) & [32]) ){ goto $label$289 }
	CALL $600($15, ( $27 ? [9] : ((int_32)$27 < (int_32)[9]) ), $0)
	
.LABEL $label$289
	$15 = ($27 + [-9])
	if ( ((int_32)$27 < (int_32)[10]) ){ goto $label$270 }
	$27 = $15
	$22 = ($22 + [4])
	if ( ($22 <= $16) ){ goto $label$284 }
	goto $label$270 
	
.LABEL $label$273
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$266 }
	$25 = ( $16 ? ($18 + [4]) : $24 )
	if ( ($23 == 0) ){ goto $label$268 }
	$22 = $18
	
.LOOP $label$290:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$292 }
	$19 = [0]
	
.LOOP $label$293:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$293 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$291 }
	
.LABEL $label$292
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$291
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$295 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$294 }
	
.LOOP $label$296:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$296 }
	goto $label$294 
	
.LABEL $label$295
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$297 }
	CALL $600($17, [1], $0)
	$15 = *($0)
	
.LABEL $label$297
	$17 = ($17 + [1])
	if ( ($15 & [32]) ){ goto $label$294 }
	CALL $600([8705], [1], $0)
	
.LABEL $label$294
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$298 }
	CALL $600($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$298
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$290 }
	goto $label$267 
	
.LABEL $label$272
	$15 = $27
	if ( ((int_32)$15 >= (int_32)[1]) ){ goto $label$269 }
	goto $label$265 
	
.LABEL $label$271
	$15 = $27
	
.LABEL $label$270
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$265 }
	
.LABEL $label$269
	$18 = ($15 <= [256])
	CALL memset(($5 + [432]), [48], ( $15 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$300 }
	$18 = ($19 == 0)
	$19 = $15
	
.LOOP $label$301:
	if ( (($18 & [1]) == 0) ){ goto $label$302 }
	CALL $600(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$302
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$301 }
	if ( $16 ){ goto $label$265 }
	$15 = ($15 & [255])
	goto $label$299 
	
.LABEL $label$300
	if ( $19 ){ goto $label$265 }
	
.LABEL $label$299
	CALL $600(($5 + [432]), $15, $0)
	if ( ((int_32)$21 == (int_32)[8192]) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$268
	$22 = $18
	
.LOOP $label$303:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$305 }
	$19 = [0]
	
.LOOP $label$306:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$306 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$304 }
	
.LABEL $label$305
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$304
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$308 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$307 }
	
.LOOP $label$309:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$309 }
	goto $label$307 
	
.LABEL $label$308
	if ( (*($0) & [32]) ){ goto $label$310 }
	CALL $600($17, [1], $0)
	
.LABEL $label$310
	$17 = ($17 + [1])
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$307 }
	if ( (*($0) & [32]) ){ goto $label$307 }
	CALL $600([8705], [1], $0)
	
.LABEL $label$307
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$311 }
	CALL $600($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$311
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$303 }
	
.LABEL $label$267
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$266 }
	$18 = ($27 <= [256])
	CALL memset(($5 + [432]), [48], ( $27 ? [256] : $18 ))
	$19 = *($0)
	$15 = ($19 & [32])
	if ( $18 ){ goto $label$313 }
	$15 = ($15 == 0)
	$18 = $27
	
.LOOP $label$314:
	if ( (($15 & [1]) == 0) ){ goto $label$315 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$315
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$314 }
	if ( $17 ){ goto $label$266 }
	$27 = ($27 & [255])
	goto $label$312 
	
.LABEL $label$313
	if ( $15 ){ goto $label$266 }
	
.LABEL $label$312
	CALL $600(($5 + [432]), $27, $0)
	
.LABEL $label$266
	if ( (*($0) & [32]) ){ goto $label$265 }
	CALL $600($37, ($10 - $37), $0)
	
.LABEL $label$265
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$263 }
	
.LABEL $label$264
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$263 }
	$15 = ($16 <= [256])
	$16 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$317 }
	$15 = ($18 == 0)
	$18 = $16
	
.LOOP $label$318:
	if ( (($15 & [1]) == 0) ){ goto $label$319 }
	CALL $600(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$319
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$318 }
	if ( $17 ){ goto $label$263 }
	$16 = ($16 & [255])
	goto $label$316 
	
.LABEL $label$317
	if ( $18 ){ goto $label$263 }
	
.LABEL $label$316
	CALL $600(($5 + [432]), $16, $0)
	
.LABEL $label$263
	$15 = ( $20 ? $26 : ((int_32)$20 > (int_32)$26) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	*(CALL $564()) = [75]
	
.LABEL $label$2
	$14 = [-1]
	
.LABEL $label$1
	$global$0 = ($5 + [8128])
	$15
	$18
	return $14
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [64])
	$global$0 = $6
	*($6 + [40]) = $1
	if ( (*($3 + [4]) & [1]) ){ goto $label$4 }
	*($6) = [-1]
	$3 = CALL int_32 $0((int_32 $1), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $6), (int_32 *(*($0) + [16])))
	*($6 + [40]) = $3
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	if ( $1 ){ goto $label$2 }
	*($5) = [0]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$4
	CALL $151(($6 + [32]), $3)
	$0 = *($6 + [32])
	*($6 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$6 }
	*($6 + [56]) = $6
	*($6 + [48]) = ($6 + [56])
	CALL $516([11500], ($6 + [48]), [60])
	$1 = *($6 + [32])
	goto $label$5 
	
.LABEL $label$6
	$1 = $0
	
.LABEL $label$5
	$7 = *([0] + [11504])
	$8 = *($1 + [4])
	*($1 + [4]) = ($8 + [-1])
	$0 = *(((*($0 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$7 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$7
	CALL $151(($6 + [32]), $3)
	$3 = *($6 + [32])
	*($6 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$9 }
	*($6 + [56]) = $6
	*($6 + [48]) = ($6 + [56])
	CALL $516([11540], ($6 + [48]), [60])
	$1 = *($6 + [32])
	goto $label$8 
	
.LABEL $label$9
	$1 = $3
	
.LABEL $label$8
	$7 = *([0] + [11544])
	$8 = *($1 + [4])
	*($1 + [4]) = ($8 + [-1])
	$3 = *(((*($3 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$10 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$10
	CALL void $6((int_32 $3), (int_32 *(*($3) + [24])))
	CALL void ($6 | [12])((int_32 $3), (int_32 *(*($3) + [28])))
	*($5) = ((int_32)CALL $202(($6 + [40]), $2, $6, ($6 + [24]), $0, $4, [1]) == (int_32)$6)
	$3 = *($6 + [40])
	if ( (*($6 + [12]) & [1]) ){ goto $label$12 }
	if ( (*($6) & [1]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	CALL _ZdlPv(*(($6 + [20])))
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$11
	CALL _ZdlPv(*($6 + [8]))
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$3
	*($5) = [1]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$2
	*($4) = [4]
	*($5) = [1]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$1
	$global$0 = ($6 + [64])
	return $3
}

int_32 .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)0
	*($0) = *(*(*($2 + [4])) + [40])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $621 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	$3 = ($global$0 - [304])
	$global$0 = $3
	$4 = [0]
	$5 = [0]
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $597($0)
	
.LABEL $label$1
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$2 }
	$7 = ($0 + [4])
	$8 = ($0 + [104])
	$9 = ($0 + [8])
	$10 = ($0 + [120])
	$11 = ($3 + [65])
	$12 = ($3 + [78])
	$13 = (int_64)0
	$4 = [0]
	
.LOOP $label$6:
	$6 = ($6 & [255])
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$16 }
	if ( ((uint_32)($6 + [-9]) <= (uint_32)[4]) ){ goto $label$16 }
	if ( ((int_32)$6 != (int_32)[37]) ){ goto $label$17 }
	$6 = *($1 + [1])
	if ( ((int_32)$6 == (int_32)[42]) ){ goto $label$15 }
	if ( ((int_32)$6 != (int_32)[37]) ){ goto $label$14 }
	
.LABEL $label$17
	CALL $610($0, (int_64)0)
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$18 }
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*($8)) ){ goto $label$13 }
	*($7) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)$6 == (int_32)*($1)) ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$18
	
.LOOP $label$19:
	$6 = *($7)
	if ( ($6 <= *($8)) ){ goto $label$21 }
	$6 = CALL $611($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	*($7) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$19 }
	$1 = ($1 + [1])
	if ( ((int_32)$6 == (int_32)*($1)) ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$16
	$6 = ($1 + [1])
	
.LOOP $label$22:
	$1 = *($6)
	$14 = ($1 + [-9])
	$15 = ($6 + [1])
	$6 = $15
	if ( ((int_32)$1 == (int_32)[32]) ){ goto $label$22 }
	$6 = $15
	if ( ($14 <= [5]) ){ goto $label$22 }
	CALL $610($0, (int_64)0)
	$15 = ($15 + [-2])
	
.LOOP $label$23:
	$6 = *($7)
	if ( ($6 <= *($8)) ){ goto $label$25 }
	$6 = CALL $611($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	*($7) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$23 }
	
.LABEL $label$24
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$23 }
	if ( (*($8) == 0) ){ goto $label$27 }
	$6 = (*($7) + [-1])
	*($7) = $6
	goto $label$26 
	
.LABEL $label$27
	$6 = *($7)
	
.LABEL $label$26
	$13 = ((int_64)((int_64)*($10) + (int_64)$13) + (int_64)(CASTING int_64)(int_32 ($6 - *($9))))
	$1 = ($15 + [1])
	$6 = *($15 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$15
	$1 = ($1 + [2])
	$16 = [0]
	goto $label$10 
	
.LABEL $label$14
	$6 = ($6 + [-48])
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$11 }
	if ( ((int_32)*($1 + [2]) != (int_32)[36]) ){ goto $label$11 }
	$1 = ($1 + [3])
	$16 = CALL $622($2, $6)
	goto $label$10 
	
.LABEL $label$13
	$6 = CALL $611($0)
	if ( ((int_32)$6 != (int_32)*($1)) ){ goto $label$9 }
	
.LABEL $label$12
	$13 = ((int_64)((int_64)*($10) + (int_64)$13) + (int_64)(CASTING int_64)(int_32 (*($7) - *($9))))
	$6 = $1
	$1 = ($6 + [1])
	$6 = *($6 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$11
	$1 = ($1 + [1])
	$16 = *($2)
	$2 = ($2 + [4])
	
.LABEL $label$10
	$17 = [0]
	$6 = *($1)
	if ( ((uint_32)($6 + [-48]) > (uint_32)[9]) ){ goto $label$29 }
	$15 = [0]
	
.LOOP $label$30:
	$15 = (($6 + ((int_32)$15 * (int_32)[10])) + [-48])
	$6 = *($1 + [1])
	$14 = ($1 + [1])
	$1 = $14
	if ( (($6 + [-48]) <= [10]) ){ goto $label$30 }
	if ( ((int_32)$6 != (int_32)[109]) ){ goto $label$28 }
	goto $label$8 
	
.LABEL $label$29
	$14 = $1
	$15 = [0]
	if ( ((int_32)$6 == (int_32)[109]) ){ goto $label$8 }
	
.LABEL $label$28
	$18 = $14
	$6 = (($6 & [255]) + [-65])
	if ( ((uint_32)$6 <= (uint_32)[57]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$9
	if ( (*(($0 + [104])) == 0) ){ goto $label$31 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$31
	if ( $4 ){ goto $label$2 }
	$17 = [0]
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$8
	$18 = ($14 + [1])
	$19 = [0]
	$17 = ((int_32)$16 != (int_32)[0])
	$20 = [0]
	$6 = ((*($14 + [1]) & [255]) + [-65])
	if ( ((uint_32)$6 > (uint_32)[57]) ){ goto $label$5 }
	
.LABEL $label$7
	$14 = ($18 + [1])
	$1 = [3]
	goto $label$37 
	
.LABEL $label$37
	$1 = [0]
	$14 = $18
	goto $label$32 
	
.LABEL $label$36
	$1 = [1]
	goto $label$32 
	
.LABEL $label$35
	$1 = [2]
	goto $label$32 
	
.LABEL $label$34
	$6 = ((int_32)*($14) == (int_32)[104])
	$14 = ( ($18 + [2]) ? $14 : $6 )
	$1 = ( [-2] ? [-1] : $6 )
	goto $label$32 
	
.LABEL $label$33
	$6 = ((int_32)*($14) == (int_32)[108])
	$14 = ( ($18 + [2]) ? $14 : $6 )
	$1 = ( [3] ? [1] : $6 )
	
.LABEL $label$32
	$6 = *($14)
	$18 = ((int_32)($6 & [47]) == (int_32)[3])
	$21 = ( [1] ? $1 : $18 )
	$22 = ( ($6 | [32]) ? $6 : $18 )
	if ( ((int_32)$22 == (int_32)[91]) ){ goto $label$43 }
	if ( ((int_32)$22 == (int_32)[110]) ){ goto $label$45 }
	if ( ((int_32)$22 != (int_32)[99]) ){ goto $label$44 }
	$15 = ( $15 ? [1] : ((int_32)$15 > (int_32)[1]) )
	goto $label$43 
	
.LABEL $label$45
	if ( ($16 == 0) ){ goto $label$46 }
	$6 = ($21 + [2])
	if ( ((uint_32)$6 > (uint_32)[5]) ){ goto $label$46 }
	goto $label$42 
	
.LABEL $label$47
	*($16) = $13
	
.LABEL $label$46
	$1 = ($14 + [1])
	$6 = *($14 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$44
	CALL $610($0, (int_64)0)
	
.LOOP $label$48:
	$6 = *($7)
	if ( ($6 <= *($8)) ){ goto $label$50 }
	$6 = CALL $611($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	*($7) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$48 }
	
.LABEL $label$49
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$48 }
	if ( (*($8) == 0) ){ goto $label$52 }
	$6 = (*($7) + [-1])
	*($7) = $6
	goto $label$51 
	
.LABEL $label$52
	$6 = *($7)
	
.LABEL $label$51
	$13 = ((int_64)((int_64)*($10) + (int_64)$13) + (int_64)(CASTING int_64)(int_32 ($6 - *($9))))
	
.LABEL $label$43
	$23 = (CASTING int_64)(int_32 $15)
	CALL $610($0, $23)
	$1 = *($8)
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)$1) ){ goto $label$53 }
	*($7) = ($6 + [1])
	if ( ($1 == 0) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$53
	if ( ((int_32)CALL $611($0) < (int_32)[0]) ){ goto $label$5 }
	if ( *($8) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$42
	*($16) = $13
	$1 = ($14 + [1])
	$6 = *($14 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$41
	*($16) = $13
	$1 = ($14 + [1])
	$6 = *($14 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$40
	*($16) = $13
	$1 = ($14 + [1])
	$6 = *($14 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$39
	*($7) = (*($7) + [-1])
	
.LABEL $label$38
	$6 = ($22 + [-65])
	if ( ((uint_32)$6 > (uint_32)[55]) ){ goto $label$60 }
	$1 = [16]
	goto $label$88 
	
.LABEL $label$88
	CALL $617($3, $0, $21, [0])
	if ( ((int_64)*($10) == (int_64))((int_64)0 - (CASTING int_64)(int_32 (*($7) - *($9))))) ){ goto $label$3 }
	if ( ($16 == 0) ){ goto $label$57 }
	$23 = *($3 + [8])
	$24 = *($3)
	if ( ((int_32)$21 == (int_32)[2]) ){ goto $label$84 }
	if ( ((int_32)$21 == (int_32)[1]) ){ goto $label$83 }
	if ( $21 ){ goto $label$56 }
	*($16) = CALL __trunctfsf2($24, $23)
	goto $label$65 
	
.LABEL $label$87
	if ( ((int_32)($22 | [16]) != (int_32)[115]) ){ goto $label$85 }
	CALL memset(($3 + [32]), [-1], [257])
	*($3 + [32]) = [0]
	if ( ((int_32)$22 != (int_32)[115]) ){ goto $label$69 }
	*($11) = [0]
	*($3 + [46]) = [0]
	*($3 + [42 align=2]) = [0]
	goto $label$70 
	
.LABEL $label$86
	$1 = [10]
	goto $label$80 
	
.LABEL $label$85
	$18 = *($14 + [1])
	$1 = ((int_32)$18 == (int_32)[94])
	CALL memset(($3 + [32]), $1, [257])
	*($3 + [32]) = [0]
	$6 = ( ($14 + [2]) ? ($14 + [1]) : $1 )
	$1 = *(($14 + ( [2] ? [1] : $1 )))
	if ( ((int_32)$1 == (int_32)[45]) ){ goto $label$79 }
	if ( ((int_32)$1 != (int_32)[93]) ){ goto $label$78 }
	$14 = ((int_32)$18 != (int_32)[94])
	*((($3 + [32]) + [94])) = $14
	$6 = ($6 + [1])
	$1 = *($6)
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$71 }
	goto $label$72 
	
.LABEL $label$84
	*($16) = $24
	*($16 + [8]) = $23
	goto $label$67 
	
.LABEL $label$83
	*($16) = CALL __trunctfdf2($24, $23)
	goto $label$66 
	
.LABEL $label$82
	$1 = [0]
	goto $label$80 
	
.LABEL $label$81
	$1 = [8]
	
.LABEL $label$80
	$23 = CALL $619($0, $1, [0], (int_64)-1)
	if ( ((int_64)*($10) == (int_64))((int_64)0 - (CASTING int_64)(int_32 (*($7) - *($9))))) ){ goto $label$3 }
	if ( ($16 == 0) ){ goto $label$89 }
	if ( ((int_32)$22 == (int_32)[112]) ){ goto $label$55 }
	
.LABEL $label$89
	if ( ($16 == 0) ){ goto $label$59 }
	$6 = ($21 + [2])
	if ( ((uint_32)$6 > (uint_32)[5]) ){ goto $label$58 }
	goto $label$90 
	
.LABEL $label$90
	*($16) = $23
	goto $label$61 
	
.LABEL $label$79
	$14 = ((int_32)$18 != (int_32)[94])
	*($12) = $14
	$6 = ($6 + [1])
	$1 = *($6)
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$73 }
	goto $label$74 
	
.LABEL $label$78
	$14 = ((int_32)$18 != (int_32)[94])
	$1 = *($6)
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$75 }
	$25 = [3]
	goto $label$54 
	
.LABEL $label$77
	*($16) = $23
	goto $label$62 
	
.LABEL $label$76
	*($16) = $23
	goto $label$63 
	
.LABEL $label$75
	$25 = [2]
	goto $label$54 
	
.LABEL $label$74
	$25 = [3]
	goto $label$54 
	
.LABEL $label$73
	$25 = [2]
	goto $label$54 
	
.LABEL $label$72
	$25 = [3]
	goto $label$54 
	
.LABEL $label$71
	$25 = [2]
	goto $label$54 
	
.LABEL $label$70
	$25 = [10]
	goto $label$54 
	
.LABEL $label$69
	$25 = [10]
	goto $label$54 
	
.LABEL $label$68
	$25 = [29]
	goto $label$54 
	
.LABEL $label$67
	$25 = [29]
	goto $label$54 
	
.LABEL $label$66
	$25 = [29]
	goto $label$54 
	
.LABEL $label$65
	$25 = [29]
	goto $label$54 
	
.LABEL $label$64
	$25 = [29]
	goto $label$54 
	
.LABEL $label$63
	$25 = [29]
	goto $label$54 
	
.LABEL $label$62
	$25 = [29]
	goto $label$54 
	
.LABEL $label$61
	$25 = [29]
	goto $label$54 
	
.LABEL $label$60
	$25 = [29]
	goto $label$54 
	
.LABEL $label$59
	$25 = [29]
	goto $label$54 
	
.LABEL $label$58
	$25 = [29]
	goto $label$54 
	
.LABEL $label$57
	$25 = [29]
	goto $label$54 
	
.LABEL $label$56
	$25 = [29]
	goto $label$54 
	
.LABEL $label$55
	*($16) = $23
	$25 = [29]
	
.LABEL $label$54
	
.LOOP $label$91:
	goto $label$218 
	
.LABEL $label$225
	$1 = [45]
	$26 = *($6 + [1])
	if ( ($26 == 0) ){ goto $label$140 }
	$25 = [4]
	goto $label$91 
	
.LABEL $label$224
	if ( ((int_32)$26 == (int_32)[93]) ){ goto $label$139 }
	$25 = [5]
	goto $label$91 
	
.LABEL $label$223
	$18 = ($6 + [1])
	$6 = *(($6 + [-1]))
	if ( ((uint_32)$6 >= (uint_32)$26) ){ goto $label$138 }
	$25 = [8]
	goto $label$91 
	
.LABEL $label$222
	*(((($3 + [32]) + $6) + [1])) = $14
	$1 = *($18)
	$6 = ($6 + [1])
	if ( ($6 <= $1) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$221
	$1 = $26
	$25 = [7]
	goto $label$91 
	
.LABEL $label$220
	$6 = $18
	goto $label$141 
	
.LABEL $label$219
	if ( ($1 == 0) ){ goto $label$5 }
	$25 = [0]
	goto $label$91 
	
.LABEL $label$218
	if ( ((int_32)$1 == (int_32)[93]) ){ goto $label$142 }
	$25 = [1]
	goto $label$91 
	
.LABEL $label$217
	*(((($3 + [32]) + $1) + [1])) = $14
	$6 = ($6 + [1])
	$1 = *($6)
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$143 }
	goto $label$144 
	
.LABEL $label$216
	$14 = $6
	$25 = [10]
	goto $label$91 
	
.LABEL $label$215
	$18 = ((int_32)$22 == (int_32)[99])
	$15 = ( ($15 + [1]) ? [31] : $18 )
	$22 = ((int_32)$21 != (int_32)[1])
	if ( $22 ){ goto $label$135 }
	$25 = [50]
	goto $label$91 
	
.LABEL $label$214
	if ( ($17 == 0) ){ goto $label$106 }
	$25 = [63]
	goto $label$91 
	
.LABEL $label$213
	$1 = CALL $643(($15 << [2]))
	if ( ($1 == 0) ){ goto $label$147 }
	$25 = [64]
	goto $label$91 
	
.LABEL $label$212
	*($3 + [296]) = (int_64)0
	$6 = [0]
	$25 = [65]
	goto $label$91 
	
.LABEL $label$211
	$20 = $1
	$25 = [66]
	goto $label$91 
	
.LABEL $label$210
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$94 }
	$25 = [75]
	goto $label$91 
	
.LABEL $label$209
	*($7) = ($1 + [1])
	$1 = *($1)
	goto $label$93 
	
.LABEL $label$208
	$1 = CALL $611($0)
	$25 = [68]
	goto $label$91 
	
.LABEL $label$207
	if ( (*(((($3 + [32]) + $1) + [1])) == 0) ){ goto $label$98 }
	$25 = [69]
	goto $label$91 
	
.LABEL $label$206
	*($3 + [27]) = $1
	$1 = CALL $578(($3 + [28]), ($3 + [27]), [1], ($3 + [296]))
	if ( ((int_32)$1 == (int_32)[-2]) ){ goto $label$96 }
	$25 = [70]
	goto $label$91 
	
.LABEL $label$205
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$149 }
	$25 = [71]
	goto $label$91 
	
.LABEL $label$204
	if ( ($20 == 0) ){ goto $label$92 }
	$25 = [72]
	goto $label$91 
	
.LABEL $label$203
	*(($20 + ($6 << [2]))) = *($3 + [28])
	$6 = ($6 + [1])
	$25 = [73]
	goto $label$91 
	
.LABEL $label$202
	if ( ((int_32)$6 != (int_32)$15) ){ goto $label$95 }
	$25 = [74]
	goto $label$91 
	
.LABEL $label$201
	$19 = [0]
	$15 = (($15 << [1]) | [1])
	$1 = CALL $647($20, ($15 << [2]))
	if ( $1 ){ goto $label$97 }
	goto $label$5 
	
.LABEL $label$200
	if ( ($17 == 0) ){ goto $label$134 }
	$25 = [40]
	goto $label$91 
	
.LABEL $label$199
	$1 = CALL $643($15)
	if ( ($1 == 0) ){ goto $label$147 }
	$25 = [41]
	goto $label$91 
	
.LABEL $label$198
	$6 = [0]
	$25 = [42]
	goto $label$91 
	
.LABEL $label$197
	$19 = $1
	$25 = [43]
	goto $label$91 
	
.LABEL $label$196
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$109 }
	$25 = [49]
	goto $label$91 
	
.LABEL $label$195
	*($7) = ($1 + [1])
	$1 = *($1)
	goto $label$108 
	
.LABEL $label$194
	$1 = CALL $611($0)
	$25 = [45]
	goto $label$91 
	
.LABEL $label$193
	if ( (*(((($3 + [32]) + $1) + [1])) == 0) ){ goto $label$107 }
	$25 = [46]
	goto $label$91 
	
.LABEL $label$192
	*(($19 + $6)) = $1
	$6 = ($6 + [1])
	if ( ((int_32)$15 != (int_32)$6) ){ goto $label$110 }
	$25 = [47]
	goto $label$91 
	
.LABEL $label$191
	$20 = [0]
	$15 = (($15 << [1]) | [1])
	$1 = CALL $647($19, $15)
	if ( $1 ){ goto $label$111 }
	goto $label$5 
	
.LABEL $label$190
	$20 = [0]
	if ( *($8) ){ goto $label$129 }
	$25 = [34]
	goto $label$91 
	
.LABEL $label$189
	$1 = *($7)
	goto $label$124 
	
.LABEL $label$188
	*($3 + [296]) = (int_64)0
	$6 = [0]
	goto $label$104 
	
.LABEL $label$187
	if ( ($16 == 0) ){ goto $label$133 }
	$25 = [13]
	goto $label$91 
	
.LABEL $label$186
	$6 = [0]
	$1 = *($7)
	if ( ($1 <= *($8)) ){ goto $label$132 }
	$25 = [14]
	goto $label$91 
	
.LABEL $label$185
	$1 = CALL $611($0)
	goto $label$145 
	
.LABEL $label$184
	*(($16 + $6)) = $1
	$6 = ($6 + [1])
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$146 }
	$25 = [17]
	goto $label$91 
	
.LABEL $label$183
	*($7) = ($1 + [1])
	$1 = *($1)
	$25 = [15]
	goto $label$91 
	
.LABEL $label$182
	if ( *(((($3 + [32]) + $1) + [1])) ){ goto $label$131 }
	$25 = [18]
	goto $label$91 
	
.LABEL $label$181
	$20 = [0]
	$19 = $16
	if ( *($8) ){ goto $label$127 }
	goto $label$128 
	
.LABEL $label$180
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*($8)) ){ goto $label$113 }
	$25 = [39]
	goto $label$91 
	
.LABEL $label$179
	*($7) = ($6 + [1])
	$6 = *($6)
	goto $label$112 
	
.LABEL $label$178
	$6 = CALL $611($0)
	$25 = [37]
	goto $label$91 
	
.LABEL $label$177
	if ( *(((($3 + [32]) + $6) + [1])) ){ goto $label$114 }
	$25 = [38]
	goto $label$91 
	
.LABEL $label$176
	$19 = [0]
	$20 = [0]
	$6 = [0]
	if ( *($8) ){ goto $label$125 }
	goto $label$126 
	
.LABEL $label$175
	*(($16 + ($6 << [2]))) = *($3 + [28])
	$6 = ($6 + [1])
	$25 = [52]
	goto $label$91 
	
.LABEL $label$174
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$101 }
	$25 = [62]
	goto $label$91 
	
.LABEL $label$173
	*($7) = ($1 + [1])
	$1 = *($1)
	goto $label$100 
	
.LABEL $label$172
	$1 = CALL $611($0)
	$25 = [54]
	goto $label$91 
	
.LABEL $label$171
	if ( (*(((($3 + [32]) + $1) + [1])) == 0) ){ goto $label$99 }
	$25 = [55]
	goto $label$91 
	
.LABEL $label$170
	*($3 + [27]) = $1
	$1 = CALL $578(($3 + [28]), ($3 + [27]), [1], ($3 + [296]))
	if ( ((int_32)$1 == (int_32)[-2]) ){ goto $label$105 }
	$25 = [56]
	goto $label$91 
	
.LABEL $label$169
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$148 }
	$25 = [57]
	goto $label$91 
	
.LABEL $label$168
	if ( ($16 == 0) ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$167
	$20 = $16
	$25 = [60]
	goto $label$91 
	
.LABEL $label$166
	$19 = [0]
	if ( (CALL $620(($3 + [296])) == 0) ){ goto $label$5 }
	$25 = [61]
	goto $label$91 
	
.LABEL $label$165
	if ( (*($8) == 0) ){ goto $label$130 }
	$25 = [19]
	goto $label$91 
	
.LABEL $label$164
	$1 = (*($7) + [-1])
	*($7) = $1
	$25 = [20]
	goto $label$91 
	
.LABEL $label$163
	$24 = ((int_64)*($10) + (int_64)(CASTING int_64)(int_32 ($1 - *($9))))
	if ( (int_64)($24 == 0) ){ goto $label$3 }
	$25 = [21]
	goto $label$91 
	
.LABEL $label$162
	if ( ((int_64)$24 == (int_64)$23) ){ goto $label$123 }
	$25 = [22]
	goto $label$91 
	
.LABEL $label$161
	if ( $18 ){ goto $label$3 }
	$25 = [23]
	goto $label$91 
	
.LABEL $label$160
	if ( ($17 == 0) ){ goto $label$122 }
	$25 = [31]
	goto $label$91 
	
.LABEL $label$159
	if ( $22 ){ goto $label$115 }
	$25 = [33]
	goto $label$91 
	
.LABEL $label$158
	*($16) = $20
	if ( ($18 == 0) ){ goto $label$119 }
	goto $label$120 
	
.LABEL $label$157
	*($16) = $19
	$25 = [24]
	goto $label$91 
	
.LABEL $label$156
	if ( $18 ){ goto $label$121 }
	$25 = [25]
	goto $label$91 
	
.LABEL $label$155
	if ( ($20 == 0) ){ goto $label$118 }
	$25 = [26]
	goto $label$91 
	
.LABEL $label$154
	*(($20 + ($6 << [2]))) = [0]
	$25 = [27]
	goto $label$91 
	
.LABEL $label$153
	if ( ($19 == 0) ){ goto $label$117 }
	$25 = [28]
	goto $label$91 
	
.LABEL $label$152
	*(($19 + $6)) = [0]
	goto $label$116 
	
.LABEL $label$151
	$19 = [0]
	$25 = [29]
	goto $label$91 
	
.LABEL $label$150
	$13 = ((int_64)((int_64)*($10) + (int_64)$13) + (int_64)(CASTING int_64)(int_32 (*($7) - *($9))))
	$4 = ($4 + ((int_32)$16 != (int_32)[0]))
	$1 = ($14 + [1])
	$6 = *($14 + [1])
	if ( $6 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$149
	$19 = [0]
	if ( $4 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$148
	$17 = [0]
	$19 = [0]
	$20 = $16
	if ( $4 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$147
	$19 = [0]
	$20 = [0]
	goto $label$5 
	
.LABEL $label$146
	$25 = [14]
	goto $label$91 
	
.LABEL $label$145
	$25 = [15]
	goto $label$91 
	
.LABEL $label$144
	$25 = [3]
	goto $label$91 
	
.LABEL $label$143
	$25 = [2]
	goto $label$91 
	
.LABEL $label$142
	$25 = [9]
	goto $label$91 
	
.LABEL $label$141
	$25 = [1]
	goto $label$91 
	
.LABEL $label$140
	$25 = [1]
	goto $label$91 
	
.LABEL $label$139
	$25 = [1]
	goto $label$91 
	
.LABEL $label$138
	$25 = [6]
	goto $label$91 
	
.LABEL $label$137
	$25 = [8]
	goto $label$91 
	
.LABEL $label$136
	$25 = [7]
	goto $label$91 
	
.LABEL $label$135
	$25 = [11]
	goto $label$91 
	
.LABEL $label$134
	$25 = [12]
	goto $label$91 
	
.LABEL $label$133
	$25 = [35]
	goto $label$91 
	
.LABEL $label$132
	$25 = [17]
	goto $label$91 
	
.LABEL $label$131
	$25 = [16]
	goto $label$91 
	
.LABEL $label$130
	$25 = [34]
	goto $label$91 
	
.LABEL $label$129
	$25 = [19]
	goto $label$91 
	
.LABEL $label$128
	$25 = [34]
	goto $label$91 
	
.LABEL $label$127
	$25 = [19]
	goto $label$91 
	
.LABEL $label$126
	$25 = [34]
	goto $label$91 
	
.LABEL $label$125
	$25 = [19]
	goto $label$91 
	
.LABEL $label$124
	$25 = [20]
	goto $label$91 
	
.LABEL $label$123
	$25 = [23]
	goto $label$91 
	
.LABEL $label$122
	$25 = [24]
	goto $label$91 
	
.LABEL $label$121
	$25 = [29]
	goto $label$91 
	
.LABEL $label$120
	$25 = [29]
	goto $label$91 
	
.LABEL $label$119
	$25 = [25]
	goto $label$91 
	
.LABEL $label$118
	$25 = [27]
	goto $label$91 
	
.LABEL $label$117
	$25 = [30]
	goto $label$91 
	
.LABEL $label$116
	$25 = [29]
	goto $label$91 
	
.LABEL $label$115
	$25 = [32]
	goto $label$91 
	
.LABEL $label$114
	$25 = [35]
	goto $label$91 
	
.LABEL $label$113
	$25 = [36]
	goto $label$91 
	
.LABEL $label$112
	$25 = [37]
	goto $label$91 
	
.LABEL $label$111
	$25 = [42]
	goto $label$91 
	
.LABEL $label$110
	$25 = [43]
	goto $label$91 
	
.LABEL $label$109
	$25 = [44]
	goto $label$91 
	
.LABEL $label$108
	$25 = [45]
	goto $label$91 
	
.LABEL $label$107
	$25 = [48]
	goto $label$91 
	
.LABEL $label$106
	$25 = [51]
	goto $label$91 
	
.LABEL $label$105
	$25 = [52]
	goto $label$91 
	
.LABEL $label$104
	$25 = [52]
	goto $label$91 
	
.LABEL $label$103
	$25 = [52]
	goto $label$91 
	
.LABEL $label$102
	$25 = [58]
	goto $label$91 
	
.LABEL $label$101
	$25 = [53]
	goto $label$91 
	
.LABEL $label$100
	$25 = [54]
	goto $label$91 
	
.LABEL $label$99
	$25 = [59]
	goto $label$91 
	
.LABEL $label$98
	$25 = [60]
	goto $label$91 
	
.LABEL $label$97
	$25 = [65]
	goto $label$91 
	
.LABEL $label$96
	$25 = [66]
	goto $label$91 
	
.LABEL $label$95
	$25 = [66]
	goto $label$91 
	
.LABEL $label$94
	$25 = [67]
	goto $label$91 
	
.LABEL $label$93
	$25 = [68]
	goto $label$91 
	
.LABEL $label$92
	$25 = [73]
	goto $label$91 
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	
.LABEL $label$4
	$4 = [-1]
	
.LABEL $label$3
	if ( ($17 == 0) ){ goto $label$2 }
	CALL $650($19)
	CALL $650($20)
	
.LABEL $label$2
	if ( ($5 == 0) ){ goto $label$226 }
	CALL $598($0)
	
.LABEL $label$226
	$global$0 = ($3 + [304])
	$6
	$6
	$6
	$6
	$25
	return $4
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [656])
	$global$0 = $2
	*(($3 = (($2 + [320]) + [8]))) = *(($1 + [32]))
	*(($4 = (($2 + [304]) + [8]))) = *(($1 + [48]))
	*($2 + [320]) = *($1 + [24])
	*($2 + [304]) = *($1 + [40])
	$5 = *($1 + [16])
	$6 = *($1 + [8])
	$7 = *($1)
	$8 = CALL $527(($2 + [288]), ($1 + [56]))
	*(($9 = (($2 + [256]) + [24]))) = *(($1 + [104]))
	*(($10 = (($2 + [256]) + [16]))) = *(($1 + [96]))
	*($2 + [264]) = *(($1 + [88]))
	*($2 + [256]) = *($1 + [80])
	CALL memcpy(($2 + [190]), ($1 + [112]), [66])
	*(($11 = (($2 + [168]) + [8]))) = *(($1 + [208]))
	*($2 + [168]) = *($1 + [200])
	$12 = *($1 + [192])
	$13 = *($1 + [184])
	*((($2 + [472]) + [8])) = *($11)
	*($2 + [472]) = *($2 + [168])
	CALL memcpy(($2 + [400]), ($2 + [190]), [66])
	*((($2 + [368]) + [24])) = *($9)
	*((($2 + [368]) + [16])) = *($10)
	*((($2 + [352]) + [8])) = *($4)
	*((($2 + [336]) + [8])) = *($3)
	*($2 + [376]) = *($2 + [264])
	*($2 + [368]) = *($2 + [256])
	*($2 + [352]) = *($2 + [304])
	*($2 + [336]) = *($2 + [320])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($2 + [640]) + [8]))) = *((($2 + [336]) + [8]))
	*(($9 = (($2 + [624]) + [8]))) = *((($2 + [352]) + [8]))
	*($2 + [640]) = *($2 + [336])
	*($2 + [624]) = *($2 + [352])
	$3 = CALL $527(($2 + [608]), $8)
	*(($10 = (($2 + [576]) + [24]))) = *((($2 + [368]) + [24]))
	*(($11 = (($2 + [576]) + [16]))) = *((($2 + [368]) + [16]))
	*($2 + [584]) = *($2 + [376])
	*($2 + [576]) = *($2 + [368])
	CALL memcpy(($2 + [504]), ($2 + [400]), [66])
	*(($14 = (($2 + [488]) + [8]))) = *((($2 + [472]) + [8]))
	*((($2 + [152]) + [8])) = *($4)
	*((($2 + [136]) + [8])) = *($9)
	*((($2 + [96]) + [16])) = *($11)
	*((($2 + [96]) + [24])) = *($10)
	*($2 + [488]) = *($2 + [472])
	*($2 + [152]) = *($2 + [640])
	*($2 + [136]) = *($2 + [624])
	*($2 + [96]) = *($2 + [576])
	*($2 + [104]) = *($2 + [584])
	CALL memcpy(($2 + [30]), ($2 + [504]), [66])
	*((($2 + [8]) + [8])) = *($14)
	*($2 + [8]) = *($2 + [488])
	CALL void $0((int_32 $7), (int_64 $6), (int_64 $5), (int_64 ($2 + [152])), (int_32 ($2 + [136])), (int_32 $3), (int_32 ($2 + [96])), (int_32 ($2 + [30])), (int_32 $13), (int_64 $12), (int_64 ($2 + [8])), (int_32 $1))
	if ( (*($2 + [608]) & [1]) ){ goto $label$4 }
	if ( (*($8) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($8 + [8]))
	$global$0 = ($2 + [656])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [656])
}

void .FUNC $533 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $534($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

int_32 .FUNC $492 (int_32 $0)
{
	if ( (*([0] + [11584]) == 0) ){ goto $label$1 }
	return *([0] + [11580])
	
.LABEL $label$1
	if ( *([0] + [12688]) ){ goto $label$2 }
	*([0] + [12400]) = (int_64)0
	*([0] + [12408]) = (int_64)0
	*([0] + [12416]) = (int_64)0
	*([0] + [12424]) = (int_64)0
	*([0] + [12432]) = (int_64)0
	*([0] + [12440]) = (int_64)0
	*([0] + [12448]) = (int_64)0
	*([0] + [12456]) = (int_64)0
	*([0] + [12464]) = (int_64)0
	*([0] + [12472]) = (int_64)0
	*([0] + [12480]) = (int_64)0
	*([0] + [12488]) = (int_64)0
	*([0] + [12496]) = (int_64)0
	*([0] + [12504]) = (int_64)0
	*([0] + [12512]) = (int_64)0
	*([0] + [12520]) = (int_64)0
	*([0] + [12528]) = [0]
	*([0] + [12532 align=4]) = (int_64)0
	*([0] + [12540 align=4]) = (int_64)0
	*([0] + [12548 align=4]) = (int_64)0
	*([0] + [12556 align=4]) = (int_64)0
	*([0] + [12564 align=4]) = (int_64)0
	*([0] + [12572 align=4]) = (int_64)0
	*([0] + [12580 align=4]) = (int_64)0
	*([0] + [12588 align=4]) = (int_64)0
	*([0] + [12596 align=4]) = (int_64)0
	*([0] + [12604 align=4]) = (int_64)0
	*([0] + [12612 align=4]) = (int_64)0
	*([0] + [12620 align=4]) = (int_64)0
	*([0] + [12628 align=4]) = (int_64)0
	*([0] + [12636 align=4]) = (int_64)0
	*([0] + [12644 align=4]) = (int_64)0
	*([0] + [12652 align=4]) = (int_64)0
	*([0] + [12660]) = [0]
	*([0] + [12664]) = (int_64)0
	*([0] + [12672]) = (int_64)0
	*([0] + [12680]) = (int_64)0
	CALL $567([66], [0], [8192])
	*([0] + [12688]) = [1]
	
.LABEL $label$2
	CALL $540([12400], [25696])
	CALL $540([12412], [25728])
	CALL $540([12424], [25764])
	CALL $540([12436], [25788])
	CALL $540([12448], [25812])
	CALL $540([12460], [25828])
	CALL $540([12472], [25848])
	CALL $540([12484], [25868])
	CALL $540([12496], [25896])
	CALL $540([12508], [25936])
	CALL $540([12520], [25968])
	CALL $540([12532], [26004])
	CALL $540([12544], [26040])
	CALL $540([12556], [26056])
	CALL $540([12568], [26072])
	CALL $540([12580], [26088])
	CALL $540([12592], [25812])
	CALL $540([12604], [26104])
	CALL $540([12616], [26120])
	CALL $540([12628], [26136])
	CALL $540([12640], [26152])
	CALL $540([12652], [26168])
	CALL $540([12664], [26184])
	CALL $540([12676], [26200])
	*([0] + [11584]) = [1]
	*([0] + [11580]) = [12400]
	return [12400]
}

int_32 .FUNC $149 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = [11248]
	$1 = *($0 + [40])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = (($1 << [2]) + [-4])
	$3 = ($0 + [36])
	$4 = ($0 + [32])
	
.LOOP $label$2:
	CALL void [0]((int_32 $0), (int_32 *((*($3) + $2))), (int_32 *((*($4) + $2))))
	$2 = ($2 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [28]))
	CALL $650(*(($0 + [32])))
	CALL $650(*(($0 + [36])))
	CALL $650(*($0 + [48]))
	CALL $650(*($0 + [60]))
	return $0
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [24]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [32])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($2) = $0
	CALL $147($2, $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $419 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($1)
	if ( ((uint_32)$4 > (uint_32)[127]) ){ goto $label$3 }
	if ( *([0] + [11460]) ){ goto $label$5 }
	$3 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $3
	goto $label$4 
	
.LABEL $label$5
	$3 = *([0] + [11456])
	
.LABEL $label$4
	$4 = CALL $557($4, $3)
	$3 = *($1)
	$4 = ( ($3 + [32]) ? $3 : $4 )
	
.LABEL $label$3
	*($1) = $4
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $418 (int_32 $0, int_32 $1)
{
	int_32 $2
	( ($1 + [32]) ? $1 : CALL $557($1, $2) )
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$3 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$3
	return $1
	
.LABEL $label$2
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	return .LABEL $label$1
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $527(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL _ZdlPv($3)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $553($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [40]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [8736])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($3 + [48])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	CALL $55(*($1), ($4 + [56]))
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[31]), [8736])
	CALL memcpy(($4 + [80]), *($0 + [4]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	*($2) = *($1)
	*($2 + [12]) = ($4 + [113])
	*($2 + [8]) = ($4 + [112])
	*($2 + [16]) = ($4 + [114])
	*($2 + [20]) = ($4 + [115])
	*($2 + [24]) = ($4 + [116])
	*($2 + [28]) = ($4 + [117])
	*($2 + [32]) = ($4 + [118])
	*($2 + [36]) = ($4 + [119])
	*($2 + [40]) = ($4 + [120])
	*($2 + [44]) = ($4 + [121])
	*($2 + [48]) = ($4 + [122])
	*($2 + [52]) = ($4 + [123])
	*($2 + [56]) = ($4 + [124])
	*($2 + [60]) = ($4 + [125])
	*($2 + [64]) = ($4 + [126])
	*($2 + [68]) = ($4 + [127])
	*($2 + [72]) = ($4 + [128])
	*($2 + [76]) = ($4 + [129])
	*($2 + [80]) = ($4 + [130])
	*($2 + [88]) = ($4 + [132])
	*($2 + [84]) = ($4 + [131])
	*($2 + [92]) = ($4 + [133])
	*($2 + [96]) = ($4 + [134])
	*($2 + [100]) = ($4 + [135])
	*($2 + [104]) = ($4 + [136])
	*($2 + [108]) = ($4 + [137])
	*($2 + [112]) = ($4 + [138])
	*($2 + [116]) = ($4 + [139])
	*($2 + [120]) = ($4 + [140])
	*($2 + [124]) = ($4 + [141])
	*($2 + [128]) = ($4 + [142])
	*($2 + [132]) = ($4 + [143])
	*($2 + [136]) = ($4 + [144])
	*($2 + [140]) = ($4 + [145])
	*($2 + [144]) = ($4 + [146])
	*($2 + [148]) = ($4 + [147])
	*($2 + [152]) = ($4 + [148])
	*($2 + [156]) = ($4 + [149])
	*($2 + [164]) = ($4 + [151])
	*($2 + [160]) = ($4 + [150])
	*($2 + [168]) = ($4 + [152])
	*($2 + [172]) = ($4 + [153])
	*($2 + [176]) = ($4 + [154])
	*($2 + [180]) = ($4 + [155])
	*($2 + [184]) = ($4 + [156])
	*($2 + [188]) = ($4 + [157])
	*($2 + [192]) = ($4 + [158])
	*($2 + [196]) = ($4 + [159])
	*($2 + [200]) = ($4 + [160])
	*($2 + [204]) = ($4 + [161])
	*($2 + [208]) = ($4 + [162])
	*($2 + [212]) = ($4 + [163])
	*($2 + [216]) = ($4 + [164])
	*($2 + [220]) = ($4 + [165])
	*($2 + [224]) = ($4 + [166])
	*($2 + [228]) = ($4 + [167])
	*($2 + [232]) = ($4 + [168])
	*($2 + [240]) = ($4 + [170])
	*($2 + [236]) = ($4 + [169])
	*($2 + [244]) = ($4 + [171])
	*($2 + [248]) = ($4 + [172])
	*($2 + [252]) = ($4 + [173])
	*($2 + [256]) = ($4 + [174])
	*($2 + [260]) = ($4 + [175])
	*($2 + [264]) = ($4 + [176])
	*($2 + [268]) = ($4 + [177])
	CALL $54(($2 + [8]), $2)
	*($2 + [8]) = $4
	CALL $148(($2 + [8]), $1)
	$global$0 = ($2 + [272])
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), $1, [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = *(($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[31]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	$0 = CALL $111($0, ($1 + [96]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($1) = *(*($0))
	*($1 + [8]) = *(*($0 + [4]))
	$3 = *($0 + [8])
	CALL $124(($2 + [16]), $3, *($0 + [12]))
	CALL $124($2, $3, *($0 + [16]))
	$0 = *($2)
	$3 = ($0 & [1])
	$0 = CALL $536(($2 + [16]), ( *($2 + [8]) ? ($2 | [1]) : $3 ), ( *($2 + [4]) ? uint_32($0 >> [1]) : $3 ))
	$3 = *($0 + [4])
	$4 = *($0)
	*($0) = (int_64)0
	$5 = *($0 + [8])
	*($0 + [8]) = [0]
	$0 = ($1 + [16])
	if ( (*($1 + [16]) & [1]) ){ goto $label$2 }
	*($0) = [0]
	$6 = ($1 + [24])
	goto $label$1 
	
.LABEL $label$2
	*(*(($6 = ($1 + [24])))) = [0]
	*(($1 + [20])) = [0]
	
.LABEL $label$1
	CALL $531($0, [0])
	*(($1 + [20])) = $3
	*($1 + [16]) = $4
	*($6) = $5
	if ( (*($2) & [1]) ){ goto $label$5 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*(($2 + [8])))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($2 + [24]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
}

int_32 .FUNC $143 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [9052])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159551874301952, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $29($0, $4)
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)$0), [9052])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$6 = ($3 + [1])
	$7 = ($2 + [1])
	$8 = *($2)
	$9 = ($3 + [4])
	$10 = ($3 + [8])
	
.LOOP $label$1:
	if ( ($8 & [1]) ){ goto $label$5 }
	$11 = $7
	$12 = uint_32(($8 & [254]) >> [1])
	if ( ((uint_32)$12 >= (uint_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$11 = *(($2 + [8]))
	$12 = *(($2 + [4]))
	if ( ($12 <= $5) ){ goto $label$3 }
	
.LABEL $label$4
	$13 = $5
	$14 = ($8 & [1])
	$8 = *($3)
	$8 = ( *($9) ? uint_32($8 >> [1]) : $14 )
	if ( ($8 == 0) ){ goto $label$2 }
	$12 = ($11 + $5)
	$15 = ($11 + $12)
	$13 = ($15 - $12)
	if ( ((int_32)$13 < (int_32)$8) ){ goto $label$3 }
	$16 = ( *($10) ? $6 : $14 )
	$14 = *($16)
	
.LOOP $label$6:
	$13 = (($13 - $8) + [1])
	if ( ($13 == 0) ){ goto $label$3 }
	$13 = CALL $628($12, $14, $13)
	if ( ($13 == 0) ){ goto $label$3 }
	if ( (CALL $629($13, $16, $8) == 0) ){ goto $label$7 }
	$12 = ($13 + [1])
	$13 = ($15 - $12)
	if ( ((int_32)$13 >= (int_32)$8) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$7
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$3 }
	$13 = ($13 - $11)
	if ( ((int_32)$13 != (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = *($2)
	if ( ($8 & [1]) ){ goto $label$8 }
	$13 = uint_32($8 >> [1])
	goto $label$2 
	
.LABEL $label$8
	$13 = *(($2 + [4]))
	
.LABEL $label$2
	$8 = CALL $528($4, $2, $5, ($13 - $5), $2)
	$5 = *($4)
	if ( (( *($4 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$14 }
	$5 = ($0 + [4])
	$12 = *($5)
	if ( ((int_32)$12 == (int_32)*(($0 + [8]))) ){ goto $label$13 }
	CALL $527($12, $8)
	*($5) = (*($5) + [12])
	
.LABEL $label$14
	$5 = *($3)
	if ( ($5 & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $145($0, $8)
	$5 = *($3)
	if ( (($5 & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$5 = *($9)
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$5 = uint_32($5 >> [1])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$9
	$8 = *($2)
	$12 = ($8 & [1])
	if ( $12 ){ goto $label$17 }
	if ( ((uint_32)$13 >= (uint_32)uint_32($8 >> [1])) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((uint_32)$13 >= (uint_32)*(($2 + [4]))) ){ goto $label$15 }
	
.LABEL $label$16
	$5 = ($5 + $13)
	if ( $12 ){ goto $label$18 }
	if ( ($5 <= uint_32($8 >> [1])) ){ goto $label$1 }
	goto $label$15 
	
.LABEL $label$18
	if ( ($5 <= *(($2 + [4]))) ){ goto $label$1 }
	
.LABEL $label$15
	$global$0 = ($4 + [16])
}

void .FUNC $607 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	
.LABEL $label$18
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($3, *($1))
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$4 = *($1)
	*($0 + [8]) = *($1 + [8])
	*($0) = $4
	$global$0 = ($3 + [16])
	$1
}

int_32 .FUNC $278 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	*((($6 = $5) + [28])) = *([0] + [22928 align=1])
	*($6 + [24]) = *([0] + [22924 align=1])
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [108]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [100]
	
.LABEL $label$4
	*(($8 + [1])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 + [13])
	$8 = ($5 + [-16])
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$4 = ($8 + $12)
	$7 = $4
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [3]) | [96]) + [11]) & [240]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $279($8, $7, $4, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $280($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

void .FUNC $493 (int_32 $0)
{
	if ( ((*([0] + [12676]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [12684]))
	
.LABEL $label$1
	if ( ((*([0] + [12664]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [12672]))
	
.LABEL $label$2
	if ( ((*([0] + [12652]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [12660]))
	
.LABEL $label$3
	if ( ((*([0] + [12640]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [12648]))
	
.LABEL $label$4
	if ( ((*([0] + [12628]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [12636]))
	
.LABEL $label$5
	if ( ((*([0] + [12616]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [12624]))
	
.LABEL $label$6
	if ( ((*([0] + [12604]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [12612]))
	
.LABEL $label$7
	if ( ((*([0] + [12592]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [12600]))
	
.LABEL $label$8
	if ( ((*([0] + [12580]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [12588]))
	
.LABEL $label$9
	if ( ((*([0] + [12568]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [12576]))
	
.LABEL $label$10
	if ( ((*([0] + [12556]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [12564]))
	
.LABEL $label$11
	if ( ((*([0] + [12544]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [12552]))
	
.LABEL $label$12
	if ( ((*([0] + [12532]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*([0] + [12540]))
	
.LABEL $label$13
	if ( ((*([0] + [12520]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*([0] + [12528]))
	
.LABEL $label$14
	if ( ((*([0] + [12508]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*([0] + [12516]))
	
.LABEL $label$15
	if ( ((*([0] + [12496]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*([0] + [12504]))
	
.LABEL $label$16
	if ( ((*([0] + [12484]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*([0] + [12492]))
	
.LABEL $label$17
	if ( ((*([0] + [12472]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*([0] + [12480]))
	
.LABEL $label$18
	if ( ((*([0] + [12460]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*([0] + [12468]))
	
.LABEL $label$19
	if ( ((*([0] + [12448]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*([0] + [12456]))
	
.LABEL $label$20
	if ( ((*([0] + [12436]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*([0] + [12444]))
	
.LABEL $label$21
	if ( ((*([0] + [12424]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*([0] + [12432]))
	
.LABEL $label$22
	if ( (*([0] + [12412]) & [1]) ){ goto $label$25 }
	if ( (*([0] + [12400]) & [1]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL _ZdlPv(*([0] + [12420]))
	if ( ((*([0] + [12400]) & [1]) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv(*([0] + [12408]))
	return 
	
.LABEL $label$23
}

int_32 .FUNC $585 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $605($0, $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

int_32 .FUNC $412 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [0]
	if ( ((uint_32)$2 > (uint_32)[127]) ){ goto $label$1 }
	$3 = ((int_32)(*((($2 << [2]) + [23840])) & $1) != (int_32)[0])
	
.LABEL $label$1
	return $3
}

void .FUNC $495 (int_32 $0)
{
	if ( ((*([0] + [12980]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [12988]))
	
.LABEL $label$1
	if ( ((*([0] + [12968]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [12976]))
	
.LABEL $label$2
	if ( ((*([0] + [12956]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [12964]))
	
.LABEL $label$3
	if ( ((*([0] + [12944]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [12952]))
	
.LABEL $label$4
	if ( ((*([0] + [12932]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [12940]))
	
.LABEL $label$5
	if ( ((*([0] + [12920]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [12928]))
	
.LABEL $label$6
	if ( ((*([0] + [12908]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [12916]))
	
.LABEL $label$7
	if ( ((*([0] + [12896]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [12904]))
	
.LABEL $label$8
	if ( ((*([0] + [12884]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [12892]))
	
.LABEL $label$9
	if ( ((*([0] + [12872]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [12880]))
	
.LABEL $label$10
	if ( ((*([0] + [12860]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [12868]))
	
.LABEL $label$11
	if ( ((*([0] + [12848]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [12856]))
	
.LABEL $label$12
	if ( ((*([0] + [12836]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*([0] + [12844]))
	
.LABEL $label$13
	if ( ((*([0] + [12824]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*([0] + [12832]))
	
.LABEL $label$14
	if ( ((*([0] + [12812]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*([0] + [12820]))
	
.LABEL $label$15
	if ( ((*([0] + [12800]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*([0] + [12808]))
	
.LABEL $label$16
	if ( ((*([0] + [12788]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*([0] + [12796]))
	
.LABEL $label$17
	if ( ((*([0] + [12776]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*([0] + [12784]))
	
.LABEL $label$18
	if ( ((*([0] + [12764]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*([0] + [12772]))
	
.LABEL $label$19
	if ( ((*([0] + [12752]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*([0] + [12760]))
	
.LABEL $label$20
	if ( ((*([0] + [12740]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*([0] + [12748]))
	
.LABEL $label$21
	if ( ((*([0] + [12728]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*([0] + [12736]))
	
.LABEL $label$22
	if ( (*([0] + [12716]) & [1]) ){ goto $label$25 }
	if ( (*([0] + [12704]) & [1]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL _ZdlPv(*([0] + [12724]))
	if ( ((*([0] + [12704]) & [1]) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv(*([0] + [12712]))
	return 
	
.LABEL $label$23
}

void .FUNC $587 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($3 + [184]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [192]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [200]), *($4 + [4]), [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]), [8736])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [208])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $549 ()
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $440 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	$3 = ($3 - $2)
	return ( $3 ? $4 : ($3 <= $4) )
}

int_32 .FUNC $622 (int_32 $0, int_32 $1)
{
	int_32 $2
	*(($2 = ($global$0 - [16])) + [12]) = $0
	$1 = (*($2 + [12]) + ((( [1073741822] ? ((int_32)$1 ^ (int_32)[-1]) : $1 ) + $1) << [2]))
	*($2 + [8]) = ($1 + [8])
	return *(($1 + [4]))
}

int_32 .FUNC $623 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = ($2 + [256])
	$5 = CALL $628($3, [0], $4)
	$4 = ( ($5 - $3) ? $4 : $5 )
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$3 = *($0 + [84])
	CALL memcpy($1, $3, $2)
	$4 = ($3 + $4)
	*($0 + [8]) = $4
	*($0 + [4]) = ($3 + $2)
	*($0 + [84]) = $4
	return $2
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [8794])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $239 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL $151(($4 + [8]), $1)
	$1 = *($4 + [8])
	$5 = (CASTING uint_64)(uint_32 [59])
	*($4 + [20 align=4]) = $5
	*($4 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($4 + [40]) = ($4 + [16])
	*($4 + [32]) = ($4 + [40])
	CALL $516([11492], ($4 + [32]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	CALL int_32 $1((int_32 [22720]), (int_32 [22746]), (int_32 $2), (int_32 *(*($1) + [48])))
	$2 = *($4 + [8])
	*($4 + [20 align=4]) = $5
	*($4 + [16]) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$2 }
	*($4 + [40]) = ($4 + [16])
	*($4 + [32]) = ($4 + [40])
	CALL $516([11548], ($4 + [32]), [60])
	
.LABEL $label$2
	$2 = *(((*($2 + [16]) + (*([0] + [11552]) << [2])) + [-4]))
	*($3) = CALL int_32 $2((int_32 *(*($2) + [16])))
	CALL void $0((int_32 $2), (int_32 *(*($2) + [20])))
	$0 = *($2 + [4])
	*(($2 = *($4 + [8])) + [4]) = ($0 + [-1])
	if ( ($0 == 0) ){ goto $label$3 }
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$3
	CALL void $2((int_32 *(*($2) + [8])))
	$global$0 = ($4 + [48])
}

int_32 .FUNC $238 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $207($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

int_32 .FUNC $94 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($0 + [48]) = $1
	*($0) = (int_64)1
	$4 = *($2)
	$1 = *(*($2 + [4]))
	*($0 + [8 align=1]) = *($1)
	*(($0 + [40])) = *(($1 + [32]))
	*(($0 + [32])) = *(($1 + [24]))
	*(($0 + [24])) = *(($1 + [16]))
	*(($0 + [16])) = *(($1 + [8]))
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [34])
	$5 = *($0)
	*($0 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5069197016484020224, *(*($2 + [8])), $5, $3, [42])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$1 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $0
}

int_32 .FUNC $236 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$7 = ($global$0 - [112])
	$global$0 = $7
	$8 = [0]
	$9 = $7
	$10 = [0]
	$11 = ((int_32)($3 - $2) / (int_32)[12])
	if ( ($11 <= [101]) ){ goto $label$2 }
	$10 = CALL $643($11)
	$9 = $10
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$12 = ((int_32)$2 == (int_32)$3)
	if ( $12 ){ goto $label$3 }
	$8 = [0]
	$13 = $2
	$14 = $9
	
.LOOP $label$4:
	$15 = *($13)
	if ( ($15 & [1]) ){ goto $label$7 }
	if ( (uint_32($15 >> [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( *(($13 + [4])) ){ goto $label$5 }
	
.LABEL $label$6
	*($14) = [2]
	$8 = ($8 + [1])
	$11 = ($11 + [-1])
	$14 = ($14 + [1])
	$13 = ($13 + [12])
	if ( ((int_32)$3 != (int_32)$13) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($14) = [1]
	$14 = ($14 + [1])
	$13 = ($13 + [12])
	if ( ((int_32)$3 != (int_32)$13) ){ goto $label$4 }
	
.LABEL $label$3
	$16 = [0]
	
.LOOP $label$8:
	$17 = (($16 << [2]) + [-4])
	
.LOOP $label$9:
	$15 = [1]
	$13 = [0]
	$18 = [1]
	$14 = *($0)
	if ( ($14 == 0) ){ goto $label$17 }
	$13 = *($14 + [12])
	if ( ((int_32)$13 == (int_32)*($14 + [16])) ){ goto $label$20 }
	if ( ((int_32)*($13) == (int_32)[-1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	if ( ((int_32)CALL int_32 $14((int_32 *(*($14) + [36]))) != (int_32)[-1]) ){ goto $label$18 }
	
.LABEL $label$19
	$13 = [0]
	*($0) = [0]
	$18 = [1]
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$13 = *($0)
	$18 = ($13 == 0)
	
.LABEL $label$17
	if ( ($1 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = *($1 + [12])
	if ( ((int_32)$14 == (int_32)*($1 + [16])) ){ goto $label$14 }
	$15 = ((int_32)*($14) == (int_32)[-1])
	$1 = ( [0] ? $1 : $15 )
	if ( $11 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$1 = [0]
	if ( ($11 == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$14 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$13 = *($0)
	$15 = ((int_32)$14 == (int_32)[-1])
	$1 = ( [0] ? $1 : $15 )
	if ( ($11 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (((int_32)$18 ^ (int_32)$15) == 0) ){ goto $label$12 }
	$14 = *($13 + [12])
	if ( ((int_32)$14 == (int_32)*($13 + [16])) ){ goto $label$21 }
	$13 = *($14)
	if ( $6 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$21
	$13 = CALL int_32 $13((int_32 *(*($13) + [36])))
	if ( ($6 == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$14 = [1]
	if ( ($13 == 0) ){ goto $label$27 }
	$15 = *($13 + [12])
	if ( ((int_32)$15 == (int_32)*($13 + [16])) ){ goto $label$30 }
	if ( ((int_32)*($15) == (int_32)[-1]) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	if ( ((int_32)CALL int_32 $13((int_32 *(*($13) + [36]))) != (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$29
	*($0) = [0]
	if ( $1 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$14 = (*($0) == 0)
	
.LABEL $label$27
	if ( ($1 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = *($1 + [12])
	if ( ((int_32)$13 == (int_32)*($1 + [16])) ){ goto $label$24 }
	if ( ((int_32)$14 ^ (int_32)((int_32)*($13) == (int_32)[-1])) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$25
	if ( $14 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	if ( ((int_32)$14 ^ (int_32)((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])) ){ goto $label$22 }
	
.LABEL $label$23
	*($5) = (*($5) | [2])
	
.LABEL $label$22
	if ( $12 ){ goto $label$34 }
	
.LOOP $label$35:
	if ( ((int_32)*($9) == (int_32)[2]) ){ goto $label$33 }
	$9 = ($9 + [1])
	$2 = ($2 + [12])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$35 }
	
.LABEL $label$34
	*($5) = (*($5) | [4])
	if ( ($10 == 0) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$33
	$3 = $2
	if ( ($10 == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $650($10)
	
.LABEL $label$31
	$global$0 = ($7 + [112])
	return $3
	
.LABEL $label$11
	$13 = CALL int_32 $4((int_32 $13), (int_32 *(*($4) + [28])))
	
.LABEL $label$10
	$17 = ($17 + [4])
	$16 = ($16 + [1])
	if ( $12 ){ goto $label$9 }
	if ( ($6 == 0) ){ goto $label$37 }
	$19 = [0]
	$15 = $2
	$14 = $9
	
.LOOP $label$38:
	if ( ((int_32)*($14) != (int_32)[1]) ){ goto $label$41 }
	$20 = *($15)
	$18 = ($20 & [1])
	if ( $18 ){ goto $label$43 }
	if ( ((int_32)$13 == (int_32)*((($15 + [4]) + $17))) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	if ( ((int_32)$13 != (int_32)*((*(($15 + [8])) + $17))) ){ goto $label$40 }
	
.LABEL $label$42
	if ( $18 ){ goto $label$45 }
	$19 = [1]
	if ( ((int_32)uint_32($20 >> [1]) == (int_32)$16) ){ goto $label$44 }
	goto $label$41 
	
.LABEL $label$45
	$19 = [1]
	if ( ((int_32)*(($15 + [4])) != (int_32)$16) ){ goto $label$41 }
	
.LABEL $label$44
	*($14) = [2]
	$19 = [1]
	$8 = ($8 + [1])
	goto $label$39 
	
.LABEL $label$41
	$14 = ($14 + [1])
	$15 = ($15 + [12])
	if ( ((int_32)$3 != (int_32)$15) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$40
	*($14) = [0]
	
.LABEL $label$39
	$11 = ($11 + [-1])
	$14 = ($14 + [1])
	$15 = ($15 + [12])
	if ( ((int_32)$3 != (int_32)$15) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$19 = [0]
	$14 = $2
	$15 = $9
	
.LOOP $label$46:
	if ( ((int_32)*($15) != (int_32)[1]) ){ goto $label$47 }
	if ( (*($14) & [1]) ){ goto $label$49 }
	$18 = ($14 + [4])
	goto $label$48 
	
.LABEL $label$49
	$18 = *(($14 + [8]))
	
.LABEL $label$48
	if ( ((int_32)$13 != (int_32)CALL int_32 $4((int_32 *(($18 + $17))), (int_32 *(*($4) + [28])))) ){ goto $label$53 }
	$18 = *($14)
	if ( ($18 & [1]) ){ goto $label$52 }
	$19 = [1]
	if ( ((int_32)uint_32($18 >> [1]) == (int_32)$16) ){ goto $label$51 }
	goto $label$47 
	
.LABEL $label$53
	*($15) = [0]
	goto $label$50 
	
.LABEL $label$52
	$19 = [1]
	if ( ((int_32)*(($14 + [4])) != (int_32)$16) ){ goto $label$47 }
	
.LABEL $label$51
	*($15) = [2]
	$19 = [1]
	$8 = ($8 + [1])
	
.LABEL $label$50
	$11 = ($11 + [-1])
	
.LABEL $label$47
	$15 = ($15 + [1])
	$14 = ($14 + [12])
	if ( ((int_32)$3 != (int_32)$14) ){ goto $label$46 }
	
.LABEL $label$36
	if ( (($19 & [1]) == 0) ){ goto $label$8 }
	$13 = *($0)
	$14 = *($13 + [12])
	if ( ((int_32)$14 == (int_32)*($13 + [16])) ){ goto $label$55 }
	*(($13 + [12])) = ($14 + [4])
	if ( (($8 + $11) <= [2]) ){ goto $label$8 }
	goto $label$54 
	
.LABEL $label$55
	CALL int_32 $13((int_32 *(*($13) + [40])))
	if ( (($8 + $11) <= [2]) ){ goto $label$8 }
	
.LABEL $label$54
	$14 = $2
	$13 = $9
	
.LOOP $label$56:
	if ( ((int_32)*($13) != (int_32)[2]) ){ goto $label$57 }
	$15 = *($14)
	if ( ($15 & [1]) ){ goto $label$59 }
	if ( ((int_32)uint_32($15 >> [1]) != (int_32)$16) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	if ( ((int_32)*(($14 + [4])) == (int_32)$16) ){ goto $label$57 }
	
.LABEL $label$58
	*($13) = [0]
	$8 = ($8 + [-1])
	
.LABEL $label$57
	$13 = ($13 + [1])
	$14 = ($14 + [12])
	if ( ((int_32)$3 != (int_32)$14) ){ goto $label$56 }
	goto $label$8 
	
.LABEL $label$1
	CALL $517()
	return (unreachable)
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1) = ((int_64)$4 + (int_64)1)
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	$5 = *($0)
	*($1 + [40]) = *(*($3 + [20]))
	*($2 + [64]) = ($2 + [48])
	*($2 + [60]) = $2
	*($2 + [56]) = $2
	CALL $99(($2 + [56]), $1)
	$4 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($5 + [8]), (int_64)-4060986518620078080, *(*($0 + [8])), $4, $2, [48])
	if ( (uint_64)($4 <= *($5 + [16])) ){ goto $label$1 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$4 = *(($5 + [8]))
	$6 = *(*(($0 + [8])))
	$7 = *($1)
	*($2 + [72]) = *(($1 + [16]))
	*($1 + [56]) = CALL db_idx64_store($4, (int_64)-4060986518620078080, $6, $7, ($2 + [72]))
	$global$0 = ($2 + [80])
}

void .FUNC $234 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $233 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)10
	*($0) = *(*(*($2 + [4])) + [96])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $92 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)30
	*($0) = *(*(*($2 + [4])) + [104])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $230 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [256])
	$global$0 = $6
	CALL $225(($6 + [208]), $3, ($6 + [224]), ($6 + [223]), ($6 + [222]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$7 = (($6 + [192]) | [1])
	$8 = ( *($6 + [200]) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [46]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$104 
	
.LABEL $label$106
	*($10) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$47 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$105
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$50 }
	$11 = [0]
	goto $label$3 
	
.LABEL $label$104
	$3 = $1
	goto $label$51 
	
.LABEL $label$103
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$102
	if ( ($2 == 0) ){ goto $label$46 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$101
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$45 }
	$11 = [53]
	goto $label$3 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$99
	if ( ($3 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$98
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$41 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($8 + $1)) ){ goto $label$9 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$6 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$8 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$4 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$93
	$8 = ((*($6 + [192]) & [-2]) + [-1])
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $8, [0])
	$8 = ( *($9) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$7 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [43]
	goto $label$3 
	
.LABEL $label$90
	if ( CALL $226(int_32(($1 << [24]) >> [24]), ($6 + [7]), ($6 + [6]), $8, ($6 + [188]), *($6 + [223]), *($6 + [222]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$89
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$5 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$87
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [39]
	goto $label$3 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [7]
	goto $label$3 
	
.LABEL $label$83
	if ( ((int_32)$8 != (int_32)*($6 + [188])) ){ goto $label$36 }
	$11 = [9]
	goto $label$3 
	
.LABEL $label$82
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($4) = [4]
	$5 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$81
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$80
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [36]
	goto $label$3 
	
.LABEL $label$79
	$1 = ($6 + [16])
	$8 = $9
	$11 = [37]
	goto $label$3 
	
.LABEL $label$78
	$10 = *($1)
	*($1) = *($8)
	*($8) = $10
	$8 = ($8 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $8) ){ goto $label$10 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$77
	$10 = *($6 + [208])
	$5 = ($10 & [1])
	$11 = [11]
	goto $label$3 
	
.LABEL $label$76
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $5 )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$75
	$5 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ))
	$10 = ($6 + [16])
	$11 = [31]
	goto $label$3 
	
.LABEL $label$74
	if ( (($7 & [1]) == 0) ){ goto $label$12 }
	$11 = [33]
	goto $label$3 
	
.LABEL $label$73
	if ( ((int_32)*($10) != (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$11 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$72
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$32 }
	$11 = [12]
	goto $label$3 
	
.LABEL $label$71
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [28]
	goto $label$3 
	
.LABEL $label$70
	if ( ((*($9) + [-1]) <= $8) ){ goto $label$29 }
	$11 = [29]
	goto $label$3 
	
.LABEL $label$69
	*($4) = [4]
	$11 = [13]
	goto $label$3 
	
.LABEL $label$68
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [14]
	goto $label$3 
	
.LABEL $label$67
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$26 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$66
	if ( ($2 == 0) ){ goto $label$25 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$65
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$21 }
	$11 = [17]
	goto $label$3 
	
.LABEL $label$64
	if ( ($3 == 0) ){ goto $label$20 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$63
	*($4) = (*($4) | [2])
	$11 = [19]
	goto $label$3 
	
.LABEL $label$62
	if ( (*($6 + [192]) & [1]) ){ goto $label$15 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$61
	if ( (*($6 + [208]) & [1]) ){ goto $label$14 }
	$11 = [22]
	goto $label$3 
	
.LABEL $label$60
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$59
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$13 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$58
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$57
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$24 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$56
	if ( $3 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$55
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$54
	*($4) = [4]
	if ( $3 ){ goto $label$27 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$53
	$3 = [0]
	if ( $2 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [1]
	goto $label$3 
	
.LABEL $label$50
	$11 = [47]
	goto $label$3 
	
.LABEL $label$49
	$11 = [1]
	goto $label$3 
	
.LABEL $label$48
	$11 = [46]
	goto $label$3 
	
.LABEL $label$47
	$11 = [1]
	goto $label$3 
	
.LABEL $label$46
	$11 = [54]
	goto $label$3 
	
.LABEL $label$45
	$11 = [3]
	goto $label$3 
	
.LABEL $label$44
	$11 = [54]
	goto $label$3 
	
.LABEL $label$43
	$11 = [40]
	goto $label$3 
	
.LABEL $label$42
	$11 = [4]
	goto $label$3 
	
.LABEL $label$41
	$11 = [4]
	goto $label$3 
	
.LABEL $label$40
	$11 = [4]
	goto $label$3 
	
.LABEL $label$39
	$11 = [7]
	goto $label$3 
	
.LABEL $label$38
	$11 = [7]
	goto $label$3 
	
.LABEL $label$37
	$11 = [7]
	goto $label$3 
	
.LABEL $label$36
	$11 = [8]
	goto $label$3 
	
.LABEL $label$35
	$11 = [13]
	goto $label$3 
	
.LABEL $label$34
	$11 = [11]
	goto $label$3 
	
.LABEL $label$33
	$11 = [11]
	goto $label$3 
	
.LABEL $label$32
	$11 = [31]
	goto $label$3 
	
.LABEL $label$31
	$11 = [12]
	goto $label$3 
	
.LABEL $label$30
	$11 = [13]
	goto $label$3 
	
.LABEL $label$29
	$11 = [13]
	goto $label$3 
	
.LABEL $label$28
	$11 = [27]
	goto $label$3 
	
.LABEL $label$27
	$11 = [14]
	goto $label$3 
	
.LABEL $label$26
	$11 = [26]
	goto $label$3 
	
.LABEL $label$25
	$11 = [25]
	goto $label$3 
	
.LABEL $label$24
	$11 = [16]
	goto $label$3 
	
.LABEL $label$23
	$11 = [25]
	goto $label$3 
	
.LABEL $label$22
	$11 = [16]
	goto $label$3 
	
.LABEL $label$21
	$11 = [24]
	goto $label$3 
	
.LABEL $label$20
	$11 = [19]
	goto $label$3 
	
.LABEL $label$19
	$11 = [19]
	goto $label$3 
	
.LABEL $label$18
	$11 = [18]
	goto $label$3 
	
.LABEL $label$17
	$11 = [18]
	goto $label$3 
	
.LABEL $label$16
	$11 = [19]
	goto $label$3 
	
.LABEL $label$15
	$11 = [20]
	goto $label$3 
	
.LABEL $label$14
	$11 = [21]
	goto $label$3 
	
.LABEL $label$13
	$11 = [22]
	goto $label$3 
	
.LABEL $label$12
	$11 = [32]
	goto $label$3 
	
.LABEL $label$11
	$11 = [34]
	goto $label$3 
	
.LABEL $label$10
	$11 = [37]
	goto $label$3 
	
.LABEL $label$9
	$11 = [50]
	goto $label$3 
	
.LABEL $label$8
	$11 = [49]
	goto $label$3 
	
.LABEL $label$7
	$11 = [42]
	goto $label$3 
	
.LABEL $label$6
	$11 = [43]
	goto $label$3 
	
.LABEL $label$5
	$11 = [45]
	goto $label$3 
	
.LABEL $label$4
	$11 = [52]
	goto $label$3 
	$11
	return (unreachable)
}

void .FUNC $411 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $417 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($1)
	if ( ((uint_32)$4 > (uint_32)[127]) ){ goto $label$3 }
	if ( *([0] + [11460]) ){ goto $label$5 }
	$3 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $3
	goto $label$4 
	
.LABEL $label$5
	$3 = *([0] + [11456])
	
.LABEL $label$4
	$4 = CALL $556($4, $3)
	$3 = *($1)
	$4 = ( ($3 + [-32]) ? $3 : $4 )
	
.LABEL $label$3
	*($1) = $4
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $443 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = ((int_32)$2 == (int_32)$3)
	if ( $9 ){ goto $label$7 }
	$10 = $2
	
.LOOP $label$9:
	if ( (*($10) == 0) ){ goto $label$8 }
	$10 = ($10 + [4])
	if ( ((int_32)$3 != (int_32)$10) ){ goto $label$9 }
	$10 = $3
	
.LABEL $label$8
	*($7) = $5
	*($4) = $2
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	if ( $9 ){ goto $label$1 }
	$11 = (($8 + [4]) + [1])
	$12 = ($0 + [8])
	
.LOOP $label$10:
	*($8 + [8]) = *($1)
	$13 = CALL $576(*($12))
	$9 = CALL $583($5, $4, int_32(($10 - $2) >> [2]), ($6 - $5), $1)
	if ( ($13 == 0) ){ goto $label$11 }
	CALL $576($13)
	
.LABEL $label$11
	if ( ($9 == 0) ){ goto $label$3 }
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$2 }
	$5 = (*($7) + $9)
	*($7) = $5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$15 }
	$10 = CALL $576(*($12))
	$5 = CALL $582(($8 + [4]), [0], $1)
	if ( ($10 == 0) ){ goto $label$16 }
	CALL $576($10)
	
.LABEL $label$16
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$5 }
	$10 = *($7)
	if ( ((uint_32)$5 > (uint_32)($6 - $10)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$17 }
	*($7) = ($10 + [1])
	*($10) = *($8 + [4])
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$17 }
	$10 = ([1] - $5)
	$5 = $11
	
.LOOP $label$18:
	$2 = *($7)
	*($7) = ($2 + [1])
	*($2) = *($5)
	$5 = ($5 + [1])
	$10 = ($10 + [1])
	if ( $10 ){ goto $label$18 }
	
.LABEL $label$17
	$2 = (*($4) + [4])
	*($4) = $2
	$5 = $2
	$10 = $3
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$19:
	if ( (*($5) == 0) ){ goto $label$14 }
	$5 = ($5 + [4])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$19 }
	$10 = $3
	$5 = *($7)
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$15
	$2 = *($4)
	$10 = $3
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$14
	$10 = $5
	
.LABEL $label$13
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$7
	*($7) = $5
	*($4) = $2
	goto $label$1 
	
.LABEL $label$6
	$2 = *($4)
	goto $label$1 
	
.LABEL $label$5
	$global$0 = ($8 + [16])
	return [2]
	
.LABEL $label$4
	$global$0 = ($8 + [16])
	return [1]
	
.LABEL $label$3
	$global$0 = ($8 + [16])
	return [1]
	
.LABEL $label$2
	*($7) = $5
	if ( ((int_32)$2 == (int_32)*($4)) ){ goto $label$20 }
	$6 = ($0 + [8])
	
.LOOP $label$21:
	$3 = *($2)
	$10 = CALL $576(*($6))
	$5 = CALL $582($5, $3, ($8 + [8]))
	if ( ($10 == 0) ){ goto $label$22 }
	CALL $576($10)
	
.LABEL $label$22
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$20 }
	$5 = (*($7) + $5)
	*($7) = $5
	$2 = ($2 + [4])
	if ( ((int_32)$2 != (int_32)*($4)) ){ goto $label$21 }
	
.LABEL $label$20
	*($4) = $2
	$global$0 = ($8 + [16])
	return [2]
	
.LABEL $label$1
	$global$0 = ($8 + [16])
	return ((int_32)$2 != (int_32)$3)
}

int_64 .FUNC $627 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $610($3, (int_64)0)
	$4 = CALL $619($3, $2, [1], (int_64)-9223372036854775808)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [48]) = *(*($4 + [8]))
	*($1 + [56]) = *(*($4 + [12]))
	*($1 + [16]) = *(*($4 + [16]))
	$5 = *($0)
	$6 = *($4 + [20])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	*($1 + [40]) = *(*($4 + [24]))
	$6 = *($4 + [28])
	*($1 + [64]) = *($6)
	*(($1 + [88])) = *(($6 + [24]))
	*(($1 + [80])) = *(($6 + [16]))
	*(($1 + [72])) = *(($6 + [8]))
	CALL $529(($1 + [96]), *($4 + [32]))
	$4 = *($1 + [96])
	$6 = ( *(($1 + [100])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [96])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$6 = CALL $643($4)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $4)
	CALL $146($3, $1)
	$7 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($5 + [8]), (int_64)3617214760481587200, *(*($0 + [8])), $7, $6, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $650($6)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

void .FUNC $409 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $444 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = ((int_32)$2 == (int_32)$3)
	if ( $9 ){ goto $label$9 }
	$10 = $2
	
.LOOP $label$11:
	if ( (*($10) == 0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$3 != (int_32)$10) ){ goto $label$11 }
	$10 = $3
	
.LABEL $label$10
	*($7) = $5
	*($4) = $2
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	if ( $9 ){ goto $label$1 }
	$11 = ($0 + [8])
	
.LOOP $label$12:
	*($8 + [8]) = *($1)
	$12 = CALL $576(*($11))
	$9 = CALL $579($5, $4, ($10 - $2), int_32(($6 - $5) >> [2]), $1)
	if ( ($12 == 0) ){ goto $label$13 }
	CALL $576($12)
	
.LABEL $label$13
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$8 }
	$5 = (*($7) + ($9 << [2]))
	*($7) = $5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	$2 = *($4)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$15 }
	$10 = CALL $576(*($11))
	$2 = CALL $578($5, $2, [1], $1)
	if ( ($10 == 0) ){ goto $label$16 }
	CALL $576($10)
	
.LABEL $label$16
	if ( $2 ){ goto $label$6 }
	*($7) = (*($7) + [4])
	$2 = (*($4) + [1])
	*($4) = $2
	$10 = $2
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$17:
	if ( (*($10) == 0) ){ goto $label$14 }
	$10 = ($10 + [1])
	if ( ((int_32)$3 != (int_32)$10) ){ goto $label$17 }
	
.LABEL $label$15
	$10 = $3
	
.LABEL $label$14
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$9
	*($7) = $5
	goto $label$2 
	
.LABEL $label$8
	*($7) = $5
	if ( ((int_32)$2 == (int_32)*($4)) ){ goto $label$2 }
	$1 = ($0 + [8])
	
.LOOP $label$18:
	$6 = CALL $576(*($1))
	$5 = CALL $578($5, $2, ($10 - $2), ($8 + [8]))
	if ( ($6 == 0) ){ goto $label$19 }
	CALL $576($6)
	
.LABEL $label$19
	$6 = [1]
	if ( ($5 == 0) ){ goto $label$20 }
	if ( ((int_32)$5 == (int_32)[-2]) ){ goto $label$4 }
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$3 }
	$6 = $5
	
.LABEL $label$20
	$5 = (*($7) + [4])
	*($7) = $5
	$2 = ($2 + $6)
	if ( ((int_32)$2 != (int_32)*($4)) ){ goto $label$18 }
	goto $label$2 
	
.LABEL $label$7
	$2 = *($4)
	goto $label$1 
	
.LABEL $label$6
	$global$0 = ($8 + [16])
	return [2]
	
.LABEL $label$5
	$2 = $3
	goto $label$1 
	
.LABEL $label$4
	*($4) = $2
	$global$0 = ($8 + [16])
	return [1]
	
.LABEL $label$3
	*($4) = $2
	$global$0 = ($8 + [16])
	return [2]
	
.LABEL $label$2
	*($4) = $2
	
.LABEL $label$1
	$global$0 = ($8 + [16])
	return ((int_32)$2 != (int_32)$3)
}

int_32 .FUNC $605 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [284]) = $2
	*(($3 + [272])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*(($3 + [256])) = (int_64)0
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [280]) = *($3 + [284])
	$4 = [0]
	$2 = [-1]
	if ( ((int_32)CALL $606([0], $1, ($3 + [280]), ($3 + [80]), ($3 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $597($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) <= (int_32)[0]) ){ goto $label$6 }
	$5 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($0) = ($2 & [-33])
	$5 = ($2 & [32])
	if ( *($0 + [48]) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($3 + [80])
	*($0 + [28]) = $3
	*($0 + [20]) = $3
	$7 = *($0 + [44])
	*($0 + [44]) = $3
	$2 = CALL $606($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $7
	*($6) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$7 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $7 )
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL $606($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	
.LABEL $label$3
	$1 = *($0)
	*($0) = ($1 | $5)
	$1 = ($1 & [32])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $598($0)
	
.LABEL $label$7
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	$global$0 = ($3 + [288])
	return $2
}

int_32 .FUNC $415 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($2)
	if ( ((uint_32)$4 > (uint_32)[127]) ){ goto $label$1 }
	if ( ((*((($4 << [2]) + [23840])) & $1) == 0) ){ goto $label$1 }
	$2 = ($2 + [4])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$2 }
	$2 = $3
	
.LABEL $label$1
	return $2
}

void .FUNC $541 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([1073741807] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [4])
	$8 = [1073741807]
	if ( ((uint_32)$1 <= (uint_32)[536870886]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [1073741807]
	if ( ((uint_32)$1 > (uint_32)[536870886]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [2]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [2]) ){ goto $label$2 }
	$8 = (($2 + [4]) & [-4])
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	
.LABEL $label$2
	$2 = CALL _Znwj(($8 << [2]))
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $636($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ($4 << [2])
	CALL $636((($2 + $4) + ($6 << [2])), (($7 + $4) + ($5 << [2])), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $445 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = ($global$0 - [16])
	$global$0 = $5
	*($4) = $2
	$0 = CALL $576(*($0 + [8]))
	$1 = CALL $582(($5 + [12]), [0], $1)
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $576($0)
	
.LABEL $label$1
	$6 = [2]
	if ( (($1 + [1]) <= [2]) ){ goto $label$2 }
	$6 = [1]
	$0 = *($4)
	$2 = ($1 + [-1])
	if ( ((uint_32)$2 > (uint_32)($3 - $0)) ){ goto $label$2 }
	$6 = [0]
	if ( ($2 == 0) ){ goto $label$2 }
	*($4) = ($0 + [1])
	*($0) = *($5 + [12])
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$2 }
	$0 = ([2] - $1)
	$1 = (($5 + [12]) + [1])
	
.LOOP $label$3:
	$2 = *($4)
	*($4) = ($2 + [1])
	*($2) = *($1)
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	if ( $0 ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($5 + [16])
	return $6
}

int_32 .FUNC $192 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $260 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $532 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $632($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $530($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $530($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $414 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($2)
	if ( ((uint_32)$4 > (uint_32)[127]) ){ goto $label$3 }
	if ( (*((($4 << [2]) + [23840])) & $1) ){ goto $label$1 }
	
.LABEL $label$3
	$2 = ($2 + [4])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$2 }
	$2 = $3
	
.LABEL $label$1
	return $2
}

int_32 .FUNC $446 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = CALL $576(*($0 + [8]))
	$2 = CALL $581([0], [0], [4])
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $576($1)
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$2 }
	return [-1]
	
.LABEL $label$2
	$1 = *(($0 + [8]))
	if ( ($1 == 0) ){ goto $label$3 }
	$1 = CALL $576($1)
	$0 = CALL $554()
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $576($1)
	
.LABEL $label$4
	return ((int_32)$0 == (int_32)[1])
	
.LABEL $label$3
	return [1]
}

void .FUNC $261 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $640 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $413 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$4 = (uint_32((($2 + [-4]) - $1) >> [2]) + [1])
	$5 = $1
	
.LOOP $label$2:
	$6 = [0]
	$7 = *($5)
	if ( ((uint_32)$7 > (uint_32)[127]) ){ goto $label$3 }
	$6 = *((($7 << [2]) + [23840]))
	
.LABEL $label$3
	*($3) = $6
	$3 = ($3 + [4])
	$5 = ($5 + [4])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$2 }
	$1 = ($1 + ($4 << [2]))
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $447 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $262 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [48])
	$global$0 = $5
	if ( (*($2 + [4]) & [1]) ){ goto $label$1 }
	$1 = CALL int_32 $0((int_32 $1), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 *(*($0) + [24])))
	$global$0 = ($5 + [48])
	return $1
	
.LABEL $label$1
	CALL $151(($5 + [8]), $2)
	$0 = *($5 + [8])
	*($5 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($5 + [16]) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$3 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11540], ($5 + [32]), [60])
	$2 = *($5 + [8])
	goto $label$2 
	
.LABEL $label$3
	$2 = $0
	
.LABEL $label$2
	$3 = *([0] + [11544])
	$6 = *($2 + [4])
	*($2 + [4]) = ($6 + [-1])
	$0 = *(((*($0 + [16]) + ($3 << [2])) + [-4]))
	if ( ($6 == 0) ){ goto $label$7 }
	$2 = *($0)
	if ( ($4 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL void $2((int_32 *(*($2) + [8])))
	$2 = *($0)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$6
	CALL void ($5 + [16])((int_32 $0), (int_32 *($2 + [28])))
	goto $label$4 
	
.LABEL $label$5
	CALL void ($5 + [16])((int_32 $0), (int_32 *($2 + [24])))
	
.LABEL $label$4
	$3 = *($5 + [24])
	$2 = ($2 & [1])
	$2 = *($5 + [16])
	if ( (( *($5 + [20]) ? uint_32($2 >> [1]) : $2 ) == 0) ){ goto $label$10 }
	$6 = (($5 + [16]) | [1])
	$0 = ( $3 ? $6 : $2 )
	$7 = ($5 + [24])
	
.LOOP $label$11:
	$2 = $1
	$1 = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	$4 = *($0)
	$1 = *($2 + [24])
	if ( ((int_32)$1 == (int_32)*($2 + [28])) ){ goto $label$13 }
	*(($2 + [24])) = ($1 + [1])
	*($1) = $4
	$1 = $2
	goto $label$12 
	
.LABEL $label$13
	$1 = ( [0] ? $2 : ((int_32)CALL int_32 $2((int_32 $4), (int_32 *(*($2) + [52]))) == (int_32)[-1]) )
	
.LABEL $label$12
	$4 = *($5 + [16])
	$2 = ($4 & [1])
	$3 = *($7)
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)(( $3 ? $6 : $2 ) + ( *($5 + [20]) ? uint_32($4 >> [1]) : $2 ))) ){ goto $label$11 }
	if ( ($2 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ($2 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$global$0 = ($5 + [48])
	return $1
}

void .FUNC $410 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL void $0((int_32 *(*($0) + [4])))
	
.LABEL $label$1
}

void .FUNC $386 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $303 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $302 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $301 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$8 = ($global$0 - [48])
	$global$0 = $8
	CALL $151(($8 + [8]), $3)
	$9 = *($8 + [8])
	*($8 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($8 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$2 }
	*($8 + [40]) = ($8 + [16])
	*($8 + [32]) = ($8 + [40])
	CALL $516([11492], ($8 + [32]), [60])
	$10 = *($8 + [8])
	goto $label$1 
	
.LABEL $label$2
	$10 = $9
	
.LABEL $label$1
	$11 = *([0] + [11496])
	$12 = *($10 + [4])
	*($10 + [4]) = ($12 + [-1])
	$9 = *(((*($9 + [16]) + ($11 << [2])) + [-4]))
	if ( ($12 == 0) ){ goto $label$12 }
	*($4) = [0]
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL void $10((int_32 *(*($10) + [8])))
	*($4) = [0]
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$10 }
	
.LABEL $label$11
	$10 = $1
	goto $label$9 
	
.LABEL $label$10
	
.LOOP $label$13:
	$10 = [0]
	$11 = [1]
	if ( ($1 == 0) ){ goto $label$14 }
	$10 = *($1 + [12])
	if ( ((int_32)$10 == (int_32)*($1 + [16])) ){ goto $label$16 }
	$10 = *($10)
	goto $label$15 
	
.LABEL $label$16
	$10 = CALL int_32 $1((int_32 *(*($1) + [36])))
	
.LABEL $label$15
	$11 = ((int_32)$10 == (int_32)[-1])
	$10 = ( [0] ? $1 : $11 )
	
.LABEL $label$14
	if ( ($2 == 0) ){ goto $label$30 }
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$29 }
	$1 = ((int_32)*($1) == (int_32)[-1])
	$2 = ( [0] ? $2 : $1 )
	if ( ((int_32)$11 ^ (int_32)$1) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$2 = [0]
	if ( ($11 == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$1 = ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])
	$2 = ( [0] ? $2 : $1 )
	if ( (((int_32)$11 ^ (int_32)$1) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	if ( ((int_32)CALL int_32 $9((int_32 *($6)), (int_32 [0]), (int_32 *(*($9) + [52]))) != (int_32)[37]) ){ goto $label$36 }
	$1 = ($6 + [4])
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$26 }
	$12 = [0]
	$11 = CALL int_32 $9((int_32 *($1)), (int_32 [0]), (int_32 *(*($9) + [52])))
	if ( ((int_32)$11 == (int_32)[69]) ){ goto $label$37 }
	if ( ((int_32)($11 & [255]) != (int_32)[48]) ){ goto $label$35 }
	
.LABEL $label$37
	$6 = ($6 + [8])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$25 }
	$13 = CALL int_32 $9((int_32 *($6)), (int_32 [0]), (int_32 *(*($9) + [52])))
	$12 = $11
	goto $label$34 
	
.LABEL $label$36
	if ( (CALL int_32 $9((int_32 [1]), (int_32 *($6)), (int_32 *(*($9) + [12]))) == 0) ){ goto $label$38 }
	$1 = ($6 + [4])
	
.LOOP $label$39:
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$33 }
	$11 = *($1)
	$1 = ($1 + [4])
	if ( CALL int_32 $9((int_32 [1]), (int_32 $11), (int_32 *(*($9) + [12]))) ){ goto $label$39 }
	$6 = ($1 + [-4])
	if ( $10 ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$38
	$1 = *($10 + [12])
	if ( ((int_32)$1 == (int_32)*($10 + [16])) ){ goto $label$32 }
	$1 = *($1)
	goto $label$31 
	
.LABEL $label$35
	$13 = $11
	$1 = $6
	
.LABEL $label$34
	$10 = CALL int_32 $0((int_32 $10), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 $13), (int_32 $12), (int_32 *(*($0) + [36])))
	$6 = ($1 + [8])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$20 }
	goto $label$9 
	
.LABEL $label$33
	$6 = $7
	if ( $10 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$32
	$1 = CALL int_32 $10((int_32 *(*($10) + [36])))
	
.LABEL $label$31
	if ( ((int_32)CALL int_32 $9((int_32 $1), (int_32 *(*($9) + [28]))) != (int_32)CALL int_32 $9((int_32 *($6)), (int_32 *(*($9) + [28])))) ){ goto $label$41 }
	$1 = ($10 + [12])
	$11 = *($1)
	if ( ((int_32)$11 == (int_32)*(($10 + [16]))) ){ goto $label$40 }
	*($1) = ($11 + [4])
	$6 = ($6 + [4])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$18 }
	goto $label$9 
	
.LABEL $label$41
	*($4) = [4]
	$14 = [6]
	goto $label$17 
	
.LABEL $label$40
	CALL int_32 $10((int_32 *(*($10) + [40])))
	$6 = ($6 + [4])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$19 }
	goto $label$9 
	
.LABEL $label$27
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$26
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$25
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$24
	$14 = [12]
	goto $label$17 
	
.LABEL $label$23
	$14 = [1]
	goto $label$17 
	
.LABEL $label$22
	$14 = [12]
	goto $label$17 
	
.LABEL $label$21
	$14 = [1]
	goto $label$17 
	
.LABEL $label$20
	$14 = [7]
	goto $label$17 
	
.LABEL $label$19
	$14 = [7]
	goto $label$17 
	
.LABEL $label$18
	$14 = [7]
	
.LABEL $label$17
	
.LOOP $label$42:
	goto $label$78 
	
.LABEL $label$78
	*($11) = ($1 + [4])
	if ( ($10 == 0) ){ goto $label$54 }
	$14 = [1]
	goto $label$42 
	
.LABEL $label$77
	$1 = *($10 + [12])
	if ( ((int_32)$1 == (int_32)*($10 + [16])) ){ goto $label$52 }
	$14 = [2]
	goto $label$42 
	
.LABEL $label$76
	$1 = ((int_32)*($1) == (int_32)[-1])
	$10 = ( [0] ? $10 : $1 )
	if ( $2 ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$75
	$1 = ((int_32)CALL int_32 $10((int_32 *(*($10) + [36]))) == (int_32)[-1])
	$10 = ( [0] ? $10 : $1 )
	if ( ($2 == 0) ){ goto $label$60 }
	$14 = [3]
	goto $label$42 
	
.LABEL $label$74
	$11 = *($2 + [12])
	if ( ((int_32)$11 == (int_32)*($2 + [16])) ){ goto $label$49 }
	$14 = [4]
	goto $label$42 
	
.LABEL $label$73
	if ( ((int_32)*($11) == (int_32)[-1]) ){ goto $label$57 }
	$14 = [5]
	goto $label$42 
	
.LABEL $label$72
	if ( ($1 == 0) ){ goto $label$58 }
	$14 = [8]
	goto $label$42 
	
.LABEL $label$71
	$1 = *($10 + [12])
	if ( ((int_32)$1 == (int_32)*($10 + [16])) ){ goto $label$43 }
	$14 = [9]
	goto $label$42 
	
.LABEL $label$70
	if ( CALL int_32 $9((int_32 [1]), (int_32 *($1)), (int_32 *(*($9) + [12]))) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$69
	if ( (CALL int_32 $9((int_32 [1]), (int_32 CALL int_32 $10((int_32 *(*($10) + [36])))), (int_32 *(*($9) + [12]))) == 0) ){ goto $label$46 }
	$14 = [10]
	goto $label$42 
	
.LABEL $label$68
	$11 = ($10 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($10 + [16]))) ){ goto $label$53 }
	$14 = [11]
	goto $label$42 
	
.LABEL $label$67
	CALL int_32 $10((int_32 *(*($10) + [40])))
	if ( $10 ){ goto $label$61 }
	$14 = [12]
	goto $label$42 
	
.LABEL $label$66
	$1 = [1]
	$10 = [0]
	if ( $2 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$65
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$59 }
	$14 = [13]
	goto $label$42 
	
.LABEL $label$64
	$2 = [0]
	if ( ($1 == 0) ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$63
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	$14 = [7]
	goto $label$42 
	
.LABEL $label$62
	$1 = $10
	if ( (*($4) == 0) ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$61
	$14 = [1]
	goto $label$42 
	
.LABEL $label$60
	$14 = [13]
	goto $label$42 
	
.LABEL $label$59
	$14 = [5]
	goto $label$42 
	
.LABEL $label$58
	$14 = [6]
	goto $label$42 
	
.LABEL $label$57
	$14 = [13]
	goto $label$42 
	
.LABEL $label$56
	$14 = [13]
	goto $label$42 
	
.LABEL $label$55
	$14 = [3]
	goto $label$42 
	
.LABEL $label$54
	$14 = [12]
	goto $label$42 
	
.LABEL $label$53
	$14 = [0]
	goto $label$42 
	
.LABEL $label$52
	$14 = [16]
	goto $label$42 
	
.LABEL $label$51
	$14 = [13]
	goto $label$42 
	
.LABEL $label$50
	$14 = [3]
	goto $label$42 
	
.LABEL $label$49
	$14 = [15]
	goto $label$42 
	
.LABEL $label$48
	$14 = [6]
	goto $label$42 
	
.LABEL $label$47
	$14 = [8]
	goto $label$42 
	
.LABEL $label$46
	$14 = [6]
	goto $label$42 
	
.LABEL $label$45
	$14 = [10]
	goto $label$42 
	
.LABEL $label$44
	$14 = [6]
	goto $label$42 
	
.LABEL $label$43
	$14 = [14]
	goto $label$42 
	
.LABEL $label$9
	if ( ($10 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$9 = *($10 + [12])
	if ( ((int_32)$9 == (int_32)*($10 + [16])) ){ goto $label$80 }
	$9 = *($9)
	goto $label$79 
	
.LABEL $label$80
	$9 = CALL int_32 $10((int_32 *(*($10) + [36])))
	
.LABEL $label$79
	$9 = ((int_32)$9 == (int_32)[-1])
	$10 = ( [0] ? $10 : $9 )
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = [1]
	$10 = [0]
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$6
	if ( ($9 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$81 }
	if ( (((int_32)$9 ^ (int_32)((int_32)*($1) == (int_32)[-1])) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$81
	if ( ((int_32)$9 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$3 }
	
.LABEL $label$4
	*($4) = (*($4) | [2])
	
.LABEL $label$3
	$global$0 = ($8 + [48])
	$14
	return $10
}

int_32 .FUNC $263 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	*((($6 = $5) + [28])) = *([0] + [22928 align=1])
	*($6 + [24]) = *([0] + [22924 align=1])
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [108]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [100]
	
.LABEL $label$4
	*(($8 + [1])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 + [13])
	$8 = ($5 + [-16])
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$4 = ($8 + $12)
	$7 = $4
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [1]) | [24]) + [14]) & [48]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $265($8, $7, $4, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $266($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

int_32 .FUNC $307 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11492], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11496])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]))))
	$3 = (CALL $236(($6 + [8]), $2, $3, ($3 + [168]), $1, $4, [0]) - $3)
	if ( ((int_32)$3 > (int_32)[167]) ){ goto $label$4 }
	*($5 + [24]) = ((int_32)((int_32)$3 / (int_32)[12]) % (int_32)[7])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $306 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($6)
	$8 = ($7 & [1])
	$6 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [20])))
	$9 = ( *($6 + [8]) ? ($6 + [4]) : $8 )
	return CALL $301($0, $1, $2, $3, $4, $5, $9, ($9 + (( *($6 + [4]) ? uint_32($7 >> [1]) : $8 ) << [2])))
}

int_32 .FUNC $305 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [32])
	$global$0 = $6
	*(($6 + [24])) = *([0] + [23288])
	*(($6 + [16])) = *([0] + [23280])
	*($6 + [8]) = *([0] + [23272])
	*($6) = *([0] + [23264])
	$0 = CALL $301($0, $1, $2, $3, $4, $5, $6, ($6 + [32]))
	$global$0 = ($6 + [32])
	return $0
}

int_32 .FUNC $304 (int_32 $0)
{
	return [2]
}

int_32 .FUNC $309 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11492], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11496])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL $310(($6 + [8]), $2, $4, $1, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	if ( ((int_32)$3 > (int_32)[68]) ){ goto $label$6 }
	$3 = ($3 + [2000])
	goto $label$5 
	
.LABEL $label$6
	$3 = ( ($3 + [1900]) ? $3 : ((int_32)$3 < (int_32)[100]) )
	
.LABEL $label$5
	*(($5 + [20])) = ($3 + [-1900])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $308 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11492], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11496])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [4])))
	$3 = (CALL $236(($6 + [8]), $2, $3, ($3 + [288]), $1, $4, [0]) - $3)
	if ( ((int_32)$3 > (int_32)[287]) ){ goto $label$4 }
	*($5 + [16]) = ((int_32)((int_32)$3 / (int_32)[12]) % (int_32)[12])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $540 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $635($1)
	$3 = [1]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $538($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [4])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $538($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $637($3, $1, $2)
	
.LABEL $label$2
	*(($3 + ($2 << [2]))) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $604 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$6 = ($5) & [32767]
	if ( ((int_32)$6) == (int_32)[32767]) ){ goto $label$1 }
	if ( $6 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($4, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL $604(($4 + [16]), *($4), *(($4 + [8])), $3)
	$5 = (*($3) + [-120])
	$2 = *($4 + [24])
	$1 = *($4 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($5 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($5 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	*($3) = $5
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $423 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$5 = (uint_32((($2 + [-4]) - $1) >> [2]) + [1])
	$6 = $1
	
.LOOP $label$2:
	$7 = *($6)
	*($4) = ( $7 ? $3 : ($7 <= [128]) )
	$4 = ($4 + [1])
	$6 = ($6 + [4])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$2 }
	$1 = ($1 + ($5 << [2]))
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $435 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	*($4) = $2
	*($7) = $5
	return [3]
}

void .FUNC $434 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $437 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	*($4) = $2
	return [3]
}

int_32 .FUNC $436 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	*($4) = $2
	*($7) = $5
	return [3]
}

int_32 .FUNC $431 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	*($3) = *($1)
	$3 = ($3 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $430 (int_32 $0, int_32 $1)
{
	return $1
}

int_32 .FUNC $433 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$5 = *($1)
	*($4) = ( $5 ? $3 : ((int_32)$5 > (int_32)[-1]) )
	$4 = ($4 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $432 (int_32 $0, int_32 $1, int_32 $2)
{
	return ( $1 ? $2 : ((int_32)$1 > (int_32)[-1]) )
}

int_32 .FUNC $602 (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [2] ? [3] : (int_64)(((int_64)$2 | (int_64)$0) == 0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $439 (int_32 $0)
{
	return [1]
}

int_32 .FUNC $438 (int_32 $0)
{
	return [1]
}

int_32 .FUNC $603 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL $582($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $282 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	*((($6 = $5) + [28])) = *([0] + [22928 align=1])
	*($6 + [24]) = *([0] + [22924 align=1])
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [108]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [117]
	
.LABEL $label$4
	*(($8 + [1])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 | [12])
	$8 = ($5 - (($7 + [15]) & [16]))
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$4 = ($8 + $12)
	$7 = $4
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [3]) | [84]) + [15]) & [240]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $279($8, $7, $4, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $280($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

int_32 .FUNC $268 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	*((($6 = $5) + [28])) = *([0] + [22928 align=1])
	*($6 + [24]) = *([0] + [22924 align=1])
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [108]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [117]
	
.LABEL $label$4
	*(($8 + [1])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 | [12])
	$8 = ($5 - (($7 + [15]) & [16]))
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$4 = ($8 + $12)
	$7 = $4
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [1]) | [21]) + [15]) & [48]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $265($8, $7, $4, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $266($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

int_32 .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = [10396]
	*(($1 = ($0 + [56]))) = [10416]
	*(($2 = ($0 + [-8]))) = [10376]
	*(($3 = ($0 + [4]))) = [10640]
	if ( ((*(($0 + [36])) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($2 + [52]))
	
.LABEL $label$1
	CALL $153($3)
	CALL $178($2, [10436])
	CALL $149($1)
	return $2
}

void .FUNC $128 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0 + [64]) = [10416]
	*($0) = [10376]
	*($0 + [8]) = [10396]
	*($0 + [12]) = [10640]
	$1 = ($0 + [12])
	$2 = ($0 + [64])
	if ( ((*(($0 + [44])) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [52])))
	
.LABEL $label$1
	CALL $153($1)
	CALL $178($0, [10436])
	CALL $149($2)
	CALL _ZdlPv($0)
}

int_32 .FUNC $286 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [400])
	$global$0 = $6
	*($6 + [392]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [392]) | [1])
	if ( ($7 & [1024]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [393]) = [43]
	$8 = (($6 + [392]) | [2])
	if ( (($7 & [1024]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	$9 = [0]
	$10 = ($7 & [260])
	if ( ((int_32)$10 == (int_32)[260]) ){ goto $label$4 }
	*($8) = [10798]
	$8 = ($8 + [2])
	$9 = [1]
	
.LABEL $label$4
	$7 = ($7 & [16384])
	*($8) = [76]
	$11 = ($10 & [511])
	if ( ((int_32)$11 == (int_32)[256]) ){ goto $label$7 }
	if ( ((int_32)$11 != (int_32)[4]) ){ goto $label$6 }
	$7 = ( [70] ? [102] : $7 )
	goto $label$5 
	
.LABEL $label$7
	$7 = ( [69] ? [101] : $7 )
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$10 != (int_32)[260]) ){ goto $label$8 }
	$7 = ( [65] ? [97] : $7 )
	goto $label$5 
	
.LABEL $label$8
	$7 = ( [71] ? [103] : $7 )
	
.LABEL $label$5
	*(($8 + [1])) = $7
	*($6 + [348]) = ($6 + [352])
	if ( (*([0] + [11460]) == 0) ){ goto $label$15 }
	$8 = *([0] + [11456])
	if ( ($9 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $8
	if ( $9 ){ goto $label$13 }
	
.LABEL $label$14
	*($6 + [80]) = $4
	*($6 + [88]) = $5
	$7 = CALL $264(($6 + [352]), [30], $8, ($6 + [392]), ($6 + [80]))
	if ( ((int_32)$7 <= (int_32)[29]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = *($2 + [8])
	*(($6 + [64])) = $5
	*($6 + [56]) = $4
	*($6 + [48]) = $7
	$7 = CALL $264(($6 + [352]), [30], $8, ($6 + [392]), ($6 + [48]))
	if ( ((int_32)$7 > (int_32)[29]) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	$8 = *($6 + [348])
	goto $label$10 
	
.LABEL $label$11
	if ( (*([0] + [11460]) == 0) ){ goto $label$18 }
	$8 = *([0] + [11456])
	if ( ($9 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$8 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $8
	if ( $9 ){ goto $label$16 }
	
.LABEL $label$17
	*($6 + [32]) = $4
	*($6 + [40]) = $5
	$7 = CALL $271(($6 + [348]), $8, ($6 + [392]), ($6 + [32]))
	$8 = *($6 + [348])
	$10 = $8
	if ( ($8 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$16
	$7 = *($2 + [8])
	*(($6 + [16])) = $5
	*($6 + [8]) = $4
	*($6) = $7
	$7 = CALL $271(($6 + [348]), $8, ($6 + [392]), $6)
	$8 = *($6 + [348])
	$10 = $8
	if ( ($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = ($8 + $7)
	$9 = $11
	$12 = (*(($2 + [4])) & [176])
	if ( ((int_32)$12 == (int_32)[32]) ){ goto $label$24 }
	if ( ((int_32)$12 != (int_32)[16]) ){ goto $label$22 }
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)[45]) ){ goto $label$25 }
	if ( ((int_32)$9 != (int_32)[43]) ){ goto $label$23 }
	
.LABEL $label$25
	$9 = ($8 + [1])
	
.LABEL $label$24
	if ( ((int_32)$8 == (int_32)($6 + [352])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	if ( ((int_32)$7 < (int_32)[2]) ){ goto $label$22 }
	if ( ((int_32)$9 != (int_32)[48]) ){ goto $label$22 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$22 }
	$9 = ($8 + [2])
	if ( ((int_32)$8 != (int_32)($6 + [352])) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$9 = $8
	if ( ((int_32)$8 != (int_32)($6 + [352])) ){ goto $label$20 }
	
.LABEL $label$21
	$8 = [0]
	$7 = ($6 + [112])
	$12 = ($6 + [352])
	goto $label$19 
	
.LABEL $label$20
	$8 = CALL $643(($7 << [3]))
	if ( ($8 == 0) ){ goto $label$9 }
	$12 = *($6 + [348])
	$7 = $8
	
.LABEL $label$19
	CALL $151(($6 + [96]), $2)
	CALL $285($12, $9, $11, $7, ($6 + [108]), ($6 + [104]), ($6 + [96]))
	$11 = *($9 + [4])
	*(($9 = *($6 + [96])) + [4]) = ($11 + [-1])
	if ( $11 ){ goto $label$26 }
	CALL void $9((int_32 *(*($9) + [8])))
	
.LABEL $label$26
	$2 = CALL $280($1, $7, *($6 + [108]), *($6 + [104]), $2, $3)
	if ( ($8 == 0) ){ goto $label$27 }
	CALL $650($8)
	
.LABEL $label$27
	if ( ($10 == 0) ){ goto $label$28 }
	CALL $650($10)
	
.LABEL $label$28
	$global$0 = ($6 + [400])
	return $2
	
.LABEL $label$9
	CALL $517()
	return (unreachable)
}

int_32 .FUNC $287 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [224])
	$global$0 = $5
	*(($5 + [204])) = *([0] + [22934 align=1])
	*($5 + [200]) = *([0] + [22930 align=1])
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$6 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $6
	
.LABEL $label$1
	*($5) = $4
	$7 = CALL $264(($5 + [176]), [20], $6, ($5 + [200]), $5)
	$8 = (($5 + [176]) + $7)
	$4 = $8
	$6 = (*($2 + [4]) & [176])
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$3 }
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$4 }
	$6 = *($5 + [176])
	if ( ((int_32)$6 == (int_32)[45]) ){ goto $label$6 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = (($5 + [176]) | [1])
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$7 < (int_32)[2]) ){ goto $label$4 }
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$4 }
	if ( ((int_32)(*($5 + [177]) | [32]) != (int_32)[120]) ){ goto $label$4 }
	$4 = (($5 + [176]) | [2])
	goto $label$3 
	
.LABEL $label$4
	$4 = ($5 + [176])
	
.LABEL $label$3
	CALL $151(($5 + [8]), $2)
	$9 = *($5 + [8])
	*($5 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($5 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$8 }
	*($5 + [216]) = ($5 + [16])
	*($5 + [208]) = ($5 + [216])
	CALL $516([11492], ($5 + [208]), [60])
	$6 = *($5 + [8])
	goto $label$7 
	
.LABEL $label$8
	$6 = $9
	
.LABEL $label$7
	$10 = *([0] + [11496])
	$11 = *($6 + [4])
	*($6 + [4]) = ($11 + [-1])
	$9 = *(((*($9 + [16]) + ($10 << [2])) + [-4]))
	if ( $11 ){ goto $label$9 }
	CALL void $6((int_32 *(*($6) + [8])))
	
.LABEL $label$9
	CALL int_32 $9((int_32 ($5 + [176])), (int_32 $8), (int_32 ($5 + [16])), (int_32 *(*($9) + [48])))
	$6 = (($5 + [16]) + ($7 << [2]))
	$2 = CALL $280($1, ($5 + [16]), ( $6 ? (($5 + [16]) + (($4 - ($5 + [176])) << [2])) : ((int_32)$4 == (int_32)$8) ), $6, $2, $3)
	$global$0 = ($5 + [224])
	return $2
}

int_32 .FUNC $284 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, float_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [368])
	$global$0 = $5
	*($5 + [360]) = (int_64)37
	$6 = *($2 + [4])
	if ( ($6 & [2048]) ){ goto $label$3 }
	$7 = (($5 + [360]) | [1])
	if ( ($6 & [1024]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($5 + [361]) = [43]
	$7 = (($5 + [360]) | [2])
	if ( (($6 & [1024]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($7) = [35]
	$7 = ($7 + [1])
	
.LABEL $label$1
	$8 = [0]
	$9 = ($6 & [260])
	if ( ((int_32)$9 == (int_32)[260]) ){ goto $label$4 }
	*($7) = [10798]
	$7 = ($7 + [2])
	$8 = [1]
	
.LABEL $label$4
	$6 = ($6 & [16384])
	$10 = ($9 & [511])
	if ( ((int_32)$10 == (int_32)[256]) ){ goto $label$7 }
	if ( ((int_32)$10 != (int_32)[4]) ){ goto $label$6 }
	$6 = ( [70] ? [102] : $6 )
	goto $label$5 
	
.LABEL $label$7
	$6 = ( [69] ? [101] : $6 )
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$9 != (int_32)[260]) ){ goto $label$8 }
	$6 = ( [65] ? [97] : $6 )
	goto $label$5 
	
.LABEL $label$8
	$6 = ( [71] ? [103] : $6 )
	
.LABEL $label$5
	*($7) = $6
	*($5 + [316]) = ($5 + [320])
	if ( (*([0] + [11460]) == 0) ){ goto $label$15 }
	$7 = *([0] + [11456])
	if ( ($8 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$14
	*($5 + [48]) = $4
	$6 = CALL $264(($5 + [320]), [30], $7, ($5 + [360]), ($5 + [48]))
	if ( ((int_32)$6 <= (int_32)[29]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$6 = *($2 + [8])
	*($5 + [40]) = $4
	*($5 + [32]) = $6
	$6 = CALL $264(($5 + [320]), [30], $7, ($5 + [360]), ($5 + [32]))
	if ( ((int_32)$6 > (int_32)[29]) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = [0]
	$7 = *($5 + [316])
	goto $label$10 
	
.LABEL $label$11
	if ( (*([0] + [11460]) == 0) ){ goto $label$18 }
	$7 = *([0] + [11456])
	if ( ($8 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	if ( $8 ){ goto $label$16 }
	
.LABEL $label$17
	*($5 + [16]) = $4
	$6 = CALL $271(($5 + [316]), $7, ($5 + [360]), ($5 + [16]))
	$7 = *($5 + [316])
	$9 = $7
	if ( ($7 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$16
	$6 = *($2 + [8])
	*($5 + [8]) = $4
	*($5) = $6
	$6 = CALL $271(($5 + [316]), $7, ($5 + [360]), $5)
	$7 = *($5 + [316])
	$9 = $7
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$10 = ($7 + $6)
	$8 = $10
	$11 = (*(($2 + [4])) & [176])
	if ( ((int_32)$11 == (int_32)[32]) ){ goto $label$24 }
	if ( ((int_32)$11 != (int_32)[16]) ){ goto $label$22 }
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$25 }
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$23 }
	
.LABEL $label$25
	$8 = ($7 + [1])
	
.LABEL $label$24
	if ( ((int_32)$7 == (int_32)($5 + [320])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	if ( ((int_32)$6 < (int_32)[2]) ){ goto $label$22 }
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$22 }
	if ( ((int_32)(*($7 + [1]) | [32]) != (int_32)[120]) ){ goto $label$22 }
	$8 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)($5 + [320])) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$8 = $7
	if ( ((int_32)$7 != (int_32)($5 + [320])) ){ goto $label$20 }
	
.LABEL $label$21
	$7 = [0]
	$6 = ($5 + [80])
	$11 = ($5 + [320])
	goto $label$19 
	
.LABEL $label$20
	$7 = CALL $643(($6 << [3]))
	if ( ($7 == 0) ){ goto $label$9 }
	$11 = *($5 + [316])
	$6 = $7
	
.LABEL $label$19
	CALL $151(($5 + [64]), $2)
	CALL $285($11, $8, $10, $6, ($5 + [76]), ($5 + [72]), ($5 + [64]))
	$10 = *($8 + [4])
	*(($8 = *($5 + [64])) + [4]) = ($10 + [-1])
	if ( $10 ){ goto $label$26 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$26
	$2 = CALL $280($1, $6, *($5 + [76]), *($5 + [72]), $2, $3)
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $650($7)
	
.LABEL $label$27
	if ( ($9 == 0) ){ goto $label$28 }
	CALL $650($9)
	
.LABEL $label$28
	$global$0 = ($5 + [368])
	return $2
	
.LABEL $label$9
	CALL $517()
	return (unreachable)
}

void .FUNC $285 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$7 = ($global$0 - [32])
	$global$0 = $7
	$8 = *($6)
	$9 = (CASTING uint_64)(uint_32 [59])
	*($7 + [4 align=4]) = $9
	*($7) = [11492]
	$10 = $8
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11492], ($7 + [16]), [60])
	$10 = *($6)
	
.LABEL $label$1
	$6 = *(((*($8 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	*($7 + [4 align=4]) = $9
	*($7) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$2 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11548], ($7 + [16]), [60])
	
.LABEL $label$2
	$11 = *(((*($10 + [16]) + (*([0] + [11552]) << [2])) + [-4]))
	CALL void $7((int_32 $11), (int_32 *(*($11) + [20])))
	*($5) = $3
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$4 }
	$12 = $0
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL int_32 $6((int_32 int_32(($8 << [24]) >> [24])), (int_32 *(*($6) + [44])))
	*(($10 = *($5))) = $8
	*($5) = ($10 + [4])
	$12 = ($0 + [1])
	
.LABEL $label$3
	if ( ((int_32)($2 - $12) < (int_32)[2]) ){ goto $label$7 }
	if ( ((int_32)*($12) != (int_32)[48]) ){ goto $label$7 }
	if ( ((int_32)(*($12 + [1]) | [32]) != (int_32)[120]) ){ goto $label$7 }
	$8 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [44])))
	*(($10 = *($5))) = $8
	*($5) = ($10 + [4])
	$8 = CALL int_32 $6((int_32 *(($12 + [1]))), (int_32 *(*($6) + [44])))
	*(($10 = *($5))) = $8
	*($5) = ($10 + [4])
	$12 = ($12 + [2])
	if ( ((uint_32)$12 >= (uint_32)$2) ){ goto $label$6 }
	$8 = $12
	
.LOOP $label$8:
	$10 = *($8)
	if ( (*([0] + [11460]) == 0) ){ goto $label$10 }
	if ( (CALL $560($10, *([0] + [11456])) == 0) ){ goto $label$5 }
	goto $label$9 
	
.LABEL $label$10
	$13 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $13
	if ( (CALL $560($10, $13) == 0) ){ goto $label$5 }
	
.LABEL $label$9
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$12 >= (uint_32)$2) ){ goto $label$6 }
	$8 = $12
	
.LOOP $label$11:
	$10 = *($8)
	if ( (*([0] + [11460]) == 0) ){ goto $label$13 }
	if ( (CALL $555($10, *([0] + [11456])) == 0) ){ goto $label$5 }
	goto $label$12 
	
.LABEL $label$13
	$13 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $13
	if ( (CALL $555($10, $13) == 0) ){ goto $label$5 }
	
.LABEL $label$12
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$11 }
	goto $label$5 
	
.LABEL $label$6
	$8 = $12
	
.LABEL $label$5
	$10 = *($7)
	if ( (( *($7 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) ) == 0) ){ goto $label$18 }
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$19 }
	$10 = ($8 + [-1])
	if ( ((uint_32)$10 <= (uint_32)$12) ){ goto $label$19 }
	$13 = $12
	
.LOOP $label$20:
	$14 = *($13)
	*($13) = *($10)
	*($10) = $14
	$10 = ($10 + [-1])
	$13 = ($13 + [1])
	if ( ($13 <= $10) ){ goto $label$20 }
	
.LABEL $label$19
	$15 = CALL int_32 $11((int_32 *(*($11) + [16])))
	if ( ((uint_32)$12 >= (uint_32)$8) ){ goto $label$17 }
	$16 = ($7 | [1])
	$14 = [0]
	$17 = ($7 + [8])
	$13 = $12
	$10 = [0]
	
.LOOP $label$21:
	$18 = *((( *($17) ? $16 : (*($7) & [1]) ) + $14))
	if ( ((int_32)$18 < (int_32)[1]) ){ goto $label$22 }
	if ( ((int_32)$10 != (int_32)$18) ){ goto $label$22 }
	*(($10 = *($5))) = $15
	*($5) = ($10 + [4])
	$10 = *($7)
	$14 = ($14 + ($14 <= (( *($7 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) ) + [-1])))
	$10 = [0]
	
.LABEL $label$22
	$19 = CALL int_32 $6((int_32 *($13)), (int_32 *(*($6) + [44])))
	*(($18 = *($5))) = $19
	*($5) = ($18 + [4])
	$10 = ($10 + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$21 }
	$19 = ($18 + [4])
	goto $label$16 
	
.LABEL $label$18
	CALL int_32 $6((int_32 $12), (int_32 $8), (int_32 *($5)), (int_32 *(*($6) + [48])))
	$19 = (*($5) + (($8 - $12) << [2]))
	*($5) = $19
	if ( ($8 <= $2) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$19 = *($5)
	
.LABEL $label$16
	$13 = ($3 + (($12 - $0) << [2]))
	if ( ((int_32)$13 == (int_32)$19) ){ goto $label$23 }
	$10 = ($19 + [-4])
	if ( ((uint_32)$10 <= (uint_32)$13) ){ goto $label$23 }
	$13 = ($3 + ((($12 + [1]) - $0) << [2]))
	
.LOOP $label$24:
	$14 = ($13 + [-4])
	$18 = *($14)
	*($14) = *($10)
	*($10) = $18
	$10 = ($10 + [-4])
	$14 = ($13 <= $10)
	$13 = ($13 + [4])
	if ( $14 ){ goto $label$24 }
	
.LABEL $label$23
	if ( ((uint_32)$8 >= (uint_32)$2) ){ goto $label$14 }
	
.LABEL $label$15
	
.LOOP $label$26:
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)[46]) ){ goto $label$25 }
	$13 = CALL int_32 $6((int_32 int_32(($10 << [24]) >> [24])), (int_32 *(*($6) + [44])))
	*(($10 = *($5))) = $13
	*($5) = ($10 + [4])
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$26 }
	$19 = ($10 + [4])
	goto $label$14 
	
.LABEL $label$25
	$10 = CALL int_32 $11((int_32 *(*($11) + [12])))
	*(($13 = *($5))) = $10
	$19 = ($13 + [4])
	*($5) = $19
	$8 = ($8 + [1])
	
.LABEL $label$14
	CALL int_32 $6((int_32 $8), (int_32 $2), (int_32 $19), (int_32 *(*($6) + [48])))
	$8 = (*($5) + (($2 - $8) << [2]))
	*($5) = $8
	*($4) = ( $8 ? ($3 + (($1 - $0) << [2])) : ((int_32)$1 == (int_32)$2) )
	if ( ((*($7) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$27
	$global$0 = ($7 + [32])
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	$4 = ($1 + [16])
	$5 = CALL $528(($2 + [56]), $4, [0], [16], $4)
	$6 = CALL $626(( *($5 + [8]) ? ($5 + [1]) : (*($5) & [1]) ), [0], [16])
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$1
	*($2 + [72]) = $6
	$5 = CALL $528(($2 + [32]), $4, [16], [16], $4)
	$7 = CALL $626(( *($5 + [8]) ? ($5 + [1]) : (*($5) & [1]) ), [0], [16])
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($5 + [8])))
	$6 = *($2 + [72])
	
.LABEL $label$2
	*($2 + [48]) = $7
	*($2 + [72]) = ((int_64)$6 + (int_64)*(*($0 + [4])))
	*($2 + [48]) = ((int_64)*(*($0 + [8])) + (int_64)$7)
	CALL $124(($2 + [16]), $3, ($2 + [72]))
	CALL $124($2, $3, ($2 + [48]))
	$5 = *($2)
	$0 = ($5 & [1])
	$5 = CALL $536(($2 + [16]), ( *($2 + [8]) ? ($2 | [1]) : $0 ), ( *($2 + [4]) ? uint_32($5 >> [1]) : $0 ))
	$0 = *($5 + [4])
	$3 = *($5)
	*($5) = (int_64)0
	$8 = *($5 + [8])
	*($5 + [8]) = [0]
	if ( (*($4) & [1]) ){ goto $label$4 }
	*(($1 + [16])) = [0]
	$5 = ($1 + [24])
	goto $label$3 
	
.LABEL $label$4
	*(*(($5 = ($1 + [24])))) = [0]
	*(($1 + [20])) = [0]
	
.LABEL $label$3
	CALL $531($4, [0])
	*(($1 + [20])) = $0
	*($1 + [16]) = $3
	*($5) = $8
	if ( (*($2) & [1]) ){ goto $label$7 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($2 + [8])))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($2 + [24]))
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$5
	$global$0 = ($2 + [80])
}

int_32 .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8794])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$7 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$5 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[1]), [8794])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $6, [2])
	*($4) = (*($4) + [2])
	CALL $113($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$4 = *($4)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $288 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$8 = ($global$0 - [48])
	$global$0 = $8
	CALL $151(($8 + [8]), $3)
	$9 = *($8 + [8])
	*($8 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($8 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$2 }
	*($8 + [40]) = ($8 + [16])
	*($8 + [32]) = ($8 + [40])
	CALL $516([11500], ($8 + [32]), [60])
	$10 = *($8 + [8])
	goto $label$1 
	
.LABEL $label$2
	$10 = $9
	
.LABEL $label$1
	$11 = *([0] + [11504])
	$12 = *($10 + [4])
	*($10 + [4]) = ($12 + [-1])
	$9 = *(((*($9 + [16]) + ($11 << [2])) + [-4]))
	if ( ($12 == 0) ){ goto $label$12 }
	*($4) = [0]
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL void $10((int_32 *(*($10) + [8])))
	*($4) = [0]
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$10 }
	
.LABEL $label$11
	$10 = $1
	goto $label$9 
	
.LABEL $label$10
	$13 = ($9 + [8])
	
.LOOP $label$13:
	$10 = [0]
	if ( ($1 == 0) ){ goto $label$30 }
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$29 }
	$10 = $1
	
.LABEL $label$30
	if ( ($2 == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$10 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$27 }
	
.LABEL $label$28
	$2 = [0]
	if ( $10 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$31 }
	if ( ($10 == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$31
	$1 = ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])
	$2 = ( [0] ? $2 : $1 )
	if ( (((int_32)($10 == 0) ^ (int_32)$1) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	if ( ((int_32)CALL int_32 $9((int_32 *($6)), (int_32 [0]), (int_32 *(*($9) + [36]))) != (int_32)[37]) ){ goto $label$39 }
	$1 = ($6 + [1])
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$24 }
	$12 = [0]
	$11 = CALL int_32 $9((int_32 *($1)), (int_32 [0]), (int_32 *(*($9) + [36])))
	if ( ((int_32)$11 == (int_32)[69]) ){ goto $label$40 }
	if ( ((int_32)($11 & [255]) != (int_32)[48]) ){ goto $label$38 }
	
.LABEL $label$40
	$6 = ($6 + [2])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$23 }
	$14 = CALL int_32 $9((int_32 *($6)), (int_32 [0]), (int_32 *(*($9) + [36])))
	$12 = $11
	goto $label$37 
	
.LABEL $label$39
	$1 = *($6)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$41 }
	$14 = *($13)
	if ( (*(($14 + ($1 << [2]))) & [1]) ){ goto $label$36 }
	
.LABEL $label$41
	$1 = *($10 + [12])
	if ( ((int_32)$1 == (int_32)*($10 + [16])) ){ goto $label$35 }
	$1 = *($1)
	goto $label$34 
	
.LABEL $label$38
	$14 = $11
	$1 = $6
	
.LABEL $label$37
	$10 = CALL int_32 $0((int_32 $10), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 $14), (int_32 $12), (int_32 *(*($0) + [36])))
	$6 = ($1 + [2])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	$15 = [6]
	goto $label$14 
	
.LABEL $label$36
	$11 = ($6 + [1])
	
.LOOP $label$42:
	$1 = $11
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$33 }
	$6 = ($6 + [1])
	$12 = *($1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$32 }
	$11 = ($1 + [1])
	if ( (*(($14 + ($12 << [2]))) & [1]) ){ goto $label$42 }
	goto $label$22 
	
.LABEL $label$35
	$1 = CALL int_32 $10((int_32 *(*($10) + [36])))
	
.LABEL $label$34
	if ( ((int_32)CALL int_32 $9((int_32 int_32(($1 << [24]) >> [24])), (int_32 *(*($9) + [12]))) != (int_32)CALL int_32 $9((int_32 *($6)), (int_32 *(*($9) + [12])))) ){ goto $label$44 }
	$1 = ($10 + [12])
	$11 = *($1)
	if ( ((int_32)$11 == (int_32)*(($10 + [16]))) ){ goto $label$43 }
	*($1) = ($11 + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$15 }
	goto $label$9 
	
.LABEL $label$44
	*($4) = [4]
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	goto $label$9 
	
.LABEL $label$43
	CALL int_32 $10((int_32 *(*($10) + [40])))
	$6 = ($6 + [1])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	goto $label$9 
	
.LABEL $label$33
	$1 = $7
	if ( $10 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$32
	$1 = $6
	if ( $10 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$25
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$24
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$23
	*($4) = [4]
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$22
	$15 = [0]
	goto $label$14 
	
.LABEL $label$21
	$15 = [13]
	goto $label$14 
	
.LABEL $label$20
	$15 = [1]
	goto $label$14 
	
.LABEL $label$19
	$15 = [13]
	goto $label$14 
	
.LABEL $label$18
	$15 = [1]
	goto $label$14 
	
.LABEL $label$17
	$15 = [6]
	goto $label$14 
	
.LABEL $label$16
	$15 = [6]
	goto $label$14 
	
.LABEL $label$15
	$15 = [6]
	
.LABEL $label$14
	
.LOOP $label$46:
	goto $label$81 
	
.LABEL $label$82
	*($11) = ($6 + [1])
	$15 = [0]
	goto $label$46 
	
.LABEL $label$81
	if ( ($10 == 0) ){ goto $label$59 }
	$15 = [1]
	goto $label$46 
	
.LABEL $label$80
	if ( ((int_32)*($10 + [12]) == (int_32)*($10 + [16])) ){ goto $label$58 }
	$15 = [2]
	goto $label$46 
	
.LABEL $label$79
	if ( ($2 == 0) ){ goto $label$60 }
	$15 = [3]
	goto $label$46 
	
.LABEL $label$78
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$56 }
	$15 = [16]
	goto $label$46 
	
.LABEL $label$77
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$62 }
	$15 = [4]
	goto $label$46 
	
.LABEL $label$76
	if ( $10 ){ goto $label$61 }
	$15 = [7]
	goto $label$46 
	
.LABEL $label$75
	$6 = *($10 + [12])
	if ( ((int_32)$6 == (int_32)*($10 + [16])) ){ goto $label$48 }
	$15 = [8]
	goto $label$46 
	
.LABEL $label$74
	$6 = (*($6) << [24])
	if ( ((int_32)int_32($6 >> [24]) >= (int_32)[0]) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$73
	$6 = (CALL int_32 $10((int_32 *(*($10) + [36]))) << [24])
	if ( ((int_32)int_32($6 >> [24]) < (int_32)[0]) ){ goto $label$55 }
	$15 = [9]
	goto $label$46 
	
.LABEL $label$72
	if ( ((*((*($13) + int_32($6 >> [22]))) & [1]) == 0) ){ goto $label$52 }
	$15 = [10]
	goto $label$46 
	
.LABEL $label$71
	$11 = ($10 + [12])
	$6 = *($11)
	if ( ((int_32)$6 != (int_32)*(($10 + [16]))) ){ goto $label$47 }
	$15 = [12]
	goto $label$46 
	
.LABEL $label$70
	CALL int_32 $10((int_32 *(*($10) + [40])))
	if ( $10 ){ goto $label$65 }
	$15 = [13]
	goto $label$46 
	
.LABEL $label$69
	$10 = [0]
	if ( $2 ){ goto $label$57 }
	$15 = [14]
	goto $label$46 
	
.LABEL $label$68
	$2 = [0]
	if ( $10 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$67
	$10 = ( [0] ? $10 : ((int_32)CALL int_32 $10((int_32 *(*($10) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$63 }
	goto $label$64 
	
.LABEL $label$66
	$6 = $1
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$49 }
	goto $label$9 
	
.LABEL $label$65
	$15 = [1]
	goto $label$46 
	
.LABEL $label$64
	$15 = [14]
	goto $label$46 
	
.LABEL $label$63
	$15 = [3]
	goto $label$46 
	
.LABEL $label$62
	$15 = [14]
	goto $label$46 
	
.LABEL $label$61
	$15 = [5]
	goto $label$46 
	
.LABEL $label$60
	$15 = [14]
	goto $label$46 
	
.LABEL $label$59
	$15 = [13]
	goto $label$46 
	
.LABEL $label$58
	$15 = [17]
	goto $label$46 
	
.LABEL $label$57
	$15 = [3]
	goto $label$46 
	
.LABEL $label$56
	$15 = [4]
	goto $label$46 
	
.LABEL $label$55
	$15 = [5]
	goto $label$46 
	
.LABEL $label$54
	$15 = [9]
	goto $label$46 
	
.LABEL $label$53
	$15 = [5]
	goto $label$46 
	
.LABEL $label$52
	$15 = [5]
	goto $label$46 
	
.LABEL $label$51
	$15 = [5]
	goto $label$46 
	
.LABEL $label$50
	$15 = [7]
	goto $label$46 
	
.LABEL $label$49
	$15 = [6]
	goto $label$46 
	
.LABEL $label$48
	$15 = [15]
	goto $label$46 
	
.LABEL $label$47
	$15 = [11]
	goto $label$46 
	
.LABEL $label$45
	$1 = $10
	if ( (*($4) == 0) ){ goto $label$13 }
	
.LABEL $label$9
	if ( ($10 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((int_32)*($10 + [12]) == (int_32)*($10 + [16])) ){ goto $label$83 }
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$83
	$10 = ( [0] ? $10 : ((int_32)CALL int_32 $10((int_32 *(*($10) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$10 = [0]
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$6
	if ( $10 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$84 }
	if ( ($10 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$84
	if ( ((int_32)($10 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$3 }
	
.LABEL $label$4
	*($4) = (*($4) | [2])
	
.LABEL $label$3
	$global$0 = ($8 + [48])
	$15
	return $10
}

int_32 .FUNC $289 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $127 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0 + [64]) = [10416]
	*($0) = [10376]
	*($0 + [8]) = [10396]
	*($0 + [12]) = [10640]
	$1 = ($0 + [12])
	$2 = ($0 + [64])
	if ( ((*(($0 + [44])) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [52])))
	
.LABEL $label$1
	CALL $153($1)
	CALL $178($0, [10436])
	CALL $149($2)
	return $0
}

void .FUNC $183 (int_32 $0)
{
	CALL $182(($0 + [-8]))
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($0 + [32])
	CALL $529($2, $1)
	*($0 + [44]) = [0]
	$1 = *($0 + [48])
	if ( (($1 & [8]) == 0) ){ goto $label$1 }
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($2 + [1])
	$3 = ($4 + uint_32($3 >> [1]))
	*(($0 + [44])) = $3
	goto $label$2 
	
.LABEL $label$3
	$4 = *(($0 + [40]))
	$3 = ($4 + *(($0 + [36])))
	*(($0 + [44])) = $3
	
.LABEL $label$2
	*($0 + [12]) = $4
	*($0 + [8]) = $4
	*($0 + [16]) = $3
	
.LABEL $label$1
	if ( (($1 & [16]) == 0) ){ goto $label$4 }
	$1 = *($2)
	if ( ($1 & [1]) ){ goto $label$6 }
	$4 = uint_32($1 >> [1])
	*(($0 + [44])) = (($2 + $4) + [1])
	$1 = [10]
	goto $label$5 
	
.LABEL $label$6
	$4 = *(($0 + [36]))
	*(($0 + [44])) = (*(($0 + [40])) + $4)
	$1 = ((*($0 + [32]) & [-2]) + [-1])
	
.LABEL $label$5
	CALL $533($2, $1, [0])
	$1 = *($2)
	if ( ($1 & [1]) ){ goto $label$8 }
	$1 = uint_32($1 >> [1])
	$2 = ($2 + [1])
	goto $label$7 
	
.LABEL $label$8
	$1 = *(($0 + [36]))
	$2 = *(($0 + [40]))
	
.LABEL $label$7
	*($0 + [20]) = $2
	*($0 + [24]) = $2
	*($0 + [28]) = ($2 + $1)
	if ( ((*(($0 + [48])) & [3]) == 0) ){ goto $label$4 }
	*(($0 + [24])) = ($2 + $4)
	
.LABEL $label$4
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3) = [10556]
	*($3 + [8]) = [10396]
	*($3 + [64]) = [10576]
	*($3 + [4]) = [0]
	$5 = ($3 + [12])
	$4 = ($3 + [64])
	CALL $152($4, $5)
	*(($3 + [136])) = (int_64)-4294967296
	*($3) = [10376]
	*($3 + [64]) = [10416]
	*($3 + [8]) = [10396]
	$6 = CALL $155($5)
	*(($7 = ($3 + [44]))) = (int_64)0
	*(($3 + [52])) = (int_64)0
	*(($3 + [60])) = [24]
	*($3 + [12]) = [10640]
	*($3 + [152]) = [0]
	*($3 + [144]) = (int_64)0
	CALL $125($5, ($3 + [144]))
	if ( ((*($3 + [144]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [152])))
	
.LABEL $label$1
	*(($9 = ($5 + *(($8 = (*($3 + [8]) + [-12])))))) = ((*($9) & [-177]) | [128])
	*(($9 = ($5 + *($8)))) = ((*($9) & [-75]) | [8])
	*((($9 = ($3 + [84])) + *($8))) = [48]
	*((($10 = ($3 + [20])) + *($8))) = [2]
	$8 = ($3 + [8])
	CALL $177($8, *($2 + [7]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [6]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [5]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [4]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [3]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [2]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2 + [1]))
	*(($12 = ($5 + *(($11 = (*($3 + [8]) + [-12])))))) = ((*($12) & [-177]) | [128])
	*(($12 = ($5 + *($11)))) = ((*($12) & [-75]) | [8])
	*(($9 + *($11))) = [48]
	*(($10 + *($11))) = [2]
	CALL $177($8, *($2))
	CALL $126($0, $5)
	*($4) = [10416]
	*($5) = [10640]
	*($3) = [10376]
	*($3 + [8]) = [10396]
	if ( ((*($7) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($3 + [52])))
	
.LABEL $label$2
	CALL $153($6)
	CALL $178($3, [10436])
	CALL $149($4)
	$global$0 = ($3 + [160])
}

int_64 .FUNC $626 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $610($3, (int_64)0)
	$4 = CALL $619($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

void .FUNC $182 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [12]) = [11248]
	$1 = *(($0 + [52]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [12])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [48])
	$5 = ($0 + [44])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [40]))
	CALL $650(*(($0 + [44])))
	CALL $650(*(($0 + [48])))
	CALL $650(*(($0 + [60])))
	CALL $650(*(($0 + [72])))
	CALL _ZdlPv($0)
}

void .FUNC $491 (int_32 $0)
{
	if ( ((*([0] + [12372]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [12380]))
	
.LABEL $label$1
	if ( ((*([0] + [12360]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [12368]))
	
.LABEL $label$2
	if ( ((*([0] + [12348]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [12356]))
	
.LABEL $label$3
	if ( ((*([0] + [12336]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [12344]))
	
.LABEL $label$4
	if ( ((*([0] + [12324]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [12332]))
	
.LABEL $label$5
	if ( ((*([0] + [12312]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [12320]))
	
.LABEL $label$6
	if ( ((*([0] + [12300]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [12308]))
	
.LABEL $label$7
	if ( ((*([0] + [12288]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [12296]))
	
.LABEL $label$8
	if ( ((*([0] + [12276]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [12284]))
	
.LABEL $label$9
	if ( ((*([0] + [12264]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [12272]))
	
.LABEL $label$10
	if ( ((*([0] + [12252]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [12260]))
	
.LABEL $label$11
	if ( ((*([0] + [12240]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [12248]))
	
.LABEL $label$12
	if ( ((*([0] + [12228]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*([0] + [12236]))
	
.LABEL $label$13
	if ( ((*([0] + [12216]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*([0] + [12224]))
	
.LABEL $label$14
	if ( ((*([0] + [12204]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*([0] + [12212]))
	
.LABEL $label$15
	if ( ((*([0] + [12192]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*([0] + [12200]))
	
.LABEL $label$16
	if ( ((*([0] + [12180]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*([0] + [12188]))
	
.LABEL $label$17
	if ( ((*([0] + [12168]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*([0] + [12176]))
	
.LABEL $label$18
	if ( ((*([0] + [12156]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*([0] + [12164]))
	
.LABEL $label$19
	if ( ((*([0] + [12144]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*([0] + [12152]))
	
.LABEL $label$20
	if ( ((*([0] + [12132]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*([0] + [12140]))
	
.LABEL $label$21
	if ( ((*([0] + [12120]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*([0] + [12128]))
	
.LABEL $label$22
	if ( (*([0] + [12108]) & [1]) ){ goto $label$25 }
	if ( (*([0] + [12096]) & [1]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL _ZdlPv(*([0] + [12116]))
	if ( ((*([0] + [12096]) & [1]) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv(*([0] + [12104]))
	return 
	
.LABEL $label$23
}

void .FUNC $185 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = [11248]
	$1 = *($0 + [40])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = (($1 << [2]) + [-4])
	$3 = ($0 + [36])
	$4 = ($0 + [32])
	
.LOOP $label$2:
	CALL void [0]((int_32 $0), (int_32 *((*($3) + $2))), (int_32 *((*($4) + $2))))
	$2 = ($2 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [28]))
	CALL $650(*(($0 + [32])))
	CALL $650(*(($0 + [36])))
	CALL $650(*($0 + [48]))
	CALL $650(*($0 + [60]))
	CALL _ZdlPv($0)
}

int_32 .FUNC $490 (int_32 $0)
{
	if ( (*([0] + [11576]) == 0) ){ goto $label$1 }
	return *([0] + [11572])
	
.LABEL $label$1
	if ( *([0] + [12384]) ){ goto $label$2 }
	*([0] + [12096]) = (int_64)0
	*([0] + [12104]) = (int_64)0
	*([0] + [12112]) = (int_64)0
	*([0] + [12120]) = (int_64)0
	*([0] + [12128]) = (int_64)0
	*([0] + [12136]) = (int_64)0
	*([0] + [12144]) = (int_64)0
	*([0] + [12152]) = (int_64)0
	*([0] + [12160]) = (int_64)0
	*([0] + [12168]) = (int_64)0
	*([0] + [12176]) = (int_64)0
	*([0] + [12184]) = (int_64)0
	*([0] + [12192]) = (int_64)0
	*([0] + [12200]) = (int_64)0
	*([0] + [12208]) = (int_64)0
	*([0] + [12216]) = (int_64)0
	*([0] + [12224]) = [0]
	*([0] + [12228 align=4]) = (int_64)0
	*([0] + [12236 align=4]) = (int_64)0
	*([0] + [12244 align=4]) = (int_64)0
	*([0] + [12252 align=4]) = (int_64)0
	*([0] + [12260 align=4]) = (int_64)0
	*([0] + [12268 align=4]) = (int_64)0
	*([0] + [12276 align=4]) = (int_64)0
	*([0] + [12284 align=4]) = (int_64)0
	*([0] + [12292 align=4]) = (int_64)0
	*([0] + [12300 align=4]) = (int_64)0
	*([0] + [12308 align=4]) = (int_64)0
	*([0] + [12316 align=4]) = (int_64)0
	*([0] + [12324 align=4]) = (int_64)0
	*([0] + [12332 align=4]) = (int_64)0
	*([0] + [12340 align=4]) = (int_64)0
	*([0] + [12348 align=4]) = (int_64)0
	*([0] + [12356]) = [0]
	*([0] + [12360]) = (int_64)0
	*([0] + [12368]) = (int_64)0
	*([0] + [12376]) = (int_64)0
	CALL $567([65], [0], [8192])
	*([0] + [12384]) = [1]
	
.LABEL $label$2
	CALL $532([12096], [25564])
	CALL $532([12108], [25572])
	CALL $532([12120], [25581])
	CALL $532([12132], [25587])
	CALL $532([12144], [25593])
	CALL $532([12156], [25597])
	CALL $532([12168], [25602])
	CALL $532([12180], [25607])
	CALL $532([12192], [25614])
	CALL $532([12204], [25624])
	CALL $532([12216], [25632])
	CALL $532([12228], [25641])
	CALL $532([12240], [25650])
	CALL $532([12252], [25654])
	CALL $532([12264], [25658])
	CALL $532([12276], [25662])
	CALL $532([12288], [25593])
	CALL $532([12300], [25666])
	CALL $532([12312], [25670])
	CALL $532([12324], [25674])
	CALL $532([12336], [25678])
	CALL $532([12348], [25682])
	CALL $532([12360], [25686])
	CALL $532([12372], [25690])
	*([0] + [11576]) = [1]
	*([0] + [11572]) = [12096]
	return [12096]
}

void .FUNC $547 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $533(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $590(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8835], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $533(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $533(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $184 (int_32 $0)
{
	CALL $182(($0 + *((*($0) + [-12]))))
}

int_32 .FUNC $187 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $600 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($2 + [20])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	if ( CALL $599($2) ){ goto $label$2 }
	$4 = *($2 + [20])
	if ( ((*(($2 + [16])) - $4) <= $1) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$5 }
	$6 = [0]
	$5 = $0
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [1])
	$7 = ($5 + $1)
	$8 = ($5 + [-1])
	$5 = $8
	if ( ((int_32)*(($7 + [-1])) != (int_32)[10]) ){ goto $label$6 }
	$6 = (($1 - $3) + [1])
	$5 = CALL int_32 $2((int_32 $0), (int_32 $6), (int_32 *($2 + [36])))
	if ( ($5 <= $6) ){ goto $label$2 }
	$0 = (($8 + $1) + [1])
	$4 = *(($2 + [20]))
	$1 = ($3 + [-1])
	
.LABEL $label$5
	CALL memcpy($4, $0, $1)
	*(($3 = ($2 + [20]))) = (*($3) + $1)
	$5 = ($6 + $1)
	
.LABEL $label$2
	return $5
	return .LABEL $label$1
}

void .FUNC $542 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = [1]
	$3 = *($0)
	$4 = ($3 & [1])
	if ( ($4 == 0) ){ goto $label$6 }
	$2 = ((*($0) & [-2]) + [-1])
	$3 = *($0 + [4])
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = uint_32($3 >> [1])
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $541($0, $2, [1], $2, $2, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($3 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($3 << [1]) + [2])
	$0 = ($0 + [4])
	
.LABEL $label$1
	*(($0 = ($0 + ($3 << [2]))) + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $641 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $564())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $642($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $186 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $571 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = CALL $630($0, [61])
	$2 = ($1 - $0)
	if ( ($2 == 0) ){ goto $label$2 }
	if ( *($1) ){ goto $label$2 }
	$1 = *([0] + [14112])
	if ( ($1 == 0) ){ goto $label$2 }
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( CALL $633($0, $3, $2) ){ goto $label$4 }
	$3 = (*($1) + $2)
	if ( ((int_32)*($3) == (int_32)[61]) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = *($1 + [4])
	$1 = ($1 + [4])
	if ( $3 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 + [1])
}

int_32 .FUNC $555 (int_32 $0, int_32 $1)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $570 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = *($0)
	$6 = ((int_32)$5 == (int_32)[-1794895138])
	$4 = ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24])))
	$3 = *($0 + [8])
	$7 = ( $3 ? $4 : $6 )
	if ( ((uint_32)$7 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$10 = ($1 - ($7 << [2]))
	$8 = *($0 + [12])
	$9 = ( $8 ? ((($8 << [24]) | (($8 << [8]) & [16711680])) | ((uint_32($8 >> [8]) & [65280]) | uint_32($8 >> [24]))) : $6 )
	if ( ((uint_32)$9 >= (uint_32)$10) ){ goto $label$3 }
	$8 = *($0 + [16])
	$6 = ( $8 ? ((($8 << [24]) | (($8 << [8]) & [16711680])) | ((uint_32($8 >> [8]) & [65280]) | uint_32($8 >> [24]))) : $6 )
	if ( ((uint_32)$6 >= (uint_32)$10) ){ goto $label$2 }
	if ( ((($6 | $9) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$10 = uint_32($9 >> [2])
	if ( ((int_32)$5 != (int_32)[-1794895138]) ){ goto $label$16 }
	$9 = ($7 & [-2])
	$4 = ($0 + (($9 + $10) << [2]))
	$8 = *(($4 + [4]))
	if ( ((uint_32)$8 >= (uint_32)$1) ){ goto $label$15 }
	$11 = *($4)
	if ( ((uint_32)$11 >= (uint_32)($1 - $8)) ){ goto $label$14 }
	$7 = uint_32($7 >> [1])
	$4 = $7
	$12 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($8 + $11))) ){ goto $label$9 }
	$8 = CALL $631($2, ($0 + $8))
	if ( ($8 == 0) ){ goto $label$11 }
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$3 = ( $4 ? ($3 - $4) : $8 )
	$4 = uint_32($3 >> [1])
	$8 = ((int_32)$8 < (int_32)[0])
	$12 = ( $12 ? $7 : $8 )
	$7 = ($12 + $4)
	$9 = ($7 << [1])
	$11 = ($0 + (($9 + $10) << [2]))
	$8 = *(($11 + [4]))
	if ( ((uint_32)$8 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	if ( ($11 <= ($1 - $8)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$9 = ($4 & [-2])
	$8 = ($0 + (($9 + $10) << [2]))
	$3 = *(($8 + [4]))
	$3 = ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24])))
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$13 }
	$8 = *($8)
	$8 = ((($8 << [24]) | (($8 << [8]) & [16711680])) | ((uint_32($8 >> [8]) & [65280]) | uint_32($8 >> [24])))
	if ( ((uint_32)$8 >= (uint_32)($1 - $3)) ){ goto $label$12 }
	$11 = uint_32($4 >> [1])
	$7 = $11
	$12 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($3 + $8))) ){ goto $label$8 }
	$3 = CALL $631($2, ($0 + $3))
	if ( ($3 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$4 = ( $7 ? ($4 - $7) : $3 )
	$7 = uint_32($4 >> [1])
	$3 = ((int_32)$3 < (int_32)[0])
	$12 = ( $12 ? $11 : $3 )
	$11 = ($12 + $7)
	$9 = ($11 << [1])
	$8 = ($0 + (($9 + $10) << [2]))
	$3 = *(($8 + [4]))
	$3 = ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24])))
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	$8 = ((($8 << [24]) | (($8 << [8]) & [16711680])) | ((uint_32($8 >> [8]) & [65280]) | uint_32($8 >> [24])))
	if ( ($8 <= ($1 - $3)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$4 = ((int_32)$5 == (int_32)[-1794895138])
	$6 = ($0 + (($9 + uint_32($6 >> [2])) << [2]))
	$3 = *(($6 + [4]))
	$8 = ( $3 ? ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24]))) : $4 )
	if ( ((uint_32)$8 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$3 = *($6)
	$3 = ( $3 ? ((($3 << [24]) | (($3 << [8]) & [16711680])) | ((uint_32($3 >> [8]) & [65280]) | uint_32($3 >> [24]))) : $4 )
	if ( ((uint_32)$3 >= (uint_32)($1 - $8)) ){ goto $label$10 }
	return ( [0] ? ($0 + $8) : *(($0 + ($8 + $3))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_64 .FUNC $618 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)*($0 + [104])) ){ goto $label$7 }
	*(($0 + [4])) = ($2 + [1])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)[43]) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$3 = CALL $611($0)
	if ( ((int_32)$3 == (int_32)[43]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)[45]) ){ goto $label$5 }
	$4 = [0]
	$2 = $3
	$5 = [9]
	if ( ((uint_32)($3 + [-48]) > (uint_32)[9]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = ($0 + [4])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [104]))) ){ goto $label$10 }
	*($6) = ($2 + [1])
	$4 = ((int_32)$3 == (int_32)[45])
	$2 = *($2)
	$3 = ($2 + [-48])
	if ( ($1 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$4 = ((int_32)$3 == (int_32)[45])
	$2 = CALL $611($0)
	$3 = ($2 + [-48])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ($3 <= [10]) ){ goto $label$8 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$1 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	goto $label$4 
	
.LABEL $label$8
	$5 = [9]
	if ( ((uint_32)$3 <= (uint_32)[9]) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = (int_64)-9223372036854775808
	if ( (*(($0 + [104])) == 0) ){ goto $label$2 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	return (int_64)-9223372036854775808
	
.LABEL $label$3
	$3 = [0]
	$8 = ($0 + [104])
	$6 = ($0 + [4])
	
.LOOP $label$12:
	$2 = ($2 + ((int_32)$3 * (int_32)[10]))
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*($8)) ){ goto $label$14 }
	*($6) = ($1 + [1])
	$3 = ($2 + [-48])
	$2 = *($1)
	$1 = ($2 + [-48])
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$11 }
	goto $label$13 
	
.LABEL $label$14
	$3 = ($2 + [-48])
	$2 = CALL $611($0)
	$1 = ($2 + [-48])
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$11 }
	
.LABEL $label$13
	if ( ((int_32)$3 < (int_32)[214748364]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = (CASTING int_64)(int_32 $3)
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$15 }
	$1 = ($0 + [104])
	$3 = ($0 + [4])
	
.LOOP $label$17:
	$7 = ((int_64)(CASTING int_64)(int_32 $2) + (int_64)((int_64)$7 * (int_64)10))
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*($1)) ){ goto $label$19 }
	*($3) = ($2 + [1])
	$7 = ((int_64)$7 + (int_64)-48)
	$2 = *($2)
	$6 = ($2 + [-48])
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$16 }
	goto $label$18 
	
.LABEL $label$19
	$7 = ((int_64)$7 + (int_64)-48)
	$2 = CALL $611($0)
	$6 = ($2 + [-48])
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$16 }
	
.LABEL $label$18
	if ( ((int_64)$7 < (int_64)92233720368547758) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ((uint_32)$6 > (uint_32)[9]) ){ goto $label$15 }
	$1 = ($0 + [104])
	$3 = ($0 + [4])
	
.LOOP $label$20:
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*($1)) ){ goto $label$21 }
	*($3) = ($2 + [1])
	if ( ((*($2) + [-48]) <= [10]) ){ goto $label$20 }
	goto $label$15 
	
.LABEL $label$21
	if ( ((CALL $611($0) + [-48]) <= [10]) ){ goto $label$20 }
	
.LABEL $label$15
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($2 = ($0 + [4]))) = (*($2) + [-1])
	
.LABEL $label$22
	$7 = ( (int_64))((int_64)0 - $7) ? $7 : $4 )
	
.LABEL $label$2
	return $7
	
.LABEL $label$1
	return (int_64)-9223372036854775808
}

void .FUNC $358 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $359 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

int_32 .FUNC $608 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $478 (int_32 $0)
{
	return *($0 + [9])
}

void .FUNC $354 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $355 (int_32 $0)
{
	return [2147483647]
}

int_32 .FUNC $356 (int_32 $0)
{
	return [2147483647]
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

int_32 .FUNC $350 (int_32 $0)
{
	return [0]
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

void .FUNC $352 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

int_32 .FUNC $353 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $527 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $573 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($1)
	if ( $2 ){ goto $label$3 }
	$1 = CALL $571([8204])
	if ( ($1 == 0) ){ goto $label$4 }
	$2 = *($1)
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$4
	$1 = CALL $571((((int_32)$0 * (int_32)[12]) + [33056]))
	if ( ($1 == 0) ){ goto $label$5 }
	$2 = *($1)
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$5
	$5 = [67]
	$4 = [8417]
	$1 = CALL $571([8303])
	if ( ($1 == 0) ){ goto $label$2 }
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = $1
	$5 = $2
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = [1]
	$2 = *($4 + [1])
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = [2]
	$2 = *($4 + [2])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [3]
	$2 = *($4 + [3])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [4]
	$2 = *($4 + [4])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [5]
	$2 = *($4 + [5])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [6]
	$2 = *($4 + [6])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [7]
	$2 = *($4 + [7])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [8]
	$2 = *($4 + [8])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [9]
	$2 = *($4 + [9])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [10]
	$2 = *($4 + [10])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [11]
	$2 = *($4 + [11])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [12]
	$2 = *($4 + [12])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [13]
	$2 = *($4 + [13])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [14]
	$2 = *($4 + [14])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [15]
	$2 = *($4 + [15])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [16]
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [17]
	$2 = *($4 + [17])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [18]
	$2 = *($4 + [18])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [19]
	$2 = *($4 + [19])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [20]
	$2 = *($4 + [20])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [21]
	$2 = *($4 + [21])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [22]
	$2 = *($4 + [22])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 == (int_32)[47]) ){ goto $label$6 }
	$3 = [23]
	
.LABEL $label$6
	$1 = $4
	$2 = $5
	
.LABEL $label$1
	$4 = [8417]
	if ( ((int_32)$2 == (int_32)[46]) ){ goto $label$12 }
	if ( *(($1 + $3)) ){ goto $label$12 }
	$4 = $1
	if ( ((int_32)$2 != (int_32)[67]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($4 + [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( (CALL $631($4, [8417]) == 0) ){ goto $label$10 }
	if ( (CALL $631($4, [8434]) == 0) ){ goto $label$10 }
	$2 = *([0] + [14188])
	if ( ($2 == 0) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( (CALL $631($4, ($2 + [8])) == 0) ){ goto $label$9 }
	$2 = *($2 + [32])
	if ( $2 ){ goto $label$14 }
	
.LABEL $label$13
	CALL $639([14180])
	$2 = *([0] + [14188])
	if ( ($2 == 0) ){ goto $label$15 }
	
.LOOP $label$16:
	if ( (CALL $631($4, ($2 + [8])) == 0) ){ goto $label$7 }
	$2 = *($2 + [32])
	if ( $2 ){ goto $label$16 }
	
.LABEL $label$15
	if ( *([0] + [14124]) ){ goto $label$17 }
	CALL $571([8491])
	
.LABEL $label$17
	$2 = CALL $643([36])
	if ( ($2 == 0) ){ goto $label$18 }
	*($2) = *([0] + [32964 align=4])
	$1 = ($2 + [8])
	CALL memcpy($1, $4, $3)
	*(($1 + $3)) = [0]
	*($2 + [32]) = *([0] + [14188])
	*([0] + [14188]) = $2
	
.LABEL $label$18
	CALL $640([14180])
	return ( $2 ? [32964] : ($0 | $2) )
	
.LABEL $label$10
	if ( $0 ){ goto $label$8 }
	$2 = [32964]
	if ( ((int_32)*($4 + [1]) != (int_32)[46]) ){ goto $label$8 }
	
.LABEL $label$9
	return $2
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	CALL $640([14180])
	return $2
}

int_32 .FUNC $601 (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

void .FUNC $545 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $548($1, $0, [9394])
	CALL $550()
	(unreachable)
}

void .FUNC $526 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $628 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8736])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [8736])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $84(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $310 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = [1]
	$6 = *($0)
	if ( ($6 == 0) ){ goto $label$9 }
	$7 = *($6 + [12])
	if ( ((int_32)$7 == (int_32)*($6 + [16])) ){ goto $label$12 }
	if ( ((int_32)*($7) == (int_32)[-1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) != (int_32)[-1]) ){ goto $label$10 }
	
.LABEL $label$11
	*($0) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$5 = (*($0) == 0)
	
.LABEL $label$9
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$6 = *($1 + [12])
	if ( ((int_32)$6 == (int_32)*($1 + [16])) ){ goto $label$6 }
	$6 = ((int_32)*($6) == (int_32)[-1])
	if ( ((int_32)$5 ^ (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$7
	$6 = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( (((int_32)$5 ^ (int_32)$6) == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$6 = ( [0] ? $1 : $6 )
	
.LABEL $label$4
	$1 = *($0)
	$5 = *($1 + [12])
	if ( ((int_32)$5 == (int_32)*($1 + [16])) ){ goto $label$2 }
	$1 = *($5)
	goto $label$1 
	
.LABEL $label$3
	*($2) = (*($2) | [6])
	return [0]
	
.LABEL $label$2
	$1 = CALL int_32 $1((int_32 *(*($1) + [36])))
	
.LABEL $label$1
	if ( (CALL int_32 $3((int_32 [64]), (int_32 $1), (int_32 *(*($3) + [12]))) == 0) ){ goto $label$15 }
	$8 = CALL int_32 $3((int_32 $1), (int_32 [0]), (int_32 *(*($3) + [52])))
	$1 = *($0)
	$5 = *($1 + [12])
	if ( ((int_32)$5 == (int_32)*($1 + [16])) ){ goto $label$14 }
	*(($1 + [12])) = ($5 + [4])
	goto $label$13 
	
.LABEL $label$15
	*($2) = (*($2) | [4])
	return [0]
	
.LABEL $label$14
	CALL int_32 $1((int_32 *(*($1) + [40])))
	
.LABEL $label$13
	
.LOOP $label$18:
	$7 = [1]
	$1 = [0]
	$9 = [1]
	$5 = *($0)
	if ( ($5 == 0) ){ goto $label$24 }
	$1 = *($5 + [12])
	if ( ((int_32)$1 == (int_32)*($5 + [16])) ){ goto $label$27 }
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) != (int_32)[-1]) ){ goto $label$25 }
	
.LABEL $label$26
	$1 = [0]
	*($0) = [0]
	$9 = [1]
	if ( $6 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$1 = *($0)
	$9 = ($1 == 0)
	
.LABEL $label$24
	if ( ($6 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$5 = *($6 + [12])
	if ( ((int_32)$5 == (int_32)*($6 + [16])) ){ goto $label$21 }
	$5 = *($5)
	goto $label$20 
	
.LABEL $label$22
	$6 = [0]
	$5 = ($8 + [-48])
	if ( ((int_32)$4 >= (int_32)[2]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$21
	$5 = CALL int_32 $6((int_32 *(*($6) + [36])))
	$1 = *($0)
	
.LABEL $label$20
	$7 = ((int_32)$5 == (int_32)[-1])
	$6 = ( [0] ? $6 : $7 )
	$5 = ($8 + [-48])
	if ( ((int_32)$4 < (int_32)[2]) ){ goto $label$17 }
	
.LABEL $label$19
	if ( (((int_32)$9 ^ (int_32)$7) == 0) ){ goto $label$17 }
	$7 = *($1 + [12])
	if ( ((int_32)$7 == (int_32)*($1 + [16])) ){ goto $label$29 }
	$1 = *($7)
	if ( CALL int_32 $3((int_32 [64]), (int_32 $1), (int_32 *(*($3) + [12]))) ){ goto $label$28 }
	goto $label$16 
	
.LABEL $label$29
	$1 = CALL int_32 $1((int_32 *(*($1) + [36])))
	if ( (CALL int_32 $3((int_32 [64]), (int_32 $1), (int_32 *(*($3) + [12]))) == 0) ){ goto $label$16 }
	
.LABEL $label$28
	$4 = ($4 + [-1])
	$8 = (((int_32)$5 * (int_32)[10]) + CALL int_32 $3((int_32 $1), (int_32 [0]), (int_32 *(*($3) + [52]))))
	$1 = *($0)
	$5 = *($1 + [12])
	if ( ((int_32)$5 == (int_32)*($1 + [16])) ){ goto $label$30 }
	*(($1 + [12])) = ($5 + [4])
	goto $label$18 
	
.LABEL $label$30
	CALL int_32 $1((int_32 *(*($1) + [40])))
	goto $label$18 
	
.LABEL $label$17
	$3 = [1]
	if ( ($1 == 0) ){ goto $label$35 }
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)*($1 + [16])) ){ goto $label$38 }
	if ( ((int_32)*($4) == (int_32)[-1]) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$36 }
	
.LABEL $label$37
	*($0) = [0]
	if ( $6 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$3 = (*($0) == 0)
	
.LABEL $label$35
	if ( ($6 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$1 = *($6 + [12])
	if ( ((int_32)$1 == (int_32)*($6 + [16])) ){ goto $label$32 }
	if ( (((int_32)$3 ^ (int_32)((int_32)*($1) == (int_32)[-1])) == 0) ){ goto $label$31 }
	goto $label$16 
	
.LABEL $label$33
	if ( ($3 == 0) ){ goto $label$16 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$3 ^ (int_32)((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) == (int_32)[-1])) ){ goto $label$16 }
	
.LABEL $label$31
	*($2) = (*($2) | [2])
	
.LABEL $label$16
	return $5
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $650($0)
	
.LABEL $label$1
}

int_32 .FUNC $311 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [80])
	$global$0 = $8
	*($4) = [0]
	*($8 + [56]) = $1
	CALL $151(($8 + [48]), $3)
	$9 = *($8 + [48])
	*($8 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($8) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$2 }
	*($8 + [72]) = $8
	*($8 + [64]) = ($8 + [72])
	CALL $516([11492], ($8 + [64]), [60])
	$1 = *($8 + [48])
	goto $label$1 
	
.LABEL $label$2
	$1 = $9
	
.LABEL $label$1
	$10 = *([0] + [11496])
	$11 = *($1 + [4])
	*($1 + [4]) = ($11 + [-1])
	$9 = *(((*($9 + [16]) + ($10 << [2])) + [-4]))
	if ( $11 ){ goto $label$3 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$3
	$1 = ($6 + [-37])
	if ( ((uint_32)$1 > (uint_32)[84]) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$43
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [4])))
	$1 = (CALL $236(($8 + [56]), $2, $1, ($1 + [288]), $9, $4, [0]) - $1)
	if ( ((int_32)$1 > (int_32)[287]) ){ goto $label$4 }
	*($5 + [16]) = ((int_32)((int_32)$1 / (int_32)[12]) % (int_32)[12])
	goto $label$4 
	
.LABEL $label$42
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]))))
	$1 = (CALL $236(($8 + [56]), $2, $1, ($1 + [168]), $9, $4, [0]) - $1)
	if ( ((int_32)$1 > (int_32)[167]) ){ goto $label$4 }
	*($5 + [24]) = ((int_32)((int_32)$1 / (int_32)[12]) % (int_32)[7])
	goto $label$4 
	
.LABEL $label$41
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((uint_32)($1 + [-1]) > (uint_32)[30]) ){ goto $label$20 }
	if ( ($9 & [4]) ){ goto $label$20 }
	*($5 + [12]) = $1
	goto $label$4 
	
.LABEL $label$40
	CALL $312($0, ($8 + [56]), $2, $4, $9)
	goto $label$4 
	
.LABEL $label$39
	CALL $313($0, ($8 + [56]), $2, $4, $9)
	goto $label$4 
	
.LABEL $label$38
	*($4) = (*($4) | [4])
	goto $label$4 
	
.LABEL $label$37
	*(($8 + [24])) = *([0] + [23144])
	*(($8 + [16])) = *([0] + [23136])
	*($8 + [8]) = *([0] + [23128])
	*($8) = *([0] + [23120])
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $8, ($8 + [32]))
	goto $label$4 
	
.LABEL $label$36
	*(($8 + [24])) = *([0] + [23176])
	*(($8 + [16])) = *([0] + [23168])
	*($8 + [8]) = *([0] + [23160])
	*($8) = *([0] + [23152])
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $8, ($8 + [32]))
	goto $label$4 
	
.LABEL $label$35
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[23]) ){ goto $label$18 }
	if ( ($9 & [4]) ){ goto $label$18 }
	*($5 + [8]) = $1
	goto $label$4 
	
.LABEL $label$34
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((uint_32)($1 + [-1]) > (uint_32)[11]) ){ goto $label$17 }
	if ( ($9 & [4]) ){ goto $label$17 }
	*($5 + [8]) = $1
	goto $label$4 
	
.LABEL $label$33
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[59]) ){ goto $label$16 }
	if ( ($9 & [4]) ){ goto $label$16 }
	*($5 + [4]) = $1
	goto $label$4 
	
.LABEL $label$32
	*(($8 + [16])) = *([0] + [23248])
	*($8 + [8]) = *([0] + [23240])
	*($8) = *([0] + [23232])
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $8, ($8 + [20]))
	goto $label$4 
	
.LABEL $label$31
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[60]) ){ goto $label$15 }
	if ( ($9 & [4]) ){ goto $label$15 }
	*($5) = $1
	goto $label$4 
	
.LABEL $label$30
	*(($8 + [24])) = *([0] + [23288])
	*(($8 + [16])) = *([0] + [23280])
	*($8 + [8]) = *([0] + [23272])
	*($8) = *([0] + [23264])
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $8, ($8 + [32]))
	goto $label$4 
	
.LABEL $label$29
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [24])))
	$9 = *($1)
	$6 = ($9 & [1])
	$10 = ( *($1 + [8]) ? ($1 + [4]) : $6 )
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $10, ($10 + (( *($1 + [4]) ? uint_32($9 >> [1]) : $6 ) << [2])))
	goto $label$4 
	
.LABEL $label$28
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	*($5 + [20]) = ($1 + [-1900])
	goto $label$4 
	
.LABEL $label$27
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [12])))
	$9 = *($1)
	$6 = ($9 & [1])
	$10 = ( *($1 + [8]) ? ($1 + [4]) : $6 )
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $10, ($10 + (( *($1 + [4]) ? uint_32($9 >> [1]) : $6 ) << [2])))
	goto $label$4 
	
.LABEL $label$26
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [3])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[365]) ){ goto $label$14 }
	if ( ($9 & [4]) ){ goto $label$14 }
	*($5 + [28]) = $1
	goto $label$4 
	
.LABEL $label$25
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[12]) ){ goto $label$13 }
	if ( ($9 & [4]) ){ goto $label$13 }
	*($5 + [16]) = ($1 + [-1])
	goto $label$4 
	
.LABEL $label$24
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [8])))
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$12 }
	$3 = uint_32($3 >> [1])
	$6 = [1]
	$10 = *($1 + [12])
	if ( ($10 & [1]) ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$23
	*(($8 + [40])) = *([0] + [23224])
	*(($8 + [32])) = *([0] + [23216])
	*(($8 + [24])) = *([0] + [23208])
	*(($8 + [16])) = *([0] + [23200])
	*($8 + [8]) = *([0] + [23192])
	*($8) = *([0] + [23184])
	*($8 + [56]) = CALL $301($0, *($8 + [56]), $2, $3, $4, $5, $8, ($8 + [44]))
	goto $label$4 
	
.LABEL $label$22
	$1 = CALL int_32 $0((int_32 *($8 + [56])), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 *(*($0) + [20])))
	$global$0 = ($8 + [80])
	return $1
	
.LABEL $label$21
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	if ( ((int_32)$1 > (int_32)[68]) ){ goto $label$9 }
	$1 = ($1 + [2000])
	goto $label$8 
	
.LABEL $label$20
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$19
	$1 = CALL $310(($8 + [56]), $2, $4, $9, [1])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[6]) ){ goto $label$10 }
	if ( ($9 & [4]) ){ goto $label$10 }
	*($5 + [24]) = $1
	goto $label$4 
	
.LABEL $label$18
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$17
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$16
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$15
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$14
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$13
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$12
	$3 = *($1 + [4])
	$6 = [1]
	$10 = *($1 + [12])
	if ( (($10 & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$11
	$11 = [0]
	if ( ((int_32)$3 == (int_32)([0] - *(($1 + [16])))) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$10
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$9
	$1 = ( ($1 + [1900]) ? $1 : ((int_32)$1 < (int_32)[100]) )
	
.LABEL $label$8
	*(($5 + [20])) = ($1 + [-1900])
	goto $label$4 
	
.LABEL $label$7
	$11 = [0]
	if ( ((int_32)$3 != (int_32)([0] - uint_32($10 >> $6))) ){ goto $label$5 }
	
.LABEL $label$6
	*($4) = (*($4) | [4])
	goto $label$4 
	
.LABEL $label$5
	$1 = (CALL $236(($8 + [56]), $2, $1, ($1 + [24]), $9, $4, $11) - $1)
	$4 = *(($5 + [8]))
	if ( ((int_32)$4 != (int_32)[12]) ){ goto $label$44 }
	if ( $1 ){ goto $label$44 }
	*(($5 + [8])) = [0]
	goto $label$4 
	
.LABEL $label$44
	if ( ((int_32)$4 > (int_32)[11]) ){ goto $label$4 }
	if ( ((int_32)$1 != (int_32)[12]) ){ goto $label$4 }
	*(($5 + [8])) = ($4 + [12])
	
.LABEL $label$4
	$1 = *($8 + [56])
	$global$0 = ($8 + [80])
	$1
	return $1
}

void .FUNC $21 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [80])
	$global$0 = $7
	*($7 + [64]) = $4
	*($7 + [72]) = $1
	*($7 + [56]) = $5
	*($7 + [48]) = $6
	CALL require_auth(*($0))
	$8 = *($2)
	if ( ($8 & [1]) ){ goto $label$5 }
	$9 = ($2 + [1])
	$2 = uint_32($8 >> [1])
	if ( ((uint_32)$2 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = *($2 + [8])
	$2 = *($2 + [4])
	if ( ($2 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9160])
	goto $label$2 
	
.LABEL $label$3
	if ( $2 ){ goto $label$2 }
	$6 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LOOP $label$6:
	$10 = (($9 + $2) + [-1])
	$8 = *($10)
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9205])
	$8 = *($10)
	
.LABEL $label$7
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	$6 = ((int_64)$6 << (int_64)8)
	
.LABEL $label$1
	*($7 + [40]) = ((int_64)$6 | (int_64)((int_64)$3 & (int_64)255))
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$3 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$6 = $3
	$8 = [1]
	$10 = $2
	$2 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$6 = $3
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$2 < (int_32)[6])
	$10 = ($2 + [1])
	$2 = $10
	if ( $8 ){ goto $label$12 }
	$8 = [1]
	$2 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [9112])
	$8 = ($0 + [240])
	$6 = *(($0 + [248]))
	$3 = *($0 + [240])
	*($7 + [32]) = (int_64)0
	$2 = CALL db_lowerbound_i64($3, $6, (int_64)-4060986518620078080, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	$2 = CALL $46($8, $2)
	*($7 + [32]) = *($2)
	CALL eosio_assert([1], [9258])
	$2 = CALL db_next_i64(*($2 + [52]), ($7 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = CALL $46($8, $2)
	*($7 + [32]) = *($2)
	CALL eosio_assert([1], [9258])
	$2 = CALL db_next_i64(*($2 + [52]), ($7 + [8]))
	if ( ((int_32)$2 >= (int_32)[0]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = *($0)
	*($7 + [12]) = ($7 + [72])
	*($7 + [8]) = ($7 + [32])
	*($7 + [16]) = ($7 + [40])
	*($7 + [20]) = ($7 + [64])
	*($7 + [24]) = ($7 + [56])
	*($7 + [28]) = ($7 + [48])
	CALL $47($7, $8, $6, ($7 + [8]))
	$global$0 = ($7 + [80])
}

void .FUNC $20 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [120])
	$5 = *(($0 + [148]))
	$4 = *(($0 + [144]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [128])), (int_64)3617214760481587200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $57($3, $6)
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [11086])
	CALL eosio_assert($6, [9360])
	CALL eosio_assert($6, [9258])
	$6 = CALL db_next_i64(*($7 + [112]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $57($3, $6)
	
.LABEL $label$5
	CALL $71($3, $7)
	$global$0 = ($2 + [16])
}

void .FUNC $23 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [416])
	$global$0 = $5
	*($5 + [408]) = $1
	if ( ((int_64)*($0 + [360]) != (int_64)$2) ){ goto $label$1 }
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)*($0 + [368]) == (int_64)$1) ){ goto $label$1 }
	*($5 + [400]) = ($0 + [240])
	$6 = *($3 + [8])
	*($5 + [32]) = $6
	CALL $75(($5 + [112]), ($5 + [400]), ($5 + [32]))
	$7 = [0]
	$8 = [0]
	$9 = *($5 + [116])
	if ( ($9 == 0) ){ goto $label$2 }
	$8 = ( $9 ? [0] : ((int_64)*($5 + [32]) == (int_64)*($9 + [16])) )
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [10758])
	$10 = *($3)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$3 }
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$1 = $2
	$7 = [1]
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$1 = $2
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $7 ){ goto $label$7 }
	$7 = [1]
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	CALL eosio_assert($7, [10798])
	*($5 + [392]) = *($0 + [8])
	*(($5 + [120])) = [0]
	*($5 + [112]) = (int_64)0
	$9 = CALL $632([10819])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$19 }
	*($5 + [112]) = ($9 << [1])
	$7 = (($5 + [112]) | [1])
	if ( $9 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$11 = (($9 + [16]) & [-16])
	$7 = CALL _Znwj($11)
	*($5 + [112]) = ($11 | [1])
	*($5 + [120]) = $7
	*($5 + [116]) = $9
	
.LABEL $label$18
	CALL memcpy($7, [10819], $9)
	
.LABEL $label$17
	*(($7 + $9)) = [0]
	CALL $547(($5 + [32]), *($8 + [32]))
	$9 = *($5 + [32])
	$7 = ($9 & [1])
	$9 = CALL $536(($5 + [112]), ( *($5 + [40]) ? (($5 + [32]) | [1]) : $7 ), ( *($5 + [36]) ? uint_32($9 >> [1]) : $7 ))
	$7 = ($9 + [8])
	*((($5 + [376]) + [8])) = *($7)
	*($5 + [376]) = *($9)
	*($9) = (int_64)0
	*($7) = [0]
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*((($5 + [32]) + [8])))
	
.LABEL $label$20
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*($5 + [120]))
	
.LABEL $label$21
	CALL eosio_assert(((uint_64)$10 >= (uint_64)*(($8 + [32]))), ( *($5 + [384]) ? (($5 + [376]) | [1]) : (*($5 + [376]) & [1]) ))
	CALL $76($0)
	if ( ((int_64)*(($3 + [8])) != (int_64)*($0 + [400])) ){ goto $label$22 }
	*($5 + [112]) = *($3)
	$12 = ($0 + [160])
	$1 = *($0 + [64])
	$7 = *(($0 + [188]))
	$8 = *(($0 + [184]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$26:
	$9 = ($7 + [-24])
	$11 = *($9)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$25 }
	$7 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$24 }
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$12), [9052])
	goto $label$23 
	
.LABEL $label$24
	$11 = [0]
	$9 = CALL db_find_i64(*($12), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$23 }
	$11 = CALL $29($12, $9)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$12), [9052])
	
.LABEL $label$23
	$1 = *($0)
	*($5 + [32]) = ($5 + [112])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [8800])
	CALL $77($12, $11, $1, ($5 + [32]))
	
.LABEL $label$22
	*($5 + [368]) = [0]
	*($5 + [360]) = (int_64)0
	*($5 + [352]) = [0]
	*($5 + [344]) = (int_64)0
	*($5 + [336]) = [0]
	*($5 + [328]) = (int_64)0
	*($5 + [320]) = [0]
	*($5 + [312]) = (int_64)0
	CALL $78($0, $4, ($5 + [360]), ($5 + [344]), ($5 + [328]), ($5 + [312]))
	$1 = *(($0 + [368]))
	*($5 + [304]) = $1
	*($5 + [296]) = $1
	$9 = ( *($5 + [352]) ? (($5 + [344]) | [1]) : (*($5 + [344]) & [1]) )
	*($5 + [280]) = $9
	*($5 + [284]) = CALL $632($9)
	*($5 + [16]) = *($5 + [280])
	$9 = CALL $2(($5 + [288]), ($5 + [16]))
	$1 = *($9)
	if ( ((int_64)$1 == (int_64)*($0)) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)*($5 + [408])) ){ goto $label$27 }
	if ( (CALL is_account($1) == 0) ){ goto $label$27 }
	*($5 + [304]) = *($9)
	
.LABEL $label$27
	$9 = ( *(($5 + [320])) ? (($5 + [312]) | [1]) : (*($5 + [312]) & [1]) )
	*($5 + [264]) = $9
	*($5 + [268]) = CALL $632($9)
	*($5 + [8]) = *($5 + [264])
	$8 = ($0 + [280])
	$12 = CALL $2(($5 + [272]), ($5 + [8]))
	$1 = *($12)
	$7 = *(($0 + [308]))
	$11 = *(($0 + [304]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$30 }
	
.LOOP $label$32:
	$9 = ($7 + [-24])
	$4 = *($9)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$31 }
	$7 = $9
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$30 }
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)$8), [9052])
	if ( $4 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$9 = CALL db_find_i64(*($8), *(($0 + [288])), (int_64)-6219583600791126016, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	CALL eosio_assert(((int_32)*(CALL $50($8, $9) + [8]) == (int_32)$8), [9052])
	
.LABEL $label$29
	$1 = *($12)
	if ( ((int_64)$1 == (int_64)*($0)) ){ goto $label$28 }
	if ( (CALL is_account($1) == 0) ){ goto $label$28 }
	*($5 + [296]) = *($12)
	
.LABEL $label$28
	$9 = [0]
	$1 = CALL $546(($5 + [360]), [0], [10])
	*($5 + [256]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-2) <= (int_64)95), [10856])
	CALL eosio_assert(((uint_64)(int_64))(((uint_64)((int_64)((uint_64)((int_64))((int_64)10000 - *($0 + [32])) * (int_64)100) / (uint_64)((int_64)$1 + (int_64)-1)) * (int_64)$10) / (uint_64)(int_64)10000) - $10) <= (uint_64)CALL $79($0, *($5 + [392]), $6)), [10890])
	$7 = *($5 + [328])
	CALL sha256(($5 + [328]), ( *($5 + [332]) ? uint_32($7 >> [1]) : ($7 & [1]) ), ($5 + [224]))
	$7 = CALL read_transaction([0], [0])
	$11 = CALL $643($7)
	CALL read_transaction($11, $7)
	CALL sha256($11, $7, ($5 + [192]))
	*($5 + [184]) = [0]
	*($5 + [176]) = (int_64)0
	
.LOOP $label$33:
	$7 = *((($5 + [192]) + $9))
	CALL $535(($5 + [176]), *((uint_32($7 >> [4]) + [11014])))
	CALL $535(($5 + [176]), *((($7 & [15]) + [11014])))
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[32]) ){ goto $label$33 }
	*(($5 + [152])) = *($5 + [200])
	*((($5 + [112]) + [24])) = *((($5 + [224]) + [24]))
	*((($5 + [112]) + [16])) = *((($5 + [224]) + [16]))
	*(($5 + [160])) = *((($5 + [192]) + [16]))
	*(($5 + [168])) = *((($5 + [192]) + [24]))
	*($5 + [120]) = *($5 + [232])
	*($5 + [112]) = *($5 + [224])
	*($5 + [144]) = *($5 + [192])
	CALL sha256(($5 + [112]), [64], ($5 + [80]))
	*($5 + [72]) = ((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)*($5 + [193]) << (int_64)48) | (int_64)((int_64)*($5 + [192]) << (int_64)56)) | (int_64)((int_64)*($5 + [194]) << (int_64)40)) | (int_64)((int_64)*($5 + [195]) << (int_64)32)) | (int_64)((int_64)*($5 + [196]) << (int_64)24)) | (int_64)((int_64)*($5 + [197]) << (int_64)16)) | (int_64)((int_64)*($5 + [198]) << (int_64)8)) + (int_64)*($5 + [199]))
	$1 = *($0)
	*($5 + [52]) = $3
	*($5 + [36]) = ($5 + [408])
	*($5 + [32]) = ($5 + [72])
	*($5 + [40]) = ($5 + [304])
	*($5 + [44]) = ($5 + [296])
	*($5 + [48]) = ($5 + [392])
	*($5 + [56]) = ($5 + [256])
	*($5 + [60]) = ($5 + [80])
	*($5 + [64]) = ($5 + [176])
	CALL $80(($5 + [24]), ($0 + [120]), $1, ($5 + [32]))
	if ( (*($5 + [176]) & [1]) ){ goto $label$35 }
	if ( (*($5 + [312]) & [1]) ){ goto $label$34 }
	goto $label$15 
	
.LABEL $label$35
	CALL _ZdlPv(*(($5 + [184])))
	if ( ((*($5 + [312]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$34
	CALL _ZdlPv(*(($5 + [320])))
	$9 = [1]
	if ( ((*($5 + [328]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	CALL $526(($5 + [112]))
	
.LABEL $label$15
	$9 = [1]
	if ( (*($5 + [328]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($5 + [344]) & $9) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL _ZdlPv(*(($5 + [336])))
	if ( ((*($5 + [344]) & $9) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($5 + [352])))
	$9 = [1]
	if ( ((*($5 + [360]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$9 = [1]
	if ( (*($5 + [360]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($5 + [376]) & $9) == 0) ){ goto $label$1 }
	goto $label$8 
	
.LABEL $label$9
	CALL _ZdlPv(*(($5 + [368])))
	if ( ((*($5 + [376]) & $9) == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($5 + [384])))
	
.LABEL $label$1
	$global$0 = ($5 + [416])
	(unreachable)
}

int_32 .FUNC $22 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [544])
	$global$0 = $3
	*(($4 = $3) + [536]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [496])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [512]) = (int_64)0
	*($4 + [520]) = (int_64)0
	*($4 + [528]) = (int_64)0
	*($4 + [468]) = $2
	*($4 + [464]) = $2
	*($4 + [472]) = ($2 + $5)
	*($4 + [24]) = ($4 + [464])
	*($4 + [48]) = ($4 + [480])
	CALL $44(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [472])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [464])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $27(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [536])
	CALL $45(($4 + [24]), ($4 + [480]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $650($2)
	
.LABEL $label$4
	CALL $28($3)
	if ( ((*($4 + [488]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [496])))
	
.LABEL $label$5
	$global$0 = ($4 + [544])
	return [1]
}

void .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [240])
	$5 = *(($0 + [268]))
	$4 = *(($0 + [264]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [248])), (int_64)-4060986518620078080, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $46($3, $6)
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [9300])
	CALL eosio_assert($6, [9360])
	CALL eosio_assert($6, [9258])
	$6 = CALL db_next_i64(*($7 + [52]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $46($3, $6)
	
.LABEL $label$5
	CALL $48($3, $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $24 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [528])
	$global$0 = $3
	*(($4 = $3) + [520]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [496])) = (int_64)0
	*(($4 + [512])) = [0]
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $5)
	*($4 + [16]) = ($4 + [456])
	*($4 + [40]) = ($4 + [472])
	CALL $73(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [464])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [456])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $27(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [520])
	CALL $74(($4 + [16]), ($4 + [472]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $650($2)
	
.LABEL $label$4
	CALL $28($3)
	if ( ((*($4 + [504]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [512])))
	
.LABEL $label$5
	$global$0 = ($4 + [528])
	return [1]
}

int_32 .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($5 = (($4 + [80]) + [8]))) = *(($3 + [8]))
	*($4 + [80]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [96]) + [8])) = $3
	$2 = *($4 + [80])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [96]) = $2
	*($0 + [40]) = (int_64)1
	*($0 + [32]) = (int_64)200
	*($0 + [48]) = (int_64)2
	*($0 + [56]) = (int_64)3
	$2 = (int_64)4
	*($0 + [64]) = (int_64)4
	*($0 + [72]) = (int_64)5
	*($0 + [80]) = (int_64)6
	*($0 + [88]) = (int_64)7
	*($0 + [96]) = (int_64)8
	*($0 + [104]) = (int_64)9
	*($0 + [112]) = (int_64)10
	*($0 + [120]) = $1
	*(($0 + [128])) = $1
	*(($0 + [136])) = (int_64)-1
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = [0]
	*($0 + [160]) = $1
	*(($0 + [168])) = $1
	*(($0 + [176])) = (int_64)-1
	*(($0 + [184])) = (int_64)0
	*(($0 + [192])) = [0]
	*($0 + [200]) = $1
	*(($0 + [208])) = $1
	*(($0 + [216])) = (int_64)-1
	*(($0 + [224])) = (int_64)0
	*(($0 + [232])) = [0]
	*($0 + [240]) = $1
	*(($0 + [248])) = $1
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	*(($0 + [276])) = [0]
	*($0 + [280]) = $1
	*(($0 + [288])) = $1
	*(($0 + [296])) = (int_64)-1
	*(($0 + [304])) = [0]
	*($0 + [320]) = $1
	*(($0 + [308])) = (int_64)0
	*(($0 + [328])) = $1
	*(($0 + [336])) = (int_64)-1
	*(($0 + [344])) = (int_64)0
	*(($0 + [352])) = [0]
	*($4 + [72]) = [11107]
	*($4 + [76]) = CALL $632([11107])
	*($4 + [32]) = *($4 + [72])
	CALL $2(($0 + [360]), ($4 + [32]))
	*($4 + [64]) = [11124]
	*($4 + [68]) = CALL $632([11124])
	*($4 + [24]) = *($4 + [64])
	CALL $2(($0 + [368]), ($4 + [24]))
	*($4 + [56]) = [8231]
	*($4 + [60]) = CALL $632([8231])
	*($4 + [16]) = *($4 + [56])
	CALL $2(($0 + [376]), ($4 + [16]))
	*($4 + [48]) = [11141]
	*($4 + [52]) = CALL $632([11141])
	*($4 + [8]) = *($4 + [48])
	CALL $2(($0 + [384]), ($4 + [8]))
	*($4 + [40]) = [8192]
	*($4 + [44]) = CALL $632([8192])
	*($4) = *($4 + [40])
	CALL $2(($0 + [392]), $4)
	$3 = CALL $632([11158])
	if ( ($3 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [9160])
	goto $label$2 
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = (int_64)0
	
.LOOP $label$4:
	$5 = *(($3 + [11157]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [9205])
	
.LABEL $label$5
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$4 }
	$2 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*(($0 + [400])) = $2
	$3 = CALL $632([11166])
	if ( ($3 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [9160])
	goto $label$8 
	
.LABEL $label$9
	if ( ($3 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$1 = (int_64)0
	
.LOOP $label$10:
	$5 = *(($3 + [11165]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9205])
	
.LABEL $label$11
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$6 
	
.LABEL $label$7
	$1 = (int_64)4
	
.LABEL $label$6
	*(($0 + [408])) = $1
	$global$0 = ($4 + [112])
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0 + [368]))
	$3 = ($0 + [200])
	$4 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [200]), *(($0 + [208])), (int_64)-5069197016484020224, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $41($3, $5)
	
.LABEL $label$1
	$6 = *($0)
	*($2 + [8]) = $1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8800])
	CALL $42($3, $4, $6, ($2 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $329 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

int_32 .FUNC $328 (int_32 $0)
{
	return [0]
}

void .FUNC $544 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $548($1, $0, [9464])
	CALL $549()
	(unreachable)
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $193 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $470 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = $0
	if ( (($4 & [4]) == 0) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)($1 - $0) < (int_32)[3]) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)*($0) != (int_32)[239]) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)*($0 + [1]) != (int_32)[187]) ){ goto $label$1 }
	$5 = ( ($0 + [3]) ? $0 : ((int_32)*($0 + [2]) == (int_32)[191]) )
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	$6 = [1]
	
.LOOP $label$3:
	$7 = *($5)
	$4 = ($7 & [255])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	if ( ((uint_32)$4 > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$2 }
	goto $label$4 
	
.LABEL $label$5
	if ( ($4 <= [194]) ){ goto $label$2 }
	if ( ((uint_32)$4 > (uint_32)[223]) ){ goto $label$6 }
	if ( ((int_32)($1 - $5) < (int_32)[2]) ){ goto $label$2 }
	$7 = *($5 + [1])
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)(($7 & [63]) | (($4 << [6]) & [1984])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [2])
	if ( ($6 <= $2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((uint_32)$4 > (uint_32)[239]) ){ goto $label$13 }
	if ( ((int_32)($1 - $5) < (int_32)[3]) ){ goto $label$2 }
	$8 = *($5 + [2])
	$7 = *($5 + [1])
	if ( ((int_32)$4 == (int_32)[237]) ){ goto $label$12 }
	if ( ((int_32)$4 != (int_32)[224]) ){ goto $label$11 }
	if ( ((int_32)($7 & [224]) == (int_32)[160]) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$13
	if ( ((uint_32)$4 > (uint_32)[244]) ){ goto $label$2 }
	if ( ((int_32)($1 - $5) < (int_32)[4]) ){ goto $label$2 }
	$9 = *($5 + [3])
	$7 = *($5 + [2])
	$8 = *($5 + [1])
	if ( ((int_32)$4 == (int_32)[244]) ){ goto $label$9 }
	if ( ((int_32)$4 != (int_32)[240]) ){ goto $label$8 }
	if ( ((($8 + [112]) & [255]) <= [48]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_32)($7 & [224]) == (int_32)[128]) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$11
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	
.LABEL $label$10
	if ( ((int_32)($8 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)(((($7 & [63]) << [6]) | (($4 << [12]) & [61440])) | ($8 & [63])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [3])
	if ( ($6 <= $2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$9
	if ( ((int_32)($8 & [240]) == (int_32)[128]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$8
	if ( ((int_32)($8 & [192]) != (int_32)[128]) ){ goto $label$2 }
	
.LABEL $label$7
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((int_32)($9 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)((((($8 & [63]) << [12]) | (($4 << [18]) & [1835008])) | (($7 << [6]) & [4032])) | ($9 & [63])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$2 }
	
.LABEL $label$4
	$6 = ($6 + [1])
	if ( ($5 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return ($5 - $0)
}

void .FUNC $321 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $320 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $323 (int_32 $0)
{
	return [127]
}

int_32 .FUNC $322 (int_32 $0)
{
	return [127]
}

void .FUNC $325 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $324 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	*($0) = [2]
	CALL memset(($0 + [1]), [45], [1])
	*(($0 + [2])) = [0]
}

void .FUNC $326 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [24])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [9652])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $64($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [8736])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

void .FUNC $105 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = (int_64))(*($1 + [8]) - *(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

int_64 .FUNC $107 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [16]) = $5
	*($3 + [8]) = $1
	$0 = CALL db_find_i64($1, $5, (int_64)3607749779137757184, (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $114(($3 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($3 + [8])), [9052])
	$4 = *($0)
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($3 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$5 }
	CALL _ZdlPv($8)
	
.LABEL $label$5
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($3 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $6
	
.LABEL $label$2
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $4
}

int_32 .FUNC $28 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [344]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [348])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$6
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [344]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [304]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [308])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [304]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$1 = *(($0 + [264]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [268])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL _ZdlPv($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [264]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	$1 = *(($0 + [224]))
	if ( ($1 == 0) ){ goto $label$17 }
	$2 = ($0 + [228])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$21 }
	CALL _ZdlPv($4)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($0 + [224]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $1
	
.LABEL $label$18
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$17
	$1 = *(($0 + [184]))
	if ( ($1 == 0) ){ goto $label$22 }
	$2 = ($0 + [188])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	CALL _ZdlPv($4)
	
.LABEL $label$26
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$25 }
	$3 = *(($0 + [184]))
	goto $label$23 
	
.LABEL $label$24
	$3 = $1
	
.LABEL $label$23
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$22
	$1 = *(($0 + [144]))
	if ( ($1 == 0) ){ goto $label$27 }
	$2 = ($0 + [148])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$29 }
	
.LOOP $label$30:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$31 }
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*(($4 + [104])))
	
.LABEL $label$32
	CALL _ZdlPv($4)
	
.LABEL $label$31
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$30 }
	$3 = *(($0 + [144]))
	goto $label$28 
	
.LABEL $label$29
	$3 = $1
	
.LABEL $label$28
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$27
	return $0
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy($1, *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*(($1 + [32])) = *($2 + [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$3 = (*($0 + [4]) + [8])
	*($0 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $3) > (uint_32)[31]), [8736])
	CALL memcpy(($1 + [64]), *($0 + [4]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	$0 = CALL $55($0, ($1 + [96]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $140(*($0 + [4]), $1)
	$5 = *($1 + [16])
	$6 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [16])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [16])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	CALL eosio_assert(((int_32)$5 > (int_32)[7]), [8794])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert(((int_32)($5 + [-8]) > (int_32)[7]), [8794])
	CALL memcpy(($2 + [8]), ($1 + [8]), [8])
	*($3 + [4]) = ($2 + [16])
	CALL $111($3, $6)
	$7 = ((int_64)*($1 + [8]) + (int_64)*($1))
	*($1 + [32]) = CALL db_store_i64(*($4 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $7, $2, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $650($2)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [16])
}

int_32 .FUNC $459 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = $0
	if ( (($4 & [4]) == 0) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)($1 - $0) < (int_32)[3]) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)*($0) != (int_32)[239]) ){ goto $label$1 }
	$5 = $0
	if ( ((int_32)*($0 + [1]) != (int_32)[187]) ){ goto $label$1 }
	$5 = ( ($0 + [3]) ? $0 : ((int_32)*($0 + [2]) == (int_32)[191]) )
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	$6 = [0]
	
.LOOP $label$3:
	$4 = *($5)
	if ( ((uint_32)$4 > (uint_32)$3) ){ goto $label$2 }
	if ( ((int_32)int_32(($4 << [24]) >> [24]) < (int_32)[0]) ){ goto $label$5 }
	$5 = ($5 + [1])
	$6 = ($6 + [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$2 }
	goto $label$4 
	
.LABEL $label$5
	if ( ($4 <= [194]) ){ goto $label$2 }
	if ( ((uint_32)$4 > (uint_32)[223]) ){ goto $label$6 }
	if ( ((int_32)($1 - $5) < (int_32)[2]) ){ goto $label$2 }
	$7 = *($5 + [1])
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)(($7 & [63]) | (($4 << [6]) & [1984])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [2])
	$6 = ($6 + [1])
	if ( ($6 <= $2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((uint_32)$4 > (uint_32)[239]) ){ goto $label$13 }
	if ( ((int_32)($1 - $5) < (int_32)[3]) ){ goto $label$2 }
	$8 = *($5 + [2])
	$7 = *($5 + [1])
	if ( ((int_32)$4 == (int_32)[237]) ){ goto $label$12 }
	if ( ((int_32)$4 != (int_32)[224]) ){ goto $label$11 }
	if ( ((int_32)($7 & [224]) == (int_32)[160]) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$13
	if ( ((uint_32)$4 > (uint_32)[244]) ){ goto $label$2 }
	if ( (($2 - $6) <= [2]) ){ goto $label$2 }
	if ( ((int_32)($1 - $5) < (int_32)[4]) ){ goto $label$2 }
	$9 = *($5 + [3])
	$7 = *($5 + [2])
	$8 = *($5 + [1])
	if ( ((int_32)$4 == (int_32)[244]) ){ goto $label$9 }
	if ( ((int_32)$4 != (int_32)[240]) ){ goto $label$8 }
	if ( ((($8 + [112]) & [255]) <= [48]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_32)($7 & [224]) == (int_32)[128]) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$11
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	
.LABEL $label$10
	if ( ((int_32)($8 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)(((($7 & [63]) << [6]) | (($4 << [12]) & [61440])) | ($8 & [63])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [3])
	$6 = ($6 + [1])
	if ( ($6 <= $2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$9
	if ( ((int_32)($8 & [240]) == (int_32)[128]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$8
	if ( ((int_32)($8 & [192]) != (int_32)[128]) ){ goto $label$2 }
	
.LABEL $label$7
	if ( ((int_32)($7 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((int_32)($9 & [192]) != (int_32)[128]) ){ goto $label$2 }
	if ( ((uint_32)((((($8 & [63]) << [12]) | (($4 << [18]) & [1835008])) | (($7 << [6]) & [4032])) | ($9 & [63])) > (uint_32)$3) ){ goto $label$2 }
	$5 = ($5 + [4])
	$6 = (($6 + [1]) + [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$2 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return ($5 - $0)
}

int_32 .FUNC $458 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	return CALL $459($2, $3, $4, [1114111], [0])
}

void .FUNC $318 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $643($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [13824])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $643($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC $319 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL eosio_assert([0], [8244])
	return (unreachable)
}

int_32 .FUNC $512 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11728]) == 0) ){ goto $label$1 }
	return [11716]
	
.LABEL $label$1
	*([0] + [11716 align=4]) = (int_64)0
	*([0] + [11724]) = [0]
	$1 = CALL $635([9900])
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[2]) ){ goto $label$6 }
	*([0] + [11716]) = ($1 << [1])
	$2 = [11720]
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [4]) & [-4])
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$2 = CALL _Znwj(($3 << [2]))
	*([0] + [11716]) = ($3 | [1])
	*([0] + [11724]) = $2
	*([0] + [11720]) = $1
	
.LABEL $label$5
	CALL $636($2, [9900], $1)
	
.LABEL $label$4
	*(($2 + ($1 << [2]))) = [0]
	CALL $567([76], [0], [8192])
	*([0] + [11728]) = [1]
	return [11716]
	
.LABEL $label$3
	CALL $526([11716])
	
.LABEL $label$2
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $513 (int_32 $0)
{
	if ( ((*([0] + [11716]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11724]))
	
.LABEL $label$1
}

int_32 .FUNC $510 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11712]) == 0) ){ goto $label$1 }
	return [11700]
	
.LABEL $label$1
	*([0] + [11700 align=4]) = (int_64)0
	*([0] + [11708]) = [0]
	$1 = CALL $632([9851])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [11700]) = ($1 << [1])
	$2 = [11701]
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL _Znwj($3)
	*([0] + [11700]) = ($3 | [1])
	*([0] + [11708]) = $2
	*([0] + [11704]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [9851], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	CALL $567([75], [0], [8192])
	*([0] + [11712]) = [1]
	return [11700]
	
.LABEL $label$2
	CALL $526([11700])
	return (unreachable)
}

int_32 .FUNC $476 (int_32 $0)
{
	return *($0 + [8])
}

void .FUNC $516 (int_32 $0, int_32 $1, int_32 $2)
{
	if ( (*($0) == 0) ){ goto $label$1 }
	return 
	
.LABEL $label$1
	*($0) = [1]
	CALL void $1((int_32 $2))
	*($0) = [-1]
}

void .FUNC $517 ()
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $514 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*($0) = [24872]
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

int_32 .FUNC $515 (int_32 $0)
{
	return $0
}

void .FUNC $497 (int_32 $0)
{
	if ( ((*([0] + [13284]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [13292]))
	
.LABEL $label$1
	if ( ((*([0] + [13272]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*([0] + [13280]))
	
.LABEL $label$2
	if ( ((*([0] + [13260]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*([0] + [13268]))
	
.LABEL $label$3
	if ( ((*([0] + [13248]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*([0] + [13256]))
	
.LABEL $label$4
	if ( ((*([0] + [13236]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*([0] + [13244]))
	
.LABEL $label$5
	if ( ((*([0] + [13224]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*([0] + [13232]))
	
.LABEL $label$6
	if ( ((*([0] + [13212]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*([0] + [13220]))
	
.LABEL $label$7
	if ( ((*([0] + [13200]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*([0] + [13208]))
	
.LABEL $label$8
	if ( ((*([0] + [13188]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*([0] + [13196]))
	
.LABEL $label$9
	if ( ((*([0] + [13176]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*([0] + [13184]))
	
.LABEL $label$10
	if ( ((*([0] + [13164]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*([0] + [13172]))
	
.LABEL $label$11
	if ( ((*([0] + [13152]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*([0] + [13160]))
	
.LABEL $label$12
	if ( ((*([0] + [13140]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*([0] + [13148]))
	
.LABEL $label$13
	if ( ((*([0] + [13128]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*([0] + [13136]))
	
.LABEL $label$14
	if ( ((*([0] + [13116]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*([0] + [13124]))
	
.LABEL $label$15
	if ( ((*([0] + [13104]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*([0] + [13112]))
	
.LABEL $label$16
	if ( ((*([0] + [13092]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*([0] + [13100]))
	
.LABEL $label$17
	if ( ((*([0] + [13080]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*([0] + [13088]))
	
.LABEL $label$18
	if ( ((*([0] + [13068]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*([0] + [13076]))
	
.LABEL $label$19
	if ( ((*([0] + [13056]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*([0] + [13064]))
	
.LABEL $label$20
	if ( ((*([0] + [13044]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*([0] + [13052]))
	
.LABEL $label$21
	if ( ((*([0] + [13032]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*([0] + [13040]))
	
.LABEL $label$22
	if ( (*([0] + [13020]) & [1]) ){ goto $label$25 }
	if ( (*([0] + [13008]) & [1]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL _ZdlPv(*([0] + [13028]))
	if ( ((*([0] + [13008]) & [1]) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv(*([0] + [13016]))
	return 
	
.LABEL $label$23
}

int_32 .FUNC $422 (int_32 $0, int_32 $1, int_32 $2)
{
	return int_32((( $1 ? $2 : ($1 <= [128]) ) << [24]) >> [24])
}

int_32 .FUNC $599 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $215 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $216($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

int_32 .FUNC $214 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $215($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $217 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $218($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $216 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$3 }
	if ( ((int_32)*($0) != (int_32)[45]) ){ goto $label$2 }
	*($2) = [4]
	goto $label$1 
	
.LABEL $label$3
	*($2) = [4]
	goto $label$1 
	
.LABEL $label$2
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( *([0] + [11460]) ){ goto $label$4 }
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	
.LABEL $label$4
	$6 = CALL $626($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((int_32)*($4 + [12]) == (int_32)$1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	*(CALL $564()) = $5
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((uint_64)$6 > (uint_64)(int_64)4294967295) ){ goto $label$8 }
	if ( ((int_32)$0 == (int_32)[34]) ){ goto $label$8 }
	$global$0 = ($4 + [16])
	return (CASTING uint_32)(uint_64 $6)
	
.LABEL $label$8
	*($2) = [4]
	$global$0 = ($4 + [16])
	return [-1]
	
.LABEL $label$5
	*($2) = [4]
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return [0]
}

int_32 .FUNC $211 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $212($0, $1, $2, $3, $4, $5)
}

int_64 .FUNC $210 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$5 }
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( (*([0] + [11460]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($2) = [4]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	
.LABEL $label$3
	$6 = CALL $627($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((int_32)*($4 + [12]) == (int_32)$1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	*(CALL $564()) = $5
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)[34]) ){ goto $label$1 }
	*($2) = [4]
	$global$0 = ($4 + [16])
	return ( (int_64)9223372036854775807 ? (int_64)-9223372036854775808 : ((int_64)$6 > (int_64)0) )
	
.LABEL $label$6
	*($2) = [4]
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return $6
}

int_32 .FUNC $213 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	if ( ((int_32)*($0) != (int_32)[45]) ){ goto $label$3 }
	*($2) = [4]
	goto $label$2 
	
.LABEL $label$4
	*($2) = [4]
	goto $label$2 
	
.LABEL $label$3
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( *([0] + [11460]) ){ goto $label$5 }
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	
.LABEL $label$5
	$6 = CALL $626($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((int_32)*($4 + [12]) == (int_32)$1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	*(CALL $564()) = $5
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((uint_64)$6 > (uint_64)(int_64)65535) ){ goto $label$9 }
	if ( ((int_32)$0 == (int_32)[34]) ){ goto $label$9 }
	$0 = (CASTING uint_32)(uint_64 $6)
	goto $label$1 
	
.LABEL $label$9
	*($2) = [4]
	$0 = [65535]
	goto $label$1 
	
.LABEL $label$6
	*($2) = [4]
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return ($0 & [65535])
}

int_32 .FUNC $223 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $224($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $196 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = [0]
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$3 = (*($1) + ($3 << [4]))
	$4 = ($3 & [-268435456])
	$3 = ((int_32)(uint_32($4 >> [24]) | $4) ^ (int_32)$3)
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $197 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = [-1]
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$2 }
	$7 = *($3)
	$6 = *($1)
	if ( ((int_32)$6 < (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$1 }
	$1 = ($1 + [4])
	$3 = ($3 + [4])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$3
	$5 = ((int_32)$1 != (int_32)$2)
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	return [1]
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = ($3 - $2)
	$5 = int_32($4 >> [2])
	if ( ((uint_32)$5 >= (uint_32)[1073741808]) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[1]) ){ goto $label$5 }
	*($0) = uint_32($4 >> [1])
	$4 = ($0 + [4])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$6 = (($5 + [4]) & [-4])
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$4 = CALL _Znwj(($6 << [2]))
	*($0) = ($6 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $5
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	
.LABEL $label$4
	$5 = (($3 + [-4]) - $2)
	$0 = $4
	
.LOOP $label$6:
	*($0) = *($2)
	$0 = ($0 + [4])
	$2 = ($2 + [4])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	*((($4 + ($5 & [-4])) + [4])) = [0]
	return (unreachable)
	
.LABEL $label$3
	CALL $526($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*($4) = [0]
	(unreachable)
}

int_32 .FUNC $219 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$3 }
	if ( ((int_32)*($0) != (int_32)[45]) ){ goto $label$2 }
	*($2) = [4]
	goto $label$1 
	
.LABEL $label$3
	*($2) = [4]
	goto $label$1 
	
.LABEL $label$2
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( *([0] + [11460]) ){ goto $label$4 }
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	
.LABEL $label$4
	$6 = CALL $626($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((int_32)*($4 + [12]) == (int_32)$1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	*(CALL $564()) = $5
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((uint_64)$6 > (uint_64)(int_64)4294967295) ){ goto $label$8 }
	if ( ((int_32)$0 == (int_32)[34]) ){ goto $label$8 }
	$global$0 = ($4 + [16])
	return (CASTING uint_32)(uint_64 $6)
	
.LABEL $label$8
	*($2) = [4]
	$global$0 = ($4 + [16])
	return [-1]
	
.LABEL $label$5
	*($2) = [4]
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return [0]
}

int_32 .FUNC $218 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $219($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = ($3 - $2)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$5 = ($0 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($0) = ($6 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	
.LABEL $label$3
	$0 = $5
	
.LOOP $label$5:
	*($0) = *($2)
	$0 = ($0 + [1])
	$2 = ($2 + [1])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$5 }
	*(($5 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$2
	CALL $526($0)
	
.LABEL $label$1
	*($5) = [0]
}

int_32 .FUNC $191 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = [0]
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$3 = (($3 << [4]) + *($1))
	$4 = ($3 & [-268435456])
	$3 = ((int_32)(uint_32($4 >> [24]) | $4) ^ (int_32)$3)
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $620 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return (*($0) == 0)
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC $378 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = [1]
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$7 = uint_32($5 >> [1])
	$8 = $5
	$9 = ($2 - $1)
	if ( ($9 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = *($0)
	$4 = (($8 & [-2]) + [-1])
	$7 = *($0 + [4])
	$9 = ($2 - $1)
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( $6 ){ goto $label$11 }
	$5 = uint_32($5 >> [1])
	$6 = int_32($9 >> [2])
	$10 = ($0 + [4])
	if ( ((uint_32)$10 <= (uint_32)$1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = *($0 + [4])
	$6 = int_32($9 >> [2])
	$10 = *($0 + [8])
	if ( ((uint_32)$10 > (uint_32)$1) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((uint_32)($10 + ($5 << [2])) <= (uint_32)$1) ){ goto $label$9 }
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[1073741808]) ){ goto $label$2 }
	if ( ((uint_32)$6 > (uint_32)[1]) ){ goto $label$8 }
	*($3) = uint_32($9 >> [1])
	$7 = ($3 | [4])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((uint_32)($4 - $7) >= (uint_32)$6) ){ goto $label$12 }
	CALL $541($0, $4, (($7 + $6) - $4), $7, $7, [0], [0])
	$8 = *($0)
	
.LABEL $label$12
	if ( ($8 & [1]) ){ goto $label$14 }
	$4 = ($0 + [4])
	goto $label$13 
	
.LABEL $label$14
	$4 = *($0 + [8])
	
.LABEL $label$13
	$5 = ($4 + ($7 << [2]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$15 }
	$9 = (($7 + uint_32((($2 + [-4]) - $1) >> [2])) + [1])
	
.LOOP $label$16:
	*($5) = *($1)
	$5 = ($5 + [4])
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$16 }
	$5 = ($4 + ($9 << [2]))
	
.LABEL $label$15
	*($5) = [0]
	$1 = ($7 + $6)
	if ( (*($0) & [1]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$17
	*($0 + [4]) = $1
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$8
	$5 = (($6 + [4]) & [-4])
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = CALL _Znwj(($5 << [2]))
	*($3) = ($5 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $6
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = (($2 + [-4]) - $1)
	$5 = $7
	
.LOOP $label$18:
	*($5) = *($1)
	$5 = ($5 + [4])
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$18 }
	$7 = (($7 + ($6 & [-4])) + [4])
	
.LABEL $label$6
	*($7) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	CALL $543($0, ( *($3 + [8]) ? ($3 | [4]) : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$2
	CALL $526($3)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $379 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $548 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $632($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $530($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC $372 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $373 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $370 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	$7 = ($global$0 - [160])
	$global$0 = $7
	*($7 + [120]) = $1
	*($7 + [12]) = [61]
	*($7 + [8]) = ($7 + [16])
	CALL $151($7, $4)
	$1 = *($7)
	*($7 + [132 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [128]) = [11500]
	$8 = ($7 + [116])
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [152]) = ($7 + [128])
	*($7 + [144]) = ($7 + [152])
	CALL $516([11500], ($7 + [144]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	*($7 + [152]) = [0]
	if ( (CALL $368(($7 + [120]), $2, $3, $7, *($4 + [4]), $5, ($7 + [152]), $1, ($7 + [8]), ($7 + [128]), $8) == 0) ){ goto $label$2 }
	if ( (*($6) & [1]) ){ goto $label$5 }
	*($6) = [0]
	if ( *($7 + [152]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	if ( (*($7 + [152]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $535($6, CALL int_32 $1((int_32 [45]), (int_32 *(*($1) + [28]))))
	
.LABEL $label$3
	$3 = CALL int_32 $1((int_32 [48]), (int_32 *(*($1) + [28])))
	$8 = *($7 + [128])
	$4 = ($8 + [-1])
	$1 = *($7 + [8])
	if ( ((uint_32)$1 >= (uint_32)$4) ){ goto $label$6 }
	$3 = ($3 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($1) != (int_32)$3) ){ goto $label$6 }
	$1 = ($1 + [1])
	if ( ($1 <= $4) ){ goto $label$7 }
	
.LABEL $label$6
	CALL $371($6, $1, $8)
	
.LABEL $label$2
	$1 = *($7 + [120])
	if ( ($1 == 0) ){ goto $label$13 }
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$12 }
	if ( ($2 == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$1 = [0]
	if ( $2 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) ){ goto $label$14 }
	$1 = *($7 + [120])
	if ( $2 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$14
	$1 = [0]
	*($7 + [120]) = [0]
	if ( $2 ){ goto $label$10 }
	
.LABEL $label$11
	if ( $1 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$15 }
	if ( ($1 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$15
	if ( ((int_32)($1 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$8 }
	
.LABEL $label$9
	*($5) = (*($5) | [2])
	
.LABEL $label$8
	$2 = *($7 + [120])
	$4 = *($1 + [4])
	*(($1 = *($7)) + [4]) = ($4 + [-1])
	if ( $4 ){ goto $label$16 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$16
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	CALL void $1((int_32 *($7 + [12])))
	
.LABEL $label$17
	$global$0 = ($7 + [160])
	return $2
}

int_32 .FUNC $371 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$4 }
	$6 = uint_32($4 >> [1])
	$7 = [10]
	$8 = $4
	$9 = ($2 - $1)
	if ( ($9 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$8 = *($0)
	$7 = (($8 & [-2]) + [-1])
	$6 = *($0 + [4])
	$9 = ($2 - $1)
	if ( ($9 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( $5 ){ goto $label$10 }
	$4 = uint_32($4 >> [1])
	$5 = ($0 + [1])
	if ( ((uint_32)$5 > (uint_32)$1) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$4 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((uint_32)$5 > (uint_32)$1) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((uint_32)($5 + $4) <= (uint_32)$1) ){ goto $label$8 }
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$9 > (uint_32)[10]) ){ goto $label$7 }
	*($3) = ($9 << [1])
	$6 = ($3 | [1])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	if ( ((uint_32)($7 - $6) >= (uint_32)$9) ){ goto $label$11 }
	CALL $534($0, $7, (($6 + $9) - $7), $6, $6, [0], [0])
	$8 = *($0)
	
.LABEL $label$11
	if ( ($8 & [1]) ){ goto $label$14 }
	$5 = ($0 + [1])
	$4 = ($5 + $6)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$5 = *($0 + [8])
	$4 = ($5 + $6)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = ($2 + ($6 - $1))
	
.LOOP $label$15:
	*($4) = *($1)
	$4 = ($4 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$15 }
	$4 = ($5 + $7)
	
.LABEL $label$12
	*($4) = [0]
	$1 = ($6 + $9)
	if ( (*($0) & [1]) ){ goto $label$16 }
	*($0) = ($1 << [1])
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$16
	*($0 + [4]) = $1
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$7
	$4 = (($9 + [16]) & [-16])
	$6 = CALL _Znwj($4)
	*($3) = ($4 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $9
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = $6
	
.LOOP $label$17:
	*($4) = *($1)
	$4 = ($4 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$17 }
	$6 = ($6 + $9)
	
.LABEL $label$5
	*($6) = [0]
	$1 = *($3)
	$4 = ($1 & [1])
	CALL $536($0, ( *($3 + [8]) ? ($3 | [1]) : $4 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $4 ))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$2
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$1
	CALL $526($3)
	return (unreachable)
}

void .FUNC $376 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	$10 = ($global$0 - [32])
	$global$0 = $10
	if ( ($0 == 0) ){ goto $label$18 }
	$0 = *($1)
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($10) = [11400]
	if ( ((int_32)*([0] + [11400]) == (int_32)[-1]) ){ goto $label$19 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11400], ($10 + [16]), [60])
	
.LABEL $label$19
	$0 = *(((*($0 + [16]) + (*([0] + [11404]) << [2])) + [-4]))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($2) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$17 }
	*($8) = [0]
	goto $label$16 
	
.LABEL $label$18
	$0 = *($1)
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($10) = [11392]
	if ( ((int_32)*([0] + [11392]) == (int_32)[-1]) ){ goto $label$20 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11392], ($10 + [16]), [60])
	
.LABEL $label$20
	$0 = *(((*($0 + [16]) + (*([0] + [11396]) << [2])) + [-4]))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($2) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$15 }
	*($8) = [0]
	goto $label$14 
	
.LABEL $label$17
	*(*($8 + [8])) = [0]
	
.LABEL $label$16
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($7) & [1]) ){ goto $label$13 }
	*($7) = [0]
	goto $label$12 
	
.LABEL $label$15
	*(*($8 + [8])) = [0]
	
.LABEL $label$14
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($7) & [1]) ){ goto $label$11 }
	*($7) = [0]
	goto $label$10 
	
.LABEL $label$13
	*(*($7 + [8])) = [0]
	
.LABEL $label$12
	*($7 + [4]) = [0]
	CALL $539($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	*($3) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($4) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($5) & [1]) ){ goto $label$9 }
	*($5) = [0]
	goto $label$8 
	
.LABEL $label$11
	*(*($7 + [8])) = [0]
	
.LABEL $label$10
	*($7 + [4]) = [0]
	CALL $539($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	*($3) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($4) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($5) & [1]) ){ goto $label$7 }
	*($5) = [0]
	goto $label$6 
	
.LABEL $label$9
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$8
	CALL $531($5, [0])
	*(($5 + [8])) = *(($10 + [8]))
	*($5) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($6) & [1]) ){ goto $label$5 }
	*($6) = [0]
	goto $label$4 
	
.LABEL $label$7
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$6
	CALL $531($5, [0])
	*(($5 + [8])) = *(($10 + [8]))
	*($5) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($6) & [1]) ){ goto $label$3 }
	*($6) = [0]
	goto $label$2 
	
.LABEL $label$5
	*(*($6 + [8])) = [0]
	
.LABEL $label$4
	*($6 + [4]) = [0]
	CALL $539($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	goto $label$1 
	
.LABEL $label$3
	*(*($6 + [8])) = [0]
	
.LABEL $label$2
	*($6 + [4]) = [0]
	CALL $539($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	
.LABEL $label$1
	*($9) = $0
	$global$0 = ($10 + [32])
}

int_32 .FUNC $377 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	$7 = ($global$0 - [464])
	$global$0 = $7
	*($7 + [424]) = $1
	*($7 + [12]) = [61]
	*($7 + [8]) = ($7 + [16])
	CALL $151($7, $4)
	$1 = *($7)
	*($7 + [436 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [432]) = [11492]
	$8 = ($7 + [416])
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [456]) = ($7 + [432])
	*($7 + [448]) = ($7 + [456])
	CALL $516([11492], ($7 + [448]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	*($7 + [456]) = [0]
	if ( (CALL $375(($7 + [424]), $2, $3, $7, *($4 + [4]), $5, ($7 + [456]), $1, ($7 + [8]), ($7 + [432]), $8) == 0) ){ goto $label$2 }
	if ( (*($6) & [1]) ){ goto $label$5 }
	*($6) = [0]
	*($6 + [4]) = [0]
	if ( *($7 + [456]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	if ( (*($7 + [456]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $542($6, CALL int_32 $1((int_32 [45]), (int_32 *(*($1) + [44]))))
	
.LABEL $label$3
	$4 = CALL int_32 $1((int_32 [48]), (int_32 *(*($1) + [44])))
	$8 = *($7 + [432])
	$3 = ($8 + [-4])
	$1 = *($7 + [8])
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((int_32)*($1) != (int_32)$4) ){ goto $label$6 }
	$1 = ($1 + [4])
	if ( ($1 <= $3) ){ goto $label$7 }
	
.LABEL $label$6
	CALL $378($6, $1, $8)
	
.LABEL $label$2
	$4 = [1]
	$1 = *($7 + [424])
	if ( ($1 == 0) ){ goto $label$13 }
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$16 }
	if ( ((int_32)*($3) == (int_32)[-1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$14 }
	
.LABEL $label$15
	*($7 + [424]) = [0]
	if ( $2 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$4 = (*($7 + [424]) == 0)
	
.LABEL $label$13
	if ( ($2 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$10 }
	if ( (((int_32)$4 ^ (int_32)((int_32)*($1) == (int_32)[-1])) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$4 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$8 }
	
.LABEL $label$9
	*($5) = (*($5) | [2])
	
.LABEL $label$8
	$2 = *($7 + [424])
	$4 = *($1 + [4])
	*(($1 = *($7)) + [4]) = ($4 + [-1])
	if ( ($4 == 0) ){ goto $label$19 }
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	CALL void $1((int_32 *(*($1) + [8])))
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL void $1((int_32 *($7 + [12])))
	
.LABEL $label$17
	$global$0 = ($7 + [464])
	return $2
}

int_32 .FUNC $374 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$7 = ($global$0 - [624])
	$global$0 = $7
	*($7 + [616]) = $1
	*($7 + [204]) = [61]
	*($7 + [200]) = ($7 + [208])
	CALL $151(($7 + [192]), $4)
	$1 = *($7 + [192])
	*($7 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [16]) = [11492]
	$8 = ($7 + [608])
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [128]) = ($7 + [16])
	*($7 + [176]) = ($7 + [128])
	CALL $516([11492], ($7 + [176]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	*($7 + [191]) = [0]
	if ( (CALL $375(($7 + [616]), $2, $3, ($7 + [192]), *($4 + [4]), $5, ($7 + [191]), $1, ($7 + [200]), ($7 + [196]), $8) == 0) ){ goto $label$11 }
	$9 = [0]
	*(($4 = ($7 + [186]))) = *([0] + [23634])
	*(($7 + [184])) = *([0] + [23632 align=1])
	*($7 + [176]) = *([0] + [23624 align=1])
	CALL int_32 $1((int_32 ($7 + [176])), (int_32 $4), (int_32 ($7 + [128])), (int_32 *(*($1) + [48])))
	$4 = ($7 + [16])
	$1 = (*($7 + [196]) - *($7 + [200]))
	if ( ((int_32)$1 < (int_32)[393]) ){ goto $label$12 }
	$9 = CALL $643((uint_32($1 >> [2]) + [2]))
	$4 = $9
	if ( ($9 == 0) ){ goto $label$9 }
	
.LABEL $label$12
	if ( (*($7 + [191]) == 0) ){ goto $label$13 }
	*($4) = [45]
	$4 = ($4 + [1])
	
.LABEL $label$13
	$1 = *($7 + [200])
	if ( ((uint_32)$1 >= (uint_32)*($7 + [196])) ){ goto $label$14 }
	$10 = ($7 + [164])
	$11 = (($7 + [128]) + [32])
	$12 = (($7 + [128]) + [28])
	$13 = (($7 + [128]) + [24])
	$14 = (($7 + [128]) + [20])
	$15 = (($7 + [128]) + [16])
	$16 = (($7 + [128]) | [12])
	$17 = (($7 + [128]) | [8])
	$18 = (($7 + [128]) | [4])
	$19 = ($7 + [168])
	
.LOOP $label$15:
	$3 = ($7 + [128])
	$8 = *($1)
	if ( ((int_32)*($7 + [128]) == (int_32)$8) ){ goto $label$16 }
	$3 = $18
	if ( ((int_32)*($7 + [132]) == (int_32)$8) ){ goto $label$16 }
	$3 = $17
	if ( ((int_32)*($7 + [136]) == (int_32)$8) ){ goto $label$16 }
	$3 = $16
	if ( ((int_32)*($7 + [140]) == (int_32)$8) ){ goto $label$16 }
	$3 = $15
	if ( ((int_32)*((($7 + [128]) + [16])) == (int_32)$8) ){ goto $label$16 }
	$3 = $14
	if ( ((int_32)*((($7 + [128]) + [20])) == (int_32)$8) ){ goto $label$16 }
	$3 = $13
	if ( ((int_32)*((($7 + [128]) + [24])) == (int_32)$8) ){ goto $label$16 }
	$3 = $12
	if ( ((int_32)*((($7 + [128]) + [28])) == (int_32)$8) ){ goto $label$16 }
	$3 = $11
	if ( ((int_32)*((($7 + [128]) + [32])) == (int_32)$8) ){ goto $label$16 }
	$3 = ( $10 ? $19 : ((int_32)*($10) == (int_32)$8) )
	
.LABEL $label$16
	*($4) = *((($7 + [176]) + int_32(($3 - ($7 + [128])) >> [2])))
	$4 = ($4 + [1])
	$1 = ($1 + [4])
	if ( ($1 <= *($7 + [196])) ){ goto $label$15 }
	
.LABEL $label$14
	*($4) = [0]
	*($7) = $6
	if ( ((int_32)CALL $592(($7 + [16]), [8680], $7) != (int_32)[1]) ){ goto $label$10 }
	if ( ($9 == 0) ){ goto $label$11 }
	CALL $650($9)
	
.LABEL $label$11
	$1 = [1]
	$4 = *($7 + [616])
	if ( ($4 == 0) ){ goto $label$7 }
	$3 = *($4 + [12])
	if ( ((int_32)$3 == (int_32)*($4 + [16])) ){ goto $label$18 }
	if ( ((int_32)*($3) == (int_32)[-1]) ){ goto $label$17 }
	goto $label$8 
	
.LABEL $label$18
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)[-1]) ){ goto $label$8 }
	
.LABEL $label$17
	*($7 + [616]) = [0]
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$10
	CALL abort()
	
.LABEL $label$9
	CALL $517()
	
.LABEL $label$8
	$1 = (*($7 + [616]) == 0)
	
.LABEL $label$7
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = *($2 + [12])
	if ( ((int_32)$4 == (int_32)*($2 + [16])) ){ goto $label$4 }
	if ( ((int_32)$1 ^ (int_32)((int_32)*($4) == (int_32)[-1])) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$2 }
	
.LABEL $label$3
	*($5) = (*($5) | [2])
	
.LABEL $label$2
	$1 = *($7 + [616])
	$3 = *($4 + [4])
	*(($4 = *($7 + [192])) + [4]) = ($3 + [-1])
	if ( $3 ){ goto $label$19 }
	CALL void $4((int_32 *(*($4) + [8])))
	
.LABEL $label$19
	$4 = *($7 + [200])
	*($7 + [200]) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL void $4((int_32 *($7 + [204])))
	
.LABEL $label$20
	$global$0 = ($7 + [624])
	(unreachable)
	(unreachable)
	return $1
}

int_32 .FUNC $375 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$11 = ($global$0 - [512])
	$global$0 = $11
	*($11 + [88]) = [0]
	*($11 + [80]) = (int_64)0
	*($11 + [72]) = [0]
	*($11 + [64]) = (int_64)0
	*($11 + [56]) = [0]
	*($11 + [48]) = (int_64)0
	*($11 + [40]) = [0]
	*($11 + [32]) = (int_64)0
	*($11 + [24]) = [0]
	*($11 + [16]) = (int_64)0
	CALL $376($2, $3, ($11 + [104]), ($11 + [100]), ($11 + [96]), ($11 + [80]), ($11 + [64]), ($11 + [48]), ($11 + [32]), ($11 + [12]))
	*($9) = *($8)
	$12 = ($4 & [512])
	$13 = (($11 + [16]) | [4])
	$14 = (($11 + [32]) | [4])
	$15 = (($11 + [48]) | [4])
	$16 = (($11 + [64]) | [4])
	$17 = ($11 + [512])
	$18 = (($11 + [64]) + [8])
	$19 = [0]
	$20 = [0]
	$21 = [61]
	$22 = ($11 + [112])
	$3 = $22
	
.LOOP $label$6:
	$2 = [1]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$11 }
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$14 }
	if ( ((int_32)*($2) == (int_32)[-1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$13
	*($0) = [0]
	$2 = [1]
	if ( $1 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$2 = (*($0) == 0)
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)*($1 + [16])) ){ goto $label$15 }
	if ( ((int_32)*($4) == (int_32)[-1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$15
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$8 }
	
.LABEL $label$9
	$1 = [0]
	if ( $2 ){ goto $label$5 }
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$7
	$2 = (($11 + [104]) + $20)
	$4 = *($2)
	if ( ((uint_32)$4 > (uint_32)[4]) ){ goto $label$25 }
	goto $label$40 
	
.LABEL $label$40
	if ( ((int_32)$20 != (int_32)[3]) ){ goto $label$27 }
	goto $label$5 
	
.LABEL $label$39
	$23 = [0]
	$4 = [1]
	$2 = *($0)
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$38
	if ( ($20 <= [2]) ){ goto $label$35 }
	if ( $19 ){ goto $label$35 }
	if ( $12 ){ goto $label$35 }
	if ( (((int_32)$20 == (int_32)[2]) & ((int_32)*($11 + [107]) != (int_32)[0])) ){ goto $label$35 }
	$19 = [0]
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$37
	if ( ((int_32)$20 == (int_32)[3]) ){ goto $label$5 }
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$34 }
	if ( CALL int_32 $7((int_32 [1]), (int_32 *($2)), (int_32 *(*($7) + [12]))) ){ goto $label$33 }
	goto $label$22 
	
.LABEL $label$36
	$2 = *($11 + [32])
	$28 = ( *($11 + [36]) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$25 = ($4 & [1])
	$4 = *($11 + [48])
	$27 = ( *($11 + [52]) ? uint_32($4 >> [1]) : $25 )
	if ( ((int_32)$27 == (int_32)([0] - $28)) ){ goto $label$26 }
	$2 = *($0)
	$26 = *($2 + [16])
	$23 = *($2 + [12])
	if ( ($27 == 0) ){ goto $label$32 }
	if ( ($28 == 0) ){ goto $label$32 }
	if ( ((int_32)$23 == (int_32)$26) ){ goto $label$18 }
	$28 = ($2 + [12])
	$27 = *($23)
	goto $label$17 
	
.LABEL $label$35
	$27 = *($11 + [64])
	$23 = ($27 & [1])
	$25 = *($18)
	$4 = ( $25 ? $16 : $23 )
	if ( ($20 == 0) ){ goto $label$41 }
	if ( ((uint_32)*(($2 + [-1])) > (uint_32)[1]) ){ goto $label$41 }
	if ( (( *($11 + [68]) ? uint_32($27 >> [1]) : $23 ) == 0) ){ goto $label$42 }
	if ( (CALL int_32 $7((int_32 [1]), (int_32 *($4)), (int_32 *(*($7) + [12]))) == 0) ){ goto $label$43 }
	$4 = ($4 + [4])
	
.LOOP $label$44:
	$27 = *($11 + [64])
	$23 = ($27 & [1])
	$25 = *($18)
	if ( ((int_32)$4 == (int_32)(( $25 ? $16 : $23 ) + (( *($11 + [68]) ? uint_32($27 >> [1]) : $23 ) << [2]))) ){ goto $label$42 }
	$2 = *($4)
	$4 = ($4 + [4])
	if ( CALL int_32 $7((int_32 [1]), (int_32 $2), (int_32 *(*($7) + [12]))) ){ goto $label$44 }
	$4 = ($4 + [-4])
	
.LABEL $label$43
	$27 = *($11 + [64])
	$23 = ($27 & [1])
	$25 = *($18)
	
.LABEL $label$42
	$2 = ($2 & [1])
	$2 = *($11 + [16])
	$29 = uint_32($2 >> [1])
	$26 = *($11 + [20])
	$25 = ( $25 ? $16 : $23 )
	$28 = int_32(($4 - $25) >> [2])
	if ( ((uint_32)$28 > (uint_32)( $26 ? $29 : $2 )) ){ goto $label$31 }
	if ( ((([0] - $28) << [2]) == 0) ){ goto $label$30 }
	$26 = ($28 << [2])
	$2 = ( (*((($11 + [16]) + [8])) + ($26 << [2])) ? ($13 + ($29 << [2])) : $2 )
	$28 = ($2 - $26)
	$26 = (($2 + $26) - $2)
	$2 = [0]
	
.LOOP $label$45:
	if ( ((int_32)*(($28 + $2)) != (int_32)*(($25 + $2))) ){ goto $label$31 }
	$2 = ($2 + [4])
	if ( ((int_32)$26 != (int_32)$2) ){ goto $label$45 }
	goto $label$30 
	
.LABEL $label$41
	$25 = $4
	goto $label$30 
	
.LABEL $label$34
	if ( (CALL int_32 $7((int_32 [1]), (int_32 CALL int_32 $4((int_32 *(*($4) + [36])))), (int_32 *(*($7) + [12]))) == 0) ){ goto $label$22 }
	
.LABEL $label$33
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$47 }
	*(($4 + [12])) = ($2 + [4])
	$4 = *($2)
	goto $label$46 
	
.LABEL $label$47
	$4 = CALL int_32 $4((int_32 *(*($4) + [40])))
	
.LABEL $label$46
	CALL $542(($11 + [16]), $4)
	$2 = [1]
	$4 = *($0)
	if ( $4 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$32
	if ( ((int_32)$23 == (int_32)$26) ){ goto $label$21 }
	$4 = *($23)
	if ( ($27 == 0) ){ goto $label$20 }
	goto $label$16 
	
.LABEL $label$31
	$4 = $25
	
.LABEL $label$30
	if ( ((int_32)($25 + (( *($11 + [68]) ? uint_32($27 >> [1]) : $23 ) << [2])) == (int_32)$4) ){ goto $label$48 }
	
.LOOP $label$49:
	$23 = [1]
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$54 }
	$27 = *($2 + [12])
	if ( ((int_32)$27 == (int_32)*($2 + [16])) ){ goto $label$57 }
	if ( ((int_32)*($27) == (int_32)[-1]) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$55 }
	
.LABEL $label$56
	*($0) = [0]
	if ( $1 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$23 = (*($0) == 0)
	
.LABEL $label$54
	if ( ($1 == 0) ){ goto $label$52 }
	
.LABEL $label$53
	$2 = *($1 + [12])
	if ( ((int_32)$2 == (int_32)*($1 + [16])) ){ goto $label$58 }
	if ( ((int_32)*($2) == (int_32)[-1]) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$58
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$51 }
	
.LABEL $label$52
	$1 = [0]
	if ( $23 ){ goto $label$48 }
	goto $label$50 
	
.LABEL $label$51
	if ( ($23 == 0) ){ goto $label$48 }
	
.LABEL $label$50
	$2 = *($0)
	$23 = *($2 + [12])
	if ( ((int_32)$23 == (int_32)*($2 + [16])) ){ goto $label$60 }
	if ( ((int_32)*($23) == (int_32)*($4)) ){ goto $label$59 }
	goto $label$48 
	
.LABEL $label$60
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)*($4)) ){ goto $label$48 }
	
.LABEL $label$59
	$2 = *($0)
	$23 = *($2 + [12])
	if ( ((int_32)$23 == (int_32)*($2 + [16])) ){ goto $label$62 }
	*(($2 + [12])) = ($23 + [4])
	goto $label$61 
	
.LABEL $label$62
	CALL int_32 $2((int_32 *(*($2) + [40])))
	
.LABEL $label$61
	$2 = *($11 + [64])
	$23 = ($2 & [1])
	$4 = ($4 + [4])
	if ( ((int_32)$4 != (int_32)(( *($18) ? $16 : $23 ) + (( *($11 + [68]) ? uint_32($2 >> [1]) : $23 ) << [2]))) ){ goto $label$49 }
	
.LABEL $label$48
	if ( ($12 == 0) ){ goto $label$64 }
	$2 = *($11 + [64])
	$23 = ($2 & [1])
	if ( ((int_32)$4 == (int_32)(( *($18) ? $16 : $23 ) + (( *($11 + [68]) ? uint_32($2 >> [1]) : $23 ) << [2]))) ){ goto $label$63 }
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$64
	$24 = [11]
	goto $label$19 
	
.LABEL $label$63
	$24 = [11]
	goto $label$19 
	
.LABEL $label$29
	$24 = [99]
	goto $label$19 
	
.LABEL $label$28
	$24 = [102]
	goto $label$19 
	
.LABEL $label$27
	$24 = [98]
	goto $label$19 
	
.LABEL $label$26
	$24 = [11]
	goto $label$19 
	
.LABEL $label$25
	$24 = [11]
	goto $label$19 
	
.LABEL $label$24
	$24 = [1]
	goto $label$19 
	
.LABEL $label$23
	$24 = [77]
	goto $label$19 
	
.LABEL $label$22
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$21
	$4 = CALL int_32 $2((int_32 *(*($2) + [36])))
	if ( $27 ){ goto $label$16 }
	
.LABEL $label$20
	$2 = *($11 + [32])
	$23 = ($2 & [1])
	if ( ((int_32)$4 != (int_32)*(( *((($11 + [32]) + [8])) ? $14 : $23 ))) ){ goto $label$65 }
	$4 = *($0)
	$27 = *($4 + [12])
	if ( ((int_32)$27 == (int_32)*($4 + [16])) ){ goto $label$67 }
	*(($4 + [12])) = ($27 + [4])
	goto $label$66 
	
.LABEL $label$67
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$2 = *($11 + [32])
	$23 = ($2 & [1])
	
.LABEL $label$66
	*($6) = [1]
	$19 = ( ($11 + [32]) ? $19 : ((uint_32)( *($11 + [36]) ? uint_32($2 >> [1]) : $23 ) > (uint_32)[1]) )
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$65
	$24 = [11]
	
.LABEL $label$19
	
.LOOP $label$69:
	goto $label$268 
	
.LABEL $label$285
	if ( ((int_32)$3 != (int_32)$17) ){ goto $label$91 }
	$24 = [79]
	goto $label$69 
	
.LABEL $label$284
	$2 = [-1]
	$4 = ($17 - $22)
	if ( ((uint_32)$4 > (uint_32)[2147483646]) ){ goto $label$89 }
	$24 = [82]
	goto $label$69 
	
.LABEL $label$283
	$4 = ($4 << [1])
	$2 = ( $4 ? [4] : $4 )
	$24 = [80]
	goto $label$69 
	
.LABEL $label$282
	$4 = CALL $647(( [0] ? $22 : ((int_32)$21 == (int_32)[61]) ), $2)
	if ( ($4 == 0) ){ goto $label$166 }
	$24 = [81]
	goto $label$69 
	
.LABEL $label$281
	$17 = ($4 + ($2 & [-4]))
	$3 = ($4 + ($3 - $22))
	$21 = [62]
	$22 = $4
	$24 = [74]
	goto $label$69 
	
.LABEL $label$280
	*($3) = $23
	$3 = ($3 + [4])
	$23 = [0]
	goto $label$90 
	
.LABEL $label$279
	$25 = *($8)
	*($8) = $10
	if ( ($25 == 0) ){ goto $label$85 }
	$24 = [89]
	goto $label$69 
	
.LABEL $label$278
	CALL void $25((int_32 *($26)))
	$10 = *($8)
	$24 = [90]
	goto $label$69 
	
.LABEL $label$277
	*($26) = [62]
	$2 = ($10 + ($2 << [2]))
	*($9) = $2
	$10 = (*($8) + ($27 & [-4]))
	$24 = [84]
	goto $label$69 
	
.LABEL $label$276
	*($2) = $4
	*($9) = ($2 + [4])
	$23 = ($23 + [1])
	$24 = [75]
	goto $label$69 
	
.LABEL $label$275
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 != (int_32)*($4 + [16])) ){ goto $label$155 }
	$24 = [76]
	goto $label$69 
	
.LABEL $label$274
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$4 = [1]
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$165 }
	$24 = [1]
	goto $label$69 
	
.LABEL $label$273
	$27 = *($2 + [12])
	if ( ((int_32)$27 == (int_32)*($2 + [16])) ){ goto $label$154 }
	$24 = [2]
	goto $label$69 
	
.LABEL $label$272
	if ( ((int_32)*($27) == (int_32)[-1]) ){ goto $label$152 }
	$24 = [3]
	goto $label$69 
	
.LABEL $label$271
	$4 = (*($0) == 0)
	if ( $1 ){ goto $label$157 }
	goto $label$158 
	
.LABEL $label$270
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$153 }
	$24 = [95]
	goto $label$69 
	
.LABEL $label$269
	*($0) = [0]
	if ( $1 ){ goto $label$163 }
	goto $label$164 
	
.LABEL $label$268
	*(($4 + [12])) = ($2 + [4])
	$4 = [1]
	$2 = *($0)
	if ( $2 ){ goto $label$156 }
	$24 = [77]
	goto $label$69 
	
.LABEL $label$267
	if ( ($1 == 0) ){ goto $label$151 }
	$24 = [4]
	goto $label$69 
	
.LABEL $label$266
	$2 = *($1 + [12])
	if ( ((int_32)$2 == (int_32)*($1 + [16])) ){ goto $label$150 }
	$24 = [5]
	goto $label$69 
	
.LABEL $label$265
	if ( ((int_32)*($2) == (int_32)[-1]) ){ goto $label$159 }
	$24 = [6]
	goto $label$69 
	
.LABEL $label$264
	if ( $4 ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$263
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$162 }
	$24 = [78]
	goto $label$69 
	
.LABEL $label$262
	$1 = [0]
	if ( $4 ){ goto $label$149 }
	$24 = [68]
	goto $label$69 
	
.LABEL $label$261
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$94 }
	$24 = [69]
	goto $label$69 
	
.LABEL $label$260
	$4 = *($2)
	if ( (CALL int_32 $7((int_32 [64]), (int_32 $4), (int_32 *(*($7) + [12]))) == 0) ){ goto $label$92 }
	$24 = [83]
	goto $label$69 
	
.LABEL $label$259
	$2 = *($9)
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$88 }
	$24 = [85]
	goto $label$69 
	
.LABEL $label$258
	$26 = ($8 + [4])
	$25 = *($26)
	$27 = [-1]
	$28 = *($8)
	$10 = ($10 - $28)
	if ( ((uint_32)$10 > (uint_32)[2147483646]) ){ goto $label$87 }
	$24 = [92]
	goto $label$69 
	
.LABEL $label$257
	$10 = ($10 << [1])
	$27 = ( $10 ? [4] : $10 )
	$24 = [86]
	goto $label$69 
	
.LABEL $label$256
	$10 = CALL $647(( $28 ? [0] : ((int_32)$25 != (int_32)[61]) ), $27)
	if ( ($10 == 0) ){ goto $label$166 }
	$24 = [87]
	goto $label$69 
	
.LABEL $label$255
	$2 = int_32(($2 - $28) >> [2])
	if ( ((int_32)$25 == (int_32)[61]) ){ goto $label$86 }
	$24 = [91]
	goto $label$69 
	
.LABEL $label$254
	*($8) = $10
	goto $label$84 
	
.LABEL $label$253
	$4 = CALL int_32 $4((int_32 *(*($4) + [36])))
	if ( CALL int_32 $7((int_32 [64]), (int_32 $4), (int_32 *(*($7) + [12]))) ){ goto $label$93 }
	$24 = [70]
	goto $label$69 
	
.LABEL $label$252
	if ( ((int_32)$4 != (int_32)*($11 + [96])) ){ goto $label$148 }
	$24 = [71]
	goto $label$69 
	
.LABEL $label$251
	if ( ($23 == 0) ){ goto $label$147 }
	$24 = [72]
	goto $label$69 
	
.LABEL $label$250
	$4 = *($11 + [80])
	if ( ( *($11 + [84]) ? uint_32($4 >> [1]) : ($4 & [1]) ) ){ goto $label$146 }
	$24 = [7]
	goto $label$69 
	
.LABEL $label$249
	if ( ((int_32)$22 == (int_32)$3) ){ goto $label$144 }
	$24 = [60]
	goto $label$69 
	
.LABEL $label$248
	if ( ($23 == 0) ){ goto $label$145 }
	$24 = [61]
	goto $label$69 
	
.LABEL $label$247
	if ( ((int_32)$3 == (int_32)$17) ){ goto $label$97 }
	$24 = [62]
	goto $label$69 
	
.LABEL $label$246
	$25 = $22
	goto $label$96 
	
.LABEL $label$245
	$25 = $22
	if ( ((int_32)*($11 + [12]) < (int_32)[1]) ){ goto $label$137 }
	$24 = [12]
	goto $label$69 
	
.LABEL $label$244
	$2 = [1]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$128 }
	$24 = [13]
	goto $label$69 
	
.LABEL $label$243
	$23 = *($4 + [12])
	if ( ((int_32)$23 == (int_32)*($4 + [16])) ){ goto $label$127 }
	$24 = [14]
	goto $label$69 
	
.LABEL $label$242
	if ( ((int_32)*($23) == (int_32)[-1]) ){ goto $label$125 }
	$24 = [15]
	goto $label$69 
	
.LABEL $label$241
	$2 = (*($0) == 0)
	$24 = [16]
	goto $label$69 
	
.LABEL $label$240
	if ( ($1 == 0) ){ goto $label$124 }
	$24 = [17]
	goto $label$69 
	
.LABEL $label$239
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)*($1 + [16])) ){ goto $label$122 }
	$24 = [18]
	goto $label$69 
	
.LABEL $label$238
	$4 = ((int_32)*($4) == (int_32)[-1])
	if ( ((int_32)((int_32)$2 ^ (int_32)$4) == (int_32)[1]) ){ goto $label$121 }
	goto $label$168 
	
.LABEL $label$237
	CALL $542(($11 + [16]), $4)
	$24 = [98]
	goto $label$69 
	
.LABEL $label$236
	$2 = [1]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$81 }
	$24 = [99]
	goto $label$69 
	
.LABEL $label$235
	$23 = *($4 + [12])
	if ( ((int_32)$23 == (int_32)*($4 + [16])) ){ goto $label$80 }
	$24 = [100]
	goto $label$69 
	
.LABEL $label$234
	if ( ((int_32)*($23) == (int_32)[-1]) ){ goto $label$78 }
	$24 = [101]
	goto $label$69 
	
.LABEL $label$233
	$2 = (*($0) == 0)
	$24 = [102]
	goto $label$69 
	
.LABEL $label$232
	if ( ($1 == 0) ){ goto $label$77 }
	$24 = [103]
	goto $label$69 
	
.LABEL $label$231
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)*($1 + [16])) ){ goto $label$74 }
	$24 = [104]
	goto $label$69 
	
.LABEL $label$230
	if ( ((int_32)*($4) == (int_32)[-1]) ){ goto $label$72 }
	$24 = [105]
	goto $label$69 
	
.LABEL $label$229
	if ( $2 ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$228
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)[-1]) ){ goto $label$79 }
	$24 = [114]
	goto $label$69 
	
.LABEL $label$227
	*($0) = [0]
	if ( $1 ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$226
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) != (int_32)[-1]) ){ goto $label$73 }
	$24 = [112]
	goto $label$69 
	
.LABEL $label$225
	$1 = [0]
	if ( $2 ){ goto $label$134 }
	$24 = [106]
	goto $label$69 
	
.LABEL $label$224
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$71 }
	$24 = [107]
	goto $label$69 
	
.LABEL $label$223
	if ( CALL int_32 $7((int_32 [1]), (int_32 *($2)), (int_32 *(*($7) + [12]))) ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$222
	if ( (CALL int_32 $7((int_32 [1]), (int_32 CALL int_32 $4((int_32 *(*($4) + [36])))), (int_32 *(*($7) + [12]))) == 0) ){ goto $label$131 }
	$24 = [108]
	goto $label$69 
	
.LABEL $label$221
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$70 }
	$24 = [109]
	goto $label$69 
	
.LABEL $label$220
	*(($4 + [12])) = ($2 + [4])
	$4 = *($2)
	goto $label$83 
	
.LABEL $label$219
	$4 = CALL int_32 $4((int_32 *(*($4) + [40])))
	goto $label$82 
	
.LABEL $label$218
	$4 = [-1]
	$2 = ($17 - $22)
	if ( ((uint_32)$2 > (uint_32)[2147483646]) ){ goto $label$95 }
	$24 = [67]
	goto $label$69 
	
.LABEL $label$217
	$4 = ($2 << [1])
	$4 = ( $4 ? [4] : $4 )
	$24 = [65]
	goto $label$69 
	
.LABEL $label$216
	$25 = CALL $647(( [0] ? $22 : ((int_32)$21 == (int_32)[61]) ), $4)
	if ( ($25 == 0) ){ goto $label$166 }
	$24 = [66]
	goto $label$69 
	
.LABEL $label$215
	$17 = ($25 + ($4 & [-4]))
	$3 = ($25 + ($3 - $22))
	$21 = [62]
	$24 = [63]
	goto $label$69 
	
.LABEL $label$214
	*($3) = $23
	$3 = ($3 + [4])
	if ( ((int_32)*($11 + [12]) >= (int_32)[1]) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$213
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)[-1]) ){ goto $label$126 }
	$24 = [58]
	goto $label$69 
	
.LABEL $label$212
	*($0) = [0]
	if ( $1 ){ goto $label$123 }
	$24 = [57]
	goto $label$69 
	
.LABEL $label$211
	$1 = [0]
	if ( ($2 == 0) ){ goto $label$120 }
	goto $label$168 
	
.LABEL $label$210
	$4 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)((int_32)$2 ^ (int_32)$4) != (int_32)[1]) ){ goto $label$168 }
	$24 = [19]
	goto $label$69 
	
.LABEL $label$209
	$1 = ( [0] ? $1 : $4 )
	$24 = [20]
	goto $label$69 
	
.LABEL $label$208
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$119 }
	$24 = [21]
	goto $label$69 
	
.LABEL $label$207
	if ( ((int_32)*($2) == (int_32)*($11 + [100])) ){ goto $label$118 }
	goto $label$168 
	
.LABEL $label$206
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)*($11 + [100])) ){ goto $label$168 }
	$24 = [22]
	goto $label$69 
	
.LABEL $label$205
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$117 }
	$24 = [23]
	goto $label$69 
	
.LABEL $label$204
	*(($4 + [12])) = ($2 + [4])
	if ( ((int_32)*($11 + [12]) < (int_32)[1]) ){ goto $label$135 }
	$24 = [24]
	goto $label$69 
	
.LABEL $label$203
	$2 = [1]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$116 }
	$24 = [25]
	goto $label$69 
	
.LABEL $label$202
	$23 = *($4 + [12])
	if ( ((int_32)$23 == (int_32)*($4 + [16])) ){ goto $label$115 }
	$24 = [26]
	goto $label$69 
	
.LABEL $label$201
	if ( ((int_32)*($23) == (int_32)[-1]) ){ goto $label$113 }
	$24 = [27]
	goto $label$69 
	
.LABEL $label$200
	$2 = (*($0) == 0)
	$24 = [28]
	goto $label$69 
	
.LABEL $label$199
	if ( ($1 == 0) ){ goto $label$112 }
	$24 = [29]
	goto $label$69 
	
.LABEL $label$198
	$4 = *($1 + [12])
	if ( ((int_32)$4 == (int_32)*($1 + [16])) ){ goto $label$110 }
	$24 = [30]
	goto $label$69 
	
.LABEL $label$197
	$4 = ((int_32)*($4) == (int_32)[-1])
	if ( ((int_32)((int_32)$2 ^ (int_32)$4) == (int_32)[1]) ){ goto $label$109 }
	goto $label$169 
	
.LABEL $label$196
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) != (int_32)[-1]) ){ goto $label$114 }
	$24 = [52]
	goto $label$69 
	
.LABEL $label$195
	*($0) = [0]
	if ( $1 ){ goto $label$111 }
	$24 = [51]
	goto $label$69 
	
.LABEL $label$194
	$1 = [0]
	if ( ($2 == 0) ){ goto $label$108 }
	goto $label$169 
	
.LABEL $label$193
	$4 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)((int_32)$2 ^ (int_32)$4) != (int_32)[1]) ){ goto $label$169 }
	$24 = [31]
	goto $label$69 
	
.LABEL $label$192
	$1 = ( [0] ? $1 : $4 )
	$24 = [32]
	goto $label$69 
	
.LABEL $label$191
	$4 = *($0)
	$2 = *($4 + [12])
	if ( ((int_32)$2 == (int_32)*($4 + [16])) ){ goto $label$107 }
	$24 = [33]
	goto $label$69 
	
.LABEL $label$190
	if ( (CALL int_32 $7((int_32 [64]), (int_32 *($2)), (int_32 *(*($7) + [12]))) == 0) ){ goto $label$169 }
	$24 = [34]
	goto $label$69 
	
.LABEL $label$189
	$4 = *($9)
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$105 }
	$24 = [41]
	goto $label$69 
	
.LABEL $label$188
	$28 = ($8 + [4])
	$27 = *($28)
	$2 = [-1]
	$22 = *($8)
	$23 = ($10 - $22)
	if ( ((uint_32)$23 > (uint_32)[2147483646]) ){ goto $label$101 }
	$24 = [48]
	goto $label$69 
	
.LABEL $label$187
	$2 = ($23 << [1])
	$2 = ( $2 ? [4] : $2 )
	$24 = [42]
	goto $label$69 
	
.LABEL $label$186
	$23 = CALL $647(( $22 ? [0] : ((int_32)$27 != (int_32)[61]) ), $2)
	if ( ($23 == 0) ){ goto $label$166 }
	$24 = [43]
	goto $label$69 
	
.LABEL $label$185
	$4 = int_32(($4 - $22) >> [2])
	if ( ((int_32)$27 == (int_32)[61]) ){ goto $label$100 }
	$24 = [47]
	goto $label$69 
	
.LABEL $label$184
	*($8) = $23
	goto $label$98 
	
.LABEL $label$183
	if ( CALL int_32 $7((int_32 [64]), (int_32 CALL int_32 $4((int_32 *(*($4) + [36])))), (int_32 *(*($7) + [12]))) ){ goto $label$106 }
	goto $label$169 
	
.LABEL $label$182
	$10 = *($8)
	*($8) = $23
	if ( ($10 == 0) ){ goto $label$99 }
	$24 = [45]
	goto $label$69 
	
.LABEL $label$181
	CALL void $10((int_32 *($28)))
	$23 = *($8)
	$24 = [46]
	goto $label$69 
	
.LABEL $label$180
	*($28) = [62]
	$4 = ($23 + ($4 << [2]))
	*($9) = $4
	$10 = (*($8) + ($2 & [-4]))
	$24 = [35]
	goto $label$69 
	
.LABEL $label$179
	$2 = *($0)
	$23 = *($2 + [12])
	if ( ((int_32)$23 == (int_32)*($2 + [16])) ){ goto $label$104 }
	$24 = [36]
	goto $label$69 
	
.LABEL $label$178
	$2 = *($23)
	goto $label$103 
	
.LABEL $label$177
	$2 = CALL int_32 $2((int_32 *(*($2) + [36])))
	$4 = *($9)
	$24 = [37]
	goto $label$69 
	
.LABEL $label$176
	*($9) = ($4 + [4])
	*($4) = $2
	$2 = (*($11 + [12]) + [-1])
	*($11 + [12]) = $2
	$4 = *($0)
	$23 = *($4 + [12])
	if ( ((int_32)$23 == (int_32)*($4 + [16])) ){ goto $label$102 }
	$24 = [38]
	goto $label$69 
	
.LABEL $label$175
	*(($4 + [12])) = ($23 + [4])
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$174
	CALL int_32 $4((int_32 *(*($4) + [40])))
	if ( ((int_32)*($11 + [12]) > (int_32)[0]) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$173
	CALL int_32 $4((int_32 *(*($4) + [40])))
	if ( ((int_32)*($11 + [12]) >= (int_32)[1]) ){ goto $label$136 }
	$24 = [9]
	goto $label$69 
	
.LABEL $label$172
	if ( ((int_32)*($9) == (int_32)*($8)) ){ goto $label$167 }
	$24 = [10]
	goto $label$69 
	
.LABEL $label$171
	$22 = $25
	$24 = [11]
	goto $label$69 
	
.LABEL $label$170
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$169
	*($5) = (*($5) | [4])
	goto $label$68 
	
.LABEL $label$168
	*($5) = (*($5) | [4])
	goto $label$68 
	
.LABEL $label$167
	*($5) = (*($5) | [4])
	goto $label$68 
	
.LABEL $label$166
	CALL $517()
	
.LABEL $label$165
	$24 = [77]
	goto $label$69 
	
.LABEL $label$164
	$24 = [78]
	goto $label$69 
	
.LABEL $label$163
	$24 = [4]
	goto $label$69 
	
.LABEL $label$162
	$24 = [6]
	goto $label$69 
	
.LABEL $label$161
	$24 = [68]
	goto $label$69 
	
.LABEL $label$160
	$24 = [7]
	goto $label$69 
	
.LABEL $label$159
	$24 = [78]
	goto $label$69 
	
.LABEL $label$158
	$24 = [78]
	goto $label$69 
	
.LABEL $label$157
	$24 = [4]
	goto $label$69 
	
.LABEL $label$156
	$24 = [1]
	goto $label$69 
	
.LABEL $label$155
	$24 = [0]
	goto $label$69 
	
.LABEL $label$154
	$24 = [96]
	goto $label$69 
	
.LABEL $label$153
	$24 = [3]
	goto $label$69 
	
.LABEL $label$152
	$24 = [95]
	goto $label$69 
	
.LABEL $label$151
	$24 = [78]
	goto $label$69 
	
.LABEL $label$150
	$24 = [94]
	goto $label$69 
	
.LABEL $label$149
	$24 = [7]
	goto $label$69 
	
.LABEL $label$148
	$24 = [7]
	goto $label$69 
	
.LABEL $label$147
	$24 = [7]
	goto $label$69 
	
.LABEL $label$146
	$24 = [73]
	goto $label$69 
	
.LABEL $label$145
	$24 = [8]
	goto $label$69 
	
.LABEL $label$144
	$24 = [8]
	goto $label$69 
	
.LABEL $label$143
	$24 = [24]
	goto $label$69 
	
.LABEL $label$142
	$24 = [9]
	goto $label$69 
	
.LABEL $label$141
	$24 = [24]
	goto $label$69 
	
.LABEL $label$140
	$24 = [9]
	goto $label$69 
	
.LABEL $label$139
	$24 = [12]
	goto $label$69 
	
.LABEL $label$138
	$24 = [9]
	goto $label$69 
	
.LABEL $label$137
	$24 = [9]
	goto $label$69 
	
.LABEL $label$136
	$24 = [24]
	goto $label$69 
	
.LABEL $label$135
	$24 = [9]
	goto $label$69 
	
.LABEL $label$134
	$24 = [11]
	goto $label$69 
	
.LABEL $label$133
	$24 = [106]
	goto $label$69 
	
.LABEL $label$132
	$24 = [11]
	goto $label$69 
	
.LABEL $label$131
	$24 = [11]
	goto $label$69 
	
.LABEL $label$130
	$24 = [108]
	goto $label$69 
	
.LABEL $label$129
	$24 = [11]
	goto $label$69 
	
.LABEL $label$128
	$24 = [16]
	goto $label$69 
	
.LABEL $label$127
	$24 = [59]
	goto $label$69 
	
.LABEL $label$126
	$24 = [15]
	goto $label$69 
	
.LABEL $label$125
	$24 = [58]
	goto $label$69 
	
.LABEL $label$124
	$24 = [57]
	goto $label$69 
	
.LABEL $label$123
	$24 = [17]
	goto $label$69 
	
.LABEL $label$122
	$24 = [56]
	goto $label$69 
	
.LABEL $label$121
	$24 = [19]
	goto $label$69 
	
.LABEL $label$120
	$24 = [20]
	goto $label$69 
	
.LABEL $label$119
	$24 = [55]
	goto $label$69 
	
.LABEL $label$118
	$24 = [22]
	goto $label$69 
	
.LABEL $label$117
	$24 = [54]
	goto $label$69 
	
.LABEL $label$116
	$24 = [28]
	goto $label$69 
	
.LABEL $label$115
	$24 = [53]
	goto $label$69 
	
.LABEL $label$114
	$24 = [27]
	goto $label$69 
	
.LABEL $label$113
	$24 = [52]
	goto $label$69 
	
.LABEL $label$112
	$24 = [51]
	goto $label$69 
	
.LABEL $label$111
	$24 = [29]
	goto $label$69 
	
.LABEL $label$110
	$24 = [50]
	goto $label$69 
	
.LABEL $label$109
	$24 = [31]
	goto $label$69 
	
.LABEL $label$108
	$24 = [32]
	goto $label$69 
	
.LABEL $label$107
	$24 = [49]
	goto $label$69 
	
.LABEL $label$106
	$24 = [34]
	goto $label$69 
	
.LABEL $label$105
	$24 = [35]
	goto $label$69 
	
.LABEL $label$104
	$24 = [40]
	goto $label$69 
	
.LABEL $label$103
	$24 = [37]
	goto $label$69 
	
.LABEL $label$102
	$24 = [39]
	goto $label$69 
	
.LABEL $label$101
	$24 = [42]
	goto $label$69 
	
.LABEL $label$100
	$24 = [44]
	goto $label$69 
	
.LABEL $label$99
	$24 = [46]
	goto $label$69 
	
.LABEL $label$98
	$24 = [46]
	goto $label$69 
	
.LABEL $label$97
	$24 = [64]
	goto $label$69 
	
.LABEL $label$96
	$24 = [63]
	goto $label$69 
	
.LABEL $label$95
	$24 = [65]
	goto $label$69 
	
.LABEL $label$94
	$24 = [93]
	goto $label$69 
	
.LABEL $label$93
	$24 = [83]
	goto $label$69 
	
.LABEL $label$92
	$24 = [70]
	goto $label$69 
	
.LABEL $label$91
	$24 = [74]
	goto $label$69 
	
.LABEL $label$90
	$24 = [75]
	goto $label$69 
	
.LABEL $label$89
	$24 = [80]
	goto $label$69 
	
.LABEL $label$88
	$24 = [84]
	goto $label$69 
	
.LABEL $label$87
	$24 = [86]
	goto $label$69 
	
.LABEL $label$86
	$24 = [88]
	goto $label$69 
	
.LABEL $label$85
	$24 = [90]
	goto $label$69 
	
.LABEL $label$84
	$24 = [90]
	goto $label$69 
	
.LABEL $label$83
	$24 = [97]
	goto $label$69 
	
.LABEL $label$82
	$24 = [97]
	goto $label$69 
	
.LABEL $label$81
	$24 = [102]
	goto $label$69 
	
.LABEL $label$80
	$24 = [115]
	goto $label$69 
	
.LABEL $label$79
	$24 = [101]
	goto $label$69 
	
.LABEL $label$78
	$24 = [114]
	goto $label$69 
	
.LABEL $label$77
	$24 = [112]
	goto $label$69 
	
.LABEL $label$76
	$24 = [112]
	goto $label$69 
	
.LABEL $label$75
	$24 = [103]
	goto $label$69 
	
.LABEL $label$74
	$24 = [113]
	goto $label$69 
	
.LABEL $label$73
	$24 = [105]
	goto $label$69 
	
.LABEL $label$72
	$24 = [112]
	goto $label$69 
	
.LABEL $label$71
	$24 = [111]
	goto $label$69 
	
.LABEL $label$70
	$24 = [110]
	goto $label$69 
	
.LABEL $label$68
	$2 = [0]
	$1 = [1]
	if ( (*($11 + [16]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$18
	$27 = CALL int_32 $2((int_32 *(*($2) + [36])))
	$4 = *($11 + [48])
	$25 = ($4 & [1])
	$2 = *($0)
	$28 = ($2 + [12])
	$26 = *($2 + [16])
	$23 = *($2 + [12])
	
.LABEL $label$17
	if ( ((int_32)$27 != (int_32)*(( *((($11 + [48]) + [8])) ? $15 : $25 ))) ){ goto $label$290 }
	if ( ((int_32)$23 == (int_32)$26) ){ goto $label$289 }
	*($28) = ($23 + [4])
	goto $label$288 
	
.LABEL $label$290
	if ( ((int_32)$23 == (int_32)$26) ){ goto $label$287 }
	$4 = *($23)
	goto $label$286 
	
.LABEL $label$289
	CALL int_32 $2((int_32 *(*($2) + [40])))
	$4 = *($11 + [48])
	$25 = ($4 & [1])
	
.LABEL $label$288
	$19 = ( ($11 + [48]) ? $19 : ((uint_32)( *($11 + [52]) ? uint_32($4 >> [1]) : $25 ) > (uint_32)[1]) )
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$287
	$4 = CALL int_32 $2((int_32 *(*($2) + [36])))
	
.LABEL $label$286
	$2 = *($11 + [32])
	$23 = ($2 & [1])
	if ( ((int_32)$4 != (int_32)*(( *((($11 + [32]) + [8])) ? $14 : $23 ))) ){ goto $label$291 }
	$4 = *($0)
	$27 = *($4 + [12])
	if ( ((int_32)$27 == (int_32)*($4 + [16])) ){ goto $label$293 }
	*(($4 + [12])) = ($27 + [4])
	goto $label$292 
	
.LABEL $label$293
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$2 = *($11 + [32])
	$23 = ($2 & [1])
	
.LABEL $label$292
	*($6) = [1]
	$19 = ( ($11 + [32]) ? $19 : ((uint_32)( *($11 + [36]) ? uint_32($2 >> [1]) : $23 ) > (uint_32)[1]) )
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$291
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$16
	$2 = *($11 + [48])
	$23 = ($2 & [1])
	if ( ((int_32)$4 != (int_32)*(( *((($11 + [48]) + [8])) ? $15 : $23 ))) ){ goto $label$296 }
	$4 = *($0)
	$27 = *($4 + [12])
	if ( ((int_32)$27 == (int_32)*($4 + [16])) ){ goto $label$295 }
	*(($4 + [12])) = ($27 + [4])
	goto $label$294 
	
.LABEL $label$296
	*($6) = [1]
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$295
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$2 = *($11 + [48])
	$23 = ($2 & [1])
	
.LABEL $label$294
	$19 = ( ($11 + [48]) ? $19 : ((uint_32)( *($11 + [52]) ? uint_32($2 >> [1]) : $23 ) > (uint_32)[1]) )
	$20 = ($20 + [1])
	if ( ($20 <= [4]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($19 == 0) ){ goto $label$297 }
	$7 = *($19)
	if ( ($7 & [1]) ){ goto $label$299 }
	if ( ((uint_32)uint_32($7 >> [1]) >= (uint_32)[2]) ){ goto $label$298 }
	goto $label$297 
	
.LABEL $label$299
	if ( (*($19 + [4]) <= [2]) ){ goto $label$297 }
	
.LABEL $label$298
	$9 = ($19 + [4])
	$20 = ($19 + [8])
	$4 = [4]
	$2 = [1]
	
.LOOP $label$300:
	$23 = [1]
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$308 }
	$23 = *($7 + [12])
	if ( ((int_32)$23 == (int_32)*($7 + [16])) ){ goto $label$311 }
	if ( ((int_32)*($23) == (int_32)[-1]) ){ goto $label$310 }
	goto $label$309 
	
.LABEL $label$311
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) != (int_32)[-1]) ){ goto $label$309 }
	
.LABEL $label$310
	*($0) = [0]
	$23 = [1]
	if ( $1 ){ goto $label$307 }
	goto $label$306 
	
.LABEL $label$309
	$23 = (*($0) == 0)
	
.LABEL $label$308
	if ( ($1 == 0) ){ goto $label$306 }
	
.LABEL $label$307
	$7 = *($1 + [12])
	if ( ((int_32)$7 == (int_32)*($1 + [16])) ){ goto $label$305 }
	$7 = ((int_32)*($7) == (int_32)[-1])
	if ( ((int_32)((int_32)$23 ^ (int_32)$7) == (int_32)[1]) ){ goto $label$304 }
	goto $label$302 
	
.LABEL $label$306
	$1 = [0]
	if ( ($23 == 0) ){ goto $label$303 }
	goto $label$302 
	
.LABEL $label$305
	$7 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)((int_32)$23 ^ (int_32)$7) != (int_32)[1]) ){ goto $label$302 }
	
.LABEL $label$304
	$1 = ( [0] ? $1 : $7 )
	
.LABEL $label$303
	$7 = *($0)
	$23 = *($7 + [12])
	if ( ((int_32)$23 == (int_32)*($7 + [16])) ){ goto $label$314 }
	$23 = *($23)
	$7 = $9
	if ( ((*($19) & [1]) == 0) ){ goto $label$312 }
	goto $label$313 
	
.LABEL $label$314
	$23 = CALL int_32 $7((int_32 *(*($7) + [36])))
	$7 = $9
	if ( ((*($19) & [1]) == 0) ){ goto $label$312 }
	
.LABEL $label$313
	$7 = *($20)
	
.LABEL $label$312
	if ( ((int_32)$23 != (int_32)*(($7 + $4))) ){ goto $label$302 }
	$7 = *($0)
	$23 = *($7 + [12])
	if ( ((int_32)$23 == (int_32)*($7 + [16])) ){ goto $label$316 }
	*(($7 + [12])) = ($23 + [4])
	$2 = ($2 + [1])
	$7 = *($19)
	if ( ($7 & [1]) ){ goto $label$315 }
	goto $label$301 
	
.LABEL $label$316
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$2 = ($2 + [1])
	$7 = *($19)
	if ( (($7 & [1]) == 0) ){ goto $label$301 }
	
.LABEL $label$315
	$4 = ($4 + [4])
	if ( ($2 <= *($9)) ){ goto $label$300 }
	goto $label$297 
	
.LABEL $label$302
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$301
	$4 = ($4 + [4])
	if ( ($2 <= uint_32($7 >> [1])) ){ goto $label$300 }
	
.LABEL $label$297
	$2 = [1]
	if ( ((int_32)$22 == (int_32)$3) ){ goto $label$3 }
	$23 = ($7 & [1])
	$7 = *($11 + [80])
	if ( (( *($11 + [84]) ? uint_32($7 >> [1]) : $23 ) == 0) ){ goto $label$3 }
	$3 = ($3 + [-4])
	$9 = ((uint_32)$3 <= (uint_32)$22)
	if ( $9 ){ goto $label$317 }
	$1 = $3
	$0 = $22
	
.LOOP $label$318:
	$7 = *($0)
	*($0) = *($1)
	*($1) = $7
	$1 = ($1 + [-4])
	$0 = ($0 + [4])
	if ( ($0 <= $1) ){ goto $label$318 }
	$7 = *($11 + [80])
	$23 = ($7 & [1])
	
.LABEL $label$317
	$2 = [1]
	$1 = ( *(($11 + [88])) ? (($11 + [80]) | [1]) : $23 )
	$0 = *($1)
	$4 = (((int_32)$0 > (int_32)[0]) & ((int_32)$0 != (int_32)[127]))
	if ( $9 ){ goto $label$320 }
	$23 = ($1 + ( *($11 + [84]) ? uint_32($7 >> [1]) : $23 ))
	$7 = $22
	
.LOOP $label$321:
	if ( (($4 & [1]) == 0) ){ goto $label$322 }
	if ( ((int_32)*($7) != (int_32)int_32(($0 << [24]) >> [24])) ){ goto $label$319 }
	
.LABEL $label$322
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($23 - $1) > (int_32)[1]) )
	$0 = *($1)
	$4 = (((int_32)$0 > (int_32)[0]) & ((int_32)$0 != (int_32)[127]))
	$7 = ($7 + [4])
	if ( ($7 <= $3) ){ goto $label$321 }
	
.LABEL $label$320
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($3) + [-1]) <= $0) ){ goto $label$3 }
	
.LABEL $label$319
	*($5) = (*($5) | [4])
	
.LABEL $label$4
	$2 = [0]
	
.LABEL $label$3
	$25 = $22
	$1 = [1]
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($11 + [24])))
	
.LABEL $label$1
	if ( (*($11 + [32]) & $1) ){ goto $label$331 }
	$1 = [1]
	if ( (*($11 + [48]) & [1]) ){ goto $label$330 }
	goto $label$329 
	
.LABEL $label$331
	CALL _ZdlPv(*(($11 + [40])))
	$1 = [1]
	if ( ((*($11 + [48]) & [1]) == 0) ){ goto $label$329 }
	
.LABEL $label$330
	CALL _ZdlPv(*(($11 + [56])))
	if ( ((*($11 + [64]) & $1) == 0) ){ goto $label$328 }
	goto $label$327 
	
.LABEL $label$329
	if ( (*($11 + [64]) & $1) ){ goto $label$327 }
	
.LABEL $label$328
	if ( (*($11 + [80]) & [1]) ){ goto $label$326 }
	goto $label$325 
	
.LABEL $label$327
	CALL _ZdlPv(*(($11 + [72])))
	if ( ((*($11 + [80]) & [1]) == 0) ){ goto $label$325 }
	
.LABEL $label$326
	CALL _ZdlPv(*(($11 + [88])))
	if ( $25 ){ goto $label$324 }
	goto $label$323 
	
.LABEL $label$325
	if ( ($25 == 0) ){ goto $label$323 }
	
.LABEL $label$324
	CALL void $25((int_32 $21))
	
.LABEL $label$323
	$global$0 = ($11 + [512])
	$4
	$24
	(unreachable)
	return $2
}

int_32 .FUNC $174 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($1 = ($0 + *((*($0) + [-12])))) + [4]) = [11248]
	$2 = *($1 + [44])
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ($1 + [4])
	$0 = (($2 << [2]) + [-4])
	$4 = ($1 + [40])
	$5 = ($1 + [36])
	
.LOOP $label$2:
	CALL void [0]((int_32 $3), (int_32 *((*($4) + $0))), (int_32 *((*($5) + $0))))
	$0 = ($0 + [-4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($1 + [32]))
	CALL $650(*(($1 + [36])))
	CALL $650(*(($1 + [40])))
	CALL $650(*($1 + [52]))
	CALL $650(*($1 + [64]))
	return $1
}

void .FUNC $175 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [4]) = [11248]
	$1 = *(($0 + [44]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [4])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [40])
	$5 = ($0 + [36])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [32]))
	CALL $650(*(($0 + [36])))
	CALL $650(*(($0 + [40])))
	CALL $650(*(($0 + [52])))
	CALL $650(*(($0 + [64])))
	CALL _ZdlPv($0)
}

void .FUNC $176 (int_32 $0)
{
	CALL $175(($0 + *((*($0) + [-12]))))
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *((*($0) + [-12]))
	$4 = ($0 + $3)
	if ( *($4 + [16]) ){ goto $label$1 }
	$4 = *($4 + [72])
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $172($4)
	$3 = *((*($0) + [-12]))
	
.LABEL $label$2
	$3 = CALL $406($2, (($0 + $3) + [28]))
	$4 = CALL $408($3, [11328])
	CALL $407($3)
	$3 = ($0 + *((*($0) + [-12])))
	$5 = *($3 + [24])
	$6 = *($3 + [76])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $406(($2 + [8]), ($3 + [28]))
	$6 = CALL $408($7, [11500])
	$6 = CALL int_32 $6((int_32 [32]), (int_32 *(*($6) + [28])))
	CALL $407($7)
	*(($3 + [76])) = $6
	
.LABEL $label$3
	if ( CALL int_32 $4((int_32 $5), (int_32 $3), (int_32 int_32(($6 << [24]) >> [24])), (int_32 $1), (int_32 *(*($4) + [16]))) ){ goto $label$1 }
	*(($3 = ($0 + *((*($0) + [-12])))) + [16]) = (*($3 + [16]) | [5])
	
.LABEL $label$1
	$3 = ($0 + *((*($0) + [-12])))
	if ( (*($3 + [24]) == 0) ){ goto $label$4 }
	if ( *($3 + [16]) ){ goto $label$4 }
	if ( ((*(($3 + [5])) & [32]) == 0) ){ goto $label$4 }
	if ( CALL $551() ){ goto $label$4 }
	$3 = *(($0 + *((*($0) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $3((int_32 *(*($3) + [24]))) != (int_32)[-1]) ){ goto $label$4 }
	*(($3 = ($0 + *((*($0) + [-12])))) + [16]) = (*($3 + [16]) | [1])
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $170 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = [11248]
	$1 = *(($0 + [48]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [8])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [44])
	$5 = ($0 + [40])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [36]))
	CALL $650(*(($0 + [40])))
	CALL $650(*(($0 + [44])))
	CALL $650(*(($0 + [56])))
	CALL $650(*(($0 + [68])))
	CALL _ZdlPv($0)
}

void .FUNC $171 (int_32 $0)
{
	CALL $170(($0 + *((*($0) + [-12]))))
}

int_32 .FUNC $172 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($0 + *((*($0) + [-12])))
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$2 }
	$1 = *($1 + [72])
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $172($1)
	$2 = *(($0 + *((*($0) + [-12]))) + [24])
	
.LABEL $label$3
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [24]))) != (int_32)[-1]) ){ goto $label$2 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$2
	$1 = ($0 + *((*($0) + [-12])))
	if ( (*($1 + [24]) == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$1 }
	if ( ((*(($1 + [5])) & [32]) == 0) ){ goto $label$1 }
	if ( CALL $551() ){ goto $label$1 }
	$1 = *(($0 + *((*($0) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [24]))) != (int_32)[-1]) ){ goto $label$1 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $173 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [4]) = [11248]
	$1 = *(($0 + [44]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [4])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [40])
	$5 = ($0 + [36])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [32]))
	CALL $650(*(($0 + [36])))
	CALL $650(*(($0 + [40])))
	CALL $650(*(($0 + [52])))
	CALL $650(*(($0 + [64])))
	return $0
}

int_32 .FUNC $624 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [144])
	$global$0 = $3
	*(($3 = CALL memset($3, [0], [144])) + [44]) = $0
	*($3 + [32]) = [321]
	*($3 + [76]) = [-1]
	*($3 + [84]) = $0
	$0 = CALL $621($3, $1, $2)
	$global$0 = ($3 + [144])
	return $0
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	return $0
}

int_32 .FUNC $179 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [12]) = [11248]
	$1 = *(($0 + [52]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [12])
	$3 = (($1 << [2]) + [-4])
	$4 = ($0 + [48])
	$5 = ($0 + [44])
	
.LOOP $label$2:
	CALL void [0]((int_32 $2), (int_32 *((*($4) + $3))), (int_32 *((*($5) + $3))))
	$3 = ($3 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [40]))
	CALL $650(*(($0 + [44])))
	CALL $650(*(($0 + [48])))
	CALL $650(*(($0 + [60])))
	CALL $650(*(($0 + [72])))
	return $0
}

int_32 .FUNC $625 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $623($0, $1, $2)
}

int_32 .FUNC $361 (int_32 $0)
{
	return [0]
}

void .FUNC $589 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $588 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $641(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [13824])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $641(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $584 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ($2 <= [4]) ){ goto $label$8 }
	$5 = *($1)
	$6 = $2
	
.LOOP $label$10:
	$7 = *($5)
	if ( (($7 + [-1]) <= [127]) ){ goto $label$12 }
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = [-1]
	$7 = CALL $582($0, $7, [0])
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$5 }
	$6 = ($6 - $7)
	$0 = ($0 + $7)
	goto $label$11 
	
.LABEL $label$12
	*($0) = $7
	$6 = ($6 + [-1])
	$0 = ($0 + [1])
	$5 = *($1)
	
.LABEL $label$11
	$5 = ($5 + [4])
	*($1) = $5
	if ( ((uint_32)$6 > (uint_32)[3]) ){ goto $label$10 }
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$6 = *($1)
	$0 = *($6)
	if ( ($0 == 0) ){ goto $label$4 }
	$6 = ($6 + [4])
	$1 = [0]
	
.LOOP $label$13:
	$5 = [1]
	if ( ($0 <= [128]) ){ goto $label$14 }
	$8 = [-1]
	$5 = CALL $582(($4 + [12]), $0, [0])
	if ( ((int_32)$5 == (int_32)[-1]) ){ goto $label$5 }
	
.LABEL $label$14
	$0 = *($6)
	$6 = ($6 + [4])
	$1 = ($5 + $1)
	$8 = $1
	if ( $0 ){ goto $label$13 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $2
	if ( ($6 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = *($1)
	
.LOOP $label$15:
	$7 = *($5)
	if ( (($7 + [-1]) <= [127]) ){ goto $label$16 }
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = [-1]
	$7 = CALL $582(($4 + [12]), $7, [0])
	if ( ((int_32)$7 == (int_32)[-1]) ){ goto $label$5 }
	if ( ($6 <= $7) ){ goto $label$1 }
	CALL $582($0, *($5), [0])
	$0 = ($0 + $7)
	$5 = ($5 + [4])
	*($1) = $5
	$6 = ($6 - $7)
	if ( $6 ){ goto $label$15 }
	goto $label$6 
	
.LABEL $label$16
	*($0) = $7
	$0 = ($0 + [1])
	$5 = (*($1) + [4])
	*($1) = $5
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$6
	$8 = $2
	
.LABEL $label$5
	$global$0 = ($4 + [16])
	return $8
	
.LABEL $label$4
	$global$0 = ($4 + [16])
	return [0]
	
.LABEL $label$3
	*($1) = [0]
	*($0) = [0]
	$global$0 = ($4 + [16])
	return ($2 - $6)
	
.LABEL $label$2
	*($1) = [0]
	*($0) = [0]
	$global$0 = ($4 + [16])
	return ($2 - $6)
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return ($2 - $6)
}

int_32 .FUNC $420 (int_32 $0, int_32 $1)
{
	return $1
}

int_32 .FUNC $586 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [316] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $588($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $588($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $588($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $588($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [33344]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $588($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $588($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $588($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $581 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ( $0 ? ($3 + [12]) : $0 )
	$0 = *($1)
	$5 = int_32(($0 << [24]) >> [24])
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	*($4) = $0
	$global$0 = ($3 + [16])
	return ((int_32)$5 != (int_32)[0])
	
.LABEL $label$3
	$global$0 = ($3 + [16])
	return [0]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$5 }
	$0 = ($0 + [-194])
	if ( ((uint_32)$0 > (uint_32)[50]) ){ goto $label$1 }
	$0 = *((($0 << [2]) + [33136]))
	if ( ((uint_32)$2 > (uint_32)[3]) ){ goto $label$6 }
	if ( ($0 & uint_32([-2147483648] >> (((int_32)$2 * (int_32)[6]) + [-6]))) ){ goto $label$1 }
	
.LABEL $label$6
	$5 = *(($1 + [1]))
	$2 = uint_32($5 >> [3])
	if ( ((uint_32)(($2 + [-16]) | ($2 + int_32($0 >> [26]))) <= (uint_32)[7]) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	*($4) = ($5 & [57343])
	$global$0 = ($3 + [16])
	return [1]
	
.LABEL $label$4
	$0 = (($5 + [-128]) | ($0 << [6]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	*($4) = $0
	$global$0 = ($3 + [16])
	return [2]
	
.LABEL $label$7
	$2 = (*($1 + [2]) + [-128])
	if ( ((uint_32)$2 > (uint_32)[63]) ){ goto $label$1 }
	$0 = ($2 | ($0 << [6]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	*($4) = $0
	$global$0 = ($3 + [16])
	return [3]
	
.LABEL $label$8
	$1 = (*($1 + [3]) + [-128])
	if ( ((uint_32)$1 > (uint_32)[63]) ){ goto $label$1 }
	*($4) = ($1 | ($0 << [6]))
	$global$0 = ($3 + [16])
	return [4]
	
.LABEL $label$1
	*(CALL $564()) = [84]
	$global$0 = ($3 + [16])
	return [-1]
}

int_32 .FUNC $580 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($1)
	if ( ($3 == 0) ){ goto $label$9 }
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	if ( ($0 == 0) ){ goto $label$8 }
	*($3) = [0]
	$3 = $2
	goto $label$2 
	
.LABEL $label$9
	if ( (*([0]) == 0) ){ goto $label$10 }
	$3 = $2
	if ( ($0 == 0) ){ goto $label$5 }
	$3 = $2
	goto $label$3 
	
.LABEL $label$10
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ($2 == 0) ){ goto $label$11 }
	$3 = [0]
	
.LOOP $label$12:
	$5 = *(($4 + $3))
	if ( ($5 == 0) ){ goto $label$6 }
	*($0) = ($5 & [57343])
	$0 = ($0 + [4])
	$3 = ($3 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$12 }
	$4 = ($4 + $3)
	
.LABEL $label$11
	*($1) = $4
	return $2
	
.LABEL $label$8
	$3 = $2
	goto $label$4 
	
.LABEL $label$7
	return CALL $632($4)
	
.LABEL $label$6
	*($1) = [0]
	*($0) = [0]
	return $3
	
.LABEL $label$5
	$6 = [1]
	goto $label$1 
	
.LABEL $label$4
	$6 = [6]
	goto $label$1 
	
.LABEL $label$3
	$6 = [28]
	goto $label$1 
	
.LABEL $label$2
	$6 = [34]
	
.LABEL $label$1
	
.LOOP $label$13:
	goto $label$65 
	
.LABEL $label$107
	if ( ($3 == 0) ){ goto $label$26 }
	$6 = [29]
	goto $label$13 
	
.LABEL $label$106
	$6 = [30]
	goto $label$13 
	
.LABEL $label$105
	$5 = *($4)
	$7 = ($5 + [-1])
	if ( ((uint_32)$7 > (uint_32)[126]) ){ goto $label$24 }
	$6 = [46]
	goto $label$13 
	
.LABEL $label$104
	if ( ($3 <= [5]) ){ goto $label$17 }
	$6 = [47]
	goto $label$13 
	
.LABEL $label$103
	if ( ($4 & [3]) ){ goto $label$16 }
	$6 = [48]
	goto $label$13 
	
.LABEL $label$102
	$5 = *($4)
	if ( ((($5 + [-16843009]) | $5) & [-2139062144]) ){ goto $label$14 }
	$6 = [50]
	goto $label$13 
	
.LABEL $label$101
	*($0) = ($5 & [255])
	*(($0 + [4])) = *($4 + [1])
	*(($0 + [8])) = *(($4 + [2]))
	*(($0 + [12])) = *(($4 + [3]))
	$4 = ($4 + [4])
	$0 = ($0 + [16])
	$3 = ($3 + [-4])
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$15 }
	$6 = [51]
	goto $label$13 
	
.LABEL $label$100
	$5 = *($4)
	$6 = [49]
	goto $label$13 
	
.LABEL $label$99
	$5 = ($5 & [255])
	$7 = ($5 + [-1])
	$6 = [31]
	goto $label$13 
	
.LABEL $label$98
	if ( ((uint_32)$7 > (uint_32)[126]) ){ goto $label$23 }
	$6 = [44]
	goto $label$13 
	
.LABEL $label$97
	*($0) = $5
	$0 = ($0 + [4])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$25 }
	$6 = [45]
	goto $label$13 
	
.LABEL $label$96
	*($1) = $4
	return $2
	
.LABEL $label$95
	$5 = ($5 + [-194])
	if ( ((uint_32)$5 > (uint_32)[50]) ){ goto $label$22 }
	$6 = [33]
	goto $label$13 
	
.LABEL $label$94
	$4 = ($4 + [1])
	$5 = *((($5 << [2]) + [33136]))
	$6 = [34]
	goto $label$13 
	
.LABEL $label$93
	$8 = *($4)
	$7 = uint_32($8 >> [3])
	if ( ((uint_32)(($7 + [-16]) | ($7 + int_32($5 >> [26]))) > (uint_32)[7]) ){ goto $label$39 }
	$6 = [35]
	goto $label$13 
	
.LABEL $label$92
	$7 = ($4 + [1])
	$5 = (($8 + [-128]) | ($5 << [6]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$21 }
	$6 = [36]
	goto $label$13 
	
.LABEL $label$91
	$4 = $7
	goto $label$28 
	
.LABEL $label$90
	$7 = (*($7) + [-128])
	if ( ((uint_32)$7 > (uint_32)[63]) ){ goto $label$20 }
	$6 = [38]
	goto $label$13 
	
.LABEL $label$89
	$8 = ($4 + [2])
	$5 = ($7 | ($5 << [6]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$19 }
	$6 = [39]
	goto $label$13 
	
.LABEL $label$88
	$4 = $8
	goto $label$27 
	
.LABEL $label$87
	$7 = (*($8) + [-128])
	if ( ((uint_32)$7 > (uint_32)[63]) ){ goto $label$18 }
	$6 = [41]
	goto $label$13 
	
.LABEL $label$86
	$4 = ($4 + [3])
	$5 = ($7 | ($5 << [6]))
	$6 = [27]
	goto $label$13 
	
.LABEL $label$85
	*($0) = $5
	$3 = ($3 + [-1])
	$0 = ($0 + [4])
	goto $label$55 
	
.LABEL $label$84
	*(CALL $564()) = [84]
	$7 = ($4 + [-1])
	goto $label$34 
	
.LABEL $label$83
	$7 = $4
	if ( *($7) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$82
	$7 = $4
	$6 = [3]
	goto $label$13 
	
.LABEL $label$81
	$4 = ($5 & [255])
	if ( ((uint_32)($4 + [-1]) > (uint_32)[126]) ){ goto $label$47 }
	$6 = [22]
	goto $label$13 
	
.LABEL $label$80
	$3 = ($3 + [-1])
	$4 = ($7 + [1])
	$5 = *($4)
	if ( ((uint_32)($5 + [-1]) > (uint_32)[126]) ){ goto $label$54 }
	$6 = [23]
	goto $label$13 
	
.LABEL $label$79
	if ( ($4 & [3]) ){ goto $label$30 }
	$6 = [25]
	goto $label$13 
	
.LABEL $label$78
	$5 = *($4)
	if ( (((($5 + [-16843009]) | $5) & [-2139062144]) == 0) ){ goto $label$29 }
	$6 = [24]
	goto $label$13 
	
.LABEL $label$77
	$7 = $4
	$4 = ($5 & [255])
	if ( ((uint_32)($4 + [-1]) <= (uint_32)[126]) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$76
	$3 = ($3 + [-4])
	$5 = *($4 + [4])
	$7 = ($4 + [4])
	$4 = $7
	if ( ((($5 | ($5 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$75
	$5 = ($4 + [-194])
	if ( ((uint_32)$5 > (uint_32)[50]) ){ goto $label$44 }
	$6 = [5]
	goto $label$13 
	
.LABEL $label$74
	$4 = ($7 + [1])
	$5 = *((($5 << [2]) + [33136]))
	$6 = [6]
	goto $label$13 
	
.LABEL $label$73
	$7 = uint_32(*($4) >> [3])
	if ( ((uint_32)(($7 + [-16]) | (int_32($5 >> [26]) + $7)) > (uint_32)[7]) ){ goto $label$43 }
	$6 = [7]
	goto $label$13 
	
.LABEL $label$72
	$7 = ($4 + [1])
	if ( ($5 & [33554432]) ){ goto $label$42 }
	$6 = [21]
	goto $label$13 
	
.LABEL $label$71
	$4 = $7
	goto $label$53 
	
.LABEL $label$70
	if ( ((int_32)(*($7) & [192]) != (int_32)[128]) ){ goto $label$41 }
	$6 = [17]
	goto $label$13 
	
.LABEL $label$69
	$7 = ($4 + [2])
	if ( ($5 & [524288]) ){ goto $label$31 }
	$6 = [20]
	goto $label$13 
	
.LABEL $label$68
	$4 = $7
	goto $label$52 
	
.LABEL $label$67
	if ( ((int_32)(*($7) & [192]) != (int_32)[128]) ){ goto $label$40 }
	$6 = [19]
	goto $label$13 
	
.LABEL $label$66
	$4 = ($4 + [3])
	$6 = [0]
	goto $label$13 
	
.LABEL $label$65
	$3 = ($3 + [-1])
	$6 = [1]
	goto $label$13 
	
.LABEL $label$64
	$5 = *($4)
	if ( ((uint_32)($5 + [-1]) <= (uint_32)[126]) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$63
	$7 = ($4 + [-1])
	if ( $5 ){ goto $label$38 }
	$6 = [13]
	goto $label$13 
	
.LABEL $label$62
	if ( (*($7) == 0) ){ goto $label$37 }
	$6 = [10]
	goto $label$13 
	
.LABEL $label$61
	*(CALL $564()) = [84]
	if ( ($0 == 0) ){ goto $label$33 }
	$6 = [11]
	goto $label$13 
	
.LABEL $label$60
	*($1) = $7
	$6 = [12]
	goto $label$13 
	
.LABEL $label$59
	return [-1]
	
.LABEL $label$58
	if ( ($0 == 0) ){ goto $label$32 }
	$6 = [15]
	goto $label$13 
	
.LABEL $label$57
	*($1) = [0]
	*($0) = [0]
	$6 = [16]
	goto $label$13 
	
.LABEL $label$56
	return ($2 - $3)
	
.LABEL $label$55
	$6 = [28]
	goto $label$13 
	
.LABEL $label$54
	$6 = [2]
	goto $label$13 
	
.LABEL $label$53
	$6 = [0]
	goto $label$13 
	
.LABEL $label$52
	$6 = [0]
	goto $label$13 
	
.LABEL $label$51
	$6 = [23]
	goto $label$13 
	
.LABEL $label$50
	$6 = [2]
	goto $label$13 
	
.LABEL $label$49
	$6 = [26]
	goto $label$13 
	
.LABEL $label$48
	$6 = [3]
	goto $label$13 
	
.LABEL $label$47
	$6 = [4]
	goto $label$13 
	
.LABEL $label$46
	$6 = [22]
	goto $label$13 
	
.LABEL $label$45
	$6 = [4]
	goto $label$13 
	
.LABEL $label$44
	$6 = [13]
	goto $label$13 
	
.LABEL $label$43
	$6 = [9]
	goto $label$13 
	
.LABEL $label$42
	$6 = [8]
	goto $label$13 
	
.LABEL $label$41
	$6 = [9]
	goto $label$13 
	
.LABEL $label$40
	$6 = [9]
	goto $label$13 
	
.LABEL $label$39
	$6 = [9]
	goto $label$13 
	
.LABEL $label$38
	$6 = [10]
	goto $label$13 
	
.LABEL $label$37
	$6 = [14]
	goto $label$13 
	
.LABEL $label$36
	$6 = [14]
	goto $label$13 
	
.LABEL $label$35
	$6 = [10]
	goto $label$13 
	
.LABEL $label$34
	$6 = [11]
	goto $label$13 
	
.LABEL $label$33
	$6 = [12]
	goto $label$13 
	
.LABEL $label$32
	$6 = [16]
	goto $label$13 
	
.LABEL $label$31
	$6 = [18]
	goto $label$13 
	
.LABEL $label$30
	$6 = [24]
	goto $label$13 
	
.LABEL $label$29
	$6 = [26]
	goto $label$13 
	
.LABEL $label$28
	$6 = [27]
	goto $label$13 
	
.LABEL $label$27
	$6 = [27]
	goto $label$13 
	
.LABEL $label$26
	$6 = [45]
	goto $label$13 
	
.LABEL $label$25
	$6 = [30]
	goto $label$13 
	
.LABEL $label$24
	$6 = [31]
	goto $label$13 
	
.LABEL $label$23
	$6 = [32]
	goto $label$13 
	
.LABEL $label$22
	$6 = [43]
	goto $label$13 
	
.LABEL $label$21
	$6 = [37]
	goto $label$13 
	
.LABEL $label$20
	$6 = [42]
	goto $label$13 
	
.LABEL $label$19
	$6 = [40]
	goto $label$13 
	
.LABEL $label$18
	$6 = [42]
	goto $label$13 
	
.LABEL $label$17
	$6 = [44]
	goto $label$13 
	
.LABEL $label$16
	$6 = [44]
	goto $label$13 
	
.LABEL $label$15
	$6 = [48]
	goto $label$13 
	
.LABEL $label$14
	$6 = [49]
	goto $label$13 
	return $6
}

int_32 .FUNC $583 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [272])
	$global$0 = $5
	$6 = *($1)
	*($5 + [12]) = $6
	$7 = ( $0 ? ($5 + [16]) : $0 )
	$8 = [0]
	$3 = ( $3 ? [256] : $0 )
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$6 }
	$9 = ((uint_32)$3 <= (uint_32)$2)
	if ( $9 ){ goto $label$5 }
	if ( ((uint_32)$2 >= (uint_32)[33]) ){ goto $label$5 }
	
.LABEL $label$6
	$10 = $6
	if ( ($10 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	
.LOOP $label$9:
	$9 = CALL $584($7, ($5 + [12]), ( $3 ? $2 : ($9 & [1]) ), [0])
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$8 }
	$10 = *($5 + [12])
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = ((int_32)$7 == (int_32)($5 + [16]))
	$7 = ( $7 ? ($7 + $9) : $11 )
	$8 = ($9 + $8)
	$2 = ($2 - int_32(($10 - $6) >> [2]))
	$3 = ($3 - ( [0] ? $9 : $11 ))
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = $10
	$9 = ((uint_32)$2 >= (uint_32)$3)
	if ( $9 ){ goto $label$9 }
	$6 = $10
	if ( ((uint_32)$2 >= (uint_32)[33]) ){ goto $label$9 }
	if ( $10 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$8
	$8 = [-1]
	$3 = [0]
	$10 = *($5 + [12])
	if ( $10 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	$8 = ($9 + $8)
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ($2 == 0) ){ goto $label$3 }
	$11 = ([1] - $2)
	$9 = $8
	
.LOOP $label$12:
	$6 = $11
	$2 = CALL $582($7, *($10), [0])
	if ( ((uint_32)($2 + [1]) <= (uint_32)[1]) ){ goto $label$11 }
	$10 = (*($5 + [12]) + [4])
	*($5 + [12]) = $10
	$9 = ($2 + $9)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$10 }
	$11 = ($6 + [1])
	$7 = ($7 + $2)
	$8 = $9
	if ( $6 ){ goto $label$12 }
	goto $label$3 
	
.LABEL $label$11
	$8 = [-1]
	if ( $2 ){ goto $label$3 }
	*($5 + [12]) = [0]
	
.LABEL $label$10
	$8 = $9
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($1) = *($5 + [12])
	
.LABEL $label$1
	$global$0 = ($5 + [272])
	return $8
}

int_32 .FUNC $582 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL $564()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL $564()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $237 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $238($0, $1, $2, $3, $4, $5)
}

void .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $235 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [64])
	$global$0 = $6
	*($6 + [40]) = $1
	if ( (*($3 + [4]) & [1]) ){ goto $label$4 }
	*($6) = [-1]
	$3 = CALL int_32 $0((int_32 $1), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $6), (int_32 *(*($0) + [16])))
	*($6 + [40]) = $3
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$3 }
	if ( $1 ){ goto $label$2 }
	*($5) = [0]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$4
	CALL $151(($6 + [32]), $3)
	$0 = *($6 + [32])
	*($6 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$6 }
	*($6 + [56]) = $6
	*($6 + [48]) = ($6 + [56])
	CALL $516([11492], ($6 + [48]), [60])
	$1 = *($6 + [32])
	goto $label$5 
	
.LABEL $label$6
	$1 = $0
	
.LABEL $label$5
	$7 = *([0] + [11496])
	$8 = *($1 + [4])
	*($1 + [4]) = ($8 + [-1])
	$0 = *(((*($0 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$7 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$7
	CALL $151(($6 + [32]), $3)
	$3 = *($6 + [32])
	*($6 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$9 }
	*($6 + [56]) = $6
	*($6 + [48]) = ($6 + [56])
	CALL $516([11548], ($6 + [48]), [60])
	$1 = *($6 + [32])
	goto $label$8 
	
.LABEL $label$9
	$1 = $3
	
.LABEL $label$8
	$7 = *([0] + [11552])
	$8 = *($1 + [4])
	*($1 + [4]) = ($8 + [-1])
	$3 = *(((*($3 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$10 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$10
	CALL void $6((int_32 $3), (int_32 *(*($3) + [24])))
	CALL void ($6 | [12])((int_32 $3), (int_32 *(*($3) + [28])))
	*($5) = ((int_32)CALL $236(($6 + [40]), $2, $6, ($6 + [24]), $0, $4, [1]) == (int_32)$6)
	$3 = *($6 + [40])
	if ( (*($6 + [12]) & [1]) ){ goto $label$12 }
	if ( (*($6) & [1]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	CALL _ZdlPv(*(($6 + [20])))
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$11
	CALL _ZdlPv(*($6 + [8]))
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$3
	*($5) = [1]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$2
	*($4) = [4]
	*($5) = [1]
	$global$0 = ($6 + [64])
	return $3
	
.LABEL $label$1
	$global$0 = ($6 + [64])
	return $3
}

int_32 .FUNC $479 (int_32 $0)
{
	return *($0 + [12])
}

void .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	*($0) = [2]
	CALL $638(($0 + [4]), [45], [1])
	*($2) = [0]
}

int_32 .FUNC $572 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL $570(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $574 (int_32 $0)
{
	return (((int_32)$0 != (int_32)[33024]) & (((int_32)$0 != (int_32)[0]) & ((int_32)$0 != (int_32)[33000])))
}

int_32 .FUNC $575 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	if ( ((int_32)$2 == (int_32)[33024]) ){ goto $label$16 }
	if ( ($2 == 0) ){ goto $label$16 }
	if ( ((int_32)$2 == (int_32)[33000]) ){ goto $label$16 }
	if ( ($0 & [1]) ){ goto $label$15 }
	if ( ($0 & [2]) ){ goto $label$14 }
	goto $label$9 
	
.LABEL $label$16
	$4 = ($0 & [1])
	if ( ($2 == 0) ){ goto $label$13 }
	if ( $4 ){ goto $label$12 }
	$4 = *($2)
	goto $label$11 
	
.LABEL $label$15
	*($2) = CALL $573([0], $1)
	if ( (($0 & [2]) == 0) ){ goto $label$9 }
	
.LABEL $label$14
	*($2 + [4]) = CALL $573([1], $1)
	if ( (($0 & [4]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$13
	$2 = CALL $573([0], ( $1 ? [8211] : $4 ))
	*($3 + [8]) = $2
	$4 = CALL $573([1], ( $1 ? [8211] : ($0 & [2]) ))
	*($3 + [12]) = $4
	$5 = CALL $573([2], ( $1 ? [8211] : ($0 & [4]) ))
	*($3 + [16]) = $5
	$6 = CALL $573([3], ( $1 ? [8211] : ($0 & [8]) ))
	*($3 + [20]) = $6
	$7 = CALL $573([4], ( $1 ? [8211] : ($0 & [16]) ))
	*($3 + [24]) = $7
	$4 = ((((((int_32)$2 != (int_32)[0]) + ((int_32)$4 != (int_32)[0])) + ((int_32)$5 != (int_32)[0])) + ((int_32)$6 != (int_32)[0])) + ((int_32)$7 != (int_32)[0]))
	$2 = CALL $573([5], ( $1 ? [8211] : ($0 & [32]) ))
	goto $label$10 
	
.LABEL $label$12
	$4 = CALL $573([0], $1)
	
.LABEL $label$11
	*($3 + [8]) = $4
	$5 = ((int_32)$4 != (int_32)[0])
	if ( ($0 & [2]) ){ goto $label$18 }
	$4 = *($2 + [4])
	goto $label$17 
	
.LABEL $label$18
	$4 = CALL $573([1], $1)
	
.LABEL $label$17
	*($3 + [12]) = $4
	$5 = ($5 + ((int_32)$4 != (int_32)[0]))
	if ( ($0 & [4]) ){ goto $label$20 }
	$4 = *($2 + [8])
	goto $label$19 
	
.LABEL $label$20
	$4 = CALL $573([2], $1)
	
.LABEL $label$19
	*($3 + [16]) = $4
	$5 = ($5 + ((int_32)$4 != (int_32)[0]))
	if ( ($0 & [8]) ){ goto $label$22 }
	$4 = *($2 + [12])
	goto $label$21 
	
.LABEL $label$22
	$4 = CALL $573([3], $1)
	
.LABEL $label$21
	*($3 + [20]) = $4
	$5 = ($5 + ((int_32)$4 != (int_32)[0]))
	if ( ($0 & [16]) ){ goto $label$24 }
	$4 = *($2 + [16])
	goto $label$23 
	
.LABEL $label$24
	$4 = CALL $573([4], $1)
	
.LABEL $label$23
	*($3 + [24]) = $4
	$4 = ($5 + ((int_32)$4 != (int_32)[0]))
	if ( ($0 & [32]) ){ goto $label$25 }
	$2 = *($2 + [20])
	goto $label$10 
	
.LABEL $label$25
	$2 = CALL $573([5], $1)
	
.LABEL $label$10
	*($3 + [28]) = $2
	$2 = (($4 + ((int_32)$2 != (int_32)[0])) & [2147483647])
	if ( ($2 == 0) ){ goto $label$27 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$28 }
	if ( ((int_32)*($3 + [8]) == (int_32)[32964]) ){ goto $label$26 }
	
.LABEL $label$28
	$2 = CALL $643([24])
	if ( ($2 == 0) ){ goto $label$1 }
	*($2) = *($3 + [8])
	*(($2 + [16])) = *((($3 + [8]) + [16]))
	*(($2 + [8])) = *((($3 + [8]) + [8]))
	goto $label$1 
	
.LABEL $label$27
	$global$0 = ($3 + [32])
	return [33000]
	
.LABEL $label$26
	$global$0 = ($3 + [32])
	return [33024]
	
.LABEL $label$9
	if ( ($0 & [4]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ($0 & [8]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	*($2 + [8]) = CALL $573([2], $1)
	if ( (($0 & [8]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($2 + [12]) = CALL $573([3], $1)
	if ( (($0 & [16]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ($0 & [16]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($0 & [32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($2 + [16]) = CALL $573([4], $1)
	if ( (($0 & [32]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($2 + [20]) = CALL $573([5], $1)
	$global$0 = ($3 + [32])
	return $2
	
.LABEL $label$1
	$global$0 = ($3 + [32])
	return $2
}

int_32 .FUNC $576 (int_32 $0)
{
	int_32 $1
	$1 = *([0] + [14192])
	if ( ($0 == 0) ){ goto $label$1 }
	*([0] + [14192]) = ( [14156] ? $0 : ((int_32)$0 == (int_32)[-1]) )
	
.LABEL $label$1
	return ( [-1] ? $1 : ((int_32)$1 == (int_32)[14156]) )
}

int_32 .FUNC $577 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $578([0], $0, $1, ( $2 ? [14196] : $2 ))
}

int_32 .FUNC $471 (int_32 $0)
{
	return [4]
}

int_32 .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)20
	*($0) = *(*(*($2 + [4])) + [88])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)0
	*($0) = *(*(*($2 + [4])) + [56])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $472 (int_32 $0)
{
	*($0) = [24920]
	if ( ((*($0 + [12]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [20])))
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

void .FUNC $475 (int_32 $0)
{
	*($0) = [24960]
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [24])))
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $474 (int_32 $0)
{
	*($0) = [24960]
	if ( ((*($0 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [24])))
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

int_32 .FUNC $477 (int_32 $0)
{
	return *($0 + [8])
}

int_32 .FUNC $232 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$1 = CALL $576($1)
	$0 = CALL $624($0, $2, *($4 + [12]))
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $576($1)
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return $0
}

int_32 .FUNC $408 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = ($global$0 - [32])
	$global$0 = $2
	$0 = *($0)
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = $1
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$1 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516($1, ($2 + [16]), [60])
	
.LABEL $label$1
	$1 = *(((*($0 + [16]) + (*($1 + [4]) << [2])) + [-4]))
	$global$0 = ($2 + [32])
	return $1
}

int_32 .FUNC $231 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [256])
	$global$0 = $6
	*($6 + [208]) = (int_64)0
	*($6 + [216]) = [0]
	CALL $151(($6 + [200]), $3)
	$3 = *($6 + [200])
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($6 + [224]) = ($6 + [16])
	*($6 + [184]) = ($6 + [224])
	CALL $516([11500], ($6 + [184]), [60])
	
.LABEL $label$1
	$3 = *(((*($3 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	CALL int_32 $3((int_32 [22720]), (int_32 [22746]), (int_32 ($6 + [224])), (int_32 *(*($3) + [32])))
	$7 = *($3 + [4])
	*(($3 = *($6 + [200])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$2 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$2
	*($6 + [192]) = [0]
	*($6 + [184]) = (int_64)0
	CALL $533(($6 + [184]), [10], [0])
	$8 = (($6 + [184]) | [1])
	$7 = ( *($6 + [192]) ? $8 : (*($6 + [184]) & [1]) )
	*($6 + [200]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$9 = ($6 + [192])
	$3 = [0]
	if ( $1 ){ goto $label$4 }
	$11 = [1]
	goto $label$3 
	
.LABEL $label$4
	$11 = [30]
	
.LABEL $label$3
	
.LOOP $label$5:
	goto $label$78 
	
.LABEL $label$80
	*($10) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$37 }
	$11 = [30]
	goto $label$5 
	
.LABEL $label$79
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$40 }
	$11 = [0]
	goto $label$5 
	
.LABEL $label$78
	$3 = $1
	goto $label$41 
	
.LABEL $label$77
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$11 = [1]
	goto $label$5 
	
.LABEL $label$76
	if ( ($2 == 0) ){ goto $label$36 }
	$11 = [2]
	goto $label$5 
	
.LABEL $label$75
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$35 }
	$11 = [37]
	goto $label$5 
	
.LABEL $label$74
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$34 }
	$11 = [3]
	goto $label$5 
	
.LABEL $label$73
	if ( ($3 == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$72
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$31 }
	$11 = [24]
	goto $label$5 
	
.LABEL $label$71
	$1 = *($6 + [184])
	$1 = ( *($6 + [188]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [200]) == (int_32)($7 + $1)) ){ goto $label$11 }
	$11 = [25]
	goto $label$5 
	
.LABEL $label$70
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$10 }
	$11 = [26]
	goto $label$5 
	
.LABEL $label$69
	$1 = *($1)
	goto $label$8 
	
.LABEL $label$68
	CALL $533(($6 + [184]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$6 }
	$11 = [35]
	goto $label$5 
	
.LABEL $label$67
	$7 = ((*($6 + [184]) & [-2]) + [-1])
	$11 = [36]
	goto $label$5 
	
.LABEL $label$66
	CALL $533(($6 + [184]), $7, [0])
	$7 = ( *($9) ? $8 : (*($6 + [184]) & [1]) )
	*($6 + [200]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$9 }
	$11 = [33]
	goto $label$5 
	
.LABEL $label$65
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [27]
	goto $label$5 
	
.LABEL $label$64
	if ( CALL $206(int_32(($1 << [24]) >> [24]), [16], $7, ($6 + [200]), ($6 + [8]), [0], ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$30 }
	$11 = [28]
	goto $label$5 
	
.LABEL $label$63
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$7 }
	$11 = [32]
	goto $label$5 
	
.LABEL $label$62
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$61
	CALL $533(($6 + [184]), (*($6 + [200]) - $7), [0])
	$7 = ( *(($6 + [192])) ? $8 : (*($6 + [184]) & [1]) )
	if ( (*([0] + [11460]) == 0) ){ goto $label$29 }
	$11 = [23]
	goto $label$5 
	
.LABEL $label$60
	$1 = *([0] + [11456])
	$11 = [6]
	goto $label$5 
	
.LABEL $label$59
	*($6) = $5
	if ( ((int_32)CALL $232($7, $1, [8414], $6) == (int_32)[1]) ){ goto $label$27 }
	$11 = [7]
	goto $label$5 
	
.LABEL $label$58
	*($4) = [4]
	$11 = [8]
	goto $label$5 
	
.LABEL $label$57
	if ( ($3 == 0) ){ goto $label$26 }
	$11 = [9]
	goto $label$5 
	
.LABEL $label$56
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$25 }
	$11 = [10]
	goto $label$5 
	
.LABEL $label$55
	if ( ($2 == 0) ){ goto $label$24 }
	$11 = [11]
	goto $label$5 
	
.LABEL $label$54
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$20 }
	$11 = [12]
	goto $label$5 
	
.LABEL $label$53
	if ( ($3 == 0) ){ goto $label$19 }
	$11 = [13]
	goto $label$5 
	
.LABEL $label$52
	*($4) = (*($4) | [2])
	$11 = [14]
	goto $label$5 
	
.LABEL $label$51
	if ( (*($6 + [184]) & [1]) ){ goto $label$14 }
	$11 = [18]
	goto $label$5 
	
.LABEL $label$50
	if ( (*($6 + [208]) & [1]) ){ goto $label$13 }
	$11 = [17]
	goto $label$5 
	
.LABEL $label$49
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$48
	CALL _ZdlPv(*(($6 + [192])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$12 }
	$11 = [16]
	goto $label$5 
	
.LABEL $label$47
	CALL _ZdlPv(*(($6 + [216])))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$46
	$3 = [0]
	if ( $2 ){ goto $label$21 }
	$11 = [20]
	goto $label$5 
	
.LABEL $label$45
	if ( $3 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$44
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$43
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$42
	$1 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $1
	goto $label$28 
	
.LABEL $label$41
	$11 = [1]
	goto $label$5 
	
.LABEL $label$40
	$11 = [31]
	goto $label$5 
	
.LABEL $label$39
	$11 = [1]
	goto $label$5 
	
.LABEL $label$38
	$11 = [30]
	goto $label$5 
	
.LABEL $label$37
	$11 = [1]
	goto $label$5 
	
.LABEL $label$36
	$11 = [38]
	goto $label$5 
	
.LABEL $label$35
	$11 = [3]
	goto $label$5 
	
.LABEL $label$34
	$11 = [38]
	goto $label$5 
	
.LABEL $label$33
	$11 = [24]
	goto $label$5 
	
.LABEL $label$32
	$11 = [4]
	goto $label$5 
	
.LABEL $label$31
	$11 = [4]
	goto $label$5 
	
.LABEL $label$30
	$11 = [4]
	goto $label$5 
	
.LABEL $label$29
	$11 = [5]
	goto $label$5 
	
.LABEL $label$28
	$11 = [6]
	goto $label$5 
	
.LABEL $label$27
	$11 = [8]
	goto $label$5 
	
.LABEL $label$26
	$11 = [22]
	goto $label$5 
	
.LABEL $label$25
	$11 = [21]
	goto $label$5 
	
.LABEL $label$24
	$11 = [20]
	goto $label$5 
	
.LABEL $label$23
	$11 = [20]
	goto $label$5 
	
.LABEL $label$22
	$11 = [11]
	goto $label$5 
	
.LABEL $label$21
	$11 = [11]
	goto $label$5 
	
.LABEL $label$20
	$11 = [19]
	goto $label$5 
	
.LABEL $label$19
	$11 = [14]
	goto $label$5 
	
.LABEL $label$18
	$11 = [14]
	goto $label$5 
	
.LABEL $label$17
	$11 = [13]
	goto $label$5 
	
.LABEL $label$16
	$11 = [13]
	goto $label$5 
	
.LABEL $label$15
	$11 = [14]
	goto $label$5 
	
.LABEL $label$14
	$11 = [15]
	goto $label$5 
	
.LABEL $label$13
	$11 = [16]
	goto $label$5 
	
.LABEL $label$12
	$11 = [17]
	goto $label$5 
	
.LABEL $label$11
	$11 = [34]
	goto $label$5 
	
.LABEL $label$10
	$11 = [33]
	goto $label$5 
	
.LABEL $label$9
	$11 = [26]
	goto $label$5 
	
.LABEL $label$8
	$11 = [27]
	goto $label$5 
	
.LABEL $label$7
	$11 = [29]
	goto $label$5 
	
.LABEL $label$6
	$11 = [36]
	goto $label$5 
	return $11
}

int_32 .FUNC $551 ()
{
	CALL $552()
	return (unreachable)
}

int_64 .FUNC $615 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC $93 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)25
	*($0) = *(*(*($2 + [4])) + [112])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $632 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $441 (int_32 $0)
{
	return [1]
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL _Znwj(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL _Znwj([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	$2 = *($4 + [56])
	$1 = ( *(($4 + [60])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [186])
	$10 = (CASTING uint_64)(uint_32 $1)
	$11 = ($6 + ((int_32)$9 * (int_32)[40]))
	$1 = ($7 + [32])
	$9 = ($7 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $64($9, $2)
	$1 = *($1)
	$2 = *($9)
	goto $label$6 
	
.LABEL $label$7
	$1 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$12 = ($7 + [40])
	CALL $66(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$13 = ($2 - $8)
	$9 = [0]
	
.LOOP $label$10:
	$4 = ($8 + $9)
	*((($2 = ($7 + $9)) + [-32])) = *(($4 + [-32]))
	*(($2 + [-40])) = *(($4 + [-40]))
	*(($1 = ($2 + [-24]))) = (int_64)0
	*(($6 = ($2 + [-16]))) = [0]
	$3 = ($4 + [-24])
	*($1) = *($3)
	$1 = ($4 + [-16])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$6 = ($4 + [-12])
	*($1) = *($6)
	*($3) = (int_64)0
	$4 = ($4 + [-4])
	*($2) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$9 = ($9 + [-40])
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$10 }
	$7 = ($7 + $9)
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $7
	*(($0 + [4])) = $12
	*(($0 + [8])) = $11
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = *(($2 + [-12]))
	if ( ($4 == 0) ){ goto $label$13 }
	*(($2 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$4 = ($2 + [-40])
	$9 = *(($2 + [-24]))
	if ( ($9 == 0) ){ goto $label$14 }
	*(($2 + [-20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$14
	$2 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL _ZdlPv($1)
	
.LABEL $label$15
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $650($0)
	
.LABEL $label$1
}

int_32 .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)0
	*($0) = *(*(*($2 + [4])) + [48])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $58 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$0), [9052])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
	
.LABEL $label$1
	$5 = [0]
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5069197016484020224, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $41($0, $4)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)$0), [9052])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), $2)
	return $5
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = $2
	*($3 + [24]) = $1
	$4 = ($0 + [160])
	$1 = *($0 + [48])
	$6 = *(($0 + [188]))
	$5 = *(($0 + [184]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $29($4, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	
.LABEL $label$1
	$1 = *($0)
	*($3 + [8]) = ($3 + [24])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8800])
	CALL $103($4, $8, $1, ($3 + [8]))
	if ( (int_64)($2 == 0) ){ goto $label$5 }
	$1 = *($0 + [56])
	$6 = *(($0 + [188]))
	$5 = *(($0 + [184]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$8 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [160])), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $29($4, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	
.LABEL $label$6
	$1 = *($0)
	*($3 + [8]) = ($3 + [16])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8800])
	CALL $104($4, $8, $1, ($3 + [8]))
	
.LABEL $label$5
	$global$0 = ($3 + [32])
}

int_32 .FUNC $271 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$1 = CALL $576($1)
	$0 = CALL $596($0, $2, *($4 + [12]))
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $576($1)
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return $0
}

int_32 .FUNC $270 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, float_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [192])
	$global$0 = $5
	*($5 + [184]) = (int_64)37
	$6 = *($2 + [4])
	if ( ($6 & [2048]) ){ goto $label$3 }
	$7 = (($5 + [184]) | [1])
	if ( ($6 & [1024]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($5 + [185]) = [43]
	$7 = (($5 + [184]) | [2])
	if ( (($6 & [1024]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($7) = [35]
	$7 = ($7 + [1])
	
.LABEL $label$1
	$8 = [0]
	$9 = ($6 & [260])
	if ( ((int_32)$9 == (int_32)[260]) ){ goto $label$4 }
	*($7) = [10798]
	$7 = ($7 + [2])
	$8 = [1]
	
.LABEL $label$4
	$6 = ($6 & [16384])
	$10 = ($9 & [511])
	if ( ((int_32)$10 == (int_32)[256]) ){ goto $label$7 }
	if ( ((int_32)$10 != (int_32)[4]) ){ goto $label$6 }
	$6 = ( [70] ? [102] : $6 )
	goto $label$5 
	
.LABEL $label$7
	$6 = ( [69] ? [101] : $6 )
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$9 != (int_32)[260]) ){ goto $label$8 }
	$6 = ( [65] ? [97] : $6 )
	goto $label$5 
	
.LABEL $label$8
	$6 = ( [71] ? [103] : $6 )
	
.LABEL $label$5
	*($7) = $6
	*($5 + [140]) = ($5 + [144])
	if ( (*([0] + [11460]) == 0) ){ goto $label$15 }
	$7 = *([0] + [11456])
	if ( ($8 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$14
	*($5 + [48]) = $4
	$6 = CALL $264(($5 + [144]), [30], $7, ($5 + [184]), ($5 + [48]))
	if ( ((int_32)$6 <= (int_32)[29]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$6 = *($2 + [8])
	*($5 + [40]) = $4
	*($5 + [32]) = $6
	$6 = CALL $264(($5 + [144]), [30], $7, ($5 + [184]), ($5 + [32]))
	if ( ((int_32)$6 > (int_32)[29]) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = [0]
	$7 = *($5 + [140])
	goto $label$10 
	
.LABEL $label$11
	if ( (*([0] + [11460]) == 0) ){ goto $label$18 }
	$7 = *([0] + [11456])
	if ( ($8 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	if ( $8 ){ goto $label$16 }
	
.LABEL $label$17
	*($5 + [16]) = $4
	$6 = CALL $271(($5 + [140]), $7, ($5 + [184]), ($5 + [16]))
	$7 = *($5 + [140])
	$9 = $7
	if ( ($7 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$16
	$6 = *($2 + [8])
	*($5 + [8]) = $4
	*($5) = $6
	$6 = CALL $271(($5 + [140]), $7, ($5 + [184]), $5)
	$7 = *($5 + [140])
	$9 = $7
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$10 = ($7 + $6)
	$8 = $10
	$11 = (*(($2 + [4])) & [176])
	if ( ((int_32)$11 == (int_32)[32]) ){ goto $label$24 }
	if ( ((int_32)$11 != (int_32)[16]) ){ goto $label$22 }
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$25 }
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$23 }
	
.LABEL $label$25
	$8 = ($7 + [1])
	
.LABEL $label$24
	if ( ((int_32)$7 == (int_32)($5 + [144])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	if ( ((int_32)$6 < (int_32)[2]) ){ goto $label$22 }
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$22 }
	if ( ((int_32)(*($7 + [1]) | [32]) != (int_32)[120]) ){ goto $label$22 }
	$8 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)($5 + [144])) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$8 = $7
	if ( ((int_32)$7 != (int_32)($5 + [144])) ){ goto $label$20 }
	
.LABEL $label$21
	$7 = [0]
	$6 = ($5 + [80])
	$11 = ($5 + [144])
	goto $label$19 
	
.LABEL $label$20
	$7 = CALL $643(($6 << [1]))
	if ( ($7 == 0) ){ goto $label$9 }
	$11 = *($5 + [140])
	$6 = $7
	
.LABEL $label$19
	CALL $151(($5 + [64]), $2)
	CALL $272($11, $8, $10, $6, ($5 + [76]), ($5 + [72]), ($5 + [64]))
	$10 = *($8 + [4])
	*(($8 = *($5 + [64])) + [4]) = ($10 + [-1])
	if ( $10 ){ goto $label$26 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$26
	$2 = CALL $266($1, $6, *($5 + [76]), *($5 + [72]), $2, $3)
	if ( ($7 == 0) ){ goto $label$27 }
	CALL $650($7)
	
.LABEL $label$27
	if ( ($9 == 0) ){ goto $label$28 }
	CALL $650($9)
	
.LABEL $label$28
	$global$0 = ($5 + [192])
	return $2
	
.LABEL $label$9
	CALL $517()
	return (unreachable)
}

int_32 .FUNC $277 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [48])
	$global$0 = $5
	if ( (*($2 + [4]) & [1]) ){ goto $label$1 }
	$1 = CALL int_32 $0((int_32 $1), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 *(*($0) + [24])))
	$global$0 = ($5 + [48])
	return $1
	
.LABEL $label$1
	CALL $151(($5 + [8]), $2)
	$0 = *($5 + [8])
	*($5 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($5 + [16]) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$3 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11548], ($5 + [32]), [60])
	$2 = *($5 + [8])
	goto $label$2 
	
.LABEL $label$3
	$2 = $0
	
.LABEL $label$2
	$3 = *([0] + [11552])
	$6 = *($2 + [4])
	*($2 + [4]) = ($6 + [-1])
	$0 = *(((*($0 + [16]) + ($3 << [2])) + [-4]))
	if ( ($6 == 0) ){ goto $label$7 }
	$2 = *($0)
	if ( ($4 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL void $2((int_32 *(*($2) + [8])))
	$2 = *($0)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$6
	CALL void ($5 + [16])((int_32 $0), (int_32 *($2 + [28])))
	goto $label$4 
	
.LABEL $label$5
	CALL void ($5 + [16])((int_32 $0), (int_32 *($2 + [24])))
	
.LABEL $label$4
	$6 = *($5 + [24])
	$0 = ($2 & [1])
	$2 = *($5 + [16])
	$7 = *($5 + [20])
	if ( (( $7 ? uint_32($2 >> [1]) : $0 ) == 0) ){ goto $label$10 }
	$8 = (($5 + [16]) | [4])
	$0 = ( $6 ? $8 : $0 )
	$9 = ($5 + [24])
	
.LOOP $label$11:
	$4 = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = *($0)
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)*($1 + [28])) ){ goto $label$14 }
	*($4) = $2
	*(($1 + [24])) = ($4 + [4])
	goto $label$13 
	
.LABEL $label$14
	$2 = CALL int_32 $1((int_32 $2), (int_32 *(*($1) + [52])))
	
.LABEL $label$13
	$4 = ( [0] ? $1 : ((int_32)$2 == (int_32)[-1]) )
	$6 = *($9)
	$7 = *($5 + [20])
	$2 = *($5 + [16])
	
.LABEL $label$12
	$1 = $4
	$3 = ($2 & [1])
	$0 = ($0 + [4])
	if ( ((int_32)$0 != (int_32)(( $6 ? $8 : $3 ) + (( $7 ? uint_32(($2 & [254]) >> [1]) : $3 ) << [2]))) ){ goto $label$11 }
	$1 = $4
	if ( ($3 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ($0 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv($6)
	
.LABEL $label$8
	$global$0 = ($5 + [48])
	return $1
}

void .FUNC $276 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $275 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $274 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [112])
	$global$0 = $5
	*(($5 + [92])) = *([0] + [22934 align=1])
	*($5 + [88]) = *([0] + [22930 align=1])
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$6 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $6
	
.LABEL $label$1
	*($5) = $4
	$7 = CALL $264(($5 + [64]), [20], $6, ($5 + [88]), $5)
	$8 = (($5 + [64]) + $7)
	$4 = $8
	$6 = (*($2 + [4]) & [176])
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$3 }
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$4 }
	$6 = *($5 + [64])
	if ( ((int_32)$6 == (int_32)[45]) ){ goto $label$6 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$5 }
	
.LABEL $label$6
	$4 = (($5 + [64]) | [1])
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$7 < (int_32)[2]) ){ goto $label$4 }
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$4 }
	if ( ((int_32)(*($5 + [65]) | [32]) != (int_32)[120]) ){ goto $label$4 }
	$4 = (($5 + [64]) | [2])
	goto $label$3 
	
.LABEL $label$4
	$4 = ($5 + [64])
	
.LABEL $label$3
	CALL $151(($5 + [8]), $2)
	$9 = *($5 + [8])
	*($5 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($5 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$8 }
	*($5 + [104]) = ($5 + [16])
	*($5 + [96]) = ($5 + [104])
	CALL $516([11500], ($5 + [96]), [60])
	$6 = *($5 + [8])
	goto $label$7 
	
.LABEL $label$8
	$6 = $9
	
.LABEL $label$7
	$10 = *([0] + [11504])
	$11 = *($6 + [4])
	*($6 + [4]) = ($11 + [-1])
	$9 = *(((*($9 + [16]) + ($10 << [2])) + [-4]))
	if ( $11 ){ goto $label$9 }
	CALL void $6((int_32 *(*($6) + [8])))
	
.LABEL $label$9
	CALL int_32 $9((int_32 ($5 + [64])), (int_32 $8), (int_32 ($5 + [16])), (int_32 *(*($9) + [32])))
	$6 = (($5 + [16]) + $7)
	$2 = CALL $266($1, ($5 + [16]), ( $6 ? (($5 + [16]) + ($4 - ($5 + [64]))) : ((int_32)$4 == (int_32)$8) ), $6, $2, $3)
	$global$0 = ($5 + [112])
	return $2
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	*($5) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8736])
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $100(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [9410])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [9479])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9532])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $279 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$7 = ($global$0 - [32])
	$global$0 = $7
	$8 = *($6)
	$9 = (CASTING uint_64)(uint_32 [59])
	*($7 + [4 align=4]) = $9
	*($7) = [11492]
	$10 = $8
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11492], ($7 + [16]), [60])
	$10 = *($6)
	
.LABEL $label$1
	$11 = *(((*($8 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	*($7 + [4 align=4]) = $9
	*($7) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$2 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11548], ($7 + [16]), [60])
	
.LABEL $label$2
	$12 = *(((*($10 + [16]) + (*([0] + [11552]) << [2])) + [-4]))
	CALL void $7((int_32 $12), (int_32 *(*($12) + [20])))
	$8 = *($7)
	if ( (( *($7 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) == 0) ){ goto $label$6 }
	*($5) = $3
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$8 }
	$13 = $0
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = CALL int_32 $11((int_32 int_32(($8 << [24]) >> [24])), (int_32 *(*($11) + [44])))
	*(($6 = *($5))) = $8
	*($5) = ($6 + [4])
	$13 = ($0 + [1])
	
.LABEL $label$7
	if ( ((int_32)($2 - $13) < (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)*($13) != (int_32)[48]) ){ goto $label$9 }
	if ( ((int_32)(*($13 + [1]) | [32]) != (int_32)[120]) ){ goto $label$9 }
	$8 = CALL int_32 $11((int_32 [48]), (int_32 *(*($11) + [44])))
	*(($6 = *($5))) = $8
	*($5) = ($6 + [4])
	$8 = CALL int_32 $11((int_32 *(($13 + [1]))), (int_32 *(*($11) + [44])))
	*(($6 = *($5))) = $8
	*($5) = ($6 + [4])
	$13 = ($13 + [2])
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$10 }
	$8 = ($2 + [-1])
	if ( ((uint_32)$8 <= (uint_32)$13) ){ goto $label$10 }
	$6 = $13
	
.LOOP $label$11:
	$10 = *($6)
	*($6) = *($8)
	*($8) = $10
	$8 = ($8 + [-1])
	$6 = ($6 + [1])
	if ( ($6 <= $8) ){ goto $label$11 }
	
.LABEL $label$10
	$14 = CALL int_32 $12((int_32 *(*($12) + [16])))
	if ( ((uint_32)$13 >= (uint_32)$2) ){ goto $label$5 }
	$15 = ($7 | [1])
	$10 = [0]
	$16 = ($7 + [8])
	$6 = $13
	$8 = [0]
	
.LOOP $label$12:
	$12 = *((( *($16) ? $15 : (*($7) & [1]) ) + $10))
	if ( ($12 == 0) ){ goto $label$13 }
	if ( ((int_32)$8 != (int_32)$12) ){ goto $label$13 }
	*(($8 = *($5))) = $14
	*($5) = ($8 + [4])
	$8 = *($7)
	$10 = ($10 + ($10 <= (( *($7 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) ) + [-1])))
	$8 = [0]
	
.LABEL $label$13
	$17 = CALL int_32 $11((int_32 *($6)), (int_32 *(*($11) + [44])))
	*(($12 = *($5))) = $17
	*($5) = ($12 + [4])
	$8 = ($8 + [1])
	$6 = ($6 + [1])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$12 }
	$8 = ($12 + [4])
	goto $label$4 
	
.LABEL $label$6
	CALL int_32 $11((int_32 $0), (int_32 $2), (int_32 $3), (int_32 *(*($11) + [48])))
	*($5) = ($3 + (($2 - $0) << [2]))
	goto $label$3 
	
.LABEL $label$5
	$8 = *($5)
	
.LABEL $label$4
	$6 = ($3 + (($13 - $0) << [2]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$8 = ($8 + [-4])
	if ( ((uint_32)$8 <= (uint_32)$6) ){ goto $label$3 }
	$6 = ($3 + ((($13 + [1]) - $0) << [2]))
	
.LOOP $label$14:
	$10 = ($6 + [-4])
	$11 = *($10)
	*($10) = *($8)
	*($8) = $11
	$8 = ($8 + [-4])
	$10 = ($6 <= $8)
	$6 = ($6 + [4])
	if ( $10 ){ goto $label$14 }
	
.LABEL $label$3
	*($4) = ( *($5) ? ($3 + (($1 - $0) << [2])) : ((int_32)$1 == (int_32)$2) )
	if ( ((*($7) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$15
	$global$0 = ($7 + [32])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [9410])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [9479])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = ((int_64)*($1 + [8]) + (int_64)*($1))
	$3 = *(($5 + [-24]))
	if ( ((int_64)((int_64)*($3 + [8]) + (int_64)*($3)) == (int_64)$6) ){ goto $label$3 }
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$3 = ($5 + [-48])
	$5 = ($5 + [-24])
	$3 = *($3)
	if ( ((int_64)((int_64)*($3 + [8]) + (int_64)*($3)) != (int_64)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9532])
	$4 = *($4)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$7 = *($5)
	*($5) = [0]
	$2 = ($5 + [-24])
	$3 = *($2)
	*($2) = $7
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$10
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$8 }
	$7 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [24])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$5
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [24])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [28])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [32])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [36])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [40])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [44])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [48])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [52])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [56])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [60])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [64])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [68])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [72])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [76])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [80])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [84])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [88])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [92])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [96])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [100])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [104])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [108])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [112])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [116])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [120])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [124])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [128])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [132])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [136])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [140])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [144])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [148])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [152])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [156])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [160])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [164])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [168])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [172])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [176])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [180])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [184])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [188])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [192])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [196])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [200])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [204])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [208])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [212])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [216])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [220])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [224])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [228])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [232])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [236])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [240])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [244])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [248])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [252])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [256])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [8736])
	CALL memcpy($2, *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$3 = *($0 + [260])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [8736])
	CALL memcpy($3, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $102($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $531($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $531($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $526($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$global$0 = $2
	$3 = *($1)
	CALL memcpy(($2 + [94]), ($1 + [8]), [66])
	$1 = CALL $527(($2 + [80]), ($1 + [76]))
	CALL memcpy(($2 + [160]), ($2 + [94]), [66])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$5 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($5) + $0))
	
.LABEL $label$1
	CALL memcpy(($2 + [248]), ($2 + [160]), [66])
	$4 = CALL $527(($2 + [232]), $1)
	CALL memcpy(($2 + [14]), ($2 + [248]), [66])
	CALL void $5((int_32 $3), (int_64 ($2 + [14])), (int_32 $4), (int_32 $0))
	if ( (*($2 + [232]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [320])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [320])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $4)
	*(($5 = CALL _Znwj([128])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [96 align=4]) = (int_64)0
	*($5 + [104]) = [0]
	*($5 + [108]) = $0
	CALL $109(($3 + [32]), $5)
	*($5 + [112]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $110(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [96]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [104])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $453 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = ($global$0 - [16])
	$global$0 = $8
	*($8 + [12]) = $2
	*($8 + [8]) = $5
	$5 = CALL $454($2, $3, ($8 + [12]), $5, $6, ($8 + [8]), [1114111], [0])
	*($4) = *($8 + [12])
	*($7) = *($8 + [8])
	$global$0 = ($8 + [16])
	return $5
}

int_32 .FUNC $452 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	*($2) = $0
	*($5) = $3
	if ( (($7 & [2]) == 0) ){ goto $label$9 }
	$0 = [1]
	if ( ((int_32)($4 - $3) < (int_32)[3]) ){ goto $label$8 }
	*($5) = ($3 + [1])
	*($3) = [239]
	$3 = *($5)
	*($5) = ($3 + [1])
	*($3) = [187]
	$3 = *($5)
	*($5) = ($3 + [1])
	*($3) = [191]
	
.LABEL $label$9
	$7 = *($2)
	if ( ((uint_32)$7 >= (uint_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = *($7)
	if ( ((uint_32)$3 > (uint_32)$6) ){ goto $label$7 }
	if ( ((uint_32)$3 > (uint_32)[127]) ){ goto $label$13 }
	$0 = [1]
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[1]) ){ goto $label$8 }
	*($5) = ($7 + [1])
	*($7) = $3
	goto $label$12 
	
.LABEL $label$13
	if ( ((uint_32)$3 > (uint_32)[2047]) ){ goto $label$14 }
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[2]) ){ goto $label$6 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [6]) | [192])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	goto $label$12 
	
.LABEL $label$14
	if ( ((uint_32)$3 > (uint_32)[55295]) ){ goto $label$15 }
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[3]) ){ goto $label$5 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [12]) | [224])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = ((uint_32($3 >> [6]) & [63]) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	goto $label$12 
	
.LABEL $label$15
	if ( ((uint_32)$3 > (uint_32)[56319]) ){ goto $label$16 }
	$0 = [1]
	if ( ((int_32)($1 - $7) < (int_32)[4]) ){ goto $label$8 }
	$8 = *($7 + [2])
	if ( ((int_32)($8 & [64512]) != (int_32)[56320]) ){ goto $label$4 }
	if ( ((int_32)($4 - *($5)) < (int_32)[4]) ){ goto $label$8 }
	$0 = ($3 & [960])
	if ( ((uint_32)(((($0 << [10]) + [65536]) | (($3 << [10]) & [64512])) | ($8 & [1023])) > (uint_32)$6) ){ goto $label$1 }
	*($2) = ($7 + [2])
	$7 = *($5)
	*($5) = ($7 + [1])
	$0 = (uint_32($0 >> [6]) + [1])
	*($7) = (uint_32($0 >> [2]) | [240])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (((($0 << [4]) & [48]) | (uint_32($3 >> [2]) & [15])) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (((uint_32($8 >> [6]) & [15]) | (($3 << [4]) & [48])) | [128])
	$3 = *($5)
	*($5) = ($3 + [1])
	*($3) = (($8 & [63]) | [128])
	goto $label$12 
	
.LABEL $label$16
	if ( ($3 <= [57344]) ){ goto $label$3 }
	$7 = *($5)
	if ( ((int_32)($4 - $7) < (int_32)[3]) ){ goto $label$2 }
	*($5) = ($7 + [1])
	*($7) = (uint_32($3 >> [12]) | [224])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = ((uint_32($3 >> [6]) & [63]) | [128])
	$7 = *($5)
	*($5) = ($7 + [1])
	*($7) = (($3 & [63]) | [128])
	
.LABEL $label$12
	$7 = (*($2) + [2])
	*($2) = $7
	if ( ($7 <= $1) ){ goto $label$11 }
	
.LABEL $label$10
	$0 = [0]
	
.LABEL $label$8
	return $0
	
.LABEL $label$7
	return [2]
	
.LABEL $label$6
	return [1]
	
.LABEL $label$5
	return [1]
	
.LABEL $label$4
	return [2]
	
.LABEL $label$3
	return [2]
	
.LABEL $label$2
	return [1]
	
.LABEL $label$1
	return [2]
}

int_32 .FUNC $629 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $451 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = ($global$0 - [16])
	$global$0 = $8
	*($8 + [12]) = $2
	*($8 + [8]) = $5
	$5 = CALL $452($2, $3, ($8 + [12]), $5, $6, ($8 + [8]), [1114111], [0])
	*($4) = *($8 + [12])
	*($7) = *($8 + [8])
	$global$0 = ($8 + [16])
	return $5
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	*($0 + [24]) = $1
	*($0 + [20]) = [0]
	*($0 + [12]) = [0]
	*($0 + [4 align=4]) = (int_64)25769807874
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [40 align=4]) = (int_64)0
	*($0 + [48 align=4]) = (int_64)0
	*($0 + [56 align=4]) = (int_64)0
	*($0 + [64 align=4]) = (int_64)0
	*($0 + [16]) = ($1 == 0)
	CALL $405(($0 + [28]))
}

int_32 .FUNC $153 (int_32 $0)
{
	*($0) = [11184]
	CALL $407(($0 + [4]))
	return $0
}

int_32 .FUNC $150 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = [11248]
	$1 = *($0 + [40])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = (($1 << [2]) + [-4])
	$3 = ($0 + [36])
	$4 = ($0 + [32])
	
.LOOP $label$2:
	CALL void [0]((int_32 $0), (int_32 *((*($3) + $2))), (int_32 *((*($4) + $2))))
	$2 = ($2 + [-4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($0 + [28]))
	CALL $650(*(($0 + [32])))
	CALL $650(*(($0 + [36])))
	CALL $650(*($0 + [48]))
	CALL $650(*($0 + [60]))
	return $0
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	CALL $406($0, ($1 + [28]))
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $157 (int_32 $0, int_32 $1, int_32 $2)
{
	return $0
}

void .FUNC $154 (int_32 $0)
{
	*($0) = [11184]
	CALL $407(($0 + [4]))
	CALL _ZdlPv($0)
}

int_32 .FUNC $155 (int_32 $0)
{
	*($0) = [11184]
	CALL $405(($0 + [4]))
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [16 align=4]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	return $0
}

void .FUNC $404 (int_32 $0)
{
	CALL _ZdlPv(CALL $403($0))
}

int_32 .FUNC $405 (int_32 $0)
{
	int_32 $1
	int_32 $2
	if ( (*([0] + [11484]) == 0) ){ goto $label$2 }
	$1 = *([0] + [11476])
	$2 = *($1 + [4])
	goto $label$1 
	
.LABEL $label$2
	if ( (*([0] + [11472]) == 0) ){ goto $label$4 }
	$1 = *([0] + [11464])
	goto $label$3 
	
.LABEL $label$4
	$1 = [13632]
	CALL $401([13632], [1])
	*([0] + [11468]) = [11464]
	*([0] + [11464]) = [13632]
	*([0] + [11472]) = [1]
	
.LABEL $label$3
	*([0] + [11476]) = $1
	*([0] + [11480]) = [11476]
	*([0] + [11484]) = [1]
	$2 = (*($1 + [4]) + [1])
	*($1 + [4]) = $2
	
.LABEL $label$1
	*($0) = $1
	*(($1 + [4])) = ($2 + [1])
	return $0
}

void .FUNC $158 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	*($0 + [8]) = (int_64)-1
	*($0) = (int_64)0
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	*($0 + [8]) = (int_64)-1
	*($0) = (int_64)0
}

void .FUNC $400 (int_32 $0, int_32 $1)
{
}

int_32 .FUNC $401 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0) = [23764]
	*($0 + [4]) = ($1 + [-1])
	*(($1 = ($0 + [160]))) = [1]
	$3 = ($0 + [48])
	*($0 + [16]) = $3
	*(($0 + [32])) = $1
	*($3) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = (int_64)0
	*(($0 + [80])) = (int_64)0
	*(($0 + [88])) = (int_64)0
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = (int_64)0
	*(($0 + [120])) = (int_64)0
	*(($0 + [128])) = (int_64)0
	*(($0 + [136])) = [0]
	*(($0 + [140])) = (int_64)0
	*(($0 + [148])) = (int_64)0
	*(($0 + [156])) = [0]
	*(($3 = ($0 + [20]))) = $1
	*(($0 + [184])) = [0]
	*($0 + [176 align=4]) = (int_64)0
	$4 = ($0 + [176])
	$5 = CALL $632([8741])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$1 = ($0 + [16])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($4) = ($5 << [1])
	$4 = ($4 + [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($6)
	*($0 + [176]) = ($6 | [1])
	*(($0 + [184])) = $4
	*(($0 + [180])) = $5
	
.LABEL $label$4
	CALL memcpy($4, [8741], $5)
	
.LABEL $label$3
	*(($4 + $5)) = [0]
	*([0] + [13304]) = [11264]
	$5 = *($1)
	*($3) = $5
	*([0] + [13308]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11296]
	$4 = $5
	$6 = [0]
	if ( ((int_32)*([0] + [11296]) == (int_32)[-1]) ){ goto $label$6 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11296], ($2 + [16]), [60])
	$5 = *($1)
	$4 = *($3)
	$6 = *([0] + [13308])
	
.LABEL $label$6
	*([0] + [13308]) = ($6 + [1])
	$6 = *([0] + [11300])
	$4 = ($6 + [-1])
	$7 = int_32(($4 - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$9 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$10 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$9 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$9
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$7
	*([0] + [13312]) = [22624]
	*(($5 + ($4 << [2]))) = [13304]
	*([0] + [13316]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11304]
	$5 = [0]
	if ( ((int_32)*([0] + [11304]) == (int_32)[-1]) ){ goto $label$11 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11304], ($2 + [16]), [60])
	$5 = *([0] + [13316])
	
.LABEL $label$11
	*([0] + [13316]) = ($5 + [1])
	$4 = *([0] + [11308])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$12 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$13 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$12 
	
.LABEL $label$13
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$12 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$12
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$14 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$14 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$14
	*(($5 + $6)) = [13312]
	*([0] + [13328]) = [23784]
	*([0] + [13336]) = [23840]
	*([0] + [13332]) = [0]
	*([0] + [13340]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11500]
	$5 = [0]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$15 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11500], ($2 + [16]), [60])
	$5 = *([0] + [13332])
	
.LABEL $label$15
	*([0] + [13332]) = ($5 + [1])
	$6 = *([0] + [11504])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$18 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$19 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$18 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$18
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$16 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$16
	*([0] + [13344]) = [25020]
	*(($5 + ($4 << [2]))) = [13328]
	*([0] + [13348]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11492]
	$5 = [0]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$20 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11492], ($2 + [16]), [60])
	$5 = *([0] + [13348])
	
.LABEL $label$20
	*([0] + [13348]) = ($5 + [1])
	$4 = *([0] + [11496])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$21 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$22 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$21 
	
.LABEL $label$22
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$21 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$21
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$23 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$23 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$23
	*([0] + [13352]) = [25088]
	*(($5 + $6)) = [13344]
	*([0] + [13356]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11508]
	$5 = [0]
	if ( ((int_32)*([0] + [11508]) == (int_32)[-1]) ){ goto $label$24 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11508], ($2 + [16]), [60])
	$5 = *([0] + [13356])
	
.LABEL $label$24
	*([0] + [13356]) = ($5 + [1])
	$6 = *([0] + [11512])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$27 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$28 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$27 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$27
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$25 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$25
	*([0] + [13360]) = [24872]
	*(($5 + ($4 << [2]))) = [13352]
	*([0] + [13364]) = [0]
	if ( (*([0] + [11460]) == 0) ){ goto $label$29 }
	$5 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$29
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	goto $label$1 
	
.LABEL $label$2
	CALL $526($4)
	
.LABEL $label$1
	*([0] + [13368]) = $5
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11516]
	if ( ((int_32)*([0] + [11516]) == (int_32)[-1]) ){ goto $label$30 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11516], ($2 + [16]), [60])
	
.LABEL $label$30
	*([0] + [13364]) = (*([0] + [13364]) + [1])
	$6 = *([0] + [11520])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$33 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$34 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$33 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$33
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$31 }
	
.LABEL $label$32
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$31 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$31
	*([0] + [13376]) = [25136]
	*(($5 + ($4 << [2]))) = [13360]
	*([0] + [13380]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11524]
	$5 = [0]
	if ( ((int_32)*([0] + [11524]) == (int_32)[-1]) ){ goto $label$35 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11524], ($2 + [16]), [60])
	$5 = *([0] + [13380])
	
.LABEL $label$35
	*([0] + [13380]) = ($5 + [1])
	$4 = *([0] + [11528])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$36 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$37 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$36 
	
.LABEL $label$37
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$36 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$36
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$38 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$38 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$38
	*([0] + [13384]) = [25184]
	*(($5 + $6)) = [13376]
	*([0] + [13388]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11532]
	$5 = [0]
	if ( ((int_32)*([0] + [11532]) == (int_32)[-1]) ){ goto $label$39 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11532], ($2 + [16]), [60])
	$5 = *([0] + [13388])
	
.LABEL $label$39
	*([0] + [13388]) = ($5 + [1])
	$6 = *([0] + [11536])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$42 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$43 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$42 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$42
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$40 }
	
.LABEL $label$41
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$40 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$40
	*([0] + [13392]) = [24920]
	*([0] + [13400]) = [11310]
	*([0] + [13404 align=4]) = (int_64)0
	*(($5 + ($4 << [2]))) = [13384]
	*([0] + [13396]) = [0]
	*([0] + [13412]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11540]
	$5 = [0]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$44 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11540], ($2 + [16]), [60])
	$5 = *([0] + [13396])
	
.LABEL $label$44
	*([0] + [13396]) = ($5 + [1])
	$4 = *([0] + [11544])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$45 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$46 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$45 
	
.LABEL $label$46
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$45 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$45
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$47 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$47 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$47
	*([0] + [13424]) = [24960]
	*([0] + [13428 align=4]) = (int_64)197568495616
	*([0] + [13436 align=4]) = (int_64)44
	*([0] + [13444 align=4]) = (int_64)0
	*(($5 + $6)) = [13392]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11548]
	$5 = [0]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$48 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11548], ($2 + [16]), [60])
	$5 = *([0] + [13428])
	
.LABEL $label$48
	*([0] + [13428]) = ($5 + [1])
	$6 = *([0] + [11552])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$51 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$52 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$51 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$51
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$49 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$49
	*([0] + [13456]) = [22656]
	*(($5 + ($4 << [2]))) = [13424]
	*([0] + [13460]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11312]
	$5 = [0]
	if ( ((int_32)*([0] + [11312]) == (int_32)[-1]) ){ goto $label$53 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11312], ($2 + [16]), [60])
	$5 = *([0] + [13460])
	
.LABEL $label$53
	*([0] + [13460]) = ($5 + [1])
	$4 = *([0] + [11316])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$54 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$55 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$54 
	
.LABEL $label$55
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$54 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$54
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$56 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$56 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$56
	*([0] + [13464]) = [22764]
	*(($5 + $6)) = [13456]
	*([0] + [13468]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11320]
	$5 = [0]
	if ( ((int_32)*([0] + [11320]) == (int_32)[-1]) ){ goto $label$57 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11320], ($2 + [16]), [60])
	$5 = *([0] + [13468])
	
.LABEL $label$57
	*([0] + [13468]) = ($5 + [1])
	$6 = *([0] + [11324])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$60 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$61 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$60 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$60
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$58 }
	
.LABEL $label$59
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$58 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$58
	*([0] + [13472]) = [22828]
	*(($5 + ($4 << [2]))) = [13464]
	*([0] + [13476]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11328]
	$5 = [0]
	if ( ((int_32)*([0] + [11328]) == (int_32)[-1]) ){ goto $label$62 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11328], ($2 + [16]), [60])
	$5 = *([0] + [13476])
	
.LABEL $label$62
	*([0] + [13476]) = ($5 + [1])
	$4 = *([0] + [11332])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$63 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$64 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$63 
	
.LABEL $label$64
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$63 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$63
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$65 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$65 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$65
	*([0] + [13480]) = [22880]
	*(($5 + $6)) = [13472]
	*([0] + [13484]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11336]
	$5 = [0]
	if ( ((int_32)*([0] + [11336]) == (int_32)[-1]) ){ goto $label$66 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11336], ($2 + [16]), [60])
	$5 = *([0] + [13484])
	
.LABEL $label$66
	*([0] + [13484]) = ($5 + [1])
	$6 = *([0] + [11340])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$69 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$70 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$70
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$69 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$69
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$67 }
	
.LABEL $label$68
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$67 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$67
	*([0] + [13488]) = [23352]
	*(($5 + ($4 << [2]))) = [13480]
	*([0] + [13492]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11376]
	$5 = [0]
	if ( ((int_32)*([0] + [11376]) == (int_32)[-1]) ){ goto $label$71 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11376], ($2 + [16]), [60])
	$5 = *([0] + [13492])
	
.LABEL $label$71
	*([0] + [13492]) = ($5 + [1])
	$4 = *([0] + [11380])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$72 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$73 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$72 
	
.LABEL $label$73
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$72 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$72
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$74 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$74 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$74
	*([0] + [13496]) = [23408]
	*(($5 + $6)) = [13488]
	*([0] + [13500]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11384]
	$5 = [0]
	if ( ((int_32)*([0] + [11384]) == (int_32)[-1]) ){ goto $label$75 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11384], ($2 + [16]), [60])
	$5 = *([0] + [13500])
	
.LABEL $label$75
	*([0] + [13500]) = ($5 + [1])
	$6 = *([0] + [11388])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$78 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$79 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$79
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$78 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$78
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$76 }
	
.LABEL $label$77
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$76 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$76
	*([0] + [13504]) = [23464]
	*(($5 + ($4 << [2]))) = [13496]
	*([0] + [13508]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11392]
	$5 = [0]
	if ( ((int_32)*([0] + [11392]) == (int_32)[-1]) ){ goto $label$80 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11392], ($2 + [16]), [60])
	$5 = *([0] + [13508])
	
.LABEL $label$80
	*([0] + [13508]) = ($5 + [1])
	$4 = *([0] + [11396])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$81 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$82 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$81 
	
.LABEL $label$82
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$81 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$81
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$83 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$83 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$83
	*([0] + [13512]) = [23520]
	*(($5 + $6)) = [13504]
	*([0] + [13516]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11400]
	$5 = [0]
	if ( ((int_32)*([0] + [11400]) == (int_32)[-1]) ){ goto $label$84 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11400], ($2 + [16]), [60])
	$5 = *([0] + [13516])
	
.LABEL $label$84
	*([0] + [13516]) = ($5 + [1])
	$6 = *([0] + [11404])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$87 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$88 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$88
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$87 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$87
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$85 }
	
.LABEL $label$86
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$85 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$85
	*([0] + [13520]) = [23576]
	*(($5 + ($4 << [2]))) = [13512]
	*([0] + [13524]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11408]
	$5 = [0]
	if ( ((int_32)*([0] + [11408]) == (int_32)[-1]) ){ goto $label$89 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11408], ($2 + [16]), [60])
	$5 = *([0] + [13524])
	
.LABEL $label$89
	*([0] + [13524]) = ($5 + [1])
	$4 = *([0] + [11412])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$90 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$91 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$90 
	
.LABEL $label$91
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$90 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$90
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$92 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$92 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$92
	*([0] + [13528]) = [23604]
	*(($5 + $6)) = [13520]
	*([0] + [13532]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11416]
	$5 = [0]
	if ( ((int_32)*([0] + [11416]) == (int_32)[-1]) ){ goto $label$93 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11416], ($2 + [16]), [60])
	$5 = *([0] + [13532])
	
.LABEL $label$93
	*([0] + [13532]) = ($5 + [1])
	$6 = *([0] + [11420])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$96 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$97 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$97
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$96 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$96
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$94 }
	
.LABEL $label$95
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$94 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$94
	*([0] + [13536]) = [23644]
	*(($5 + ($4 << [2]))) = [13528]
	*([0] + [13540]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11424]
	$5 = [0]
	if ( ((int_32)*([0] + [11424]) == (int_32)[-1]) ){ goto $label$98 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11424], ($2 + [16]), [60])
	$5 = *([0] + [13540])
	
.LABEL $label$98
	*([0] + [13540]) = ($5 + [1])
	$4 = *([0] + [11428])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$99 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$100 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$99 
	
.LABEL $label$100
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$99 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$99
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$101 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$101 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$101
	*([0] + [13544]) = [23672]
	*(($5 + $6)) = [13536]
	*([0] + [13548]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11432]
	$5 = [0]
	if ( ((int_32)*([0] + [11432]) == (int_32)[-1]) ){ goto $label$102 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11432], ($2 + [16]), [60])
	$5 = *([0] + [13548])
	
.LABEL $label$102
	*([0] + [13548]) = ($5 + [1])
	$6 = *([0] + [11436])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$105 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$106 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$104 }
	goto $label$103 
	
.LABEL $label$106
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$105 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$105
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$103 }
	
.LABEL $label$104
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$103 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$103
	*([0] + [13552]) = [22944]
	*([0] + [13560]) = [22992]
	*(($5 + ($4 << [2]))) = [13544]
	*([0] + [13556]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11344]
	$5 = [0]
	if ( ((int_32)*([0] + [11344]) == (int_32)[-1]) ){ goto $label$107 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11344], ($2 + [16]), [60])
	$5 = *([0] + [13556])
	
.LABEL $label$107
	*([0] + [13556]) = ($5 + [1])
	$4 = *([0] + [11348])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$108 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$109 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$108 
	
.LABEL $label$109
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$108 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$108
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$110 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$110 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$110
	*([0] + [13568]) = [23044]
	*([0] + [13576]) = [23092]
	*(($5 + $6)) = [13552]
	*([0] + [13572]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11352]
	$5 = [0]
	if ( ((int_32)*([0] + [11352]) == (int_32)[-1]) ){ goto $label$111 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11352], ($2 + [16]), [60])
	$5 = *([0] + [13572])
	
.LABEL $label$111
	*([0] + [13572]) = ($5 + [1])
	$6 = *([0] + [11356])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$114 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$115 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$114 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$114
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$112 }
	
.LABEL $label$113
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$112 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$112
	*([0] + [13584]) = [25000]
	*(($5 + ($4 << [2]))) = [13568]
	*([0] + [13588]) = [0]
	if ( (*([0] + [11460]) == 0) ){ goto $label$117 }
	$5 = *([0] + [11456])
	goto $label$116 
	
.LABEL $label$117
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$116
	*([0] + [13584]) = [23304]
	*([0] + [13592]) = $5
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11360]
	if ( ((int_32)*([0] + [11360]) == (int_32)[-1]) ){ goto $label$118 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11360], ($2 + [16]), [60])
	
.LABEL $label$118
	*([0] + [13588]) = (*([0] + [13588]) + [1])
	$6 = *([0] + [11364])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$121 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$122 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$122
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$121 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$121
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$119 }
	
.LABEL $label$120
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$119 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$119
	*([0] + [13600]) = [25000]
	*(($5 + ($4 << [2]))) = [13584]
	*([0] + [13604]) = [0]
	if ( (*([0] + [11460]) == 0) ){ goto $label$124 }
	$5 = *([0] + [11456])
	goto $label$123 
	
.LABEL $label$124
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$123
	*([0] + [13600]) = [23328]
	*([0] + [13608]) = $5
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11368]
	if ( ((int_32)*([0] + [11368]) == (int_32)[-1]) ){ goto $label$125 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11368], ($2 + [16]), [60])
	
.LABEL $label$125
	*([0] + [13604]) = (*([0] + [13604]) + [1])
	$6 = *([0] + [11372])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$128 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$129 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$6 = *(($5 + ($4 << [2])))
	if ( $6 ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$128 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$128
	$6 = *(($5 + ($4 << [2])))
	if ( ($6 == 0) ){ goto $label$126 }
	
.LABEL $label$127
	$7 = *($6 + [4])
	*($6 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$126 }
	CALL void $6((int_32 *(*($6) + [8])))
	$5 = *($1)
	
.LABEL $label$126
	*([0] + [13616]) = [23700]
	*(($5 + ($4 << [2]))) = [13600]
	*([0] + [13620]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11440]
	if ( ((int_32)*([0] + [11440]) == (int_32)[-1]) ){ goto $label$131 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11440], ($2 + [16]), [60])
	$5 = (*([0] + [13620]) + [1])
	goto $label$130 
	
.LABEL $label$131
	$5 = [1]
	
.LABEL $label$130
	*([0] + [13620]) = $5
	$4 = *([0] + [11444])
	$7 = ($4 + [-1])
	$5 = *($1)
	$6 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$6 > (uint_32)$7) ){ goto $label$132 }
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$133 }
	CALL $402($1, ($4 - $6))
	$5 = *($1)
	goto $label$132 
	
.LABEL $label$133
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$132 }
	*($3) = ($5 + ($4 << [2]))
	
.LABEL $label$132
	$6 = ($7 << [2])
	$4 = *(($5 + $6))
	if ( ($4 == 0) ){ goto $label$134 }
	$7 = *($4 + [4])
	*($4 + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$134 }
	CALL void $4((int_32 *(*($4) + [8])))
	$5 = *($1)
	
.LABEL $label$134
	*([0] + [13624]) = [23732]
	*(($5 + $6)) = [13616]
	*([0] + [13628]) = [0]
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($2) = [11448]
	if ( ((int_32)*([0] + [11448]) == (int_32)[-1]) ){ goto $label$136 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL $516([11448], ($2 + [16]), [60])
	$5 = (*([0] + [13628]) + [1])
	goto $label$135 
	
.LABEL $label$136
	$5 = [1]
	
.LABEL $label$135
	*([0] + [13628]) = $5
	$6 = *([0] + [11452])
	$4 = ($6 + [-1])
	$5 = *($1)
	$7 = int_32((*($3) - $5) >> [2])
	if ( ((uint_32)$7 > (uint_32)$4) ){ goto $label$139 }
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$140 }
	CALL $402($1, ($6 - $7))
	$5 = *($1)
	$3 = *(($5 + ($4 << [2])))
	if ( $3 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$140
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$139 }
	*($3) = ($5 + ($6 << [2]))
	
.LABEL $label$139
	$3 = *(($5 + ($4 << [2])))
	if ( ($3 == 0) ){ goto $label$137 }
	
.LABEL $label$138
	$6 = *($3 + [4])
	*($3 + [4]) = ($6 + [-1])
	if ( $6 ){ goto $label$137 }
	CALL void $3((int_32 *(*($3) + [8])))
	$5 = *($1)
	
.LABEL $label$137
	*(($5 + ($4 << [2]))) = [13624]
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $402 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = *($0 + [4])
	$2 = *($0 + [16])
	if ( ((uint_32)int_32(($2 - $3) >> [2]) >= (uint_32)$1) ){ goto $label$7 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [2])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($0 + [32])
	$3 = [1073741823]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$3 = int_32($2 >> [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 > (uint_32)[28]) ){ goto $label$6 }
	if ( (*(($0 + [144])) & [255]) ){ goto $label$6 }
	*(($0 + [144])) = [1]
	$2 = $7
	goto $label$4 
	
.LABEL $label$7
	
.LOOP $label$8:
	*($3) = [0]
	$3 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$6
	$2 = CALL _Znwj(($3 << [2]))
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	
.LABEL $label$4
	$4 = ($2 + ($3 << [2]))
	$5 = ($2 + ($5 << [2]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = [0]
	$3 = ($3 + [4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [2]))
	$1 = *($0)
	$8 = ($0 + [4])
	$3 = (*($8) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($8) = $6
	*(($0 + [16])) = $4
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$2 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [144])) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $553($0)
}

int_32 .FUNC $403 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = [23764]
	$3 = *($0 + [16])
	$1 = ($0 + [20])
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	$4 = [0]
	$5 = ($0 + [16])
	$6 = [0]
	
.LOOP $label$2:
	$7 = *(($3 + $4))
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = *($7 + [4])
	*($7 + [4]) = ($8 + [-1])
	if ( $8 ){ goto $label$3 }
	CALL void $7((int_32 *(*($7) + [8])))
	$3 = *($5)
	$2 = *($1)
	
.LABEL $label$3
	$4 = ($4 + [4])
	$6 = ($6 + [1])
	if ( ($6 <= int_32(($2 - $3) >> [2])) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((*($0 + [176]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($0 + [184])))
	$3 = *(($0 + [16]))
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$6 }
	*(($0 + [20])) = $3
	if ( ((int_32)$3 == (int_32)($0 + [48])) ){ goto $label$5 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	CALL $515($0)
	return $0
	
.LABEL $label$5
	*(($0 + [160])) = [0]
	CALL $515($0)
	return $0
}

int_32 .FUNC $273 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [224])
	$global$0 = $6
	*($6 + [216]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [216]) | [1])
	if ( ($7 & [1024]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [217]) = [43]
	$8 = (($6 + [216]) | [2])
	if ( (($7 & [1024]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	$9 = [0]
	$10 = ($7 & [260])
	if ( ((int_32)$10 == (int_32)[260]) ){ goto $label$4 }
	*($8) = [10798]
	$8 = ($8 + [2])
	$9 = [1]
	
.LABEL $label$4
	$7 = ($7 & [16384])
	*($8) = [76]
	$11 = ($10 & [511])
	if ( ((int_32)$11 == (int_32)[256]) ){ goto $label$7 }
	if ( ((int_32)$11 != (int_32)[4]) ){ goto $label$6 }
	$7 = ( [70] ? [102] : $7 )
	goto $label$5 
	
.LABEL $label$7
	$7 = ( [69] ? [101] : $7 )
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$10 != (int_32)[260]) ){ goto $label$8 }
	$7 = ( [65] ? [97] : $7 )
	goto $label$5 
	
.LABEL $label$8
	$7 = ( [71] ? [103] : $7 )
	
.LABEL $label$5
	*(($8 + [1])) = $7
	*($6 + [172]) = ($6 + [176])
	if ( (*([0] + [11460]) == 0) ){ goto $label$15 }
	$8 = *([0] + [11456])
	if ( ($9 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $8
	if ( $9 ){ goto $label$13 }
	
.LABEL $label$14
	*($6 + [80]) = $4
	*($6 + [88]) = $5
	$7 = CALL $264(($6 + [176]), [30], $8, ($6 + [216]), ($6 + [80]))
	if ( ((int_32)$7 <= (int_32)[29]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = *($2 + [8])
	*(($6 + [64])) = $5
	*($6 + [56]) = $4
	*($6 + [48]) = $7
	$7 = CALL $264(($6 + [176]), [30], $8, ($6 + [216]), ($6 + [48]))
	if ( ((int_32)$7 > (int_32)[29]) ){ goto $label$11 }
	
.LABEL $label$12
	$10 = [0]
	$8 = *($6 + [172])
	goto $label$10 
	
.LABEL $label$11
	if ( (*([0] + [11460]) == 0) ){ goto $label$18 }
	$8 = *([0] + [11456])
	if ( ($9 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$8 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $8
	if ( $9 ){ goto $label$16 }
	
.LABEL $label$17
	*($6 + [32]) = $4
	*($6 + [40]) = $5
	$7 = CALL $271(($6 + [172]), $8, ($6 + [216]), ($6 + [32]))
	$8 = *($6 + [172])
	$10 = $8
	if ( ($8 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$16
	$7 = *($2 + [8])
	*(($6 + [16])) = $5
	*($6 + [8]) = $4
	*($6) = $7
	$7 = CALL $271(($6 + [172]), $8, ($6 + [216]), $6)
	$8 = *($6 + [172])
	$10 = $8
	if ( ($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = ($8 + $7)
	$9 = $11
	$12 = (*(($2 + [4])) & [176])
	if ( ((int_32)$12 == (int_32)[32]) ){ goto $label$24 }
	if ( ((int_32)$12 != (int_32)[16]) ){ goto $label$22 }
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)[45]) ){ goto $label$25 }
	if ( ((int_32)$9 != (int_32)[43]) ){ goto $label$23 }
	
.LABEL $label$25
	$9 = ($8 + [1])
	
.LABEL $label$24
	if ( ((int_32)$8 == (int_32)($6 + [176])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	if ( ((int_32)$7 < (int_32)[2]) ){ goto $label$22 }
	if ( ((int_32)$9 != (int_32)[48]) ){ goto $label$22 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$22 }
	$9 = ($8 + [2])
	if ( ((int_32)$8 != (int_32)($6 + [176])) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	$9 = $8
	if ( ((int_32)$8 != (int_32)($6 + [176])) ){ goto $label$20 }
	
.LABEL $label$21
	$8 = [0]
	$7 = ($6 + [112])
	$12 = ($6 + [176])
	goto $label$19 
	
.LABEL $label$20
	$8 = CALL $643(($7 << [1]))
	if ( ($8 == 0) ){ goto $label$9 }
	$12 = *($6 + [172])
	$7 = $8
	
.LABEL $label$19
	CALL $151(($6 + [96]), $2)
	CALL $272($12, $9, $11, $7, ($6 + [108]), ($6 + [104]), ($6 + [96]))
	$11 = *($9 + [4])
	*(($9 = *($6 + [96])) + [4]) = ($11 + [-1])
	if ( $11 ){ goto $label$26 }
	CALL void $9((int_32 *(*($9) + [8])))
	
.LABEL $label$26
	$2 = CALL $266($1, $7, *($6 + [108]), *($6 + [104]), $2, $3)
	if ( ($8 == 0) ){ goto $label$27 }
	CALL $650($8)
	
.LABEL $label$27
	if ( ($10 == 0) ){ goto $label$28 }
	CALL $650($10)
	
.LABEL $label$28
	$global$0 = ($6 + [224])
	return $2
	
.LABEL $label$9
	CALL $517()
	return (unreachable)
}

int_32 .FUNC $421 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	*($3) = *($1)
	$3 = ($3 + [4])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $455 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	*($4) = $2
	return [3]
}

void .FUNC $272 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$7 = ($global$0 - [32])
	$global$0 = $7
	$8 = *($6)
	$9 = (CASTING uint_64)(uint_32 [59])
	*($7 + [4 align=4]) = $9
	*($7) = [11500]
	$10 = $8
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11500], ($7 + [16]), [60])
	$10 = *($6)
	
.LABEL $label$1
	$6 = *(((*($8 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	*($7 + [4 align=4]) = $9
	*($7) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$2 }
	*($7 + [24]) = $7
	*($7 + [16]) = ($7 + [24])
	CALL $516([11540], ($7 + [16]), [60])
	
.LABEL $label$2
	$11 = *(((*($10 + [16]) + (*([0] + [11544]) << [2])) + [-4]))
	CALL void $7((int_32 $11), (int_32 *(*($11) + [20])))
	*($5) = $3
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$4 }
	$12 = $0
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL int_32 $6((int_32 int_32(($8 << [24]) >> [24])), (int_32 *(*($6) + [28])))
	$10 = *($5)
	*($5) = ($10 + [1])
	*($10) = $8
	$12 = ($0 + [1])
	
.LABEL $label$3
	if ( ((int_32)($2 - $12) < (int_32)[2]) ){ goto $label$7 }
	if ( ((int_32)*($12) != (int_32)[48]) ){ goto $label$7 }
	if ( ((int_32)(*($12 + [1]) | [32]) != (int_32)[120]) ){ goto $label$7 }
	$8 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [28])))
	$10 = *($5)
	*($5) = ($10 + [1])
	*($10) = $8
	$8 = CALL int_32 $6((int_32 *(($12 + [1]))), (int_32 *(*($6) + [28])))
	$10 = *($5)
	*($5) = ($10 + [1])
	*($10) = $8
	$12 = ($12 + [2])
	if ( ((uint_32)$12 >= (uint_32)$2) ){ goto $label$6 }
	$8 = $12
	
.LOOP $label$8:
	$10 = *($8)
	if ( (*([0] + [11460]) == 0) ){ goto $label$10 }
	if ( (CALL $560($10, *([0] + [11456])) == 0) ){ goto $label$5 }
	goto $label$9 
	
.LABEL $label$10
	$13 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $13
	if ( (CALL $560($10, $13) == 0) ){ goto $label$5 }
	
.LABEL $label$9
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$12 >= (uint_32)$2) ){ goto $label$6 }
	$8 = $12
	
.LOOP $label$11:
	$10 = *($8)
	if ( (*([0] + [11460]) == 0) ){ goto $label$13 }
	if ( (CALL $555($10, *([0] + [11456])) == 0) ){ goto $label$5 }
	goto $label$12 
	
.LABEL $label$13
	$13 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $13
	if ( (CALL $555($10, $13) == 0) ){ goto $label$5 }
	
.LABEL $label$12
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$11 }
	goto $label$5 
	
.LABEL $label$6
	$8 = $12
	
.LABEL $label$5
	$10 = *($7)
	if ( (( *($7 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) ) == 0) ){ goto $label$15 }
	if ( ((int_32)$12 == (int_32)$8) ){ goto $label$16 }
	$10 = ($8 + [-1])
	if ( ((uint_32)$10 <= (uint_32)$12) ){ goto $label$16 }
	$13 = $12
	
.LOOP $label$17:
	$14 = *($13)
	*($13) = *($10)
	*($10) = $14
	$10 = ($10 + [-1])
	$13 = ($13 + [1])
	if ( ($13 <= $10) ){ goto $label$17 }
	
.LABEL $label$16
	$15 = CALL int_32 $11((int_32 *(*($11) + [16])))
	if ( ((uint_32)$12 >= (uint_32)$8) ){ goto $label$18 }
	$16 = ($7 | [1])
	$14 = [0]
	$17 = ($7 + [8])
	$13 = $12
	$10 = [0]
	
.LOOP $label$19:
	$18 = *((( *($17) ? $16 : (*($7) & [1]) ) + $14))
	if ( ((int_32)$18 < (int_32)[1]) ){ goto $label$20 }
	if ( ((int_32)$10 != (int_32)$18) ){ goto $label$20 }
	$10 = *($5)
	*($5) = ($10 + [1])
	*($10) = $15
	$10 = *($7)
	$14 = ($14 + ($14 <= (( *($7 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) ) + [-1])))
	$10 = [0]
	
.LABEL $label$20
	$18 = CALL int_32 $6((int_32 *($13)), (int_32 *(*($6) + [28])))
	$19 = *($5)
	*($5) = ($19 + [1])
	*($19) = $18
	$10 = ($10 + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$8 != (int_32)$13) ){ goto $label$19 }
	
.LABEL $label$18
	$10 = *($5)
	$13 = ($3 + ($12 - $0))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$14 }
	$10 = ($10 + [-1])
	if ( ((uint_32)$10 <= (uint_32)$13) ){ goto $label$14 }
	$13 = ($3 + (($12 + [1]) - $0))
	
.LOOP $label$21:
	$14 = ($13 + [-1])
	$18 = *($14)
	*($14) = *($10)
	*($10) = $18
	$10 = ($10 + [-1])
	$14 = ($13 <= $10)
	$13 = ($13 + [1])
	if ( $14 ){ goto $label$21 }
	goto $label$14 
	
.LABEL $label$15
	CALL int_32 $6((int_32 $12), (int_32 $8), (int_32 *($5)), (int_32 *(*($6) + [32])))
	*($5) = (*($5) + ($8 - $12))
	
.LABEL $label$14
	if ( ((uint_32)$8 >= (uint_32)$2) ){ goto $label$22 }
	
.LOOP $label$24:
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)[46]) ){ goto $label$23 }
	$10 = CALL int_32 $6((int_32 int_32(($10 << [24]) >> [24])), (int_32 *(*($6) + [28])))
	$13 = *($5)
	*($5) = ($13 + [1])
	*($13) = $10
	$8 = ($8 + [1])
	if ( ($8 <= $2) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$10 = CALL int_32 $11((int_32 *(*($11) + [12])))
	$13 = *($5)
	*($5) = ($13 + [1])
	*($13) = $10
	$8 = ($8 + [1])
	
.LABEL $label$22
	CALL int_32 $6((int_32 $8), (int_32 $2), (int_32 *($5)), (int_32 *(*($6) + [32])))
	$8 = (*($5) + ($2 - $8))
	*($5) = $8
	*($4) = ( $8 ? ($3 + ($1 - $0)) : ((int_32)$1 == (int_32)$2) )
	if ( ((*($7) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$25
	$global$0 = ($7 + [32])
}

int_32 .FUNC $426 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32((( ($1 + [-32]) ? $1 : CALL $556($1, $2) ) << [24]) >> [24])
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$3
	return $1
	
.LABEL $label$2
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	return .LABEL $label$1
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $111(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

int_64 .FUNC $612 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC $427 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	if ( *([0] + [11460]) ){ goto $label$5 }
	$3 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $3
	goto $label$4 
	
.LABEL $label$5
	$3 = *([0] + [11456])
	
.LABEL $label$4
	$4 = CALL $556($4, $3)
	$3 = *($1)
	$4 = ( ($3 + [-32]) ? $3 : $4 )
	
.LABEL $label$3
	*($1) = $4
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $611 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $609($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_32 .FUNC $424 (int_32 $0)
{
	int_32 $1
	*($0) = [23784]
	$1 = *($0 + [8])
	if ( ($1 == 0) ){ goto $label$1 }
	if ( (*($0 + [12]) == 0) ){ goto $label$1 }
	CALL _ZdaPv($1)
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

void .FUNC $610 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $496 (int_32 $0)
{
	if ( (*([0] + [11600]) == 0) ){ goto $label$1 }
	return *([0] + [11596])
	
.LABEL $label$1
	if ( *([0] + [13296]) ){ goto $label$2 }
	*([0] + [13008]) = (int_64)0
	*([0] + [13016]) = (int_64)0
	*([0] + [13024]) = (int_64)0
	*([0] + [13032]) = (int_64)0
	*([0] + [13040]) = (int_64)0
	*([0] + [13048]) = (int_64)0
	*([0] + [13056]) = (int_64)0
	*([0] + [13064]) = (int_64)0
	*([0] + [13072]) = (int_64)0
	*([0] + [13080]) = (int_64)0
	*([0] + [13088]) = (int_64)0
	*([0] + [13096]) = (int_64)0
	*([0] + [13104]) = (int_64)0
	*([0] + [13112]) = (int_64)0
	*([0] + [13120]) = (int_64)0
	*([0] + [13128]) = (int_64)0
	*([0] + [13136]) = [0]
	*([0] + [13140 align=4]) = (int_64)0
	*([0] + [13148 align=4]) = (int_64)0
	*([0] + [13156 align=4]) = (int_64)0
	*([0] + [13164 align=4]) = (int_64)0
	*([0] + [13172 align=4]) = (int_64)0
	*([0] + [13180 align=4]) = (int_64)0
	*([0] + [13188 align=4]) = (int_64)0
	*([0] + [13196 align=4]) = (int_64)0
	*([0] + [13204 align=4]) = (int_64)0
	*([0] + [13212 align=4]) = (int_64)0
	*([0] + [13220 align=4]) = (int_64)0
	*([0] + [13228 align=4]) = (int_64)0
	*([0] + [13236 align=4]) = (int_64)0
	*([0] + [13244 align=4]) = (int_64)0
	*([0] + [13252 align=4]) = (int_64)0
	*([0] + [13260 align=4]) = (int_64)0
	*([0] + [13268]) = [0]
	*([0] + [13272]) = (int_64)0
	*([0] + [13280]) = (int_64)0
	*([0] + [13288]) = (int_64)0
	CALL $567([68], [0], [8192])
	*([0] + [13296]) = [1]
	
.LABEL $label$2
	CALL $540([13008], [26224])
	CALL $540([13020], [26236])
	*([0] + [11600]) = [1]
	*([0] + [11596]) = [13008]
	return [13008]
}

void .FUNC $425 (int_32 $0)
{
	int_32 $1
	*($0) = [23784]
	$1 = *($0 + [8])
	if ( ($1 == 0) ){ goto $label$1 }
	if ( (*($0 + [12]) == 0) ){ goto $label$1 }
	CALL _ZdaPv($1)
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $579 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [1040])
	$global$0 = $5
	$6 = *($1)
	*($5 + [12]) = $6
	$7 = ( $0 ? ($5 + [16]) : $0 )
	$8 = [0]
	$3 = ( $3 ? [256] : $0 )
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$6 }
	$9 = uint_32($2 >> [2])
	if ( ((uint_32)$2 > (uint_32)[131]) ){ goto $label$7 }
	if ( ($9 <= $3) ){ goto $label$6 }
	
.LABEL $label$7
	$10 = ((uint_32)$9 >= (uint_32)$3)
	$8 = [0]
	
.LOOP $label$8:
	$9 = CALL $580($7, ($5 + [12]), ( $3 ? $9 : ($10 & [1]) ), $4)
	if ( ((int_32)$9 == (int_32)[-1]) ){ goto $label$5 }
	$6 = *($5 + [12])
	$2 = ( (($6 + $2) - $6) ? [0] : $6 )
	$10 = ((int_32)$7 == (int_32)($5 + [16]))
	$7 = ( $7 ? ($7 + ($9 << [2])) : $10 )
	$8 = ($9 + $8)
	$3 = ($3 - ( [0] ? $9 : $10 ))
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$6 }
	$9 = uint_32($2 >> [2])
	$10 = ((uint_32)$9 >= (uint_32)$3)
	if ( ((uint_32)$2 > (uint_32)[131]) ){ goto $label$8 }
	if ( ((uint_32)$9 >= (uint_32)$3) ){ goto $label$8 }
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [-1]
	$3 = [0]
	$6 = *($5 + [12])
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ($2 == 0) ){ goto $label$3 }
	$9 = ([1] - $3)
	
.LOOP $label$10:
	$3 = CALL $578($7, $6, $2, $4)
	if ( ((uint_32)($3 + [2]) <= (uint_32)[2]) ){ goto $label$9 }
	$6 = (*($5 + [12]) + $3)
	*($5 + [12]) = $6
	$8 = ($8 + [1])
	if ( ($9 == 0) ){ goto $label$3 }
	$9 = ($9 + [1])
	$7 = ($7 + [4])
	$2 = ($2 - $3)
	if ( $2 ){ goto $label$10 }
	goto $label$3 
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$12 }
	if ( $3 ){ goto $label$11 }
	*($5 + [12]) = [0]
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$12
	$8 = $3
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$11
	*($4) = [0]
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($1) = *($5 + [12])
	
.LABEL $label$1
	$global$0 = ($5 + [1040])
	return $8
}

int_32 .FUNC $536 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $530($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $344 (int_32 $0)
{
	return [2147483647]
}

int_32 .FUNC $228 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [256])
	$global$0 = $6
	CALL $225(($6 + [208]), $3, ($6 + [224]), ($6 + [223]), ($6 + [222]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$7 = (($6 + [192]) | [1])
	$8 = ( *($6 + [200]) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [46]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$104 
	
.LABEL $label$106
	*($10) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$47 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$105
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$50 }
	$11 = [0]
	goto $label$3 
	
.LABEL $label$104
	$3 = $1
	goto $label$51 
	
.LABEL $label$103
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$102
	if ( ($2 == 0) ){ goto $label$46 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$101
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$45 }
	$11 = [53]
	goto $label$3 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$99
	if ( ($3 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$98
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$41 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($8 + $1)) ){ goto $label$9 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$6 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$8 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$4 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$93
	$8 = ((*($6 + [192]) & [-2]) + [-1])
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $8, [0])
	$8 = ( *($9) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$7 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [43]
	goto $label$3 
	
.LABEL $label$90
	if ( CALL $226(int_32(($1 << [24]) >> [24]), ($6 + [7]), ($6 + [6]), $8, ($6 + [188]), *($6 + [223]), *($6 + [222]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$89
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$5 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$87
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [39]
	goto $label$3 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [7]
	goto $label$3 
	
.LABEL $label$83
	if ( ((int_32)$8 != (int_32)*($6 + [188])) ){ goto $label$36 }
	$11 = [9]
	goto $label$3 
	
.LABEL $label$82
	*($5) = (int_64)0
	*($4) = [4]
	$5 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$81
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$80
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [36]
	goto $label$3 
	
.LABEL $label$79
	$1 = ($6 + [16])
	$8 = $9
	$11 = [37]
	goto $label$3 
	
.LABEL $label$78
	$10 = *($1)
	*($1) = *($8)
	*($8) = $10
	$8 = ($8 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $8) ){ goto $label$10 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$77
	$10 = *($6 + [208])
	$5 = ($10 & [1])
	$11 = [11]
	goto $label$3 
	
.LABEL $label$76
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $5 )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$75
	$5 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ))
	$10 = ($6 + [16])
	$11 = [31]
	goto $label$3 
	
.LABEL $label$74
	if ( (($7 & [1]) == 0) ){ goto $label$12 }
	$11 = [33]
	goto $label$3 
	
.LABEL $label$73
	if ( ((int_32)*($10) != (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$11 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$72
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$32 }
	$11 = [12]
	goto $label$3 
	
.LABEL $label$71
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [28]
	goto $label$3 
	
.LABEL $label$70
	if ( ((*($9) + [-1]) <= $8) ){ goto $label$29 }
	$11 = [29]
	goto $label$3 
	
.LABEL $label$69
	*($4) = [4]
	$11 = [13]
	goto $label$3 
	
.LABEL $label$68
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [14]
	goto $label$3 
	
.LABEL $label$67
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$26 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$66
	if ( ($2 == 0) ){ goto $label$25 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$65
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$21 }
	$11 = [17]
	goto $label$3 
	
.LABEL $label$64
	if ( ($3 == 0) ){ goto $label$20 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$63
	*($4) = (*($4) | [2])
	$11 = [19]
	goto $label$3 
	
.LABEL $label$62
	if ( (*($6 + [192]) & [1]) ){ goto $label$15 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$61
	if ( (*($6 + [208]) & [1]) ){ goto $label$14 }
	$11 = [22]
	goto $label$3 
	
.LABEL $label$60
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$59
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$13 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$58
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$57
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$24 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$56
	if ( $3 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$55
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$54
	*($4) = [4]
	if ( $3 ){ goto $label$27 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$53
	$3 = [0]
	if ( $2 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [1]
	goto $label$3 
	
.LABEL $label$50
	$11 = [47]
	goto $label$3 
	
.LABEL $label$49
	$11 = [1]
	goto $label$3 
	
.LABEL $label$48
	$11 = [46]
	goto $label$3 
	
.LABEL $label$47
	$11 = [1]
	goto $label$3 
	
.LABEL $label$46
	$11 = [54]
	goto $label$3 
	
.LABEL $label$45
	$11 = [3]
	goto $label$3 
	
.LABEL $label$44
	$11 = [54]
	goto $label$3 
	
.LABEL $label$43
	$11 = [40]
	goto $label$3 
	
.LABEL $label$42
	$11 = [4]
	goto $label$3 
	
.LABEL $label$41
	$11 = [4]
	goto $label$3 
	
.LABEL $label$40
	$11 = [4]
	goto $label$3 
	
.LABEL $label$39
	$11 = [7]
	goto $label$3 
	
.LABEL $label$38
	$11 = [7]
	goto $label$3 
	
.LABEL $label$37
	$11 = [7]
	goto $label$3 
	
.LABEL $label$36
	$11 = [8]
	goto $label$3 
	
.LABEL $label$35
	$11 = [13]
	goto $label$3 
	
.LABEL $label$34
	$11 = [11]
	goto $label$3 
	
.LABEL $label$33
	$11 = [11]
	goto $label$3 
	
.LABEL $label$32
	$11 = [31]
	goto $label$3 
	
.LABEL $label$31
	$11 = [12]
	goto $label$3 
	
.LABEL $label$30
	$11 = [13]
	goto $label$3 
	
.LABEL $label$29
	$11 = [13]
	goto $label$3 
	
.LABEL $label$28
	$11 = [27]
	goto $label$3 
	
.LABEL $label$27
	$11 = [14]
	goto $label$3 
	
.LABEL $label$26
	$11 = [26]
	goto $label$3 
	
.LABEL $label$25
	$11 = [25]
	goto $label$3 
	
.LABEL $label$24
	$11 = [16]
	goto $label$3 
	
.LABEL $label$23
	$11 = [25]
	goto $label$3 
	
.LABEL $label$22
	$11 = [16]
	goto $label$3 
	
.LABEL $label$21
	$11 = [24]
	goto $label$3 
	
.LABEL $label$20
	$11 = [19]
	goto $label$3 
	
.LABEL $label$19
	$11 = [19]
	goto $label$3 
	
.LABEL $label$18
	$11 = [18]
	goto $label$3 
	
.LABEL $label$17
	$11 = [18]
	goto $label$3 
	
.LABEL $label$16
	$11 = [19]
	goto $label$3 
	
.LABEL $label$15
	$11 = [20]
	goto $label$3 
	
.LABEL $label$14
	$11 = [21]
	goto $label$3 
	
.LABEL $label$13
	$11 = [22]
	goto $label$3 
	
.LABEL $label$12
	$11 = [32]
	goto $label$3 
	
.LABEL $label$11
	$11 = [34]
	goto $label$3 
	
.LABEL $label$10
	$11 = [37]
	goto $label$3 
	
.LABEL $label$9
	$11 = [50]
	goto $label$3 
	
.LABEL $label$8
	$11 = [49]
	goto $label$3 
	
.LABEL $label$7
	$11 = [42]
	goto $label$3 
	
.LABEL $label$6
	$11 = [43]
	goto $label$3 
	
.LABEL $label$5
	$11 = [45]
	goto $label$3 
	
.LABEL $label$4
	$11 = [52]
	goto $label$3 
	$11
	return (unreachable)
}

int_32 .FUNC $229 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $230($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $89 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)20
	*($0) = *(*(*($2 + [4])) + [80])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [16]) = $1
	*($0 + [8]) = (int_64)80
	*($0) = *(*(*($2 + [4])) + [72])
	$1 = *($2)
	CALL eosio_assert([1], [8794])
	CALL memcpy($3, $0, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($3 | [8]), ($0 + [8]), [8])
	$4 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159551874301952, *(*($2 + [8])), $4, $3, [16])
	if ( (uint_64)($4 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $0
}

int_32 .FUNC $224 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	CALL $225(($6 + [208]), $3, ($6 + [224]), ($6 + [223]), ($6 + [222]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$7 = (($6 + [192]) | [1])
	$8 = ( *($6 + [200]) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [46]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$104 
	
.LABEL $label$106
	*($10) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$47 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$105
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$50 }
	$11 = [0]
	goto $label$3 
	
.LABEL $label$104
	$3 = $1
	goto $label$51 
	
.LABEL $label$103
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$102
	if ( ($2 == 0) ){ goto $label$46 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$101
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$45 }
	$11 = [53]
	goto $label$3 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$99
	if ( ($3 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$98
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$41 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($8 + $1)) ){ goto $label$9 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$6 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$8 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$4 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$93
	$8 = ((*($6 + [192]) & [-2]) + [-1])
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $8, [0])
	$8 = ( *($9) ? $7 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$7 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [43]
	goto $label$3 
	
.LABEL $label$90
	if ( CALL $226(int_32(($1 << [24]) >> [24]), ($6 + [7]), ($6 + [6]), $8, ($6 + [188]), *($6 + [223]), *($6 + [222]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$89
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$5 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$87
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [39]
	goto $label$3 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [7]
	goto $label$3 
	
.LABEL $label$83
	if ( ((int_32)$8 != (int_32)*($6 + [188])) ){ goto $label$36 }
	$11 = [9]
	goto $label$3 
	
.LABEL $label$82
	$12 = [0]
	*($5) = [0]
	*($4) = [4]
	$5 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$81
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$80
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [36]
	goto $label$3 
	
.LABEL $label$79
	$1 = ($6 + [16])
	$8 = $9
	$11 = [37]
	goto $label$3 
	
.LABEL $label$78
	$10 = *($1)
	*($1) = *($8)
	*($8) = $10
	$8 = ($8 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $8) ){ goto $label$10 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$77
	$10 = *($6 + [208])
	$5 = ($10 & [1])
	$11 = [11]
	goto $label$3 
	
.LABEL $label$76
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $5 )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$75
	$5 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $5 ))
	$10 = ($6 + [16])
	$11 = [31]
	goto $label$3 
	
.LABEL $label$74
	if ( (($7 & [1]) == 0) ){ goto $label$12 }
	$11 = [33]
	goto $label$3 
	
.LABEL $label$73
	if ( ((int_32)*($10) != (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$11 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$72
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$8 = *($1)
	$7 = (((int_32)$8 > (int_32)[0]) & ((int_32)$8 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$32 }
	$11 = [12]
	goto $label$3 
	
.LABEL $label$71
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [28]
	goto $label$3 
	
.LABEL $label$70
	if ( ((*($9) + [-1]) <= $8) ){ goto $label$29 }
	$11 = [29]
	goto $label$3 
	
.LABEL $label$69
	*($4) = [4]
	$11 = [13]
	goto $label$3 
	
.LABEL $label$68
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [14]
	goto $label$3 
	
.LABEL $label$67
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$25 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$66
	$12 = $3
	if ( $2 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$65
	$12 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	$11 = [27]
	goto $label$3 
	
.LABEL $label$64
	if ( ($2 == 0) ){ goto $label$24 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$63
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$21 }
	$11 = [17]
	goto $label$3 
	
.LABEL $label$62
	if ( ($12 == 0) ){ goto $label$20 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$61
	*($4) = (*($4) | [2])
	$11 = [19]
	goto $label$3 
	
.LABEL $label$60
	if ( (*($6 + [192]) & [1]) ){ goto $label$15 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$59
	if ( (*($6 + [208]) & [1]) ){ goto $label$14 }
	$11 = [22]
	goto $label$3 
	
.LABEL $label$58
	$global$0 = ($6 + [256])
	return $12
	
.LABEL $label$57
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$13 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$56
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $12
	
.LABEL $label$55
	if ( $12 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$54
	if ( (((int_32)($12 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$53
	*($4) = [4]
	if ( $3 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [1]
	goto $label$3 
	
.LABEL $label$50
	$11 = [47]
	goto $label$3 
	
.LABEL $label$49
	$11 = [1]
	goto $label$3 
	
.LABEL $label$48
	$11 = [46]
	goto $label$3 
	
.LABEL $label$47
	$11 = [1]
	goto $label$3 
	
.LABEL $label$46
	$11 = [54]
	goto $label$3 
	
.LABEL $label$45
	$11 = [3]
	goto $label$3 
	
.LABEL $label$44
	$11 = [54]
	goto $label$3 
	
.LABEL $label$43
	$11 = [40]
	goto $label$3 
	
.LABEL $label$42
	$11 = [4]
	goto $label$3 
	
.LABEL $label$41
	$11 = [4]
	goto $label$3 
	
.LABEL $label$40
	$11 = [4]
	goto $label$3 
	
.LABEL $label$39
	$11 = [7]
	goto $label$3 
	
.LABEL $label$38
	$11 = [7]
	goto $label$3 
	
.LABEL $label$37
	$11 = [7]
	goto $label$3 
	
.LABEL $label$36
	$11 = [8]
	goto $label$3 
	
.LABEL $label$35
	$11 = [13]
	goto $label$3 
	
.LABEL $label$34
	$11 = [11]
	goto $label$3 
	
.LABEL $label$33
	$11 = [11]
	goto $label$3 
	
.LABEL $label$32
	$11 = [31]
	goto $label$3 
	
.LABEL $label$31
	$11 = [12]
	goto $label$3 
	
.LABEL $label$30
	$11 = [13]
	goto $label$3 
	
.LABEL $label$29
	$11 = [13]
	goto $label$3 
	
.LABEL $label$28
	$11 = [27]
	goto $label$3 
	
.LABEL $label$27
	$11 = [27]
	goto $label$3 
	
.LABEL $label$26
	$11 = [14]
	goto $label$3 
	
.LABEL $label$25
	$11 = [26]
	goto $label$3 
	
.LABEL $label$24
	$11 = [25]
	goto $label$3 
	
.LABEL $label$23
	$11 = [25]
	goto $label$3 
	
.LABEL $label$22
	$11 = [16]
	goto $label$3 
	
.LABEL $label$21
	$11 = [24]
	goto $label$3 
	
.LABEL $label$20
	$11 = [19]
	goto $label$3 
	
.LABEL $label$19
	$11 = [19]
	goto $label$3 
	
.LABEL $label$18
	$11 = [18]
	goto $label$3 
	
.LABEL $label$17
	$11 = [18]
	goto $label$3 
	
.LABEL $label$16
	$11 = [19]
	goto $label$3 
	
.LABEL $label$15
	$11 = [20]
	goto $label$3 
	
.LABEL $label$14
	$11 = [21]
	goto $label$3 
	
.LABEL $label$13
	$11 = [22]
	goto $label$3 
	
.LABEL $label$12
	$11 = [32]
	goto $label$3 
	
.LABEL $label$11
	$11 = [34]
	goto $label$3 
	
.LABEL $label$10
	$11 = [37]
	goto $label$3 
	
.LABEL $label$9
	$11 = [50]
	goto $label$3 
	
.LABEL $label$8
	$11 = [49]
	goto $label$3 
	
.LABEL $label$7
	$11 = [42]
	goto $label$3 
	
.LABEL $label$6
	$11 = [43]
	goto $label$3 
	
.LABEL $label$5
	$11 = [45]
	goto $label$3 
	
.LABEL $label$4
	$11 = [52]
	goto $label$3 
	$11
	return (unreachable)
}

void .FUNC $225 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL $151(($5 + [8]), $1)
	$1 = *($5 + [8])
	$6 = (CASTING uint_64)(uint_32 [59])
	*($5 + [20 align=4]) = $6
	*($5 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11500], ($5 + [32]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	CALL int_32 $1((int_32 [22720]), (int_32 [22752]), (int_32 $2), (int_32 *(*($1) + [32])))
	$2 = *($5 + [8])
	*($5 + [20 align=4]) = $6
	*($5 + [16]) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$2 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11540], ($5 + [32]), [60])
	
.LABEL $label$2
	$2 = *(((*($2 + [16]) + (*([0] + [11544]) << [2])) + [-4]))
	*($3) = CALL int_32 $2((int_32 *(*($2) + [12])))
	*($4) = CALL int_32 $2((int_32 *(*($2) + [16])))
	CALL void $0((int_32 $2), (int_32 *(*($2) + [20])))
	$0 = *($2 + [4])
	*(($2 = *($5 + [8])) + [4]) = ($0 + [-1])
	if ( ($0 == 0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	CALL void $2((int_32 *(*($2) + [8])))
	$global$0 = ($5 + [48])
}

int_32 .FUNC $226 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11)
{
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$7 }
	if ( (*($1) == 0) ){ goto $label$6 }
	$0 = [0]
	*($1) = [0]
	$11 = *($4)
	*($4) = ($11 + [1])
	*($11) = [46]
	$11 = *($7)
	if ( (( *($7 + [4]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$1 }
	$11 = *($9)
	if ( ((int_32)($11 - $8) > (int_32)[159]) ){ goto $label$1 }
	*($9) = ($11 + [4])
	*($11) = *($10)
	return [0]
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$8 }
	$5 = *($7)
	if ( (( *($7 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$8 }
	if ( (*($1) == 0) ){ goto $label$4 }
	$0 = [0]
	$11 = *($9)
	if ( ((int_32)($11 - $8) > (int_32)[159]) ){ goto $label$1 }
	*($11) = *($10)
	*($9) = ($11 + [4])
	*($10) = [0]
	return [0]
	
.LABEL $label$8
	$5 = $11
	$6 = ($0 & [255])
	if ( ((int_32)*($11) == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($11 + [1]) != (int_32)$6) ){ goto $label$5 }
	$5 = ($11 + [1])
	goto $label$2 
	
.LABEL $label$6
	return [-1]
	
.LABEL $label$5
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [2]) != (int_32)$5) ){ goto $label$3 }
	$5 = ($11 + [2])
	goto $label$2 
	
.LABEL $label$4
	return [-1]
	
.LABEL $label$3
	if ( ((int_32)*($11 + [3]) != (int_32)$5) ){ goto $label$9 }
	$5 = ($11 + [3])
	goto $label$2 
	
.LABEL $label$9
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [4]) != (int_32)$5) ){ goto $label$10 }
	$5 = ($11 + [4])
	goto $label$2 
	
.LABEL $label$10
	if ( ((int_32)*($11 + [5]) != (int_32)$5) ){ goto $label$11 }
	$5 = ($11 + [5])
	goto $label$2 
	
.LABEL $label$11
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [6]) != (int_32)$5) ){ goto $label$12 }
	$5 = ($11 + [6])
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_32)*($11 + [7]) != (int_32)$5) ){ goto $label$13 }
	$5 = ($11 + [7])
	goto $label$2 
	
.LABEL $label$13
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [8]) != (int_32)$5) ){ goto $label$14 }
	$5 = ($11 + [8])
	goto $label$2 
	
.LABEL $label$14
	if ( ((int_32)*($11 + [9]) != (int_32)$5) ){ goto $label$15 }
	$5 = ($11 + [9])
	goto $label$2 
	
.LABEL $label$15
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [10]) != (int_32)$5) ){ goto $label$16 }
	$5 = ($11 + [10])
	goto $label$2 
	
.LABEL $label$16
	if ( ((int_32)*($11 + [11]) != (int_32)$5) ){ goto $label$17 }
	$5 = ($11 + [11])
	goto $label$2 
	
.LABEL $label$17
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [12]) != (int_32)$5) ){ goto $label$18 }
	$5 = ($11 + [12])
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)*($11 + [13]) != (int_32)$5) ){ goto $label$19 }
	$5 = ($11 + [13])
	goto $label$2 
	
.LABEL $label$19
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [14]) != (int_32)$5) ){ goto $label$20 }
	$5 = ($11 + [14])
	goto $label$2 
	
.LABEL $label$20
	if ( ((int_32)*($11 + [15]) != (int_32)$5) ){ goto $label$21 }
	$5 = ($11 + [15])
	goto $label$2 
	
.LABEL $label$21
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [16]) != (int_32)$5) ){ goto $label$22 }
	$5 = ($11 + [16])
	goto $label$2 
	
.LABEL $label$22
	if ( ((int_32)*($11 + [17]) != (int_32)$5) ){ goto $label$23 }
	$5 = ($11 + [17])
	goto $label$2 
	
.LABEL $label$23
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [18]) != (int_32)$5) ){ goto $label$24 }
	$5 = ($11 + [18])
	goto $label$2 
	
.LABEL $label$24
	if ( ((int_32)*($11 + [19]) != (int_32)$5) ){ goto $label$25 }
	$5 = ($11 + [19])
	goto $label$2 
	
.LABEL $label$25
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [20]) != (int_32)$5) ){ goto $label$26 }
	$5 = ($11 + [20])
	goto $label$2 
	
.LABEL $label$26
	if ( ((int_32)*($11 + [21]) != (int_32)$5) ){ goto $label$27 }
	$5 = ($11 + [21])
	goto $label$2 
	
.LABEL $label$27
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [22]) != (int_32)$5) ){ goto $label$28 }
	$5 = ($11 + [22])
	goto $label$2 
	
.LABEL $label$28
	if ( ((int_32)*($11 + [23]) != (int_32)$5) ){ goto $label$29 }
	$5 = ($11 + [23])
	goto $label$2 
	
.LABEL $label$29
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [24]) != (int_32)$5) ){ goto $label$30 }
	$5 = ($11 + [24])
	goto $label$2 
	
.LABEL $label$30
	if ( ((int_32)*($11 + [25]) != (int_32)$5) ){ goto $label$31 }
	$5 = ($11 + [25])
	goto $label$2 
	
.LABEL $label$31
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [26]) != (int_32)$5) ){ goto $label$32 }
	$5 = ($11 + [26])
	goto $label$2 
	
.LABEL $label$32
	if ( ((int_32)*($11 + [27]) != (int_32)$5) ){ goto $label$33 }
	$5 = ($11 + [27])
	goto $label$2 
	
.LABEL $label$33
	$5 = ($0 & [255])
	if ( ((int_32)*($11 + [28]) != (int_32)$5) ){ goto $label$34 }
	$5 = ($11 + [28])
	goto $label$2 
	
.LABEL $label$34
	if ( ((int_32)*($11 + [29]) != (int_32)$5) ){ goto $label$35 }
	$5 = ($11 + [29])
	goto $label$2 
	
.LABEL $label$35
	$0 = ($0 & [255])
	if ( ((int_32)*($11 + [30]) != (int_32)$0) ){ goto $label$36 }
	$5 = ($11 + [30])
	goto $label$2 
	
.LABEL $label$36
	$5 = ( ($11 + [31]) ? ($11 + [32]) : ((int_32)*($11 + [31]) == (int_32)$0) )
	
.LABEL $label$2
	$0 = [-1]
	$11 = ($5 - $11)
	if ( ((int_32)$11 > (int_32)[31]) ){ goto $label$1 }
	$5 = *(($11 + [22720]))
	if ( (($11 + [-22]) <= [2]) ){ goto $label$38 }
	if ( ((uint_32)($11 + [-24]) > (uint_32)[1]) ){ goto $label$37 }
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$39 }
	$0 = [-1]
	if ( ((int_32)(*(($11 + [-1])) & [95]) != (int_32)(*($2) & [127])) ){ goto $label$1 }
	
.LABEL $label$39
	*($4) = ($11 + [1])
	*($11) = $5
	return [0]
	
.LABEL $label$38
	*($2) = [80]
	$0 = *($4)
	*($4) = ($0 + [1])
	*($0) = $5
	return [0]
	
.LABEL $label$37
	$0 = *($2)
	if ( ((int_32)($5 & [95]) != (int_32)$0) ){ goto $label$40 }
	*($2) = ($0 | [128])
	if ( (*($1) == 0) ){ goto $label$40 }
	*($1) = [0]
	$0 = *($7)
	if ( (( *($7 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) ) == 0) ){ goto $label$40 }
	$0 = *($9)
	if ( ((int_32)($0 - $8) > (int_32)[159]) ){ goto $label$40 }
	*($9) = ($0 + [4])
	*($0) = *($10)
	
.LABEL $label$40
	$0 = *($4)
	*($4) = ($0 + [1])
	*($0) = $5
	$0 = [0]
	if ( ((int_32)$11 > (int_32)[21]) ){ goto $label$1 }
	*($10) = (*($10) + [1])
	return [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $227 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $228($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $220 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $221($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $221 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $222($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

int_64 .FUNC $222 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$3 }
	if ( ((int_32)*($0) != (int_32)[45]) ){ goto $label$1 }
	*($2) = [4]
	goto $label$2 
	
.LABEL $label$3
	*($2) = [4]
	
.LABEL $label$2
	$global$0 = ($4 + [16])
	return (int_64)0
	
.LABEL $label$1
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( *([0] + [11460]) ){ goto $label$4 }
	$8 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $8
	
.LABEL $label$4
	$6 = CALL $626($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$7 }
	$7 = (int_64)0
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	*(CALL $564()) = $5
	$7 = (int_64)0
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)-1
	if ( ((int_32)$0 == (int_32)[34]) ){ goto $label$5 }
	$global$0 = ($4 + [16])
	return $6
	
.LABEL $label$5
	*($2) = [4]
	$global$0 = ($4 + [16])
	return $7
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([128])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [96 align=4]) = (int_64)0
	*($3 + [104]) = [0]
	*($3 + [108]) = $1
	CALL $144(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [112])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $110(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [104])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $389 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13, int_32 $14)
{
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	*($2) = $0
	$15 = ($11 + [1])
	$16 = ($3 & [512])
	$17 = ($12 + [4])
	$18 = ($13 + [4])
	$19 = [0]
	$20 = ($12 + [8])
	
.LOOP $label$2:
	$21 = *(($8 + $19))
	if ( ((uint_32)$21 > (uint_32)[4]) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$8
	*($1) = *($2)
	$19 = ($19 + [1])
	if ( ((int_32)$19 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	*($1) = *($2)
	$21 = CALL int_32 $6((int_32 [32]), (int_32 *(*($6) + [44])))
	*(($22 = *($2))) = $21
	*($2) = ($22 + [4])
	$19 = ($19 + [1])
	if ( ((int_32)$19 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	if ( ($16 == 0) ){ goto $label$3 }
	$21 = ($21 & [1])
	$21 = *($12)
	$22 = ( *($17) ? uint_32($21 >> [1]) : $21 )
	if ( ($22 == 0) ){ goto $label$3 }
	$23 = ($22 << [2])
	$21 = ( *($20) ? $17 : $21 )
	$24 = ((($21 + $23) + [-4]) - $21)
	$25 = *($2)
	$22 = $25
	
.LOOP $label$9:
	*($22) = *($21)
	$22 = ($22 + [4])
	$21 = ($21 + [4])
	$23 = ($23 + [-4])
	if ( $23 ){ goto $label$9 }
	*($2) = (($25 + ($24 & [-4])) + [4])
	$19 = ($19 + [1])
	if ( ((int_32)$19 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$21 = ($21 & [1])
	$21 = *($13)
	if ( (( *($18) ? uint_32($21 >> [1]) : $21 ) == 0) ){ goto $label$3 }
	$22 = *(($13 + [8]))
	$23 = *($2)
	*($2) = ($23 + [4])
	*($23) = *(( $22 ? $18 : $21 ))
	$19 = ($19 + [1])
	if ( ((int_32)$19 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$24 = *($2)
	$4 = ( ($4 + [4]) ? $4 : $7 )
	$22 = $4
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$10 }
	$22 = $4
	
.LOOP $label$11:
	if ( (CALL int_32 $6((int_32 [64]), (int_32 *($22)), (int_32 *(*($6) + [12]))) == 0) ){ goto $label$10 }
	$22 = ($22 + [4])
	if ( ($22 <= $5) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$14 < (int_32)[1]) ){ goto $label$12 }
	if ( ((uint_32)$22 <= (uint_32)$4) ){ goto $label$15 }
	$21 = ($22 + [-4])
	$22 = *($2)
	$23 = $14
	
.LOOP $label$17:
	*($22) = *($21)
	$26 = ($21 + [-4])
	$25 = ($23 + [-1])
	$22 = ($22 + [4])
	$27 = ((int_32)$23 < (int_32)[2])
	if ( $27 ){ goto $label$16 }
	$28 = ((uint_32)$21 > (uint_32)$4)
	$21 = $26
	$23 = $25
	if ( $28 ){ goto $label$17 }
	
.LABEL $label$16
	*($2) = $22
	$22 = ($26 + [4])
	$26 = [0]
	if ( ($27 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$25 = $14
	
.LABEL $label$14
	$26 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [44])))
	
.LABEL $label$13
	$21 = *($2)
	*($2) = ($21 + [4])
	if ( ((int_32)$25 < (int_32)[1]) ){ goto $label$18 }
	$23 = ($25 + [1])
	
.LOOP $label$19:
	*($21) = $26
	$21 = ($21 + [4])
	$23 = ($23 + [-1])
	if ( ((int_32)$23 > (int_32)[1]) ){ goto $label$19 }
	*($2) = ($21 + [4])
	
.LABEL $label$18
	*($21) = $9
	
.LABEL $label$12
	if ( ((int_32)$22 == (int_32)$4) ){ goto $label$23 }
	$21 = ($21 & [1])
	$21 = *($11)
	$27 = ($11 + [4])
	if ( (( *($27) ? uint_32($21 >> [1]) : $21 ) == 0) ){ goto $label$22 }
	$25 = *(( *(($11 + [8])) ? $15 : $21 ))
	goto $label$21 
	
.LABEL $label$23
	$21 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [44])))
	*(($22 = *($2))) = $21
	$28 = ($22 + [4])
	*($2) = $28
	if ( ((int_32)$24 == (int_32)$28) ){ goto $label$3 }
	goto $label$20 
	
.LABEL $label$22
	$25 = [-1]
	
.LABEL $label$21
	$26 = [0]
	$23 = [0]
	
.LOOP $label$24:
	$21 = *($2)
	if ( ((int_32)$23 != (int_32)$25) ){ goto $label$25 }
	*($21) = $10
	$21 = ($21 + [4])
	*($2) = $21
	$23 = [0]
	$28 = ($28 & [1])
	$28 = *($11)
	$26 = ($26 + [1])
	if ( ((uint_32)$26 >= (uint_32)( *($27) ? uint_32($28 >> [1]) : $28 )) ){ goto $label$25 }
	$25 = *((( *(($11 + [8])) ? $15 : $28 ) + $26))
	$25 = int_32((( [-1] ? $25 : ((int_32)$25 == (int_32)[127]) ) << [24]) >> [24])
	
.LABEL $label$25
	$28 = ($21 + [4])
	*($2) = $28
	$22 = ($22 + [-4])
	*($21) = *($22)
	$23 = ($23 + [1])
	if ( ((int_32)$4 != (int_32)$22) ){ goto $label$24 }
	if ( ((int_32)$24 == (int_32)$28) ){ goto $label$3 }
	
.LABEL $label$20
	$21 = ($28 + [-4])
	if ( ((uint_32)$21 <= (uint_32)$24) ){ goto $label$3 }
	
.LOOP $label$26:
	$22 = *($24)
	*($24) = *($21)
	*($21) = $22
	$21 = ($21 + [-4])
	$24 = ($24 + [4])
	if ( ($24 <= $21) ){ goto $label$26 }
	
.LABEL $label$3
	$19 = ($19 + [1])
	if ( ((int_32)$19 != (int_32)[4]) ){ goto $label$2 }
	
.LABEL $label$1
	$21 = ($21 & [1])
	$21 = *($13)
	$22 = ( *(($13 + [4])) ? uint_32($21 >> [1]) : $21 )
	if ( ((uint_32)$22 <= (uint_32)[1]) ){ goto $label$27 }
	$21 = ($21 + [4])
	$22 = ($22 << [2])
	$21 = ( *(($13 + [8])) ? $18 : $21 )
	$24 = ((($21 + $22) + [-4]) - $21)
	$23 = ($22 + [-4])
	$4 = *($2)
	$22 = $4
	
.LOOP $label$28:
	*($22) = *($21)
	$22 = ($22 + [4])
	$21 = ($21 + [4])
	$23 = ($23 + [-4])
	if ( $23 ){ goto $label$28 }
	*($2) = (($4 + ($24 & [-4])) + [4])
	
.LABEL $label$27
	$21 = ($3 & [176])
	if ( ((int_32)$21 == (int_32)[16]) ){ goto $label$29 }
	if ( ((int_32)$21 != (int_32)[32]) ){ goto $label$30 }
	*($1) = *($2)
	return 
	
.LABEL $label$30
	*($1) = $0
	
.LABEL $label$29
	$21
}

void .FUNC $388 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	$10 = ($global$0 - [32])
	$global$0 = $10
	$2 = *($2)
	if ( ($0 == 0) ){ goto $label$14 }
	*($10) = [11400]
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	if ( ((int_32)*([0] + [11400]) == (int_32)[-1]) ){ goto $label$15 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11400], ($10 + [16]), [60])
	
.LABEL $label$15
	$0 = *(((*($2 + [16]) + (*([0] + [11404]) << [2])) + [-4]))
	if ( ($1 == 0) ){ goto $label$13 }
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$11 }
	*($8) = [0]
	goto $label$10 
	
.LABEL $label$14
	*($10) = [11392]
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	if ( ((int_32)*([0] + [11392]) == (int_32)[-1]) ){ goto $label$16 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11392], ($10 + [16]), [60])
	
.LABEL $label$16
	$0 = *(((*($2 + [16]) + (*([0] + [11396]) << [2])) + [-4]))
	if ( ($1 == 0) ){ goto $label$12 }
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$9 }
	*($8) = [0]
	goto $label$8 
	
.LABEL $label$13
	CALL void $10((int_32 $0), (int_32 *(*($0) + [40])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($8) & [1]) ){ goto $label$7 }
	*($8) = [0]
	goto $label$6 
	
.LABEL $label$12
	CALL void $10((int_32 $0), (int_32 *(*($0) + [40])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($8) & [1]) ){ goto $label$4 }
	*($8) = [0]
	goto $label$3 
	
.LABEL $label$11
	*(*($8 + [8])) = [0]
	
.LABEL $label$10
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	goto $label$5 
	
.LABEL $label$9
	*(*($8 + [8])) = [0]
	
.LABEL $label$8
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	goto $label$2 
	
.LABEL $label$7
	*(*($8 + [8])) = [0]
	
.LABEL $label$6
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	
.LABEL $label$5
	*($4) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($5) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($6) & [1]) ){ goto $label$18 }
	*($6) = [0]
	goto $label$17 
	
.LABEL $label$18
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$17
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($7) & [1]) ){ goto $label$20 }
	*($7) = [0]
	goto $label$19 
	
.LABEL $label$20
	*(*($7 + [8])) = [0]
	
.LABEL $label$19
	*($7 + [4]) = [0]
	CALL $539($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	goto $label$1 
	
.LABEL $label$4
	*(*($8 + [8])) = [0]
	
.LABEL $label$3
	*($8 + [4]) = [0]
	CALL $539($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	
.LABEL $label$2
	*($4) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($5) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($6) & [1]) ){ goto $label$22 }
	*($6) = [0]
	goto $label$21 
	
.LABEL $label$22
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$21
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($7) & [1]) ){ goto $label$24 }
	*($7) = [0]
	goto $label$23 
	
.LABEL $label$24
	*(*($7 + [8])) = [0]
	
.LABEL $label$23
	*($7 + [4]) = [0]
	CALL $539($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	
.LABEL $label$1
	*($9) = $0
	$global$0 = ($10 + [32])
}

void .FUNC $617 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_64 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	float_64 $30
	$4 = ($global$0 - [9520])
	$global$0 = $4
	$5 = (int_64)0
	if ( ((uint_32)$2 > (uint_32)[2]) ){ goto $label$14 }
	$6 = ($1 + [104])
	$7 = ($1 + [4])
	$8 = ($2 << [2])
	$9 = *(($8 + [33964]))
	$10 = *(($8 + [33952]))
	
.LOOP $label$15:
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$17 }
	$8 = CALL $611($1)
	if ( ((uint_32)($8 + [-9]) >= (uint_32)[5]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( (($8 + [-9]) <= [5]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( ((int_32)$8 == (int_32)[32]) ){ goto $label$15 }
	$11 = ((int_32)$8 == (int_32)[45])
	if ( $11 ){ goto $label$21 }
	if ( ((int_32)$8 != (int_32)[43]) ){ goto $label$20 }
	
.LABEL $label$21
	$12 = ([1] - ($11 << [1]))
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$19 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$18 
	
.LABEL $label$20
	$12 = [1]
	goto $label$18 
	
.LABEL $label$19
	$8 = CALL $611($1)
	
.LABEL $label$18
	$11 = ($8 | [32])
	if ( ((int_32)$11 != (int_32)[105]) ){ goto $label$34 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$33 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$32 
	
.LABEL $label$34
	if ( ((int_32)$11 != (int_32)[110]) ){ goto $label$22 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$31 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$30 
	
.LABEL $label$33
	$8 = CALL $611($1)
	
.LABEL $label$32
	$11 = [1]
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$27 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$29 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$28 
	
.LABEL $label$31
	$8 = CALL $611($1)
	
.LABEL $label$30
	if ( ((int_32)($8 | [32]) != (int_32)[97]) ){ goto $label$4 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$26 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$25 
	
.LABEL $label$29
	$8 = CALL $611($1)
	
.LABEL $label$28
	$11 = [2]
	if ( ((int_32)($8 | [32]) != (int_32)[102]) ){ goto $label$27 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$24 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$23 
	
.LABEL $label$27
	$13 = ((int_32)$3 != (int_32)[0])
	if ( ($11 == 0) ){ goto $label$22 }
	goto $label$8 
	
.LABEL $label$26
	$8 = CALL $611($1)
	
.LABEL $label$25
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$4 }
	$13 = ((int_32)$3 != (int_32)[0])
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$24
	$8 = CALL $611($1)
	
.LABEL $label$23
	$11 = [3]
	if ( ((int_32)($8 | [32]) != (int_32)[105]) ){ goto $label$37 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$39 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$38 
	
.LABEL $label$39
	$8 = CALL $611($1)
	
.LABEL $label$38
	$11 = [4]
	if ( ((int_32)($8 | [32]) != (int_32)[110]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$42 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$41 
	
.LABEL $label$42
	$8 = CALL $611($1)
	
.LABEL $label$41
	$11 = [5]
	if ( ((int_32)($8 | [32]) != (int_32)[105]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$44 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$43 
	
.LABEL $label$44
	$8 = CALL $611($1)
	
.LABEL $label$43
	$11 = [6]
	if ( ((int_32)($8 | [32]) != (int_32)[116]) ){ goto $label$40 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$46 }
	*($7) = ($8 + [1])
	$8 = *($8)
	goto $label$45 
	
.LABEL $label$46
	$8 = CALL $611($1)
	
.LABEL $label$45
	$11 = [7]
	if ( ((int_32)($8 | [32]) == (int_32)[121]) ){ goto $label$36 }
	
.LABEL $label$40
	if ( ($3 == 0) ){ goto $label$35 }
	
.LABEL $label$37
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$47 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$47
	if ( ($11 <= [4]) ){ goto $label$36 }
	if ( ($3 == 0) ){ goto $label$36 }
	if ( ($8 == 0) ){ goto $label$36 }
	$8 = *($7)
	
.LOOP $label$48:
	$8 = ($8 + [-1])
	$11 = ($11 + [-1])
	if ( ((uint_32)$11 > (uint_32)[3]) ){ goto $label$48 }
	*($7) = $8
	
.LABEL $label$36
	CALL __extendsftf2($4, ((float_32)(CASTING float_32)(int_32 $12) * (float_32)(float_32)inf))
	$14 = *(($4 + [8]))
	$5 = *($4)
	goto $label$13 
	
.LABEL $label$35
	$13 = ((int_32)$3 != (int_32)[0])
	if ( $11 ){ goto $label$8 }
	
.LABEL $label$22
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$50 }
	$11 = *($7)
	if ( ((uint_32)$11 >= (uint_32)*($6)) ){ goto $label$52 }
	*($7) = ($11 + [1])
	$11 = *($11)
	goto $label$51 
	
.LABEL $label$52
	$11 = CALL $611($1)
	
.LABEL $label$51
	if ( ((int_32)($11 | [32]) != (int_32)[120]) ){ goto $label$53 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$49 }
	*($7) = ($8 + [1])
	$13 = [0]
	$11 = [48]
	$8 = *($8)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$53
	if ( (*($6) == 0) ){ goto $label$50 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$50
	$11 = [0]
	$18 = ($9 + $10)
	$19 = ([0] - $18)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$54 }
	
.LOOP $label$55:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$56 }
	$11 = [1]
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$11 = [1]
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$55 }
	
.LABEL $label$54
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$59 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$58 }
	*($7) = ($8 + [1])
	$16 = [48]
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$57 }
	goto $label$12 
	
.LABEL $label$59
	$20 = [0]
	$5 = (int_64)0
	goto $label$11 
	
.LABEL $label$58
	$16 = [48]
	$8 = CALL $611($1)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$12 }
	
.LABEL $label$57
	$5 = (int_64)0
	
.LOOP $label$61:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$62 }
	*($7) = ($8 + [1])
	$5 = ((int_64)$5 + (int_64)-1)
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$5 = ((int_64)$5 + (int_64)-1)
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$61 }
	
.LABEL $label$60
	$11 = [1]
	$20 = [1]
	goto $label$11 
	
.LABEL $label$49
	$13 = [0]
	$11 = [48]
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$14
	$15 = [7]
	goto $label$1 
	
.LABEL $label$13
	$15 = [8]
	goto $label$1 
	
.LABEL $label$12
	$20 = [1]
	$5 = (int_64)0
	
.LABEL $label$11
	$21 = [0]
	*($4 + [1328]) = [0]
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( $16 ){ goto $label$81 }
	$14 = (int_64)0
	if ( ((uint_32)$13 <= (uint_32)[9]) ){ goto $label$81 }
	$17 = [0]
	$22 = [0]
	$5 = ( $5 ? (int_64)0 : $20 )
	if ( $11 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$14 = (int_64)0
	$23 = ($4 + [9504])
	$22 = [0]
	$17 = [0]
	$21 = [0]
	
.LOOP $label$82:
	if ( ($16 & [1]) ){ goto $label$86 }
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_32)$17 > (int_32)[2044]) ){ goto $label$87 }
	$16 = ((int_32)$8 != (int_32)[48])
	$24 = (CASTING uint_32)(uint_64 $14)
	$11 = (($4 + [1328]) + ($17 << [2]))
	if ( ($22 == 0) ){ goto $label$88 }
	$13 = (($8 + ((int_32)*($11) * (int_32)[10])) + [-48])
	
.LABEL $label$88
	$21 = ( $24 ? $21 : $16 )
	*($11) = $13
	$11 = [1]
	$8 = ((int_32)$8 == (int_32)[9])
	$8 = ($22 + [1])
	$22 = ( [0] ? $8 : $8 )
	$17 = ($17 + $8)
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	goto $label$85 
	
.LABEL $label$87
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$89 }
	*($23) = (*($23) | [1])
	$21 = [18396]
	
.LABEL $label$89
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	goto $label$85 
	
.LABEL $label$86
	if ( $20 ){ goto $label$78 }
	$5 = $14
	$20 = [1]
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$84 }
	
.LABEL $label$85
	*($7) = ($8 + [1])
	$8 = *($8)
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( ($16 == 0) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$8 = CALL $611($1)
	$13 = ($8 + [-48])
	$16 = ((int_32)$8 == (int_32)[46])
	if ( $16 ){ goto $label$82 }
	
.LABEL $label$83
	if ( ($13 <= [10]) ){ goto $label$82 }
	$5 = ( $5 ? $14 : $20 )
	if ( ($11 == 0) ){ goto $label$79 }
	
.LABEL $label$80
	if ( ((int_32)($8 | [32]) != (int_32)[101]) ){ goto $label$79 }
	$25 = CALL $618($1, $3)
	if ( ((int_64)$25 != (int_64)-9223372036854775808) ){ goto $label$90 }
	if ( ($3 == 0) ){ goto $label$77 }
	$25 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$90 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$90
	$5 = ((int_64)$25 + (int_64)$5)
	$7 = *($4 + [1328])
	if ( $7 ){ goto $label$74 }
	goto $label$63 
	
.LABEL $label$79
	$11 = ((int_32)$11 != (int_32)[0])
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$75 }
	if ( (*($6) == 0) ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$78
	$11 = ((int_32)$11 != (int_32)[0])
	if ( *($6) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	$15 = [6]
	goto $label$1 
	
.LABEL $label$76
	*($7) = (*($7) + [-1])
	
.LABEL $label$75
	if ( ($11 == 0) ){ goto $label$73 }
	$7 = *($4 + [1328])
	if ( ($7 == 0) ){ goto $label$63 }
	
.LABEL $label$74
	if ( ((int_64)$14 > (int_64)9) ){ goto $label$91 }
	if ( ((int_64)$5 != (int_64)$14) ){ goto $label$91 }
	if ( (($2 + [-1]) <= [2]) ){ goto $label$71 }
	if ( (uint_32($7 >> $10) == 0) ){ goto $label$71 }
	
.LABEL $label$91
	if ( ((int_64)$5 <= (int_64)(CASTING int_64)(int_32 ((int_32)$9 / (int_32)[-2]))) ){ goto $label$72 }
	CALL __floatsitf(($4 + [544]), $12)
	CALL __multf3(($4 + [528]), *($4 + [544]), *((($4 + [544]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	CALL __multf3(($4 + [512]), *($4 + [528]), *((($4 + [528]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	*(CALL $564()) = [34]
	$14 = *((($4 + [512]) + [8]))
	$5 = *($4 + [512])
	goto $label$68 
	
.LABEL $label$73
	*(CALL $564()) = [22]
	$15 = [6]
	goto $label$1 
	
.LABEL $label$72
	if ( ((int_64)$5 >= (int_64)(CASTING int_64)(int_32 ($9 + [-226]))) ){ goto $label$70 }
	CALL __floatsitf(($4 + [592]), $12)
	CALL __multf3(($4 + [576]), *($4 + [592]), *((($4 + [592]) + [8])), (int_64)0, (int_64)281474976710656)
	CALL __multf3(($4 + [560]), *($4 + [576]), *((($4 + [576]) + [8])), (int_64)0, (int_64)281474976710656)
	*(CALL $564()) = [34]
	$14 = *((($4 + [560]) + [8]))
	$5 = *($4 + [560])
	goto $label$67 
	
.LABEL $label$71
	CALL __floatunsitf(($4 + [480]), $7)
	CALL __floatsitf(($4 + [496]), $12)
	CALL __multf3(($4 + [464]), *($4 + [496]), *((($4 + [496]) + [8])), *($4 + [480]), *((($4 + [480]) + [8])))
	$14 = *((($4 + [464]) + [8]))
	$5 = *($4 + [464])
	goto $label$69 
	
.LABEL $label$70
	if ( ($22 == 0) ){ goto $label$92 }
	if ( ((int_32)$22 > (int_32)[8]) ){ goto $label$93 }
	$8 = ($22 + [-1])
	$6 = (($4 + [1328]) + ($17 << [2]))
	$7 = *($6)
	
.LOOP $label$94:
	$7 = ((int_32)$7 * (int_32)[10])
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[8]) ){ goto $label$94 }
	*($6) = $7
	
.LABEL $label$93
	$17 = ($17 + [1])
	
.LABEL $label$92
	$13 = (CASTING uint_32)(uint_64 $5)
	if ( ((int_32)$21 >= (int_32)[9]) ){ goto $label$97 }
	if ( ((int_32)$21 > (int_32)$13) ){ goto $label$97 }
	if ( ((int_32)$13 > (int_32)[17]) ){ goto $label$97 }
	if ( ((int_32)$13 != (int_32)[9]) ){ goto $label$98 }
	CALL __floatunsitf(($4 + [624]), *($4 + [1328]))
	CALL __floatsitf(($4 + [640]), $12)
	CALL __multf3(($4 + [608]), *($4 + [640]), *((($4 + [640]) + [8])), *($4 + [624]), *((($4 + [624]) + [8])))
	$14 = *((($4 + [608]) + [8]))
	$5 = *($4 + [608])
	goto $label$66 
	
.LABEL $label$98
	if ( ((int_32)$13 > (int_32)[8]) ){ goto $label$99 }
	CALL __floatunsitf(($4 + [704]), *($4 + [1328]))
	CALL __floatsitf(($4 + [720]), $12)
	CALL __multf3(($4 + [688]), *($4 + [720]), *((($4 + [720]) + [8])), *($4 + [704]), *((($4 + [704]) + [8])))
	CALL __floatsitf(($4 + [672]), *(((([8] - $13) << [2]) + [33920])))
	CALL __divtf3(($4 + [656]), *($4 + [688]), *((($4 + [688]) + [8])), *($4 + [672]), *((($4 + [672]) + [8])))
	$14 = *((($4 + [656]) + [8]))
	$5 = *($4 + [656])
	goto $label$65 
	
.LABEL $label$99
	$7 = *($4 + [1328])
	$8 = (($10 + ((int_32)$13 * (int_32)[-3])) + [27])
	if ( ((int_32)$8 > (int_32)[30]) ){ goto $label$96 }
	if ( (uint_32($7 >> $8) == 0) ){ goto $label$96 }
	
.LABEL $label$97
	$8 = ($17 + [1])
	$7 = (($4 + [1328]) + ($8 << [2]))
	
.LOOP $label$100:
	$8 = ($8 + [-1])
	$6 = ($7 + [-8])
	$11 = ($7 + [-4])
	$7 = $11
	if ( (*($6) == 0) ){ goto $label$100 }
	$2 = [0]
	$7 = ((int_32)$13 % (int_32)[9])
	if ( ($7 == 0) ){ goto $label$104 }
	$24 = ( $7 ? ($7 + [9]) : ((int_32)$13 > (int_32)[-1]) )
	if ( ($8 == 0) ){ goto $label$103 }
	$17 = *(((([8] - $24) << [2]) + [33920]))
	$21 = ((int_32)[1000000000] / (int_32)$17)
	$16 = [0]
	$7 = ($4 + [1328])
	$1 = [0]
	$6 = [0]
	
.LOOP $label$105:
	$20 = *($7)
	$3 = ((uint_32)$20 / (uint_32)$17)
	$16 = ($3 + $16)
	*($7) = $16
	$22 = ((int_32)$1 == (int_32)$6)
	$16 = ($22 & ($16 == 0))
	$1 = ($1 + [1])
	$6 = ( ($1 & [2047]) ? $6 : $16 )
	$13 = ( ($13 + [-9]) ? $13 : $16 )
	$7 = ($7 + [4])
	$16 = ((int_32)($20 - ((int_32)$3 * (int_32)$17)) * (int_32)$21)
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$105 }
	if ( ($16 == 0) ){ goto $label$102 }
	*($11) = $16
	$8 = ($8 + [1])
	goto $label$102 
	
.LABEL $label$104
	$6 = [0]
	goto $label$101 
	
.LABEL $label$103
	$6 = [0]
	$8 = [0]
	
.LABEL $label$102
	$13 = (([9] - $24) + $13)
	
.LABEL $label$101
	
.LOOP $label$106:
	$17 = (($4 + [1328]) + ($6 << [2]))
	
.LOOP $label$107:
	if ( ((int_32)$13 < (int_32)[36]) ){ goto $label$108 }
	if ( ((int_32)$13 != (int_32)[36]) ){ goto $label$95 }
	if ( ((uint_32)*($17) > (uint_32)[10384592]) ){ goto $label$95 }
	
.LABEL $label$108
	$16 = ($8 + [2047])
	$1 = [0]
	$11 = $8
	
.LOOP $label$109:
	$8 = $11
	$7 = ($16 & [2047])
	$11 = (($4 + [1328]) + ($7 << [2]))
	$5 = ((int_64)((int_64)*($11) << (int_64)29) + (int_64)(CASTING uint_64)(uint_32 $1))
	if ( (uint_64)($5 <= (int_64)1000000001) ){ goto $label$111 }
	$14 = ((uint_64)$5 / (uint_64)(int_64)1000000000)
	$5 = (int_64))($5 - ((int_64)$14 * (int_64)1000000000))
	$1 = (CASTING uint_32)(uint_64 $14)
	goto $label$110 
	
.LABEL $label$111
	$1 = [0]
	
.LABEL $label$110
	$16 = (CASTING uint_32)(uint_64 $5)
	*($11) = $16
	$11 = ( $8 ? ( $8 ? ( $8 ? $7 : $16 ) : ((int_32)$7 == (int_32)$6) ) : ((int_32)$7 != (int_32)(($8 + [-1]) & [2047])) )
	$16 = ($7 + [-1])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$109 }
	$2 = ($2 + [-29])
	if ( ($1 == 0) ){ goto $label$107 }
	$6 = (($6 + [-1]) & [2047])
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$112 }
	$8 = (($11 + [-1]) & [2047])
	*(($7 = (($4 + [1328]) + ((($11 + [2046]) & [2047]) << [2])))) = (*($7) | *((($4 + [1328]) + ($8 << [2]))))
	
.LABEL $label$112
	$13 = ($13 + [9])
	*((($4 + [1328]) + ($6 << [2]))) = $1
	goto $label$106 
	
.LABEL $label$96
	CALL __floatunsitf(($4 + [784]), $7)
	CALL __floatsitf(($4 + [800]), $12)
	CALL __multf3(($4 + [768]), *($4 + [800]), *((($4 + [800]) + [8])), *($4 + [784]), *((($4 + [784]) + [8])))
	CALL __floatsitf(($4 + [752]), *((($13 << [2]) + [33880])))
	CALL __multf3(($4 + [736]), *($4 + [768]), *((($4 + [768]) + [8])), *($4 + [752]), *((($4 + [752]) + [8])))
	$14 = *((($4 + [736]) + [8]))
	$5 = *($4 + [736])
	goto $label$64 
	
.LABEL $label$95
	
.LOOP $label$113:
	$22 = (($8 + [1]) & [2047])
	$21 = (($4 + [1328]) + ((($8 + [-1]) & [2047]) << [2]))
	
.LOOP $label$117:
	$1 = ( [9] ? [1] : ((int_32)$13 > (int_32)[45]) )
	
.LOOP $label$119:
	$7 = $6
	$6 = ($7 & [2047])
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($6 << [2])))
	if ( ($11 <= [10384593]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[10384593]) ){ goto $label$120 }
	$11 = (($7 + [1]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [717069655]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[717069655]) ){ goto $label$120 }
	$11 = (($7 + [2]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [257060992]) ){ goto $label$121 }
	if ( ((int_32)$11 != (int_32)[257060992]) ){ goto $label$120 }
	$11 = (($7 + [3]) & [2047])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$121 }
	$11 = *((($4 + [1328]) + ($11 << [2])))
	if ( ($11 <= [658440191]) ){ goto $label$121 }
	if ( ((int_32)$13 != (int_32)[36]) ){ goto $label$120 }
	if ( ((int_32)$11 != (int_32)[658440191]) ){ goto $label$120 }
	goto $label$116 
	
.LABEL $label$121
	if ( ((int_32)$13 == (int_32)[36]) ){ goto $label$118 }
	
.LABEL $label$120
	$2 = ($2 + $1)
	$6 = $8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$119 }
	$20 = uint_32([1000000000] >> $1)
	$3 = ((int_32)([-1] << $1) ^ (int_32)[-1])
	$11 = [0]
	$6 = $7
	
.LOOP $label$122:
	$16 = *($16)
	$11 = (uint_32($16 >> $1) + $11)
	*(($16 = (($4 + [1328]) + ($7 << [2])))) = $11
	$17 = ((int_32)$7 == (int_32)$6)
	$11 = ($17 & ($11 == 0))
	$7 = (($7 + [1]) & [2047])
	$6 = ( $7 ? $6 : $11 )
	$13 = ( ($13 + [-9]) ? $13 : $11 )
	$11 = ((int_32)($16 & $3) * (int_32)$20)
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$122 }
	if ( ($11 == 0) ){ goto $label$117 }
	if ( ((int_32)$22 != (int_32)$6) ){ goto $label$114 }
	*($21) = (*($21) | [1])
	$6 = $22
	goto $label$117 
	
.LABEL $label$118
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$116 }
	*(((($4 + [1328]) + ($22 << [2])) + [-4])) = [0]
	$6 = $8
	goto $label$115 
	
.LABEL $label$116
	$22 = $8
	
.LABEL $label$115
	CALL __floatunsitf(($4 + [1312]), *((($4 + [1328]) + ($6 << [2]))))
	$5 = *((($4 + [1312]) + [8]))
	$14 = *($4 + [1312])
	$8 = (($7 + [1]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$123 }
	*(((($4 + [1328]) + (($22 = (($7 + [2]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$123
	CALL __multf3(($4 + [1296]), $14, $5, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1280]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1264]), *($4 + [1296]), *((($4 + [1296]) + [8])), *($4 + [1280]), *((($4 + [1280]) + [8])))
	$5 = *((($4 + [1264]) + [8]))
	$14 = *($4 + [1264])
	$8 = (($7 + [2]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$124 }
	*(((($4 + [1328]) + (($22 = (($7 + [3]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$124
	CALL __multf3(($4 + [1248]), $14, $5, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1232]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1216]), *($4 + [1248]), *((($4 + [1248]) + [8])), *($4 + [1232]), *((($4 + [1232]) + [8])))
	$14 = *((($4 + [1216]) + [8]))
	$25 = *($4 + [1216])
	$8 = (($7 + [3]) & [2047])
	if ( ((int_32)$8 != (int_32)$22) ){ goto $label$125 }
	*(((($4 + [1328]) + (($22 = (($7 + [4]) & [2047])) << [2])) + [-4])) = [0]
	
.LABEL $label$125
	$5 = (int_64)0
	CALL __multf3(($4 + [1200]), $25, $14, (int_64)0, (int_64)4619810130798575616)
	CALL __floatunsitf(($4 + [1184]), *((($4 + [1328]) + ($8 << [2]))))
	CALL __addtf3(($4 + [1168]), *($4 + [1200]), *((($4 + [1200]) + [8])), *($4 + [1184]), *((($4 + [1184]) + [8])))
	CALL __floatsitf(($4 + [1152]), $12)
	CALL __multf3(($4 + [1136]), *($4 + [1168]), *((($4 + [1168]) + [8])), *($4 + [1152]), *((($4 + [1152]) + [8])))
	$14 = *((($4 + [1136]) + [8]))
	$25 = *($4 + [1136])
	$11 = ((int_32)$8 < (int_32)$10)
	$8 = (($2 - $9) + [113])
	$6 = ( ( $8 ? [0] : ((int_32)$8 > (int_32)[0]) ) ? $10 : $11 )
	if ( ((int_32)$6 >= (int_32)[113]) ){ goto $label$127 }
	CALL __extenddftf2(($4 + [1088]), CALL $612((float_64)1, ([225] - $6)))
	CALL $613(($4 + [1120]), *($4 + [1088]), *((($4 + [1088]) + [8])), $25, $14)
	$26 = *($4 + [1128])
	$28 = *($4 + [1120])
	CALL __extenddftf2(($4 + [1072]), CALL $612((float_64)1, ([113] - $6)))
	CALL $614(($4 + [1104]), $25, $14, *($4 + [1072]), *((($4 + [1072]) + [8])))
	$27 = *($4 + [1112])
	$5 = *($4 + [1104])
	CALL __subtf3(($4 + [1056]), $25, $14, $5, $27)
	CALL __addtf3(($4 + [1040]), $28, $26, *($4 + [1056]), *((($4 + [1056]) + [8])))
	$14 = *((($4 + [1040]) + [8]))
	$25 = *($4 + [1040])
	goto $label$126 
	
.LABEL $label$127
	$27 = (int_64)0
	$28 = (int_64)0
	$26 = (int_64)0
	
.LABEL $label$126
	$1 = ($2 + [113])
	$16 = (($7 + [4]) & [2047])
	if ( ((int_32)$16 == (int_32)$22) ){ goto $label$128 }
	$16 = *((($4 + [1328]) + ($16 << [2])))
	if ( ((uint_32)$16 > (uint_32)[499999999]) ){ goto $label$130 }
	if ( $16 ){ goto $label$131 }
	if ( ((int_32)(($7 + [5]) & [2047]) == (int_32)$22) ){ goto $label$129 }
	
.LABEL $label$131
	CALL __extenddftf2(($4 + [928]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0.25))
	CALL __addtf3(($4 + [912]), $5, $27, *($4 + [928]), *((($4 + [928]) + [8])))
	$27 = *((($4 + [912]) + [8]))
	$5 = *($4 + [912])
	goto $label$129 
	
.LABEL $label$130
	if ( ((int_32)$16 != (int_32)[500000000]) ){ goto $label$133 }
	$30 = (CASTING float_64)(int_32 $12)
	if ( ((int_32)(($7 + [5]) & [2047]) != (int_32)$22) ){ goto $label$132 }
	CALL __extenddftf2(($4 + [960]), ((float_64)$30 * (float_64)(float_64)0.5))
	CALL __addtf3(($4 + [944]), $5, $27, *($4 + [960]), *((($4 + [960]) + [8])))
	$27 = *((($4 + [944]) + [8]))
	$5 = *($4 + [944])
	goto $label$129 
	
.LABEL $label$133
	CALL __extenddftf2(($4 + [1024]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0.75))
	CALL __addtf3(($4 + [1008]), $5, $27, *($4 + [1024]), *((($4 + [1024]) + [8])))
	$27 = *((($4 + [1008]) + [8]))
	$5 = *($4 + [1008])
	goto $label$129 
	
.LABEL $label$132
	CALL __extenddftf2(($4 + [992]), ((float_64)$30 * (float_64)(float_64)0.75))
	CALL __addtf3(($4 + [976]), $5, $27, *($4 + [992]), *((($4 + [992]) + [8])))
	$27 = *((($4 + [976]) + [8]))
	$5 = *($4 + [976])
	
.LABEL $label$129
	if ( ((int_32)([113] - $6) < (int_32)[2]) ){ goto $label$128 }
	CALL $614(($4 + [896]), $5, $27, (int_64)0, (int_64)4611404543450677248)
	if ( CALL __netf2(*($4 + [896]), *($4 + [904]), (int_64)0, (int_64)0) ){ goto $label$128 }
	CALL __addtf3(($4 + [880]), $5, $27, (int_64)0, (int_64)4611404543450677248)
	$27 = *(($4 + [888]))
	$5 = *($4 + [880])
	
.LABEL $label$128
	CALL __addtf3(($4 + [864]), $25, $14, $5, $27)
	CALL __subtf3(($4 + [848]), *($4 + [864]), *((($4 + [864]) + [8])), $28, $26)
	$14 = *((($4 + [848]) + [8]))
	$25 = *($4 + [848])
	if ( ((int_32)($1 & [2147483647]) <= (int_32)([-2] - $18)) ){ goto $label$134 }
	if ( ((int_32)((float_64)CALL $615(CALL $fimport$43($25, $14)) >= (float_64)(float_64)1038459371706965525706099e10) ^ (int_32)[1]) ){ goto $label$135 }
	CALL __multf3(($4 + [832]), $25, $14, (int_64)0, (int_64)4611123068473966592)
	$11 = (((int_32)$8 < (int_32)$10) & ((int_32)(($6 + $9) + [-113]) != (int_32)$2))
	$2 = ($2 + [1])
	$14 = *(($4 + [840]))
	$25 = *($4 + [832])
	
.LABEL $label$135
	$7 = CALL __netf2($5, $27, (int_64)0, (int_64)0)
	if ( ((int_32)($2 + [110]) > (int_32)$19) ){ goto $label$136 }
	if ( ((((int_32)$7 != (int_32)[0]) & $11) == 0) ){ goto $label$134 }
	
.LABEL $label$136
	*(CALL $564()) = [34]
	
.LABEL $label$134
	CALL $616(($4 + [816]), $25, $14, $2)
	$14 = *($4 + [824])
	$5 = *($4 + [816])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$114
	*((($4 + [1328]) + ($8 << [2]))) = $11
	$8 = $22
	goto $label$113 
	
.LABEL $label$69
	$15 = [8]
	goto $label$1 
	
.LABEL $label$68
	$15 = [8]
	goto $label$1 
	
.LABEL $label$67
	$15 = [8]
	goto $label$1 
	
.LABEL $label$66
	$15 = [8]
	goto $label$1 
	
.LABEL $label$65
	$15 = [8]
	goto $label$1 
	
.LABEL $label$64
	$15 = [8]
	goto $label$1 
	
.LABEL $label$63
	CALL __extenddftf2(($4 + [448]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [456]))
	$5 = *($4 + [448])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$10
	
.LOOP $label$137:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$138 }
	$13 = [1]
	*($7) = ($8 + [1])
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$137 }
	goto $label$9 
	
.LABEL $label$138
	$13 = [1]
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$137 }
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$143 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$142 }
	*($7) = ($8 + [1])
	$11 = [48]
	$14 = (int_64)0
	$8 = *($8)
	if ( ((int_32)$8 != (int_32)[48]) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$14 = (int_64)0
	$17 = [0]
	goto $label$139 
	
.LABEL $label$142
	$11 = [48]
	$14 = (int_64)0
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)[48]) ){ goto $label$140 }
	
.LABEL $label$141
	$17 = [1]
	goto $label$139 
	
.LABEL $label$140
	
.LOOP $label$145:
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$146 }
	*($7) = ($8 + [1])
	$14 = ((int_64)$14 + (int_64)-1)
	$8 = *($8)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$146
	$14 = ((int_64)$14 + (int_64)-1)
	$8 = CALL $611($1)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$145 }
	
.LABEL $label$144
	$17 = [1]
	$13 = [1]
	
.LABEL $label$139
	$26 = (int_64)4611404543450677248
	$2 = [0]
	$25 = (int_64)0
	$27 = (int_64)0
	$28 = (int_64)0
	$20 = [0]
	$5 = (int_64)0
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ((uint_32)$16 >= (uint_32)[10]) ){ goto $label$147 }
	$15 = [20]
	goto $label$1 
	
.LABEL $label$147
	$15 = [27]
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_32)$11 != (int_32)[3]) ){ goto $label$4 }
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$6 }
	
.LABEL $label$7
	*($7) = ($8 + [1])
	if ( ((int_32)*($8) == (int_32)[40]) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)CALL $611($1) != (int_32)[40]) ){ goto $label$2 }
	
.LABEL $label$5
	$8 = [1]
	$11 = *($7)
	if ( ($11 <= *($6)) ){ goto $label$3 }
	$15 = [15]
	goto $label$1 
	
.LABEL $label$4
	if ( (*($6) == 0) ){ goto $label$148 }
	*($7) = (*($7) + [-1])
	
.LABEL $label$148
	*(CALL $564()) = [22]
	$15 = [6]
	goto $label$1 
	
.LABEL $label$3
	$15 = [18]
	goto $label$1 
	
.LABEL $label$2
	$14 = (int_64)9223231299366420480
	if ( (*($6) == 0) ){ goto $label$149 }
	*($7) = (*($7) + [-1])
	$15 = [8]
	goto $label$1 
	
.LABEL $label$149
	$15 = [8]
	
.LABEL $label$1
	
.LOOP $label$150:
	goto $label$276 
	
.LABEL $label$279
	$11 = CALL $611($1)
	$16 = ($11 + [-65])
	if ( (($11 + [-48]) <= [10]) ){ goto $label$203 }
	$15 = [16]
	goto $label$150 
	
.LABEL $label$278
	if ( ($16 <= [26]) ){ goto $label$202 }
	$15 = [17]
	goto $label$150 
	
.LABEL $label$277
	$16 = ($11 + [-97])
	if ( ((int_32)$11 == (int_32)[95]) ){ goto $label$201 }
	$15 = [0]
	goto $label$150 
	
.LABEL $label$276
	if ( ((uint_32)$16 >= (uint_32)[26]) ){ goto $label$200 }
	$15 = [14]
	goto $label$150 
	
.LABEL $label$275
	$8 = ($8 + [1])
	$11 = *($7)
	if ( ((uint_32)$11 >= (uint_32)*($6)) ){ goto $label$204 }
	$15 = [18]
	goto $label$150 
	
.LABEL $label$274
	*($7) = ($11 + [1])
	$11 = *($11)
	$16 = ($11 + [-65])
	if ( ((uint_32)($11 + [-48]) >= (uint_32)[10]) ){ goto $label$184 }
	goto $label$185 
	
.LABEL $label$273
	$14 = (int_64)9223231299366420480
	if ( ((int_32)$11 == (int_32)[41]) ){ goto $label$199 }
	$15 = [2]
	goto $label$150 
	
.LABEL $label$272
	$6 = *($6)
	if ( ($6 == 0) ){ goto $label$198 }
	$15 = [3]
	goto $label$150 
	
.LABEL $label$271
	*($7) = (*($7) + [-1])
	$15 = [4]
	goto $label$150 
	
.LABEL $label$270
	if ( ($13 == 0) ){ goto $label$197 }
	$15 = [9]
	goto $label$150 
	
.LABEL $label$269
	if ( ($8 == 0) ){ goto $label$188 }
	$15 = [10]
	goto $label$150 
	
.LABEL $label$268
	if ( ($6 == 0) ){ goto $label$187 }
	$15 = [11]
	goto $label$150 
	
.LABEL $label$267
	$1 = *($7)
	$6 = [0]
	$15 = [12]
	goto $label$150 
	
.LABEL $label$266
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$186 }
	$15 = [13]
	goto $label$150 
	
.LABEL $label$265
	*($7) = ($1 - $6)
	goto $label$189 
	
.LABEL $label$264
	*(CALL $564()) = [22]
	goto $label$195 
	
.LABEL $label$263
	$5 = (int_64)0
	CALL $610($1, (int_64)0)
	$15 = [7]
	goto $label$150 
	
.LABEL $label$262
	$14 = (int_64)0
	$15 = [8]
	goto $label$150 
	
.LABEL $label$261
	*($0) = $5
	*($0 + [8]) = $14
	$global$0 = ($4 + [9520])
	return 
	
.LABEL $label$260
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$205 }
	$15 = [69]
	goto $label$150 
	
.LABEL $label$259
	if ( $17 ){ goto $label$174 }
	$15 = [70]
	goto $label$150 
	
.LABEL $label$258
	$17 = [1]
	$14 = $5
	$8 = *($7)
	if ( ($8 <= *($6)) ){ goto $label$207 }
	$15 = [26]
	goto $label$150 
	
.LABEL $label$257
	$8 = CALL $611($1)
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ((uint_32)$16 >= (uint_32)[10]) ){ goto $label$206 }
	$15 = [20]
	goto $label$150 
	
.LABEL $label$256
	$8 = ( ($11 + [-87]) ? $16 : ((int_32)$8 > (int_32)[57]) )
	if ( ((int_64)$5 > (int_64)7) ){ goto $label$181 }
	$15 = [68]
	goto $label$150 
	
.LABEL $label$255
	$2 = ($8 + ($2 << [4]))
	goto $label$176 
	
.LABEL $label$254
	if ( ((int_64)$5 > (int_64)28) ){ goto $label$180 }
	$15 = [67]
	goto $label$150 
	
.LABEL $label$253
	CALL __multf3(($4 + [48]), $28, $26, (int_64)0, (int_64)4610278643543834624)
	CALL __floatsitf(($4 + [64]), $8)
	$26 = *((($4 + [48]) + [8]))
	$28 = *($4 + [48])
	CALL __multf3(($4 + [32]), $28, $26, *($4 + [64]), *((($4 + [64]) + [8])))
	CALL __addtf3(($4 + [16]), $25, $27, *($4 + [32]), *((($4 + [32]) + [8])))
	$27 = *((($4 + [16]) + [8]))
	$25 = *($4 + [16])
	goto $label$177 
	
.LABEL $label$252
	if ( $20 ){ goto $label$179 }
	$15 = [23]
	goto $label$150 
	
.LABEL $label$251
	if ( ($8 == 0) ){ goto $label$178 }
	$15 = [24]
	goto $label$150 
	
.LABEL $label$250
	CALL __multf3(($4 + [96]), $28, $26, (int_64)0, (int_64)4611123068473966592)
	CALL __addtf3(($4 + [80]), $25, $27, *($4 + [96]), *((($4 + [96]) + [8])))
	$27 = *((($4 + [80]) + [8]))
	$20 = [1]
	$25 = *($4 + [80])
	$15 = [25]
	goto $label$150 
	
.LABEL $label$249
	$5 = ((int_64)$5 + (int_64)1)
	$13 = [1]
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*($6)) ){ goto $label$175 }
	$15 = [66]
	goto $label$150 
	
.LABEL $label$248
	*($7) = ($8 + [1])
	$8 = *($8)
	$11 = ($8 | [32])
	$16 = ($8 + [-48])
	if ( ($16 <= [10]) ){ goto $label$208 }
	$15 = [27]
	goto $label$150 
	
.LABEL $label$247
	if ( ((int_32)$8 == (int_32)[46]) ){ goto $label$183 }
	$15 = [28]
	goto $label$150 
	
.LABEL $label$246
	if ( ((uint_32)($11 + [-97]) <= (uint_32)[5]) ){ goto $label$182 }
	$15 = [29]
	goto $label$150 
	
.LABEL $label$245
	if ( ($13 == 0) ){ goto $label$173 }
	$15 = [30]
	goto $label$150 
	
.LABEL $label$244
	if ( ((int_64)$5 > (int_64)7) ){ goto $label$171 }
	$15 = [56]
	goto $label$150 
	
.LABEL $label$243
	$26 = ((int_64)$5 + (int_64)-1)
	$15 = [57]
	goto $label$150 
	
.LABEL $label$242
	$2 = ($2 << [4])
	$26 = ((int_64)$26 + (int_64)1)
	if ( ((int_64)$26 < (int_64)7) ){ goto $label$172 }
	$15 = [31]
	goto $label$150 
	
.LABEL $label$241
	if ( ((int_32)$11 != (int_32)[112]) ){ goto $label$170 }
	$15 = [52]
	goto $label$150 
	
.LABEL $label$240
	$26 = CALL $618($1, $3)
	if ( ((int_64)$26 != (int_64)-9223372036854775808) ){ goto $label$168 }
	$15 = [53]
	goto $label$150 
	
.LABEL $label$239
	if ( ($3 == 0) ){ goto $label$196 }
	$15 = [54]
	goto $label$150 
	
.LABEL $label$238
	$26 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$167 }
	$15 = [55]
	goto $label$150 
	
.LABEL $label$237
	*($7) = (*($7) + [-1])
	if ( $2 ){ goto $label$165 }
	$15 = [51]
	goto $label$150 
	
.LABEL $label$236
	CALL __extenddftf2(($4 + [128]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [136]))
	$5 = *($4 + [128])
	goto $label$191 
	
.LABEL $label$235
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$155 }
	$15 = [59]
	goto $label$150 
	
.LABEL $label$234
	*($7) = (*($7) + [-1])
	$15 = [60]
	goto $label$150 
	
.LABEL $label$233
	if ( ($3 == 0) ){ goto $label$154 }
	$15 = [61]
	goto $label$150 
	
.LABEL $label$232
	if ( ($8 == 0) ){ goto $label$153 }
	$15 = [62]
	goto $label$150 
	
.LABEL $label$231
	$8 = *($7)
	*($7) = ($8 + [-1])
	if ( ($17 == 0) ){ goto $label$152 }
	$15 = [63]
	goto $label$150 
	
.LABEL $label$230
	*($7) = ($8 + [-2])
	goto $label$151 
	
.LABEL $label$229
	$26 = (int_64)0
	if ( (*($6) == 0) ){ goto $label$169 }
	$15 = [33]
	goto $label$150 
	
.LABEL $label$228
	*($7) = (*($7) + [-1])
	$15 = [34]
	goto $label$150 
	
.LABEL $label$227
	if ( ($2 == 0) ){ goto $label$166 }
	$15 = [35]
	goto $label$150 
	
.LABEL $label$226
	$5 = ((int_64)((int_64)((int_64)( $14 ? $5 : $17 ) << (int_64)2) + (int_64)$26) + (int_64)-32)
	if ( ((int_64)$5 <= (int_64)(CASTING uint_64)(uint_32 ([0] - $9))) ){ goto $label$164 }
	$15 = [50]
	goto $label$150 
	
.LABEL $label$225
	CALL __floatsitf(($4 + [176]), $12)
	CALL __multf3(($4 + [160]), *($4 + [176]), *((($4 + [176]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	CALL __multf3(($4 + [144]), *($4 + [160]), *((($4 + [160]) + [8])), (int_64)-1, (int_64)9223090561878065151)
	*(CALL $564()) = [34]
	$14 = *((($4 + [144]) + [8]))
	$5 = *($4 + [144])
	goto $label$192 
	
.LABEL $label$224
	if ( ((int_64)$5 >= (int_64)(CASTING int_64)(int_32 ($9 + [-226]))) ){ goto $label$163 }
	$15 = [49]
	goto $label$150 
	
.LABEL $label$223
	CALL __floatsitf(($4 + [224]), $12)
	CALL __multf3(($4 + [208]), *($4 + [224]), *((($4 + [224]) + [8])), (int_64)0, (int_64)281474976710656)
	CALL __multf3(($4 + [192]), *($4 + [208]), *((($4 + [208]) + [8])), (int_64)0, (int_64)281474976710656)
	*(CALL $564()) = [34]
	$14 = *((($4 + [192]) + [8]))
	$5 = *($4 + [192])
	goto $label$193 
	
.LABEL $label$222
	CALL $610($1, (int_64)0)
	$15 = [64]
	goto $label$150 
	
.LABEL $label$221
	CALL __extenddftf2(($4 + [112]), ((float_64)(CASTING float_64)(int_32 $12) * (float_64)(float_64)0))
	$14 = *(($4 + [120]))
	$5 = *($4 + [112])
	goto $label$190 
	
.LABEL $label$220
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$161 }
	$15 = [47]
	goto $label$150 
	
.LABEL $label$219
	$15 = [48]
	goto $label$150 
	
.LABEL $label$218
	CALL __addtf3(($4 + [432]), $25, $27, (int_64)0, (int_64)-4611967493404098560)
	$7 = CALL __getf2($25, $27, (int_64)0, (int_64)4611123068473966592)
	$8 = ((int_32)$7 < (int_32)[0])
	CALL __addtf3(($4 + [416]), $25, $27, ( $25 ? *($4 + [432]) : $8 ), ( $27 ? *((($4 + [432]) + [8])) : $8 ))
	$5 = ((int_64)$5 + (int_64)-1)
	$27 = *((($4 + [416]) + [8]))
	$25 = *($4 + [416])
	$2 = (($2 << [1]) | ((int_32)$7 > (int_32)[-1]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$162 }
	$15 = [38]
	goto $label$150 
	
.LABEL $label$217
	$14 = ((int_64)$5 + (int_64))((int_64)32 - (CASTING int_64)(int_32 $9))
	if ( ((int_64)$14) >= (int_64)(CASTING uint_64)(uint_32 $10)) ){ goto $label$160 }
	$15 = [45]
	goto $label$150 
	
.LABEL $label$216
	$10 = (CASTING uint_32)(uint_64 $14)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$159 }
	$15 = [39]
	goto $label$150 
	
.LABEL $label$215
	if ( ((int_32)$10 < (int_32)[113]) ){ goto $label$158 }
	$15 = [40]
	goto $label$150 
	
.LABEL $label$214
	CALL __floatsitf(($4 + [400]), $12)
	$14 = *(($4 + [408]))
	$26 = (int_64)0
	$28 = *($4 + [400])
	$29 = (int_64)0
	goto $label$157 
	
.LABEL $label$213
	$10 = [0]
	$15 = [44]
	goto $label$150 
	
.LABEL $label$212
	CALL __floatsitf(($4 + [352]), $12)
	CALL __extenddftf2(($4 + [368]), CALL $612((float_64)1, ([144] - $10)))
	$14 = *((($4 + [352]) + [8]))
	$28 = *($4 + [352])
	CALL $613(($4 + [384]), *($4 + [368]), *((($4 + [368]) + [8])), $28, $14)
	$29 = *($4 + [392])
	$26 = *($4 + [384])
	$15 = [41]
	goto $label$150 
	
.LABEL $label$211
	$7 = ((($2 & [1]) == 0) & (((int_32)CALL __netf2($25, $27, (int_64)0, (int_64)0) != (int_32)[0]) & ((int_32)$10 < (int_32)[32])))
	CALL __floatunsitf(($4 + [336]), ($2 + $7))
	CALL __multf3(($4 + [320]), $28, $14, *($4 + [336]), *((($4 + [336]) + [8])))
	CALL __multf3(($4 + [304]), $28, $14, ( (int_64)0 ? $25 : $7 ), ( (int_64)0 ? $27 : $7 ))
	CALL __addtf3(($4 + [288]), $26, $29, *($4 + [320]), *((($4 + [320]) + [8])))
	CALL __addtf3(($4 + [272]), *($4 + [304]), *((($4 + [304]) + [8])), *($4 + [288]), *((($4 + [288]) + [8])))
	CALL __subtf3(($4 + [256]), *($4 + [272]), *((($4 + [272]) + [8])), $26, $29)
	$25 = *((($4 + [256]) + [8]))
	$14 = *($4 + [256])
	if ( CALL __netf2($14, $25, (int_64)0, (int_64)0) ){ goto $label$156 }
	$15 = [42]
	goto $label$150 
	
.LABEL $label$210
	*(CALL $564()) = [34]
	$15 = [43]
	goto $label$150 
	
.LABEL $label$209
	CALL $616(($4 + [240]), $14, $25, (CASTING uint_32)(uint_64 $5))
	$14 = *($4 + [248])
	$5 = *($4 + [240])
	goto $label$194 
	
.LABEL $label$208
	$15 = [20]
	goto $label$150 
	
.LABEL $label$207
	$15 = [66]
	goto $label$150 
	
.LABEL $label$206
	$15 = [27]
	goto $label$150 
	
.LABEL $label$205
	$15 = [20]
	goto $label$150 
	
.LABEL $label$204
	$15 = [15]
	goto $label$150 
	
.LABEL $label$203
	$15 = [14]
	goto $label$150 
	
.LABEL $label$202
	$15 = [14]
	goto $label$150 
	
.LABEL $label$201
	$15 = [14]
	goto $label$150 
	
.LABEL $label$200
	$15 = [1]
	goto $label$150 
	
.LABEL $label$199
	$15 = [8]
	goto $label$150 
	
.LABEL $label$198
	$15 = [4]
	goto $label$150 
	
.LABEL $label$197
	$15 = [5]
	goto $label$150 
	
.LABEL $label$196
	$15 = [6]
	goto $label$150 
	
.LABEL $label$195
	$15 = [6]
	goto $label$150 
	
.LABEL $label$194
	$15 = [8]
	goto $label$150 
	
.LABEL $label$193
	$15 = [8]
	goto $label$150 
	
.LABEL $label$192
	$15 = [8]
	goto $label$150 
	
.LABEL $label$191
	$15 = [8]
	goto $label$150 
	
.LABEL $label$190
	$15 = [8]
	goto $label$150 
	
.LABEL $label$189
	$15 = [8]
	goto $label$150 
	
.LABEL $label$188
	$15 = [8]
	goto $label$150 
	
.LABEL $label$187
	$15 = [8]
	goto $label$150 
	
.LABEL $label$186
	$15 = [12]
	goto $label$150 
	
.LABEL $label$185
	$15 = [14]
	goto $label$150 
	
.LABEL $label$184
	$15 = [16]
	goto $label$150 
	
.LABEL $label$183
	$15 = [19]
	goto $label$150 
	
.LABEL $label$182
	$15 = [19]
	goto $label$150 
	
.LABEL $label$181
	$15 = [21]
	goto $label$150 
	
.LABEL $label$180
	$15 = [22]
	goto $label$150 
	
.LABEL $label$179
	$15 = [25]
	goto $label$150 
	
.LABEL $label$178
	$15 = [25]
	goto $label$150 
	
.LABEL $label$177
	$15 = [25]
	goto $label$150 
	
.LABEL $label$176
	$15 = [25]
	goto $label$150 
	
.LABEL $label$175
	$15 = [26]
	goto $label$150 
	
.LABEL $label$174
	$15 = [29]
	goto $label$150 
	
.LABEL $label$173
	$15 = [58]
	goto $label$150 
	
.LABEL $label$172
	$15 = [57]
	goto $label$150 
	
.LABEL $label$171
	$15 = [31]
	goto $label$150 
	
.LABEL $label$170
	$15 = [32]
	goto $label$150 
	
.LABEL $label$169
	$15 = [34]
	goto $label$150 
	
.LABEL $label$168
	$15 = [34]
	goto $label$150 
	
.LABEL $label$167
	$15 = [34]
	goto $label$150 
	
.LABEL $label$166
	$15 = [51]
	goto $label$150 
	
.LABEL $label$165
	$15 = [35]
	goto $label$150 
	
.LABEL $label$164
	$15 = [36]
	goto $label$150 
	
.LABEL $label$163
	$15 = [37]
	goto $label$150 
	
.LABEL $label$162
	$15 = [48]
	goto $label$150 
	
.LABEL $label$161
	$15 = [38]
	goto $label$150 
	
.LABEL $label$160
	$15 = [39]
	goto $label$150 
	
.LABEL $label$159
	$15 = [46]
	goto $label$150 
	
.LABEL $label$158
	$15 = [44]
	goto $label$150 
	
.LABEL $label$157
	$15 = [41]
	goto $label$150 
	
.LABEL $label$156
	$15 = [43]
	goto $label$150 
	
.LABEL $label$155
	$15 = [60]
	goto $label$150 
	
.LABEL $label$154
	$15 = [65]
	goto $label$150 
	
.LABEL $label$153
	$15 = [64]
	goto $label$150 
	
.LABEL $label$152
	$15 = [64]
	goto $label$150 
	
.LABEL $label$151
	$15 = [64]
	goto $label$150 
	$15
}

void .FUNC $383 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13, int_32 $14)
{
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	*($2) = $0
	$15 = ((int_32)$14 > (int_32)[1])
	$16 = ($14 + [-1])
	$17 = ($11 + [1])
	$18 = ($12 + [1])
	$19 = ($13 + [1])
	$20 = ($3 & [512])
	$21 = ($12 + [8])
	$22 = [0]
	
.LOOP $label$2:
	$25 = *(($8 + $22))
	if ( ((uint_32)$25 > (uint_32)[4]) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$8
	*($1) = *($2)
	$22 = ($22 + [1])
	if ( ((int_32)$22 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	*($1) = *($2)
	$25 = CALL int_32 $6((int_32 [32]), (int_32 *(*($6) + [28])))
	$26 = *($2)
	*($2) = ($26 + [1])
	*($26) = $25
	$22 = ($22 + [1])
	if ( ((int_32)$22 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	if ( ($20 == 0) ){ goto $label$3 }
	$25 = ($25 & [1])
	$25 = *($12)
	$23 = ( *(($12 + [4])) ? uint_32($25 >> [1]) : $25 )
	if ( ($23 == 0) ){ goto $label$3 }
	$25 = ( *($21) ? $18 : $25 )
	$27 = $23
	$24 = *($2)
	$26 = $24
	
.LOOP $label$9:
	*($26) = *($25)
	$26 = ($26 + [1])
	$25 = ($25 + [1])
	$27 = ($27 + [-1])
	if ( $27 ){ goto $label$9 }
	*($2) = ($24 + $23)
	$22 = ($22 + [1])
	if ( ((int_32)$22 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$25 = ($25 & [1])
	$25 = *($13)
	if ( (( *(($13 + [4])) ? uint_32($25 >> [1]) : $25 ) == 0) ){ goto $label$3 }
	$25 = *(( *(($13 + [8])) ? $19 : $25 ))
	$26 = *($2)
	*($2) = ($26 + [1])
	*($26) = $25
	$22 = ($22 + [1])
	if ( ((int_32)$22 != (int_32)[4]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$27 = *($2)
	$4 = ( ($4 + [1]) ? $4 : $7 )
	$25 = $4
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$10 }
	$25 = $4
	
.LOOP $label$11:
	$26 = *($25)
	if ( ((int_32)$26 < (int_32)[0]) ){ goto $label$10 }
	if ( ((*((*(($6 + [8])) + ($26 << [2]))) & [64]) == 0) ){ goto $label$10 }
	$25 = ($25 + [1])
	if ( ($25 <= $5) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$14 < (int_32)[1]) ){ goto $label$18 }
	if ( ((uint_32)$25 <= (uint_32)$4) ){ goto $label$17 }
	$26 = ($25 + [-1])
	$23 = *($26)
	*($2) = ($27 + [1])
	*($27) = $23
	if ( ((int_32)$14 >= (int_32)[2]) ){ goto $label$19 }
	$23 = $16
	$24 = [0]
	if ( $15 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$19
	$23 = $16
	$28 = $15
	if ( ((uint_32)$26 <= (uint_32)$4) ){ goto $label$20 }
	$25 = ($25 + [-2])
	$23 = $16
	
.LOOP $label$22:
	$26 = *($25)
	$24 = *($2)
	*($2) = ($24 + [1])
	*($24) = $26
	$24 = ($25 + [-1])
	$26 = $23
	$23 = ($26 + [-1])
	if ( ((int_32)$26 < (int_32)[2]) ){ goto $label$21 }
	$28 = ((uint_32)$25 > (uint_32)$4)
	$25 = $24
	if ( $28 ){ goto $label$22 }
	
.LABEL $label$21
	$28 = ((int_32)$26 > (int_32)[1])
	$26 = ($24 + [1])
	
.LABEL $label$20
	$24 = [0]
	if ( $28 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$26 = $25
	if ( ((int_32)$26 != (int_32)$4) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	$26 = $25
	$23 = $14
	
.LABEL $label$16
	$24 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [28])))
	
.LABEL $label$15
	$25 = *($2)
	*($2) = ($25 + [1])
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$23 }
	$23 = ($23 + [1])
	
.LOOP $label$24:
	*($25) = $24
	$25 = *($2)
	*($2) = ($25 + [1])
	$23 = ($23 + [-1])
	if ( ((int_32)$23 > (int_32)[1]) ){ goto $label$24 }
	
.LABEL $label$23
	*($25) = $9
	if ( ((int_32)$26 == (int_32)$4) ){ goto $label$13 }
	
.LABEL $label$14
	$25 = ($25 & [1])
	$25 = *($11)
	$29 = ($11 + [4])
	if ( (( *($29) ? uint_32($25 >> [1]) : $25 ) == 0) ){ goto $label$26 }
	$28 = *(( *(($11 + [8])) ? $17 : $25 ))
	goto $label$25 
	
.LABEL $label$26
	$28 = [-1]
	
.LABEL $label$25
	$30 = [0]
	$25 = [0]
	
.LOOP $label$27:
	if ( ((int_32)$25 != (int_32)$28) ){ goto $label$28 }
	$25 = *($2)
	*($2) = ($25 + [1])
	*($25) = $10
	$25 = [0]
	$23 = ($23 & [1])
	$23 = *($11)
	$30 = ($30 + [1])
	if ( ((uint_32)$30 >= (uint_32)( *($29) ? uint_32($23 >> [1]) : $23 )) ){ goto $label$28 }
	$23 = *((( *(($11 + [8])) ? $17 : $23 ) + $30))
	$28 = int_32((( [-1] ? $23 : ((int_32)$23 == (int_32)[127]) ) << [24]) >> [24])
	
.LABEL $label$28
	$26 = ($26 + [-1])
	$23 = *($26)
	$24 = *($2)
	*($2) = ($24 + [1])
	*($24) = $23
	$25 = ($25 + [1])
	if ( ((int_32)$4 != (int_32)$26) ){ goto $label$27 }
	$25 = *($2)
	if ( ((int_32)$27 != (int_32)$25) ){ goto $label$12 }
	goto $label$3 
	
.LABEL $label$13
	$25 = CALL int_32 $6((int_32 [48]), (int_32 *(*($6) + [28])))
	$26 = *($2)
	*($2) = ($26 + [1])
	*($26) = $25
	$25 = *($2)
	if ( ((int_32)$27 == (int_32)$25) ){ goto $label$3 }
	
.LABEL $label$12
	$25 = ($25 + [-1])
	if ( ((uint_32)$25 <= (uint_32)$27) ){ goto $label$3 }
	
.LOOP $label$29:
	$26 = *($27)
	*($27) = *($25)
	*($25) = $26
	$25 = ($25 + [-1])
	$27 = ($27 + [1])
	if ( ($27 <= $25) ){ goto $label$29 }
	
.LABEL $label$3
	$22 = ($22 + [1])
	if ( ((int_32)$22 != (int_32)[4]) ){ goto $label$2 }
	
.LABEL $label$1
	$25 = ($25 & [1])
	$25 = *($13)
	$23 = ( *(($13 + [4])) ? uint_32($25 >> [1]) : $25 )
	if ( ((uint_32)$23 <= (uint_32)[1]) ){ goto $label$30 }
	$27 = ($23 + [-1])
	$25 = (( *(($13 + [8])) ? $19 : $25 ) + [1])
	$24 = *($2)
	$26 = $24
	
.LOOP $label$31:
	*($26) = *($25)
	$26 = ($26 + [1])
	$25 = ($25 + [1])
	$27 = ($27 + [-1])
	if ( $27 ){ goto $label$31 }
	*($2) = (($24 + $23) + [-1])
	
.LABEL $label$30
	$25 = ($3 & [176])
	if ( ((int_32)$25 == (int_32)[16]) ){ goto $label$32 }
	if ( ((int_32)$25 != (int_32)[32]) ){ goto $label$33 }
	*($1) = *($2)
	return 
	
.LABEL $label$33
	*($1) = $0
	
.LABEL $label$32
	$25
}

void .FUNC $382 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	$10 = ($global$0 - [32])
	$global$0 = $10
	$2 = *($2)
	if ( ($0 == 0) ){ goto $label$14 }
	*($10) = [11384]
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	if ( ((int_32)*([0] + [11384]) == (int_32)[-1]) ){ goto $label$15 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11384], ($10 + [16]), [60])
	
.LABEL $label$15
	$0 = *(((*($2 + [16]) + (*([0] + [11388]) << [2])) + [-4]))
	if ( ($1 == 0) ){ goto $label$13 }
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$11 }
	*($8) = [0]
	goto $label$10 
	
.LABEL $label$14
	*($10) = [11376]
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	if ( ((int_32)*([0] + [11376]) == (int_32)[-1]) ){ goto $label$16 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11376], ($10 + [16]), [60])
	
.LABEL $label$16
	$0 = *(((*($2 + [16]) + (*([0] + [11380]) << [2])) + [-4]))
	if ( ($1 == 0) ){ goto $label$12 }
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$9 }
	*($8) = [0]
	goto $label$8 
	
.LABEL $label$13
	CALL void $10((int_32 $0), (int_32 *(*($0) + [40])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($8) & [1]) ){ goto $label$7 }
	*($8) = [0]
	goto $label$6 
	
.LABEL $label$12
	CALL void $10((int_32 $0), (int_32 *(*($0) + [40])))
	*($3) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($8) & [1]) ){ goto $label$4 }
	*($8) = [0]
	goto $label$3 
	
.LABEL $label$11
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$10
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	goto $label$5 
	
.LABEL $label$9
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$8
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	goto $label$2 
	
.LABEL $label$7
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$6
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	
.LABEL $label$5
	*($4) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($5) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($6) & [1]) ){ goto $label$18 }
	*($6) = [0]
	goto $label$17 
	
.LABEL $label$18
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$17
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($7) & [1]) ){ goto $label$20 }
	*($7) = [0]
	goto $label$19 
	
.LABEL $label$20
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$19
	CALL $531($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	goto $label$1 
	
.LABEL $label$4
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$3
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	
.LABEL $label$2
	*($4) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($5) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($6) & [1]) ){ goto $label$22 }
	*($6) = [0]
	goto $label$21 
	
.LABEL $label$22
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$21
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($7) & [1]) ){ goto $label$24 }
	*($7) = [0]
	goto $label$23 
	
.LABEL $label$24
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$23
	CALL $531($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	
.LABEL $label$1
	*($9) = $0
	$global$0 = ($10 + [32])
}

int_32 .FUNC $381 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$7 = ($global$0 - [448])
	$global$0 = $7
	*($7 + [332]) = ($7 + [336])
	*($7 + [24]) = $6
	*($7 + [16]) = $5
	$8 = ($7 + [224])
	$9 = [0]
	$10 = [0]
	$11 = CALL $590(($7 + [336]), [100], [8730], ($7 + [16]))
	if ( ($11 <= [100]) ){ goto $label$5 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$7 }
	$11 = *([0] + [11456])
	goto $label$6 
	
.LABEL $label$7
	$11 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $11
	
.LABEL $label$6
	*($7) = $5
	*($7 + [8]) = $6
	$11 = CALL $271(($7 + [332]), $11, [8730], $7)
	$10 = *($7 + [332])
	if ( ($10 == 0) ){ goto $label$4 }
	$9 = CALL $643($11)
	if ( ($9 == 0) ){ goto $label$4 }
	$8 = $9
	
.LABEL $label$5
	CALL $151(($7 + [216]), $3)
	$12 = *($7 + [216])
	*($7 + [52 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [48]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$8 }
	*($7 + [192]) = ($7 + [48])
	*($7 + [176]) = ($7 + [192])
	CALL $516([11500], ($7 + [176]), [60])
	
.LABEL $label$8
	$12 = *($7 + [332])
	$13 = *(((*($12 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	CALL int_32 $13((int_32 $12), (int_32 ($12 + $11)), (int_32 $8), (int_32 *(*($13) + [32])))
	$12 = [0]
	if ( ($11 == 0) ){ goto $label$9 }
	$12 = ((int_32)*(*($7 + [332])) == (int_32)[45])
	
.LABEL $label$9
	*($7 + [200]) = [0]
	*($7 + [192]) = (int_64)0
	*($7 + [184]) = [0]
	*($7 + [176]) = (int_64)0
	*($7 + [168]) = [0]
	*($7 + [160]) = (int_64)0
	CALL $382($2, $12, ($7 + [216]), ($7 + [208]), ($7 + [207]), ($7 + [206]), ($7 + [192]), ($7 + [176]), ($7 + [160]), ($7 + [156]))
	$2 = *($7 + [156])
	if ( ((int_32)$11 <= (int_32)$2) ){ goto $label$11 }
	$14 = *($7 + [176])
	$14 = ( *($7 + [180]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($7 + [160])
	$15 = ( *($7 + [164]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$16 = (($2 + (($11 - $2) << [1])) + [1])
	goto $label$10 
	
.LABEL $label$11
	$14 = *($7 + [176])
	$14 = ( *($7 + [180]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($7 + [160])
	$15 = ( *($7 + [164]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$16 = ($2 + [2])
	
.LABEL $label$10
	$14 = (($16 + $15) + $14)
	if ( ($14 <= [101]) ){ goto $label$13 }
	$14 = CALL $643($14)
	if ( ($14 == 0) ){ goto $label$4 }
	$2 = *($7 + [156])
	$15 = $14
	goto $label$12 
	
.LABEL $label$13
	$14 = [0]
	$15 = ($7 + [48])
	
.LABEL $label$12
	CALL $383($15, ($7 + [44]), ($7 + [40]), *($3 + [4]), $8, ($8 + $11), $13, $12, ($7 + [208]), *($7 + [207]), *($7 + [206]), ($7 + [192]), ($7 + [176]), ($7 + [160]), $2)
	$8 = CALL $266($1, $15, *($7 + [44]), *($7 + [40]), $3, $4)
	if ( ($14 == 0) ){ goto $label$14 }
	CALL $650($14)
	
.LABEL $label$14
	if ( (*($7 + [160]) & [1]) ){ goto $label$16 }
	if ( (*($7 + [176]) & [1]) ){ goto $label$15 }
	goto $label$3 
	
.LABEL $label$16
	CALL _ZdlPv(*(($7 + [168])))
	if ( ((*($7 + [176]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$15
	CALL _ZdlPv(*(($7 + [184])))
	if ( (*($7 + [192]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL $517()
	
.LABEL $label$3
	if ( ((*($7 + [192]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($7 + [200])))
	
.LABEL $label$1
	$3 = *($11 + [4])
	*(($11 = *($7 + [216])) + [4]) = ($3 + [-1])
	if ( $3 ){ goto $label$17 }
	CALL void $11((int_32 *(*($11) + [8])))
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$18 }
	CALL $650($9)
	
.LABEL $label$18
	if ( ($10 == 0) ){ goto $label$19 }
	CALL $650($10)
	
.LABEL $label$19
	$global$0 = ($7 + [448])
	(unreachable)
	return $8
}

void .FUNC $380 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $387 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$7 = ($global$0 - [1056])
	$global$0 = $7
	*($7 + [940]) = ($7 + [944])
	*($7 + [24]) = $6
	*($7 + [16]) = $5
	$8 = ($7 + [528])
	$9 = [0]
	$10 = [0]
	$11 = CALL $590(($7 + [944]), [100], [8730], ($7 + [16]))
	if ( ($11 <= [100]) ){ goto $label$5 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$7 }
	$11 = *([0] + [11456])
	goto $label$6 
	
.LABEL $label$7
	$11 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $11
	
.LABEL $label$6
	*($7) = $5
	*($7 + [8]) = $6
	$11 = CALL $271(($7 + [940]), $11, [8730], $7)
	$10 = *($7 + [940])
	if ( ($10 == 0) ){ goto $label$4 }
	$9 = CALL $643(($11 << [2]))
	if ( ($9 == 0) ){ goto $label$4 }
	$8 = $9
	
.LABEL $label$5
	CALL $151(($7 + [520]), $3)
	$12 = *($7 + [520])
	*($7 + [52 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($7 + [48]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$8 }
	*($7 + [488]) = ($7 + [48])
	*($7 + [472]) = ($7 + [488])
	CALL $516([11492], ($7 + [472]), [60])
	
.LABEL $label$8
	$12 = *($7 + [940])
	$13 = *(((*($12 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	CALL int_32 $13((int_32 $12), (int_32 ($12 + $11)), (int_32 $8), (int_32 *(*($13) + [48])))
	$12 = [0]
	if ( ($11 == 0) ){ goto $label$9 }
	$12 = ((int_32)*(*($7 + [940])) == (int_32)[45])
	
.LABEL $label$9
	*($7 + [496]) = [0]
	*($7 + [488]) = (int_64)0
	*($7 + [480]) = [0]
	*($7 + [472]) = (int_64)0
	*($7 + [464]) = [0]
	*($7 + [456]) = (int_64)0
	CALL $388($2, $12, ($7 + [520]), ($7 + [512]), ($7 + [508]), ($7 + [504]), ($7 + [488]), ($7 + [472]), ($7 + [456]), ($7 + [452]))
	$2 = *($7 + [452])
	if ( ((int_32)$11 <= (int_32)$2) ){ goto $label$11 }
	$14 = *($7 + [472])
	$14 = ( *($7 + [476]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($7 + [456])
	$15 = ( *($7 + [460]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$16 = (($2 + (($11 - $2) << [1])) + [1])
	goto $label$10 
	
.LABEL $label$11
	$14 = *($7 + [472])
	$14 = ( *($7 + [476]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$15 = *($7 + [456])
	$15 = ( *($7 + [460]) ? uint_32($15 >> [1]) : ($15 & [1]) )
	$16 = ($2 + [2])
	
.LABEL $label$10
	$14 = (($16 + $15) + $14)
	if ( ($14 <= [101]) ){ goto $label$13 }
	$14 = CALL $643(($14 << [2]))
	if ( ($14 == 0) ){ goto $label$4 }
	$2 = *($7 + [452])
	$15 = $14
	goto $label$12 
	
.LABEL $label$13
	$14 = [0]
	$15 = ($7 + [48])
	
.LABEL $label$12
	CALL $389($15, ($7 + [44]), ($7 + [40]), *($3 + [4]), $8, ($8 + ($11 << [2])), $13, $12, ($7 + [512]), *($7 + [508]), *($7 + [504]), ($7 + [488]), ($7 + [472]), ($7 + [456]), $2)
	$8 = CALL $280($1, $15, *($7 + [44]), *($7 + [40]), $3, $4)
	if ( ($14 == 0) ){ goto $label$14 }
	CALL $650($14)
	
.LABEL $label$14
	if ( (*($7 + [456]) & [1]) ){ goto $label$16 }
	if ( (*($7 + [472]) & [1]) ){ goto $label$15 }
	goto $label$3 
	
.LABEL $label$16
	CALL _ZdlPv(*(($7 + [464])))
	if ( ((*($7 + [472]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$15
	CALL _ZdlPv(*(($7 + [480])))
	if ( (*($7 + [488]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL $517()
	
.LABEL $label$3
	if ( ((*($7 + [488]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($7 + [496])))
	
.LABEL $label$1
	$3 = *($11 + [4])
	*(($11 = *($7 + [520])) + [4]) = ($3 + [-1])
	if ( $3 ){ goto $label$17 }
	CALL void $11((int_32 *(*($11) + [8])))
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$18 }
	CALL $650($9)
	
.LABEL $label$18
	if ( ($10 == 0) ){ goto $label$19 }
	CALL $650($10)
	
.LABEL $label$19
	$global$0 = ($7 + [1056])
	(unreachable)
	return $8
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [40]) = ($2 + $4)
	*($3 + [32]) = $2
	*(($5 = CALL _Znwj([40]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8736])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [8736])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	*($3 + [36]) = ($2 + [16])
	CALL $55(($3 + [32]), ($5 + [16]))
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$6 = ((int_64)*($5 + [8]) + (int_64)*($5))
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $101(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($1 + [24])))
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $385 (int_32 $0)
{
	CALL $515($0)
	return $0
}

int_32 .FUNC $384 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$6 = ($global$0 - [192])
	$global$0 = $6
	CALL $151(($6 + [184]), $3)
	$7 = *($6 + [184])
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11500]
	$8 = [0]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($6 + [160]) = ($6 + [16])
	*($6 + [144]) = ($6 + [160])
	CALL $516([11500], ($6 + [144]), [60])
	
.LABEL $label$1
	$9 = *(((*($7 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	$7 = ($7 & [1])
	$7 = *($5)
	if ( (( *($5 + [4]) ? uint_32($7 >> [1]) : $7 ) == 0) ){ goto $label$2 }
	$8 = ((int_32)*(( *($5 + [8]) ? ($5 + [1]) : $7 )) == (int_32)(CALL int_32 $9((int_32 [45]), (int_32 *(*($9) + [28]))) & [255]))
	
.LABEL $label$2
	*($6 + [168]) = [0]
	*($6 + [160]) = (int_64)0
	*($6 + [152]) = [0]
	*($6 + [144]) = (int_64)0
	*($6 + [136]) = [0]
	*($6 + [128]) = (int_64)0
	CALL $382($2, $8, ($6 + [184]), ($6 + [176]), ($6 + [175]), ($6 + [174]), ($6 + [160]), ($6 + [144]), ($6 + [128]), ($6 + [124]))
	$2 = *($6 + [124])
	$7 = ($2 & [1])
	$2 = *($5)
	$11 = uint_32($2 >> [1])
	$10 = *(($5 + [4]))
	$12 = ( $10 ? $11 : $7 )
	if ( ((int_32)$12 <= (int_32)$2) ){ goto $label$4 }
	$13 = *($6 + [144])
	$13 = ( *($6 + [148]) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$14 = *($6 + [128])
	$14 = ( *($6 + [132]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$12 = (($2 + (($12 - $2) << [1])) + [1])
	goto $label$3 
	
.LABEL $label$4
	$13 = *($6 + [144])
	$13 = ( *($6 + [148]) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$14 = *($6 + [128])
	$14 = ( *($6 + [132]) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$12 = ($2 + [2])
	
.LABEL $label$3
	$13 = (($12 + $14) + $13)
	if ( ($13 <= [101]) ){ goto $label$10 }
	$13 = CALL $643($13)
	if ( ($13 == 0) ){ goto $label$8 }
	$2 = *($5)
	$11 = uint_32($2 >> [1])
	$7 = ($2 & [1])
	$10 = *(($5 + [4]))
	$2 = *($6 + [124])
	$14 = $13
	goto $label$9 
	
.LABEL $label$10
	$13 = [0]
	$14 = ($6 + [16])
	
.LABEL $label$9
	$5 = ( *($5 + [8]) ? ($5 + [1]) : $7 )
	CALL $383($14, ($6 + [12]), ($6 + [8]), *($3 + [4]), $5, ($5 + ( $10 ? $11 : $7 )), $9, $8, ($6 + [176]), *($6 + [175]), *($6 + [174]), ($6 + [160]), ($6 + [144]), ($6 + [128]), $2)
	$3 = CALL $266($1, $14, *($6 + [12]), *($6 + [8]), $3, $4)
	if ( ($13 == 0) ){ goto $label$11 }
	CALL $650($13)
	
.LABEL $label$11
	if ( (*($6 + [128]) & [1]) ){ goto $label$13 }
	$5 = [1]
	if ( (*($6 + [144]) & [1]) ){ goto $label$12 }
	goto $label$7 
	
.LABEL $label$13
	CALL _ZdlPv(*(($6 + [136])))
	$5 = [1]
	if ( ((*($6 + [144]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$12
	CALL _ZdlPv(*(($6 + [152])))
	if ( (*($6 + [160]) & $5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL $517()
	
.LABEL $label$7
	if ( ((*($6 + [160]) & $5) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($6 + [168])))
	
.LABEL $label$5
	$2 = *($5 + [4])
	*(($5 = *($6 + [184])) + [4]) = ($2 + [-1])
	if ( ($2 == 0) ){ goto $label$14 }
	$global$0 = ($6 + [192])
	return $3
	
.LABEL $label$14
	CALL void $5((int_32 *(*($5) + [8])))
	$global$0 = ($6 + [192])
	(unreachable)
	return $3
}

int_32 .FUNC $72 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [8736])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $3) > (uint_32)[7]), [8736])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*(($0 + [24])) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $55(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([40]))) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [28]) = $1
	CALL $108(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = ((int_64)*($3 + [8]) + (int_64)*($3))
	*($4 + [16]) = $2
	$5 = *($3 + [32])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $101(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$4
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [108]) == (int_32)$0), [9410])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [9479])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [9532])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($3 + [104])))
	
.LABEL $label$10
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [104])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [112]))
}

void .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = ($0 + [160])
	$3 = *($0 + [40])
	$5 = *(($0 + [188]))
	$4 = *(($0 + [184]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$3) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($2), *(($0 + [168])), (int_64)7235159551874301952, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $29($2, $6)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [9052])
	
.LABEL $label$1
	$3 = *($0)
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8800])
	CALL $141($2, $7, $3, ($1 + [8]))
	$global$0 = ($1 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [8840])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$17()), [8886])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$5 = *($1)
	CALL eosio_assert([1], [8937])
	CALL eosio_assert([1], [8794])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [8794])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $527(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $527(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4060986518620078080, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$7), [9052])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $46($7, CALL $fimport$6(*($7), *($7 + [8]), (int_64)-4060986518620078080, $6))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$7), [9052])
	
.LABEL $label$2
	*(($4 + [56])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [48])
	$global$0 = $6
	$7 = CALL $527(($6 + [16]), $1)
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL $632([10945])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$8 = ($6 | [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$9 = (($1 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($6) = ($9 | [1])
	*($6 + [8]) = $8
	*($6 + [4]) = $1
	
.LABEL $label$3
	CALL memcpy($8, [10945], $1)
	
.LABEL $label$2
	*(($8 + $1)) = [0]
	CALL $142(($6 + [32]), $0, $7, $6)
	*($6 + [40]) = [0]
	$8 = *($6 + [36])
	$0 = *($6 + [32])
	*($6 + [32]) = (int_64)0
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($6 + [8]))
	
.LABEL $label$5
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$6
	CALL $529($2, $0)
	CALL $529($3, ($0 + [12]))
	CALL $529($4, ($0 + [24]))
	CALL $529($5, ($0 + [36]))
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = ($8 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($8 + [-4])))
	
.LABEL $label$9
	$8 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$7
	CALL _ZdlPv($0)
	$global$0 = ($6 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $526($6)
}

int_64 .FUNC $79 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = CALL $107($0, $1, $2)
	$3 = ($0 + [160])
	$4 = *(CALL $143($3, *($0 + [64]), [9696]) + [8])
	$1 = *($0 + [112])
	$6 = *(($0 + [188]))
	$5 = *(($0 + [184]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $29($3, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$3), [9052])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [10956])
	return ((uint_64)(int_64))($2 - $4) / (uint_64)*($8 + [8]))
}

void .FUNC $499 (int_32 $0)
{
	if ( ((*([0] + [11604]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11612]))
	
.LABEL $label$1
}

int_32 .FUNC $498 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( (*([0] + [11616]) == 0) ){ goto $label$1 }
	return [11604]
	
.LABEL $label$1
	*([0] + [11604 align=4]) = (int_64)0
	*([0] + [11612]) = [0]
	$1 = CALL $632([9288])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*([0] + [11604]) = ($1 << [1])
	$2 = [11605]
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL _Znwj($3)
	*([0] + [11604]) = ($3 | [1])
	*([0] + [11612]) = $2
	*([0] + [11608]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [9288], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	CALL $567([69], [0], [8192])
	*([0] + [11616]) = [1]
	return [11604]
	
.LABEL $label$2
	CALL $526([11604])
	return (unreachable)
}

int_32 .FUNC $259 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [336])
	$global$0 = $6
	*($6 + [208]) = (int_64)0
	*($6 + [216]) = [0]
	CALL $151(($6 + [200]), $3)
	$3 = *($6 + [200])
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($6 + [224]) = ($6 + [16])
	*($6 + [184]) = ($6 + [224])
	CALL $516([11492], ($6 + [184]), [60])
	
.LABEL $label$1
	$3 = *(((*($3 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	CALL int_32 $3((int_32 [22720]), (int_32 [22746]), (int_32 ($6 + [224])), (int_32 *(*($3) + [48])))
	$7 = *($3 + [4])
	*(($3 = *($6 + [200])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$2 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$2
	*($6 + [192]) = [0]
	*($6 + [184]) = (int_64)0
	CALL $533(($6 + [184]), [10], [0])
	$8 = (($6 + [184]) | [1])
	$9 = ( *($6 + [192]) ? $8 : (*($6 + [184]) & [1]) )
	*($6 + [200]) = $9
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [192])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$4 }
	$11 = [1]
	goto $label$3 
	
.LABEL $label$4
	$11 = [32]
	
.LABEL $label$3
	
.LOOP $label$5:
	goto $label$79 
	
.LABEL $label$83
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$38 }
	$11 = [32]
	goto $label$5 
	
.LABEL $label$82
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$7 }
	$11 = [33]
	goto $label$5 
	
.LABEL $label$81
	$3 = *($3)
	goto $label$41 
	
.LABEL $label$80
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$11 = [0]
	goto $label$5 
	
.LABEL $label$79
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$11 = [1]
	goto $label$5 
	
.LABEL $label$78
	if ( ($2 == 0) ){ goto $label$37 }
	$11 = [2]
	goto $label$5 
	
.LABEL $label$77
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$36 }
	$11 = [3]
	goto $label$5 
	
.LABEL $label$76
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$34 }
	$11 = [4]
	goto $label$5 
	
.LABEL $label$75
	if ( $7 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$74
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$35 }
	$11 = [40]
	goto $label$5 
	
.LABEL $label$73
	$2 = [0]
	if ( $7 ){ goto $label$33 }
	$11 = [26]
	goto $label$5 
	
.LABEL $label$72
	$1 = *($6 + [184])
	$1 = ( *($6 + [188]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [200]) == (int_32)($9 + $1)) ){ goto $label$12 }
	$11 = [27]
	goto $label$5 
	
.LABEL $label$71
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$11 }
	$11 = [28]
	goto $label$5 
	
.LABEL $label$70
	$1 = *($1)
	goto $label$9 
	
.LABEL $label$69
	CALL $533(($6 + [184]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$6 }
	$11 = [38]
	goto $label$5 
	
.LABEL $label$68
	$7 = ((*($6 + [184]) & [-2]) + [-1])
	$11 = [39]
	goto $label$5 
	
.LABEL $label$67
	CALL $533(($6 + [184]), $7, [0])
	$9 = ( *($10) ? $8 : (*($6 + [184]) & [1]) )
	*($6 + [200]) = ($9 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$10 }
	$11 = [36]
	goto $label$5 
	
.LABEL $label$66
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [29]
	goto $label$5 
	
.LABEL $label$65
	if ( CALL $240($1, [16], $9, ($6 + [200]), ($6 + [8]), [0], ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$30 }
	$11 = [30]
	goto $label$5 
	
.LABEL $label$64
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$8 }
	$11 = [35]
	goto $label$5 
	
.LABEL $label$63
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$39 }
	goto $label$40 
	
.LABEL $label$62
	CALL $533(($6 + [184]), (*($6 + [200]) - $9), [0])
	$9 = ( *(($6 + [192])) ? $8 : (*($6 + [184]) & [1]) )
	if ( (*([0] + [11460]) == 0) ){ goto $label$29 }
	$11 = [25]
	goto $label$5 
	
.LABEL $label$61
	$7 = *([0] + [11456])
	$11 = [7]
	goto $label$5 
	
.LABEL $label$60
	*($6) = $5
	$1 = [1]
	if ( ((int_32)CALL $232($9, $7, [8414], $6) == (int_32)[1]) ){ goto $label$27 }
	$11 = [8]
	goto $label$5 
	
.LABEL $label$59
	*($4) = [4]
	$11 = [9]
	goto $label$5 
	
.LABEL $label$58
	if ( ($3 == 0) ){ goto $label$26 }
	$11 = [10]
	goto $label$5 
	
.LABEL $label$57
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$25 }
	$11 = [11]
	goto $label$5 
	
.LABEL $label$56
	$1 = *($1)
	goto $label$24 
	
.LABEL $label$55
	$3 = [0]
	if ( $2 ){ goto $label$22 }
	$11 = [22]
	goto $label$5 
	
.LABEL $label$54
	if ( $1 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$53
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [12]
	goto $label$5 
	
.LABEL $label$52
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$23 }
	$11 = [13]
	goto $label$5 
	
.LABEL $label$51
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$21 }
	$11 = [14]
	goto $label$5 
	
.LABEL $label$50
	if ( ((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) ){ goto $label$16 }
	$11 = [15]
	goto $label$5 
	
.LABEL $label$49
	*($4) = (*($4) | [2])
	$11 = [16]
	goto $label$5 
	
.LABEL $label$48
	if ( (*($6 + [184]) & [1]) ){ goto $label$15 }
	$11 = [20]
	goto $label$5 
	
.LABEL $label$47
	if ( (*($6 + [208]) & [1]) ){ goto $label$14 }
	$11 = [19]
	goto $label$5 
	
.LABEL $label$46
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$45
	CALL _ZdlPv(*(($6 + [192])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$13 }
	$11 = [18]
	goto $label$5 
	
.LABEL $label$44
	CALL _ZdlPv(*(($6 + [216])))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$43
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$42
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	goto $label$28 
	
.LABEL $label$41
	$11 = [0]
	goto $label$5 
	
.LABEL $label$40
	$11 = [1]
	goto $label$5 
	
.LABEL $label$39
	$11 = [32]
	goto $label$5 
	
.LABEL $label$38
	$11 = [1]
	goto $label$5 
	
.LABEL $label$37
	$11 = [40]
	goto $label$5 
	
.LABEL $label$36
	$11 = [41]
	goto $label$5 
	
.LABEL $label$35
	$11 = [4]
	goto $label$5 
	
.LABEL $label$34
	$11 = [40]
	goto $label$5 
	
.LABEL $label$33
	$11 = [5]
	goto $label$5 
	
.LABEL $label$32
	$11 = [26]
	goto $label$5 
	
.LABEL $label$31
	$11 = [5]
	goto $label$5 
	
.LABEL $label$30
	$11 = [5]
	goto $label$5 
	
.LABEL $label$29
	$11 = [6]
	goto $label$5 
	
.LABEL $label$28
	$11 = [7]
	goto $label$5 
	
.LABEL $label$27
	$11 = [9]
	goto $label$5 
	
.LABEL $label$26
	$11 = [24]
	goto $label$5 
	
.LABEL $label$25
	$11 = [23]
	goto $label$5 
	
.LABEL $label$24
	$11 = [12]
	goto $label$5 
	
.LABEL $label$23
	$11 = [22]
	goto $label$5 
	
.LABEL $label$22
	$11 = [13]
	goto $label$5 
	
.LABEL $label$21
	$11 = [21]
	goto $label$5 
	
.LABEL $label$20
	$11 = [15]
	goto $label$5 
	
.LABEL $label$19
	$11 = [16]
	goto $label$5 
	
.LABEL $label$18
	$11 = [16]
	goto $label$5 
	
.LABEL $label$17
	$11 = [15]
	goto $label$5 
	
.LABEL $label$16
	$11 = [16]
	goto $label$5 
	
.LABEL $label$15
	$11 = [17]
	goto $label$5 
	
.LABEL $label$14
	$11 = [18]
	goto $label$5 
	
.LABEL $label$13
	$11 = [19]
	goto $label$5 
	
.LABEL $label$12
	$11 = [37]
	goto $label$5 
	
.LABEL $label$11
	$11 = [36]
	goto $label$5 
	
.LABEL $label$10
	$11 = [28]
	goto $label$5 
	
.LABEL $label$9
	$11 = [29]
	goto $label$5 
	
.LABEL $label$8
	$11 = [31]
	goto $label$5 
	
.LABEL $label$7
	$11 = [34]
	goto $label$5 
	
.LABEL $label$6
	$11 = [39]
	goto $label$5 
	return $11
}

int_32 .FUNC $258 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [352])
	$global$0 = $6
	CALL $253(($6 + [200]), $3, ($6 + [224]), ($6 + [220]), ($6 + [216]))
	*($6 + [192]) = [0]
	*($6 + [184]) = (int_64)0
	CALL $533(($6 + [184]), [10], [0])
	$7 = (($6 + [184]) | [1])
	$8 = ( *($6 + [192]) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [192])
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [48]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$105 
	
.LABEL $label$109
	*($10) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( ($1 == 0) ){ goto $label$48 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$108
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$5 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$107
	$3 = *($3)
	goto $label$51 
	
.LABEL $label$106
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$11 = [0]
	goto $label$3 
	
.LABEL $label$105
	$10 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $10 )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$104
	if ( ($2 == 0) ){ goto $label$47 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$103
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$46 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$102
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$101
	if ( $10 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$45 }
	$11 = [56]
	goto $label$3 
	
.LABEL $label$99
	$2 = [0]
	if ( $10 ){ goto $label$43 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$98
	$1 = *($6 + [184])
	$1 = ( *($6 + [188]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [180]) == (int_32)($8 + $1)) ){ goto $label$10 }
	$11 = [43]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$9 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($1)
	goto $label$7 
	
.LABEL $label$95
	CALL $533(($6 + [184]), ($1 << [1]), [0])
	$10 = [10]
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$4 }
	$11 = [54]
	goto $label$3 
	
.LABEL $label$94
	$10 = ((*($6 + [184]) & [-2]) + [-1])
	$11 = [55]
	goto $label$3 
	
.LABEL $label$93
	CALL $533(($6 + [184]), $10, [0])
	$8 = ( *($9) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [45]
	goto $label$3 
	
.LABEL $label$91
	if ( CALL $254($1, ($6 + [7]), ($6 + [6]), $8, ($6 + [180]), *($6 + [220]), *($6 + [216]), ($6 + [200]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$90
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$6 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$89
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$88
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$87
	$1 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [7]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [8]
	goto $label$3 
	
.LABEL $label$84
	if ( ((int_32)$8 != (int_32)*($6 + [180])) ){ goto $label$36 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$83
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($4) = [4]
	$12 = [1]
	$5 = ($8 & [1])
	$8 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [37]
	goto $label$3 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$10 = $9
	$11 = [39]
	goto $label$3 
	
.LABEL $label$79
	$8 = *($1)
	*($1) = *($10)
	*($10) = $8
	$10 = ($10 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $10) ){ goto $label$11 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$78
	$8 = *($6 + [200])
	$5 = ($8 & [1])
	$11 = [12]
	goto $label$3 
	
.LABEL $label$77
	$1 = ( *($6 + [208]) ? (($6 + [200]) | [1]) : $5 )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$76
	$5 = ($1 + ( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ))
	$8 = ($6 + [16])
	$11 = [33]
	goto $label$3 
	
.LABEL $label$75
	if ( (($7 & [1]) == 0) ){ goto $label$13 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$74
	if ( ((int_32)*($8) != (int_32)int_32(($10 << [24]) >> [24])) ){ goto $label$12 }
	$11 = [34]
	goto $label$3 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	$8 = ($8 + [4])
	if ( ($8 <= $9) ){ goto $label$32 }
	$11 = [13]
	goto $label$3 
	
.LABEL $label$72
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $10) ){ goto $label$29 }
	$11 = [31]
	goto $label$3 
	
.LABEL $label$70
	*($4) = [4]
	$11 = [14]
	goto $label$3 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$68
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$26 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$67
	$1 = *($1)
	goto $label$25 
	
.LABEL $label$66
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [17]
	goto $label$3 
	
.LABEL $label$65
	$12 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $12 )
	if ( ($2 == 0) ){ goto $label$23 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$64
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$22 }
	$11 = [19]
	goto $label$3 
	
.LABEL $label$63
	if ( ((int_32)$12 ^ (int_32)((int_32)*($1) == (int_32)[-1])) ){ goto $label$17 }
	$11 = [20]
	goto $label$3 
	
.LABEL $label$62
	*($4) = (*($4) | [2])
	$11 = [21]
	goto $label$3 
	
.LABEL $label$61
	if ( (*($6 + [184]) & [1]) ){ goto $label$16 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$60
	if ( (*($6 + [200]) & [1]) ){ goto $label$15 }
	$11 = [24]
	goto $label$3 
	
.LABEL $label$59
	$global$0 = ($6 + [352])
	return $3
	
.LABEL $label$58
	CALL _ZdlPv(*(($6 + [192])))
	if ( ((*($6 + [200]) & [1]) == 0) ){ goto $label$14 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$57
	CALL _ZdlPv(*($6 + [208]))
	$global$0 = ($6 + [352])
	return $3
	
.LABEL $label$56
	if ( (((int_32)$12 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$27 }
	$11 = [29]
	goto $label$3 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$24 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$53
	if ( $12 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [0]
	goto $label$3 
	
.LABEL $label$50
	$11 = [1]
	goto $label$3 
	
.LABEL $label$49
	$11 = [48]
	goto $label$3 
	
.LABEL $label$48
	$11 = [1]
	goto $label$3 
	
.LABEL $label$47
	$11 = [56]
	goto $label$3 
	
.LABEL $label$46
	$11 = [57]
	goto $label$3 
	
.LABEL $label$45
	$11 = [4]
	goto $label$3 
	
.LABEL $label$44
	$11 = [56]
	goto $label$3 
	
.LABEL $label$43
	$11 = [5]
	goto $label$3 
	
.LABEL $label$42
	$11 = [42]
	goto $label$3 
	
.LABEL $label$41
	$11 = [5]
	goto $label$3 
	
.LABEL $label$40
	$11 = [5]
	goto $label$3 
	
.LABEL $label$39
	$11 = [8]
	goto $label$3 
	
.LABEL $label$38
	$11 = [8]
	goto $label$3 
	
.LABEL $label$37
	$11 = [8]
	goto $label$3 
	
.LABEL $label$36
	$11 = [9]
	goto $label$3 
	
.LABEL $label$35
	$11 = [14]
	goto $label$3 
	
.LABEL $label$34
	$11 = [12]
	goto $label$3 
	
.LABEL $label$33
	$11 = [12]
	goto $label$3 
	
.LABEL $label$32
	$11 = [33]
	goto $label$3 
	
.LABEL $label$31
	$11 = [13]
	goto $label$3 
	
.LABEL $label$30
	$11 = [14]
	goto $label$3 
	
.LABEL $label$29
	$11 = [14]
	goto $label$3 
	
.LABEL $label$28
	$11 = [29]
	goto $label$3 
	
.LABEL $label$27
	$11 = [15]
	goto $label$3 
	
.LABEL $label$26
	$11 = [28]
	goto $label$3 
	
.LABEL $label$25
	$11 = [17]
	goto $label$3 
	
.LABEL $label$24
	$11 = [18]
	goto $label$3 
	
.LABEL $label$23
	$11 = [27]
	goto $label$3 
	
.LABEL $label$22
	$11 = [26]
	goto $label$3 
	
.LABEL $label$21
	$11 = [20]
	goto $label$3 
	
.LABEL $label$20
	$11 = [21]
	goto $label$3 
	
.LABEL $label$19
	$11 = [21]
	goto $label$3 
	
.LABEL $label$18
	$11 = [20]
	goto $label$3 
	
.LABEL $label$17
	$11 = [21]
	goto $label$3 
	
.LABEL $label$16
	$11 = [22]
	goto $label$3 
	
.LABEL $label$15
	$11 = [23]
	goto $label$3 
	
.LABEL $label$14
	$11 = [24]
	goto $label$3 
	
.LABEL $label$13
	$11 = [34]
	goto $label$3 
	
.LABEL $label$12
	$11 = [36]
	goto $label$3 
	
.LABEL $label$11
	$11 = [39]
	goto $label$3 
	
.LABEL $label$10
	$11 = [53]
	goto $label$3 
	
.LABEL $label$9
	$11 = [52]
	goto $label$3 
	
.LABEL $label$8
	$11 = [44]
	goto $label$3 
	
.LABEL $label$7
	$11 = [45]
	goto $label$3 
	
.LABEL $label$6
	$11 = [47]
	goto $label$3 
	
.LABEL $label$5
	$11 = [50]
	goto $label$3 
	
.LABEL $label$4
	$11 = [55]
	goto $label$3 
	$11
	return (unreachable)
}

void .FUNC $312 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = [1]
	$6 = *($1)
	if ( $6 ){ goto $label$2 }
	$7 = [1]
	goto $label$1 
	
.LABEL $label$2
	$7 = [22]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$61 
	
.LABEL $label$64
	*(($6 + [12])) = ($5 + [4])
	$5 = [1]
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$29 }
	$7 = [22]
	goto $label$3 
	
.LABEL $label$63
	$5 = *($6 + [12])
	if ( ((int_32)$5 == (int_32)*($6 + [16])) ){ goto $label$4 }
	$7 = [23]
	goto $label$3 
	
.LABEL $label$62
	if ( ((int_32)*($5) == (int_32)[-1]) ){ goto $label$32 }
	$7 = [0]
	goto $label$3 
	
.LABEL $label$61
	$5 = (*($1) == 0)
	goto $label$34 
	
.LABEL $label$60
	if ( ((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) != (int_32)[-1]) ){ goto $label$33 }
	$7 = [24]
	goto $label$3 
	
.LABEL $label$59
	*($1) = [0]
	$5 = [1]
	$7 = [1]
	goto $label$3 
	
.LABEL $label$58
	if ( ($2 == 0) ){ goto $label$28 }
	$7 = [2]
	goto $label$3 
	
.LABEL $label$57
	$6 = *($2 + [12])
	if ( ((int_32)$6 == (int_32)*($2 + [16])) ){ goto $label$27 }
	$7 = [3]
	goto $label$3 
	
.LABEL $label$56
	if ( ((int_32)*($6) == (int_32)[-1]) ){ goto $label$25 }
	$7 = [4]
	goto $label$3 
	
.LABEL $label$55
	if ( $5 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$54
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$26 }
	$7 = [28]
	goto $label$3 
	
.LABEL $label$53
	$2 = [0]
	if ( $5 ){ goto $label$22 }
	$7 = [18]
	goto $label$3 
	
.LABEL $label$52
	$6 = *($1)
	$5 = *($6 + [12])
	if ( ((int_32)$5 == (int_32)*($6 + [16])) ){ goto $label$6 }
	$7 = [19]
	goto $label$3 
	
.LABEL $label$51
	if ( CALL int_32 $4((int_32 [1]), (int_32 *($5)), (int_32 *(*($4) + [12]))) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$50
	if ( (CALL int_32 $4((int_32 [1]), (int_32 CALL int_32 $6((int_32 *(*($6) + [36])))), (int_32 *(*($4) + [12]))) == 0) ){ goto $label$21 }
	$7 = [20]
	goto $label$3 
	
.LABEL $label$49
	$6 = *($1)
	$5 = *($6 + [12])
	if ( ((int_32)$5 != (int_32)*($6 + [16])) ){ goto $label$5 }
	$7 = [26]
	goto $label$3 
	
.LABEL $label$48
	CALL int_32 $6((int_32 *(*($6) + [40])))
	$5 = [1]
	$6 = *($1)
	if ( $6 ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$47
	$5 = [1]
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$18 }
	$7 = [6]
	goto $label$3 
	
.LABEL $label$46
	$4 = *($6 + [12])
	if ( ((int_32)$4 == (int_32)*($6 + [16])) ){ goto $label$17 }
	$7 = [7]
	goto $label$3 
	
.LABEL $label$45
	if ( ((int_32)*($4) == (int_32)[-1]) ){ goto $label$15 }
	$7 = [8]
	goto $label$3 
	
.LABEL $label$44
	$5 = (*($1) == 0)
	$7 = [9]
	goto $label$3 
	
.LABEL $label$43
	if ( ($2 == 0) ){ goto $label$14 }
	$7 = [10]
	goto $label$3 
	
.LABEL $label$42
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$12 }
	$7 = [11]
	goto $label$3 
	
.LABEL $label$41
	if ( (((int_32)$5 ^ (int_32)((int_32)*($1) == (int_32)[-1])) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$40
	if ( ((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) != (int_32)[-1]) ){ goto $label$16 }
	$7 = [16]
	goto $label$3 
	
.LABEL $label$39
	*($1) = [0]
	if ( $2 ){ goto $label$13 }
	$7 = [15]
	goto $label$3 
	
.LABEL $label$38
	if ( ($5 == 0) ){ goto $label$11 }
	$7 = [12]
	goto $label$3 
	
.LABEL $label$37
	*($3) = (*($3) | [2])
	$7 = [13]
	goto $label$3 
	
.LABEL $label$36
	return 
	
.LABEL $label$35
	if ( (((int_32)$5 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$34
	$7 = [1]
	goto $label$3 
	
.LABEL $label$33
	$7 = [0]
	goto $label$3 
	
.LABEL $label$32
	$7 = [24]
	goto $label$3 
	
.LABEL $label$31
	$7 = [1]
	goto $label$3 
	
.LABEL $label$30
	$7 = [22]
	goto $label$3 
	
.LABEL $label$29
	$7 = [1]
	goto $label$3 
	
.LABEL $label$28
	$7 = [28]
	goto $label$3 
	
.LABEL $label$27
	$7 = [29]
	goto $label$3 
	
.LABEL $label$26
	$7 = [4]
	goto $label$3 
	
.LABEL $label$25
	$7 = [28]
	goto $label$3 
	
.LABEL $label$24
	$7 = [18]
	goto $label$3 
	
.LABEL $label$23
	$7 = [5]
	goto $label$3 
	
.LABEL $label$22
	$7 = [5]
	goto $label$3 
	
.LABEL $label$21
	$7 = [5]
	goto $label$3 
	
.LABEL $label$20
	$7 = [20]
	goto $label$3 
	
.LABEL $label$19
	$7 = [5]
	goto $label$3 
	
.LABEL $label$18
	$7 = [9]
	goto $label$3 
	
.LABEL $label$17
	$7 = [17]
	goto $label$3 
	
.LABEL $label$16
	$7 = [8]
	goto $label$3 
	
.LABEL $label$15
	$7 = [16]
	goto $label$3 
	
.LABEL $label$14
	$7 = [15]
	goto $label$3 
	
.LABEL $label$13
	$7 = [10]
	goto $label$3 
	
.LABEL $label$12
	$7 = [14]
	goto $label$3 
	
.LABEL $label$11
	$7 = [13]
	goto $label$3 
	
.LABEL $label$10
	$7 = [13]
	goto $label$3 
	
.LABEL $label$9
	$7 = [12]
	goto $label$3 
	
.LABEL $label$8
	$7 = [13]
	goto $label$3 
	
.LABEL $label$7
	$7 = [12]
	goto $label$3 
	
.LABEL $label$6
	$7 = [27]
	goto $label$3 
	
.LABEL $label$5
	$7 = [21]
	goto $label$3 
	
.LABEL $label$4
	$7 = [25]
	goto $label$3 
	$7
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = [1]
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$9 }
	$7 = *($6 + [12])
	if ( ((int_32)$7 == (int_32)*($6 + [16])) ){ goto $label$12 }
	if ( ((int_32)*($7) == (int_32)[-1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) != (int_32)[-1]) ){ goto $label$10 }
	
.LABEL $label$11
	*($1) = [0]
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$5 = (*($1) == 0)
	
.LABEL $label$9
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$6 = *($2 + [12])
	if ( ((int_32)$6 == (int_32)*($2 + [16])) ){ goto $label$6 }
	$6 = ((int_32)*($6) == (int_32)[-1])
	if ( ((int_32)$5 ^ (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$7
	$6 = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])
	if ( (((int_32)$5 ^ (int_32)$6) == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$6 = ( [0] ? $2 : $6 )
	
.LABEL $label$4
	$2 = *($1)
	$5 = *($2 + [12])
	if ( ((int_32)$5 == (int_32)*($2 + [16])) ){ goto $label$2 }
	$2 = *($5)
	goto $label$1 
	
.LABEL $label$3
	*($3) = (*($3) | [6])
	return 
	
.LABEL $label$2
	$2 = CALL int_32 $2((int_32 *(*($2) + [36])))
	
.LABEL $label$1
	if ( ((int_32)CALL int_32 $4((int_32 $2), (int_32 [0]), (int_32 *(*($4) + [52]))) != (int_32)[37]) ){ goto $label$24 }
	$2 = *($1)
	$5 = *($2 + [12])
	if ( ((int_32)$5 == (int_32)*($2 + [16])) ){ goto $label$23 }
	*(($2 + [12])) = ($5 + [4])
	$5 = *($2 + [12])
	if ( ((int_32)$5 != (int_32)*($2 + [16])) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	*($3) = (*($3) | [4])
	return 
	
.LABEL $label$23
	CALL int_32 $2((int_32 *(*($2) + [40])))
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$19 }
	$5 = *($2 + [12])
	if ( ((int_32)$5 == (int_32)*($2 + [16])) ){ goto $label$21 }
	
.LABEL $label$22
	if ( ((int_32)*($5) == (int_32)[-1]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$18 }
	
.LABEL $label$20
	*($1) = [0]
	
.LABEL $label$19
	$2 = [1]
	if ( $6 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$2 = (*($1) == 0)
	if ( ($6 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$1 = *($6 + [12])
	if ( ((int_32)$1 == (int_32)*($6 + [16])) ){ goto $label$15 }
	if ( (((int_32)$2 ^ (int_32)((int_32)*($1) == (int_32)[-1])) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	if ( ($2 == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$2 ^ (int_32)((int_32)CALL int_32 $6((int_32 *(*($6) + [36]))) == (int_32)[-1])) ){ goto $label$13 }
	
.LABEL $label$14
	*($3) = (*($3) | [2])
	
.LABEL $label$13
}

int_32 .FUNC $314 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

void .FUNC $315 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $316 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL eosio_assert([0], [8244])
	return (unreachable)
}

int_32 .FUNC $317 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [8])
	if ( (*([0] + [11460]) == 0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*([0] + [11456])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $569(*(($0 + [8])))
	
.LABEL $label$1
	CALL $515($0)
	return $0
}

int_32 .FUNC $251 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $252($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $250 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [336])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $239(($6 + [208]), $3, ($6 + [224]), ($6 + [332]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$10 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $10
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$11 = ($6 + [200])
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [45]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$104 
	
.LABEL $label$108
	*($7) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( ($1 == 0) ){ goto $label$50 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$107
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$9 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$106
	$3 = *($3)
	goto $label$53 
	
.LABEL $label$105
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$12 = [0]
	goto $label$7 
	
.LABEL $label$104
	$7 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $7 )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$103
	if ( ($2 == 0) ){ goto $label$49 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$102
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$48 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$101
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [4]
	goto $label$7 
	
.LABEL $label$100
	if ( $7 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$47 }
	$12 = [53]
	goto $label$7 
	
.LABEL $label$98
	$2 = [0]
	if ( $7 ){ goto $label$45 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$97
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($10 + $1)) ){ goto $label$14 }
	$12 = [40]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$13 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($1)
	goto $label$11 
	
.LABEL $label$94
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [51]
	goto $label$7 
	
.LABEL $label$93
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [52]
	goto $label$7 
	
.LABEL $label$92
	CALL $533(($6 + [192]), $7, [0])
	$10 = ( *($11) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($10 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [42]
	goto $label$7 
	
.LABEL $label$90
	if ( CALL $240($1, $8, $10, ($6 + [188]), ($6 + [8]), *($6 + [332]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$89
	$7 = ($3 + [12])
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$10 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$88
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$7 = [1]
	if ( $1 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$87
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [6]
	goto $label$7 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [7]
	goto $label$7 
	
.LABEL $label$84
	*($5) = CALL $222($10, *($6 + [188]), $4, $8)
	$11 = ($10 & [1])
	$10 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ) == 0) ){ goto $label$39 }
	$12 = [8]
	goto $label$7 
	
.LABEL $label$83
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [34]
	goto $label$7 
	
.LABEL $label$82
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$81
	$1 = ($6 + [16])
	$7 = $9
	$12 = [36]
	goto $label$7 
	
.LABEL $label$80
	$10 = *($1)
	*($1) = *($7)
	*($7) = $10
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$15 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$79
	$10 = *($6 + [208])
	$11 = ($10 & [1])
	$12 = [9]
	goto $label$7 
	
.LABEL $label$78
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $11 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$77
	$11 = ($1 + ( *($6 + [212]) ? uint_32($10 >> [1]) : $11 ))
	$10 = ($6 + [16])
	$12 = [30]
	goto $label$7 
	
.LABEL $label$76
	if ( (($8 & [1]) == 0) ){ goto $label$17 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$75
	if ( ((int_32)*($10) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$16 }
	$12 = [31]
	goto $label$7 
	
.LABEL $label$74
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($11 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$10 = ($10 + [4])
	if ( ($10 <= $9) ){ goto $label$36 }
	$12 = [10]
	goto $label$7 
	
.LABEL $label$73
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$72
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [28]
	goto $label$7 
	
.LABEL $label$71
	*($4) = [4]
	$12 = [11]
	goto $label$7 
	
.LABEL $label$70
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$69
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$68
	$1 = *($1)
	goto $label$29 
	
.LABEL $label$67
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [14]
	goto $label$7 
	
.LABEL $label$66
	$1 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $1 )
	if ( ($2 == 0) ){ goto $label$27 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$65
	$7 = *($2 + [12])
	if ( ((int_32)$7 == (int_32)*($2 + [16])) ){ goto $label$26 }
	$12 = [16]
	goto $label$7 
	
.LABEL $label$64
	if ( (((int_32)$1 ^ (int_32)((int_32)*($7) == (int_32)[-1])) == 0) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$63
	if ( (((int_32)$1 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$62
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$61
	$1 = [1]
	$3 = [0]
	if ( $2 ){ goto $label$28 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$60
	if ( ($1 == 0) ){ goto $label$25 }
	$12 = [17]
	goto $label$7 
	
.LABEL $label$59
	*($4) = (*($4) | [2])
	$12 = [18]
	goto $label$7 
	
.LABEL $label$58
	if ( (*($6 + [192]) & [1]) ){ goto $label$20 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( (*($6 + [208]) & [1]) ){ goto $label$19 }
	$12 = [21]
	goto $label$7 
	
.LABEL $label$56
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$55
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$18 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$54
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [336])
	return $3
	
.LABEL $label$53
	$12 = [0]
	goto $label$7 
	
.LABEL $label$52
	$12 = [1]
	goto $label$7 
	
.LABEL $label$51
	$12 = [45]
	goto $label$7 
	
.LABEL $label$50
	$12 = [1]
	goto $label$7 
	
.LABEL $label$49
	$12 = [53]
	goto $label$7 
	
.LABEL $label$48
	$12 = [54]
	goto $label$7 
	
.LABEL $label$47
	$12 = [4]
	goto $label$7 
	
.LABEL $label$46
	$12 = [53]
	goto $label$7 
	
.LABEL $label$45
	$12 = [5]
	goto $label$7 
	
.LABEL $label$44
	$12 = [39]
	goto $label$7 
	
.LABEL $label$43
	$12 = [5]
	goto $label$7 
	
.LABEL $label$42
	$12 = [5]
	goto $label$7 
	
.LABEL $label$41
	$12 = [7]
	goto $label$7 
	
.LABEL $label$40
	$12 = [7]
	goto $label$7 
	
.LABEL $label$39
	$12 = [11]
	goto $label$7 
	
.LABEL $label$38
	$12 = [9]
	goto $label$7 
	
.LABEL $label$37
	$12 = [9]
	goto $label$7 
	
.LABEL $label$36
	$12 = [30]
	goto $label$7 
	
.LABEL $label$35
	$12 = [10]
	goto $label$7 
	
.LABEL $label$34
	$12 = [11]
	goto $label$7 
	
.LABEL $label$33
	$12 = [11]
	goto $label$7 
	
.LABEL $label$32
	$12 = [26]
	goto $label$7 
	
.LABEL $label$31
	$12 = [12]
	goto $label$7 
	
.LABEL $label$30
	$12 = [25]
	goto $label$7 
	
.LABEL $label$29
	$12 = [14]
	goto $label$7 
	
.LABEL $label$28
	$12 = [15]
	goto $label$7 
	
.LABEL $label$27
	$12 = [24]
	goto $label$7 
	
.LABEL $label$26
	$12 = [23]
	goto $label$7 
	
.LABEL $label$25
	$12 = [18]
	goto $label$7 
	
.LABEL $label$24
	$12 = [18]
	goto $label$7 
	
.LABEL $label$23
	$12 = [17]
	goto $label$7 
	
.LABEL $label$22
	$12 = [18]
	goto $label$7 
	
.LABEL $label$21
	$12 = [17]
	goto $label$7 
	
.LABEL $label$20
	$12 = [19]
	goto $label$7 
	
.LABEL $label$19
	$12 = [20]
	goto $label$7 
	
.LABEL $label$18
	$12 = [21]
	goto $label$7 
	
.LABEL $label$17
	$12 = [31]
	goto $label$7 
	
.LABEL $label$16
	$12 = [33]
	goto $label$7 
	
.LABEL $label$15
	$12 = [36]
	goto $label$7 
	
.LABEL $label$14
	$12 = [50]
	goto $label$7 
	
.LABEL $label$13
	$12 = [49]
	goto $label$7 
	
.LABEL $label$12
	$12 = [41]
	goto $label$7 
	
.LABEL $label$11
	$12 = [42]
	goto $label$7 
	
.LABEL $label$10
	$12 = [44]
	goto $label$7 
	
.LABEL $label$9
	$12 = [47]
	goto $label$7 
	
.LABEL $label$8
	$12 = [52]
	goto $label$7 
	return $12
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL $151(($5 + [8]), $1)
	$1 = *($5 + [8])
	$6 = (CASTING uint_64)(uint_32 [59])
	*($5 + [20 align=4]) = $6
	*($5 + [16]) = [11492]
	if ( ((int_32)*([0] + [11492]) == (int_32)[-1]) ){ goto $label$1 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11492], ($5 + [32]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11496]) << [2])) + [-4]))
	CALL int_32 $1((int_32 [22720]), (int_32 [22752]), (int_32 $2), (int_32 *(*($1) + [48])))
	$2 = *($5 + [8])
	*($5 + [20 align=4]) = $6
	*($5 + [16]) = [11548]
	if ( ((int_32)*([0] + [11548]) == (int_32)[-1]) ){ goto $label$2 }
	*($5 + [40]) = ($5 + [16])
	*($5 + [32]) = ($5 + [40])
	CALL $516([11548], ($5 + [32]), [60])
	
.LABEL $label$2
	$2 = *(((*($2 + [16]) + (*([0] + [11552]) << [2])) + [-4]))
	*($3) = CALL int_32 $2((int_32 *(*($2) + [12])))
	*($4) = CALL int_32 $2((int_32 *(*($2) + [16])))
	CALL void $0((int_32 $2), (int_32 *(*($2) + [20])))
	$0 = *($2 + [4])
	*(($2 = *($5 + [8])) + [4]) = ($0 + [-1])
	if ( ($0 == 0) ){ goto $label$3 }
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$3
	CALL void $2((int_32 *(*($2) + [8])))
	$global$0 = ($5 + [48])
}

int_32 .FUNC $252 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$6 = ($global$0 - [352])
	$global$0 = $6
	CALL $253(($6 + [200]), $3, ($6 + [224]), ($6 + [220]), ($6 + [216]))
	*($6 + [192]) = [0]
	*($6 + [184]) = (int_64)0
	CALL $533(($6 + [184]), [10], [0])
	$7 = (($6 + [184]) | [1])
	$8 = ( *($6 + [192]) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [192])
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [48]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$105 
	
.LABEL $label$109
	*($10) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( ($1 == 0) ){ goto $label$48 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$108
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$5 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$107
	$3 = *($3)
	goto $label$51 
	
.LABEL $label$106
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$11 = [0]
	goto $label$3 
	
.LABEL $label$105
	$10 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $10 )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$104
	if ( ($2 == 0) ){ goto $label$47 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$103
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$46 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$102
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$101
	if ( $10 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$45 }
	$11 = [56]
	goto $label$3 
	
.LABEL $label$99
	$2 = [0]
	if ( $10 ){ goto $label$43 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$98
	$1 = *($6 + [184])
	$1 = ( *($6 + [188]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [180]) == (int_32)($8 + $1)) ){ goto $label$10 }
	$11 = [43]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$9 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($1)
	goto $label$7 
	
.LABEL $label$95
	CALL $533(($6 + [184]), ($1 << [1]), [0])
	$10 = [10]
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$4 }
	$11 = [54]
	goto $label$3 
	
.LABEL $label$94
	$10 = ((*($6 + [184]) & [-2]) + [-1])
	$11 = [55]
	goto $label$3 
	
.LABEL $label$93
	CALL $533(($6 + [184]), $10, [0])
	$8 = ( *($9) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [45]
	goto $label$3 
	
.LABEL $label$91
	if ( CALL $254($1, ($6 + [7]), ($6 + [6]), $8, ($6 + [180]), *($6 + [220]), *($6 + [216]), ($6 + [200]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$90
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$6 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$89
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$88
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$87
	$1 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [7]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [8]
	goto $label$3 
	
.LABEL $label$84
	if ( ((int_32)$8 != (int_32)*($6 + [180])) ){ goto $label$36 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$83
	$12 = [0]
	*($5) = [0]
	*($4) = [4]
	$13 = [1]
	$5 = ($8 & [1])
	$8 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [37]
	goto $label$3 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$10 = $9
	$11 = [39]
	goto $label$3 
	
.LABEL $label$79
	$8 = *($1)
	*($1) = *($10)
	*($10) = $8
	$10 = ($10 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $10) ){ goto $label$11 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$78
	$8 = *($6 + [200])
	$5 = ($8 & [1])
	$11 = [12]
	goto $label$3 
	
.LABEL $label$77
	$1 = ( *($6 + [208]) ? (($6 + [200]) | [1]) : $5 )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$76
	$5 = ($1 + ( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ))
	$8 = ($6 + [16])
	$11 = [33]
	goto $label$3 
	
.LABEL $label$75
	if ( (($7 & [1]) == 0) ){ goto $label$13 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$74
	if ( ((int_32)*($8) != (int_32)int_32(($10 << [24]) >> [24])) ){ goto $label$12 }
	$11 = [34]
	goto $label$3 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	$8 = ($8 + [4])
	if ( ($8 <= $9) ){ goto $label$32 }
	$11 = [13]
	goto $label$3 
	
.LABEL $label$72
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $10) ){ goto $label$29 }
	$11 = [31]
	goto $label$3 
	
.LABEL $label$70
	*($4) = [4]
	$11 = [14]
	goto $label$3 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$68
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$25 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$67
	$1 = *($1)
	goto $label$24 
	
.LABEL $label$66
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [17]
	goto $label$3 
	
.LABEL $label$65
	$13 = ((int_32)$1 == (int_32)[-1])
	$12 = ( [0] ? $3 : $13 )
	$11 = [18]
	goto $label$3 
	
.LABEL $label$64
	if ( ($2 == 0) ){ goto $label$23 }
	$11 = [19]
	goto $label$3 
	
.LABEL $label$63
	$3 = *($2 + [12])
	if ( ((int_32)$3 == (int_32)*($2 + [16])) ){ goto $label$22 }
	$11 = [20]
	goto $label$3 
	
.LABEL $label$62
	if ( ((int_32)$13 ^ (int_32)((int_32)*($3) == (int_32)[-1])) ){ goto $label$17 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$61
	*($4) = (*($4) | [2])
	$11 = [22]
	goto $label$3 
	
.LABEL $label$60
	if ( (*($6 + [184]) & [1]) ){ goto $label$16 }
	$11 = [26]
	goto $label$3 
	
.LABEL $label$59
	if ( (*($6 + [200]) & [1]) ){ goto $label$15 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$58
	$global$0 = ($6 + [352])
	return $12
	
.LABEL $label$57
	CALL _ZdlPv(*(($6 + [192])))
	if ( ((*($6 + [200]) & [1]) == 0) ){ goto $label$14 }
	$11 = [24]
	goto $label$3 
	
.LABEL $label$56
	CALL _ZdlPv(*($6 + [208]))
	$global$0 = ($6 + [352])
	return $12
	
.LABEL $label$55
	if ( $13 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$54
	if ( (((int_32)$13 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$53
	*($4) = [4]
	if ( $3 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [0]
	goto $label$3 
	
.LABEL $label$50
	$11 = [1]
	goto $label$3 
	
.LABEL $label$49
	$11 = [48]
	goto $label$3 
	
.LABEL $label$48
	$11 = [1]
	goto $label$3 
	
.LABEL $label$47
	$11 = [56]
	goto $label$3 
	
.LABEL $label$46
	$11 = [57]
	goto $label$3 
	
.LABEL $label$45
	$11 = [4]
	goto $label$3 
	
.LABEL $label$44
	$11 = [56]
	goto $label$3 
	
.LABEL $label$43
	$11 = [5]
	goto $label$3 
	
.LABEL $label$42
	$11 = [42]
	goto $label$3 
	
.LABEL $label$41
	$11 = [5]
	goto $label$3 
	
.LABEL $label$40
	$11 = [5]
	goto $label$3 
	
.LABEL $label$39
	$11 = [8]
	goto $label$3 
	
.LABEL $label$38
	$11 = [8]
	goto $label$3 
	
.LABEL $label$37
	$11 = [8]
	goto $label$3 
	
.LABEL $label$36
	$11 = [9]
	goto $label$3 
	
.LABEL $label$35
	$11 = [14]
	goto $label$3 
	
.LABEL $label$34
	$11 = [12]
	goto $label$3 
	
.LABEL $label$33
	$11 = [12]
	goto $label$3 
	
.LABEL $label$32
	$11 = [33]
	goto $label$3 
	
.LABEL $label$31
	$11 = [13]
	goto $label$3 
	
.LABEL $label$30
	$11 = [14]
	goto $label$3 
	
.LABEL $label$29
	$11 = [14]
	goto $label$3 
	
.LABEL $label$28
	$11 = [18]
	goto $label$3 
	
.LABEL $label$27
	$11 = [18]
	goto $label$3 
	
.LABEL $label$26
	$11 = [15]
	goto $label$3 
	
.LABEL $label$25
	$11 = [29]
	goto $label$3 
	
.LABEL $label$24
	$11 = [17]
	goto $label$3 
	
.LABEL $label$23
	$11 = [28]
	goto $label$3 
	
.LABEL $label$22
	$11 = [27]
	goto $label$3 
	
.LABEL $label$21
	$11 = [21]
	goto $label$3 
	
.LABEL $label$20
	$11 = [22]
	goto $label$3 
	
.LABEL $label$19
	$11 = [22]
	goto $label$3 
	
.LABEL $label$18
	$11 = [21]
	goto $label$3 
	
.LABEL $label$17
	$11 = [22]
	goto $label$3 
	
.LABEL $label$16
	$11 = [23]
	goto $label$3 
	
.LABEL $label$15
	$11 = [24]
	goto $label$3 
	
.LABEL $label$14
	$11 = [25]
	goto $label$3 
	
.LABEL $label$13
	$11 = [34]
	goto $label$3 
	
.LABEL $label$12
	$11 = [36]
	goto $label$3 
	
.LABEL $label$11
	$11 = [39]
	goto $label$3 
	
.LABEL $label$10
	$11 = [53]
	goto $label$3 
	
.LABEL $label$9
	$11 = [52]
	goto $label$3 
	
.LABEL $label$8
	$11 = [44]
	goto $label$3 
	
.LABEL $label$7
	$11 = [45]
	goto $label$3 
	
.LABEL $label$6
	$11 = [47]
	goto $label$3 
	
.LABEL $label$5
	$11 = [50]
	goto $label$3 
	
.LABEL $label$4
	$11 = [55]
	goto $label$3 
	$11
	return (unreachable)
}

int_32 .FUNC $255 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $256($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $254 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11)
{
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$7 }
	if ( (*($1) == 0) ){ goto $label$6 }
	$0 = [0]
	*($1) = [0]
	$11 = *($4)
	*($4) = ($11 + [1])
	*($11) = [46]
	$11 = *($7)
	if ( (( *($7 + [4]) ? uint_32($11 >> [1]) : ($11 & [1]) ) == 0) ){ goto $label$1 }
	$11 = *($9)
	if ( ((int_32)($11 - $8) > (int_32)[159]) ){ goto $label$1 }
	*($9) = ($11 + [4])
	*($11) = *($10)
	return [0]
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$8 }
	$5 = *($7)
	if ( (( *($7 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$8 }
	if ( (*($1) == 0) ){ goto $label$4 }
	$0 = [0]
	$11 = *($9)
	if ( ((int_32)($11 - $8) > (int_32)[159]) ){ goto $label$1 }
	*($11) = *($10)
	*($9) = ($11 + [4])
	*($10) = [0]
	return [0]
	
.LABEL $label$8
	$5 = $11
	if ( ((int_32)*($11) == (int_32)$0) ){ goto $label$2 }
	if ( ((int_32)*($11 + [4]) != (int_32)$0) ){ goto $label$5 }
	$5 = ($11 + [4])
	goto $label$2 
	
.LABEL $label$6
	return [-1]
	
.LABEL $label$5
	if ( ((int_32)*($11 + [8]) != (int_32)$0) ){ goto $label$3 }
	$5 = ($11 + [8])
	goto $label$2 
	
.LABEL $label$4
	return [-1]
	
.LABEL $label$3
	if ( ((int_32)*($11 + [12]) != (int_32)$0) ){ goto $label$9 }
	$5 = ($11 + [12])
	goto $label$2 
	
.LABEL $label$9
	if ( ((int_32)*($11 + [16]) != (int_32)$0) ){ goto $label$10 }
	$5 = ($11 + [16])
	goto $label$2 
	
.LABEL $label$10
	if ( ((int_32)*($11 + [20]) != (int_32)$0) ){ goto $label$11 }
	$5 = ($11 + [20])
	goto $label$2 
	
.LABEL $label$11
	if ( ((int_32)*($11 + [24]) != (int_32)$0) ){ goto $label$12 }
	$5 = ($11 + [24])
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_32)*($11 + [28]) != (int_32)$0) ){ goto $label$13 }
	$5 = ($11 + [28])
	goto $label$2 
	
.LABEL $label$13
	if ( ((int_32)*($11 + [32]) != (int_32)$0) ){ goto $label$14 }
	$5 = ($11 + [32])
	goto $label$2 
	
.LABEL $label$14
	if ( ((int_32)*($11 + [36]) != (int_32)$0) ){ goto $label$15 }
	$5 = ($11 + [36])
	goto $label$2 
	
.LABEL $label$15
	if ( ((int_32)*($11 + [40]) != (int_32)$0) ){ goto $label$16 }
	$5 = ($11 + [40])
	goto $label$2 
	
.LABEL $label$16
	if ( ((int_32)*($11 + [44]) != (int_32)$0) ){ goto $label$17 }
	$5 = ($11 + [44])
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)*($11 + [48]) != (int_32)$0) ){ goto $label$18 }
	$5 = ($11 + [48])
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)*($11 + [52]) != (int_32)$0) ){ goto $label$19 }
	$5 = ($11 + [52])
	goto $label$2 
	
.LABEL $label$19
	if ( ((int_32)*($11 + [56]) != (int_32)$0) ){ goto $label$20 }
	$5 = ($11 + [56])
	goto $label$2 
	
.LABEL $label$20
	if ( ((int_32)*($11 + [60]) != (int_32)$0) ){ goto $label$21 }
	$5 = ($11 + [60])
	goto $label$2 
	
.LABEL $label$21
	if ( ((int_32)*($11 + [64]) != (int_32)$0) ){ goto $label$22 }
	$5 = ($11 + [64])
	goto $label$2 
	
.LABEL $label$22
	if ( ((int_32)*($11 + [68]) != (int_32)$0) ){ goto $label$23 }
	$5 = ($11 + [68])
	goto $label$2 
	
.LABEL $label$23
	if ( ((int_32)*($11 + [72]) != (int_32)$0) ){ goto $label$24 }
	$5 = ($11 + [72])
	goto $label$2 
	
.LABEL $label$24
	if ( ((int_32)*($11 + [76]) != (int_32)$0) ){ goto $label$25 }
	$5 = ($11 + [76])
	goto $label$2 
	
.LABEL $label$25
	if ( ((int_32)*($11 + [80]) != (int_32)$0) ){ goto $label$26 }
	$5 = ($11 + [80])
	goto $label$2 
	
.LABEL $label$26
	if ( ((int_32)*($11 + [84]) != (int_32)$0) ){ goto $label$27 }
	$5 = ($11 + [84])
	goto $label$2 
	
.LABEL $label$27
	if ( ((int_32)*($11 + [88]) != (int_32)$0) ){ goto $label$28 }
	$5 = ($11 + [88])
	goto $label$2 
	
.LABEL $label$28
	if ( ((int_32)*($11 + [92]) != (int_32)$0) ){ goto $label$29 }
	$5 = ($11 + [92])
	goto $label$2 
	
.LABEL $label$29
	if ( ((int_32)*($11 + [96]) != (int_32)$0) ){ goto $label$30 }
	$5 = ($11 + [96])
	goto $label$2 
	
.LABEL $label$30
	if ( ((int_32)*($11 + [100]) != (int_32)$0) ){ goto $label$31 }
	$5 = ($11 + [100])
	goto $label$2 
	
.LABEL $label$31
	if ( ((int_32)*($11 + [104]) != (int_32)$0) ){ goto $label$32 }
	$5 = ($11 + [104])
	goto $label$2 
	
.LABEL $label$32
	if ( ((int_32)*($11 + [108]) != (int_32)$0) ){ goto $label$33 }
	$5 = ($11 + [108])
	goto $label$2 
	
.LABEL $label$33
	if ( ((int_32)*($11 + [112]) != (int_32)$0) ){ goto $label$34 }
	$5 = ($11 + [112])
	goto $label$2 
	
.LABEL $label$34
	if ( ((int_32)*($11 + [116]) != (int_32)$0) ){ goto $label$35 }
	$5 = ($11 + [116])
	goto $label$2 
	
.LABEL $label$35
	if ( ((int_32)*($11 + [120]) != (int_32)$0) ){ goto $label$36 }
	$5 = ($11 + [120])
	goto $label$2 
	
.LABEL $label$36
	$5 = ( ($11 + [124]) ? ($11 + [128]) : ((int_32)*($11 + [124]) == (int_32)$0) )
	
.LABEL $label$2
	$0 = [-1]
	$11 = ($5 - $11)
	if ( ((int_32)$11 > (int_32)[124]) ){ goto $label$1 }
	$5 = *((int_32($11 >> [2]) + [22720]))
	$0 = (rotl((int_32) ($11 + [-88])))
	if ( ($0 <= [30]) ){ goto $label$39 }
	if ( ((uint_32)($0 + [-2]) > (uint_32)[1]) ){ goto $label$38 }
	$11 = *($4)
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$40 }
	$0 = [-1]
	if ( ((int_32)(*(($11 + [-1])) & [95]) != (int_32)(*($2) & [127])) ){ goto $label$1 }
	
.LABEL $label$40
	*($4) = ($11 + [1])
	*($11) = $5
	return [0]
	
.LABEL $label$39
	*($2) = [80]
	goto $label$37 
	
.LABEL $label$38
	$0 = *($2)
	if ( ((int_32)($5 & [95]) != (int_32)$0) ){ goto $label$37 }
	*($2) = ($0 | [128])
	if ( (*($1) == 0) ){ goto $label$37 }
	*($1) = [0]
	$0 = *($7)
	if ( (( *($7 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) ) == 0) ){ goto $label$37 }
	$0 = *($9)
	if ( ((int_32)($0 - $8) > (int_32)[159]) ){ goto $label$37 }
	*($9) = ($0 + [4])
	*($0) = *($10)
	
.LABEL $label$37
	$0 = *($4)
	*($4) = ($0 + [1])
	*($0) = $5
	$0 = [0]
	if ( ((int_32)$11 > (int_32)[84]) ){ goto $label$1 }
	*($10) = (*($10) + [1])
	
.LABEL $label$1
	[2]
	return $0
}

int_32 .FUNC $257 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $258($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $256 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [352])
	$global$0 = $6
	CALL $253(($6 + [200]), $3, ($6 + [224]), ($6 + [220]), ($6 + [216]))
	*($6 + [192]) = [0]
	*($6 + [184]) = (int_64)0
	CALL $533(($6 + [184]), [10], [0])
	$7 = (($6 + [184]) | [1])
	$8 = ( *($6 + [192]) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = $8
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	*($6 + [7]) = [1]
	*($6 + [6]) = [69]
	$9 = ($6 + [192])
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$2 }
	$11 = [1]
	goto $label$1 
	
.LABEL $label$2
	$11 = [48]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$105 
	
.LABEL $label$109
	*($10) = ($1 + [4])
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( ($1 == 0) ){ goto $label$48 }
	$11 = [48]
	goto $label$3 
	
.LABEL $label$108
	$3 = *($1 + [12])
	if ( ((int_32)$3 == (int_32)*($1 + [16])) ){ goto $label$5 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$107
	$3 = *($3)
	goto $label$51 
	
.LABEL $label$106
	$3 = CALL int_32 $1((int_32 *(*($1) + [36])))
	$11 = [0]
	goto $label$3 
	
.LABEL $label$105
	$10 = ((int_32)$3 == (int_32)[-1])
	$3 = ( [0] ? $1 : $10 )
	$11 = [1]
	goto $label$3 
	
.LABEL $label$104
	if ( ($2 == 0) ){ goto $label$47 }
	$11 = [2]
	goto $label$3 
	
.LABEL $label$103
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$46 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$102
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$44 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$101
	if ( $10 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$100
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) != (int_32)[-1]) ){ goto $label$45 }
	$11 = [56]
	goto $label$3 
	
.LABEL $label$99
	$2 = [0]
	if ( $10 ){ goto $label$43 }
	$11 = [42]
	goto $label$3 
	
.LABEL $label$98
	$1 = *($6 + [184])
	$1 = ( *($6 + [188]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [180]) == (int_32)($8 + $1)) ){ goto $label$10 }
	$11 = [43]
	goto $label$3 
	
.LABEL $label$97
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$9 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$96
	$1 = *($1)
	goto $label$7 
	
.LABEL $label$95
	CALL $533(($6 + [184]), ($1 << [1]), [0])
	$10 = [10]
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$4 }
	$11 = [54]
	goto $label$3 
	
.LABEL $label$94
	$10 = ((*($6 + [184]) & [-2]) + [-1])
	$11 = [55]
	goto $label$3 
	
.LABEL $label$93
	CALL $533(($6 + [184]), $10, [0])
	$8 = ( *($9) ? $7 : (*($6 + [184]) & [1]) )
	*($6 + [180]) = ($8 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$8 }
	$11 = [52]
	goto $label$3 
	
.LABEL $label$92
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [45]
	goto $label$3 
	
.LABEL $label$91
	if ( CALL $254($1, ($6 + [7]), ($6 + [6]), $8, ($6 + [180]), *($6 + [220]), *($6 + [216]), ($6 + [200]), ($6 + [16]), ($6 + [12]), ($6 + [8]), ($6 + [224])) ){ goto $label$40 }
	$11 = [46]
	goto $label$3 
	
.LABEL $label$90
	$10 = ($3 + [12])
	$1 = *($10)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$6 }
	$11 = [51]
	goto $label$3 
	
.LABEL $label$89
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	$10 = [1]
	if ( $1 ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$88
	if ( (*($6 + [7]) == 0) ){ goto $label$39 }
	$11 = [6]
	goto $label$3 
	
.LABEL $label$87
	$1 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$38 }
	$11 = [7]
	goto $label$3 
	
.LABEL $label$86
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$37 }
	$11 = [41]
	goto $label$3 
	
.LABEL $label$85
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$11 = [8]
	goto $label$3 
	
.LABEL $label$84
	if ( ((int_32)$8 != (int_32)*($6 + [180])) ){ goto $label$36 }
	$11 = [10]
	goto $label$3 
	
.LABEL $label$83
	*($5) = (int_64)0
	*($4) = [4]
	$12 = [1]
	$5 = ($8 & [1])
	$8 = *($6 + [200])
	if ( (( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ) == 0) ){ goto $label$35 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$33 }
	$11 = [37]
	goto $label$3 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$34 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$10 = $9
	$11 = [39]
	goto $label$3 
	
.LABEL $label$79
	$8 = *($1)
	*($1) = *($10)
	*($10) = $8
	$10 = ($10 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $10) ){ goto $label$11 }
	$11 = [40]
	goto $label$3 
	
.LABEL $label$78
	$8 = *($6 + [200])
	$5 = ($8 & [1])
	$11 = [12]
	goto $label$3 
	
.LABEL $label$77
	$1 = ( *($6 + [208]) ? (($6 + [200]) | [1]) : $5 )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$31 }
	$11 = [32]
	goto $label$3 
	
.LABEL $label$76
	$5 = ($1 + ( *($6 + [204]) ? uint_32($8 >> [1]) : $5 ))
	$8 = ($6 + [16])
	$11 = [33]
	goto $label$3 
	
.LABEL $label$75
	if ( (($7 & [1]) == 0) ){ goto $label$13 }
	$11 = [35]
	goto $label$3 
	
.LABEL $label$74
	if ( ((int_32)*($8) != (int_32)int_32(($10 << [24]) >> [24])) ){ goto $label$12 }
	$11 = [34]
	goto $label$3 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($5 - $1) > (int_32)[1]) )
	$10 = *($1)
	$7 = (((int_32)$10 > (int_32)[0]) & ((int_32)$10 != (int_32)[127]))
	$8 = ($8 + [4])
	if ( ($8 <= $9) ){ goto $label$32 }
	$11 = [13]
	goto $label$3 
	
.LABEL $label$72
	if ( ($7 == 0) ){ goto $label$30 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $10) ){ goto $label$29 }
	$11 = [31]
	goto $label$3 
	
.LABEL $label$70
	*($4) = [4]
	$11 = [14]
	goto $label$3 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$28 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$68
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$26 }
	$11 = [16]
	goto $label$3 
	
.LABEL $label$67
	$1 = *($1)
	goto $label$25 
	
.LABEL $label$66
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$11 = [17]
	goto $label$3 
	
.LABEL $label$65
	$12 = ((int_32)$1 == (int_32)[-1])
	$3 = ( [0] ? $3 : $12 )
	if ( ($2 == 0) ){ goto $label$23 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$64
	$1 = *($2 + [12])
	if ( ((int_32)$1 == (int_32)*($2 + [16])) ){ goto $label$22 }
	$11 = [19]
	goto $label$3 
	
.LABEL $label$63
	if ( ((int_32)$12 ^ (int_32)((int_32)*($1) == (int_32)[-1])) ){ goto $label$17 }
	$11 = [20]
	goto $label$3 
	
.LABEL $label$62
	*($4) = (*($4) | [2])
	$11 = [21]
	goto $label$3 
	
.LABEL $label$61
	if ( (*($6 + [184]) & [1]) ){ goto $label$16 }
	$11 = [25]
	goto $label$3 
	
.LABEL $label$60
	if ( (*($6 + [200]) & [1]) ){ goto $label$15 }
	$11 = [24]
	goto $label$3 
	
.LABEL $label$59
	$global$0 = ($6 + [352])
	return $3
	
.LABEL $label$58
	CALL _ZdlPv(*(($6 + [192])))
	if ( ((*($6 + [200]) & [1]) == 0) ){ goto $label$14 }
	$11 = [23]
	goto $label$3 
	
.LABEL $label$57
	CALL _ZdlPv(*($6 + [208]))
	$global$0 = ($6 + [352])
	return $3
	
.LABEL $label$56
	if ( (((int_32)$12 ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$27 }
	$11 = [29]
	goto $label$3 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$24 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$53
	if ( $12 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$52
	CALL $564()
	CALL $564()
	
.LABEL $label$51
	$11 = [0]
	goto $label$3 
	
.LABEL $label$50
	$11 = [1]
	goto $label$3 
	
.LABEL $label$49
	$11 = [48]
	goto $label$3 
	
.LABEL $label$48
	$11 = [1]
	goto $label$3 
	
.LABEL $label$47
	$11 = [56]
	goto $label$3 
	
.LABEL $label$46
	$11 = [57]
	goto $label$3 
	
.LABEL $label$45
	$11 = [4]
	goto $label$3 
	
.LABEL $label$44
	$11 = [56]
	goto $label$3 
	
.LABEL $label$43
	$11 = [5]
	goto $label$3 
	
.LABEL $label$42
	$11 = [42]
	goto $label$3 
	
.LABEL $label$41
	$11 = [5]
	goto $label$3 
	
.LABEL $label$40
	$11 = [5]
	goto $label$3 
	
.LABEL $label$39
	$11 = [8]
	goto $label$3 
	
.LABEL $label$38
	$11 = [8]
	goto $label$3 
	
.LABEL $label$37
	$11 = [8]
	goto $label$3 
	
.LABEL $label$36
	$11 = [9]
	goto $label$3 
	
.LABEL $label$35
	$11 = [14]
	goto $label$3 
	
.LABEL $label$34
	$11 = [12]
	goto $label$3 
	
.LABEL $label$33
	$11 = [12]
	goto $label$3 
	
.LABEL $label$32
	$11 = [33]
	goto $label$3 
	
.LABEL $label$31
	$11 = [13]
	goto $label$3 
	
.LABEL $label$30
	$11 = [14]
	goto $label$3 
	
.LABEL $label$29
	$11 = [14]
	goto $label$3 
	
.LABEL $label$28
	$11 = [29]
	goto $label$3 
	
.LABEL $label$27
	$11 = [15]
	goto $label$3 
	
.LABEL $label$26
	$11 = [28]
	goto $label$3 
	
.LABEL $label$25
	$11 = [17]
	goto $label$3 
	
.LABEL $label$24
	$11 = [18]
	goto $label$3 
	
.LABEL $label$23
	$11 = [27]
	goto $label$3 
	
.LABEL $label$22
	$11 = [26]
	goto $label$3 
	
.LABEL $label$21
	$11 = [20]
	goto $label$3 
	
.LABEL $label$20
	$11 = [21]
	goto $label$3 
	
.LABEL $label$19
	$11 = [21]
	goto $label$3 
	
.LABEL $label$18
	$11 = [20]
	goto $label$3 
	
.LABEL $label$17
	$11 = [21]
	goto $label$3 
	
.LABEL $label$16
	$11 = [22]
	goto $label$3 
	
.LABEL $label$15
	$11 = [23]
	goto $label$3 
	
.LABEL $label$14
	$11 = [24]
	goto $label$3 
	
.LABEL $label$13
	$11 = [34]
	goto $label$3 
	
.LABEL $label$12
	$11 = [36]
	goto $label$3 
	
.LABEL $label$11
	$11 = [39]
	goto $label$3 
	
.LABEL $label$10
	$11 = [53]
	goto $label$3 
	
.LABEL $label$9
	$11 = [52]
	goto $label$3 
	
.LABEL $label$8
	$11 = [44]
	goto $label$3 
	
.LABEL $label$7
	$11 = [45]
	goto $label$3 
	
.LABEL $label$6
	$11 = [47]
	goto $label$3 
	
.LABEL $label$5
	$11 = [50]
	goto $label$3 
	
.LABEL $label$4
	$11 = [55]
	goto $label$3 
	$11
	return (unreachable)
}

void .FUNC $598 (int_32 $0)
{
}

int_32 .FUNC $181 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($1 = ($0 + *((*($0) + [-12])))) + [12]) = [11248]
	$2 = *($1 + [52])
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ($1 + [12])
	$0 = (($2 << [2]) + [-4])
	$4 = ($1 + [48])
	$5 = ($1 + [44])
	
.LOOP $label$2:
	CALL void [0]((int_32 $3), (int_32 *((*($4) + $0))), (int_32 *((*($5) + $0))))
	$0 = ($0 + [-4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($1 + [40]))
	CALL $650(*(($1 + [44])))
	CALL $650(*(($1 + [48])))
	CALL $650(*($1 + [60]))
	CALL $650(*($1 + [72]))
	return $1
}

int_32 .FUNC $406 (int_32 $0, int_32 $1)
{
	$1 = *($1)
	*($0) = $1
	*($1 + [4]) = (*($1 + [4]) + [1])
	return $0
}

int_32 .FUNC $180 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($1 = ($0 + [4]))) = [11248]
	$2 = ($0 + [-8])
	$3 = *(($0 + [44]))
	if ( ($3 == 0) ){ goto $label$1 }
	$0 = (($3 << [2]) + [-4])
	$4 = ($2 + [48])
	$5 = ($2 + [44])
	
.LOOP $label$2:
	CALL void [0]((int_32 $1), (int_32 *((*($4) + $0))), (int_32 *((*($5) + $0))))
	$0 = ($0 + [-4])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $407(($2 + [40]))
	CALL $650(*(($2 + [44])))
	CALL $650(*(($2 + [48])))
	CALL $650(*($2 + [60]))
	CALL $650(*($2 + [72]))
	return $2
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0 + [24])
	$2 = *($0 + [44])
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($0 + [44])) = $3
	$2 = $3
	
.LABEL $label$1
	$3 = [-1]
	$4 = *($0 + [12])
	if ( ((uint_32)*($0 + [8]) >= (uint_32)$4) ){ goto $label$5 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$4 }
	if ( (*($0 + [48]) & [16]) ){ goto $label$3 }
	$3 = [-1]
	$4 = ($4 + [-1])
	if ( ((int_32)*($4) == (int_32)($1 & [255])) ){ goto $label$2 }
	
.LABEL $label$5
	return $3
	
.LABEL $label$4
	*($0 + [16]) = $2
	*(($0 + [12])) = ($4 + [-1])
	return [0]
	
.LABEL $label$3
	$4 = ($4 + [-1])
	
.LABEL $label$2
	*($0 + [16]) = $2
	*(($0 + [12])) = $4
	*($4) = $1
	return $1
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$4 = *($0 + [12])
	$6 = *($0 + [28])
	$5 = *($0 + [24])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	$7 = ($0 + [48])
	$8 = ($0 + [44])
	$9 = *($0 + [44])
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($2 + [16])
	return [0]
	
.LABEL $label$4
	$8 = [-1]
	if ( ((*($0 + [48]) & [16]) == 0) ){ goto $label$2 }
	$9 = *($0 + [44])
	$6 = *($0 + [20])
	$10 = ($0 + [32])
	CALL $535($10, [0])
	$7 = [10]
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$6 }
	$7 = ((*($10) & [-2]) + [-1])
	
.LABEL $label$6
	$8 = ($0 + [44])
	$9 = ($9 - $6)
	$5 = ($5 - $6)
	CALL $533($10, $7, [0])
	$6 = *($10)
	if ( ($6 & [1]) ){ goto $label$8 }
	$6 = uint_32($6 >> [1])
	$10 = ($10 + [1])
	goto $label$7 
	
.LABEL $label$8
	$6 = *(($0 + [36]))
	$10 = *(($0 + [40]))
	
.LABEL $label$7
	$7 = ($0 + [48])
	$6 = ($10 + $6)
	*(($0 + [28])) = $6
	*(($0 + [20])) = $10
	$5 = ($10 + $5)
	*(($0 + [24])) = $5
	$9 = ($10 + $9)
	*(($0 + [44])) = $9
	
.LABEL $label$3
	$10 = ($5 + [1])
	*($2 + [12]) = $10
	$9 = *(( $8 ? ($2 + [12]) : ($10 <= $9) ))
	*($8) = $9
	if ( ((*($7) & [8]) == 0) ){ goto $label$9 }
	$7 = ($4 - $3)
	if ( (*($0 + [32]) & [1]) ){ goto $label$11 }
	$8 = (($0 + [32]) + [1])
	goto $label$10 
	
.LABEL $label$11
	$8 = *(($0 + [40]))
	
.LABEL $label$10
	*($0 + [16]) = $9
	*(($0 + [12])) = ($8 + $7)
	*(($0 + [8])) = $8
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$1 }
	*(($0 + [24])) = $10
	*($5) = $1
	$8 = ($1 & [255])
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $8
	
.LABEL $label$1
	$0 = CALL int_32 $0((int_32 ($1 & [255])), (int_32 *(*($0) + [52])))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $428 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32((( ($1 + [32]) ? $1 : CALL $557($1, $2) ) << [24]) >> [24])
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	if ( (*([0] + [11460]) == 0) ){ goto $label$2 }
	$2 = *([0] + [11456])
	goto $label$1 
	
.LABEL $label$3
	return $1
	
.LABEL $label$2
	$2 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $2
	return .LABEL $label$1
}

void .FUNC $369 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	$10 = ($global$0 - [32])
	$global$0 = $10
	if ( ($0 == 0) ){ goto $label$18 }
	$0 = *($1)
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($10) = [11384]
	if ( ((int_32)*([0] + [11384]) == (int_32)[-1]) ){ goto $label$19 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11384], ($10 + [16]), [60])
	
.LABEL $label$19
	$0 = *(((*($0 + [16]) + (*([0] + [11388]) << [2])) + [-4]))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($2) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$17 }
	*($8) = [0]
	goto $label$16 
	
.LABEL $label$18
	$0 = *($1)
	*($10 + [4 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($10) = [11376]
	if ( ((int_32)*([0] + [11376]) == (int_32)[-1]) ){ goto $label$20 }
	*($10 + [24]) = $10
	*($10 + [16]) = ($10 + [24])
	CALL $516([11376], ($10 + [16]), [60])
	
.LABEL $label$20
	$0 = *(((*($0 + [16]) + (*([0] + [11380]) << [2])) + [-4]))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [44])))
	*($2) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [32])))
	if ( (*($8) & [1]) ){ goto $label$15 }
	*($8) = [0]
	goto $label$14 
	
.LABEL $label$17
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$16
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($7) & [1]) ){ goto $label$13 }
	*($7) = [0]
	goto $label$12 
	
.LABEL $label$15
	*(*($8 + [8])) = [0]
	*($8 + [4]) = [0]
	
.LABEL $label$14
	CALL $531($8, [0])
	*(($8 + [8])) = *(($10 + [8]))
	*($8) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [28])))
	if ( (*($7) & [1]) ){ goto $label$11 }
	*($7) = [0]
	goto $label$10 
	
.LABEL $label$13
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$12
	CALL $531($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	*($3) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($4) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($5) & [1]) ){ goto $label$9 }
	*($5) = [0]
	goto $label$8 
	
.LABEL $label$11
	*(*($7 + [8])) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$10
	CALL $531($7, [0])
	*(($7 + [8])) = *(($10 + [8]))
	*($7) = *($10)
	*($3) = CALL int_32 $0((int_32 *(*($0) + [12])))
	*($4) = CALL int_32 $0((int_32 *(*($0) + [16])))
	CALL void $10((int_32 $0), (int_32 *(*($0) + [20])))
	if ( (*($5) & [1]) ){ goto $label$7 }
	*($5) = [0]
	goto $label$6 
	
.LABEL $label$9
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$8
	CALL $531($5, [0])
	*(($5 + [8])) = *(($10 + [8]))
	*($5) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($6) & [1]) ){ goto $label$5 }
	*($6) = [0]
	goto $label$4 
	
.LABEL $label$7
	*(*($5 + [8])) = [0]
	*($5 + [4]) = [0]
	
.LABEL $label$6
	CALL $531($5, [0])
	*(($5 + [8])) = *(($10 + [8]))
	*($5) = *($10)
	CALL void $10((int_32 $0), (int_32 *(*($0) + [24])))
	if ( (*($6) & [1]) ){ goto $label$3 }
	*($6) = [0]
	goto $label$2 
	
.LABEL $label$5
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$4
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	goto $label$1 
	
.LABEL $label$3
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	
.LABEL $label$2
	CALL $531($6, [0])
	*(($6 + [8])) = *(($10 + [8]))
	*($6) = *($10)
	$0 = CALL int_32 $0((int_32 *(*($0) + [36])))
	
.LABEL $label$1
	*($9) = $0
	$global$0 = ($10 + [32])
}

int_32 .FUNC $543 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = [1]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$6 }
	$4 = uint_32($4 >> [1])
	if ( (([1] - $4) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = *($0 + [4])
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $4) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $538($0, $3, (($4 + $2) - $3), $4, $4, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $5 ){ goto $label$2 }
	$3 = ($0 + [4])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$3 = *($0 + [8])
	
.LABEL $label$1
	CALL $636(($3 + ($4 << [2])), $1, $2)
	$2 = ($4 + $2)
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	goto $label$7 
	
.LABEL $label$8
	*($0 + [4]) = $2
	
.LABEL $label$7
	*(($3 + ($2 << [2]))) = [0]
	return $0
}

int_32 .FUNC $269 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($6 = $5) + [24]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [27756]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [117]
	
.LABEL $label$4
	*(($8 + [2])) = $7
	$10 = $5
	$7 = ((uint_32(*(($2 + [4])) >> [9]) & [1]) | [22])
	$9 = ($7 + [1])
	$8 = ($5 - (($7 + [16]) & [48]))
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $9, $5, ($6 + [24]), $6)
	$13 = ($8 + $12)
	$9 = $13
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$9 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$9 = $8
	
.LABEL $label$9
	$5 = ($11 - ((($7 << [1]) + [14]) & [-16]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $265($8, $9, $13, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $266($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$10
	$global$0 = ($6 + [32])
	return $2
}

void .FUNC $130 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = [10396]
	*(($1 = ($0 + [56]))) = [10416]
	*(($2 = ($0 + [-8]))) = [10376]
	*(($3 = ($0 + [4]))) = [10640]
	if ( ((*(($0 + [36])) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($2 + [52]))
	
.LABEL $label$1
	CALL $153($3)
	CALL $178($2, [10436])
	CALL $149($1)
	CALL _ZdlPv($2)
}

int_32 .FUNC $131 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*(($0 = ($0 + *((*($0) + [-12])))) + [64]) = [10416]
	*($0) = [10376]
	*($0 + [8]) = [10396]
	*($0 + [12]) = [10640]
	$1 = ($0 + [12])
	$2 = ($0 + [64])
	if ( ((*($0 + [44]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($0 + [52]))
	
.LABEL $label$1
	CALL $153($1)
	CALL $178($0, [10436])
	CALL $149($2)
	return $0
}

void .FUNC $132 (int_32 $0)
{
	int_32 $1
	int_32 $2
	*(($0 = ($0 + *((*($0) + [-12])))) + [64]) = [10416]
	*($0) = [10376]
	*($0 + [8]) = [10396]
	*($0 + [12]) = [10640]
	$1 = ($0 + [12])
	$2 = ($0 + [64])
	if ( ((*($0 + [44]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($0 + [52]))
	
.LABEL $label$1
	CALL $153($1)
	CALL $178($0, [10436])
	CALL $149($2)
	CALL _ZdlPv($0)
}

int_32 .FUNC $133 (int_32 $0)
{
	*($0) = [10640]
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [40])))
	
.LABEL $label$1
	CALL $153($0)
	return $0
}

void .FUNC $134 (int_32 $0)
{
	*($0) = [10640]
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($0 + [40])))
	
.LABEL $label$1
	CALL $153($0)
	CALL _ZdlPv($0)
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($1 + [24])
	$5 = *($1 + [44])
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$1 }
	*(($1 + [44])) = $6
	$5 = $6
	
.LABEL $label$1
	$7 = ($4 & [24])
	if ( ($7 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)[24]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = (int_64)0
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$2 }
	if ( ($4 & [8]) ){ goto $label$8 }
	$2 = ((int_64)(CASTING int_64)(int_32 ($6 - *($1 + [20]))) + (int_64)$2)
	if ( ((int_64)$2 >= (int_64)0) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$9
	if ( (*($1 + [32]) & [1]) ){ goto $label$7 }
	$3 = (($1 + [32]) + [1])
	goto $label$6 
	
.LABEL $label$8
	$2 = ((int_64)(CASTING int_64)(int_32 (*($1 + [12]) - *($1 + [8]))) + (int_64)$2)
	if ( ((int_64)$2 >= (int_64)0) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$7
	$3 = *(($1 + [40]))
	
.LABEL $label$6
	$8 = (CASTING int_64)(int_32 ($5 - $3))
	
.LABEL $label$5
	$2 = ((int_64)$8 + (int_64)$2)
	if ( ((int_64)$2 < (int_64)0) ){ goto $label$2 }
	
.LABEL $label$4
	if ( (*($1 + [32]) & [1]) ){ goto $label$11 }
	if ( ((int_64)$2 > (int_64)(CASTING int_64)(int_32 ($5 - (($1 + [32]) + [1])))) ){ goto $label$2 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_64)$2 > (int_64)(CASTING int_64)(int_32 ($5 - *(($1 + [40]))))) ){ goto $label$2 }
	
.LABEL $label$10
	$3 = ($4 & [8])
	if ( (int_64)($2 == 0) ){ goto $label$12 }
	if ( ($3 == 0) ){ goto $label$13 }
	if ( (*($1 + [12]) == 0) ){ goto $label$2 }
	
.LABEL $label$13
	if ( (($4 & [16]) == 0) ){ goto $label$12 }
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$12
	if ( ($3 == 0) ){ goto $label$14 }
	*($1 + [16]) = $5
	*($1 + [12]) = (*($1 + [8]) + (CASTING uint_32)(uint_64 $2))
	
.LABEL $label$14
	if ( (($4 & [16]) == 0) ){ goto $label$15 }
	*(($1 + [24])) = (*($1 + [20]) + (CASTING uint_32)(uint_64 $2))
	
.LABEL $label$15
	*($0 + [8]) = $2
	*($0) = (int_64)0
	return 
	
.LABEL $label$2
	*($0 + [8]) = (int_64)-1
	*($0) = (int_64)0
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	CALL void $0((int_32 $1), (int_32 *($2 + [8])), (int_64 [0]), (int_32 $3), (int_32 *(*($1) + [16])))
}

int_32 .FUNC $137 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *($0 + [24])
	$1 = *($0 + [44])
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$1 }
	*(($0 + [44])) = $2
	$1 = $2
	
.LABEL $label$1
	$2 = [-1]
	if ( ((*($0 + [48]) & [8]) == 0) ){ goto $label$2 }
	$3 = *($0 + [16])
	if ( ((uint_32)$3 >= (uint_32)$1) ){ goto $label$3 }
	*(($0 + [16])) = $1
	$3 = $1
	
.LABEL $label$3
	$0 = *($0 + [12])
	if ( ((uint_32)$0 >= (uint_32)$3) ){ goto $label$2 }
	$2 = *($0)
	
.LABEL $label$2
	return $2
}

void .FUNC $511 (int_32 $0)
{
	if ( ((*([0] + [11700]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*([0] + [11708]))
	
.LABEL $label$1
}

void .FUNC $616 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_32)$3 < (int_32)[16384]) ){ goto $label$4 }
	CALL __multf3(($4 + [32]), $1, $2, (int_64)0, (int_64)9222809086901354496)
	$2 = *((($4 + [32]) + [8]))
	$1 = *($4 + [32])
	if ( ((int_32)$3 < (int_32)[32767]) ){ goto $label$3 }
	CALL __multf3(($4 + [16]), $1, $2, (int_64)0, (int_64)9222809086901354496)
	$3 = ($3 + [-32766])
	$3 = ( $3 ? [16383] : ((int_32)$3 < (int_32)[16383]) )
	$2 = *((($4 + [16]) + [8]))
	$1 = *($4 + [16])
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$3 > (int_32)[-16383]) ){ goto $label$1 }
	CALL __multf3(($4 + [64]), $1, $2, (int_64)0, (int_64)32088147345014784)
	$2 = *((($4 + [64]) + [8]))
	$1 = *($4 + [64])
	if ( ((int_32)$3 > (int_32)[-32652]) ){ goto $label$2 }
	CALL __multf3(($4 + [48]), $1, $2, (int_64)0, (int_64)32088147345014784)
	$3 = ($3 + [32538])
	$3 = ( $3 ? [-16382] : ((int_32)$3 > (int_32)[-16382]) )
	$2 = *((($4 + [48]) + [8]))
	$1 = *($4 + [48])
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 + [-16383])
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 + [16269])
	
.LABEL $label$1
	CALL __multf3($4, $1, $2, (int_64)0, ((int_64)(CASTING uint_64)(uint_32 ($3 + [16383])) << (int_64)48))
	*($0 + [8]) = *(($4 + [8]))
	*($0) = *($4)
	$global$0 = ($4 + [80])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $87($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $614 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$5 = ($global$0 - [128])
	$global$0 = $5
	if ( (CALL __eqtf2($3, $4, (int_64)0, (int_64)0) == 0) ){ goto $label$2 }
	$6 = CALL $602($3, $4)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$8 = ($7) & [32767]
	if ( ((int_32)$8) == (int_32)[32767]) ){ goto $label$2 }
	if ( ($6 == 0) ){ goto $label$2 }
	$10 = ((int_64)$4 & (int_64)9223372036854775807)
	$9 = ((int_64)$2 & (int_64)9223372036854775807)
	if ( ((int_32)CALL __letf2($1, $9, $3, $10) <= (int_32)[0]) ){ goto $label$7 }
	$11 = ((CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)48)) & [32767])
	if ( ($8 == 0) ){ goto $label$6 }
	$4 = $1
	if ( $11 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$7
	if ( CALL __netf2($1, $9, $3, $10) ){ goto $label$5 }
	CALL __multf3(($5 + [112]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [120]))
	$4 = *($5 + [112])
	goto $label$1 
	
.LABEL $label$6
	CALL __multf3(($5 + [96]), $1, $9, (int_64)0, (int_64)4645181540655955968)
	$9 = *(($5 + [104]))
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)48)) + [-120])
	$4 = *($5 + [96])
	if ( $11 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$4 = $1
	goto $label$1 
	
.LABEL $label$4
	CALL __multf3(($5 + [80]), $3, $10, (int_64)0, (int_64)4645181540655955968)
	$10 = *(($5 + [88]))
	$11 = ((CASTING uint_32)(uint_64 (uint_64)$10 >> (uint_64)(int_64)48)) + [-120])
	$3 = *($5 + [80])
	
.LABEL $label$3
	$12 = ((int_64)((int_64)$10 & (int_64)281474976710655) | (int_64)281474976710656)
	$9 = ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)281474976710656)
	$13 = (int_64)
	$6 = ((int_64)$13((int_64))($9 - $12) - (CASTING uint_64)(uint_32 ((uint_64)$3 > (uint_64)$4)))) > (int_64)-1)
	$10 = (int_64))($4 - $3)
	if ( ((int_32)$8 <= (int_32)$11) ){ goto $label$10 }
	
.LOOP $label$11:
	if ( (($6 & [1]) == 0) ){ goto $label$13 }
	if ( ((int_64)((int_64)$13 | (int_64)$10) == (int_64)0) ){ goto $label$9 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)63)
	$13 = ((int_64)$13 << (int_64)1)
	goto $label$12 
	
.LABEL $label$13
	$13 = (uint_64)$4 >> (uint_64)(int_64)63)
	$9 = ((int_64)$9 << (int_64)1)
	$10 = $4
	
.LABEL $label$12
	$4 = ((int_64)$10 << (int_64)1)
	$9 = ((int_64)$13 | (int_64)$9)
	$13 = (int_64)
	$6 = ((int_64)$13((int_64))($9 - $12) - (CASTING uint_64)(uint_32 (uint_64)($4 <= $3)))) > (int_64)-1)
	$10 = (int_64))($4 - $3)
	$8 = ($8 + [-1])
	if ( ((int_32)$8 > (int_32)$11) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($6 == 0) ){ goto $label$14 }
	$9 = $13
	$4 = $10
	if ( ((int_64)((int_64)$13 | (int_64)$10) == (int_64)0) ){ goto $label$8 }
	
.LABEL $label$14
	if ( ((uint_64)$9 > (uint_64)(int_64)281474976710655) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = (uint_64)$4 >> (uint_64)(int_64)63)
	$8 = ($8 + [-1])
	$4 = ((int_64)$4 << (int_64)1)
	$9 = ((int_64)$3 | (int_64)((int_64)$9 << (int_64)1))
	if ( (uint_64)($9 <= (int_64)281474976710656) ){ goto $label$16 }
	
.LABEL $label$15
	$6 = ($7 & [32768])
	if ( ((int_32)$8 <= (int_32)[0]) ){ goto $label$17 }
	$2 = ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)((int_64)(CASTING uint_64)(uint_32 ($8 | $6)) << (int_64)48))
	goto $label$1 
	
.LABEL $label$17
	CALL __multf3(($5 + [64]), $4, ((int_64)((int_64)$9 & (int_64)281474976710655) | (int_64)((int_64)(CASTING uint_64)(uint_32 (($8 + [120]) | $6)) << (int_64)48)), (int_64)0, (int_64)4577627546245398528)
	$2 = *(($5 + [72]))
	$4 = *($5 + [64])
	goto $label$1 
	
.LABEL $label$9
	CALL __multf3(($5 + [32]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [40]))
	$4 = *($5 + [32])
	goto $label$1 
	
.LABEL $label$8
	CALL __multf3(($5 + [48]), $1, $2, (int_64)0, (int_64)0)
	$2 = *(($5 + [56]))
	$4 = *($5 + [48])
	goto $label$1 
	
.LABEL $label$2
	CALL __multf3(($5 + [16]), $1, $2, $3, $4)
	$3 = *((($5 + [16]) + [8]))
	$4 = *($5 + [16])
	CALL __divtf3($5, $4, $3, $4, $3)
	$2 = *(($5 + [8]))
	$4 = *($5)
	
.LABEL $label$1
	*($0) = $4
	*($0 + [8]) = $2
	$global$0 = ($5 + [128])
}

int_32 .FUNC $368 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$11 = ($global$0 - [496])
	$global$0 = $11
	*($11 + [80]) = [0]
	*($11 + [72]) = (int_64)0
	*($11 + [64]) = [0]
	*($11 + [56]) = (int_64)0
	*($11 + [48]) = [0]
	*($11 + [40]) = (int_64)0
	*($11 + [32]) = [0]
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = [0]
	*($11 + [8]) = (int_64)0
	CALL $369($2, $3, ($11 + [88]), ($11 + [87]), ($11 + [86]), ($11 + [72]), ($11 + [56]), ($11 + [40]), ($11 + [24]), ($11 + [4]))
	*($9) = *($8)
	$12 = ($4 & [512])
	$13 = (($11 + [40]) | [1])
	$14 = (($11 + [24]) | [1])
	$15 = (($11 + [56]) | [1])
	$16 = ($11 + [496])
	$17 = ($7 + [8])
	$18 = [0]
	$19 = [0]
	$20 = [61]
	$21 = ($11 + [96])
	$2 = $21
	
.LOOP $label$6:
	$4 = [0]
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$11 }
	if ( ((int_32)*($7 + [12]) == (int_32)*($7 + [16])) ){ goto $label$10 }
	$4 = $7
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) == (int_32)[-1]) ){ goto $label$12 }
	$4 = *($0)
	if ( $1 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	$4 = [0]
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)*($1 + [12]) != (int_32)*($1 + [16])) ){ goto $label$13 }
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) ){ goto $label$8 }
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$1 = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	
.LABEL $label$7
	$3 = (($11 + [88]) + $19)
	$7 = *($3)
	if ( ((uint_32)$7 > (uint_32)[4]) ){ goto $label$21 }
	goto $label$38 
	
.LABEL $label$38
	if ( ((int_32)$19 != (int_32)[3]) ){ goto $label$24 }
	goto $label$5 
	
.LABEL $label$37
	$3 = [0]
	$7 = [0]
	$4 = *($0)
	if ( $4 ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$36
	if ( $18 ){ goto $label$33 }
	if ( ($19 <= [2]) ){ goto $label$33 }
	if ( $12 ){ goto $label$33 }
	if ( (((int_32)$19 == (int_32)[2]) & ((int_32)*($11 + [91]) != (int_32)[0])) ){ goto $label$33 }
	$18 = [0]
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$35
	if ( ((int_32)$19 == (int_32)[3]) ){ goto $label$5 }
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$32 }
	$7 = (*($4) << [24])
	if ( ((int_32)int_32($7 >> [24]) >= (int_32)[0]) ){ goto $label$31 }
	goto $label$28 
	
.LABEL $label$34
	$4 = *($11 + [24])
	$24 = ( *($11 + [28]) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$23 = ($7 & [1])
	$7 = *($11 + [40])
	$22 = ( *($11 + [44]) ? uint_32($7 >> [1]) : $23 )
	if ( ((int_32)$22 == (int_32)([0] - $24)) ){ goto $label$20 }
	$4 = *($0)
	$25 = *($4 + [16])
	$3 = *($4 + [12])
	if ( ($22 == 0) ){ goto $label$30 }
	if ( ($24 == 0) ){ goto $label$30 }
	if ( ((int_32)$3 != (int_32)$25) ){ goto $label$40 }
	$22 = CALL int_32 $4((int_32 *(*($4) + [36])))
	$7 = *($11 + [40])
	$23 = ($7 & [1])
	$4 = *($0)
	$24 = ($4 + [12])
	$25 = *($4 + [16])
	$3 = *($4 + [12])
	goto $label$39 
	
.LABEL $label$40
	$24 = ($4 + [12])
	$22 = *($3)
	
.LABEL $label$39
	if ( ((int_32)*(( *((($11 + [40]) + [8])) ? $13 : $23 )) != (int_32)($22 & [255])) ){ goto $label$45 }
	if ( ((int_32)$3 == (int_32)$25) ){ goto $label$44 }
	*($24) = ($3 + [1])
	goto $label$43 
	
.LABEL $label$45
	if ( ((int_32)$3 == (int_32)$25) ){ goto $label$42 }
	$7 = *($3)
	goto $label$41 
	
.LABEL $label$44
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$7 = *($11 + [40])
	$23 = ($7 & [1])
	
.LABEL $label$43
	$18 = ( ($11 + [40]) ? $18 : ((uint_32)( *($11 + [44]) ? uint_32($7 >> [1]) : $23 ) > (uint_32)[1]) )
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$42
	$7 = CALL int_32 $4((int_32 *(*($4) + [36])))
	
.LABEL $label$41
	$4 = *($11 + [24])
	$3 = ($4 & [1])
	if ( ((int_32)*(( *((($11 + [24]) + [8])) ? $14 : $3 )) != (int_32)($7 & [255])) ){ goto $label$27 }
	$7 = *($0)
	$22 = *($7 + [12])
	if ( ((int_32)$22 == (int_32)*($7 + [16])) ){ goto $label$47 }
	*(($7 + [12])) = ($22 + [1])
	goto $label$46 
	
.LABEL $label$47
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$4 = *($11 + [24])
	$3 = ($4 & [1])
	
.LABEL $label$46
	*($6) = [1]
	$18 = ( ($11 + [24]) ? $18 : ((uint_32)( *($11 + [28]) ? uint_32($4 >> [1]) : $3 ) > (uint_32)[1]) )
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$33
	$24 = *($11 + [56])
	$25 = ($24 & [1])
	$22 = (($11 + [56]) + [8])
	$23 = ( *($22) ? $15 : $25 )
	$4 = $23
	if ( ($19 == 0) ){ goto $label$15 }
	$4 = $23
	if ( ((uint_32)*(($3 + [-1])) > (uint_32)[1]) ){ goto $label$15 }
	$3 = ( *($11 + [60]) ? uint_32($24 >> [1]) : $25 )
	if ( ($3 == 0) ){ goto $label$29 }
	$7 = *($4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$29 }
	$26 = $4
	$28 = *($17)
	if ( ((*(($28 + ($7 << [2]))) & [1]) == 0) ){ goto $label$16 }
	$26 = ($23 + $3)
	$7 = ($23 + [1])
	$3 = ($3 + [-1])
	if ( ($3 == 0) ){ goto $label$16 }
	
.LOOP $label$48:
	$29 = *($7)
	if ( ((int_32)$29 < (int_32)[0]) ){ goto $label$17 }
	$3 = ($3 + [-1])
	$7 = ($7 + [1])
	if ( ((*(($28 + ($29 << [2]))) & [1]) == 0) ){ goto $label$18 }
	if ( $3 ){ goto $label$48 }
	goto $label$16 
	
.LABEL $label$32
	$7 = (CALL int_32 $7((int_32 *(*($7) + [36]))) << [24])
	if ( ((int_32)int_32($7 >> [24]) < (int_32)[0]) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((*((*($17) + int_32($7 >> [22]))) & [1]) == 0) ){ goto $label$28 }
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$50 }
	*(($7 + [12])) = ($4 + [1])
	$7 = *($4)
	goto $label$49 
	
.LABEL $label$50
	$7 = CALL int_32 $7((int_32 *(*($7) + [40])))
	
.LABEL $label$49
	CALL $535(($11 + [8]), int_32(($7 << [24]) >> [24]))
	$7 = *($0)
	if ( $7 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$30
	if ( ((int_32)$3 != (int_32)$25) ){ goto $label$53 }
	$7 = CALL int_32 $4((int_32 *(*($4) + [36])))
	if ( $22 ){ goto $label$51 }
	goto $label$52 
	
.LABEL $label$53
	$7 = *($3)
	if ( $22 ){ goto $label$51 }
	
.LABEL $label$52
	$4 = *($11 + [24])
	$3 = ($4 & [1])
	if ( ((int_32)*(( *((($11 + [24]) + [8])) ? $14 : $3 )) != (int_32)($7 & [255])) ){ goto $label$19 }
	$7 = *($0)
	$22 = *($7 + [12])
	if ( ((int_32)$22 == (int_32)*($7 + [16])) ){ goto $label$55 }
	*(($7 + [12])) = ($22 + [1])
	goto $label$54 
	
.LABEL $label$55
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$4 = *($11 + [24])
	$3 = ($4 & [1])
	
.LABEL $label$54
	*($6) = [1]
	$18 = ( ($11 + [24]) ? $18 : ((uint_32)( *($11 + [28]) ? uint_32($4 >> [1]) : $3 ) > (uint_32)[1]) )
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$51
	$4 = *($11 + [40])
	$3 = ($4 & [1])
	if ( ((int_32)*(( *((($11 + [40]) + [8])) ? $13 : $3 )) == (int_32)($7 & [255])) ){ goto $label$56 }
	*($6) = [1]
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$56
	$7 = *($0)
	$22 = *($7 + [12])
	if ( ((int_32)$22 != (int_32)*($7 + [16])) ){ goto $label$58 }
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$4 = *($11 + [40])
	$3 = ($4 & [1])
	goto $label$57 
	
.LABEL $label$58
	*(($7 + [12])) = ($22 + [1])
	
.LABEL $label$57
	$18 = ( ($11 + [40]) ? $18 : ((uint_32)( *($11 + [44]) ? uint_32($4 >> [1]) : $3 ) > (uint_32)[1]) )
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$29
	$26 = $4
	goto $label$16 
	
.LABEL $label$28
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$27
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$26
	$27 = [75]
	goto $label$14 
	
.LABEL $label$25
	$27 = [1]
	goto $label$14 
	
.LABEL $label$24
	$27 = [98]
	goto $label$14 
	
.LABEL $label$23
	$27 = [116]
	goto $label$14 
	
.LABEL $label$22
	$27 = [99]
	goto $label$14 
	
.LABEL $label$21
	$27 = [103]
	goto $label$14 
	
.LABEL $label$20
	$27 = [103]
	goto $label$14 
	
.LABEL $label$19
	$27 = [103]
	goto $label$14 
	
.LABEL $label$18
	$26 = ($7 + [-1])
	goto $label$16 
	
.LABEL $label$17
	$26 = $7
	
.LABEL $label$16
	$7 = ($7 & [1])
	$7 = *($11 + [8])
	$28 = uint_32($7 >> [1])
	$29 = *($11 + [12])
	$3 = ($26 - $23)
	if ( ((uint_32)$3 > (uint_32)( $29 ? $28 : $7 )) ){ goto $label$15 }
	if ( ($3 == 0) ){ goto $label$59 }
	$29 = ( (*((($11 + [8]) + [8])) + $29) ? ((($11 + [8]) + $28) + [1]) : $7 )
	$7 = ($29 - $3)
	$3 = $4
	
.LOOP $label$60:
	if ( ((int_32)*($7) != (int_32)*($3)) ){ goto $label$15 }
	$3 = ($3 + [1])
	$7 = ($7 + [1])
	if ( ((int_32)$29 != (int_32)$7) ){ goto $label$60 }
	
.LABEL $label$59
	$4 = $26
	
.LABEL $label$15
	if ( ((int_32)($23 + ( *($11 + [60]) ? uint_32($24 >> [1]) : $25 )) == (int_32)$4) ){ goto $label$61 }
	
.LOOP $label$62:
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$66 }
	if ( ((int_32)*($7 + [12]) != (int_32)*($7 + [16])) ){ goto $label$67 }
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) == (int_32)[-1]) ){ goto $label$68 }
	$7 = *($0)
	if ( $1 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$68
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	if ( ($1 == 0) ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$66
	$7 = [0]
	if ( ($1 == 0) ){ goto $label$64 }
	
.LABEL $label$65
	if ( ((int_32)*($1 + [12]) != (int_32)*($1 + [16])) ){ goto $label$69 }
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) ){ goto $label$64 }
	
.LABEL $label$69
	if ( ($7 == 0) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$64
	$1 = [0]
	if ( ($7 == 0) ){ goto $label$61 }
	
.LABEL $label$63
	$7 = *($0)
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)*($7 + [16])) ){ goto $label$71 }
	if ( ((int_32)*($4) == (int_32)(*($3) & [255])) ){ goto $label$70 }
	goto $label$61 
	
.LABEL $label$71
	$7 = CALL int_32 $7((int_32 *(*($7) + [36])))
	if ( ((int_32)*($4) != (int_32)($7 & [255])) ){ goto $label$61 }
	
.LABEL $label$70
	$7 = *($0)
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)*($7 + [16])) ){ goto $label$73 }
	*(($7 + [12])) = ($3 + [1])
	goto $label$72 
	
.LABEL $label$73
	CALL int_32 $7((int_32 *(*($7) + [40])))
	
.LABEL $label$72
	$7 = *($11 + [56])
	$3 = ($7 & [1])
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)(( *($22) ? $15 : $3 ) + ( *($11 + [60]) ? uint_32($7 >> [1]) : $3 ))) ){ goto $label$62 }
	
.LABEL $label$61
	if ( ($12 == 0) ){ goto $label$74 }
	$7 = *($11 + [56])
	$3 = ($7 & [1])
	if ( ((int_32)$4 != (int_32)(( *($22) ? $15 : $3 ) + ( *($11 + [60]) ? uint_32($7 >> [1]) : $3 ))) ){ goto $label$75 }
	$27 = [103]
	goto $label$14 
	
.LABEL $label$75
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$74
	$27 = [103]
	
.LABEL $label$14
	
.LOOP $label$77:
	goto $label$281 
	
.LABEL $label$305
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$147 }
	goto $label$148 
	
.LABEL $label$304
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$108 }
	$27 = [77]
	goto $label$77 
	
.LABEL $label$303
	$4 = [-1]
	$7 = ($16 - $21)
	if ( ((uint_32)$7 > (uint_32)[2147483646]) ){ goto $label$106 }
	$27 = [80]
	goto $label$77 
	
.LABEL $label$302
	$7 = ($7 << [1])
	$4 = ( $7 ? [4] : $7 )
	$27 = [78]
	goto $label$77 
	
.LABEL $label$301
	$7 = CALL $647(( [0] ? $21 : ((int_32)$20 == (int_32)[61]) ), $4)
	if ( ($7 == 0) ){ goto $label$185 }
	$27 = [79]
	goto $label$77 
	
.LABEL $label$300
	$16 = ($7 + ($4 & [-4]))
	$2 = ($7 + ($2 - $21))
	$20 = [62]
	$21 = $7
	$27 = [72]
	goto $label$77 
	
.LABEL $label$299
	*($2) = $3
	$2 = ($2 + [4])
	$3 = [0]
	goto $label$107 
	
.LABEL $label$298
	$4 = *($9)
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$105 }
	$27 = [84]
	goto $label$77 
	
.LABEL $label$297
	$25 = ($8 + [4])
	$23 = *($25)
	$22 = [-1]
	$24 = *($8)
	$10 = ($10 - $24)
	if ( ((uint_32)$10 > (uint_32)[2147483646]) ){ goto $label$104 }
	$27 = [91]
	goto $label$77 
	
.LABEL $label$296
	$10 = ($10 << [1])
	$22 = ( $10 ? [1] : $10 )
	$27 = [85]
	goto $label$77 
	
.LABEL $label$295
	$10 = CALL $647(( $24 ? [0] : ((int_32)$23 != (int_32)[61]) ), $22)
	if ( ($10 == 0) ){ goto $label$185 }
	$27 = [86]
	goto $label$77 
	
.LABEL $label$294
	$4 = ($4 - $24)
	if ( ((int_32)$23 == (int_32)[61]) ){ goto $label$103 }
	$27 = [90]
	goto $label$77 
	
.LABEL $label$293
	*($8) = $10
	goto $label$101 
	
.LABEL $label$292
	$23 = *($8)
	*($8) = $10
	if ( ($23 == 0) ){ goto $label$102 }
	$27 = [88]
	goto $label$77 
	
.LABEL $label$291
	CALL void $23((int_32 *($25)))
	$10 = *($8)
	$27 = [89]
	goto $label$77 
	
.LABEL $label$290
	*($25) = [62]
	$4 = ($10 + $4)
	*($9) = $4
	$10 = (*($8) + $22)
	$27 = [83]
	goto $label$77 
	
.LABEL $label$289
	*($9) = ($4 + [1])
	*($4) = $7
	$3 = ($3 + [1])
	$27 = [73]
	goto $label$77 
	
.LABEL $label$288
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 != (int_32)*($7 + [16])) ){ goto $label$173 }
	$27 = [74]
	goto $label$77 
	
.LABEL $label$287
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$7 = [0]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$184 }
	$27 = [1]
	goto $label$77 
	
.LABEL $label$286
	if ( ((int_32)*($4 + [12]) == (int_32)*($4 + [16])) ){ goto $label$172 }
	$27 = [2]
	goto $label$77 
	
.LABEL $label$285
	$7 = $4
	if ( $1 ){ goto $label$175 }
	goto $label$176 
	
.LABEL $label$284
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) == (int_32)[-1]) ){ goto $label$100 }
	$27 = [95]
	goto $label$77 
	
.LABEL $label$283
	$7 = *($0)
	if ( $1 ){ goto $label$177 }
	goto $label$178 
	
.LABEL $label$282
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$182 }
	goto $label$183 
	
.LABEL $label$281
	*(($7 + [12])) = ($4 + [1])
	$7 = [0]
	$4 = *($0)
	if ( $4 ){ goto $label$174 }
	$27 = [75]
	goto $label$77 
	
.LABEL $label$280
	if ( ($1 == 0) ){ goto $label$171 }
	$27 = [3]
	goto $label$77 
	
.LABEL $label$279
	if ( ((int_32)*($1 + [12]) != (int_32)*($1 + [16])) ){ goto $label$170 }
	$27 = [93]
	goto $label$77 
	
.LABEL $label$278
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) ){ goto $label$181 }
	$27 = [4]
	goto $label$77 
	
.LABEL $label$277
	if ( ($7 == 0) ){ goto $label$180 }
	goto $label$179 
	
.LABEL $label$276
	$1 = [0]
	if ( ($7 == 0) ){ goto $label$169 }
	$27 = [66]
	goto $label$77 
	
.LABEL $label$275
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$113 }
	$27 = [67]
	goto $label$77 
	
.LABEL $label$274
	$7 = *($4)
	$4 = ($7 << [24])
	if ( ((int_32)int_32($4 >> [24]) >= (int_32)[0]) ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$273
	$7 = CALL int_32 $7((int_32 *(*($7) + [36])))
	$4 = ($7 << [24])
	if ( ((int_32)int_32($4 >> [24]) < (int_32)[0]) ){ goto $label$111 }
	$27 = [81]
	goto $label$77 
	
.LABEL $label$272
	if ( (*((*($17) + int_32($4 >> [22]))) & [64]) ){ goto $label$112 }
	$27 = [68]
	goto $label$77 
	
.LABEL $label$271
	if ( ((int_32)*($11 + [86]) != (int_32)($7 & [255])) ){ goto $label$168 }
	$27 = [69]
	goto $label$77 
	
.LABEL $label$270
	if ( ($3 == 0) ){ goto $label$167 }
	$27 = [70]
	goto $label$77 
	
.LABEL $label$269
	$7 = *($11 + [72])
	if ( ( *($11 + [76]) ? uint_32($7 >> [1]) : ($7 & [1]) ) ){ goto $label$166 }
	$27 = [5]
	goto $label$77 
	
.LABEL $label$268
	if ( ((int_32)$21 == (int_32)$2) ){ goto $label$165 }
	$27 = [58]
	goto $label$77 
	
.LABEL $label$267
	if ( ($3 == 0) ){ goto $label$164 }
	$27 = [59]
	goto $label$77 
	
.LABEL $label$266
	if ( ((int_32)$2 == (int_32)$16) ){ goto $label$116 }
	$27 = [60]
	goto $label$77 
	
.LABEL $label$265
	$22 = $21
	goto $label$115 
	
.LABEL $label$264
	$22 = $21
	if ( ((int_32)*($11 + [4]) < (int_32)[1]) ){ goto $label$157 }
	$27 = [9]
	goto $label$77 
	
.LABEL $label$263
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$153 }
	$27 = [10]
	goto $label$77 
	
.LABEL $label$262
	if ( ((int_32)*($7 + [12]) == (int_32)*($7 + [16])) ){ goto $label$152 }
	$27 = [11]
	goto $label$77 
	
.LABEL $label$261
	if ( ($1 == 0) ){ goto $label$151 }
	$27 = [12]
	goto $label$77 
	
.LABEL $label$260
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$145 }
	$27 = [13]
	goto $label$77 
	
.LABEL $label$259
	if ( $7 ){ goto $label$187 }
	$27 = [14]
	goto $label$77 
	
.LABEL $label$258
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$143 }
	$27 = [15]
	goto $label$77 
	
.LABEL $label$257
	if ( ((int_32)*($11 + [87]) == (int_32)(*($4) & [255])) ){ goto $label$141 }
	goto $label$187 
	
.LABEL $label$256
	CALL $535(($11 + [8]), int_32(($7 << [24]) >> [24]))
	$27 = [98]
	goto $label$77 
	
.LABEL $label$255
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$97 }
	$27 = [99]
	goto $label$77 
	
.LABEL $label$254
	if ( ((int_32)*($7 + [12]) == (int_32)*($7 + [16])) ){ goto $label$96 }
	$27 = [100]
	goto $label$77 
	
.LABEL $label$253
	if ( ($1 == 0) ){ goto $label$95 }
	$27 = [101]
	goto $label$77 
	
.LABEL $label$252
	if ( ((int_32)*($1 + [12]) != (int_32)*($1 + [16])) ){ goto $label$89 }
	$27 = [111]
	goto $label$77 
	
.LABEL $label$251
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) ){ goto $label$88 }
	$27 = [102]
	goto $label$77 
	
.LABEL $label$250
	if ( ($7 == 0) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$249
	$7 = [0]
	if ( $1 ){ goto $label$90 }
	$27 = [112]
	goto $label$77 
	
.LABEL $label$248
	$1 = [0]
	if ( ($7 == 0) ){ goto $label$85 }
	$27 = [104]
	goto $label$77 
	
.LABEL $label$247
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$80 }
	$27 = [105]
	goto $label$77 
	
.LABEL $label$246
	$7 = (*($4) << [24])
	if ( ((int_32)int_32($7 >> [24]) >= (int_32)[0]) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$245
	$7 = (CALL int_32 $7((int_32 *(*($7) + [36]))) << [24])
	if ( ((int_32)int_32($7 >> [24]) < (int_32)[0]) ){ goto $label$83 }
	$27 = [106]
	goto $label$77 
	
.LABEL $label$244
	if ( ((*((*($17) + int_32($7 >> [22]))) & [1]) == 0) ){ goto $label$84 }
	$27 = [107]
	goto $label$77 
	
.LABEL $label$243
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$79 }
	$27 = [108]
	goto $label$77 
	
.LABEL $label$242
	*(($7 + [12])) = ($4 + [1])
	$7 = *($4)
	goto $label$99 
	
.LABEL $label$241
	$7 = CALL int_32 $7((int_32 *(*($7) + [40])))
	goto $label$98 
	
.LABEL $label$240
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) == (int_32)[-1]) ){ goto $label$78 }
	$27 = [114]
	goto $label$77 
	
.LABEL $label$239
	$7 = *($0)
	if ( $1 ){ goto $label$93 }
	goto $label$94 
	
.LABEL $label$238
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$91 }
	goto $label$92 
	
.LABEL $label$237
	$7 = [0]
	if ( $1 ){ goto $label$146 }
	$27 = [53]
	goto $label$77 
	
.LABEL $label$236
	$1 = [0]
	if ( $7 ){ goto $label$144 }
	goto $label$187 
	
.LABEL $label$235
	$7 = [-1]
	$4 = ($16 - $21)
	if ( ((uint_32)$4 > (uint_32)[2147483646]) ){ goto $label$114 }
	$27 = [65]
	goto $label$77 
	
.LABEL $label$234
	$7 = ($4 << [1])
	$7 = ( $7 ? [4] : $7 )
	$27 = [63]
	goto $label$77 
	
.LABEL $label$233
	$22 = CALL $647(( [0] ? $21 : ((int_32)$20 == (int_32)[61]) ), $7)
	if ( ($22 == 0) ){ goto $label$185 }
	$27 = [64]
	goto $label$77 
	
.LABEL $label$232
	$16 = ($22 + ($7 & [-4]))
	$2 = ($22 + ($2 - $21))
	$20 = [62]
	$27 = [61]
	goto $label$77 
	
.LABEL $label$231
	*($2) = $3
	$2 = ($2 + [4])
	if ( ((int_32)*($11 + [4]) >= (int_32)[1]) ){ goto $label$159 }
	goto $label$158 
	
.LABEL $label$230
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) == (int_32)[-1]) ){ goto $label$117 }
	$27 = [55]
	goto $label$77 
	
.LABEL $label$229
	$7 = *($0)
	if ( $1 ){ goto $label$149 }
	goto $label$150 
	
.LABEL $label$228
	$7 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)($7 == 0) == (int_32)$7) ){ goto $label$187 }
	$27 = [52]
	goto $label$77 
	
.LABEL $label$227
	$1 = ( [0] ? $1 : $7 )
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 != (int_32)*($7 + [16])) ){ goto $label$142 }
	$27 = [50]
	goto $label$77 
	
.LABEL $label$226
	$7 = CALL int_32 $7((int_32 *(*($7) + [36])))
	if ( ((int_32)*($11 + [87]) != (int_32)($7 & [255])) ){ goto $label$187 }
	$27 = [16]
	goto $label$77 
	
.LABEL $label$225
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$140 }
	$27 = [17]
	goto $label$77 
	
.LABEL $label$224
	*(($7 + [12])) = ($4 + [1])
	if ( ((int_32)*($11 + [4]) >= (int_32)[1]) ){ goto $label$154 }
	$27 = [7]
	goto $label$77 
	
.LABEL $label$223
	if ( ((int_32)*($9) == (int_32)*($8)) ){ goto $label$186 }
	$27 = [8]
	goto $label$77 
	
.LABEL $label$222
	$21 = $22
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$221
	CALL int_32 $7((int_32 *(*($7) + [40])))
	if ( ((int_32)*($11 + [4]) >= (int_32)[1]) ){ goto $label$156 }
	goto $label$155 
	
.LABEL $label$220
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$133 }
	goto $label$134 
	
.LABEL $label$219
	$7 = *($0)
	if ( ($7 == 0) ){ goto $label$139 }
	$27 = [19]
	goto $label$77 
	
.LABEL $label$218
	if ( ((int_32)*($7 + [12]) == (int_32)*($7 + [16])) ){ goto $label$138 }
	$27 = [20]
	goto $label$77 
	
.LABEL $label$217
	if ( ($1 == 0) ){ goto $label$137 }
	$27 = [21]
	goto $label$77 
	
.LABEL $label$216
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$131 }
	$27 = [22]
	goto $label$77 
	
.LABEL $label$215
	if ( $7 ){ goto $label$188 }
	$27 = [23]
	goto $label$77 
	
.LABEL $label$214
	$4 = *($7 + [12])
	if ( ((int_32)$4 == (int_32)*($7 + [16])) ){ goto $label$129 }
	$27 = [24]
	goto $label$77 
	
.LABEL $label$213
	$7 = (*($4) << [24])
	if ( ((int_32)int_32($7 >> [24]) >= (int_32)[0]) ){ goto $label$127 }
	goto $label$188 
	
.LABEL $label$212
	$7 = [0]
	if ( $1 ){ goto $label$132 }
	$27 = [44]
	goto $label$77 
	
.LABEL $label$211
	$1 = [0]
	if ( $7 ){ goto $label$130 }
	goto $label$188 
	
.LABEL $label$210
	if ( ((int_32)CALL int_32 $7((int_32 *(*($7) + [36]))) == (int_32)[-1]) ){ goto $label$118 }
	$27 = [46]
	goto $label$77 
	
.LABEL $label$209
	$7 = *($0)
	if ( $1 ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$208
	$7 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)($7 == 0) == (int_32)$7) ){ goto $label$188 }
	$27 = [43]
	goto $label$77 
	
.LABEL $label$207
	$1 = ( [0] ? $1 : $7 )
	$7 = *($0)
	$4 = *($7 + [12])
	if ( ((int_32)$4 != (int_32)*($7 + [16])) ){ goto $label$128 }
	$27 = [41]
	goto $label$77 
	
.LABEL $label$206
	$7 = (CALL int_32 $7((int_32 *(*($7) + [36]))) << [24])
	if ( ((int_32)int_32($7 >> [24]) < (int_32)[0]) ){ goto $label$188 }
	$27 = [25]
	goto $label$77 
	
.LABEL $label$205
	if ( ((*((*($17) + int_32($7 >> [22]))) & [64]) == 0) ){ goto $label$188 }
	$27 = [26]
	goto $label$77 
	
.LABEL $label$204
	$7 = *($9)
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$126 }
	$27 = [33]
	goto $label$77 
	
.LABEL $label$203
	$24 = ($8 + [4])
	$21 = *($24)
	$4 = [-1]
	$23 = *($8)
	$3 = ($10 - $23)
	if ( ((uint_32)$3 > (uint_32)[2147483646]) ){ goto $label$122 }
	$27 = [40]
	goto $label$77 
	
.LABEL $label$202
	$4 = ($3 << [1])
	$4 = ( $4 ? [1] : $4 )
	$27 = [34]
	goto $label$77 
	
.LABEL $label$201
	$3 = CALL $647(( $23 ? [0] : ((int_32)$21 != (int_32)[61]) ), $4)
	if ( ($3 == 0) ){ goto $label$185 }
	$27 = [35]
	goto $label$77 
	
.LABEL $label$200
	$7 = ($7 - $23)
	if ( ((int_32)$21 == (int_32)[61]) ){ goto $label$121 }
	$27 = [39]
	goto $label$77 
	
.LABEL $label$199
	*($8) = $3
	goto $label$119 
	
.LABEL $label$198
	$21 = *($8)
	*($8) = $3
	if ( ($21 == 0) ){ goto $label$120 }
	$27 = [37]
	goto $label$77 
	
.LABEL $label$197
	CALL void $21((int_32 *($24)))
	$3 = *($8)
	$27 = [38]
	goto $label$77 
	
.LABEL $label$196
	*($24) = [62]
	$7 = ($3 + $7)
	*($9) = $7
	$10 = (*($8) + $4)
	$27 = [27]
	goto $label$77 
	
.LABEL $label$195
	$4 = *($0)
	$3 = *($4 + [12])
	if ( ((int_32)$3 == (int_32)*($4 + [16])) ){ goto $label$125 }
	$27 = [28]
	goto $label$77 
	
.LABEL $label$194
	$4 = *($3)
	goto $label$124 
	
.LABEL $label$193
	$4 = CALL int_32 $4((int_32 *(*($4) + [36])))
	$7 = *($9)
	$27 = [29]
	goto $label$77 
	
.LABEL $label$192
	*($9) = ($7 + [1])
	*($7) = $4
	$4 = (*($11 + [4]) + [-1])
	*($11 + [4]) = $4
	$7 = *($0)
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)*($7 + [16])) ){ goto $label$123 }
	$27 = [30]
	goto $label$77 
	
.LABEL $label$191
	*(($7 + [12])) = ($3 + [1])
	if ( ((int_32)$4 > (int_32)[0]) ){ goto $label$161 }
	goto $label$160 
	
.LABEL $label$190
	CALL int_32 $7((int_32 *(*($7) + [40])))
	if ( ((int_32)*($11 + [4]) > (int_32)[0]) ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$189
	$19 = ($19 + [1])
	if ( ($19 <= [4]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$188
	*($5) = (*($5) | [4])
	goto $label$76 
	
.LABEL $label$187
	*($5) = (*($5) | [4])
	goto $label$76 
	
.LABEL $label$186
	*($5) = (*($5) | [4])
	goto $label$76 
	
.LABEL $label$185
	CALL $517()
	
.LABEL $label$184
	$27 = [75]
	goto $label$77 
	
.LABEL $label$183
	$27 = [76]
	goto $label$77 
	
.LABEL $label$182
	$27 = [3]
	goto $label$77 
	
.LABEL $label$181
	$27 = [76]
	goto $label$77 
	
.LABEL $label$180
	$27 = [66]
	goto $label$77 
	
.LABEL $label$179
	$27 = [5]
	goto $label$77 
	
.LABEL $label$178
	$27 = [76]
	goto $label$77 
	
.LABEL $label$177
	$27 = [3]
	goto $label$77 
	
.LABEL $label$176
	$27 = [76]
	goto $label$77 
	
.LABEL $label$175
	$27 = [3]
	goto $label$77 
	
.LABEL $label$174
	$27 = [1]
	goto $label$77 
	
.LABEL $label$173
	$27 = [0]
	goto $label$77 
	
.LABEL $label$172
	$27 = [94]
	goto $label$77 
	
.LABEL $label$171
	$27 = [76]
	goto $label$77 
	
.LABEL $label$170
	$27 = [4]
	goto $label$77 
	
.LABEL $label$169
	$27 = [5]
	goto $label$77 
	
.LABEL $label$168
	$27 = [5]
	goto $label$77 
	
.LABEL $label$167
	$27 = [5]
	goto $label$77 
	
.LABEL $label$166
	$27 = [71]
	goto $label$77 
	
.LABEL $label$165
	$27 = [6]
	goto $label$77 
	
.LABEL $label$164
	$27 = [6]
	goto $label$77 
	
.LABEL $label$163
	$27 = [18]
	goto $label$77 
	
.LABEL $label$162
	$27 = [7]
	goto $label$77 
	
.LABEL $label$161
	$27 = [18]
	goto $label$77 
	
.LABEL $label$160
	$27 = [7]
	goto $label$77 
	
.LABEL $label$159
	$27 = [9]
	goto $label$77 
	
.LABEL $label$158
	$27 = [7]
	goto $label$77 
	
.LABEL $label$157
	$27 = [7]
	goto $label$77 
	
.LABEL $label$156
	$27 = [18]
	goto $label$77 
	
.LABEL $label$155
	$27 = [7]
	goto $label$77 
	
.LABEL $label$154
	$27 = [18]
	goto $label$77 
	
.LABEL $label$153
	$27 = [57]
	goto $label$77 
	
.LABEL $label$152
	$27 = [54]
	goto $label$77 
	
.LABEL $label$151
	$27 = [53]
	goto $label$77 
	
.LABEL $label$150
	$27 = [53]
	goto $label$77 
	
.LABEL $label$149
	$27 = [12]
	goto $label$77 
	
.LABEL $label$148
	$27 = [53]
	goto $label$77 
	
.LABEL $label$147
	$27 = [12]
	goto $label$77 
	
.LABEL $label$146
	$27 = [12]
	goto $label$77 
	
.LABEL $label$145
	$27 = [51]
	goto $label$77 
	
.LABEL $label$144
	$27 = [14]
	goto $label$77 
	
.LABEL $label$143
	$27 = [50]
	goto $label$77 
	
.LABEL $label$142
	$27 = [15]
	goto $label$77 
	
.LABEL $label$141
	$27 = [16]
	goto $label$77 
	
.LABEL $label$140
	$27 = [49]
	goto $label$77 
	
.LABEL $label$139
	$27 = [48]
	goto $label$77 
	
.LABEL $label$138
	$27 = [45]
	goto $label$77 
	
.LABEL $label$137
	$27 = [44]
	goto $label$77 
	
.LABEL $label$136
	$27 = [44]
	goto $label$77 
	
.LABEL $label$135
	$27 = [21]
	goto $label$77 
	
.LABEL $label$134
	$27 = [44]
	goto $label$77 
	
.LABEL $label$133
	$27 = [21]
	goto $label$77 
	
.LABEL $label$132
	$27 = [21]
	goto $label$77 
	
.LABEL $label$131
	$27 = [42]
	goto $label$77 
	
.LABEL $label$130
	$27 = [23]
	goto $label$77 
	
.LABEL $label$129
	$27 = [41]
	goto $label$77 
	
.LABEL $label$128
	$27 = [24]
	goto $label$77 
	
.LABEL $label$127
	$27 = [25]
	goto $label$77 
	
.LABEL $label$126
	$27 = [27]
	goto $label$77 
	
.LABEL $label$125
	$27 = [32]
	goto $label$77 
	
.LABEL $label$124
	$27 = [29]
	goto $label$77 
	
.LABEL $label$123
	$27 = [31]
	goto $label$77 
	
.LABEL $label$122
	$27 = [34]
	goto $label$77 
	
.LABEL $label$121
	$27 = [36]
	goto $label$77 
	
.LABEL $label$120
	$27 = [38]
	goto $label$77 
	
.LABEL $label$119
	$27 = [38]
	goto $label$77 
	
.LABEL $label$118
	$27 = [47]
	goto $label$77 
	
.LABEL $label$117
	$27 = [56]
	goto $label$77 
	
.LABEL $label$116
	$27 = [62]
	goto $label$77 
	
.LABEL $label$115
	$27 = [61]
	goto $label$77 
	
.LABEL $label$114
	$27 = [63]
	goto $label$77 
	
.LABEL $label$113
	$27 = [92]
	goto $label$77 
	
.LABEL $label$112
	$27 = [82]
	goto $label$77 
	
.LABEL $label$111
	$27 = [68]
	goto $label$77 
	
.LABEL $label$110
	$27 = [81]
	goto $label$77 
	
.LABEL $label$109
	$27 = [68]
	goto $label$77 
	
.LABEL $label$108
	$27 = [72]
	goto $label$77 
	
.LABEL $label$107
	$27 = [73]
	goto $label$77 
	
.LABEL $label$106
	$27 = [78]
	goto $label$77 
	
.LABEL $label$105
	$27 = [83]
	goto $label$77 
	
.LABEL $label$104
	$27 = [85]
	goto $label$77 
	
.LABEL $label$103
	$27 = [87]
	goto $label$77 
	
.LABEL $label$102
	$27 = [89]
	goto $label$77 
	
.LABEL $label$101
	$27 = [89]
	goto $label$77 
	
.LABEL $label$100
	$27 = [96]
	goto $label$77 
	
.LABEL $label$99
	$27 = [97]
	goto $label$77 
	
.LABEL $label$98
	$27 = [97]
	goto $label$77 
	
.LABEL $label$97
	$27 = [116]
	goto $label$77 
	
.LABEL $label$96
	$27 = [113]
	goto $label$77 
	
.LABEL $label$95
	$27 = [112]
	goto $label$77 
	
.LABEL $label$94
	$27 = [112]
	goto $label$77 
	
.LABEL $label$93
	$27 = [101]
	goto $label$77 
	
.LABEL $label$92
	$27 = [112]
	goto $label$77 
	
.LABEL $label$91
	$27 = [101]
	goto $label$77 
	
.LABEL $label$90
	$27 = [101]
	goto $label$77 
	
.LABEL $label$89
	$27 = [102]
	goto $label$77 
	
.LABEL $label$88
	$27 = [112]
	goto $label$77 
	
.LABEL $label$87
	$27 = [104]
	goto $label$77 
	
.LABEL $label$86
	$27 = [103]
	goto $label$77 
	
.LABEL $label$85
	$27 = [103]
	goto $label$77 
	
.LABEL $label$84
	$27 = [103]
	goto $label$77 
	
.LABEL $label$83
	$27 = [103]
	goto $label$77 
	
.LABEL $label$82
	$27 = [106]
	goto $label$77 
	
.LABEL $label$81
	$27 = [103]
	goto $label$77 
	
.LABEL $label$80
	$27 = [110]
	goto $label$77 
	
.LABEL $label$79
	$27 = [109]
	goto $label$77 
	
.LABEL $label$78
	$27 = [115]
	goto $label$77 
	
.LABEL $label$76
	$3 = [0]
	$1 = [1]
	if ( (*($11 + [8]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	if ( ($18 == 0) ){ goto $label$306 }
	$7 = *($18)
	if ( ($7 & [1]) ){ goto $label$308 }
	if ( ((uint_32)uint_32($7 >> [1]) >= (uint_32)[2]) ){ goto $label$307 }
	goto $label$306 
	
.LABEL $label$308
	if ( (*($18 + [4]) <= [2]) ){ goto $label$306 }
	
.LABEL $label$307
	$17 = ($18 + [1])
	$9 = ($18 + [4])
	$19 = ($18 + [8])
	$4 = [1]
	
.LOOP $label$309:
	$7 = [0]
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$321 }
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$320 }
	$7 = $3
	
.LABEL $label$321
	if ( ($1 == 0) ){ goto $label$319 }
	goto $label$318 
	
.LABEL $label$320
	if ( ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) ){ goto $label$322 }
	$7 = *($0)
	if ( $1 ){ goto $label$318 }
	goto $label$319 
	
.LABEL $label$322
	$7 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$318 }
	
.LABEL $label$319
	$1 = [0]
	if ( $7 ){ goto $label$317 }
	goto $label$311 
	
.LABEL $label$318
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$316 }
	if ( $7 ){ goto $label$311 }
	
.LABEL $label$317
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)*($7 + [16])) ){ goto $label$315 }
	goto $label$314 
	
.LABEL $label$316
	$7 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( ((int_32)($7 == 0) == (int_32)$7) ){ goto $label$311 }
	$1 = ( [0] ? $1 : $7 )
	$7 = *($0)
	$3 = *($7 + [12])
	if ( ((int_32)$3 != (int_32)*($7 + [16])) ){ goto $label$314 }
	
.LABEL $label$315
	$3 = CALL int_32 $7((int_32 *(*($7) + [36])))
	$7 = $17
	if ( (*($18) & [1]) ){ goto $label$313 }
	goto $label$312 
	
.LABEL $label$314
	$3 = *($3)
	$7 = $17
	if ( ((*($18) & [1]) == 0) ){ goto $label$312 }
	
.LABEL $label$313
	$7 = *($19)
	
.LABEL $label$312
	if ( ((int_32)*(($7 + $4)) != (int_32)($3 & [255])) ){ goto $label$311 }
	$7 = *($0)
	$3 = *($7 + [12])
	if ( ((int_32)$3 == (int_32)*($7 + [16])) ){ goto $label$324 }
	*(($7 + [12])) = ($3 + [1])
	$4 = ($4 + [1])
	$7 = *($18)
	if ( ($7 & [1]) ){ goto $label$323 }
	goto $label$310 
	
.LABEL $label$324
	CALL int_32 $7((int_32 *(*($7) + [40])))
	$4 = ($4 + [1])
	$7 = *($18)
	if ( (($7 & [1]) == 0) ){ goto $label$310 }
	
.LABEL $label$323
	if ( ($4 <= *($9)) ){ goto $label$309 }
	goto $label$306 
	
.LABEL $label$311
	*($5) = (*($5) | [4])
	goto $label$4 
	
.LABEL $label$310
	if ( ($4 <= uint_32($7 >> [1])) ){ goto $label$309 }
	
.LABEL $label$306
	$3 = [1]
	if ( ((int_32)$21 == (int_32)$2) ){ goto $label$3 }
	$17 = ($7 & [1])
	$7 = *($11 + [72])
	if ( (( *($11 + [76]) ? uint_32($7 >> [1]) : $17 ) == 0) ){ goto $label$3 }
	$2 = ($2 + [-4])
	$19 = ((uint_32)$2 <= (uint_32)$21)
	if ( $19 ){ goto $label$325 }
	$1 = $2
	$0 = $21
	
.LOOP $label$326:
	$7 = *($0)
	*($0) = *($1)
	*($1) = $7
	$1 = ($1 + [-4])
	$0 = ($0 + [4])
	if ( ($0 <= $1) ){ goto $label$326 }
	$7 = *($11 + [72])
	$17 = ($7 & [1])
	
.LABEL $label$325
	$3 = [1]
	$1 = ( *(($11 + [80])) ? (($11 + [72]) | [1]) : $17 )
	$0 = *($1)
	$4 = (((int_32)$0 > (int_32)[0]) & ((int_32)$0 != (int_32)[127]))
	if ( $19 ){ goto $label$328 }
	$17 = ($1 + ( *($11 + [76]) ? uint_32($7 >> [1]) : $17 ))
	$7 = $21
	
.LOOP $label$329:
	if ( (($4 & [1]) == 0) ){ goto $label$330 }
	if ( ((int_32)*($7) != (int_32)int_32(($0 << [24]) >> [24])) ){ goto $label$327 }
	
.LABEL $label$330
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($17 - $1) > (int_32)[1]) )
	$0 = *($1)
	$4 = (((int_32)$0 > (int_32)[0]) & ((int_32)$0 != (int_32)[127]))
	$7 = ($7 + [4])
	if ( ($7 <= $2) ){ goto $label$329 }
	
.LABEL $label$328
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($2) + [-1]) <= $0) ){ goto $label$3 }
	
.LABEL $label$327
	*($5) = (*($5) | [4])
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	$22 = $21
	$1 = [1]
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($11 + [16])))
	
.LABEL $label$1
	if ( (*($11 + [24]) & $1) ){ goto $label$339 }
	$1 = [1]
	if ( (*($11 + [40]) & [1]) ){ goto $label$338 }
	goto $label$337 
	
.LABEL $label$339
	CALL _ZdlPv(*(($11 + [32])))
	$1 = [1]
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$337 }
	
.LABEL $label$338
	CALL _ZdlPv(*(($11 + [48])))
	if ( ((*($11 + [56]) & $1) == 0) ){ goto $label$336 }
	goto $label$335 
	
.LABEL $label$337
	if ( (*($11 + [56]) & $1) ){ goto $label$335 }
	
.LABEL $label$336
	if ( (*($11 + [72]) & [1]) ){ goto $label$334 }
	goto $label$333 
	
.LABEL $label$335
	CALL _ZdlPv(*(($11 + [64])))
	if ( ((*($11 + [72]) & [1]) == 0) ){ goto $label$333 }
	
.LABEL $label$334
	CALL _ZdlPv(*(($11 + [80])))
	if ( $22 ){ goto $label$332 }
	goto $label$331 
	
.LABEL $label$333
	if ( ($22 == 0) ){ goto $label$331 }
	
.LABEL $label$332
	CALL void $22((int_32 $20))
	
.LABEL $label$331
	$global$0 = ($11 + [496])
	$7
	$27
	(unreachable)
	return $3
}

void .FUNC $300 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($1)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)*($5 + [12]) == (int_32)*($5 + [16])) ){ goto $label$7 }
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = [0]
	if ( $2 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) == (int_32)[-1]) ){ goto $label$9 }
	$5 = *($1)
	if ( $2 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$9
	$5 = [0]
	*($1) = [0]
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$6
	$2 = [0]
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$10 }
	if ( $5 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$10
	$5 = ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])
	if ( (((int_32)($5 == 0) ^ (int_32)$5) == 0) ){ goto $label$3 }
	$2 = ( [0] ? $2 : $5 )
	
.LABEL $label$4
	$5 = *($1)
	$6 = *($5 + [12])
	if ( ((int_32)$6 == (int_32)*($5 + [16])) ){ goto $label$2 }
	$5 = *($6)
	goto $label$1 
	
.LABEL $label$3
	*($3) = (*($3) | [6])
	return 
	
.LABEL $label$2
	$5 = CALL int_32 $5((int_32 *(*($5) + [36])))
	
.LABEL $label$1
	if ( ((int_32)CALL int_32 $4((int_32 int_32(($5 << [24]) >> [24])), (int_32 [0]), (int_32 *(*($4) + [36]))) != (int_32)[37]) ){ goto $label$20 }
	$5 = *($1)
	$4 = *($5 + [12])
	if ( ((int_32)$4 == (int_32)*($5 + [16])) ){ goto $label$19 }
	*(($5 + [12])) = ($4 + [1])
	if ( ((int_32)*($5 + [12]) != (int_32)*($5 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	*($3) = (*($3) | [4])
	return 
	
.LABEL $label$19
	CALL int_32 $5((int_32 *(*($5) + [40])))
	$5 = *($1)
	if ( ($5 == 0) ){ goto $label$16 }
	if ( ((int_32)*($5 + [12]) == (int_32)*($5 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ($2 == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) == (int_32)[-1]) ){ goto $label$15 }
	$5 = *($1)
	if ( $2 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	$5 = [0]
	if ( $2 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$5 = [0]
	*($1) = [0]
	if ( $2 ){ goto $label$13 }
	
.LABEL $label$14
	if ( $5 ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$21 }
	if ( ($5 == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$21
	if ( ((int_32)($5 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) ){ goto $label$11 }
	
.LABEL $label$12
	*($3) = (*($3) | [2])
	
.LABEL $label$11
}

int_32 .FUNC $633 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [0]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$2 = ([1] - $2)
	
.LOOP $label$4:
	$5 = *($1)
	if ( ((int_32)($4 & [255]) != (int_32)$5) ){ goto $label$2 }
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ($5 == 0) ){ goto $label$2 }
	$2 = ($2 + [1])
	$1 = ($1 + [1])
	$4 = *($0)
	$0 = ($0 + [1])
	if ( $4 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	$3 = $4
	
.LABEL $label$1
	return (($3 & [255]) - *($1))
}

int_32 .FUNC $429 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = *($1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	if ( *([0] + [11460]) ){ goto $label$5 }
	$3 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $3
	goto $label$4 
	
.LABEL $label$5
	$3 = *([0] + [11456])
	
.LABEL $label$4
	$4 = CALL $557($4, $3)
	$3 = *($1)
	$4 = ( ($3 + [32]) ? $3 : $4 )
	
.LABEL $label$3
	*($1) = $4
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	$1 = $2
	
.LABEL $label$1
	return $1
}

int_32 .FUNC $208 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $209($0, $1, $2, $3, $4, $5)
}

int_32 .FUNC $209 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $210($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

int_32 .FUNC $637 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	if ( ((uint_32)int_32(($0 - $1) >> [2]) >= (uint_32)$2) ){ goto $label$2 }
	$3 = (($2 << [2]) + [-4])
	$1 = ($1 + $3)
	$3 = ($0 + $3)
	
.LOOP $label$3:
	*($3) = *($1)
	$1 = ($1 + [-4])
	$3 = ($3 + [-4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = $0
	
.LOOP $label$4:
	*($3) = *($1)
	$3 = ($3 + [4])
	$1 = ($1 + [4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$4 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $636 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = $0
	
.LOOP $label$2:
	*($3) = *($1)
	$3 = ($3 + [4])
	$1 = ($1 + [4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $635 (int_32 $0)
{
	int_32 $1
	$1 = ($0 + [-4])
	
.LOOP $label$1:
	$1 = ($1 + [4])
	if ( *($1) ){ goto $label$1 }
	return int_32(($1 - $0) >> [2])
}

int_32 .FUNC $634 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL $628($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $202 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$7 = ($global$0 - [112])
	$global$0 = $7
	$8 = [0]
	$9 = $7
	$10 = [0]
	$11 = ((int_32)($3 - $2) / (int_32)[12])
	if ( ($11 <= [101]) ){ goto $label$2 }
	$10 = CALL $643($11)
	$9 = $10
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$12 = ((int_32)$2 == (int_32)$3)
	if ( $12 ){ goto $label$3 }
	$8 = [0]
	$13 = $2
	$14 = $9
	
.LOOP $label$4:
	$15 = *($13)
	if ( ($15 & [1]) ){ goto $label$7 }
	if ( (uint_32($15 >> [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( *(($13 + [4])) ){ goto $label$5 }
	
.LABEL $label$6
	*($14) = [2]
	$8 = ($8 + [1])
	$11 = ($11 + [-1])
	$14 = ($14 + [1])
	$13 = ($13 + [12])
	if ( ((int_32)$3 != (int_32)$13) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($14) = [1]
	$14 = ($14 + [1])
	$13 = ($13 + [12])
	if ( ((int_32)$3 != (int_32)$13) ){ goto $label$4 }
	
.LABEL $label$3
	$16 = [0]
	
.LOOP $label$8:
	$15 = [0]
	$14 = [0]
	$13 = *($0)
	if ( ($13 == 0) ){ goto $label$16 }
	if ( ((int_32)*($13 + [12]) == (int_32)*($13 + [16])) ){ goto $label$15 }
	$14 = $13
	
.LABEL $label$16
	$13 = $14
	if ( ($1 == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)CALL int_32 $13((int_32 *(*($13) + [36]))) == (int_32)[-1]) ){ goto $label$17 }
	$14 = *($0)
	$13 = $14
	if ( $1 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$17
	$14 = [0]
	*($0) = [0]
	$13 = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$18 }
	$13 = $14
	$15 = $1
	if ( $11 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$18
	$15 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$13 = *($0)
	
.LABEL $label$13
	if ( ($11 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (((int_32)($14 == 0) ^ (int_32)($15 == 0)) == 0) ){ goto $label$11 }
	$1 = *($13 + [12])
	if ( ((int_32)$1 == (int_32)*($13 + [16])) ){ goto $label$19 }
	$13 = *($1)
	if ( $6 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$19
	$13 = CALL int_32 $13((int_32 *(*($13) + [36])))
	if ( ($6 == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ($13 == 0) ){ goto $label$25 }
	if ( ((int_32)*($13 + [12]) == (int_32)*($13 + [16])) ){ goto $label$24 }
	if ( ($15 == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$13 = [0]
	if ( $15 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)CALL int_32 $13((int_32 *(*($13) + [36]))) == (int_32)[-1]) ){ goto $label$26 }
	$13 = *($0)
	if ( $15 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$26
	$13 = [0]
	*($0) = [0]
	if ( $15 ){ goto $label$22 }
	
.LABEL $label$23
	if ( $13 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)*($15 + [12]) == (int_32)*($15 + [16])) ){ goto $label$27 }
	if ( ($13 == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$27
	if ( ((int_32)($13 == 0) ^ (int_32)((int_32)CALL int_32 $15((int_32 *(*($15) + [36]))) == (int_32)[-1])) ){ goto $label$20 }
	
.LABEL $label$21
	*($5) = (*($5) | [2])
	
.LABEL $label$20
	if ( $12 ){ goto $label$31 }
	
.LOOP $label$32:
	if ( ((int_32)*($9) == (int_32)[2]) ){ goto $label$30 }
	$9 = ($9 + [1])
	$2 = ($2 + [12])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$32 }
	
.LABEL $label$31
	*($5) = (*($5) | [4])
	if ( ($10 == 0) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	$3 = $2
	if ( ($10 == 0) ){ goto $label$28 }
	
.LABEL $label$29
	CALL $650($10)
	
.LABEL $label$28
	$global$0 = ($7 + [112])
	return $3
	
.LABEL $label$10
	$13 = CALL int_32 $4((int_32 int_32(($13 << [24]) >> [24])), (int_32 *(*($4) + [12])))
	
.LABEL $label$9
	$16 = ($16 + [1])
	$1 = $15
	if ( $12 ){ goto $label$8 }
	if ( ($6 == 0) ){ goto $label$34 }
	$17 = [0]
	$14 = $2
	$1 = $9
	
.LOOP $label$35:
	if ( ((int_32)*($1) != (int_32)[1]) ){ goto $label$36 }
	$18 = *($14)
	$19 = ($18 & [1])
	if ( $19 ){ goto $label$38 }
	$20 = ($14 + [1])
	goto $label$37 
	
.LABEL $label$38
	$20 = *(($14 + [8]))
	
.LABEL $label$37
	if ( ((int_32)($13 & [255]) != (int_32)*((($20 + $16) + [-1]))) ){ goto $label$42 }
	if ( $19 ){ goto $label$41 }
	$17 = [1]
	if ( ((int_32)uint_32($18 >> [1]) == (int_32)$16) ){ goto $label$40 }
	goto $label$36 
	
.LABEL $label$42
	*($1) = [0]
	goto $label$39 
	
.LABEL $label$41
	$17 = [1]
	if ( ((int_32)*(($14 + [4])) != (int_32)$16) ){ goto $label$36 }
	
.LABEL $label$40
	*($1) = [2]
	$17 = [1]
	$8 = ($8 + [1])
	
.LABEL $label$39
	$11 = ($11 + [-1])
	$1 = ($1 + [1])
	$14 = ($14 + [12])
	if ( ((int_32)$3 != (int_32)$14) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$36
	$1 = ($1 + [1])
	$14 = ($14 + [12])
	if ( ((int_32)$3 != (int_32)$14) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	$17 = [0]
	$1 = $2
	$14 = $9
	
.LOOP $label$43:
	if ( ((int_32)*($14) != (int_32)[1]) ){ goto $label$44 }
	if ( (*($1) & [1]) ){ goto $label$46 }
	$20 = ($1 + [1])
	goto $label$45 
	
.LABEL $label$46
	$20 = *(($1 + [8]))
	
.LABEL $label$45
	if ( ((int_32)($13 & [255]) != (int_32)(CALL int_32 $4((int_32 *((($20 + $16) + [-1]))), (int_32 *(*($4) + [12]))) & [255])) ){ goto $label$50 }
	$20 = *($1)
	if ( ($20 & [1]) ){ goto $label$49 }
	$17 = [1]
	if ( ((int_32)uint_32($20 >> [1]) == (int_32)$16) ){ goto $label$48 }
	goto $label$44 
	
.LABEL $label$50
	*($14) = [0]
	goto $label$47 
	
.LABEL $label$49
	$17 = [1]
	if ( ((int_32)*(($1 + [4])) != (int_32)$16) ){ goto $label$44 }
	
.LABEL $label$48
	*($14) = [2]
	$17 = [1]
	$8 = ($8 + [1])
	
.LABEL $label$47
	$11 = ($11 + [-1])
	
.LABEL $label$44
	$14 = ($14 + [1])
	$1 = ($1 + [12])
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$43 }
	
.LABEL $label$33
	$1 = $15
	if ( (($17 & [1]) == 0) ){ goto $label$8 }
	$13 = *($0)
	$1 = *($13 + [12])
	if ( ((int_32)$1 == (int_32)*($13 + [16])) ){ goto $label$52 }
	*(($13 + [12])) = ($1 + [1])
	$1 = $15
	if ( (($8 + $11) <= [2]) ){ goto $label$8 }
	goto $label$51 
	
.LABEL $label$52
	CALL int_32 $13((int_32 *(*($13) + [40])))
	$1 = $15
	if ( (($8 + $11) <= [2]) ){ goto $label$8 }
	
.LABEL $label$51
	$1 = $2
	$13 = $9
	
.LOOP $label$53:
	if ( ((int_32)*($13) != (int_32)[2]) ){ goto $label$54 }
	$14 = *($1)
	if ( ($14 & [1]) ){ goto $label$56 }
	if ( ((int_32)uint_32($14 >> [1]) != (int_32)$16) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	if ( ((int_32)*(($1 + [4])) == (int_32)$16) ){ goto $label$54 }
	
.LABEL $label$55
	*($13) = [0]
	$8 = ($8 + [-1])
	
.LABEL $label$54
	$13 = ($13 + [1])
	$1 = ($1 + [12])
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$53 }
	$1 = $15
	goto $label$8 
	
.LABEL $label$1
	CALL $517()
	return (unreachable)
}

int_32 .FUNC $203 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	return CALL $204($0, $1, $2, $3, $4, $5)
}

void .FUNC $200 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [11488]) + [1])
	*($0 + [4]) = $1
	*([0] + [11488]) = $1
}

void .FUNC $201 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *(($0 + [8]))
	$0 = *(*($0))
	$2 = (*($0) + int_32($1 >> [1]))
	$0 = *($0 + [4])
	if ( (($1 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($2) + $0))
	
.LABEL $label$1
	CALL void $2((int_32 $0))
}

int_32 .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = *($3)
	if ( ((int_32)$10 != (int_32)$2) ){ goto $label$1 }
	$11 = ($0 & [255])
	$12 = ((int_32)*($9 + [24]) == (int_32)$11)
	if ( $12 ){ goto $label$2 }
	if ( ((int_32)*($9 + [25]) != (int_32)$11) ){ goto $label$1 }
	
.LABEL $label$2
	*($3) = ($2 + [1])
	*($2) = ( [43] ? [45] : $12 )
	*($4) = [0]
	return [0]
	
.LABEL $label$1
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$4 }
	$6 = *($6)
	if ( (( *($6 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$4 }
	$0 = [0]
	$9 = *($8)
	if ( ((int_32)($9 - $7) > (int_32)[159]) ){ goto $label$3 }
	*($9) = *($4)
	*($8) = ($9 + [4])
	*($4) = [0]
	return [0]
	
.LABEL $label$4
	$6 = $9
	$5 = ($0 & [255])
	if ( ((int_32)*($9) == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($9 + [1]) != (int_32)$5) ){ goto $label$6 }
	$6 = ($9 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [2]) != (int_32)$6) ){ goto $label$7 }
	$6 = ($9 + [2])
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_32)*($9 + [3]) != (int_32)$6) ){ goto $label$8 }
	$6 = ($9 + [3])
	goto $label$5 
	
.LABEL $label$8
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [4]) != (int_32)$6) ){ goto $label$9 }
	$6 = ($9 + [4])
	goto $label$5 
	
.LABEL $label$9
	if ( ((int_32)*($9 + [5]) != (int_32)$6) ){ goto $label$10 }
	$6 = ($9 + [5])
	goto $label$5 
	
.LABEL $label$10
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [6]) != (int_32)$6) ){ goto $label$11 }
	$6 = ($9 + [6])
	goto $label$5 
	
.LABEL $label$11
	if ( ((int_32)*($9 + [7]) != (int_32)$6) ){ goto $label$12 }
	$6 = ($9 + [7])
	goto $label$5 
	
.LABEL $label$12
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [8]) != (int_32)$6) ){ goto $label$13 }
	$6 = ($9 + [8])
	goto $label$5 
	
.LABEL $label$13
	if ( ((int_32)*($9 + [9]) != (int_32)$6) ){ goto $label$14 }
	$6 = ($9 + [9])
	goto $label$5 
	
.LABEL $label$14
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [10]) != (int_32)$6) ){ goto $label$15 }
	$6 = ($9 + [10])
	goto $label$5 
	
.LABEL $label$15
	if ( ((int_32)*($9 + [11]) != (int_32)$6) ){ goto $label$16 }
	$6 = ($9 + [11])
	goto $label$5 
	
.LABEL $label$16
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [12]) != (int_32)$6) ){ goto $label$17 }
	$6 = ($9 + [12])
	goto $label$5 
	
.LABEL $label$17
	if ( ((int_32)*($9 + [13]) != (int_32)$6) ){ goto $label$18 }
	$6 = ($9 + [13])
	goto $label$5 
	
.LABEL $label$18
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [14]) != (int_32)$6) ){ goto $label$19 }
	$6 = ($9 + [14])
	goto $label$5 
	
.LABEL $label$19
	if ( ((int_32)*($9 + [15]) != (int_32)$6) ){ goto $label$20 }
	$6 = ($9 + [15])
	goto $label$5 
	
.LABEL $label$20
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [16]) != (int_32)$6) ){ goto $label$21 }
	$6 = ($9 + [16])
	goto $label$5 
	
.LABEL $label$21
	if ( ((int_32)*($9 + [17]) != (int_32)$6) ){ goto $label$22 }
	$6 = ($9 + [17])
	goto $label$5 
	
.LABEL $label$22
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [18]) != (int_32)$6) ){ goto $label$23 }
	$6 = ($9 + [18])
	goto $label$5 
	
.LABEL $label$23
	if ( ((int_32)*($9 + [19]) != (int_32)$6) ){ goto $label$24 }
	$6 = ($9 + [19])
	goto $label$5 
	
.LABEL $label$24
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [20]) != (int_32)$6) ){ goto $label$25 }
	$6 = ($9 + [20])
	goto $label$5 
	
.LABEL $label$25
	if ( ((int_32)*($9 + [21]) != (int_32)$6) ){ goto $label$26 }
	$6 = ($9 + [21])
	goto $label$5 
	
.LABEL $label$26
	$6 = ($0 & [255])
	if ( ((int_32)*($9 + [22]) != (int_32)$6) ){ goto $label$27 }
	$6 = ($9 + [22])
	goto $label$5 
	
.LABEL $label$27
	if ( ((int_32)*($9 + [23]) != (int_32)$6) ){ goto $label$28 }
	$6 = ($9 + [23])
	goto $label$5 
	
.LABEL $label$28
	$0 = ($0 & [255])
	if ( ((int_32)*($9 + [24]) != (int_32)$0) ){ goto $label$29 }
	$6 = ($9 + [24])
	goto $label$5 
	
.LABEL $label$29
	$6 = ( ($9 + [25]) ? ($9 + [26]) : ((int_32)*($9 + [25]) == (int_32)$0) )
	
.LABEL $label$5
	$0 = [-1]
	$9 = ($6 - $9)
	if ( ((int_32)$9 > (int_32)[23]) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[8]) ){ goto $label$33 }
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$32 }
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$31 }
	
.LABEL $label$33
	if ( ((int_32)$9 >= (int_32)$1) ){ goto $label$3 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$9 >= (int_32)[22]) ){ goto $label$30 }
	
.LABEL $label$31
	*($3) = ($10 + [1])
	*($10) = *(($9 + [22720]))
	*($4) = (*($4) + [1])
	return [0]
	
.LABEL $label$30
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$3 }
	if ( ((int_32)($10 - $2) > (int_32)[2]) ){ goto $label$3 }
	$0 = [-1]
	if ( ((int_32)*(($10 + [-1])) != (int_32)[48]) ){ goto $label$3 }
	*($4) = [0]
	*($3) = ($10 + [1])
	*($10) = *(($9 + [22720]))
	return [0]
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $207 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [16])
	$global$0 = $4
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$5 }
	$5 = *(CALL $564())
	*(CALL $564()) = [0]
	if ( (*([0] + [11460]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	*($2) = [4]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $7
	
.LABEL $label$3
	$6 = CALL $627($0, ($4 + [12]), $3)
	$0 = *(CALL $564())
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((int_32)*($4 + [12]) == (int_32)$1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	*(CALL $564()) = $5
	if ( ((int_32)*($4 + [12]) != (int_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)[34]) ){ goto $label$9 }
	*($2) = [4]
	$0 = [2147483647]
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$1 }
	$global$0 = ($4 + [16])
	return [-2147483648]
	
.LABEL $label$9
	if ( ((int_64)$6 > (int_64)-2147483649) ){ goto $label$10 }
	*($2) = [4]
	$global$0 = ($4 + [16])
	return [-2147483648]
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)2147483648) ){ goto $label$11 }
	*($2) = [4]
	$global$0 = ($4 + [16])
	return [2147483647]
	
.LABEL $label$11
	$global$0 = ($4 + [16])
	return (CASTING uint_32)(uint_64 $6)
	
.LABEL $label$6
	*($2) = [4]
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	$global$0 = ($4 + [16])
	return $0
}

int_32 .FUNC $204 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $207($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

void .FUNC $205 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL $151(($4 + [8]), $1)
	$1 = *($4 + [8])
	$5 = (CASTING uint_64)(uint_32 [59])
	*($4 + [20 align=4]) = $5
	*($4 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$1 }
	*($4 + [40]) = ($4 + [16])
	*($4 + [32]) = ($4 + [40])
	CALL $516([11500], ($4 + [32]), [60])
	
.LABEL $label$1
	$1 = *(((*($1 + [16]) + (*([0] + [11504]) << [2])) + [-4]))
	CALL int_32 $1((int_32 [22720]), (int_32 [22746]), (int_32 $2), (int_32 *(*($1) + [32])))
	$2 = *($4 + [8])
	*($4 + [20 align=4]) = $5
	*($4 + [16]) = [11540]
	if ( ((int_32)*([0] + [11540]) == (int_32)[-1]) ){ goto $label$2 }
	*($4 + [40]) = ($4 + [16])
	*($4 + [32]) = ($4 + [40])
	CALL $516([11540], ($4 + [32]), [60])
	
.LABEL $label$2
	$2 = *(((*($2 + [16]) + (*([0] + [11544]) << [2])) + [-4]))
	*($3) = CALL int_32 $2((int_32 *(*($2) + [16])))
	CALL void $0((int_32 $2), (int_32 *(*($2) + [20])))
	$0 = *($2 + [4])
	*(($2 = *($4 + [8])) + [4]) = ($0 + [-1])
	if ( ($0 == 0) ){ goto $label$3 }
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$3
	CALL void $2((int_32 *(*($2) + [8])))
	$global$0 = ($4 + [48])
}

int_32 .FUNC $558 (int_32 $0)
{
	if ( ((uint_32)$0 > (uint_32)[131071]) ){ goto $label$1 }
	return (uint_32(*((((*((uint_32($0 >> [8]) + [26256])) << [5]) | (uint_32($0 >> [3]) & [31])) + [26256])) >> ($0 & [7])) & [1])
	
.LABEL $label$1
	return ($0 <= [196606])
}

void .FUNC $8 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	$2 = ($global$0 - [224])
	$global$0 = $2
	CALL require_auth(*($0 + [368]))
	$3 = ($0 + [120])
	$5 = *(($0 + [148]))
	$4 = *(($0 + [144]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [128])), (int_64)3617214760481587200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $57($3, $6)
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$5 = [0]
	$8 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($8, [10696])
	CALL $60($0, *($7 + [24]))
	*($2 + [160]) = (int_64)3617214756542218240
	*($2 + [152]) = *($0)
	$9 = *($7 + [16])
	$10 = *(($0 + [368]))
	$11 = *($7 + [8])
	if ( ((int_64)$11 == (int_64)0) ){ goto $label$8 }
	$4 = *([0] + [10176])
	
.LOOP $label$10:
	*((($2 + [104]) + ($6 = $5))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$9 }
	$11 = ((int_64)$11 << (int_64)5)
	if ( ((int_64)$11 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($2 + [64])) = [0]
	*($2 + [56]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$7 }
	*($2 + [56]) = ($5 << [1])
	$4 = (($2 + [56]) | [1])
	goto $label$6 
	
.LABEL $label$8
	*(($2 + [64])) = [0]
	*($2 + [56]) = (int_64)0
	*($2 + [56]) = [0]
	$6 = (($2 + [56]) | [1])
	goto $label$5 
	
.LABEL $label$7
	$12 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($12)
	*($2 + [56]) = ($12 | [1])
	*($2 + [64]) = $4
	*($2 + [60]) = $5
	
.LABEL $label$6
	$12 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$11:
	*(($4 + $6)) = *((($2 + [104]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$12 != (int_32)$6) ){ goto $label$11 }
	$6 = ($4 + $5)
	
.LABEL $label$5
	*($6) = [0]
	*(($2 + [48])) = [0]
	*($2 + [40]) = (int_64)0
	$6 = CALL $632([9975])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$27 }
	*($2 + [40]) = ($6 << [1])
	$4 = (($2 + [40]) | [1])
	$5 = $4
	if ( $6 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$4 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($2 + [40]) = ($4 | [1])
	*($2 + [48]) = $5
	*($2 + [44]) = $6
	$4 = (($2 + [40]) | [1])
	
.LABEL $label$26
	CALL memcpy($5, [9975], $6)
	
.LABEL $label$25
	*(($5 + $6)) = [0]
	$6 = *($2 + [40])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [56]), ( *($2 + [48]) ? $4 : $5 ), ( *($2 + [44]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*((($2 + [72]) + [8])) = *($5)
	*($2 + [72]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	CALL $547(($2 + [24]), $1)
	$6 = *($2 + [24])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [72]), ( *($2 + [32]) ? (($2 + [24]) | [1]) : $5 ), ( *($2 + [28]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*((($2 + [88]) + [8])) = *($5)
	*($2 + [88]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	*((($2 + [8]) + [8])) = [0]
	*($2 + [8]) = (int_64)0
	$6 = CALL $632([10717])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$23 }
	$4 = ($7 + [24])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$30 }
	*($2 + [8]) = ($6 << [1])
	$12 = (($2 + [8]) | [1])
	$5 = $12
	if ( $6 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$12 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($12)
	*($2 + [8]) = ($12 | [1])
	*($2 + [16]) = $5
	*($2 + [12]) = $6
	$12 = (($2 + [8]) | [1])
	
.LABEL $label$29
	CALL memcpy($5, [10717], $6)
	
.LABEL $label$28
	*(($5 + $6)) = [0]
	$6 = *($2 + [8])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [88]), ( *($2 + [16]) ? $12 : $5 ), ( *($2 + [12]) ? uint_32($6 >> [1]) : $5 ))
	$5 = *($6 + [8])
	*($6 + [8]) = [0]
	$11 = *($6)
	*($6) = (int_64)0
	$1 = *(($4 + [8]))
	$13 = *($4)
	*(($2 + [144])) = $5
	*(($2 + [128])) = $1
	*($2 + [104]) = *($0)
	*($2 + [112]) = $10
	*($2 + [120]) = $13
	*($2 + [136]) = $11
	$6 = CALL $61(($2 + [168]), ($2 + [152]), $9, (int_64)-3617168760277827584, ($2 + [104]))
	CALL $62(($2 + [208]), $6)
	$5 = *($2 + [208])
	CALL send_inline($5, (*($2 + [212]) - $5))
	$5 = *($2 + [208])
	if ( ($5 == 0) ){ goto $label$31 }
	*($2 + [212]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$31
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$32 }
	*(($6 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$32
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$33 }
	*(($6 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$33
	if ( (*($2 + [136]) & [1]) ){ goto $label$35 }
	if ( (*($2 + [8]) & [1]) ){ goto $label$34 }
	goto $label$22 
	
.LABEL $label$35
	CALL _ZdlPv(*(($2 + [144])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$34
	CALL _ZdlPv(*(($2 + [16])))
	$6 = [1]
	if ( ((*($2 + [88]) & [1]) == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$24
	CALL $526(($2 + [40]))
	
.LABEL $label$23
	CALL $526(($2 + [8]))
	
.LABEL $label$22
	$6 = [1]
	if ( (*($2 + [88]) & [1]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( (*($2 + [24]) & $6) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL _ZdlPv(*($2 + [96]))
	if ( ((*($2 + [24]) & $6) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL _ZdlPv(*(($2 + [32])))
	$6 = [1]
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$6 = [1]
	if ( (*($2 + [72]) & [1]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($2 + [40]) & $6) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL _ZdlPv(*($2 + [80]))
	if ( ((*($2 + [40]) & $6) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL _ZdlPv(*(($2 + [48])))
	if ( (*($2 + [56]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv(*($2 + [64]))
	
.LABEL $label$12
	CALL eosio_assert($8, [9360])
	CALL eosio_assert($8, [9258])
	$6 = CALL db_next_i64(*($7 + [112]), ($2 + [104]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$36 }
	CALL $57($3, $6)
	
.LABEL $label$36
	CALL $71($3, $7)
	$global$0 = ($2 + [224])
	(unreachable)
	(unreachable)
}

void .FUNC $9 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_64 $9, int_64 $10, int_32 $11)
{
	CALL require_auth(*($0))
	CALL require_recipient($2)
}

int_32 .FUNC $6 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [456]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8736])
	CALL memcpy(($4 + [456]), $2, [8])
	$3 = ($2 + $7)
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $27(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [456])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $650($2)
	
.LABEL $label$6
	CALL $28($8)
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $7 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [280])
	$5 = *(($0 + [308]))
	$4 = *(($0 + [304]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [8]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [288])), (int_64)-6219583600791126016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $50($3, $6)
	CALL eosio_assert(((int_32)*($7 + [8]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$6 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($6, [9624])
	CALL eosio_assert($6, [9360])
	CALL eosio_assert($6, [9258])
	$6 = CALL db_next_i64(*($7 + [12]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $50($3, $6)
	
.LABEL $label$5
	CALL $51($3, $7)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $4 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [456]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8736])
	CALL memcpy(($4 + [456]), $2, [8])
	$3 = ($2 + $7)
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $27(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [456])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $650($2)
	
.LABEL $label$6
	CALL $28($8)
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $5 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL require_auth(*($0 + [368]))
	$3 = ($0 + [120])
	$5 = *(($0 + [148]))
	$4 = *(($0 + [144]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [128])), (int_64)3617214760481587200, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $57($3, $6)
	CALL eosio_assert(((int_32)*($7 + [108]) == (int_32)$3), [9052])
	
.LABEL $label$1
	$5 = [0]
	$8 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($8, [10696])
	$9 = *($7 + [8])
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$8 }
	$4 = *([0] + [10176])
	
.LOOP $label$10:
	*((($2 + [104]) + ($6 = $5))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$9 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$9 }
	$9 = ((int_64)$9 << (int_64)5)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($2 + [216])) = [0]
	*($2 + [208]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$7 }
	*($2 + [208]) = ($5 << [1])
	$4 = (($2 + [208]) | [1])
	goto $label$6 
	
.LABEL $label$8
	*(($2 + [216])) = [0]
	*($2 + [208]) = (int_64)0
	*($2 + [208]) = [0]
	$6 = (($2 + [208]) | [1])
	goto $label$5 
	
.LABEL $label$7
	$10 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($10)
	*($2 + [208]) = ($10 | [1])
	*($2 + [216]) = $4
	*($2 + [212]) = $5
	
.LABEL $label$6
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$11:
	*(($4 + $6)) = *((($2 + [104]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$11 }
	$6 = ($4 + $5)
	
.LABEL $label$5
	$5 = [0]
	*($6) = [0]
	CALL $60($0, *($7 + [24]))
	*($2 + [160]) = (int_64)3617214756542218240
	*($2 + [152]) = *($0)
	$11 = *($7 + [16])
	$12 = *(($0 + [368]))
	$9 = *(($7 + [8]))
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$15 }
	$4 = *([0] + [10176])
	
.LOOP $label$17:
	*((($2 + [104]) + ($6 = $5))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$9 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$5 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$16 }
	$9 = ((int_64)$9 << (int_64)5)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$17 }
	
.LABEL $label$16
	*(($2 + [64])) = [0]
	*($2 + [56]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$14 }
	*($2 + [56]) = ($5 << [1])
	$4 = (($2 + [56]) | [1])
	goto $label$13 
	
.LABEL $label$15
	*((($2 + [56]) + [8])) = [0]
	*($2 + [56]) = (int_64)0
	*($2 + [56]) = [0]
	$6 = (($2 + [56]) | [1])
	goto $label$12 
	
.LABEL $label$14
	$10 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($10)
	*($2 + [56]) = ($10 | [1])
	*($2 + [64]) = $4
	*($2 + [60]) = $5
	
.LABEL $label$13
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$18:
	*(($4 + $6)) = *((($2 + [104]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$18 }
	$6 = ($4 + $5)
	
.LABEL $label$12
	*($6) = [0]
	*(($2 + [48])) = [0]
	*($2 + [40]) = (int_64)0
	$6 = CALL $632([9975])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$34 }
	*($2 + [40]) = ($6 << [1])
	$4 = (($2 + [40]) | [1])
	$5 = $4
	if ( $6 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$4 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($2 + [40]) = ($4 | [1])
	*($2 + [48]) = $5
	*($2 + [44]) = $6
	$4 = (($2 + [40]) | [1])
	
.LABEL $label$33
	CALL memcpy($5, [9975], $6)
	
.LABEL $label$32
	*(($5 + $6)) = [0]
	$6 = *($2 + [40])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [56]), ( *($2 + [48]) ? $4 : $5 ), ( *($2 + [44]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*((($2 + [72]) + [8])) = *($5)
	*($2 + [72]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	CALL $547(($2 + [24]), $1)
	$6 = *($2 + [24])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [72]), ( *($2 + [32]) ? (($2 + [24]) | [1]) : $5 ), ( *($2 + [28]) ? uint_32($6 >> [1]) : $5 ))
	$5 = ($6 + [8])
	*((($2 + [88]) + [8])) = *($5)
	*($2 + [88]) = *($6)
	*($6) = (int_64)0
	*($5) = [0]
	*((($2 + [8]) + [8])) = [0]
	*($2 + [8]) = (int_64)0
	$6 = CALL $632([11040])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$30 }
	$4 = ($7 + [24])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$37 }
	*($2 + [8]) = ($6 << [1])
	$10 = (($2 + [8]) | [1])
	$5 = $10
	if ( $6 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$10 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($10)
	*($2 + [8]) = ($10 | [1])
	*($2 + [16]) = $5
	*($2 + [12]) = $6
	$10 = (($2 + [8]) | [1])
	
.LABEL $label$36
	CALL memcpy($5, [11040], $6)
	
.LABEL $label$35
	*(($5 + $6)) = [0]
	$6 = *($2 + [8])
	$5 = ($6 & [1])
	$6 = CALL $536(($2 + [88]), ( *($2 + [16]) ? $10 : $5 ), ( *($2 + [12]) ? uint_32($6 >> [1]) : $5 ))
	$5 = *($6 + [8])
	*($6 + [8]) = [0]
	$9 = *($6)
	*($6) = (int_64)0
	$1 = *(($4 + [8]))
	$13 = *($4)
	*(($2 + [144])) = $5
	*(($2 + [128])) = $1
	*($2 + [104]) = *($0)
	*($2 + [112]) = $12
	*($2 + [120]) = $13
	*($2 + [136]) = $9
	$6 = CALL $61(($2 + [168]), ($2 + [152]), $11, (int_64)-3617168760277827584, ($2 + [104]))
	CALL $62(($2 + [224]), $6)
	$5 = *($2 + [224])
	CALL send_inline($5, (*($2 + [228]) - $5))
	$5 = *($2 + [224])
	if ( ($5 == 0) ){ goto $label$38 }
	*($2 + [228]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$38
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$39 }
	*(($6 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$39
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$40 }
	*(($6 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$40
	if ( (*($2 + [136]) & [1]) ){ goto $label$42 }
	if ( (*($2 + [8]) & [1]) ){ goto $label$41 }
	goto $label$29 
	
.LABEL $label$42
	CALL _ZdlPv(*(($2 + [144])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$29 }
	
.LABEL $label$41
	CALL _ZdlPv(*(($2 + [16])))
	$6 = [1]
	if ( ((*($2 + [88]) & [1]) == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$31
	CALL $526(($2 + [40]))
	
.LABEL $label$30
	CALL $526(($2 + [8]))
	
.LABEL $label$29
	$6 = [1]
	if ( (*($2 + [88]) & [1]) ){ goto $label$27 }
	
.LABEL $label$28
	if ( (*($2 + [24]) & $6) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL _ZdlPv(*($2 + [96]))
	if ( ((*($2 + [24]) & $6) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL _ZdlPv(*(($2 + [32])))
	$6 = [1]
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$6 = [1]
	if ( (*($2 + [72]) & [1]) ){ goto $label$23 }
	
.LABEL $label$24
	if ( (*($2 + [40]) & $6) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL _ZdlPv(*($2 + [80]))
	if ( ((*($2 + [40]) & $6) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL _ZdlPv(*(($2 + [48])))
	if ( (*($2 + [56]) & [1]) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	if ( ((*($2 + [56]) & [1]) == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL _ZdlPv(*($2 + [64]))
	
.LABEL $label$19
	CALL eosio_assert($8, [9360])
	CALL eosio_assert($8, [9258])
	$6 = CALL db_next_i64(*($7 + [112]), ($2 + [104]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$43 }
	CALL $57($3, $6)
	
.LABEL $label$43
	CALL $71($3, $7)
	if ( ((*($2 + [208]) & [1]) == 0) ){ goto $label$44 }
	CALL _ZdlPv(*($2 + [216]))
	
.LABEL $label$44
	$global$0 = ($2 + [240])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$4 }
	CALL eosio_assert([0], [8508])
	$3 = [12]
	goto $label$3 
	
.LABEL $label$4
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$5:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$7 }
	$7 = [0]
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$8 }
	$7 = ($7 + [-48])
	goto $label$6 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [-91])
	goto $label$6 
	
.LABEL $label$9
	$7 = [0]
	CALL eosio_assert([0], [8628])
	$4 = *($0)
	
.LABEL $label$6
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$1
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$10 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8557])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8628])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$10
	return $0
}

void .FUNC $3 (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = $1
	CALL require_auth(*($0))
	$1 = *($0)
	*($2 + [16]) = ($2 + [24])
	CALL $49(($2 + [8]), ($0 + [280]), $1, ($2 + [16]))
	$global$0 = ($2 + [32])
}

void .FUNC memory ()
{
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [352])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$2 }
	*($3 + [336]) = [8192]
	*($3 + [340]) = CALL $632([8192])
	*($3 + [160]) = *($3 + [336])
	CALL $2(($3 + [344]), ($3 + [160]))
	if ( ((int_64)$1 == (int_64)6138663591592764928) ){ goto $label$2 }
	*($3 + [320]) = [8231]
	*($3 + [324]) = CALL $632([8231])
	*($3 + [152]) = *($3 + [320])
	CALL $2(($3 + [328]), ($3 + [152]))
	if ( ((int_64)$1 == (int_64)-3795279497609865936) ){ goto $label$2 }
	*($3 + [304]) = [8401]
	*($3 + [308]) = CALL $632([8401])
	*($3 + [144]) = *($3 + [304])
	CALL $2(($3 + [312]), ($3 + [144]))
	if ( ((int_64)$1 != (int_64)4301877912145143680) ){ goto $label$1 }
	
.LABEL $label$2
	*($3 + [296]) = [8425]
	*($3 + [300]) = CALL $632([8425])
	*($3 + [136]) = *($3 + [296])
	CALL $2(($3 + [344]), ($3 + [136]))
	if ( ((int_64)$2 <= (int_64)3626181449533095935) ){ goto $label$16 }
	if ( ((int_64)$2 > (int_64)4923678890773566335) ){ goto $label$15 }
	if ( ((int_64)$2 > (int_64)3626399668466352127) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)3626181449533095936) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)3626333793311637504) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [1]
	*($3 + [72]) = *($3 + [232])
	CALL $4($0, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$16
	if ( ((int_64)$2 <= (int_64)-4994130327835885569) ){ goto $label$14 }
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-4994130327835885568) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-4129425593461227520) ){ goto $label$1 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [2]
	*($3 + [120]) = *($3 + [176])
	CALL $6($0, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$15
	if ( ((int_64)$2 > (int_64)5378299923513475071) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)4923678890773566336) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)5378234048358760448) ){ goto $label$1 }
	*($3 + [228]) = [0]
	*($3 + [224]) = [3]
	*($3 + [80]) = *($3 + [224])
	CALL $4($0, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$14
	if ( ((int_64)$2 == (int_64)-7297674945816461312) ){ goto $label$3 }
	if ( ((int_64)$2 == (int_64)-5918507413919206528) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-5001342335392940032) ){ goto $label$1 }
	*($3 + [204]) = [0]
	*($3 + [200]) = [4]
	*($3 + [104]) = *($3 + [200])
	CALL $6($0, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_64)$2 == (int_64)3626399668466352128) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)4229853260945440768) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [5]
	*($3 + [112]) = *($3 + [184])
	CALL $10($0, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3075276119992054512) ){ goto $label$1 }
	*($3 + [260]) = [0]
	*($3 + [256]) = [6]
	*($3 + [48]) = *($3 + [256])
	CALL $12($0, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)5378299923513475072) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)8421049960203129232) ){ goto $label$1 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [7]
	*($3 + [24]) = *($3 + [280])
	CALL $14($0, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [268]) = [0]
	*($3 + [264]) = [8]
	*($3 + [40]) = *($3 + [264])
	CALL $16($0, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [212]) = [0]
	*($3 + [208]) = [9]
	*($3 + [96]) = *($3 + [208])
	CALL $18($0, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [220]) = [0]
	*($3 + [216]) = [10]
	*($3 + [88]) = *($3 + [216])
	CALL $16($0, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [172]) = [0]
	*($3 + [168]) = [11]
	*($3 + [128]) = *($3 + [168])
	CALL $6($0, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [252]) = [0]
	*($3 + [248]) = [12]
	*($3 + [56]) = *($3 + [248])
	CALL $22($0, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [288]) = [8192]
	*($3 + [292]) = CALL $632([8192])
	*($3 + [16]) = *($3 + [288])
	CALL $2(($3 + [344]), ($3 + [16]))
	CALL eosio_assert(((int_64)$1 == (int_64)6138663591592764928), [8459])
	*($3 + [196]) = [0]
	*($3 + [192]) = [13]
	*($3 + [8]) = *($3 + [192])
	CALL $24($0, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [244]) = [0]
	*($3 + [240]) = [14]
	*($3 + [64]) = *($3 + [240])
	CALL $6($0, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [276]) = [0]
	*($3 + [272]) = [15]
	*($3 + [32]) = *($3 + [272])
	CALL $14($0, $1, ($3 + [32]))
	
.LABEL $label$1
	CALL $566([0])
	$global$0 = ($3 + [352])
}

int_32 .FUNC $14 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$3 = ($global$0 - [656])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [496]) + [32]))) = [0]
	*(($8 = (($4 + [496]) + [24]))) = (int_64)0
	*(($9 = (($4 + [496]) + [16]))) = (int_64)0
	*(($10 = (($4 + [496]) + [8]))) = (int_64)0
	*($4 + [496]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[33]), [8736])
	CALL memcpy(($4 + [496]), $2, [34])
	$11 = ($2 + $7)
	*((($4 + [48]) + [8])) = $11
	*($4 + [68]) = ($2 + [34])
	*($4 + [64]) = $2
	*($4 + [72]) = $11
	*($4 + [48]) = *($4 + [64])
	$11 = CALL $27(($4 + [80]), $0, $1, ($4 + [48]))
	*(($12 = (($4 + [536]) + [32]))) = *($3)
	*(($3 = (($4 + [536]) + [24]))) = *($8)
	*(($8 = (($4 + [536]) + [16]))) = *($9)
	*(($9 = (($4 + [536]) + [8]))) = *($10)
	*($4 + [536]) = *($4 + [496])
	*((($4 + [576]) + [32])) = *($12)
	*((($4 + [576]) + [24])) = *($3)
	*((($4 + [576]) + [16])) = *($8)
	*((($4 + [576]) + [8])) = *($9)
	*($4 + [576]) = *($4 + [536])
	$3 = (($4 + [80]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*(($5 = (($4 + [616]) + [32]))) = *((($4 + [576]) + [32]))
	$0 = *((($4 + [576]) + [24]))
	*((($4 + [616]) + [24])) = $0
	$1 = *((($4 + [576]) + [16]))
	*((($4 + [616]) + [16])) = $1
	$13 = *((($4 + [576]) + [8]))
	*((($4 + [616]) + [8])) = $13
	*((($4 + [8]) + [8])) = $13
	*((($4 + [8]) + [16])) = $1
	*((($4 + [8]) + [24])) = $0
	*((($4 + [8]) + [32])) = *($5)
	$0 = *($4 + [576])
	*($4 + [8]) = $0
	*($4 + [616]) = $0
	CALL void $3((int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $650($2)
	
.LABEL $label$5
	CALL $28($11)
	$global$0 = ($4 + [656])
	return [1]
}

void .FUNC $15 (int_32 $0)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $16 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = $2
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $27(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $650($2)
	
.LABEL $label$6
	CALL $28($8)
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $17 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	$4 = ($global$0 - [576])
	$global$0 = $4
	CALL require_auth(*($0 + [368]))
	$5 = ($0 + [120])
	$7 = *(($0 + [148]))
	$6 = *(($0 + [144]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($9 + [108]) == (int_32)$5), [9052])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [128])), (int_64)3617214760481587200, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $57($5, $8)
	CALL eosio_assert(((int_32)*($9 + [108]) == (int_32)$5), [9052])
	
.LABEL $label$1
	$10 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($10, [9677])
	$8 = CALL $58(($0 + [200]), (int_64)1, [9696])
	*(($7 = (($4 + [512]) + [40]))) = *(($8 + [40]))
	*(($6 = (($4 + [512]) + [32]))) = *(($8 + [32]))
	*(($11 = (($4 + [512]) + [24]))) = *(($8 + [24]))
	*(($12 = (($4 + [512]) + [16]))) = *(($8 + [16]))
	*(($13 = (($4 + [512]) + [8]))) = *(($8 + [8]))
	*($4 + [512]) = *($8)
	*((($4 + [472]) + [32])) = *($7)
	*((($4 + [472]) + [24])) = *($6)
	*((($4 + [472]) + [16])) = *($11)
	*((($4 + [472]) + [8])) = *($12)
	*($4 + [472]) = *($13)
	$11 = ($9 + [64])
	CALL assert_recover_key($11, $2, [66], ($4 + [472]), [34])
	*($4 + [464]) = *($9 + [24])
	$14 = *($9 + [40])
	CALL sha256($2, [66], ($4 + [432]))
	$8 = CALL _Znaj([2])
	if ( (*($3) & [1]) ){ goto $label$6 }
	*($8) = *(($3 + [8]))
	$7 = ($3 + [1])
	goto $label$5 
	
.LABEL $label$6
	$7 = *(($3 + [8]))
	*($8) = *($7 + [7])
	
.LABEL $label$5
	*($8 + [1]) = *($7 + [4])
	$15 = CALL $626($8, [0], [16])
	if ( (uint_64)(((int_64)$15 + (int_64)-1) <= (int_64)100) ){ goto $label$7 }
	$15 = (CASTING int_64)(int_32 (((int_32)(((((((*($4 + [433]) + *($4 + [432])) + *($4 + [434])) + *($4 + [435])) + *($4 + [436])) + *($4 + [437])) + *($4 + [438])) + *($4 + [439])) % (int_32)[100]) + [1]))
	
.LABEL $label$7
	*($4 + [424]) = (int_64)0
	*($4 + [416]) = *($9 + [8])
	$16 = *($9 + [48])
	$17 = *($9 + [56])
	*($4 + [408]) = *(($9 + [32]))
	$12 = ($0 + [160])
	$18 = *($0 + [80])
	$19 = *($9 + [16])
	$7 = *(($0 + [188]))
	$3 = *(($0 + [184]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$11:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$18) ){ goto $label$10 }
	$7 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$8 = CALL db_find_i64(*($12), *(($0 + [168])), (int_64)7235159551874301952, $18)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $29($12, $8)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9800])
	$20 = (int_64)0
	$21 = (int_64)0
	$18 = *(($0 + [368]))
	if ( ((int_64)$16 != (int_64)$18) ){ goto $label$16 }
	if ( ((int_64)$17 != (int_64)$18) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$21 = ((uint_64)((int_64)*($6 + [8]) * (int_64)*($4 + [464])) / (uint_64)(int_64)10000)
	if ( ((int_64)$17 == (int_64)$18) ){ goto $label$14 }
	
.LABEL $label$15
	$18 = *($0 + [88])
	$7 = *(($0 + [188]))
	$3 = *(($0 + [184]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$20:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$18) ){ goto $label$19 }
	$7 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$18 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	goto $label$17 
	
.LABEL $label$18
	$6 = [0]
	$8 = CALL db_find_i64(*(($0 + [160])), *(($0 + [168])), (int_64)7235159551874301952, $18)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$17 }
	$6 = CALL $29($12, $8)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	
.LABEL $label$17
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9827])
	$20 = ((uint_64)((int_64)*($6 + [8]) * (int_64)*($4 + [464])) / (uint_64)(int_64)10000)
	if ( (uint_64)($15 <= $14) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( ((uint_64)$15 >= (uint_64)$14) ){ goto $label$12 }
	
.LABEL $label$13
	*($4 + [424]) = ((uint_64)((int_64)((uint_64)((int_64))((int_64)10000 - *($0 + [32])) * (int_64)100) / (uint_64)((int_64)$14 + (int_64)-1)) * (int_64)*($4 + [464])) / (uint_64)(int_64)10000)
	
.LABEL $label$12
	$18 = *($0 + [72])
	$7 = *(($0 + [188]))
	$3 = *(($0 + [184]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$24:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$18) ){ goto $label$23 }
	$7 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$22 }
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	goto $label$21 
	
.LABEL $label$22
	$6 = [0]
	$8 = CALL db_find_i64(*(($0 + [160])), *(($0 + [168])), (int_64)7235159551874301952, $18)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$21 }
	$6 = CALL $29($12, $8)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$12), [9052])
	
.LABEL $label$21
	$8 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9863])
	$22 = *($4 + [424])
	$18 = *($4 + [464])
	CALL $59($0, $18, $22)
	CALL $60($0, $18)
	$23 = (int_64)0
	if ( ((int_64)$22 == (int_64)0) ){ goto $label$25 }
	*($4 + [400]) = (int_64)3617214756542218240
	*($4 + [392]) = *($0)
	$23 = *($4 + [408])
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10056])
	$18 = (uint_64)$23 >> (uint_64)(int_64)8)
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$24 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$18 = $24
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$29
	$18 = $24
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$30 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$7 = [0]
	
.LABEL $label$26
	CALL eosio_assert($7, [10105])
	*(($4 + [368])) = [0]
	*($4 + [360]) = (int_64)0
	$8 = CALL $632([9888])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$42 }
	*($4 + [360]) = ($8 << [1])
	$7 = (($4 + [360]) | [1])
	if ( $8 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [360]) = ($6 | [1])
	*($4 + [368]) = $7
	*($4 + [364]) = $8
	
.LABEL $label$41
	CALL memcpy($7, [9888], $8)
	
.LABEL $label$40
	*(($7 + $8)) = [0]
	CALL $547(($4 + [344]), $1)
	$8 = *($4 + [344])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [360]), ( *($4 + [352]) ? (($4 + [344]) | [1]) : $7 ), ( *($4 + [348]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [376]) + [8])) = *($7)
	*($4 + [376]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [328]) + [8])) = [0]
	*($4 + [328]) = (int_64)0
	$8 = CALL $632([9948])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$38 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$45 }
	*($4 + [328]) = ($8 << [1])
	$6 = (($4 + [328]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [328]) = ($6 | [1])
	*($4 + [336]) = $7
	*($4 + [332]) = $8
	$6 = (($4 + [328]) | [1])
	
.LABEL $label$44
	CALL memcpy($7, [9948], $8)
	
.LABEL $label$43
	*(($7 + $8)) = [0]
	$8 = *($4 + [328])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [376]), ( *($4 + [336]) ? $6 : $7 ), ( *($4 + [332]) ? uint_32($8 >> [1]) : $7 ))
	$18 = *($8)
	*($8) = (int_64)0
	$7 = *($8 + [8])
	*($8 + [8]) = [0]
	*(($4 + [56])) = $23
	*(($4 + [72])) = $7
	*($4 + [32]) = *($0)
	*($4 + [40]) = *($4 + [416])
	*($4 + [48]) = $22
	*($4 + [64]) = $18
	$8 = CALL $61(($4 + [264]), ($4 + [392]), $19, (int_64)-3617168760277827584, ($4 + [32]))
	CALL $62(($4 + [560]), $8)
	$7 = *($4 + [560])
	CALL send_inline($7, (*($4 + [564]) - $7))
	$7 = *($4 + [560])
	if ( ($7 == 0) ){ goto $label$46 }
	*($4 + [564]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$46
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$47 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$47
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$48 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$48
	if ( (*($4 + [64]) & [1]) ){ goto $label$50 }
	if ( (*($4 + [328]) & [1]) ){ goto $label$49 }
	goto $label$37 
	
.LABEL $label$50
	CALL _ZdlPv(*(($4 + [72])))
	if ( ((*($4 + [328]) & [1]) == 0) ){ goto $label$37 }
	
.LABEL $label$49
	CALL _ZdlPv(*(($4 + [336])))
	$8 = [1]
	if ( ((*($4 + [376]) & [1]) == 0) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$39
	CALL $526(($4 + [360]))
	
.LABEL $label$38
	CALL $526(($4 + [328]))
	
.LABEL $label$37
	$8 = [1]
	if ( (*($4 + [376]) & [1]) ){ goto $label$35 }
	
.LABEL $label$36
	if ( (*($4 + [344]) & $8) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL _ZdlPv(*($4 + [384]))
	if ( ((*($4 + [344]) & $8) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL _ZdlPv(*(($4 + [352])))
	if ( (*($4 + [360]) & [1]) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL _ZdlPv(*($4 + [368]))
	
.LABEL $label$31
	$23 = *($4 + [424])
	$18 = *($4 + [464])
	
.LABEL $label$25
	$22 = *($4 + [408])
	CALL $63($0, $18, $22)
	$18 = CALL current_time()
	*(($4 + [292])) = (int_64)0
	*(($4 + [308])) = (int_64)0
	*(($4 + [316])) = (int_64)0
	*($4 + [276]) = [0]
	*($4 + [280]) = [0]
	*($4 + [284 align=4]) = (int_64)0
	*($4 + [300 align=4]) = (int_64)0
	*($4 + [264]) = ((CASTING uint_32)(uint_64 ((uint_64)$18 / (uint_64)(int_64)1000000)) + [60])
	*($4 + [400]) = (int_64)3617214756542218240
	*($4 + [392]) = *($0)
	*($4 + [376]) = (int_64)4229853260945440768
	CALL eosio_assert((uint_64)(((int_64)$23 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [10056])
	$18 = (uint_64)$22 >> (uint_64)(int_64)8)
	$3 = ($9 + [24])
	$13 = ($4 + [300])
	$8 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$24 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$54 }
	$18 = $24
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$54
	$18 = $24
	
.LOOP $label$55:
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$52 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$55 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$7 = [0]
	
.LABEL $label$51
	CALL eosio_assert($7, [10105])
	$25 = *($0 + [408])
	CALL eosio_assert([1], [10056])
	$12 = ($9 + [96])
	$18 = (uint_64)$25 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$58:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$57 }
	$24 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$59 }
	$18 = $24
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$59
	$18 = $24
	
.LOOP $label$60:
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$57 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$60 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	$7 = [0]
	
.LABEL $label$56
	CALL eosio_assert($7, [10105])
	*(($4 + [64])) = *(($3 + [8]))
	$18 = *($3)
	*(($4 + [80])) = $22
	*($4 + [32]) = $1
	*($4 + [48]) = $19
	*($4 + [40]) = *($4 + [416])
	*($4 + [56]) = $18
	*($4 + [72]) = $23
	$6 = CALL $527(($4 + [88]), $12)
	*(($4 + [136])) = *(($11 + [24]))
	*(($4 + [128])) = *(($11 + [16]))
	*(($4 + [120])) = *(($11 + [8]))
	*($4 + [112]) = *($11)
	CALL memcpy(($4 + [144]), $2, [66])
	*(($4 + [240])) = $25
	*($4 + [224]) = $15
	*($4 + [216]) = $14
	*($4 + [232]) = (int_64)0
	$7 = *(($4 + [304]))
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [308]))) ){ goto $label$65 }
	$18 = *($0)
	*($7 + [8]) = *($4 + [376])
	*($7) = $18
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$8 = CALL _Znwj([16])
	*($7 + [16]) = $8
	$11 = ($8 + [16])
	*($3) = $11
	*(($8 + [8])) = *((($4 + [392]) + [8]))
	*($8) = *($4 + [392])
	*(($7 + [20])) = $11
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = *($6)
	$6 = ( *(($4 + [92])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($6 + [186])
	$18 = (CASTING uint_64)(uint_32 $6)
	$6 = ($7 + [28])
	
.LOOP $label$66:
	$8 = ($8 + [1])
	$18 = (uint_64)$18 >> (uint_64)(int_64)7
	if ( ((int_64)$18) != (int_64)0) ){ goto $label$66 }
	if ( ($8 == 0) ){ goto $label$64 }
	CALL $64($6, $8)
	$6 = *(($7 + [32]))
	$8 = *(($7 + [28]))
	goto $label$63 
	
.LABEL $label$65
	CALL $65($13, ($4 + [392]), $0, ($4 + [376]), ($4 + [32]))
	if ( (*($4 + [88]) & [1]) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$6 = [0]
	$8 = [0]
	
.LABEL $label$63
	*($4 + [564]) = $8
	*($4 + [560]) = $8
	*($4 + [568]) = $6
	*($4 + [344]) = ($4 + [560])
	*($4 + [360]) = ($4 + [32])
	CALL $66(($4 + [360]), ($4 + [344]))
	*(($8 = (($4 + [264]) + [40]))) = (*($8) + [40])
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$61 }
	
.LABEL $label$62
	CALL _ZdlPv(*(($4 + [96])))
	
.LABEL $label$61
	if ( (int_64)($21 == 0) ){ goto $label$67 }
	if ( ((int_64)$19 != (int_64)*($0 + [392])) ){ goto $label$67 }
	$11 = ($0 + [392])
	*($4 + [400]) = (int_64)3617214756542218240
	*($4 + [392]) = *($0)
	*($4 + [24]) = (int_64)-3617168760277827584
	$23 = *($0 + [400])
	CALL eosio_assert([1], [10056])
	$18 = (uint_64)$23 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$24 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$71 }
	$18 = $24
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$71
	$18 = $24
	
.LOOP $label$72:
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$69 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$72 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$7 = [0]
	
.LABEL $label$68
	CALL eosio_assert($7, [10105])
	if ( ((int_64)$16 == (int_64)0) ){ goto $label$76 }
	$7 = [0]
	$6 = *([0] + [10176])
	$18 = $16
	
.LOOP $label$78:
	*((($4 + [32]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$18 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$77 }
	$18 = ((int_64)$18 << (int_64)5)
	if ( ((int_64)$18 != (int_64)0) ){ goto $label$78 }
	
.LABEL $label$77
	*(($4 + [368])) = [0]
	*($4 + [360]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$75 }
	*($4 + [360]) = ($7 << [1])
	$6 = (($4 + [360]) | [1])
	goto $label$74 
	
.LABEL $label$76
	*(($4 + [368])) = [0]
	*($4 + [360]) = (int_64)0
	*($4 + [360]) = [0]
	$8 = (($4 + [360]) | [1])
	goto $label$73 
	
.LABEL $label$75
	$3 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($3)
	*($4 + [360]) = ($3 | [1])
	*($4 + [368]) = $6
	*($4 + [364]) = $7
	
.LABEL $label$74
	$3 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$79:
	*(($6 + $8)) = *((($4 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$79 }
	$8 = ($6 + $7)
	
.LABEL $label$73
	*($8) = [0]
	*(($4 + [352])) = [0]
	*($4 + [344]) = (int_64)0
	$8 = CALL $632([9975])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$89 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$92 }
	*($4 + [344]) = ($8 << [1])
	$6 = (($4 + [344]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [344]) = ($6 | [1])
	*($4 + [352]) = $7
	*($4 + [348]) = $8
	$6 = (($4 + [344]) | [1])
	
.LABEL $label$91
	CALL memcpy($7, [9975], $8)
	
.LABEL $label$90
	*(($7 + $8)) = [0]
	$8 = *($4 + [344])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [360]), ( *($4 + [352]) ? $6 : $7 ), ( *($4 + [348]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [376]) + [8])) = *($7)
	*($4 + [376]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $547(($4 + [328]), $1)
	$8 = *($4 + [328])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [376]), ( *($4 + [336]) ? (($4 + [328]) | [1]) : $7 ), ( *($4 + [332]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [560]) + [8])) = *($7)
	*($4 + [560]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [8]) + [8])) = [0]
	*($4 + [8]) = (int_64)0
	$8 = CALL $632([9985])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$88 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$95 }
	*($4 + [8]) = ($8 << [1])
	$6 = (($4 + [8]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$95
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [8]) = ($6 | [1])
	*($4 + [16]) = $7
	*($4 + [12]) = $8
	$6 = (($4 + [8]) | [1])
	
.LABEL $label$94
	CALL memcpy($7, [9985], $8)
	
.LABEL $label$93
	*(($7 + $8)) = [0]
	$8 = *($4 + [8])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [560]), ( *($4 + [16]) ? $6 : $7 ), ( *($4 + [12]) ? uint_32($8 >> [1]) : $7 ))
	$18 = *($8)
	*($8) = (int_64)0
	$7 = *($8 + [8])
	*($8 + [8]) = [0]
	*(($4 + [56])) = $23
	*((($4 + [32]) + [40])) = $7
	*($4 + [40]) = $16
	*($4 + [32]) = *($0)
	*($4 + [64]) = $18
	*($4 + [48]) = $21
	$8 = (($4 + [264]) + [40])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [308]))) ){ goto $label$98 }
	CALL $61($7, ($4 + [392]), *($11), *($4 + [24]), ($4 + [32]))
	*($8) = (*($8) + [40])
	$8 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$98
	CALL $67($13, ($4 + [392]), $11, ($4 + [24]), ($4 + [32]))
	$8 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$96 }
	
.LABEL $label$97
	CALL _ZdlPv(*(($4 + [72])))
	
.LABEL $label$96
	if ( (*($4 + [8]) & $8) ){ goto $label$100 }
	$8 = [1]
	if ( (*($4 + [560]) & [1]) ){ goto $label$99 }
	goto $label$87 
	
.LABEL $label$100
	CALL _ZdlPv(*(($4 + [16])))
	$8 = [1]
	if ( ((*($4 + [560]) & [1]) == 0) ){ goto $label$87 }
	
.LABEL $label$99
	CALL _ZdlPv(*($4 + [568]))
	if ( ((*($4 + [328]) & $8) == 0) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$89
	CALL $526(($4 + [344]))
	
.LABEL $label$88
	CALL $526(($4 + [8]))
	
.LABEL $label$87
	if ( (*($4 + [328]) & $8) ){ goto $label$85 }
	
.LABEL $label$86
	$8 = [1]
	if ( (*($4 + [376]) & [1]) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	CALL _ZdlPv(*(($4 + [336])))
	$8 = [1]
	if ( ((*($4 + [376]) & [1]) == 0) ){ goto $label$83 }
	
.LABEL $label$84
	CALL _ZdlPv(*($4 + [384]))
	if ( ((*($4 + [344]) & $8) == 0) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	if ( (*($4 + [344]) & $8) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$67 }
	goto $label$80 
	
.LABEL $label$81
	CALL _ZdlPv(*(($4 + [352])))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$67 }
	
.LABEL $label$80
	CALL _ZdlPv(*($4 + [368]))
	
.LABEL $label$67
	if ( (int_64)($20 == 0) ){ goto $label$101 }
	if ( ((int_64)$19 != (int_64)*($0 + [392])) ){ goto $label$101 }
	$11 = ($0 + [392])
	*($4 + [400]) = (int_64)3617214756542218240
	*($4 + [392]) = *($0)
	*($4 + [24]) = (int_64)-3617168760277827584
	$19 = *($0 + [400])
	CALL eosio_assert([1], [10056])
	$18 = (uint_64)$19 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$104:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$103 }
	$24 = (uint_64)$18 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$18 & (int_64)65280) == (int_64)0) ){ goto $label$105 }
	$18 = $24
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$18 = $24
	
.LOOP $label$106:
	if ( ((int_64)((int_64)$18 & (int_64)65280) != (int_64)0) ){ goto $label$103 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$106 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$103
	$7 = [0]
	
.LABEL $label$102
	CALL eosio_assert($7, [10105])
	if ( ((int_64)$17 == (int_64)0) ){ goto $label$110 }
	$7 = [0]
	$6 = *([0] + [10176])
	$18 = $17
	
.LOOP $label$112:
	*((($4 + [32]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$18 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$111 }
	$18 = ((int_64)$18 << (int_64)5)
	if ( ((int_64)$18 != (int_64)0) ){ goto $label$112 }
	
.LABEL $label$111
	*(($4 + [368])) = [0]
	*($4 + [360]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$109 }
	*($4 + [360]) = ($7 << [1])
	$6 = (($4 + [360]) | [1])
	goto $label$108 
	
.LABEL $label$110
	*(($4 + [368])) = [0]
	*($4 + [360]) = (int_64)0
	*($4 + [360]) = [0]
	$8 = (($4 + [360]) | [1])
	goto $label$107 
	
.LABEL $label$109
	$3 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($3)
	*($4 + [360]) = ($3 | [1])
	*($4 + [368]) = $6
	*($4 + [364]) = $7
	
.LABEL $label$108
	$3 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$113:
	*(($6 + $8)) = *((($4 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$113 }
	$8 = ($6 + $7)
	
.LABEL $label$107
	*($8) = [0]
	*(($4 + [352])) = [0]
	*($4 + [344]) = (int_64)0
	$8 = CALL $632([9975])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$123 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$126 }
	*($4 + [344]) = ($8 << [1])
	$6 = (($4 + [344]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$126
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [344]) = ($6 | [1])
	*($4 + [352]) = $7
	*($4 + [348]) = $8
	$6 = (($4 + [344]) | [1])
	
.LABEL $label$125
	CALL memcpy($7, [9975], $8)
	
.LABEL $label$124
	*(($7 + $8)) = [0]
	$8 = *($4 + [344])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [360]), ( *($4 + [352]) ? $6 : $7 ), ( *($4 + [348]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [376]) + [8])) = *($7)
	*($4 + [376]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $547(($4 + [328]), $1)
	$8 = *($4 + [328])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [376]), ( *($4 + [336]) ? (($4 + [328]) | [1]) : $7 ), ( *($4 + [332]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [560]) + [8])) = *($7)
	*($4 + [560]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [8]) + [8])) = [0]
	*($4 + [8]) = (int_64)0
	$8 = CALL $632([10020])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$122 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$129 }
	*($4 + [8]) = ($8 << [1])
	$6 = (($4 + [8]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$128 }
	goto $label$127 
	
.LABEL $label$129
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($4 + [8]) = ($6 | [1])
	*($4 + [16]) = $7
	*($4 + [12]) = $8
	$6 = (($4 + [8]) | [1])
	
.LABEL $label$128
	CALL memcpy($7, [10020], $8)
	
.LABEL $label$127
	*(($7 + $8)) = [0]
	$8 = *($4 + [8])
	$7 = ($8 & [1])
	$8 = CALL $536(($4 + [560]), ( *($4 + [16]) ? $6 : $7 ), ( *($4 + [12]) ? uint_32($8 >> [1]) : $7 ))
	$18 = *($8)
	*($8) = (int_64)0
	$7 = *($8 + [8])
	*($8 + [8]) = [0]
	*(($4 + [56])) = $19
	*((($4 + [32]) + [40])) = $7
	*($4 + [40]) = $17
	*($4 + [32]) = *($0)
	*($4 + [64]) = $18
	*($4 + [48]) = $20
	$8 = (($4 + [264]) + [40])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [308]))) ){ goto $label$132 }
	CALL $61($7, ($4 + [392]), *($11), *($4 + [24]), ($4 + [32]))
	*($8) = (*($8) + [40])
	$8 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$131 }
	goto $label$130 
	
.LABEL $label$132
	CALL $67($13, ($4 + [392]), $11, ($4 + [24]), ($4 + [32]))
	$8 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$130 }
	
.LABEL $label$131
	CALL _ZdlPv(*(($4 + [72])))
	
.LABEL $label$130
	if ( (*($4 + [8]) & $8) ){ goto $label$134 }
	$8 = [1]
	if ( (*($4 + [560]) & [1]) ){ goto $label$133 }
	goto $label$121 
	
.LABEL $label$134
	CALL _ZdlPv(*(($4 + [16])))
	$8 = [1]
	if ( ((*($4 + [560]) & [1]) == 0) ){ goto $label$121 }
	
.LABEL $label$133
	CALL _ZdlPv(*($4 + [568]))
	if ( ((*($4 + [328]) & $8) == 0) ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$123
	CALL $526(($4 + [344]))
	
.LABEL $label$122
	CALL $526(($4 + [8]))
	
.LABEL $label$121
	if ( (*($4 + [328]) & $8) ){ goto $label$119 }
	
.LABEL $label$120
	$8 = [1]
	if ( (*($4 + [376]) & [1]) ){ goto $label$118 }
	goto $label$117 
	
.LABEL $label$119
	CALL _ZdlPv(*(($4 + [336])))
	$8 = [1]
	if ( ((*($4 + [376]) & [1]) == 0) ){ goto $label$117 }
	
.LABEL $label$118
	CALL _ZdlPv(*($4 + [384]))
	if ( ((*($4 + [344]) & $8) == 0) ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$117
	if ( (*($4 + [344]) & $8) ){ goto $label$115 }
	
.LABEL $label$116
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$101 }
	goto $label$114 
	
.LABEL $label$115
	CALL _ZdlPv(*(($4 + [352])))
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$101 }
	
.LABEL $label$114
	CALL _ZdlPv(*($4 + [368]))
	
.LABEL $label$101
	if ( ((int_32)*(($4 + [300])) == (int_32)*(($4 + [304]))) ){ goto $label$135 }
	*(($4 + [284])) = [1]
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = $1
	$18 = *($0)
	CALL $68(($4 + [392]), ($4 + [264]))
	$8 = *($4 + [392])
	CALL send_deferred(($4 + [32]), $18, $8, (*($4 + [396]) - $8), [0])
	$8 = *($4 + [392])
	if ( ($8 == 0) ){ goto $label$135 }
	*($4 + [396]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$135
	$18 = ((int_64)*($4 + [408]) + (int_64)*($4 + [416]))
	$11 = ($0 + [320])
	$6 = *(($0 + [348]))
	$3 = *(($0 + [344]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$139 }
	
.LOOP $label$141:
	$8 = ($6 + [-24])
	$7 = *($8)
	if ( ((int_64)((int_64)*($7 + [8]) + (int_64)*($7)) == (int_64)$18) ){ goto $label$140 }
	$6 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$141 }
	goto $label$139 
	
.LABEL $label$140
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$139 }
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)$11), [9052])
	if ( $7 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$139
	$8 = CALL db_find_i64(*($11), *(($0 + [328])), (int_64)-5003134530400288768, $18)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$137 }
	$7 = CALL $52($11, $8)
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)$11), [9052])
	
.LABEL $label$138
	$18 = *($0)
	*($4 + [32]) = $0
	*($4 + [36]) = ($4 + [464])
	*($4 + [40]) = ($4 + [424])
	CALL eosio_assert([1], [8800])
	CALL $69($11, $7, $18, ($4 + [32]))
	goto $label$136 
	
.LABEL $label$137
	$18 = *($0)
	*($4 + [40]) = $0
	*($4 + [36]) = ($4 + [408])
	*($4 + [32]) = ($4 + [416])
	*($4 + [44]) = ($4 + [464])
	*($4 + [48]) = ($4 + [424])
	CALL $70(($4 + [392]), $11, $18, ($4 + [32]))
	
.LABEL $label$136
	CALL eosio_assert($10, [9360])
	CALL eosio_assert($10, [9258])
	$8 = CALL db_next_i64(*($9 + [112]), ($4 + [32]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$142 }
	CALL $57($5, $8)
	
.LABEL $label$142
	CALL $71($5, $9)
	CALL $72(($4 + [264]))
	$global$0 = ($4 + [576])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $10 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [720])
	$global$0 = $3
	*(($4 = $3) + [712]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [512])) = (int_64)0
	*(($4 + [528])) = (int_64)0
	*(($4 + [544])) = [0]
	*(($4 + [584])) = (int_64)0
	*(($4 + [576])) = (int_64)0
	*(($4 + [568])) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [496]) = (int_64)0
	*($4 + [504]) = (int_64)0
	*($4 + [520]) = (int_64)0
	*($4 + [536]) = (int_64)0
	*($4 + [560]) = (int_64)0
	CALL memset(($4 + [592]), [0], [66])
	*(($4 + [688])) = (int_64)0
	*($4 + [672]) = (int_64)0
	*($4 + [664]) = (int_64)0
	*($4 + [680]) = (int_64)0
	*($4 + [468]) = $2
	*($4 + [464]) = $2
	*($4 + [472]) = ($2 + $5)
	*($4 + [24]) = ($4 + [464])
	*($4 + [48]) = ($4 + [480])
	CALL $81(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [472])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [464])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $27(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [712])
	CALL $82(($4 + [24]), ($4 + [480]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $650($2)
	
.LABEL $label$4
	CALL $28($3)
	if ( ((*($4 + [536]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [544])))
	
.LABEL $label$5
	$global$0 = ($4 + [720])
	return [1]
}

void .FUNC $11 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = $2
	CALL require_auth(*($0))
	$4 = ($0 + [160])
	$6 = *(($0 + [188]))
	$5 = *(($0 + [184]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [168])), (int_64)7235159551874301952, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $29($4, $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$4), [9052])
	
.LABEL $label$1
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [9004])
	$1 = *($0)
	*($3) = ($3 + [8])
	CALL eosio_assert($7, [8800])
	CALL $43($4, $8, $1, $3)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $12 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $643($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [456]) = (int_64)0
	*($4 + [448]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [8736])
	CALL memcpy(($4 + [448]), $2, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [8736])
	CALL memcpy((($4 + [448]) + [8]), ($2 + [8]), [8])
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [16])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $27(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [456])
	$1 = *($4 + [448])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $650($2)
	
.LABEL $label$6
	CALL $28($8)
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0 + [368]))
	$3 = ($0 + [160])
	$4 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [160]), *(($0 + [168])), (int_64)7235159551874301952, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $29($3, $5)
	goto $label$1 
	
.LABEL $label$2
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [8688])
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $30($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $31($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $32($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $33($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $34($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $35($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $36($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $37($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $38($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $0
	CALL $39($2, $3, $6, ($2 + [8]))
	$6 = *($0)
	*($2 + [8]) = $1
	CALL $40($2, ($0 + [200]), $6, ($2 + [8]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $554 ()
{
	return ( [4] ? [1] : *([0]) )
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $93($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $18 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [576])
	$global$0 = $3
	*(($4 = $3) + [568]) = *($2)
	$5 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$5 = CALL $643($2)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$2
	CALL read_action_data($5, $2)
	
.LABEL $label$1
	*($4 + [480]) = (int_64)0
	$3 = CALL memset((($4 + [480]) + [8]), [0], [66])
	*(($4 + [564])) = [0]
	*($4 + [556 align=4]) = (int_64)0
	*($4 + [468]) = $5
	*($4 + [464]) = $5
	*($4 + [472]) = ($5 + $2)
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [8736])
	CALL memcpy(($4 + [480]), *($4 + [468]), [8])
	*($4 + [468]) = (*($4 + [468]) + [8])
	*($4 + [24]) = ($4 + [464])
	*($4 + [52]) = ($4 + [489])
	*($4 + [48]) = $3
	*($4 + [56]) = ($4 + [490])
	*($4 + [60]) = ($4 + [491])
	*($4 + [64]) = ($4 + [492])
	*($4 + [68]) = ($4 + [493])
	*($4 + [72]) = ($4 + [494])
	*($4 + [76]) = ($4 + [495])
	*($4 + [80]) = ($4 + [496])
	*($4 + [84]) = ($4 + [497])
	*($4 + [88]) = ($4 + [498])
	*($4 + [92]) = ($4 + [499])
	*($4 + [96]) = ($4 + [500])
	*($4 + [100]) = ($4 + [501])
	*($4 + [104]) = ($4 + [502])
	*($4 + [108]) = ($4 + [503])
	*($4 + [112]) = ($4 + [504])
	*($4 + [116]) = ($4 + [505])
	*($4 + [120]) = ($4 + [506])
	*($4 + [128]) = ($4 + [508])
	*($4 + [124]) = ($4 + [507])
	*($4 + [132]) = ($4 + [509])
	*($4 + [136]) = ($4 + [510])
	*($4 + [140]) = ($4 + [511])
	*($4 + [144]) = ($4 + [512])
	*($4 + [148]) = ($4 + [513])
	*($4 + [152]) = ($4 + [514])
	*($4 + [156]) = ($4 + [515])
	*($4 + [160]) = ($4 + [516])
	*($4 + [164]) = ($4 + [517])
	*($4 + [168]) = ($4 + [518])
	*($4 + [172]) = ($4 + [519])
	*($4 + [176]) = ($4 + [520])
	*($4 + [180]) = ($4 + [521])
	*($4 + [184]) = ($4 + [522])
	*($4 + [188]) = ($4 + [523])
	*($4 + [192]) = ($4 + [524])
	*($4 + [196]) = ($4 + [525])
	*($4 + [204]) = ($4 + [527])
	*($4 + [200]) = ($4 + [526])
	*($4 + [208]) = ($4 + [528])
	*($4 + [212]) = ($4 + [529])
	*($4 + [216]) = ($4 + [530])
	*($4 + [220]) = ($4 + [531])
	*($4 + [224]) = ($4 + [532])
	*($4 + [228]) = ($4 + [533])
	*($4 + [232]) = ($4 + [534])
	*($4 + [236]) = ($4 + [535])
	*($4 + [240]) = ($4 + [536])
	*($4 + [244]) = ($4 + [537])
	*($4 + [248]) = ($4 + [538])
	*($4 + [252]) = ($4 + [539])
	*($4 + [256]) = ($4 + [540])
	*($4 + [260]) = ($4 + [541])
	*($4 + [264]) = ($4 + [542])
	*($4 + [268]) = ($4 + [543])
	*($4 + [272]) = ($4 + [544])
	*($4 + [280]) = (($4 + [480]) + [66])
	*($4 + [276]) = ($4 + [545])
	*($4 + [284]) = ($4 + [547])
	*($4 + [288]) = ($4 + [548])
	*($4 + [292]) = ($4 + [549])
	*($4 + [296]) = ($4 + [550])
	*($4 + [300]) = ($4 + [551])
	*($4 + [304]) = ($4 + [552])
	*($4 + [308]) = ($4 + [553])
	CALL $54(($4 + [48]), ($4 + [24]))
	CALL $55(($4 + [464]), ($4 + [556]))
	$3 = *($4 + [472])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [464])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $27(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [568])
	CALL $56(($4 + [24]), ($4 + [480]))
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL $650($5)
	
.LABEL $label$4
	CALL $28($3)
	if ( ((*($4 + [556]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [564])))
	
.LABEL $label$5
	$global$0 = ($4 + [576])
	return [1]
}

void .FUNC $19 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = CALL db_lowerbound_i64(*($0 + [320]), *(($0 + [328])), (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [320])
	$2 = CALL $52($3, $2)
	
.LOOP $label$2:
	CALL eosio_assert([1], [9360])
	CALL eosio_assert([1], [9258])
	$0 = [0]
	$4 = CALL db_next_i64(*($2 + [32]), ($1 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $52($3, $4)
	
.LABEL $label$3
	CALL $53($3, $2)
	$2 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($1 + [16])
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	*($0) = [2]
	CALL memset(($0 + [1]), [45], [1])
	*(($0 + [2])) = [0]
}

int_32 .FUNC $339 (int_32 $0)
{
	return [0]
}

void .FUNC $336 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

int_32 .FUNC $334 (int_32 $0)
{
	return [127]
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $332 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $333 (int_32 $0)
{
	return [127]
}

void .FUNC $330 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

int_32 .FUNC $331 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [272])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($3 + [40]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *(($3 + [48]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0)
	CALL $111(*($1), ($4 + [56]))
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[31]), [8794])
	CALL memcpy(*($0 + [4]), ($4 + [80]), [32])
	*($0 + [4]) = (*($0 + [4]) + [32])
	*($2) = *($1)
	*($2 + [12]) = ($4 + [113])
	*($2 + [8]) = ($4 + [112])
	*($2 + [16]) = ($4 + [114])
	*($2 + [20]) = ($4 + [115])
	*($2 + [24]) = ($4 + [116])
	*($2 + [28]) = ($4 + [117])
	*($2 + [32]) = ($4 + [118])
	*($2 + [36]) = ($4 + [119])
	*($2 + [40]) = ($4 + [120])
	*($2 + [44]) = ($4 + [121])
	*($2 + [48]) = ($4 + [122])
	*($2 + [52]) = ($4 + [123])
	*($2 + [56]) = ($4 + [124])
	*($2 + [60]) = ($4 + [125])
	*($2 + [64]) = ($4 + [126])
	*($2 + [68]) = ($4 + [127])
	*($2 + [72]) = ($4 + [128])
	*($2 + [76]) = ($4 + [129])
	*($2 + [80]) = ($4 + [130])
	*($2 + [88]) = ($4 + [132])
	*($2 + [84]) = ($4 + [131])
	*($2 + [92]) = ($4 + [133])
	*($2 + [96]) = ($4 + [134])
	*($2 + [100]) = ($4 + [135])
	*($2 + [104]) = ($4 + [136])
	*($2 + [108]) = ($4 + [137])
	*($2 + [112]) = ($4 + [138])
	*($2 + [116]) = ($4 + [139])
	*($2 + [120]) = ($4 + [140])
	*($2 + [124]) = ($4 + [141])
	*($2 + [128]) = ($4 + [142])
	*($2 + [132]) = ($4 + [143])
	*($2 + [136]) = ($4 + [144])
	*($2 + [140]) = ($4 + [145])
	*($2 + [144]) = ($4 + [146])
	*($2 + [148]) = ($4 + [147])
	*($2 + [152]) = ($4 + [148])
	*($2 + [156]) = ($4 + [149])
	*($2 + [164]) = ($4 + [151])
	*($2 + [160]) = ($4 + [150])
	*($2 + [168]) = ($4 + [152])
	*($2 + [172]) = ($4 + [153])
	*($2 + [176]) = ($4 + [154])
	*($2 + [180]) = ($4 + [155])
	*($2 + [184]) = ($4 + [156])
	*($2 + [188]) = ($4 + [157])
	*($2 + [192]) = ($4 + [158])
	*($2 + [196]) = ($4 + [159])
	*($2 + [200]) = ($4 + [160])
	*($2 + [204]) = ($4 + [161])
	*($2 + [208]) = ($4 + [162])
	*($2 + [212]) = ($4 + [163])
	*($2 + [216]) = ($4 + [164])
	*($2 + [220]) = ($4 + [165])
	*($2 + [224]) = ($4 + [166])
	*($2 + [228]) = ($4 + [167])
	*($2 + [232]) = ($4 + [168])
	*($2 + [240]) = ($4 + [170])
	*($2 + [236]) = ($4 + [169])
	*($2 + [244]) = ($4 + [171])
	*($2 + [248]) = ($4 + [172])
	*($2 + [252]) = ($4 + [173])
	*($2 + [256]) = ($4 + [174])
	*($2 + [260]) = ($4 + [175])
	*($2 + [264]) = ($4 + [176])
	*($2 + [268]) = ($4 + [177])
	CALL $117(($2 + [8]), $2)
	*($2 + [8]) = $4
	CALL $118(($2 + [8]), $1)
	$global$0 = ($2 + [272])
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [24])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [28])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [32])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [36])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [40])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [44])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [48])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [52])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [56])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [60])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [64])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [68])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [72])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [76])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [80])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [84])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [88])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [92])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [96])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [100])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [104])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [108])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [112])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [116])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [120])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [124])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [128])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [132])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [136])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [140])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [144])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [148])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [152])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [156])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [160])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [164])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [168])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [172])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [176])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [180])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [184])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [188])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [192])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [196])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [200])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [204])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [208])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [212])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [216])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [220])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [224])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [228])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [232])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [236])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [240])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [244])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [248])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [252])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [256])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($3 + [4]), $2, [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$3 = *($0 + [260])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [8794])
	CALL memcpy(*($0 + [4]), $3, [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [8707])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $643($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [8736])
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [8736])
	CALL memcpy(($3 + [24]), ($2 + [8]), [8])
	$6 = *($3 + [24])
	*($5 + [8]) = $6
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	*($3 + [24]) = $6)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [16]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $115(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $650($2)
	
.LABEL $label$6
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8794])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8794])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [8794])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [8794])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [8794])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $553($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [96]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [104])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [8794])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [8794])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $448 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = [0]
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = [0]
	$6 = ($0 + [8])
	$7 = [1]
	
.LOOP $label$2:
	$0 = CALL $576(*($6))
	$8 = CALL $577($2, ($3 - $2), $1)
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $576($0)
	
.LABEL $label$3
	$0 = [1]
	if ( ($8 == 0) ){ goto $label$4 }
	if ( (($8 + [2]) <= [2]) ){ goto $label$1 }
	$0 = $8
	
.LABEL $label$4
	$5 = ($0 + $5)
	$2 = ($2 + $0)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$1 }
	$0 = ($7 <= $4)
	$7 = ($7 + [1])
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $449 (int_32 $0)
{
	int_32 $1
	$0 = *($0 + [8])
	if ( ($0 == 0) ){ goto $label$1 }
	$0 = CALL $576($0)
	$1 = CALL $554()
	if ( ($0 == 0) ){ goto $label$2 }
	CALL $576($0)
	
.LABEL $label$2
	return $1
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC $556 (int_32 $0, int_32 $1)
{
	return (($0 + [-97]) <= [26])
}

int_32 .FUNC $631 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($1)
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_32)$3 != (int_32)($2 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$2 = *($1)
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$3 == (int_32)($2 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($3 - ($2 & [255]))
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($3 + [184]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [192]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($0 + [200]), [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = *(($0 + [208]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $1) > (int_32)[7]), [8794])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $642 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $643($1)
	
.LABEL $label$2
	*(CALL $564()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $643(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $650($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $630 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	($0 + CALL $632($0))
	$2 = ($1 & [255])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 == (int_32)($1 & [255])) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ($0 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = *($0)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$2 = ((int_32)$2 * (int_32)[16843009])
	
.LOOP $label$6:
	$3 = ((int_32)$3 ^ (int_32)$2)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$3 = *($0 + [4])
	$0 = ($0 + [4])
	if ( (((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = ($0 + [-1])
	
.LOOP $label$7:
	$0 = ($0 + [1])
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 != (int_32)($1 & [255])) ){ goto $label$7 }
	
.LABEL $label$2
	return $0
	return .LABEL $label$1
}

void .FUNC $299 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($4 + [8])
	$6 = [0]
	$4 = *($1)
	if ( $4 ){ goto $label$2 }
	$7 = [1]
	goto $label$1 
	
.LABEL $label$2
	$7 = [22]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$65 
	
.LABEL $label$67
	*(($4 + [12])) = ($6 + [1])
	$6 = [0]
	$4 = *($1)
	if ( ($4 == 0) ){ goto $label$32 }
	$7 = [22]
	goto $label$3 
	
.LABEL $label$66
	if ( ((int_32)*($4 + [12]) == (int_32)*($4 + [16])) ){ goto $label$35 }
	$7 = [0]
	goto $label$3 
	
.LABEL $label$65
	$6 = $4
	goto $label$36 
	
.LABEL $label$64
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) == (int_32)[-1]) ){ goto $label$4 }
	$7 = [24]
	goto $label$3 
	
.LABEL $label$63
	$6 = *($1)
	goto $label$37 
	
.LABEL $label$62
	$6 = [0]
	*($1) = [0]
	$7 = [1]
	goto $label$3 
	
.LABEL $label$61
	if ( ($2 == 0) ){ goto $label$31 }
	$7 = [2]
	goto $label$3 
	
.LABEL $label$60
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$30 }
	$7 = [28]
	goto $label$3 
	
.LABEL $label$59
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$29 }
	$7 = [3]
	goto $label$3 
	
.LABEL $label$58
	if ( ($6 == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$57
	$2 = [0]
	if ( ($6 == 0) ){ goto $label$26 }
	$7 = [17]
	goto $label$3 
	
.LABEL $label$56
	$4 = *($1)
	$6 = *($4 + [12])
	if ( ((int_32)$6 == (int_32)*($4 + [16])) ){ goto $label$6 }
	$7 = [18]
	goto $label$3 
	
.LABEL $label$55
	$4 = (*($6) << [24])
	if ( ((int_32)int_32($4 >> [24]) >= (int_32)[0]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$54
	$4 = (CALL int_32 $4((int_32 *(*($4) + [36]))) << [24])
	if ( ((int_32)int_32($4 >> [24]) < (int_32)[0]) ){ goto $label$24 }
	$7 = [19]
	goto $label$3 
	
.LABEL $label$53
	if ( ((*((*($5) + int_32($4 >> [22]))) & [1]) == 0) ){ goto $label$25 }
	$7 = [20]
	goto $label$3 
	
.LABEL $label$52
	$4 = *($1)
	$6 = *($4 + [12])
	if ( ((int_32)$6 != (int_32)*($4 + [16])) ){ goto $label$5 }
	$7 = [26]
	goto $label$3 
	
.LABEL $label$51
	CALL int_32 $4((int_32 *(*($4) + [40])))
	$6 = [0]
	$4 = *($1)
	if ( $4 ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$50
	$4 = *($1)
	if ( ($4 == 0) ){ goto $label$21 }
	$7 = [5]
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)*($4 + [12]) == (int_32)*($4 + [16])) ){ goto $label$20 }
	$7 = [6]
	goto $label$3 
	
.LABEL $label$48
	if ( ($2 == 0) ){ goto $label$19 }
	$7 = [7]
	goto $label$3 
	
.LABEL $label$47
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$13 }
	$7 = [8]
	goto $label$3 
	
.LABEL $label$46
	if ( ($4 == 0) ){ goto $label$12 }
	$7 = [9]
	goto $label$3 
	
.LABEL $label$45
	*($3) = (*($3) | [2])
	$7 = [10]
	goto $label$3 
	
.LABEL $label$44
	return 
	
.LABEL $label$43
	$4 = [0]
	if ( $2 ){ goto $label$14 }
	$7 = [12]
	goto $label$3 
	
.LABEL $label$42
	if ( $4 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$41
	if ( ((int_32)CALL int_32 $4((int_32 *(*($4) + [36]))) == (int_32)[-1]) ){ goto $label$7 }
	$7 = [14]
	goto $label$3 
	
.LABEL $label$40
	$4 = *($1)
	if ( $2 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$39
	if ( (((int_32)($4 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$38
	$4 = [0]
	*($1) = [0]
	if ( $2 ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$37
	$7 = [1]
	goto $label$3 
	
.LABEL $label$36
	$7 = [1]
	goto $label$3 
	
.LABEL $label$35
	$7 = [23]
	goto $label$3 
	
.LABEL $label$34
	$7 = [1]
	goto $label$3 
	
.LABEL $label$33
	$7 = [22]
	goto $label$3 
	
.LABEL $label$32
	$7 = [1]
	goto $label$3 
	
.LABEL $label$31
	$7 = [29]
	goto $label$3 
	
.LABEL $label$30
	$7 = [3]
	goto $label$3 
	
.LABEL $label$29
	$7 = [29]
	goto $label$3 
	
.LABEL $label$28
	$7 = [17]
	goto $label$3 
	
.LABEL $label$27
	$7 = [4]
	goto $label$3 
	
.LABEL $label$26
	$7 = [4]
	goto $label$3 
	
.LABEL $label$25
	$7 = [4]
	goto $label$3 
	
.LABEL $label$24
	$7 = [4]
	goto $label$3 
	
.LABEL $label$23
	$7 = [19]
	goto $label$3 
	
.LABEL $label$22
	$7 = [4]
	goto $label$3 
	
.LABEL $label$21
	$7 = [16]
	goto $label$3 
	
.LABEL $label$20
	$7 = [13]
	goto $label$3 
	
.LABEL $label$19
	$7 = [12]
	goto $label$3 
	
.LABEL $label$18
	$7 = [12]
	goto $label$3 
	
.LABEL $label$17
	$7 = [7]
	goto $label$3 
	
.LABEL $label$16
	$7 = [12]
	goto $label$3 
	
.LABEL $label$15
	$7 = [7]
	goto $label$3 
	
.LABEL $label$14
	$7 = [7]
	goto $label$3 
	
.LABEL $label$13
	$7 = [11]
	goto $label$3 
	
.LABEL $label$12
	$7 = [10]
	goto $label$3 
	
.LABEL $label$11
	$7 = [10]
	goto $label$3 
	
.LABEL $label$10
	$7 = [9]
	goto $label$3 
	
.LABEL $label$9
	$7 = [9]
	goto $label$3 
	
.LABEL $label$8
	$7 = [10]
	goto $label$3 
	
.LABEL $label$7
	$7 = [15]
	goto $label$3 
	
.LABEL $label$6
	$7 = [27]
	goto $label$3 
	
.LABEL $label$5
	$7 = [21]
	goto $label$3 
	
.LABEL $label$4
	$7 = [25]
	goto $label$3 
	$7
}

int_32 .FUNC $298 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [48])
	$global$0 = $8
	*($4) = [0]
	*($8 + [8]) = $1
	CALL $151($8, $3)
	$9 = *($8)
	*($8 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($8 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$2 }
	*($8 + [40]) = ($8 + [16])
	*($8 + [32]) = ($8 + [40])
	CALL $516([11500], ($8 + [32]), [60])
	$1 = *($8)
	goto $label$1 
	
.LABEL $label$2
	$1 = $9
	
.LABEL $label$1
	$10 = *([0] + [11504])
	$11 = *($1 + [4])
	*($1 + [4]) = ($11 + [-1])
	$9 = *(((*($9 + [16]) + ($10 << [2])) + [-4]))
	if ( $11 ){ goto $label$3 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$3
	$1 = ($6 + [-37])
	if ( ((uint_32)$1 > (uint_32)[84]) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$43
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [4])))
	$1 = (CALL $202(($8 + [8]), $2, $1, ($1 + [288]), $9, $4, [0]) - $1)
	if ( ((int_32)$1 > (int_32)[287]) ){ goto $label$4 }
	*($5 + [16]) = ((int_32)((int_32)$1 / (int_32)[12]) % (int_32)[12])
	goto $label$4 
	
.LABEL $label$42
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]))))
	$1 = (CALL $202(($8 + [8]), $2, $1, ($1 + [168]), $9, $4, [0]) - $1)
	if ( ((int_32)$1 > (int_32)[167]) ){ goto $label$4 }
	*($5 + [24]) = ((int_32)((int_32)$1 / (int_32)[12]) % (int_32)[7])
	goto $label$4 
	
.LABEL $label$41
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((uint_32)($1 + [-1]) > (uint_32)[30]) ){ goto $label$20 }
	if ( ($9 & [4]) ){ goto $label$20 }
	*($5 + [12]) = $1
	goto $label$4 
	
.LABEL $label$40
	CALL $299($0, ($8 + [8]), $2, $4, $9)
	goto $label$4 
	
.LABEL $label$39
	CALL $300($0, ($8 + [8]), $2, $4, $9)
	goto $label$4 
	
.LABEL $label$38
	*($4) = (*($4) | [4])
	goto $label$4 
	
.LABEL $label$37
	*($8 + [16]) = (int_64)8729435559894674725
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, ($8 + [16]), ($8 + [24]))
	goto $label$4 
	
.LABEL $label$36
	*($8 + [16]) = (int_64)7216223924729501989
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, ($8 + [16]), ($8 + [24]))
	goto $label$4 
	
.LABEL $label$35
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[23]) ){ goto $label$18 }
	if ( ($9 & [4]) ){ goto $label$18 }
	*($5 + [8]) = $1
	goto $label$4 
	
.LABEL $label$34
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((uint_32)($1 + [-1]) > (uint_32)[11]) ){ goto $label$17 }
	if ( ($9 & [4]) ){ goto $label$17 }
	*($5 + [8]) = $1
	goto $label$4 
	
.LABEL $label$33
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[59]) ){ goto $label$16 }
	if ( ($9 & [4]) ){ goto $label$16 }
	*($5 + [4]) = $1
	goto $label$4 
	
.LABEL $label$32
	*(($8 + [20])) = *([0] + [23035])
	*($8 + [16]) = *([0] + [23031 align=1])
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, ($8 + [16]), ($8 + [21]))
	goto $label$4 
	
.LABEL $label$31
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[60]) ){ goto $label$15 }
	if ( ($9 & [4]) ){ goto $label$15 }
	*($5) = $1
	goto $label$4 
	
.LABEL $label$30
	*($8 + [16]) = (int_64)5991258982297782309
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, ($8 + [16]), ($8 + [24]))
	goto $label$4 
	
.LABEL $label$29
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [24])))
	$9 = *($1)
	$6 = ($9 & [1])
	$10 = ( *($1 + [8]) ? ($1 + [1]) : $6 )
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, $10, ($10 + ( *($1 + [4]) ? uint_32($9 >> [1]) : $6 )))
	goto $label$4 
	
.LABEL $label$28
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	*($5 + [20]) = ($1 + [-1900])
	goto $label$4 
	
.LABEL $label$27
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [12])))
	$9 = *($1)
	$6 = ($9 & [1])
	$10 = ( *($1 + [8]) ? ($1 + [1]) : $6 )
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, $10, ($10 + ( *($1 + [4]) ? uint_32($9 >> [1]) : $6 )))
	goto $label$4 
	
.LABEL $label$26
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [3])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[365]) ){ goto $label$14 }
	if ( ($9 & [4]) ){ goto $label$14 }
	*($5 + [28]) = $1
	goto $label$4 
	
.LABEL $label$25
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [2])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[12]) ){ goto $label$13 }
	if ( ($9 & [4]) ){ goto $label$13 }
	*($5 + [16]) = ($1 + [-1])
	goto $label$4 
	
.LABEL $label$24
	$1 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [8])))
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$12 }
	$3 = uint_32($3 >> [1])
	$6 = [1]
	$10 = *($1 + [12])
	if ( ($10 & [1]) ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$23
	*(($8 + [26])) = *([0] + [23030])
	*(($8 + [24])) = *([0] + [23028 align=1])
	*($8 + [16]) = *([0] + [23020 align=1])
	*($8 + [8]) = CALL $288($0, *($8 + [8]), $2, $3, $4, $5, ($8 + [16]), ($8 + [27]))
	goto $label$4 
	
.LABEL $label$22
	$1 = CALL int_32 $0((int_32 *($8 + [8])), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 *(*($0) + [20])))
	$global$0 = ($8 + [48])
	return $1
	
.LABEL $label$21
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	if ( ((int_32)$1 > (int_32)[68]) ){ goto $label$9 }
	$1 = ($1 + [2000])
	goto $label$8 
	
.LABEL $label$20
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$19
	$1 = CALL $297(($8 + [8]), $2, $4, $9, [1])
	$9 = *($4)
	if ( ((int_32)$1 > (int_32)[6]) ){ goto $label$10 }
	if ( ($9 & [4]) ){ goto $label$10 }
	*($5 + [24]) = $1
	goto $label$4 
	
.LABEL $label$18
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$17
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$16
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$15
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$14
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$13
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$12
	$3 = *($1 + [4])
	$6 = [1]
	$10 = *($1 + [12])
	if ( (($10 & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$11
	$11 = [0]
	if ( ((int_32)$3 == (int_32)([0] - *(($1 + [16])))) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$10
	*($4) = ($9 | [4])
	goto $label$4 
	
.LABEL $label$9
	$1 = ( ($1 + [1900]) ? $1 : ((int_32)$1 < (int_32)[100]) )
	
.LABEL $label$8
	*(($5 + [20])) = ($1 + [-1900])
	goto $label$4 
	
.LABEL $label$7
	$11 = [0]
	if ( ((int_32)$3 != (int_32)([0] - uint_32($10 >> $6))) ){ goto $label$5 }
	
.LABEL $label$6
	*($4) = (*($4) | [4])
	goto $label$4 
	
.LABEL $label$5
	$1 = (CALL $202(($8 + [8]), $2, $1, ($1 + [24]), $9, $4, $11) - $1)
	$4 = *(($5 + [8]))
	if ( ((int_32)$4 != (int_32)[12]) ){ goto $label$44 }
	if ( $1 ){ goto $label$44 }
	*(($5 + [8])) = [0]
	goto $label$4 
	
.LABEL $label$44
	if ( ((int_32)$4 > (int_32)[11]) ){ goto $label$4 }
	if ( ((int_32)$1 != (int_32)[12]) ){ goto $label$4 }
	*(($5 + [8])) = ($4 + [12])
	
.LABEL $label$4
	$1 = *($8 + [8])
	$global$0 = ($8 + [48])
	$1
	return $1
}

int_32 .FUNC $529 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $530($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $528 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $295 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11500], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11504])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [4])))
	$3 = (CALL $202(($6 + [8]), $2, $3, ($3 + [288]), $1, $4, [0]) - $3)
	if ( ((int_32)$3 > (int_32)[287]) ){ goto $label$4 }
	*($5 + [16]) = ((int_32)((int_32)$3 / (int_32)[12]) % (int_32)[12])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $294 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11500], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11504])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]))))
	$3 = (CALL $202(($6 + [8]), $2, $3, ($3 + [168]), $1, $4, [0]) - $3)
	if ( ((int_32)$3 > (int_32)[167]) ){ goto $label$4 }
	*($5 + [24]) = ((int_32)((int_32)$3 / (int_32)[12]) % (int_32)[7])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $297 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)*($5 + [12]) == (int_32)*($5 + [16])) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = [0]
	if ( $1 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) == (int_32)[-1]) ){ goto $label$9 }
	$5 = *($0)
	if ( $1 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$9
	$5 = [0]
	*($0) = [0]
	if ( $1 ){ goto $label$5 }
	
.LABEL $label$6
	$1 = [0]
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$10 }
	if ( $5 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$10
	$5 = ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])
	if ( (((int_32)($5 == 0) ^ (int_32)$5) == 0) ){ goto $label$3 }
	$1 = ( [0] ? $1 : $5 )
	
.LABEL $label$4
	$5 = *($0)
	$6 = *($5 + [12])
	if ( ((int_32)$6 == (int_32)*($5 + [16])) ){ goto $label$2 }
	$5 = *($6)
	goto $label$1 
	
.LABEL $label$3
	*($2) = (*($2) | [6])
	return [0]
	
.LABEL $label$2
	$5 = CALL int_32 $5((int_32 *(*($5) + [36])))
	
.LABEL $label$1
	$6 = ($5 << [24])
	if ( ((int_32)int_32($6 >> [24]) < (int_32)[0]) ){ goto $label$12 }
	if ( (*((*($3 + [8]) + int_32($6 >> [22]))) & [64]) ){ goto $label$11 }
	
.LABEL $label$12
	*($2) = (*($2) | [4])
	return [0]
	
.LABEL $label$11
	$7 = CALL int_32 $3((int_32 int_32(($5 << [24]) >> [24])), (int_32 [0]), (int_32 *(*($3) + [36])))
	$5 = *($0)
	$6 = *($5 + [12])
	if ( ((int_32)$6 == (int_32)*($5 + [16])) ){ goto $label$14 }
	*(($5 + [12])) = ($6 + [1])
	goto $label$13 
	
.LABEL $label$14
	CALL int_32 $5((int_32 *(*($5) + [40])))
	
.LABEL $label$13
	$8 = ($3 + [8])
	$6 = [0]
	$5 = *($0)
	if ( $5 ){ goto $label$16 }
	$9 = [1]
	goto $label$15 
	
.LABEL $label$16
	$9 = [23]
	
.LABEL $label$15
	
.LOOP $label$17:
	goto $label$80 
	
.LABEL $label$82
	*(($5 + [12])) = ($6 + [1])
	$6 = [0]
	$5 = *($0)
	if ( ($5 == 0) ){ goto $label$46 }
	$9 = [23]
	goto $label$17 
	
.LABEL $label$81
	if ( ((int_32)*($5 + [12]) == (int_32)*($5 + [16])) ){ goto $label$49 }
	$9 = [0]
	goto $label$17 
	
.LABEL $label$80
	$6 = $5
	goto $label$50 
	
.LABEL $label$79
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) == (int_32)[-1]) ){ goto $label$18 }
	$9 = [25]
	goto $label$17 
	
.LABEL $label$78
	$6 = *($0)
	goto $label$51 
	
.LABEL $label$77
	$6 = [0]
	*($0) = [0]
	$9 = [1]
	goto $label$17 
	
.LABEL $label$76
	if ( ($1 == 0) ){ goto $label$45 }
	$9 = [2]
	goto $label$17 
	
.LABEL $label$75
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$44 }
	$9 = [3]
	goto $label$17 
	
.LABEL $label$74
	$5 = $6
	$7 = ($7 + [-48])
	if ( ((int_32)$4 < (int_32)[2]) ){ goto $label$39 }
	$9 = [17]
	goto $label$17 
	
.LABEL $label$73
	if ( (((int_32)($6 == 0) ^ (int_32)($1 == 0)) == 0) ){ goto $label$43 }
	$9 = [18]
	goto $label$17 
	
.LABEL $label$72
	$6 = *($5 + [12])
	if ( ((int_32)$6 == (int_32)*($5 + [16])) ){ goto $label$20 }
	$9 = [19]
	goto $label$17 
	
.LABEL $label$71
	$5 = (*($6) << [24])
	$6 = int_32($5 >> [24])
	if ( ((int_32)$6 >= (int_32)[0]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$70
	$1 = [0]
	$5 = $6
	$7 = ($7 + [-48])
	if ( ((int_32)$4 >= (int_32)[2]) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$69
	$5 = (CALL int_32 $5((int_32 *(*($5) + [36]))) << [24])
	$6 = int_32($5 >> [24])
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$24 }
	$9 = [20]
	goto $label$17 
	
.LABEL $label$68
	if ( ((*((*($8) + int_32($5 >> [22]))) & [64]) == 0) ){ goto $label$25 }
	$9 = [21]
	goto $label$17 
	
.LABEL $label$67
	$4 = ($4 + [-1])
	$7 = (((int_32)$7 * (int_32)[10]) + CALL int_32 $3((int_32 $6), (int_32 [0]), (int_32 *(*($3) + [36]))))
	$5 = *($0)
	$6 = *($5 + [12])
	if ( ((int_32)$6 != (int_32)*($5 + [16])) ){ goto $label$19 }
	$9 = [27]
	goto $label$17 
	
.LABEL $label$66
	CALL int_32 $5((int_32 *(*($5) + [40])))
	$6 = [0]
	$5 = *($0)
	if ( $5 ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$65
	$1 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$5 = *($0)
	$7 = ($7 + [-48])
	if ( ((int_32)$4 >= (int_32)[2]) ){ goto $label$42 }
	$9 = [4]
	goto $label$17 
	
.LABEL $label$64
	if ( ($5 == 0) ){ goto $label$38 }
	$9 = [5]
	goto $label$17 
	
.LABEL $label$63
	if ( ((int_32)*($5 + [12]) != (int_32)*($5 + [16])) ){ goto $label$37 }
	$9 = [13]
	goto $label$17 
	
.LABEL $label$62
	if ( ((int_32)CALL int_32 $5((int_32 *(*($5) + [36]))) == (int_32)[-1]) ){ goto $label$21 }
	$9 = [14]
	goto $label$17 
	
.LABEL $label$61
	$5 = *($0)
	if ( $1 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$60
	$5 = [0]
	if ( $1 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$59
	$5 = [0]
	*($0) = [0]
	$9 = [6]
	goto $label$17 
	
.LABEL $label$58
	if ( ($1 == 0) ){ goto $label$36 }
	$9 = [7]
	goto $label$17 
	
.LABEL $label$57
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$31 }
	$9 = [8]
	goto $label$17 
	
.LABEL $label$56
	if ( ($5 == 0) ){ goto $label$30 }
	$9 = [9]
	goto $label$17 
	
.LABEL $label$55
	*($2) = (*($2) | [2])
	$9 = [10]
	goto $label$17 
	
.LABEL $label$54
	return $7
	
.LABEL $label$53
	if ( $5 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$52
	if ( (((int_32)($5 == 0) ^ (int_32)((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$51
	$9 = [1]
	goto $label$17 
	
.LABEL $label$50
	$9 = [1]
	goto $label$17 
	
.LABEL $label$49
	$9 = [24]
	goto $label$17 
	
.LABEL $label$48
	$9 = [1]
	goto $label$17 
	
.LABEL $label$47
	$9 = [23]
	goto $label$17 
	
.LABEL $label$46
	$9 = [1]
	goto $label$17 
	
.LABEL $label$45
	$9 = [30]
	goto $label$17 
	
.LABEL $label$44
	$9 = [29]
	goto $label$17 
	
.LABEL $label$43
	$9 = [4]
	goto $label$17 
	
.LABEL $label$42
	$9 = [17]
	goto $label$17 
	
.LABEL $label$41
	$9 = [17]
	goto $label$17 
	
.LABEL $label$40
	$9 = [4]
	goto $label$17 
	
.LABEL $label$39
	$9 = [4]
	goto $label$17 
	
.LABEL $label$38
	$9 = [16]
	goto $label$17 
	
.LABEL $label$37
	$9 = [6]
	goto $label$17 
	
.LABEL $label$36
	$9 = [12]
	goto $label$17 
	
.LABEL $label$35
	$9 = [12]
	goto $label$17 
	
.LABEL $label$34
	$9 = [7]
	goto $label$17 
	
.LABEL $label$33
	$9 = [12]
	goto $label$17 
	
.LABEL $label$32
	$9 = [7]
	goto $label$17 
	
.LABEL $label$31
	$9 = [11]
	goto $label$17 
	
.LABEL $label$30
	$9 = [10]
	goto $label$17 
	
.LABEL $label$29
	$9 = [10]
	goto $label$17 
	
.LABEL $label$28
	$9 = [9]
	goto $label$17 
	
.LABEL $label$27
	$9 = [9]
	goto $label$17 
	
.LABEL $label$26
	$9 = [10]
	goto $label$17 
	
.LABEL $label$25
	$9 = [10]
	goto $label$17 
	
.LABEL $label$24
	$9 = [10]
	goto $label$17 
	
.LABEL $label$23
	$9 = [20]
	goto $label$17 
	
.LABEL $label$22
	$9 = [10]
	goto $label$17 
	
.LABEL $label$21
	$9 = [15]
	goto $label$17 
	
.LABEL $label$20
	$9 = [28]
	goto $label$17 
	
.LABEL $label$19
	$9 = [22]
	goto $label$17 
	
.LABEL $label$18
	$9 = [26]
	goto $label$17 
	return $9
}

int_32 .FUNC $296 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [48])
	$global$0 = $6
	*($6 + [8]) = $1
	CALL $151($6, $3)
	$1 = *($6)
	*($6 + [20 align=4]) = (CASTING uint_64)(uint_32 [59])
	*($6 + [16]) = [11500]
	if ( ((int_32)*([0] + [11500]) == (int_32)[-1]) ){ goto $label$2 }
	*($6 + [40]) = ($6 + [16])
	*($6 + [32]) = ($6 + [40])
	CALL $516([11500], ($6 + [32]), [60])
	$3 = *($6)
	goto $label$1 
	
.LABEL $label$2
	$3 = $1
	
.LABEL $label$1
	$7 = *([0] + [11504])
	$8 = *($3 + [4])
	*($3 + [4]) = ($8 + [-1])
	$1 = *(((*($1 + [16]) + ($7 << [2])) + [-4]))
	if ( $8 ){ goto $label$3 }
	CALL void $3((int_32 *(*($3) + [8])))
	
.LABEL $label$3
	$3 = CALL $297(($6 + [8]), $2, $4, $1, [4])
	if ( (*($4) & [4]) ){ goto $label$4 }
	if ( ((int_32)$3 > (int_32)[68]) ){ goto $label$6 }
	$3 = ($3 + [2000])
	goto $label$5 
	
.LABEL $label$6
	$3 = ( ($3 + [1900]) ? $3 : ((int_32)$3 < (int_32)[100]) )
	
.LABEL $label$5
	*(($5 + [20])) = ($3 + [-1900])
	
.LABEL $label$4
	$3 = *($6 + [8])
	$global$0 = ($6 + [48])
	return $3
}

int_32 .FUNC $291 (int_32 $0)
{
	return [2]
}

void .FUNC $290 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $293 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($6)
	$8 = ($7 & [1])
	$6 = CALL int_32 ($0 + [8])((int_32 *(*($0 + [8]) + [20])))
	$9 = ( *($6 + [8]) ? ($6 + [1]) : $8 )
	return CALL $288($0, $1, $2, $3, $4, $5, $9, ($9 + ( *($6 + [4]) ? uint_32($7 >> [1]) : $8 )))
}

int_32 .FUNC $292 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [16])
	$global$0 = $6
	*($6 + [8]) = (int_64)5991258982297782309
	$0 = CALL $288($0, $1, $2, $3, $4, $5, ($6 + [8]), ($6 + [16]))
	$global$0 = ($6 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC $407 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *($1 + [4])
	*(($1 = *($0)) + [4]) = ($2 + [-1])
	if ( ($2 == 0) ){ goto $label$1 }
	return $0
	
.LABEL $label$1
	CALL void $1((int_32 *(*($1) + [8])))
	return $0
}

int_32 .FUNC $494 (int_32 $0)
{
	if ( (*([0] + [11592]) == 0) ){ goto $label$1 }
	return *([0] + [11588])
	
.LABEL $label$1
	if ( *([0] + [12992]) ){ goto $label$2 }
	*([0] + [12704]) = (int_64)0
	*([0] + [12712]) = (int_64)0
	*([0] + [12720]) = (int_64)0
	*([0] + [12728]) = (int_64)0
	*([0] + [12736]) = (int_64)0
	*([0] + [12744]) = (int_64)0
	*([0] + [12752]) = (int_64)0
	*([0] + [12760]) = (int_64)0
	*([0] + [12768]) = (int_64)0
	*([0] + [12776]) = (int_64)0
	*([0] + [12784]) = (int_64)0
	*([0] + [12792]) = (int_64)0
	*([0] + [12800]) = (int_64)0
	*([0] + [12808]) = (int_64)0
	*([0] + [12816]) = (int_64)0
	*([0] + [12824]) = (int_64)0
	*([0] + [12832]) = [0]
	*([0] + [12836 align=4]) = (int_64)0
	*([0] + [12844 align=4]) = (int_64)0
	*([0] + [12852 align=4]) = (int_64)0
	*([0] + [12860 align=4]) = (int_64)0
	*([0] + [12868 align=4]) = (int_64)0
	*([0] + [12876 align=4]) = (int_64)0
	*([0] + [12884 align=4]) = (int_64)0
	*([0] + [12892 align=4]) = (int_64)0
	*([0] + [12900 align=4]) = (int_64)0
	*([0] + [12908 align=4]) = (int_64)0
	*([0] + [12916 align=4]) = (int_64)0
	*([0] + [12924 align=4]) = (int_64)0
	*([0] + [12932 align=4]) = (int_64)0
	*([0] + [12940 align=4]) = (int_64)0
	*([0] + [12948 align=4]) = (int_64)0
	*([0] + [12956 align=4]) = (int_64)0
	*([0] + [12964]) = [0]
	*([0] + [12968]) = (int_64)0
	*([0] + [12976]) = (int_64)0
	*([0] + [12984]) = (int_64)0
	CALL $567([67], [0], [8192])
	*([0] + [12992]) = [1]
	
.LABEL $label$2
	CALL $532([12704], [26216])
	CALL $532([12716], [26219])
	*([0] + [11592]) = [1]
	*([0] + [11588]) = [12704]
	return [12704]
}

int_32 .FUNC $646 (int_32 $0, int_32 $1)
{
	$1 = ((int_32)$1 * (int_32)$0)
	$0 = CALL $644([14220], $1)
	CALL memset($0, [0], $1)
	return $0
}

int_32 .FUNC $557 (int_32 $0, int_32 $1)
{
	return (($0 + [-65]) <= [26])
}

int_64 .FUNC $546 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $632([8546])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8546], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $564())
	*(CALL $564()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$7 = CALL $626($4, ($3 + [12]), $2)
	$0 = CALL $564()
	$5 = *($0)
	*($0) = $6
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($3 + [12])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $544($3)
	
.LABEL $label$1
	CALL $545($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $647 (int_32 $0, int_32 $1)
{
	return CALL $648([14220], $0, $1)
}

void .FUNC $650 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [22604])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [22412]
	$3 = (((int_32)$1 * (int_32)[12]) + [22412])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $644 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $645($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8315])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $645 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [14212]) == 0) ){ goto $label$2 }
	$2 = *([0] + [14216])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [14212]) = [1]
	$2 = ($2 << [16])
	*([0] + [14216]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [14216])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [14216]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [14212]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [14212]) = [1]
	$3 = ($3 << [16])
	*([0] + [14216]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [14216])
	
.LABEL $label$10
	*([0] + [14216]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $639 (int_32 $0)
{
	*($0) = [1]
}

int_64 .FUNC $619 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $611($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $564()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $611($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [29937]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $610($0, (int_64)0)
	*(CALL $564()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $611($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $611($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $611($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $611($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [29937])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $611($0)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $611($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8222]))
	$8 = (int_64)0
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $611($0)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $611($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [29937]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $610($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [29937]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [29937]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $611($0) + [29937]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $564()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $564()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $564()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

void .FUNC $484 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL $632([9103])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($2 << [1])
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	*(($3 + $2)) = [0]
	return 
	
.LABEL $label$3
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $2
	
.LABEL $label$2
	CALL memcpy($3, [9103], $2)
	*(($3 + $2)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $526($0)
}

int_32 .FUNC $638 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = $0
	
.LOOP $label$2:
	*($3) = $1
	$3 = ($3 + [4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $198 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	*($0) = [2]
	CALL $638(($0 + [4]), [45], [1])
	*($2) = [0]
}

void .FUNC $348 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

void .FUNC $346 (int_32 $0, int_32 $1)
{
	*($0 + [8]) = [0]
	*($0) = (int_64)0
}

int_32 .FUNC $345 (int_32 $0)
{
	return [2147483647]
}

int_32 .FUNC $212 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$6 = ($global$0 - [256])
	$global$0 = $6
	$7 = (*($3 + [4]) & [74])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)[64]) ){ goto $label$3 }
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$2 }
	$8 = [16]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [8]
	goto $label$1 
	
.LABEL $label$2
	$8 = [10]
	
.LABEL $label$1
	CALL $205(($6 + [208]), $3, ($6 + [224]), ($6 + [255]))
	*($6 + [200]) = [0]
	*($6 + [192]) = (int_64)0
	CALL $533(($6 + [192]), [10], [0])
	$9 = (($6 + [192]) | [1])
	$7 = ( *($6 + [200]) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = $7
	*($6 + [12]) = ($6 + [16])
	*($6 + [8]) = [0]
	$10 = ($6 + [200])
	$3 = [0]
	if ( $1 ){ goto $label$6 }
	$12 = [1]
	goto $label$5 
	
.LABEL $label$6
	$12 = [43]
	
.LABEL $label$5
	
.LOOP $label$7:
	goto $label$103 
	
.LABEL $label$105
	*($11) = ($1 + [1])
	$1 = $3
	$3 = [0]
	if ( ($1 == 0) ){ goto $label$49 }
	$12 = [43]
	goto $label$7 
	
.LABEL $label$104
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [16])) ){ goto $label$52 }
	$12 = [0]
	goto $label$7 
	
.LABEL $label$103
	$3 = $1
	goto $label$53 
	
.LABEL $label$102
	$3 = ( [0] ? $1 : ((int_32)CALL int_32 $1((int_32 *(*($1) + [36]))) == (int_32)[-1]) )
	$12 = [1]
	goto $label$7 
	
.LABEL $label$101
	if ( ($2 == 0) ){ goto $label$48 }
	$12 = [2]
	goto $label$7 
	
.LABEL $label$100
	if ( ((int_32)*($2 + [12]) != (int_32)*($2 + [16])) ){ goto $label$47 }
	$12 = [50]
	goto $label$7 
	
.LABEL $label$99
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1]) ){ goto $label$46 }
	$12 = [3]
	goto $label$7 
	
.LABEL $label$98
	if ( ($3 == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$97
	$2 = [0]
	if ( ($3 == 0) ){ goto $label$43 }
	$12 = [37]
	goto $label$7 
	
.LABEL $label$96
	$1 = *($6 + [192])
	$1 = ( *($6 + [196]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ((int_32)*($6 + [188]) == (int_32)($7 + $1)) ){ goto $label$13 }
	$12 = [38]
	goto $label$7 
	
.LABEL $label$95
	$1 = *($3 + [12])
	if ( ((int_32)$1 == (int_32)*($3 + [16])) ){ goto $label$12 }
	$12 = [39]
	goto $label$7 
	
.LABEL $label$94
	$1 = *($1)
	goto $label$10 
	
.LABEL $label$93
	CALL $533(($6 + [192]), ($1 << [1]), [0])
	$7 = [10]
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$8 }
	$12 = [48]
	goto $label$7 
	
.LABEL $label$92
	$7 = ((*($6 + [192]) & [-2]) + [-1])
	$12 = [49]
	goto $label$7 
	
.LABEL $label$91
	CALL $533(($6 + [192]), $7, [0])
	$7 = ( *($10) ? $9 : (*($6 + [192]) & [1]) )
	*($6 + [188]) = ($7 + $1)
	$1 = *($3 + [12])
	if ( ((int_32)$1 != (int_32)*($3 + [16])) ){ goto $label$11 }
	$12 = [46]
	goto $label$7 
	
.LABEL $label$90
	$1 = CALL int_32 $3((int_32 *(*($3) + [36])))
	$12 = [40]
	goto $label$7 
	
.LABEL $label$89
	if ( CALL $206(int_32(($1 << [24]) >> [24]), $8, $7, ($6 + [188]), ($6 + [8]), *($6 + [255]), ($6 + [208]), ($6 + [16]), ($6 + [12]), ($6 + [224])) ){ goto $label$42 }
	$12 = [41]
	goto $label$7 
	
.LABEL $label$88
	$11 = ($3 + [12])
	$1 = *($11)
	if ( ((int_32)$1 != (int_32)*(($3 + [16]))) ){ goto $label$9 }
	$12 = [45]
	goto $label$7 
	
.LABEL $label$87
	CALL int_32 $3((int_32 *(*($3) + [40])))
	$1 = $3
	$3 = [0]
	if ( $1 ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$86
	$1 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($1 >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$41 }
	$12 = [5]
	goto $label$7 
	
.LABEL $label$85
	$1 = *($6 + [12])
	if ( ((int_32)($1 - ($6 + [16])) > (int_32)[159]) ){ goto $label$40 }
	$12 = [36]
	goto $label$7 
	
.LABEL $label$84
	*($1) = *($6 + [8])
	*($6 + [12]) = ($1 + [4])
	$12 = [6]
	goto $label$7 
	
.LABEL $label$83
	*($5) = CALL $213($7, *($6 + [188]), $4, $8)
	$10 = ($11 & [1])
	$11 = *($6 + [208])
	if ( (( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ) == 0) ){ goto $label$39 }
	$12 = [7]
	goto $label$7 
	
.LABEL $label$82
	$1 = *($6 + [12])
	$9 = ($1 + [-4])
	if ( ((int_32)($6 + [16]) == (int_32)$1) ){ goto $label$37 }
	$12 = [32]
	goto $label$7 
	
.LABEL $label$81
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$38 }
	$12 = [33]
	goto $label$7 
	
.LABEL $label$80
	$1 = ($6 + [16])
	$7 = $9
	$12 = [34]
	goto $label$7 
	
.LABEL $label$79
	$11 = *($1)
	*($1) = *($7)
	*($7) = $11
	$7 = ($7 + [-4])
	$1 = ($1 + [4])
	if ( ($1 <= $7) ){ goto $label$14 }
	$12 = [35]
	goto $label$7 
	
.LABEL $label$78
	$11 = *($6 + [208])
	$10 = ($11 & [1])
	$12 = [8]
	goto $label$7 
	
.LABEL $label$77
	$1 = ( *($6 + [216]) ? (($6 + [208]) | [1]) : $10 )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	if ( ((uint_32)$9 <= (uint_32)($6 + [16])) ){ goto $label$35 }
	$12 = [27]
	goto $label$7 
	
.LABEL $label$76
	$10 = ($1 + ( *($6 + [212]) ? uint_32($11 >> [1]) : $10 ))
	$11 = ($6 + [16])
	$12 = [28]
	goto $label$7 
	
.LABEL $label$75
	if ( (($8 & [1]) == 0) ){ goto $label$16 }
	$12 = [30]
	goto $label$7 
	
.LABEL $label$74
	if ( ((int_32)*($11) != (int_32)int_32(($7 << [24]) >> [24])) ){ goto $label$15 }
	$12 = [29]
	goto $label$7 
	
.LABEL $label$73
	$1 = ( ($1 + [1]) ? $1 : ((int_32)($10 - $1) > (int_32)[1]) )
	$7 = *($1)
	$8 = (((int_32)$7 > (int_32)[0]) & ((int_32)$7 != (int_32)[127]))
	$11 = ($11 + [4])
	if ( ($11 <= $9) ){ goto $label$36 }
	$12 = [9]
	goto $label$7 
	
.LABEL $label$72
	if ( ($8 == 0) ){ goto $label$34 }
	$12 = [25]
	goto $label$7 
	
.LABEL $label$71
	if ( ((*($9) + [-1]) <= $7) ){ goto $label$33 }
	$12 = [26]
	goto $label$7 
	
.LABEL $label$70
	*($4) = [4]
	$12 = [10]
	goto $label$7 
	
.LABEL $label$69
	if ( ($3 == 0) ){ goto $label$32 }
	$12 = [11]
	goto $label$7 
	
.LABEL $label$68
	if ( ((int_32)*($3 + [12]) == (int_32)*($3 + [16])) ){ goto $label$30 }
	$12 = [12]
	goto $label$7 
	
.LABEL $label$67
	if ( ($2 == 0) ){ goto $label$29 }
	$12 = [13]
	goto $label$7 
	
.LABEL $label$66
	if ( ((int_32)*($2 + [12]) == (int_32)*($2 + [16])) ){ goto $label$25 }
	$12 = [14]
	goto $label$7 
	
.LABEL $label$65
	if ( ($3 == 0) ){ goto $label$24 }
	$12 = [15]
	goto $label$7 
	
.LABEL $label$64
	*($4) = (*($4) | [2])
	$12 = [16]
	goto $label$7 
	
.LABEL $label$63
	if ( (*($6 + [192]) & [1]) ){ goto $label$19 }
	$12 = [20]
	goto $label$7 
	
.LABEL $label$62
	if ( (*($6 + [208]) & [1]) ){ goto $label$18 }
	$12 = [19]
	goto $label$7 
	
.LABEL $label$61
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$60
	CALL _ZdlPv(*(($6 + [200])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$17 }
	$12 = [18]
	goto $label$7 
	
.LABEL $label$59
	CALL _ZdlPv(*($6 + [216]))
	$global$0 = ($6 + [256])
	return $3
	
.LABEL $label$58
	$3 = ( [0] ? $3 : ((int_32)CALL int_32 $3((int_32 *(*($3) + [36]))) == (int_32)[-1]) )
	if ( $2 ){ goto $label$28 }
	$12 = [22]
	goto $label$7 
	
.LABEL $label$57
	if ( $3 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$56
	if ( (((int_32)($3 == 0) ^ (int_32)((int_32)CALL int_32 $2((int_32 *(*($2) + [36]))) == (int_32)[-1])) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$55
	*($4) = [4]
	if ( $3 ){ goto $label$31 }
	$12 = [24]
	goto $label$7 
	
.LABEL $label$54
	$3 = [0]
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$53
	$12 = [1]
	goto $label$7 
	
.LABEL $label$52
	$12 = [44]
	goto $label$7 
	
.LABEL $label$51
	$12 = [1]
	goto $label$7 
	
.LABEL $label$50
	$12 = [43]
	goto $label$7 
	
.LABEL $label$49
	$12 = [1]
	goto $label$7 
	
.LABEL $label$48
	$12 = [51]
	goto $label$7 
	
.LABEL $label$47
	$12 = [3]
	goto $label$7 
	
.LABEL $label$46
	$12 = [51]
	goto $label$7 
	
.LABEL $label$45
	$12 = [37]
	goto $label$7 
	
.LABEL $label$44
	$12 = [4]
	goto $label$7 
	
.LABEL $label$43
	$12 = [4]
	goto $label$7 
	
.LABEL $label$42
	$12 = [4]
	goto $label$7 
	
.LABEL $label$41
	$12 = [6]
	goto $label$7 
	
.LABEL $label$40
	$12 = [6]
	goto $label$7 
	
.LABEL $label$39
	$12 = [10]
	goto $label$7 
	
.LABEL $label$38
	$12 = [8]
	goto $label$7 
	
.LABEL $label$37
	$12 = [8]
	goto $label$7 
	
.LABEL $label$36
	$12 = [28]
	goto $label$7 
	
.LABEL $label$35
	$12 = [9]
	goto $label$7 
	
.LABEL $label$34
	$12 = [10]
	goto $label$7 
	
.LABEL $label$33
	$12 = [10]
	goto $label$7 
	
.LABEL $label$32
	$12 = [24]
	goto $label$7 
	
.LABEL $label$31
	$12 = [11]
	goto $label$7 
	
.LABEL $label$30
	$12 = [23]
	goto $label$7 
	
.LABEL $label$29
	$12 = [22]
	goto $label$7 
	
.LABEL $label$28
	$12 = [13]
	goto $label$7 
	
.LABEL $label$27
	$12 = [22]
	goto $label$7 
	
.LABEL $label$26
	$12 = [13]
	goto $label$7 
	
.LABEL $label$25
	$12 = [21]
	goto $label$7 
	
.LABEL $label$24
	$12 = [16]
	goto $label$7 
	
.LABEL $label$23
	$12 = [16]
	goto $label$7 
	
.LABEL $label$22
	$12 = [15]
	goto $label$7 
	
.LABEL $label$21
	$12 = [15]
	goto $label$7 
	
.LABEL $label$20
	$12 = [16]
	goto $label$7 
	
.LABEL $label$19
	$12 = [17]
	goto $label$7 
	
.LABEL $label$18
	$12 = [18]
	goto $label$7 
	
.LABEL $label$17
	$12 = [19]
	goto $label$7 
	
.LABEL $label$16
	$12 = [29]
	goto $label$7 
	
.LABEL $label$15
	$12 = [31]
	goto $label$7 
	
.LABEL $label$14
	$12 = [34]
	goto $label$7 
	
.LABEL $label$13
	$12 = [47]
	goto $label$7 
	
.LABEL $label$12
	$12 = [46]
	goto $label$7 
	
.LABEL $label$11
	$12 = [39]
	goto $label$7 
	
.LABEL $label$10
	$12 = [40]
	goto $label$7 
	
.LABEL $label$9
	$12 = [42]
	goto $label$7 
	
.LABEL $label$8
	$12 = [49]
	goto $label$7 
	return $12
}

void .FUNC $343 (int_32 $0)
{
	CALL $515($0)
	CALL _ZdlPv($0)
}

int_32 .FUNC $342 (int_32 $0)
{
	CALL $515($0)
	return $0
}

void .FUNC $341 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	*($0) = [67109634]
}

int_32 .FUNC $594 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_32 .FUNC $592 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $624($0, $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

int_32 .FUNC $593 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $590 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $586([317], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $591 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	return CALL $586([317], $0, $1, $2, $3)
}

int_32 .FUNC $596 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$4 = *($3 + [12])
	*($3 + [8]) = $4
	$2 = [-1]
	$4 = CALL $591([0], [0], $1, $4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = ($4 + [1])
	$4 = CALL $643($5)
	*($0) = $4
	if ( ($4 == 0) ){ goto $label$1 }
	$2 = CALL $591($4, $5, $1, *($3 + [12]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	return $2
}

void .FUNC $482 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$2 = CALL $632([8996])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($2 << [1])
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	*(($3 + $2)) = [0]
	return 
	
.LABEL $label$3
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $2
	
.LABEL $label$2
	CALL memcpy($3, [8996], $2)
	*(($3 + $2)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $526($0)
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $92($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $283 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($6 = $5) + [24]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [27756]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [117]
	
.LABEL $label$4
	*(($8 + [2])) = $7
	$10 = $5
	$7 = ((uint_32(*(($2 + [4])) >> [9]) & [1]) | [22])
	$9 = ($7 + [1])
	$8 = ($5 - (($7 + [16]) & [48]))
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $9, $5, ($6 + [24]), $6)
	$13 = ($8 + $12)
	$9 = $13
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$9 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$9 = $8
	
.LABEL $label$9
	$5 = ($11 - ((($7 << [3]) + [11]) & [-16]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $279($8, $9, $13, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $280($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$10
	$global$0 = ($6 + [32])
	return $2
}

void .FUNC $36 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $90($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $91($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $88($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $89($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $86($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $280 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [16])
	$global$0 = $6
	if ( ($0 == 0) ){ goto $label$7 }
	$7 = *($4 + [12])
	$8 = [0]
	$9 = ($2 - $1)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$8 }
	$9 = int_32($9 >> [2])
	if ( ((int_32)CALL int_32 $0((int_32 $1), (int_32 $9), (int_32 *(*($0) + [48]))) != (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$8
	$1 = int_32(($3 - $1) >> [2])
	$1 = ( ($7 - $1) ? [0] : ((int_32)$7 > (int_32)$1) )
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[2]) ){ goto $label$6 }
	*($6) = ($1 << [1])
	$10 = ($6 + [8])
	$9 = ($6 | [4])
	$7 = $9
	goto $label$5 
	
.LABEL $label$7
	$global$0 = ($6 + [16])
	return [0]
	
.LABEL $label$6
	$8 = (($1 + [4]) & [-4])
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = CALL _Znwj(($8 << [2]))
	*($6) = ($8 | [1])
	*($6 + [8]) = $7
	*($6 + [4]) = $1
	$9 = ($6 | [4])
	$10 = ($6 + [8])
	
.LABEL $label$5
	CALL $638($7, $5, $1)
	$8 = [0]
	*(($7 + ($1 << [2]))) = [0]
	$7 = CALL int_32 $0((int_32 ( *(($6 + [8])) ? $9 : (*($6) & [1]) )), (int_32 $1), (int_32 *(*($0) + [48])))
	if ( ((*($6) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($10))
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($3 - $2)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	$8 = [0]
	$1 = int_32($1 >> [2])
	if ( ((int_32)CALL int_32 $0((int_32 $2), (int_32 $1), (int_32 *(*($0) + [48]))) != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$10
	*(($4 + [12])) = [0]
	$8 = $0
	
.LABEL $label$3
	$global$0 = ($6 + [16])
	return $8
	
.LABEL $label$2
	CALL $526($6)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $83($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$17()), [8743])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([32])
	CALL $85($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $84(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $281 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($6 = $5) + [24]) = (int_64)37
	$7 = *($2 + [4])
	if ( ($7 & [2048]) ){ goto $label$3 }
	$8 = (($6 + [24]) | [1])
	if ( ($7 & [512]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($6 + [25]) = [43]
	$8 = (($6 + [24]) | [2])
	if ( (($7 & [512]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($8) = [35]
	$8 = ($8 + [1])
	
.LABEL $label$1
	*($8) = [27756]
	$9 = ($7 & [74])
	if ( ((int_32)$9 == (int_32)[64]) ){ goto $label$6 }
	if ( ((int_32)$9 != (int_32)[8]) ){ goto $label$5 }
	$7 = ( [88] ? [120] : ($7 & [16384]) )
	goto $label$4 
	
.LABEL $label$6
	$7 = [111]
	goto $label$4 
	
.LABEL $label$5
	$7 = [100]
	
.LABEL $label$4
	*(($8 + [2])) = $7
	$9 = $5
	$10 = (uint_32(*(($2 + [4])) >> [9]) & [1])
	$7 = ($10 + [23])
	$8 = ($5 + [-32])
	$11 = $8
	$global$0 = $11
	if ( (*([0] + [11460]) == 0) ){ goto $label$8 }
	$5 = *([0] + [11456])
	goto $label$7 
	
.LABEL $label$8
	$5 = CALL $575([2147483647], [8741], [0])
	*([0] + [11460]) = [1]
	*([0] + [11456]) = $5
	
.LABEL $label$7
	*($6) = $4
	$12 = CALL $264($8, $7, $5, ($6 + [24]), $6)
	$13 = ($8 + $12)
	$7 = $13
	$5 = (*(($2 + [4])) & [176])
	if ( ((int_32)$5 == (int_32)[32]) ){ goto $label$9 }
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$10 }
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)[45]) ){ goto $label$12 }
	if ( ((int_32)$5 != (int_32)[43]) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = ($8 + [1])
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_32)$12 < (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[48]) ){ goto $label$10 }
	if ( ((int_32)(*($8 + [1]) | [32]) != (int_32)[120]) ){ goto $label$10 }
	$7 = ($8 + [2])
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	$5 = ($11 - (((($10 << [3]) | [176]) + [11]) & [496]))
	$global$0 = $5
	CALL $151(($6 + [8]), $2)
	CALL $279($8, $7, $13, $5, ($6 + [20]), ($6 + [16]), ($6 + [8]))
	$7 = *($8 + [4])
	*(($8 = *($6 + [8])) + [4]) = ($7 + [-1])
	if ( $7 ){ goto $label$13 }
	CALL void $8((int_32 *(*($8) + [8])))
	
.LABEL $label$13
	$2 = CALL $280($1, $5, *($6 + [20]), *($6 + [16]), $2, $3)
	$9
	$global$0 = ($6 + [32])
	return $2
}

void .FUNC $538 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([1073741806] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [4])
	$9 = [1073741807]
	if ( ((uint_32)$1 <= (uint_32)[536870886]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [1073741807]
	if ( ((uint_32)$1 > (uint_32)[536870886]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [2]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [2]) ){ goto $label$2 }
	$9 = (($2 + [4]) & [-4])
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	
.LABEL $label$2
	$2 = CALL _Znwj(($9 << [2]))
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $636($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL $636(($2 + ($4 << [2])), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	$4 = ($4 << [2])
	CALL $636((($2 + $4) + ($6 << [2])), (($8 + $4) + ($5 << [2])), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$1 = ($3 + $6)
	*($0 + [4]) = $1
	*(($2 + ($1 << [2]))) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $539 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[1073741808]) ){ goto $label$4 }
	$2 = [1]
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = uint_32($3 >> [1])
	goto $label$5 
	
.LABEL $label$6
	$3 = *($0)
	$2 = (($3 & [-2]) + [-1])
	$4 = *($0 + [4])
	
.LABEL $label$5
	$5 = [1]
	$1 = ( $4 ? $1 : ((uint_32)$4 > (uint_32)$1) )
	if ( ($1 <= [2]) ){ goto $label$7 }
	$5 = ((($1 + [4]) & [-4]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$10 }
	$6 = [1]
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$11 }
	$1 = ($0 + [4])
	$2 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($3 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = ($5 + [1])
	if ( ((uint_32)$1 >= (uint_32)[1073741824]) ){ goto $label$4 }
	$1 = CALL _Znwj(($1 << [2]))
	if ( ((uint_32)$5 > (uint_32)$2) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$7 = [1]
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$12 }
	$2 = ($0 + [4])
	$6 = [0]
	$8 = [1]
	if ( (($3 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$2 = *($0 + [8])
	$6 = [1]
	$8 = [1]
	if ( (($3 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$3 = (*($0 + [4]) + [1])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$3 = (uint_32(($3 & [254]) >> $8) + [1])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $636($1, $2, $3)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $4
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($4 << [1])
}