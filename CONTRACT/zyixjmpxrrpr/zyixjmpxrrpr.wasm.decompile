(data (i32.const 4) "\b0i\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "read\00")
(data (i32.const 128) "sharer cannot be self.\00")
(data (i32.const 160) "sharer does not exist.\00")
(data (i32.const 192) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 256) "sharer has exist.\00")
(data (i32.const 288) "not playing this game for the first time.\00")
(data (i32.const 336) "cannot pass end iterator to modify\00")
(data (i32.const 384) "object passed to modify is not in multi_index\00")
(data (i32.const 432) "cannot modify objects in table of another contract\00")
(data (i32.const 496) "updater cannot change primary key when modifying an object\00")
(data (i32.const 560) "cannot create objects in table of another contract\00")
(data (i32.const 624) "write\00")
(data (i32.const 640) "error reading iterator\00")
(data (i32.const 672) "invalid buyer.\00")
(data (i32.const 688) "the minimum drawable amount has not been reached.\00")
(data (i32.const 752) "invalid symbol name\00")
(data (i32.const 784) "active\00")
(data (i32.const 800) "eosio.token\00")
(data (i32.const 816) "transfer\00")
(data (i32.const 832) "award withdraw\00")
(data (i32.const 848) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 912) "cannot pass end iterator to erase\00")
(data (i32.const 960) "cannot increment end iterator\00")
(data (i32.const 992) "object passed to erase is not in multi_index\00")
(data (i32.const 1040) "cannot erase objects in table of another contract\00")
(data (i32.const 1104) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1168) "get\00")
(data (i32.const 1184) "**\00")
(data (i32.const 1188) "\b0\04\00\00")
(data (i32.const 1200) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1248) "at least one key.\00")
(data (i32.const 1280) "game does not exists.\00")
(data (i32.const 1312) "game already locked.\00")
(data (i32.const 1344) "invalid team.\00")
(data (i32.const 1360) "the number can buy exceed the upper limit\00")
(data (i32.const 1408) "multiplication overflow or underflow\00")
(data (i32.const 1456) "multiplication underflow\00")
(data (i32.const 1488) "multiplication overflow\00")
(data (i32.const 1520) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1584) "attempt to add asset with different symbol\00")
(data (i32.const 1632) "addition underflow\00")
(data (i32.const 1664) "addition overflow\00")
(data (i32.const 1696) "buy key community fee\00")
(data (i32.const 1728) "contract cost fee\00")
(data (i32.const 1760) "attempt to subtract asset with different symbol\00")
(data (i32.const 1808) "subtraction underflow\00")
(data (i32.const 1840) "subtraction overflow\00")
(data (i32.const 1872) "buy key\00")
(data (i32.const 1888) "fund account not exists.\00")
(data (i32.const 1920) "unable to find key\00")
(data (i32.const 1952) "grand tax fee\00")
(data (i32.const 1968) "game already exists.\00")
(data (i32.const 2000) "the last game has not been locked yet.\00")
(data (i32.const 2048) "community_fund account does not exist.\00")
(data (i32.const 2096) "cost_fund account does not exist.\00")
(data (i32.const 2144) "tax_fund account does not exist.\00")
(data (i32.const 10576) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$7 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$8 (param i32)))
(import "env" "db_store_i64" (func $fimport$9 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$10 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$11 (param i32 i32)))
(import "env" "is_account" (func $fimport$12 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$13 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$14 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$17 (param i64)))
(import "env" "require_auth2" (func $fimport$18 (param i64 i64)))
(import "env" "send_inline" (func $fimport$19 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "_ZN7moretop4more4initEyyy" (func $6))
(export "_ZN7moretop4more6createEv" (func $8))
(export "_ZN7moretop4more6buykeyEyyy" (func $10))
(export "_ZN7moretop4more8withdrawEy" (func $11))
(export "_ZN7moretop4more9regsharerEyy" (func $13))
(export "_ZN7moretop4more10add_recordEhN5eosio5assetEy" (func $21))
(export "_ZN7moretop4more10get_globalEv" (func $36))
(export "_ZN7moretop4more4lockEv" (func $38))
(export "_ZN7moretop4more17covert_key_to_eosEy" (func $41))
(export "_ZN7moretop4more8get_fundEv" (func $42))
(export "_ZN7moretop4more19transfer_from_buyerEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $43))
(export "_ZN7moretop4more9add_awardEyyy" (func $44))
(export "_ZN7moretop4more10creategameEN5eosio5assetE" (func $57))
(export "_ZN7moretop4more18set_current_numberEy" (func $59))
(export "_ZN7moretop4more8add_teamEyhhhh" (func $64))
(export "_ZN7moretop4more10init_teamsEv" (func $65))
(export "_ZN7moretop4more6is_icoEv" (func $66))
(export "_ZN7moretop4more13divide_amountEN5eosio5assetEh" (func $67))
(export "malloc" (func $68))
(export "free" (func $71))
(export "memcmp" (func $83))
(export "strlen" (func $84))
(table $0 6 6 anyfunc)
(elem (i32.const 0) $85 $6 $11 $10 $8 $13)



void .FUNC _ZN7moretop4more4lockEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [384])
	*([0] + [4]) = $22
	CALL _ZN7moretop4more10get_globalEv(($22 + [264]), $0)
	*(($22 + [256])) = [0]
	*($22 + [240]) = (int_64)-1
	*($22 + [248]) = (int_64)0
	$15 = *($0)
	*($22 + [224]) = $15
	*($22 + [232]) = $15
	$9 = [0]
	$16 = CALL db_find_i64($15, $15, (int_64)7035937633859534848, *($22 + [280]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $37(($22 + [224]), $16)
	CALL eosio_assert(((int_32)*($9 + [80]) == (int_32)($22 + [224])), [192])
	
.LABEL $label$1
	$16 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($16, [1280])
	CALL eosio_assert(((int_32)*($9 + [64]) ^ (int_32)[1]), [1312])
	$19 = *($0)
	CALL eosio_assert($16, [336])
	CALL eosio_assert(((int_32)*($9 + [80]) == (int_32)($22 + [224])), [384])
	CALL eosio_assert(((int_64)*($22 + [224]) == (int_64)CALL $fimport$2()), [432])
	*($9 + [64]) = [1]
	$15 = *($9)
	CALL eosio_assert([1], [496])
	*($22 + [192]) = (($22 + [288]) + [69])
	*($22 + [188]) = ($22 + [288])
	*($22 + [184]) = ($22 + [288])
	CALL $40(($22 + [184]), $9)
	CALL db_update_i64(*($9 + [84]), $19, ($22 + [288]), [69])
	$16 = ($22 + [240])
	if ( (uint_64)($15 <= *($16)) ){ goto $label$2 }
	*($16) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$16 = [0]
	*(($22 + [216])) = [0]
	*($22 + [200]) = (int_64)-1
	*($22 + [208]) = (int_64)0
	$15 = *($0)
	*($22 + [184]) = $15
	*($22 + [192]) = $15
	$14 = [0]
	$6 = CALL db_find_i64($15, $15, (int_64)-3851373727820283904, *($9 + [56]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$14 = CALL $39(($22 + [184]), $6)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($22 + [184])), [192])
	
.LABEL $label$3
	CALL eosio_assert([1], [848])
	$15 = (int_64)5459781
	
.LOOP $label$5:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($6, [752])
	if ( ($14 == 0) ){ goto $label$9 }
	$19 = *($14 + [10])
	$15 = *($9 + [8])
	CALL eosio_assert([1], [848])
	$7 = ((int_64)$15 * (int_64)480000)
	$18 = (int_64))(((uint_64)$7 / (uint_64)(int_64)100) - ((uint_64)$7 / (uint_64)(int_64)2000))
	$17 = ((int_64)$15 * (int_64)10000)
	$3 = ((uint_64)((int_64)$19 * (int_64)$17) / (uint_64)(int_64)1000000)
	$15 = (int_64)5459781
	$16 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	
.LABEL $label$10
	CALL eosio_assert($6, [752])
	$19 = *($14 + [11])
	*($22 + [168]) = [0]
	$15 = *(($9 + [56]))
	$5 = *($0)
	*($22 + [144]) = $5
	*($22 + [152]) = $15
	*($22 + [160]) = (int_64)-1
	*((($22 + [144]) + [28])) = [0]
	*(($22 + [176])) = [0]
	$20 = ((uint_64)((int_64)$19 * (int_64)$17) / (uint_64)(int_64)100)
	$16 = CALL db_lowerbound_i64($5, $15, (int_64)-3641876953342541824, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$15 }
	$1 = (($22 + [288]) + [16])
	$8 = (($22 + [288]) | [8])
	$16 = CALL $45(($22 + [144]), $16)
	$21 = ($9 + [48])
	
.LOOP $label$16:
	$15 = *(($14 + [16]))
	if ( (int_64)($15 == 0) ){ goto $label$18 }
	$15 = ((uint_64)((int_64)*($16 + [8]) * (int_64)$20) / (uint_64)$15)
	goto $label$17 
	
.LABEL $label$18
	$15 = (int_64)0
	
.LABEL $label$17
	$15 = ((int_64)( $18 ? (int_64)0 : ((int_64)*($16) == (int_64)*($21)) ) + (int_64)$15)
	if ( ((int_64)$15 == (int_64)0) ){ goto $label$20 }
	$17 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)($22 + [144])), [384])
	CALL eosio_assert(((int_64)*($22 + [144]) == (int_64)CALL $fimport$2()), [432])
	*($16 + [16]) = ((int_64)*($16 + [16]) + (int_64)$15)
	$19 = *($16)
	CALL eosio_assert([1], [496])
	CALL eosio_assert([1], [624])
	CALL memcpy(($22 + [288]), $16, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($8, ($16 + [8]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($1, ($16 + [16]), [8])
	CALL db_update_i64(*($16 + [28]), $17, ($22 + [288]), [24])
	$6 = (($22 + [144]) + [16])
	if ( (uint_64)($19 <= *($6)) ){ goto $label$21 }
	*($6) = ( (int_64)-2 ? ((int_64)$19 + (int_64)1) : ((uint_64)$19 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$6 = ($16 + [28])
	CALL _ZN7moretop4more9add_awardEyyy($0, *($16), $15, (int_64)0)
	goto $label$19 
	
.LABEL $label$20
	$6 = ($16 + [28])
	
.LABEL $label$19
	$2 = $16
	CALL eosio_assert([1], [912])
	CALL eosio_assert([1], [960])
	$16 = [0]
	$6 = CALL db_next_i64(*($6), ($22 + [288]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$22 }
	$16 = CALL $45(($22 + [144]), $6)
	
.LABEL $label$22
	CALL $55(($22 + [144]), $2)
	if ( $16 ){ goto $label$16 }
	
.LABEL $label$15
	$16 = CALL db_lowerbound_i64(*($22 + [184]), *((($22 + [184]) + [8])), (int_64)-3851373727820283904, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$23 }
	$1 = (($22 + [288]) + [20])
	$14 = CALL $39(($22 + [184]), $16)
	$8 = ($9 + [56])
	$10 = (($22 + [72]) + [8])
	$21 = (($22 + [184]) + [16])
	$9 = ($22 + [312])
	$12 = ($22 + [320])
	
.LOOP $label$24:
	$15 = *($14)
	if ( ((int_64)$15 == (int_64)*($8)) ){ goto $label$25 }
	*((($22 + [288]) + [8])) = $15
	*((($22 + [288]) + [16])) = (int_64)-1
	*($9) = (int_64)0
	*($12) = [0]
	$19 = *($0)
	*($22 + [288]) = $19
	$16 = CALL db_lowerbound_i64($19, $15, (int_64)-3641876953342541824, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$26 }
	$6 = CALL $45(($22 + [288]), $16)
	
.LOOP $label$27:
	CALL eosio_assert([1], [912])
	CALL eosio_assert([1], [960])
	$16 = [0]
	$2 = CALL db_next_i64(*($6 + [28]), ($22 + [72]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$28 }
	$16 = CALL $45(($22 + [288]), $2)
	
.LABEL $label$28
	CALL $55(($22 + [288]), $6)
	$6 = $16
	if ( $16 ){ goto $label$27 }
	
.LABEL $label$26
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$25 }
	$11 = (($22 + [288]) + [28])
	$16 = *($11)
	if ( ((int_32)$16 != (int_32)$2) ){ goto $label$30 }
	$16 = $2
	goto $label$29 
	
.LABEL $label$30
	
.LOOP $label$31:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	CALL $73($6)
	
.LABEL $label$32
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$31 }
	$16 = *($9)
	
.LABEL $label$29
	*($11) = $2
	CALL $73($16)
	
.LABEL $label$25
	$19 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($22 + [184])), [384])
	CALL eosio_assert(((int_64)*($22 + [184]) == (int_64)CALL $fimport$2()), [432])
	*($14 + [16]) = (int_64)0
	$15 = *($14)
	CALL eosio_assert([1], [496])
	*($10) = $1
	*($22 + [76]) = ($22 + [288])
	*($22 + [72]) = ($22 + [288])
	CALL $48(($22 + [72]), $14)
	CALL db_update_i64(*($14 + [28]), $19, ($22 + [288]), [20])
	if ( (uint_64)($15 <= *($21)) ){ goto $label$33 }
	*($21) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$33
	CALL eosio_assert([1], [960])
	$16 = CALL db_next_i64(*(($14 + [28])), ($22 + [288]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$23 }
	$14 = CALL $39(($22 + [184]), $16)
	goto $label$24 
	
.LABEL $label$23
	CALL _ZN7moretop4more8get_fundEv(($22 + [112]), $0)
	CALL eosio_assert([1], [848])
	$5 = ((uint_64)$7 / (uint_64)(int_64)20000000)
	$15 = (int_64)5459781
	$16 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	
.LOOP $label$38:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	$6 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$6 = [0]
	
.LABEL $label$34
	CALL eosio_assert($6, [752])
	if ( (uint_64)($7 <= (int_64)20000000) ){ goto $label$40 }
	$20 = *($0)
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [784]
	$18 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$46 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$6 = ($6 + [165])
	goto $label$44 
	
.LABEL $label$46
	$19 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$42
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$41 }
	*($22 + [64]) = $18
	*($22 + [56]) = $20
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [800]
	$18 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$15 > (uint_64)(int_64)10) ){ goto $label$52 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$6 = ($6 + [165])
	goto $label$50 
	
.LABEL $label$52
	$19 = (int_64)0
	if ( ((int_64)$15 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$48
	$16 = ($16 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$18 = ((int_64)$19 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)1)
	if ( ((int_64)$15 != (int_64)13) ){ goto $label$47 }
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [816]
	$20 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$15 > (uint_64)(int_64)7) ){ goto $label$58 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$6 = ($6 + [165])
	goto $label$56 
	
.LABEL $label$58
	$19 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$54
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$53 }
	*(($22 + [48])) = [0]
	*($22 + [40]) = (int_64)0
	$16 = CALL strlen([1952])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$61 }
	*($22 + [40]) = ($16 << [1])
	$6 = (($22 + [40]) | [1])
	if ( $16 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$2 = (($16 + [16]) & [-16])
	$6 = CALL $72($2)
	*($22 + [40]) = ($2 | [1])
	*($22 + [48]) = $6
	*($22 + [44]) = $16
	
.LABEL $label$60
	CALL memcpy($6, [1952], $16)
	
.LABEL $label$59
	*(($6 + $16)) = [0]
	*((($22 + [288]) + [24])) = (int_64)1397703940
	*($22 + [296]) = *((($22 + [112]) + [24]))
	$16 = ($22 + [48])
	*(($22 + [328])) = *($16)
	*($22 + [288]) = *($0)
	*($22 + [304]) = $5
	*($22 + [320]) = *($22 + [40])
	*($22 + [40]) = [0]
	*($22 + [44]) = [0]
	*($16) = [0]
	$16 = CALL $19(($22 + [72]), ($22 + [56]), $18, $20, ($22 + [288]))
	CALL $20(($22 + [368]), $16)
	$6 = *($22 + [368])
	CALL send_inline($6, (*($22 + [372]) - $6))
	$6 = *($22 + [368])
	if ( ($6 == 0) ){ goto $label$62 }
	*($22 + [372]) = $6
	CALL $73($6)
	
.LABEL $label$62
	$6 = *($16 + [28])
	if ( ($6 == 0) ){ goto $label$63 }
	*(($16 + [32])) = $6
	CALL $73($6)
	
.LABEL $label$63
	$6 = *($16 + [16])
	if ( ($6 == 0) ){ goto $label$64 }
	*(($16 + [20])) = $6
	CALL $73($6)
	
.LABEL $label$64
	if ( ((*(($22 + [320])) & [1]) == 0) ){ goto $label$65 }
	CALL $73(*(($22 + [328])))
	
.LABEL $label$65
	if ( ((*($22 + [40]) & [1]) == 0) ){ goto $label$40 }
	CALL $73(*(($22 + [48])))
	
.LABEL $label$40
	$2 = *($22 + [168])
	if ( ($2 == 0) ){ goto $label$8 }
	$14 = ($22 + [172])
	$16 = *($14)
	if ( ((int_32)$16 == (int_32)$2) ){ goto $label$67 }
	
.LOOP $label$68:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$69 }
	CALL $73($6)
	
.LABEL $label$69
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$68 }
	$16 = *(($22 + [168]))
	goto $label$66 
	
.LABEL $label$67
	$16 = $2
	
.LABEL $label$66
	*($14) = $2
	CALL $73($16)
	goto $label$8 
	
.LABEL $label$39
	CALL $74(($22 + [40]))
	
.LABEL $label$9
	$3 = (int_64)0
	
.LABEL $label$8
	*((($22 + [144]) + [32])) = [0]
	*($22 + [160]) = (int_64)-1
	$15 = *($0)
	*($22 + [144]) = $15
	*($22 + [152]) = $15
	*($22 + [168]) = (int_64)0
	$16 = CALL db_lowerbound_i64($15, $15, (int_64)-5859598064704028672, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$71 }
	$4 = (($22 + [368]) | [1])
	$16 = CALL $15(($22 + [144]), $16)
	$9 = (($22 + [112]) + [8])
	$1 = (($22 + [288]) + [16])
	$14 = (($22 + [288]) + [32])
	$8 = ($14 + [4])
	$10 = ($22 + [100])
	$13 = ($22 + [328])
	$12 = ($22 + [92])
	
.LOOP $label$72:
	$2 = $16
	$19 = *($2 + [16])
	CALL eosio_assert([1], [848])
	$7 = ((uint_64)$19 / (uint_64)(int_64)10000)
	$15 = (int_64)5459781
	$16 = [0]
	
.LOOP $label$75:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$74 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	
.LOOP $label$77:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$77 }
	
.LABEL $label$76
	$6 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$75 }
	goto $label$73 
	
.LABEL $label$74
	$6 = [0]
	
.LABEL $label$73
	CALL eosio_assert($6, [752])
	if ( (uint_64)($19 <= (int_64)10000) ){ goto $label$78 }
	$5 = *($2)
	$20 = *($0)
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [784]
	$18 = (int_64)0
	
.LOOP $label$79:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$84 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$6 = ($6 + [165])
	goto $label$82 
	
.LABEL $label$84
	$19 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$81
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$80
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$79 }
	*($9) = $18
	*($22 + [112]) = $20
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [800]
	$18 = (int_64)0
	
.LOOP $label$85:
	if ( ((uint_64)$15 > (uint_64)(int_64)10) ){ goto $label$90 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$6 = ($6 + [165])
	goto $label$88 
	
.LABEL $label$90
	$19 = (int_64)0
	if ( ((int_64)$15 == (int_64)11) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$87
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$86
	$16 = ($16 + [1])
	$17 = ((int_64)$17 + (int_64)-5)
	$18 = ((int_64)$19 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)1)
	if ( ((int_64)$15 != (int_64)13) ){ goto $label$85 }
	$15 = (int_64)0
	$17 = (int_64)59
	$16 = [816]
	$20 = (int_64)0
	
.LOOP $label$91:
	if ( ((uint_64)$15 > (uint_64)(int_64)7) ){ goto $label$96 }
	$6 = *($16)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$6 = ($6 + [165])
	goto $label$94 
	
.LABEL $label$96
	$19 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$95
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$93
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$92
	$16 = ($16 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$91 }
	*(($6 = (($22 + [368]) + [8]))) = [0]
	*($22 + [368]) = (int_64)0
	$16 = CALL strlen([832])
	if ( ((uint_32)$16 >= (uint_32)[-16]) ){ goto $label$70 }
	if ( ((uint_32)$16 >= (uint_32)[11]) ){ goto $label$99 }
	*($22 + [368]) = ($16 << [1])
	$21 = $4
	if ( $16 ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$99
	$11 = (($16 + [16]) & [-16])
	$21 = CALL $72($11)
	*($6) = $21
	*($22 + [368]) = ($11 | [1])
	*($22 + [372]) = $16
	
.LABEL $label$98
	CALL memcpy($21, [832], $16)
	
.LABEL $label$97
	*(($21 + $16)) = [0]
	*((($22 + [288]) + [8])) = $5
	*($1) = $7
	*((($22 + [288]) + [24])) = (int_64)1397703940
	*($8) = *($22 + [372])
	*(($14 + [8])) = *($6)
	*($22 + [288]) = *($0)
	*($14) = *($22 + [368])
	*($22 + [368]) = [0]
	*($22 + [372]) = [0]
	*($6) = [0]
	CALL $20(($22 + [56]), CALL $19(($22 + [72]), ($22 + [112]), $18, $20, ($22 + [288])))
	$16 = *($22 + [56])
	CALL send_inline($16, (*($22 + [60]) - $16))
	$16 = *($22 + [56])
	if ( ($16 == 0) ){ goto $label$100 }
	*($22 + [60]) = $16
	CALL $73($16)
	
.LABEL $label$100
	$16 = *($10)
	if ( ($16 == 0) ){ goto $label$101 }
	*((($22 + [72]) + [32])) = $16
	CALL $73($16)
	
.LABEL $label$101
	$16 = *((($22 + [72]) + [16]))
	if ( ($16 == 0) ){ goto $label$102 }
	*($12) = $16
	CALL $73($16)
	
.LABEL $label$102
	if ( ((*($14) & [1]) == 0) ){ goto $label$103 }
	CALL $73(*($13))
	
.LABEL $label$103
	if ( ((*($22 + [368]) & [1]) == 0) ){ goto $label$78 }
	CALL $73(*($6))
	
.LABEL $label$78
	$16 = [0]
	$6 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($6, [912])
	CALL eosio_assert($6, [960])
	$6 = CALL db_next_i64(*($2 + [44]), ($22 + [288]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$104 }
	$16 = CALL $15(($22 + [144]), $6)
	
.LABEL $label$104
	CALL $56(($22 + [144]), $2)
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$71
	$15 = ((int_64)1397703936 | (int_64)4)
	*($22 + [32]) = $15
	*(($22 + [16])) = $15
	*($22 + [24]) = $3
	*($22 + [8]) = $3
	CALL _ZN7moretop4more10creategameEN5eosio5assetE($0, ($22 + [8]))
	$2 = *($22 + [168])
	if ( ($2 == 0) ){ goto $label$105 }
	$14 = ($22 + [172])
	$16 = *($14)
	if ( ((int_32)$16 == (int_32)$2) ){ goto $label$107 }
	
.LOOP $label$108:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$109 }
	CALL $73($6)
	
.LABEL $label$109
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$108 }
	$16 = *(($22 + [168]))
	goto $label$106 
	
.LABEL $label$107
	$16 = $2
	
.LABEL $label$106
	*($14) = $2
	CALL $73($16)
	
.LABEL $label$105
	$2 = *($22 + [208])
	if ( ($2 == 0) ){ goto $label$110 }
	$14 = ($22 + [212])
	$16 = *($14)
	if ( ((int_32)$16 == (int_32)$2) ){ goto $label$112 }
	
.LOOP $label$113:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$114 }
	CALL $73($6)
	
.LABEL $label$114
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$113 }
	$16 = *(($22 + [208]))
	goto $label$111 
	
.LABEL $label$112
	$16 = $2
	
.LABEL $label$111
	*($14) = $2
	CALL $73($16)
	
.LABEL $label$110
	$2 = *($22 + [248])
	if ( ($2 == 0) ){ goto $label$115 }
	$14 = ($22 + [252])
	$16 = *($14)
	if ( ((int_32)$16 == (int_32)$2) ){ goto $label$117 }
	
.LOOP $label$118:
	$16 = ($16 + [-24])
	$6 = *($16)
	*($16) = [0]
	if ( ($6 == 0) ){ goto $label$119 }
	CALL $73($6)
	
.LABEL $label$119
	if ( ((int_32)$2 != (int_32)$16) ){ goto $label$118 }
	$16 = *(($22 + [248]))
	goto $label$116 
	
.LABEL $label$117
	$16 = $2
	
.LABEL $label$116
	*($14) = $2
	CALL $73($16)
	
.LABEL $label$115
	*([0] + [4]) = ($22 + [384])
	return (unreachable)
	
.LABEL $label$70
	CALL $74(($22 + [368]))
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [640])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $72([48])) + [32]) = $0
	CALL $51(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $52(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $73($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [10]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [11]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN7moretop4more19transfer_from_buyerEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [128])
	*([0] + [4]) = $12
	CALL require_auth($1)
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [784]
	$9 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$7 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$3
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$2 }
	*($12 + [64]) = $9
	*($12 + [56]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [800]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$13 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$5 = ($5 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$8 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [816]
	$11 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$19 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$5 = ($5 + [165])
	goto $label$17 
	
.LABEL $label$19
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$15
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$14 }
	*(($12 + [36])) = *(($3 + [12]))
	*(($12 + [32])) = *(($3 + [8]))
	*(($12 + [28])) = *(($3 + [4]))
	*($12 + [16]) = $2
	*($12 + [8]) = $1
	*($12 + [24]) = *($3)
	CALL $81(($12 + [40]), $4)
	$6 = CALL $19(($12 + [72]), ($12 + [56]), $9, $11, ($12 + [8]))
	CALL $20(($12 + [112]), $6)
	$5 = *($12 + [112])
	CALL send_inline($5, (*($12 + [116]) - $5))
	$5 = *($12 + [112])
	if ( ($5 == 0) ){ goto $label$20 }
	*($12 + [116]) = $5
	CALL $73($5)
	
.LABEL $label$20
	$5 = *($6 + [28])
	if ( ($5 == 0) ){ goto $label$21 }
	*(($6 + [32])) = $5
	CALL $73($5)
	
.LABEL $label$21
	$5 = *($6 + [16])
	if ( ($5 == 0) ){ goto $label$22 }
	*(($6 + [20])) = $5
	CALL $73($5)
	
.LABEL $label$22
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$1 }
	CALL $73(*(($12 + [48])))
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [128])
}

void .FUNC _ZN7moretop4more8get_fundEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	$3 = [0]
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$4 = *($1)
	*($5 + [8]) = $4
	*($5 + [16]) = $4
	$2 = CALL db_find_i64($4, $4, (int_64)6820310209513127936, $4)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $49(($5 + [8]), $2) + [32]) == (int_32)($5 + [8])), [192])
	$3 = [1]
	
.LABEL $label$1
	CALL eosio_assert($3, [1888])
	$1 = CALL $50(($5 + [8]), *($1), [1920])
	*($0) = *($1)
	*(($0 + [24])) = *(($1 + [24]))
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
	$3 = *($5 + [32])
	if ( ($3 == 0) ){ goto $label$2 }
	$2 = ($5 + [36])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $73($1)
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $3
	
.LABEL $label$3
	*($2) = $3
	CALL $73($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN7moretop4more17covert_key_to_eosEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	if ( ((uint_64)$2 >= (uint_64)(int_64)1000001) ){ goto $label$5 }
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)50
	CALL eosio_assert([1], [848])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*($0 + [8]) = (int_64)1397703940
	$2 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)$2 + (int_64)-1000000)) * (float_64)(float_64)2e-08) + (float_64)(float_64)0.016) * (float_64)(float_64)1e4))
	$2 = ( $2 ? (int_64)50 : ((uint_64)$2 > (uint_64)(int_64)50) )
	*($0) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$9 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	CALL eosio_assert($3, [752])
	return 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [752])
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [64])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $47 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [384])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [432])
	*($1 + [72]) = ((int_64)*($1 + [72]) + (int_64)*(*($3)))
	*($1 + [48]) = *(*($3 + [4]))
	$4 = *($1)
	*($1 + [56]) = *(*($3 + [8]))
	$5 = *($1 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	$5 = ((CASTING uint_32)(uint_64 ((int_64)*(*($3)) * (int_64)30)) + $5)
	if ( ((uint_32)$5 <= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + *(*($3 + [12]) + [8]))) ){ goto $label$2 }
	$5 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + *(*(($3 + [12])) + [8]))
	
.LABEL $label$2
	*(($1 + [40])) = $5
	
.LABEL $label$1
	$5 = *($3 + [16])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [16]))), [1584])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($5))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1632])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1664])
	if ( (*(*($3 + [20])) == 0) ){ goto $label$3 }
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	
.LABEL $label$3
	if ( ((uint_64)*(($1 + [72])) > (uint_64)(int_64)999999) ){ goto $label$5 }
	if ( (((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *($1 + [32])) <= [21600]) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	*($1 + [36]) = $5
	*(($1 + [40])) = (*(*($3 + [12]) + [8]) + $5)
	
.LABEL $label$4
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [496])
	$8 = $8
	$3 = ($8 + [-80])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($8 + [-11])
	CALL $40($7, $1)
	CALL db_update_i64(*($1 + [84]), $2, $3, [69])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [640])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $72([40])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [112])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [112])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [112])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $46(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $73($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN7moretop4more9add_awardEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)-5859598064704028672, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $15(($8 + [8]), $7)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)($8 + [8])), [192])
	$1 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)($8 + [8])), [384])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$2()), [432])
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)$2)
	*($7 + [24]) = ((int_64)*($7 + [24]) + (int_64)$3)
	$5 = *($7)
	CALL eosio_assert([1], [496])
	*($8 + [104]) = (($8 + [48]) + [40])
	*($8 + [100]) = ($8 + [48])
	*($8 + [96]) = ($8 + [48])
	CALL $16(($8 + [96]), $7)
	CALL db_update_i64(*($7 + [44]), $1, ($8 + [48]), [40])
	$7 = ($8 + [24])
	if ( (uint_64)($5 <= *($7)) ){ goto $label$1 }
	*($7) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $73($0)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$5 }
	$7 = *(($8 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$7 = $4
	
.LABEL $label$3
	*($6) = $4
	CALL $73($7)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [112])
}

void .FUNC _ZN7moretop4more6createEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL require_auth(*($0))
	CALL eosio_assert([1], [848])
	$2 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [752])
	*($4 + [24]) = (int_64)1397703940
	*(($4 + [8])) = (int_64)1397703940
	*($4 + [16]) = (int_64)0
	*($4) = (int_64)0
	CALL _ZN7moretop4more10creategameEN5eosio5assetE($0, $4)
	*([0] + [4]) = ($4 + [32])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN7moretop4more4initEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$12($1), [2048])
	CALL eosio_assert(CALL $fimport$12($2), [2096])
	CALL eosio_assert(CALL $fimport$12($3), [2144])
	*((($10 + [8]) + [32])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$4 = *($0)
	*($10 + [8]) = $4
	*($10 + [16]) = $4
	$6 = CALL db_find_i64($4, $4, (int_64)6820310209513127936, $4)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $49(($10 + [8]), $6) + [32]) == (int_32)($10 + [8])), [192])
	goto $label$1 
	
.LABEL $label$2
	$7 = *($0)
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$2()), [560])
	*(($6 = CALL $72([48])) + [32]) = ($10 + [8])
	*($6 + [8]) = $1
	*($6 + [16]) = $2
	*($6 + [24]) = $3
	*($6) = *($0)
	CALL eosio_assert([1], [624])
	CALL memcpy(($10 + [64]), $6, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($10 + [64]) | [8]), ($6 + [8]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($10 + [64]) + [16]), ($6 + [16]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($10 + [64]) + [24]), ($6 + [24]), [8])
	$4 = *($6)
	$9 = CALL db_store_i64(*((($10 + [8]) + [8])), (int_64)6820310209513127936, $7, $4, ($10 + [64]), [32])
	*($6 + [36]) = $9
	$5 = (($10 + [8]) + [16])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$3 }
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($10 + [56]) = $6
	$4 = *($6)
	*($10 + [64]) = $4
	*($10 + [52]) = $9
	$8 = ($10 + [36])
	$5 = *($8)
	if ( ((uint_32)$5 >= (uint_32)*(($10 + [40]))) ){ goto $label$5 }
	*($5 + [8]) = $4
	*($5 + [16]) = $9
	*($10 + [56]) = [0]
	*($5) = $6
	*($8) = ($5 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $52(($10 + [32]), ($10 + [56]), ($10 + [64]), ($10 + [52]))
	
.LABEL $label$4
	$6 = *($10 + [56])
	*($10 + [56]) = [0]
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $73($6)
	
.LABEL $label$1
	CALL _ZN7moretop4more10get_globalEv(($10 + [64]), $0)
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)-2112559507258212352, [25], [62], [25], [25])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)-2039419796931477504, [65], [22], [15], [35])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)4879343126814130176, [40], [47], [20], [30])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)7973505887652282368, [82], [5], [10], [40])
	$5 = *($10 + [32])
	if ( ($5 == 0) ){ goto $label$6 }
	$9 = ($10 + [36])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $73($6)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($10 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $5
	
.LABEL $label$7
	*($9) = $5
	CALL $73($0)
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [96])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [112])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [112])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [112])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [88]) = $0
	if ( ((int_64)$2 <= (int_64)4520775613904060415) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)4520775613904060416) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$14 }
	*($9 + [84]) = [0]
	*($9 + [80]) = [1]
	*($9 + [8 align=4]) = *($9 + [80])
	CALL $7(($9 + [88]), ($9 + [8]))
	goto $label$14 
	
.LABEL $label$25
	if ( ((int_64)$2 == (int_64)-5000817911297212416) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)-2039333636196532224) ){ goto $label$14 }
	*($9 + [60]) = [0]
	*($9 + [56]) = [2]
	*($9 + [32 align=4]) = *($9 + [56])
	CALL $12(($9 + [88]), ($9 + [32]))
	goto $label$14 
	
.LABEL $label$24
	*($9 + [68]) = [0]
	*($9 + [64]) = [3]
	*($9 + [24 align=4]) = *($9 + [64])
	CALL $7(($9 + [88]), ($9 + [24]))
	goto $label$14 
	
.LABEL $label$23
	*($9 + [76]) = [0]
	*($9 + [72]) = [4]
	*($9 + [16 align=4]) = *($9 + [72])
	CALL $9(($9 + [88]), ($9 + [16]))
	goto $label$14 
	
.LABEL $label$22
	*($9 + [52]) = [0]
	*($9 + [48]) = [5]
	*($9 + [40 align=4]) = *($9 + [48])
	CALL $14(($9 + [88]), ($9 + [40]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [96])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [112])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [112])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [640])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $72([56])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = $0
	CALL $18(($8 + [32]), $6)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $17(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $73($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $17 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN7moretop4more6buykeyEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$19 = (*([0] + [4]) - [544])
	*([0] + [4]) = $19
	*($19 + [440]) = $1
	*($19 + [432]) = $2
	*($19 + [424]) = $3
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$3 != (int_64)0), [1248])
	CALL _ZN7moretop4more10get_globalEv(($19 + [400]), $0)
	*(($19 + [392])) = [0]
	*($19 + [376]) = (int_64)-1
	*($19 + [384]) = (int_64)0
	$3 = *($0)
	*($19 + [360]) = $3
	*($19 + [368]) = $3
	$4 = [0]
	$17 = CALL db_find_i64($3, $3, (int_64)7035937633859534848, *($19 + [416]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $37(($19 + [360]), $17)
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)($19 + [360])), [192])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1280])
	CALL eosio_assert(((int_32)*($4 + [64]) ^ (int_32)[1]), [1312])
	$17 = *($4 + [40])
	if ( ($17 == 0) ){ goto $label$2 }
	if ( ((uint_32)$17 > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$2 }
	CALL _ZN7moretop4more4lockEv($0)
	CALL _ZN7moretop4more10get_globalEv(($19 + [448]), $0)
	*(($17 = (($19 + [400]) + [16]))) = *((($19 + [448]) + [16]))
	*((($19 + [400]) + [8])) = *((($19 + [448]) + [8]))
	*($19 + [400]) = *($19 + [448])
	$3 = *($17)
	$14 = *(($19 + [384]))
	$8 = *(($19 + [388]))
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$3 }
	$17 = ($8 + [-24])
	$18 = ([0] - $14)
	
.LOOP $label$4:
	if ( ((int_64)*(*($17)) == (int_64)$3) ){ goto $label$3 }
	$8 = $17
	$11 = ($17 + [-24])
	$17 = $11
	if ( ((int_32)($11 + $18) != (int_32)[-24]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$6 }
	$4 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)($19 + [360])), [192])
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$17 = CALL db_find_i64(*($19 + [360]), *(($19 + [368])), (int_64)7035937633859534848, $3)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $37(($19 + [360]), $17)
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)($19 + [360])), [192])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1280])
	CALL eosio_assert(((int_32)*($4 + [64]) ^ (int_32)[1]), [1312])
	
.LABEL $label$2
	$17 = [0]
	*((($19 + [320]) + [32])) = [0]
	$3 = *($0)
	*($19 + [320]) = $3
	*($19 + [336]) = (int_64)-1
	*($19 + [344]) = (int_64)0
	*($19 + [328]) = $3
	$11 = [0]
	$8 = CALL db_find_i64($3, $3, (int_64)-3851373727820283904, *($19 + [432]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $39(($19 + [320]), $8)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($19 + [320])), [192])
	
.LABEL $label$7
	$12 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($12, [1344])
	*((($19 + [280]) + [32])) = [0]
	*($19 + [296]) = (int_64)-1
	*($19 + [304]) = (int_64)0
	$3 = *($0)
	*($19 + [280]) = $3
	*($19 + [288]) = $3
	*((($19 + [240]) + [32])) = [0]
	*($19 + [256]) = (int_64)-1
	*($19 + [264]) = (int_64)0
	*($19 + [248]) = *($19 + [432])
	*($19 + [240]) = $3
	CALL eosio_assert([1], [848])
	$3 = (int_64)5462355
	
.LOOP $label$9:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($8, [752])
	$3 = *($4 + [72])
	if ( *($4 + [36]) ){ goto $label$17 }
	if ( ((uint_64)$3 > (uint_64)(int_64)999999) ){ goto $label$17 }
	$17 = [0]
	$1 = *($0)
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [336])
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)($19 + [360])), [384])
	CALL eosio_assert(((int_64)*($19 + [360]) == (int_64)CALL $fimport$2()), [432])
	*($4 + [36 align=4]) = (int_64)0
	$3 = *($4)
	CALL eosio_assert([1], [496])
	*($19 + [216]) = (($19 + [448]) + [69])
	*($19 + [212]) = ($19 + [448])
	*($19 + [208]) = ($19 + [448])
	CALL $40(($19 + [208]), $4)
	CALL db_update_i64(*($4 + [84]), $1, ($19 + [448]), [69])
	$8 = ($19 + [376])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$18 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	CALL eosio_assert([1], [848])
	$3 = (int_64)5459781
	$10 = (int_64)1397703940
	
.LOOP $label$20:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	CALL eosio_assert($8, [752])
	$3 = *($19 + [440])
	$13 = *(($19 + [304]))
	$18 = *(($19 + [308]))
	if ( ((int_32)$18 == (int_32)$13) ){ goto $label$23 }
	$17 = ($18 + [-24])
	$14 = ([0] - $13)
	
.LOOP $label$24:
	if ( ((int_64)*(*($17)) == (int_64)$3) ){ goto $label$23 }
	$18 = $17
	$8 = ($17 + [-24])
	$17 = $8
	if ( ((int_32)($8 + $14) != (int_32)[-24]) ){ goto $label$24 }
	
.LABEL $label$23
	if ( ((int_32)$18 == (int_32)$13) ){ goto $label$16 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($19 + [280])), [192])
	$3 = *($19 + [424])
	if ( $17 ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$17
	CALL _ZN7moretop4more17covert_key_to_eosEy(($19 + [448]), $19, $3)
	$10 = *($19 + [456])
	$3 = *($19 + [448])
	$18 = [0]
	goto $label$12 
	
.LABEL $label$16
	$17 = CALL db_find_i64(*($19 + [280]), *(($19 + [288])), (int_64)-5859598064704028672, $3)
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$14 }
	$17 = CALL $15(($19 + [280]), $17)
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($19 + [280])), [192])
	$3 = *($19 + [424])
	
.LABEL $label$15
	$3 = ((int_64)*($17 + [8]) + (int_64)$3)
	goto $label$13 
	
.LABEL $label$14
	$3 = *($19 + [424])
	
.LABEL $label$13
	CALL eosio_assert((uint_64)($3 <= (int_64)10001), [1360])
	$3 = (int_64)50
	$18 = [1]
	
.LABEL $label$12
	CALL _ZN7moretop4more8get_fundEv(($19 + [208]), $0)
	$1 = *($19 + [424])
	CALL eosio_assert([1], [1408])
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1456])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1488])
	CALL eosio_assert([1], [848])
	$2 = ((int_64)$1 * (int_64)$3)
	$3 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$8 = [0]
	
.LABEL $label$25
	CALL eosio_assert($8, [752])
	CALL eosio_assert(((int_64)$10 == (int_64)1397703940), [1520])
	if ( ((int_64)$2 > (int_64)0) ){ goto $label$30 }
	CALL eosio_assert([1], [848])
	$2 = (int_64)1
	
.LABEL $label$30
	CALL eosio_assert([1], [848])
	$3 = (int_64)5459781
	$16 = (int_64)1397703940
	$17 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$8 = [0]
	
.LABEL $label$31
	CALL eosio_assert($8, [752])
	CALL eosio_assert([1], [848])
	$3 = (int_64)5459781
	$7 = (int_64)1397703940
	$17 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$8 = [0]
	
.LABEL $label$36
	CALL eosio_assert($8, [752])
	*($19 + [200]) = $10
	*($19 + [192]) = $2
	CALL eosio_assert([1], [848])
	$3 = (int_64)5459781
	$15 = (int_64)1397703940
	$17 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$8 = [0]
	
.LABEL $label$41
	CALL eosio_assert($8, [752])
	CALL eosio_assert([1], [848])
	$3 = (int_64)5459781
	$9 = (int_64)1397703940
	$17 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$8 = [0]
	
.LABEL $label$46
	CALL eosio_assert($8, [752])
	$5 = (int_64)0
	$1 = (int_64)0
	$6 = (int_64)0
	$3 = (int_64)0
	if ( $18 ){ goto $label$51 }
	$3 = ((int_64)$2 * (int_64)3)
	$3 = ( (int_64)1 ? ((int_64)((int_64)$3 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$3 + (int_64)198) <= (int_64)199) )
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	$1 = ((int_64)$2 * (int_64)10)
	$6 = ( (int_64)1 ? ((int_64)((int_64)$1 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$1 + (int_64)198) <= (int_64)199) )
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	$1 = ((int_64)*($11 + [8]) * (int_64)$2)
	$1 = ( (int_64)1 ? ((int_64)((int_64)$1 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$1 + (int_64)198) <= (int_64)199) )
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	*(($17 = ($19 + [200]))) = $10
	*($19 + [192]) = $1
	$1 = ((int_64)*($11 + [9]) * (int_64)$2)
	$1 = ( (int_64)1 ? ((int_64)((int_64)$1 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$1 + (int_64)198) <= (int_64)199) )
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	$9 = *($17)
	$2 = ((int_64)*($19 + [192]) << (int_64)1)
	$5 = ( (int_64)1 ? ((int_64)((int_64)$2 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$2 + (int_64)198) <= (int_64)199) )
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
	$15 = $10
	$7 = $10
	$16 = $10
	
.LABEL $label$51
	CALL eosio_assert(((int_64)$7 == (int_64)$16), [1584])
	$2 = ((int_64)$3 + (int_64)$6)
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [1632])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1664])
	CALL eosio_assert(((int_64)*((($19 + [192]) + [8])) == (int_64)$16), [1584])
	$2 = ((int_64)*($19 + [192]) + (int_64)$2)
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [1632])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1664])
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [1584])
	$7 = ((int_64)$2 + (int_64)$1)
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1632])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [1664])
	$2 = *($19 + [216])
	*($19 + [184]) = $16
	*((($19 + [160]) + [8])) = [0]
	$10 = *($19 + [440])
	*($19 + [176]) = $3
	*($19 + [160]) = (int_64)0
	$17 = CALL strlen([1696])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$59 }
	*($19 + [160]) = ($17 << [1])
	$8 = (($19 + [160]) | [1])
	if ( $17 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$18 = (($17 + [16]) & [-16])
	$8 = CALL $72($18)
	*($19 + [160]) = ($18 | [1])
	*($19 + [168]) = $8
	*($19 + [164]) = $17
	
.LABEL $label$58
	CALL memcpy($8, [1696], $17)
	
.LABEL $label$57
	*(($8 + $17)) = [0]
	*((($19 + [56]) + [8])) = *((($19 + [176]) + [8]))
	*($19 + [56]) = *($19 + [176])
	CALL _ZN7moretop4more19transfer_from_buyerEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($19, $10, $2, ($19 + [56]), ($19 + [160]))
	if ( ((*($19 + [160]) & [1]) == 0) ){ goto $label$60 }
	CALL $73(*($19 + [168]))
	
.LABEL $label$60
	*($19 + [152]) = $9
	*((($19 + [128]) + [8])) = [0]
	$2 = *($19 + [440])
	*($19 + [144]) = $5
	*($19 + [128]) = (int_64)0
	$10 = *($19 + [224])
	$17 = CALL strlen([1728])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$63 }
	*($19 + [128]) = ($17 << [1])
	$8 = (($19 + [128]) | [1])
	if ( $17 ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	$18 = (($17 + [16]) & [-16])
	$8 = CALL $72($18)
	*($19 + [128]) = ($18 | [1])
	*($19 + [136]) = $8
	*($19 + [132]) = $17
	
.LABEL $label$62
	CALL memcpy($8, [1728], $17)
	
.LABEL $label$61
	*(($8 + $17)) = [0]
	*((($19 + [40]) + [8])) = *((($19 + [144]) + [8]))
	*($19 + [40]) = *($19 + [144])
	CALL _ZN7moretop4more19transfer_from_buyerEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($19, $2, $10, ($19 + [40]), ($19 + [128]))
	if ( ((*($19 + [128]) & [1]) == 0) ){ goto $label$64 }
	CALL $73(*($19 + [136]))
	
.LABEL $label$64
	$2 = *($0)
	$10 = *($19 + [440])
	CALL eosio_assert([1], [1760])
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($7 - $3)) > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1840])
	*($19 + [120]) = $16
	CALL eosio_assert(((int_64)$9 == (int_64)$16), [1760])
	$3 = (int_64)
	*($19 + [112]) = $3($3 - $5))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1840])
	*((($19 + [96]) + [8])) = [0]
	*($19 + [96]) = (int_64)0
	$17 = CALL strlen([1872])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$67 }
	*($19 + [96]) = ($17 << [1])
	$8 = (($19 + [96]) | [1])
	if ( $17 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	$18 = (($17 + [16]) & [-16])
	$8 = CALL $72($18)
	*($19 + [96]) = ($18 | [1])
	*($19 + [104]) = $8
	*($19 + [100]) = $17
	
.LABEL $label$66
	CALL memcpy($8, [1872], $17)
	
.LABEL $label$65
	*(($8 + $17)) = [0]
	*((($19 + [24]) + [8])) = *((($19 + [112]) + [8]))
	*($19 + [24]) = *($19 + [112])
	CALL _ZN7moretop4more19transfer_from_buyerEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($19, $10, $2, ($19 + [24]), ($19 + [96]))
	if ( ((*($19 + [96]) & [1]) == 0) ){ goto $label$68 }
	CALL $73(*($19 + [104]))
	
.LABEL $label$68
	$3 = *($19 + [440])
	$13 = *(($19 + [304]))
	$18 = *(($19 + [308]))
	if ( ((int_32)$18 == (int_32)$13) ){ goto $label$69 }
	$17 = ($18 + [-24])
	$14 = ([0] - $13)
	
.LOOP $label$70:
	if ( ((int_64)*(*($17)) == (int_64)$3) ){ goto $label$69 }
	$18 = $17
	$8 = ($17 + [-24])
	$17 = $8
	if ( ((int_32)($8 + $14) != (int_32)[-24]) ){ goto $label$70 }
	
.LABEL $label$69
	if ( ((int_32)$18 == (int_32)$13) ){ goto $label$75 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($19 + [280])), [192])
	*($19 + [95]) = [1]
	if ( $17 ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$75
	$17 = CALL db_find_i64(*($19 + [280]), *(($19 + [288])), (int_64)-5859598064704028672, $3)
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$73 }
	$17 = CALL $15(($19 + [280]), $17)
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($19 + [280])), [192])
	*($19 + [95]) = [1]
	
.LABEL $label$74
	*($19 + [95]) = [0]
	$8 = CALL is_account(*($17 + [32]))
	if ( ((int_64)$6 < (int_64)1) ){ goto $label$76 }
	if ( ($8 == 0) ){ goto $label$76 }
	$3 = ((int_64)$6 * (int_64)10000)
	CALL _ZN7moretop4more9add_awardEyyy($0, *(($17 + [32])), $3, $3)
	
.LABEL $label$76
	$2 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($17 + [40]) == (int_32)($19 + [280])), [384])
	CALL eosio_assert(((int_64)*($19 + [280]) == (int_64)CALL $fimport$2()), [432])
	*($17 + [8]) = ((int_64)*($17 + [8]) + (int_64)*($19 + [424]))
	$3 = *($17)
	CALL eosio_assert([1], [496])
	*($19 + [536]) = (($19 + [448]) + [40])
	*($19 + [532]) = ($19 + [448])
	*($19 + [528]) = ($19 + [448])
	CALL $16(($19 + [528]), $17)
	CALL db_update_i64(*($17 + [44]), $2, ($19 + [448]), [40])
	$17 = ($19 + [296])
	if ( (uint_64)($3 <= *($17)) ){ goto $label$71 }
	*($17) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	goto $label$71 
	
.LABEL $label$73
	*($19 + [95]) = [1]
	
.LABEL $label$72
	$2 = *($0)
	CALL eosio_assert(((int_64)*($19 + [280]) == (int_64)CALL $fimport$2()), [560])
	*(($17 = CALL $72([56])) + [24]) = (int_64)0
	*($17 + [16]) = (int_64)0
	*($17 + [32]) = (int_64)0
	*($17 + [40]) = ($19 + [280])
	*($17) = *($19 + [440])
	*($17 + [8]) = *($19 + [424])
	*($19 + [536]) = (($19 + [448]) + [40])
	*($19 + [532]) = ($19 + [448])
	*($19 + [528]) = ($19 + [448])
	CALL $16(($19 + [528]), $17)
	$3 = *($17)
	$18 = CALL db_store_i64(*(($19 + [288])), (int_64)-5859598064704028672, $2, $3, ($19 + [448]), [40])
	*($17 + [44]) = $18
	$8 = ($19 + [296])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$77 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$77
	*($19 + [528]) = $17
	$3 = *($17)
	*($19 + [448]) = $3
	*($19 + [540]) = $18
	$14 = ($19 + [308])
	$8 = *($14)
	if ( ((uint_32)$8 >= (uint_32)*(($19 + [312]))) ){ goto $label$79 }
	*($8 + [8]) = $3
	*($8 + [16]) = $18
	*($19 + [528]) = [0]
	*($8) = $17
	*($14) = ($8 + [24])
	goto $label$78 
	
.LABEL $label$79
	CALL $17(($19 + [304]), ($19 + [528]), ($19 + [448]), ($19 + [540]))
	
.LABEL $label$78
	$17 = *($19 + [528])
	*($19 + [528]) = [0]
	if ( ($17 == 0) ){ goto $label$71 }
	CALL $73($17)
	
.LABEL $label$71
	$17 = CALL db_lowerbound_i64(*($19 + [240]), *((($19 + [240]) + [8])), (int_64)-3641876953342541824, (int_64)0)
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$80 }
	$9 = ((int_64)$1 * (int_64)10000)
	$8 = (($19 + [448]) + [16])
	$18 = (($19 + [448]) | [8])
	$17 = CALL $45(($19 + [240]), $17)
	$14 = [1]
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$53 }
	$20 = [4]
	goto $label$52 
	
.LABEL $label$80
	$8 = ($19 + [464])
	$18 = (($19 + [448]) | [8])
	$13 = ($19 + [448])
	$20 = [49]
	goto $label$52 
	
.LABEL $label$56
	CALL $74(($19 + [160]))
	
.LABEL $label$55
	CALL $74(($19 + [128]))
	
.LABEL $label$54
	CALL $74(($19 + [96]))
	
.LABEL $label$53
	$20 = [0]
	
.LABEL $label$52
	
.LOOP $label$81:
	goto $label$170 
	
.LABEL $label$176
	$3 = *(($11 + [16]))
	if ( (int_64)($3 == 0) ){ goto $label$116 }
	$20 = [5]
	goto $label$81 
	
.LABEL $label$175
	$2 = ((int_64)$9 * (int_64)*($17 + [8]))
	$10 = ((uint_64)$2 / (uint_64)$3)
	if ( ((uint_64)$3 > (uint_64)$2) ){ goto $label$115 }
	$20 = [6]
	goto $label$81 
	
.LABEL $label$174
	$2 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)($19 + [240])), [384])
	CALL eosio_assert(((int_64)*($19 + [240]) == (int_64)CALL $fimport$2()), [432])
	*($17 + [16]) = ((int_64)*($17 + [16]) + (int_64)$10)
	$3 = *($17)
	CALL eosio_assert([1], [496])
	CALL eosio_assert([1], [624])
	CALL memcpy(($19 + [448]), $17, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($18, ($17 + [8]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($8, ($17 + [16]), [8])
	CALL db_update_i64(*($17 + [28]), $2, ($19 + [448]), [24])
	$13 = (($19 + [240]) + [16])
	if ( (uint_64)($3 <= *($13)) ){ goto $label$110 }
	$20 = [7]
	goto $label$81 
	
.LABEL $label$173
	*($13) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	$20 = [8]
	goto $label$81 
	
.LABEL $label$172
	CALL _ZN7moretop4more9add_awardEyyy($0, *($17), $10, (int_64)0)
	goto $label$114 
	
.LABEL $label$171
	$17 = CALL $45(($19 + [240]), $17)
	if ( ((int_64)$1 >= (int_64)1) ){ goto $label$113 }
	$20 = [0]
	goto $label$81 
	
.LABEL $label$170
	if ( ((int_64)*($17) != (int_64)*($19 + [440])) ){ goto $label$117 }
	$20 = [56]
	goto $label$81 
	
.LABEL $label$169
	$2 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)($19 + [240])), [384])
	CALL eosio_assert(((int_64)*($19 + [240]) == (int_64)CALL $fimport$2()), [432])
	*($17 + [8]) = ((int_64)*($17 + [8]) + (int_64)*($19 + [424]))
	$3 = *($17)
	CALL eosio_assert([1], [496])
	CALL eosio_assert([1], [624])
	CALL memcpy(($19 + [448]), $17, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($18, ($17 + [8]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($8, ($17 + [16]), [8])
	CALL db_update_i64(*($17 + [28]), $2, ($19 + [448]), [24])
	$14 = (($19 + [240]) + [16])
	if ( (uint_64)($3 <= *($14)) ){ goto $label$82 }
	$20 = [57]
	goto $label$81 
	
.LABEL $label$168
	*($14) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	$20 = [58]
	goto $label$81 
	
.LABEL $label$167
	$17 = ($17 + [28])
	$14 = [0]
	goto $label$112 
	
.LABEL $label$166
	$17 = ($17 + [28])
	$20 = [2]
	goto $label$81 
	
.LABEL $label$165
	CALL eosio_assert([1], [960])
	$17 = CALL db_next_i64(*($17), ($19 + [448]))
	if ( ((int_32)$17 >= (int_32)[0]) ){ goto $label$111 }
	$20 = [9]
	goto $label$81 
	
.LABEL $label$164
	$13 = ($19 + [448])
	if ( ($14 & [1]) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$163
	$1 = *($0)
	CALL eosio_assert(((int_64)*($19 + [240]) == (int_64)CALL $fimport$2()), [560])
	*(($17 = CALL $72([40])) + [16]) = (int_64)0
	*($17 + [24]) = ($19 + [240])
	*($17) = *($19 + [440])
	*($17 + [8]) = *($19 + [424])
	CALL eosio_assert([1], [624])
	CALL memcpy($13, $17, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($18, ($17 + [8]), [8])
	CALL eosio_assert([1], [624])
	CALL memcpy($8, ($17 + [16]), [8])
	$3 = *($17)
	$18 = CALL db_store_i64(*((($19 + [240]) + [8])), (int_64)-3641876953342541824, $1, $3, $13, [24])
	*($17 + [28]) = $18
	$8 = (($19 + [240]) + [16])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$85 }
	$20 = [50]
	goto $label$81 
	
.LABEL $label$162
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	$20 = [51]
	goto $label$81 
	
.LABEL $label$161
	*($19 + [528]) = $17
	$3 = *($17)
	*($19 + [448]) = $3
	*($19 + [540]) = $18
	$14 = ($19 + [268])
	$8 = *($14)
	if ( ((uint_32)$8 >= (uint_32)*(($19 + [272]))) ){ goto $label$84 }
	$20 = [55]
	goto $label$81 
	
.LABEL $label$160
	*($8 + [8]) = $3
	*($8 + [16]) = $18
	*($19 + [528]) = [0]
	*($8) = $17
	*($14) = ($8 + [24])
	goto $label$83 
	
.LABEL $label$159
	CALL $46(($19 + [264]), ($19 + [528]), ($19 + [448]), ($19 + [540]))
	$20 = [53]
	goto $label$81 
	
.LABEL $label$158
	$17 = *($19 + [528])
	*($19 + [528]) = [0]
	if ( ($17 == 0) ){ goto $label$107 }
	$20 = [54]
	goto $label$81 
	
.LABEL $label$157
	CALL $73($17)
	$20 = [10]
	goto $label$81 
	
.LABEL $label$156
	*($19 + [80]) = $16
	*(($19 + [16])) = $16
	*($19 + [72]) = $7
	$3 = *($19 + [440])
	*($19 + [8]) = $7
	CALL _ZN7moretop4more10add_recordEhN5eosio5assetEy($0, [1], ($19 + [8]), $3)
	$3 = *($0)
	*($19 + [452]) = ($19 + [440])
	*($19 + [448]) = ($19 + [424])
	*($19 + [456]) = ($19 + [432])
	*($19 + [460]) = ($19 + [400])
	*($19 + [464]) = ($19 + [192])
	*($19 + [468]) = ($19 + [95])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [336])
	CALL $47(($19 + [360]), $4, $3, ($19 + [448]))
	$1 = *($0)
	CALL eosio_assert($12, [336])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)($19 + [320])), [384])
	CALL eosio_assert(((int_64)*($19 + [320]) == (int_64)CALL $fimport$2()), [432])
	*($11 + [16]) = ((int_64)*($11 + [16]) + (int_64)*($19 + [424]))
	$3 = *($11)
	CALL eosio_assert([1], [496])
	*($19 + [536]) = (($19 + [448]) + [20])
	*($19 + [532]) = ($19 + [448])
	*($19 + [528]) = ($19 + [448])
	CALL $48(($19 + [528]), $11)
	CALL db_update_i64(*($11 + [28]), $1, ($19 + [448]), [20])
	$17 = ($19 + [336])
	if ( (uint_64)($3 <= *($17)) ){ goto $label$106 }
	$20 = [11]
	goto $label$81 
	
.LABEL $label$155
	*($17) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	$20 = [12]
	goto $label$81 
	
.LABEL $label$154
	$11 = *($19 + [264])
	if ( ($11 == 0) ){ goto $label$105 }
	$20 = [13]
	goto $label$81 
	
.LABEL $label$153
	$8 = ($19 + [268])
	$17 = *($8)
	if ( ((int_32)$17 == (int_32)$11) ){ goto $label$104 }
	$20 = [14]
	goto $label$81 
	
.LABEL $label$152
	$20 = [15]
	goto $label$81 
	
.LABEL $label$151
	$17 = ($17 + [-24])
	$0 = *($17)
	*($17) = [0]
	if ( ($0 == 0) ){ goto $label$102 }
	$20 = [16]
	goto $label$81 
	
.LABEL $label$150
	CALL $73($0)
	$20 = [17]
	goto $label$81 
	
.LABEL $label$149
	if ( ((int_32)$11 != (int_32)$17) ){ goto $label$103 }
	$20 = [18]
	goto $label$81 
	
.LABEL $label$148
	$17 = *(($19 + [264]))
	goto $label$101 
	
.LABEL $label$147
	$17 = $11
	$20 = [19]
	goto $label$81 
	
.LABEL $label$146
	*($8) = $11
	CALL $73($17)
	$20 = [20]
	goto $label$81 
	
.LABEL $label$145
	$11 = *($19 + [304])
	if ( ($11 == 0) ){ goto $label$100 }
	$20 = [21]
	goto $label$81 
	
.LABEL $label$144
	$8 = ($19 + [308])
	$17 = *($8)
	if ( ((int_32)$17 == (int_32)$11) ){ goto $label$99 }
	$20 = [22]
	goto $label$81 
	
.LABEL $label$143
	$20 = [23]
	goto $label$81 
	
.LABEL $label$142
	$17 = ($17 + [-24])
	$0 = *($17)
	*($17) = [0]
	if ( ($0 == 0) ){ goto $label$97 }
	$20 = [24]
	goto $label$81 
	
.LABEL $label$141
	CALL $73($0)
	$20 = [25]
	goto $label$81 
	
.LABEL $label$140
	if ( ((int_32)$11 != (int_32)$17) ){ goto $label$98 }
	$20 = [26]
	goto $label$81 
	
.LABEL $label$139
	$17 = *(($19 + [304]))
	goto $label$96 
	
.LABEL $label$138
	$17 = $11
	$20 = [27]
	goto $label$81 
	
.LABEL $label$137
	*($8) = $11
	CALL $73($17)
	$20 = [28]
	goto $label$81 
	
.LABEL $label$136
	$11 = *($19 + [344])
	if ( ($11 == 0) ){ goto $label$95 }
	$20 = [29]
	goto $label$81 
	
.LABEL $label$135
	$8 = ($19 + [348])
	$17 = *($8)
	if ( ((int_32)$17 == (int_32)$11) ){ goto $label$94 }
	$20 = [30]
	goto $label$81 
	
.LABEL $label$134
	$20 = [31]
	goto $label$81 
	
.LABEL $label$133
	$17 = ($17 + [-24])
	$0 = *($17)
	*($17) = [0]
	if ( ($0 == 0) ){ goto $label$92 }
	$20 = [32]
	goto $label$81 
	
.LABEL $label$132
	CALL $73($0)
	$20 = [33]
	goto $label$81 
	
.LABEL $label$131
	if ( ((int_32)$11 != (int_32)$17) ){ goto $label$93 }
	$20 = [34]
	goto $label$81 
	
.LABEL $label$130
	$17 = *(($19 + [344]))
	goto $label$91 
	
.LABEL $label$129
	$17 = $11
	$20 = [35]
	goto $label$81 
	
.LABEL $label$128
	*($8) = $11
	CALL $73($17)
	$20 = [36]
	goto $label$81 
	
.LABEL $label$127
	$11 = *($19 + [384])
	if ( ($11 == 0) ){ goto $label$90 }
	$20 = [37]
	goto $label$81 
	
.LABEL $label$126
	$8 = ($19 + [388])
	$17 = *($8)
	if ( ((int_32)$17 == (int_32)$11) ){ goto $label$89 }
	$20 = [38]
	goto $label$81 
	
.LABEL $label$125
	$20 = [39]
	goto $label$81 
	
.LABEL $label$124
	$17 = ($17 + [-24])
	$0 = *($17)
	*($17) = [0]
	if ( ($0 == 0) ){ goto $label$87 }
	$20 = [40]
	goto $label$81 
	
.LABEL $label$123
	CALL $73($0)
	$20 = [41]
	goto $label$81 
	
.LABEL $label$122
	if ( ((int_32)$11 != (int_32)$17) ){ goto $label$88 }
	$20 = [42]
	goto $label$81 
	
.LABEL $label$121
	$17 = *(($19 + [384]))
	goto $label$86 
	
.LABEL $label$120
	$17 = $11
	$20 = [43]
	goto $label$81 
	
.LABEL $label$119
	*($8) = $11
	CALL $73($17)
	$20 = [44]
	goto $label$81 
	
.LABEL $label$118
	*([0] + [4]) = ($19 + [544])
	return 
	
.LABEL $label$117
	$20 = [1]
	goto $label$81 
	
.LABEL $label$116
	$20 = [0]
	goto $label$81 
	
.LABEL $label$115
	$20 = [0]
	goto $label$81 
	
.LABEL $label$114
	$20 = [0]
	goto $label$81 
	
.LABEL $label$113
	$20 = [4]
	goto $label$81 
	
.LABEL $label$112
	$20 = [2]
	goto $label$81 
	
.LABEL $label$111
	$20 = [3]
	goto $label$81 
	
.LABEL $label$110
	$20 = [8]
	goto $label$81 
	
.LABEL $label$109
	$20 = [49]
	goto $label$81 
	
.LABEL $label$108
	$20 = [10]
	goto $label$81 
	
.LABEL $label$107
	$20 = [10]
	goto $label$81 
	
.LABEL $label$106
	$20 = [12]
	goto $label$81 
	
.LABEL $label$105
	$20 = [20]
	goto $label$81 
	
.LABEL $label$104
	$20 = [48]
	goto $label$81 
	
.LABEL $label$103
	$20 = [15]
	goto $label$81 
	
.LABEL $label$102
	$20 = [17]
	goto $label$81 
	
.LABEL $label$101
	$20 = [19]
	goto $label$81 
	
.LABEL $label$100
	$20 = [28]
	goto $label$81 
	
.LABEL $label$99
	$20 = [47]
	goto $label$81 
	
.LABEL $label$98
	$20 = [23]
	goto $label$81 
	
.LABEL $label$97
	$20 = [25]
	goto $label$81 
	
.LABEL $label$96
	$20 = [27]
	goto $label$81 
	
.LABEL $label$95
	$20 = [36]
	goto $label$81 
	
.LABEL $label$94
	$20 = [46]
	goto $label$81 
	
.LABEL $label$93
	$20 = [31]
	goto $label$81 
	
.LABEL $label$92
	$20 = [33]
	goto $label$81 
	
.LABEL $label$91
	$20 = [35]
	goto $label$81 
	
.LABEL $label$90
	$20 = [44]
	goto $label$81 
	
.LABEL $label$89
	$20 = [45]
	goto $label$81 
	
.LABEL $label$88
	$20 = [39]
	goto $label$81 
	
.LABEL $label$87
	$20 = [41]
	goto $label$81 
	
.LABEL $label$86
	$20 = [43]
	goto $label$81 
	
.LABEL $label$85
	$20 = [51]
	goto $label$81 
	
.LABEL $label$84
	$20 = [52]
	goto $label$81 
	
.LABEL $label$83
	$20 = [53]
	goto $label$81 
	
.LABEL $label$82
	$20 = [58]
	goto $label$81 
	(unreachable)
	(unreachable)
	(unreachable)
	$20
}

void .FUNC _ZN7moretop4more8withdrawEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [208])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$7 = [0]
	*(($13 + [184])) = [0]
	*($13 + [168]) = (int_64)-1
	*($13 + [176]) = (int_64)0
	$9 = *($0)
	*($13 + [152]) = $9
	*($13 + [160]) = $9
	$3 = [0]
	$2 = CALL db_find_i64($9, $9, (int_64)-5859598064704028672, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $15(($13 + [152]), $2)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)($13 + [152])), [192])
	
.LABEL $label$1
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [672])
	CALL eosio_assert(((uint_64)*($3 + [16]) > (uint_64)(int_64)999999999), [688])
	$9 = *($3 + [16])
	CALL eosio_assert([1], [848])
	$5 = ((uint_64)$9 / (uint_64)(int_64)10000)
	$9 = (int_64)5459781
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$2 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = [0]
	
.LABEL $label$2
	CALL eosio_assert($2, [752])
	$12 = *($0)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [784]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$12 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($13 + [104]) = $10
	*($13 + [96]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [800]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$18 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$18
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$13 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [816]
	$12 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$24 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$2 = ($2 + [165])
	goto $label$22 
	
.LABEL $label$24
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$20
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$19 }
	*(($13 + [40])) = [0]
	*($13 + [32]) = (int_64)0
	$7 = CALL strlen([832])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$28 }
	*($13 + [32]) = ($7 << [1])
	$2 = (($13 + [32]) | [1])
	if ( $7 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$6 = (($7 + [16]) & [-16])
	$2 = CALL $72($6)
	*($13 + [32]) = ($6 | [1])
	*($13 + [40]) = $2
	*($13 + [36]) = $7
	
.LABEL $label$27
	CALL memcpy($2, [832], $7)
	
.LABEL $label$26
	*(($2 + $7)) = [0]
	*(($13 + [72])) = (int_64)1397703940
	*(($13 + [84])) = *($13 + [36])
	*($13 + [56]) = $1
	$7 = ($13 + [40])
	*(($13 + [88])) = *($7)
	*($13 + [48]) = *($0)
	*($13 + [64]) = $5
	*($13 + [80]) = *($13 + [32])
	*($13 + [32]) = [0]
	*($13 + [36]) = [0]
	*($7) = [0]
	$7 = CALL $19(($13 + [112]), ($13 + [96]), $10, $12, ($13 + [48]))
	CALL $20(($13 + [192]), $7)
	$2 = *($13 + [192])
	CALL send_inline($2, (*($13 + [196]) - $2))
	$2 = *($13 + [192])
	if ( ($2 == 0) ){ goto $label$29 }
	*($13 + [196]) = $2
	CALL $73($2)
	
.LABEL $label$29
	$2 = *($7 + [28])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($7 + [32])) = $2
	CALL $73($2)
	
.LABEL $label$30
	$2 = *($7 + [16])
	if ( ($2 == 0) ){ goto $label$31 }
	*(($7 + [20])) = $2
	CALL $73($2)
	
.LABEL $label$31
	if ( ((*(($13 + [80])) & [1]) == 0) ){ goto $label$32 }
	CALL $73(*(($13 + [88])))
	
.LABEL $label$32
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$33 }
	CALL $73(*(($13 + [40])))
	
.LABEL $label$33
	*($13 + [24]) = (int_64)1397703940
	*(($13 + [8])) = (int_64)1397703940
	*($13 + [16]) = $5
	*($13) = $5
	CALL _ZN7moretop4more10add_recordEhN5eosio5assetEy($0, [2], $13, $1)
	$11 = *($0)
	CALL eosio_assert($4, [336])
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)($13 + [152])), [384])
	CALL eosio_assert(((int_64)*($13 + [152]) == (int_64)CALL $fimport$2()), [432])
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	$9 = *($3)
	CALL eosio_assert([1], [496])
	*($13 + [120]) = (($13 + [48]) + [40])
	*($13 + [116]) = ($13 + [48])
	*($13 + [112]) = ($13 + [48])
	CALL $16(($13 + [112]), $3)
	CALL db_update_i64(*($3 + [44]), $11, ($13 + [48]), [40])
	$7 = ($13 + [168])
	if ( (uint_64)($9 <= *($7)) ){ goto $label$34 }
	*($7) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$34
	$3 = *($13 + [176])
	if ( ($3 == 0) ){ goto $label$35 }
	$0 = ($13 + [180])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$37 }
	
.LOOP $label$38:
	$7 = ($7 + [-24])
	$2 = *($7)
	*($7) = [0]
	if ( ($2 == 0) ){ goto $label$39 }
	CALL $73($2)
	
.LABEL $label$39
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$38 }
	$7 = *(($13 + [176]))
	goto $label$36 
	
.LABEL $label$37
	$7 = $3
	
.LABEL $label$36
	*($0) = $3
	CALL $73($7)
	
.LABEL $label$35
	*([0] + [4]) = ($13 + [208])
	return (unreachable)
	
.LABEL $label$25
	CALL $74(($13 + [32]))
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [112])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN7moretop4more9regsharerEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [128])
	CALL eosio_assert(CALL $fimport$12($2), [160])
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($0)
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	$6 = CALL db_find_i64($4, $4, (int_64)-5859598064704028672, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $15(($7 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($7 + [8])), [192])
	CALL eosio_assert((int_64)(*($6 + [32]) == 0), [256])
	CALL eosio_assert((int_64)(*($6 + [8]) == 0), [288])
	$4 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($7 + [8])), [384])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [432])
	*($6 + [32]) = $2
	$1 = *($6)
	CALL eosio_assert([1], [496])
	*($7 + [104]) = (($7 + [48]) + [40])
	*($7 + [100]) = ($7 + [48])
	*($7 + [96]) = ($7 + [48])
	CALL $16(($7 + [96]), $6)
	CALL db_update_i64(*($6 + [44]), $4, ($7 + [48]), [40])
	$6 = ($7 + [24])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$3 = *($7 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$4 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [560])
	*(($6 = CALL $72([56])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = ($7 + [8])
	*($6 + [32]) = $2
	*($6) = $1
	*($7 + [104]) = (($7 + [48]) + [40])
	*($7 + [100]) = ($7 + [48])
	*($7 + [96]) = ($7 + [48])
	CALL $16(($7 + [96]), $6)
	$1 = *($6)
	$3 = CALL db_store_i64(*(($7 + [16])), (int_64)-5859598064704028672, $4, $1, ($7 + [48]), [40])
	*($6 + [44]) = $3
	$0 = ($7 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($7 + [96]) = $6
	$1 = *($6)
	*($7 + [48]) = $1
	*($7 + [92]) = $3
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((uint_32)$0 >= (uint_32)*(($7 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $1
	*($0 + [16]) = $3
	*($7 + [96]) = [0]
	*($0) = $6
	*($5) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $17(($7 + [32]), ($7 + [96]), ($7 + [48]), ($7 + [92]))
	
.LABEL $label$6
	$6 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $73($6)
	
.LABEL $label$3
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $73($0)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$10 }
	$6 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$6 = $3
	
.LABEL $label$8
	*($5) = $3
	CALL $73($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [112])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $76($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $72([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $30($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $35(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN7moretop4more18set_current_numberEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$3 = *($0)
	*($7 + [8]) = $3
	*($7 + [16]) = $3
	$6 = CALL db_find_i64($3, $3, (int_64)7235159537265672192, $3)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $60(($7 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($7 + [8])), [192])
	$4 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)($7 + [8])), [384])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [432])
	*($6 + [16]) = $1
	$3 = *($6)
	CALL eosio_assert([1], [496])
	CALL eosio_assert([1], [624])
	CALL memcpy(($7 + [64]), $6, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($7 + [64]) | [8]), ($6 + [8]), [4])
	CALL eosio_assert([1], [624])
	CALL memcpy((($7 + [64]) | [12]), ($6 + [16]), [8])
	CALL db_update_i64(*($6 + [28]), $4, ($7 + [64]), [20])
	$6 = (($7 + [8]) + [16])
	if ( (uint_64)($3 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	$2 = *($7 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$4 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$2()), [560])
	*(($6 = CALL $72([40])) + [24]) = ($7 + [8])
	*($6 + [8]) = [21600]
	*($6 + [16]) = $1
	*($6) = *($0)
	CALL eosio_assert([1], [624])
	CALL memcpy(($7 + [64]), $6, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($7 + [64]) | [8]), ($6 + [8]), [4])
	CALL eosio_assert([1], [624])
	CALL memcpy((($7 + [64]) | [12]), ($6 + [16]), [8])
	$3 = *($6)
	$2 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)7235159537265672192, $4, $3, ($7 + [64]), [20])
	*($6 + [28]) = $2
	$0 = (($7 + [8]) + [16])
	if ( (uint_64)($3 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($7 + [56]) = $6
	$3 = *($6)
	*($7 + [64]) = $3
	*($7 + [52]) = $2
	$5 = ($7 + [36])
	$0 = *($5)
	if ( ((uint_32)$0 >= (uint_32)*(($7 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $3
	*($0 + [16]) = $2
	*($7 + [56]) = [0]
	*($0) = $6
	*($5) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $61(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$6
	$6 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $73($6)
	
.LABEL $label$3
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $73($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$6 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$6 = $2
	
.LABEL $label$8
	*($5) = $2
	CALL $73($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $50 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$0), [192])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)6820310209513127936, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $49($0, $5)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$0), [192])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($1 + [11]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [624])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [624])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [992])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1040])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1104])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $73($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $73($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC _ZN7moretop4more10creategameEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [176])
	*([0] + [4]) = $10
	CALL _ZN7moretop4more10get_globalEv(($10 + [48]), $0)
	$8 = *($10 + [64])
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($0)
	*($10 + [8]) = $7
	*($10 + [16]) = $7
	$2 = ((int_64)$8 + (int_64)1)
	$6 = CALL db_find_i64($7, $7, (int_64)7035937633859534848, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $37(($10 + [8]), $6)
	CALL eosio_assert(((int_32)*($9 + [80]) == (int_32)($10 + [8])), [192])
	
.LABEL $label$1
	CALL eosio_assert(($9 == 0), [1968])
	$3 = *(($10 + [32]))
	$5 = *(($10 + [36]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$9 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$3:
	if ( ((int_64)*(*($9)) == (int_64)$8) ){ goto $label$2 }
	$5 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$5 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [80]) == (int_32)($10 + [8])), [192])
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	$9 = CALL db_find_i64(*($10 + [8]), *(($10 + [16])), (int_64)7035937633859534848, $8)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $37(($10 + [8]), $9)
	CALL eosio_assert(((int_32)*($5 + [80]) == (int_32)($10 + [8])), [192])
	
.LABEL $label$4
	CALL eosio_assert([1], [848])
	$8 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [752])
	$8 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ($5 == 0) ){ goto $label$11 }
	CALL eosio_assert(*($5 + [64]), [2000])
	
.LABEL $label$11
	$3 = (CASTING uint_32)(uint_64 $8)
	$7 = *($0)
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$2()), [560])
	*(($6 = CALL $72([96])) + [16]) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	CALL eosio_assert([1], [848])
	$4 = ($6 + [8])
	$8 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$5 = [0]
	
.LABEL $label$12
	CALL eosio_assert($5, [752])
	*($6 + [24]) = (int_64)0
	*($6 + [36 align=4]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [64]) = [0]
	*($6 + [72]) = (int_64)0
	*($6 + [80]) = ($10 + [8])
	*($6) = $2
	*(($4 + [12])) = *(($1 + [12]))
	*(($4 + [8])) = *(($1 + [8]))
	*(($4 + [4])) = *(($1 + [4]))
	*($4) = *($1)
	*($6 + [32]) = $3
	*($10 + [168]) = (($10 + [80]) + [69])
	*($10 + [164]) = ($10 + [80])
	*($10 + [160]) = ($10 + [80])
	CALL $40(($10 + [160]), $6)
	$8 = *($6)
	$5 = CALL db_store_i64(*((($10 + [8]) + [8])), (int_64)7035937633859534848, $7, $8, ($10 + [80]), [69])
	*($6 + [84]) = $5
	$9 = ($10 + [24])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$17 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($10 + [160]) = $6
	$8 = *($6)
	*($10 + [80]) = $8
	*($10 + [76]) = $5
	$4 = ($10 + [36])
	$9 = *($4)
	if ( ((uint_32)$9 >= (uint_32)*(($10 + [40]))) ){ goto $label$19 }
	*($9 + [8]) = $8
	*($9 + [16]) = $5
	*($10 + [160]) = [0]
	*($9) = $6
	*($4) = ($9 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $58(($10 + [32]), ($10 + [160]), ($10 + [80]), ($10 + [76]))
	
.LABEL $label$18
	$9 = *($10 + [160])
	*($10 + [160]) = [0]
	if ( ($9 == 0) ){ goto $label$20 }
	CALL $73($9)
	
.LABEL $label$20
	CALL _ZN7moretop4more18set_current_numberEy($0, $2)
	$5 = *($10 + [32])
	if ( ($5 == 0) ){ goto $label$21 }
	$4 = ($10 + [36])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$23 }
	
.LOOP $label$24:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $73($6)
	
.LABEL $label$25
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$24 }
	$9 = *(($10 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$9 = $5
	
.LABEL $label$22
	*($4) = $5
	CALL $73($9)
	
.LABEL $label$21
	*([0] + [4]) = ($10 + [176])
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $32(*($1), ($0 + [32]))
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1168])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $30($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [112])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $29($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $77($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $72($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $77($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $73($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $74($7)
	return (unreachable)
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [992])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1040])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1104])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $73($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $73($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC _ZN7moretop4more10add_recordEhN5eosio5assetEy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	*($6 + [91]) = $1
	$1 = [0]
	*(($6 + [80])) = [0]
	*($6 + [64]) = (int_64)-1
	*($6 + [72]) = (int_64)0
	$5 = *($0)
	*($6 + [48]) = $5
	*($6 + [56]) = $5
	*($6 + [40]) = $3
	CALL $22(($6 + [24]), ($6 + [40]))
	$3 = *($0)
	*($6 + [12]) = $2
	*($6 + [8]) = ($6 + [91])
	*($6 + [16]) = ($6 + [24])
	*($6 + [120]) = $3
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$2()), [560])
	*($6 + [100]) = ($6 + [8])
	*($6 + [96]) = ($6 + [48])
	*($6 + [104]) = ($6 + [120])
	*(($0 = CALL $72([56])) + [20]) = [0]
	*($0 + [12 align=4]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)1398362884
	CALL eosio_assert([1], [848])
	$5 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$2 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	CALL eosio_assert($2, [752])
	*($0 + [40]) = ($6 + [48])
	CALL $23(($6 + [96]), $0)
	*($6 + [112]) = $0
	$5 = *($0)
	*($6 + [96]) = $5
	$2 = *($0 + [44])
	*($6 + [92]) = $2
	$4 = ($6 + [76])
	$1 = *($4)
	if ( ((uint_32)$1 >= (uint_32)*(($6 + [80]))) ){ goto $label$7 }
	*($1 + [8]) = $5
	*($1 + [16]) = $2
	*($6 + [112]) = [0]
	*($1) = $0
	*($4) = ($1 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $24(($6 + [72]), ($6 + [112]), ($6 + [96]), ($6 + [92]))
	
.LABEL $label$6
	$1 = *($6 + [112])
	*($6 + [112]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$9 }
	CALL $73(*(($1 + [20])))
	
.LABEL $label$9
	CALL $73($1)
	
.LABEL $label$8
	$1 = CALL db_lowerbound_i64(*($6 + [48]), *(($6 + [56])), (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $25(($6 + [48]), $1)
	CALL eosio_assert([1], [960])
	$1 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	CALL $25(($6 + [48]), $1)
	$1 = [0]
	$0 = CALL db_lowerbound_i64(*($6 + [48]), *(($6 + [56])), (int_64)-5003134530400288768, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL $25(($6 + [48]), $0)
	
.LABEL $label$11
	$0 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($0, [912])
	CALL eosio_assert($0, [960])
	$0 = CALL db_next_i64(*($1 + [44]), ($6 + [96]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$12 }
	CALL $25(($6 + [48]), $0)
	
.LABEL $label$12
	CALL $26(($6 + [48]), $1)
	
.LABEL $label$10
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $73(*($6 + [32]))
	
.LABEL $label$13
	$2 = *($6 + [72])
	if ( ($2 == 0) ){ goto $label$14 }
	$4 = ($6 + [76])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	if ( ((*($0 + [12]) & [1]) == 0) ){ goto $label$19 }
	CALL $73(*(($0 + [20])))
	
.LABEL $label$19
	CALL $73($0)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$17 }
	$1 = *(($6 + [72]))
	goto $label$15 
	
.LABEL $label$16
	$1 = $2
	
.LABEL $label$15
	*($4) = $2
	CALL $73($1)
	
.LABEL $label$14
	*([0] + [4]) = ($6 + [128])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $30($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [624])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [624])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $34(CALL $33($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1 + [8]) = *(*($4))
	$2 = *($0)
	$3 = *($4 + [4])
	*($1 + [24]) = *($3)
	*(($1 + [32])) = *(($3 + [8]))
	CALL $75(($1 + [12]), CALL $78(*($4 + [8]), [1], [10], [1184]))
	*($1) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$4 = *($1 + [12])
	$3 = ( *(($1 + [16])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [25])
	$5 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($6 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $4)
	CALL $31($7, $1)
	$5 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134530400288768, *(*($0 + [8])), $5, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $72([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1188]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $82($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $77($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [640])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $72([56])) + [20]) = [0]
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)1398362884
	CALL eosio_assert([1], [848])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [752])
	*($4 + [40]) = $0
	CALL $27(($8 + [32]), $4)
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [44])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $24($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((*($5 + [12]) & [1]) == 0) ){ goto $label$15 }
	CALL $73(*(($5 + [20])))
	
.LABEL $label$15
	CALL $73($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [12]) & [1]) == 0) ){ goto $label$11 }
	CALL $73(*(($1 + [20])))
	
.LABEL $label$11
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $73($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $28($0, ($1 + [12]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [992])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1040])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1104])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [12]) & [1]) == 0) ){ goto $label$7 }
	CALL $73(*(($4 + [20])))
	
.LABEL $label$7
	CALL $73($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [12]) & [1]) == 0) ){ goto $label$10 }
	CALL $73(*(($4 + [20])))
	
.LABEL $label$10
	CALL $73($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $70($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10576])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $69([2180], $0)
}

void .FUNC _ZN7moretop4more10init_teamsEv (int_32 $0)
{
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)-2112559507258212352, [25], [62], [25], [25])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)-2039419796931477504, [65], [22], [15], [35])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)4879343126814130176, [40], [47], [20], [30])
	CALL _ZN7moretop4more8add_teamEyhhhh($0, (int_64)7973505887652282368, [82], [5], [10], [40])
}

void .FUNC _ZN7moretop4more8add_teamEyhhhh (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$6 = *($0)
	*($9) = $6
	*($9 + [8]) = $6
	$8 = CALL db_find_i64($6, $6, (int_64)-3851373727820283904, $1)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$4 }
	$8 = CALL $39($9, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$9), [192])
	$1 = *($0)
	CALL eosio_assert([1], [336])
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$9), [384])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$2()), [432])
	*($8 + [8]) = $2
	*($8 + [9]) = $3
	*($8 + [10]) = $4
	*($8 + [11]) = $5
	$6 = *($8)
	CALL eosio_assert([1], [496])
	*($9 + [88]) = (($9 + [48]) + [20])
	*($9 + [84]) = ($9 + [48])
	*($9 + [80]) = ($9 + [48])
	CALL $48(($9 + [80]), $8)
	CALL db_update_i64(*($8 + [28]), $1, ($9 + [48]), [20])
	$8 = ($9 + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$3 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$2 = *($9 + [24])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$7 = *($0)
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$2()), [560])
	*(($8 = CALL $72([40])) + [16]) = (int_64)0
	*($8 + [24]) = $9
	*($8 + [8]) = $2
	*($8) = $1
	*($8 + [9]) = $3
	*($8 + [10]) = $4
	*($8 + [11]) = $5
	*($9 + [88]) = (($9 + [48]) + [20])
	*($9 + [84]) = ($9 + [48])
	*($9 + [80]) = ($9 + [48])
	CALL $48(($9 + [80]), $8)
	$6 = *($8)
	$2 = CALL db_store_i64(*(($9 + [8])), (int_64)-3851373727820283904, $7, $6, ($9 + [48]), [20])
	*($8 + [28]) = $2
	$0 = ($9 + [16])
	if ( (uint_64)($6 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($9 + [80]) = $8
	$6 = *($8)
	*($9 + [48]) = $6
	*($9 + [44]) = $2
	$3 = ($9 + [28])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*(($9 + [32]))) ){ goto $label$7 }
	*($0 + [8]) = $6
	*($0 + [16]) = $2
	*($9 + [80]) = [0]
	*($0) = $8
	*($3) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $54(($9 + [24]), ($9 + [80]), ($9 + [48]), ($9 + [44]))
	
.LABEL $label$6
	$8 = *($9 + [80])
	*($9 + [80]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $73($8)
	
.LABEL $label$3
	$2 = *($9 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($9 + [28])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $73($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$10 }
	$8 = *(($9 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$8 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $73($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [96])
}

void .FUNC _ZN7moretop4more13divide_amountEN5eosio5assetEh (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	$4 = *($2)
	*($0) = $4
	*(($0 + [8])) = *(($2 + [8]))
	$4 = ((int_64)$4 * (int_64)(CASTING uint_64)(uint_32 $3))
	$4 = ( (int_64)1 ? ((int_64)((int_64)$4 + (int_64)99) / (int_64)100) : (uint_64)(((int_64)$4 + (int_64)198) <= (int_64)199) )
	*($0) = $4
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [848])
}

int_32 .FUNC _ZN7moretop4more6is_icoEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	CALL _ZN7moretop4more10get_globalEv(($6 + [40]), $0)
	$5 = [0]
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$3 = *($0)
	*($6) = $3
	*($6 + [8]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)7035937633859534848, *($6 + [56]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $37($6, $0)
	CALL eosio_assert(((int_32)*($0 + [80]) == (int_32)$6), [192])
	if ( *($0 + [64]) ){ goto $label$3 }
	if ( ((uint_64)*($0 + [72]) > (uint_64)(int_64)1000000) ){ goto $label$3 }
	$5 = (((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - *($0 + [32])) <= [21600])
	$1 = *($6 + [24])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [1]
	
.LABEL $label$3
	$1 = *($6 + [24])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($6 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $73($2)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($6 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $1
	
.LABEL $label$5
	*($4) = $1
	CALL $73($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [64])
	return $5
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $72(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $80($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $73($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $73($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [640])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $72([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [112])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [112])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	CALL eosio_assert(((uint_32)($4 + [-12]) > (uint_32)[7]), [112])
	CALL memcpy(($6 + [16]), ($7 + [12]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $61(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $73($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $63 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [192])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $60($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [192])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [112])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [112])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [112])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [112])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [112])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [64]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [112])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $85 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $72($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $72($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $80 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $72 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10668])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $73 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $70 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10662]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10664])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10662]) = [1]
	$7 = ($7 << [16])
	*([0] + [10664]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10664])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10664]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10662]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10662]) = [1]
	$3 = ($3 << [16])
	*([0] + [10664]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10664])
	
.LABEL $label$8
	*([0] + [10664]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10564])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10372]
	$1 = (((int_32)$2 * (int_32)[12]) + [10372])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $72($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $73($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $72(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $73($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $74 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [640])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $72([40])) + [24]) = $0
	*($6 + [16]) = (int_64)0
	CALL $53(($8 + [32]), $6)
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $73($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN7moretop4more10get_globalEv (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$2 = *($1)
	*($8 + [8]) = $2
	*($8 + [16]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)7235159537265672192, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $60(($8 + [8]), $7) + [24]) == (int_32)($8 + [8])), [192])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($1)
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$2()), [560])
	*(($7 = CALL $72([40])) + [24]) = ($8 + [8])
	*($7 + [8]) = [21600]
	*($7 + [16]) = (int_64)0
	*($7) = *($1)
	CALL eosio_assert([1], [624])
	CALL memcpy(($8 + [64]), $7, [8])
	CALL eosio_assert([1], [624])
	CALL memcpy((($8 + [64]) | [8]), ($7 + [8]), [4])
	CALL eosio_assert([1], [624])
	CALL memcpy((($8 + [64]) | [12]), ($7 + [16]), [8])
	$2 = *($7)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)7235159537265672192, $4, $2, ($8 + [64]), [20])
	*($7 + [28]) = $3
	$6 = (($8 + [8]) + [16])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$3 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($8 + [56]) = $7
	$2 = *($7)
	*($8 + [64]) = $2
	*($8 + [52]) = $3
	$5 = ($8 + [36])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($8 + [40]))) ){ goto $label$5 }
	*($6 + [8]) = $2
	*($6 + [16]) = $3
	*($8 + [56]) = [0]
	*($6) = $7
	*($5) = ($6 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $61(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$4
	$7 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($7 == 0) ){ goto $label$1 }
	CALL $73($7)
	
.LABEL $label$1
	$7 = CALL $63(($8 + [8]), *($1), [1920])
	*($0) = *($7)
	*(($0 + [16])) = *(($7 + [16]))
	*(($0 + [8])) = *(($7 + [8]))
	$1 = *($8 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $73($0)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$7) ){ goto $label$9 }
	$7 = *(($8 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$7 = $1
	
.LABEL $label$7
	*($6) = $1
	CALL $73($7)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [96])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [640])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $72([96])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [848])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [752])
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = $0
	CALL $62(($8 + [32]), $4)
	*($4 + [84]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [84])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $58($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $73($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	return CALL $79($0, $1, $2, $3, CALL $84($3))
}

int_32 .FUNC $79 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0)
	$8 = ($7 & [1])
	if ( $8 ){ goto $label$3 }
	$5 = uint_32($7 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($5 - $1)
	$2 = ( $6 ? $2 : ($6 <= $2) )
	if ( $8 ){ goto $label$5 }
	$8 = [10]
	goto $label$4 
	
.LABEL $label$5
	$7 = *($0)
	$8 = (($7 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)(($2 - $5) + $8) >= (uint_32)$4) ){ goto $label$6 }
	CALL $76($0, $8, ((($5 + $4) - $2) - $8), $5, $1, $2, $4, $3)
	return $0
	
.LABEL $label$6
	if ( ($7 & [1]) ){ goto $label$12 }
	$8 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$8 = *($0 + [8])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = $4
	$7 = $4
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = ($6 - $2)
	if ( ($6 == 0) ){ goto $label$14 }
	$7 = ($8 + $1)
	if ( ((uint_32)$2 <= (uint_32)$4) ){ goto $label$13 }
	if ( ($4 == 0) ){ goto $label$15 }
	CALL memmove($7, $3, $4)
	
.LABEL $label$15
	CALL memmove(($7 + $4), ($7 + $2), $6)
	goto $label$7 
	
.LABEL $label$14
	$7 = $4
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$13
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$17 }
	if ( ((uint_32)($8 + $5) <= (uint_32)$3) ){ goto $label$17 }
	if ( ((uint_32)($7 + $2) <= (uint_32)$3) ){ goto $label$18 }
	if ( ($2 == 0) ){ goto $label$19 }
	CALL memmove($7, $3, $2)
	
.LABEL $label$19
	$7 = ($4 - $2)
	$3 = ($3 + $4)
	$1 = ($2 + $1)
	$2 = [0]
	goto $label$16 
	
.LABEL $label$18
	$3 = ($3 + ($4 - $2))
	
.LABEL $label$17
	$7 = $4
	
.LABEL $label$16
	$4 = ($8 + $1)
	CALL memmove(($4 + $7), ($4 + $2), $6)
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL memmove(($8 + $1), $3, $7)
	$4 = $7
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	$4 = (($4 - $2) + $5)
	if ( (*($0) & [1]) ){ goto $label$21 }
	*($0) = ($4 << [1])
	goto $label$20 
	
.LABEL $label$21
	*($0 + [4]) = $4
	
.LABEL $label$20
	*(($8 + $4)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [624])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [624])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [624])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [624])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [624])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $72($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $80($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $73($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $32($0, ($1 + [12]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [624])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}