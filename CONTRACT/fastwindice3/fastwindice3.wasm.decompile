(data (i32.const 4) "0\88\00\00")
(data (i32.const 12) "\00\00\00\00\00\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00")
(data (i32.const 32) "\n--log--\00")
(data (i32.const 48) "commit and exit ret code: \00")
(data (i32.const 80) "\n------------------------------\n\00")
(data (i32.const 144) "\e6\97\a0\e5\a4\87\e6\b3\a8\e6\94\b6\e6\ac\be\00")
(data (i32.const 160) "eosio.token\00")
(data (i32.const 176) "\n===assert=====================\n\00")
(data (i32.const 224) "\e6\8b\92\e6\94\b6\e9\9d\9e\e7\b3\bb\e7\bb\9fEOS\e8\b4\a7\e5\b8\81\00")
(data (i32.const 256) "\n==============================\n\n\n\n\n\00")
(data (i32.const 304) "\e5\b0\8f\e4\ba\8e\e6\9c\80\e4\bd\8e\e6\8a\bc\e6\b3\a8\e9\87\91\e9\a2\9d0.0100 EOS\00")
(data (i32.const 352) "fastwindice3\00")
(data (i32.const 368) "Key does not exist\00")
(data (i32.const 400) "\e7\8e\b0\e5\9c\a8\e6\b2\a1\e6\9c\89\e5\bc\80\e7\9b\98\00")
(data (i32.const 432) "\n---params---------------------\n\00")
(data (i32.const 480) "  \00")
(data (i32.const 496) ":\t\00")
(data (i32.const 512) "\n\00")
(data (i32.const 528) "\e5\8f\82\e6\95\b0\e4\b8\a5\e6\a0\bc\e6\a3\80\e6\9f\a5\e5\a4\b1\e8\b4\a5\00")
(data (i32.const 560) "annoyness123\00")
(data (i32.const 576) "\e9\bb\98\e8\ae\a4\e6\8e\a8\e8\8d\90\e4\ba\ba\00")
(data (i32.const 592) "\e6\8e\a8\e8\8d\90\e4\ba\ba\e4\b8\8d\e8\83\bd\e6\98\af\e8\87\aa\e5\b7\b1\00")
(data (i32.const 624) "\e6\8e\a8\e8\8d\90\e4\ba\ba\e4\b8\8d\e8\83\bd\e6\98\af\e5\90\88\e7\ba\a6\00")
(data (i32.const 656) "cannot increment end iterator\00")
(data (i32.const 688) "\e5\bd\93\e5\89\8d\e8\bd\ae\e7\ac\ac:\00")
(data (i32.const 704) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 768) "cannot create objects in table of another contract\00")
(data (i32.const 832) "cannot pass end iterator to modify\00")
(data (i32.const 880) "fastwinadmin\00")
(data (i32.const 896) "invalid symbol name\00")
(data (i32.const 928) "\e6\8c\96\e7\9f\bf:\00")
(data (i32.const 944) "@\00")
(data (i32.const 960) "FAST:mining\00")
(data (i32.const 976) "\e6\8a\bc\e5\a4\a7\00")
(data (i32.const 992) "table1n1111a\00")
(data (i32.const 1008) "table:\00")
(data (i32.const 1024) "\e6\8a\bc\e6\b3\a8\00")
(data (i32.const 1040) "\e5\8a\a0\e6\b3\a8\00")
(data (i32.const 1056) "\e6\80\bb\e6\b3\a8\00")
(data (i32.const 1072) "\e8\b6\85\e5\87\ba\e6\8a\bc\e6\b3\a8\e9\99\90\e9\a2\9d\00")
(data (i32.const 1104) "\e6\8a\bc\e5\b0\8f\00")
(data (i32.const 1120) "table1n11111\00")
(data (i32.const 1136) "\e6\8a\bc\e5\8d\95\00")
(data (i32.const 1152) "table1n11112\00")
(data (i32.const 1168) "\e6\8a\bc\e5\8f\8c\00")
(data (i32.const 1184) "table1n11113\00")
(data (i32.const 1200) "\e6\8a\bc\e9\a1\ba\00")
(data (i32.const 1216) "table1n11114\00")
(data (i32.const 1232) "\e6\8a\bc\e8\b1\b9\00")
(data (i32.const 1248) "table1n11115\00")
(data (i32.const 1264) "\e6\8a\bc\e8\b1\b91\00")
(data (i32.const 1280) "table1n11121\00")
(data (i32.const 1296) "\e6\8a\bc\e8\b1\b92\00")
(data (i32.const 1312) "table1n11122\00")
(data (i32.const 1328) "\e6\8a\bc\e8\b1\b93\00")
(data (i32.const 1344) "table1n11123\00")
(data (i32.const 1360) "\e6\8a\bc\e8\b1\b94\00")
(data (i32.const 1376) "table1n11124\00")
(data (i32.const 1392) "\e6\8a\bc\e8\b1\b95\00")
(data (i32.const 1408) "table1n11125\00")
(data (i32.const 1424) "\e6\8a\bc\e8\b1\b96\00")
(data (i32.const 1440) "table1n11131\00")
(data (i32.const 1456) "\e6\8a\bc\e5\92\8c4\00")
(data (i32.const 1472) "table1n11132\00")
(data (i32.const 1488) "\e6\8a\bc\e5\92\8c5\00")
(data (i32.const 1504) "table1n11133\00")
(data (i32.const 1520) "\e6\8a\bc\e5\92\8c6\00")
(data (i32.const 1536) "table1n11134\00")
(data (i32.const 1552) "\e6\8a\bc\e5\92\8c7\00")
(data (i32.const 1568) "table1n11135\00")
(data (i32.const 1584) "\e6\8a\bc\e5\92\8c8\00")
(data (i32.const 1600) "table1n11141\00")
(data (i32.const 1616) "\e6\8a\bc\e5\92\8c9\00")
(data (i32.const 1632) "table1n11142\00")
(data (i32.const 1648) "\e6\8a\bc\e5\92\8c10\00")
(data (i32.const 1664) "table1n11143\00")
(data (i32.const 1680) "\e6\8a\bc\e5\92\8c11\00")
(data (i32.const 1696) "table1n11144\00")
(data (i32.const 1712) "\e6\8a\bc\e5\92\8c12\00")
(data (i32.const 1728) "table1n11145\00")
(data (i32.const 1744) "\e6\8a\bc\e5\92\8c13\00")
(data (i32.const 1760) "table1n11151\00")
(data (i32.const 1776) "\e6\8a\bc\e5\92\8c14\00")
(data (i32.const 1792) "table1n11152\00")
(data (i32.const 1808) "\e6\8a\bc\e5\92\8c15\00")
(data (i32.const 1824) "table1n11153\00")
(data (i32.const 1840) "\e6\8a\bc\e5\92\8c16\00")
(data (i32.const 1856) "table1n11154\00")
(data (i32.const 1872) "\e6\8a\bc\e5\92\8c17\00")
(data (i32.const 1888) "table1n11155\00")
(data (i32.const 1904) "\e6\9c\aa\e7\9f\a5\e7\b1\bb\e5\9e\8b\00")
(data (i32.const 1920) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1984) "write\00")
(data (i32.const 2000) "object passed to modify is not in multi_index\00")
(data (i32.const 2048) "cannot modify objects in table of another contract\00")
(data (i32.const 2112) "updater cannot change primary key when modifying an object\00")
(data (i32.const 2176) "error reading iterator\00")
(data (i32.const 2208) "read\00")
(data (i32.const 2224) "\n--Transfer\00")
(data (i32.const 2240) "----\00")
(data (i32.const 2256) "---\n\00")
(data (i32.const 2272) " ==> \00")
(data (i32.const 2288) "  [pending]\00")
(data (i32.const 2304) "active\00")
(data (i32.const 2320) "transfer\00")
(data (i32.const 2332) " \t\00\00")
(data (i32.const 2336) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 2384) ".\00")
(data (i32.const 2400) " \00")
(data (i32.const 2416) ",\00")
(data (i32.const 2432) "get\00")
(data (i32.const 2448) "null\00")
(data (i32.const 2464) "{\n\00")
(data (i32.const 2480) "}\00")
(data (i32.const 2496) ",\n\00")
(data (i32.const 2512) "\"\00")
(data (i32.const 2528) "\" : \00")
(data (i32.const 2544) "[\00")
(data (i32.const 2560) "]\00")
(data (i32.const 2576) ", \00")
(data (i32.const 2592) "true\00")
(data (i32.const 2608) "false\00")
(data (i32.const 2624) "\\\"\00")
(data (i32.const 2640) "\\\\\00")
(data (i32.const 2656) "\\b\00")
(data (i32.const 2672) "\\f\00")
(data (i32.const 2688) "\\n\00")
(data (i32.const 2704) "\\r\00")
(data (i32.const 2720) "\\t\00")
(data (i32.const 2736) "ERROR: Array: Expected \',\' or \']\', found \'\00")
(data (i32.const 2784) "\'\00")
(data (i32.const 2800) "Error: Object: Expected colon, found \'\00")
(data (i32.const 2848) "ERROR: Object: Expected comma, found \'\00")
(data (i32.const 2896) "\\u\00")
(data (i32.const 2912) "ERROR: String: Expected hex character in unicode escape, found \'\00")
(data (i32.const 2992) "ERROR: Bool: Expected \'true\' or \'false\', found \'\00")
(data (i32.const 3056) "ERROR: Null: Expected \'null\', found \'\00")
(data (i32.const 3104) "ERROR: Number: Expected a number for exponent, found \'\00")
(data (i32.const 3168) "ERROR: Number: unexpected character \'\00")
(data (i32.const 3216) "ERROR: Parse: Unknown starting character \'\00")
(data (i32.const 3264) "checkInt failed\00")
(data (i32.const 3280) "%05lld\00")
(data (i32.const 3296) "_amount_ \e8\bd\ac\e6\8d\a2\e5\bc\82\e5\b8\b8\00")
(data (i32.const 3328) "amount \e8\bd\ac\e6\8d\a2\e5\bc\82\e5\b8\b8\00")
(data (i32.const 3360) "%lld.\00")
(data (i32.const 3368) "\00\00\00\00\00\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00")
(data (i32.const 3392) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferOther()\00")
(data (i32.const 3456) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferFromMe()\00")
(data (i32.const 3520) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferToMe()\00")
(data (i32.const 3584) "read_transaction failed\00")
(data (i32.const 3616) "\n\n\00")
(data (i32.const 3632) "\n===json======================\n\00")
(data (i32.const 3664) "  receiver:\t\00")
(data (i32.const 3680) "\n  code:\t\t\00")
(data (i32.const 3696) "\n  action:\t\00")
(data (i32.const 3712) "\n==============================\n\00")
(data (i32.const 3760) "params\n\00")
(data (i32.const 3776) "onerror\00")
(data (i32.const 3792) "onerror action\'s are unsafe\00")
(data (i32.const 3824) "must from != to\00")
(data (i32.const 3840) "help\00")
(data (i32.const 3856) "init\00")
(data (i32.const 3872) "open\00")
(data (i32.const 3888) "close\00")
(data (i32.const 3904) "check\00")
(data (i32.const 3920) "upopeninfo\00")
(data (i32.const 3936) "upcloseinfo\00")
(data (i32.const 3952) "upcheckinfo\00")
(data (i32.const 3968) "\e7\bb\93\e7\ae\97\e5\bf\85\e9\a1\bb\e5\85\88\e5\b0\81\e7\9b\98\00")
(data (i32.const 4000) "\e7\bb\93\e6\9e\9c\e4\b8\8d\e5\9c\a8\e5\90\88\e6\b3\95\e8\8c\83\e5\9b\b4\e5\86\85\00")
(data (i32.const 4032) "%lld:%lld,%lld,%lld\00")
(data (i32.const 4064) "\e9\aa\b0\e5\ad\90\e7\bb\93\e6\9e\9c:\00")
(data (i32.const 4080) "\e6\8a\bc\e6\b3\a8:\00")
(data (i32.const 4096) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b9\00")
(data (i32.const 4128) "\e5\a5\96\e9\87\91:\00")
(data (i32.const 4144) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b9\00")
(data (i32.const 4176) "\e6\8e\a8\e8\8d\90:\00")
(data (i32.const 4192) "referral reward\00")
(data (i32.const 4208) "cannot pass end iterator to erase\00")
(data (i32.const 4256) "object passed to erase is not in multi_index\00")
(data (i32.const 4304) "cannot erase objects in table of another contract\00")
(data (i32.const 4368) "attempt to remove object that was not in multi_index\00")
(data (i32.const 4432) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b91\00")
(data (i32.const 4464) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b91\00")
(data (i32.const 4496) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b92\00")
(data (i32.const 4528) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b92\00")
(data (i32.const 4560) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b93\00")
(data (i32.const 4592) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b93\00")
(data (i32.const 4624) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b94\00")
(data (i32.const 4656) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b94\00")
(data (i32.const 4688) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b95\00")
(data (i32.const 4720) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b95\00")
(data (i32.const 4752) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b96\00")
(data (i32.const 4784) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e8\b1\b96\00")
(data (i32.const 4816) "\e5\a4\a7\00")
(data (i32.const 4832) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\a4\a7\00")
(data (i32.const 4864) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\a4\a7\00")
(data (i32.const 4896) "\e5\b0\8f\00")
(data (i32.const 4912) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\b0\8f\00")
(data (i32.const 4944) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\b0\8f\00")
(data (i32.const 4976) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\8f\8c\00")
(data (i32.const 5008) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\8f\8c\00")
(data (i32.const 5040) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\8d\95\00")
(data (i32.const 5072) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\8d\95\00")
(data (i32.const 5104) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c4\00")
(data (i32.const 5136) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c4\00")
(data (i32.const 5168) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c17\00")
(data (i32.const 5200) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c17\00")
(data (i32.const 5232) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c5\00")
(data (i32.const 5264) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c5\00")
(data (i32.const 5296) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c16\00")
(data (i32.const 5328) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c16\00")
(data (i32.const 5360) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c6\00")
(data (i32.const 5392) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c6\00")
(data (i32.const 5424) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c15\00")
(data (i32.const 5456) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c15\00")
(data (i32.const 5488) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c7\00")
(data (i32.const 5520) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c7\00")
(data (i32.const 5552) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c14\00")
(data (i32.const 5584) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c14\00")
(data (i32.const 5616) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c8\00")
(data (i32.const 5648) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c8\00")
(data (i32.const 5680) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c13\00")
(data (i32.const 5712) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c13\00")
(data (i32.const 5744) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c9\00")
(data (i32.const 5776) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c9\00")
(data (i32.const 5808) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c12\00")
(data (i32.const 5840) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c12\00")
(data (i32.const 5872) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c10\00")
(data (i32.const 5904) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c10\00")
(data (i32.const 5936) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c11\00")
(data (i32.const 5968) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e5\92\8c11\00")
(data (i32.const 6000) "fee:\e4\b8\ad\e5\a5\96\e6\8a\bc\e9\a1\ba\00")
(data (i32.const 6032) "\e6\8a\bc\e6\b3\a8\e4\b8\ad\e5\a5\96\e6\8a\bc\e9\a1\ba\00")
(data (i32.const 6064) "\e7\8e\b0\e5\b7\b2\e7\bb\93\e7\ae\97[\00")
(data (i32.const 6080) "max_pay:\00")
(data (i32.const 6096) "\e6\94\b6\e8\b4\b9:\00")
(data (i32.const 6112) "\e5\bf\85\e9\a1\bb\e5\bc\80\e7\9b\98\e5\90\8e\e6\89\8d\e5\8f\af\e4\bb\a5\e5\b0\81\e7\9b\98\00")
(data (i32.const 6144) "\e7\8e\b0\e5\b7\b2\e5\b0\81\e7\9b\98[\00")
(data (i32.const 6160) "\e5\bf\85\e9\a1\bb\e7\bb\93\e7\ae\97\e5\ae\8c\e6\af\95\e6\89\8d\e5\8f\af\e4\bb\a5\e5\bc\80\e7\9b\98\00")
(data (i32.const 6208) "\e7\8e\b0\e5\b7\b2\e5\bc\80\e7\9b\98[\00")
(data (i32.const 14624) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 14724) "\00\00\00\00")
(data (i32.const 14736) "stol\00")
(data (i32.const 14752) ": no conversion\00")
(data (i32.const 14768) ": out of range\00")
(data (i32.const 14784) "%ld\00")
(data (i32.const 14800) "%f\00")
(data (i32.const 14816) "uncaught_exceptions not yet implemented\n\00")
(data (i32.const 14860) "\10:\00\00")
(data (i32.const 14864) "\05\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\14\00\00\00\a8:\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 15024) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 15040) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 15056) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 15072) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 15536) "0123456789ABCDEF")
(data (i32.const 15552) "-+   0X0x\00")
(data (i32.const 15568) "(null)\00")
(data (i32.const 15584) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 15616) "inf\00")
(data (i32.const 15632) "INF\00")
(data (i32.const 15648) "nan\00")
(data (i32.const 15664) "NAN\00")
(data (i32.const 15680) ".\00")
(data (i32.const 15696) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 15792) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 17600) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 17872) "\00\01\02\04\07\03\06\05\00")
(data (i32.const 17952) "%.3s %.3s%3d %.2d:%.2d:%.2d %d\n\00")
(data (i32.const 17984) "ASCII\00")
(data (i32.const 18000) "UTF-8\00")
(data (i32.const 18016) "^[yY]\00^[nN]\00yes\00no\00")
(data (i32.const 18048) "Sun\00Mon\00Tue\00Wed\00Thu\00Fri\00Sat\00Sunday\00Monday\00Tuesday\00Wednesday\00Thursday\00Friday\00Saturday\00Jan\00Feb\00Mar\00Apr\00May\00Jun\00Jul\00Aug\00Sep\00Oct\00Nov\00Dec\00January\00February\00March\00April\00May\00June\00July\00August\00September\00October\00November\00December\00AM\00PM\00%a %b %e %T %Y\00%m/%d/%y\00%H:%M:%S\00%I:%M:%S %p\00\00\00%m/%d/%y\000123456789\00%a %b %e %T %Y\00%H:%M:%S\00")
(data (i32.const 18368) ".\00\00")
(data (i32.const 18400) "C\00")
(data (i32.const 18448) "UTC\00")
(data (i32.const 18464) "\1f\1e\1f\1e\1f\1f\1e\1f\1e\1f\1f\1d")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$11))
(import "env" "action_data_size" (func $fimport$12 (result i32)))
(import "env" "current_receiver" (func $fimport$13 (result i64)))
(import "env" "current_time" (func $fimport$14 (result i64)))
(import "env" "db_find_i64" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$19 (param i32)))
(import "env" "db_store_i64" (func $fimport$20 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$21 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$22 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$23 (param i32)))
(import "env" "is_account" (func $fimport$24 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$25 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "printhex" (func $fimport$28 (param i32 i32)))
(import "env" "printi" (func $fimport$29 (param i64)))
(import "env" "printn" (func $fimport$30 (param i64)))
(import "env" "prints" (func $fimport$31 (param i32)))
(import "env" "prints_l" (func $fimport$32 (param i32 i32)))
(import "env" "printui" (func $fimport$33 (param i64)))
(import "env" "read_action_data" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$36 (param i64)))
(import "env" "require_auth2" (func $fimport$37 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$38 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$39 (param i32 i32)))
(import "env" "sha256" (func $fimport$40 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$41 (result i32)))
(export "memory" (memory $0))
(export "_ZN7eosdice14onTransferToMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $0))
(export "_ZN7eosdice16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $1))
(export "_ZN7eosdice15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $2))
(export "_ZN10msContract13commitAndExitEy" (func $3))
(export "_ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $13))
(export "_ZeqRK11checksum256S1_" (func $104))
(export "_ZeqRK11checksum160S1_" (func $105))
(export "_ZneRK11checksum160S1_" (func $106))
(export "now" (func $107))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $108))
(export "_ZN5eosio14string_to_nameENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $109))
(export "_ZN4json5ArrayEv" (func $110))
(export "_ZN4json6ObjectEv" (func $115))
(export "_ZN4jsonlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4JSONE" (func $116))
(export "_ZN4json4JSON4LoadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $122))
(export "_ZN4json6getIntERNS_4JSONEii" (func $139))
(export "_ZN9msAccountC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $140))
(export "_ZN9msAccountC2Ey" (func $141))
(export "_ZN9msAccount15CheckPermissionEv" (func $142))
(export "_ZN9msAccount15CheckPermissionEy" (func $143))
(export "_ZN9msAccount10GetEosNameEv" (func $144))
(export "_ZN9msAccount8ToStringEv" (func $145))
(export "_ZN9msAccount10GetBalanceES_yPKc" (func $146))
(export "_ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE" (func $147))
(export "_ZN9msAccount13delayTransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $151))
(export "_ZN9msAccount12CheckBalanceE7msAsset" (func $160))
(export "_ZN7msAssetC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEhS6_" (func $161))
(export "_ZN7msAssetC2EyN5eosio11symbol_typeEy" (func $162))
(export "_ZN7msAssetC2EyN5eosio5assetE" (func $163))
(export "_ZN7msAsset16isSystemEOSTokenEv" (func $164))
(export "_ZN7msAsset14SymbolToStringEv" (func $165))
(export "_ZN7msAsset10_AmountN2SEhy" (func $166))
(export "_ZN7msAsset9AmountN2SEhy" (func $167))
(export "_ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh" (func $168))
(export "_ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh" (func $169))
(export "_ZN7msAsset18GetContractEosNameEv" (func $170))
(export "_ZN7msAsset8ToStringEv" (func $171))
(export "_ZN7msAsset8ValidateENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_yN5eosio11symbol_typeE" (func $172))
(export "_ZN7msAsset14GetAmountByIntEv" (func $173))
(export "_ZN10msContractC2Eyyy" (func $174))
(export "_ZN10msContract18getCurrentReceiverEv" (func $178))
(export "_ZN10msContract17getActionContractEv" (func $179))
(export "_ZN10msContract15getSelfContractEv" (func $180))
(export "_ZN10msContract21getCurrentTransactionEv" (func $181))
(export "_ZN10msContract9loadParamERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $182))
(export "_ZN10msContract6onCallEv" (func $183))
(export "_ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $185))
(export "apply" (func $186))
(export "_ZN10msContract25createNewContractInstanceEyyy" (func $187))
(export "_ZN7eosdice4helpEv" (func $189))
(export "_ZN7eosdice4initEv" (func $190))
(export "_ZN7eosdice4openEv" (func $191))
(export "_ZN7eosdice5closeEv" (func $192))
(export "_ZN7eosdice5checkEv" (func $193))
(export "_ZN7eosdice10upopeninfoEv" (func $194))
(export "_ZN7eosdice11upcloseinfoEv" (func $195))
(export "_ZN7eosdice11upcheckinfoEv" (func $196))
(export "_Z16ClearAllBetTabley" (func $271))
(export "malloc" (func $337))
(export "free" (func $340))
(export "_ZNSt3__18ios_base5clearEj" (func $341))
(export "_ZNKSt3__18ios_base6getlocEv" (func $342))
(export "_ZNSt3__16localeC2ERKS0_" (func $343))
(export "_ZNKSt3__16locale9use_facetERNS0_2idE" (func $344))
(export "_ZNSt3__16locale2id6__initEv" (func $345))
(export "_ZNSt3__111__call_onceERVmPvPFvS2_E" (func $347))
(export "_ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $365))
(export "_ZNSt3__19to_stringEl" (func $368))
(export "_ZNSt3__19to_stringEd" (func $370))
(export "_ZSt18uncaught_exceptionv" (func $374))
(export "_ZSt19uncaught_exceptionsv" (func $375))
(export "_ZNSt3__16localeD2Ev" (func $377))
(export "__stdio_close" (func $380))
(export "__stdio_write" (func $381))
(export "__stdio_seek" (func $382))
(export "isspace" (func $383))
(export "__errno_location" (func $384))
(export "pow" (func $385))
(export "sqrt" (func $386))
(export "fabs" (func $387))
(export "scalbn" (func $388))
(export "fprintf" (func $389))
(export "vfprintf" (func $390))
(export "__lockfile" (func $392))
(export "__unlockfile" (func $393))
(export "__fwritex" (func $394))
(export "strerror" (func $396))
(export "strnlen" (func $397))
(export "wctomb" (func $398))
(export "__signbitl" (func $399))
(export "__fpclassifyl" (func $400))
(export "frexpl" (func $401))
(export "wcrtomb" (func $402))
(export "memchr" (func $403))
(export "__lctrans" (func $404))
(export "__lctrans_impl" (func $405))
(export "__mo_lookup" (func $406))
(export "strcmp" (func $407))
(export "__towrite" (func $408))
(export "snprintf" (func $409))
(export "vsnprintf" (func $410))
(export "sprintf" (func $412))
(export "vsprintf" (func $413))
(export "atoll" (func $414))
(export "strtol" (func $415))
(export "__shlim" (func $416))
(export "__intscan" (func $417))
(export "__shgetc" (func $418))
(export "__uflow" (func $419))
(export "__toread" (func $420))
(export "memcmp" (func $421))
(export "strchr" (func $422))
(export "__strchrnul" (func $423))
(export "strlen" (func $424))
(export "strcpy" (func $425))
(export "__stpcpy" (func $426))
(export "strncpy" (func $427))
(export "__stpncpy" (func $428))
(export "asctime" (func $429))
(export "__asctime" (func $430))
(export "__nl_langinfo_l" (func $431))
(export "gmtime" (func $432))
(export "__gmtime_r" (func $433))
(export "__secs_to_tm" (func $434))
(table $0 21 21 anyfunc)
(elem (i32.const 0) $435 $189 $190 $191 $192 $193 $194 $195 $196 $345 $346 $411 $0 $1 $2 $175 $176 $177 $380 $381 $382)



void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = [0]
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	$6 = *($1)
	if ( (( *($1 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$1 }
	$2 = ($1 + [1])
	$4 = ($1 + [8])
	$5 = ($1 + [4])
	
.LOOP $label$2:
	$3 = *((( *($4) ? $2 : ($6 & [1]) ) + $7))
	$6 = ($3 + [-8])
	if ( ((uint_32)$6 > (uint_32)[26]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$11
	CALL $356($8, [2656])
	goto $label$3 
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)[92]) ){ goto $label$9 }
	CALL $356($8, [2640])
	goto $label$3 
	
.LABEL $label$9
	CALL $357($8, $3)
	goto $label$3 
	
.LABEL $label$8
	CALL $356($8, [2720])
	goto $label$3 
	
.LABEL $label$7
	CALL $356($8, [2688])
	goto $label$3 
	
.LABEL $label$6
	CALL $356($8, [2672])
	goto $label$3 
	
.LABEL $label$5
	CALL $356($8, [2704])
	goto $label$3 
	
.LABEL $label$4
	CALL $356($8, [2624])
	
.LABEL $label$3
	$6 = *($1)
	$7 = ($7 + [1])
	if ( ($7 <= ( *($5) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$2 }
	
.LABEL $label$1
	*($0) = *($8)
	*(($0 + [8])) = *(($8 + [8]))
	*([0] + [4]) = ($8 + [16])
	$6
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $348($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $355($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $350($0)
}

void .FUNC $364 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $348($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $355($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $126 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($2 + [1])
	$12 = ($2 + [8])
	
.LOOP $label$4:
	$4 = ($0 + [16])
	$7 = ($8 & [1])
	$8 = *($2)
	$10 = ($2 + [4])
	$8 = ( *($10) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($0 + [16])
	$11 = ($0 + [20])
	$6 = ( *($11) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$8 }
	$5 = CALL memcmp(( *($12) ? $3 : $7 ), ( *(($0 + [24])) ? ($4 + [1]) : $5 ), $9)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = *($0)
	if ( $6 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$7 = ($8 & [1])
	$8 = *($4)
	$8 = ( *($11) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$10 }
	$4 = CALL memcmp(( *(($0 + [24])) ? ($4 + [1]) : $7 ), ( *($12) ? $3 : $5 ), $9)
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$10
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$3 }
	
.LABEL $label$9
	$13 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$3 }
	$0 = $13
	
.LABEL $label$5
	$13 = $0
	$0 = $6
	goto $label$4 
	
.LABEL $label$3
	*($1) = $0
	return $13
	
.LABEL $label$2
	*($1) = $13
	return $13
	
.LABEL $label$1
	*($1) = $0
	return $0
}

void .FUNC _ZN7eosdice4helpEv (int_32 $0)
{
	CALL require_auth(*($0 + [16]))
}

void .FUNC $188 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1920])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [896])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6) = $2
	$4 = ($2 + $1)
	*($6 + [8]) = $4
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [2208])
	CALL memcpy($0, $2, [8])
	$5 = ($2 + [8])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($0 + [8]), $5, [8])
	$5 = ($2 + [16])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($0 + [16]), $5, [8])
	$5 = ($2 + [24])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($0 + [24]), $5, [8])
	*($6 + [4]) = ($2 + [32])
	CALL $101($6, ($0 + [32]))
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493424, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $47($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $48 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493424, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $47($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493424, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493888, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $41($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $42 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493888, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $41($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493888, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493904, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $38($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493872, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $44($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $45 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493872, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $44($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493872, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $363 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $362 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

void .FUNC _ZN7msAsset9AmountN2SEhy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5 + [31]) = $2
	CALL _ZN7msAsset10_AmountN2SEhy($0, $5, $2, $3)
	CALL $378(($5 + [16]), $0)
	$4 = CALL _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($5, ($5 + [16]), ($5 + [31]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $349(*($5 + [24]))
	
.LABEL $label$1
	if ( ((int_64)$4 == (int_64)$3) ){ goto $label$2 }
	CALL prints([176])
	CALL prints([3328])
	CALL prints([256])
	CALL $378($5, $0)
	CALL eosio_assert(((int_64)CALL $168($5, $5, ($5 + [31])) == (int_64)$3), [3328])
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*($5 + [8]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC _ZN7msAsset10_AmountN2SEhy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [144])
	*([0] + [4]) = $6
	CALL memset(($6 + [32]), [0], [100])
	CALL memset(($6 + [22]), [0], [10])
	$5 = CALL strcpy(($6 + [22]), [3280])
	*($6 + [24]) = ($2 + [49])
	*($6) = $3
	CALL sprintf(($6 + [32]), $5, $6)
	$5 = CALL strlen(($6 + [32]))
	if ( ((int_32)$5 >= (int_32)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([3296])
	CALL prints([256])
	CALL eosio_assert([0], [3296])
	
.LABEL $label$1
	$5 = (($6 + [32]) + ($5 - $2))
	CALL memmove(($5 + [1]), $5, $2)
	*(($0 + [4])) = (int_64)0
	*($0) = [0]
	*($5) = [46]
	$2 = CALL strlen(($6 + [32]))
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($2 + [16]) & [-16])
	$5 = CALL $348($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL memcpy($5, ($6 + [32]), $2)
	
.LABEL $label$3
	*(($5 + $2)) = [0]
	*([0] + [4]) = ($6 + [144])
	return (unreachable)
	
.LABEL $label$2
	CALL $350($0)
}

void .FUNC _ZN7msAsset14SymbolToStringEv (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL memset(($5 + [6]), [0], [10])
	$2 = *($1 + [8])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [6]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [7]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [8]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [9]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [10]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [11]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	if ( ($1) == 0) ){ goto $label$6 }
	*($0) = [0]
	*(($0 + [4])) = (int_64)0
	*($5 + [12]) = $1
	$1 = CALL strlen(($5 + [6]))
	if ( ((uint_32)$1 > (uint_32)[-17]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($1 << [1])
	$4 = ($0 + [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL strlen(($5 + [6]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	$4 = ($0 + [1])
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $348($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $1
	
.LABEL $label$8
	CALL memcpy($4, ($5 + [6]), $1)
	
.LABEL $label$7
	$1 = ($4 + $1)
	goto $label$1 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $348($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $1
	
.LABEL $label$4
	CALL memcpy($4, ($5 + [6]), $1)
	
.LABEL $label$3
	$1 = ($4 + $1)
	goto $label$1 
	
.LABEL $label$2
	CALL $350($0)
	
.LABEL $label$1
	*($1) = [0]
	*([0] + [4]) = ($5 + [16])
	(unreachable)
}

int_32 .FUNC _ZN7msAsset16isSystemEOSTokenEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$1 = *($0 + [16])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [160]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$1 }
	$3 = [0]
	if ( ((int_64)$1 != (int_64)$6) ){ goto $label$7 }
	$3 = ((int_64)*($0 + [8]) == (int_64)1397703940)
	
.LABEL $label$7
	return $3
}

int_32 .FUNC _ZN7msAssetC2EyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1920])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [896])
	*($0 + [16]) = $1
	*($0) = *($2)
	*(($0 + [8])) = *($2 + [8])
	return $0
}

int_32 .FUNC _ZN7msAssetC2EyN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1920])
	$4 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [896])
	*(($0 + [8])) = $2
	*($0) = $3
	*($0 + [16]) = $1
	return $0
}

int_32 .FUNC _ZN7msAssetC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEhS6_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1920])
	$9 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [896])
	*($0) = (int_64)0
	if ( (*($3) & [1]) ){ goto $label$7 }
	$6 = ($3 + [1])
	goto $label$6 
	
.LABEL $label$7
	$6 = *($3 + [8])
	
.LABEL $label$6
	$7 = [-1]
	
.LOOP $label$8:
	$3 = ($6 + $7)
	$4 = ($7 + [1])
	$7 = $4
	if ( *(($3 + [1])) ){ goto $label$8 }
	if ( ($4 == 0) ){ goto $label$10 }
	$8 = (CASTING uint_64)(uint_32 $4)
	$9 = (int_64)8
	$11 = (int_64)0
	
.LOOP $label$11:
	$7 = *($6)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$12
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$11 = (int_64)0
	
.LABEL $label$9
	*(($0 + [8])) = ((int_64)$11 | (int_64)(CASTING uint_64)(uint_32 $2))
	CALL $378($12, $1)
	$1 = (*($12) & [1])
	$2 = *($12 + [8])
	$7 = ( $2 ? ($12 | [1]) : $1 )
	$6 = [-1]
	
.LOOP $label$13:
	$3 = ($7 + $6)
	$4 = ($6 + [1])
	$6 = $4
	if ( *(($3 + [1])) ){ goto $label$13 }
	$5 = (CASTING uint_64)(uint_32 $4)
	$9 = (int_64)0
	$8 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$14:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$5) ){ goto $label$15 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$6 = ($6 + [165])
	goto $label$16 
	
.LABEL $label$17
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$19 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$18 
	
.LABEL $label$19
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$18
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$14 }
	*($0 + [16]) = $10
	if ( ($1 == 0) ){ goto $label$20 }
	CALL $349($2)
	
.LABEL $label$20
	*([0] + [4]) = ($12 + [16])
	return $0
}

int_32 .FUNC _ZN9msAccount12CheckBalanceE7msAsset (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($4 + [8]), $0, *($1 + [16]), *($1 + [8]))
	$2 = *($1)
	$3 = *($4 + [8])
	*([0] + [4]) = ($4 + [32])
	return ((int_64)$3 >= (int_64)$2)
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492896, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $65($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_64 .FUNC _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	CALL $378(($11 + [16]), $1)
	$3 = CALL _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($11, ($11 + [16]), $2)
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $349(*($11 + [24]))
	
.LABEL $label$1
	CALL _ZN7msAsset10_AmountN2SEhy($11, $11, *($2), $3)
	$10 = [0]
	$7 = ($8 & [1])
	$8 = *($1)
	$6 = ($9 & [1])
	$9 = *($11)
	$4 = uint_32($9 >> [1])
	$5 = ( *($11 + [4]) ? $4 : $6 )
	if ( ((int_32)$5 != (int_32)( *($1 + [4]) ? uint_32($8 >> [1]) : $7 )) ){ goto $label$2 }
	$10 = [1]
	$8 = ($11 | [1])
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( $6 ){ goto $label$3 }
	if ( ($5 == 0) ){ goto $label$2 }
	$10 = [0]
	$6 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_32)*($8) != (int_32)*($7)) ){ goto $label$2 }
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	$6 = ($6 + [1])
	if ( $6 ){ goto $label$4 }
	$10 = [1]
	goto $label$2 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$2 }
	$10 = (CALL memcmp(( *($11 + [8]) ? $8 : $6 ), $7, $5) == 0)
	$9 = *($11)
	
.LABEL $label$2
	if ( (($9 & [1]) == 0) ){ goto $label$5 }
	CALL $349(*($11 + [8]))
	
.LABEL $label$5
	if ( $10 ){ goto $label$6 }
	CALL prints([176])
	CALL prints([3328])
	CALL prints([256])
	CALL _ZN7msAsset10_AmountN2SEhy($11, $11, *($2), $3)
	$6 = [0]
	$7 = ($8 & [1])
	$8 = *($1)
	$2 = ($8 & [1])
	$8 = *($11)
	$10 = uint_32($8 >> [1])
	$9 = ( *($11 + [4]) ? $10 : $2 )
	if ( ((int_32)$9 != (int_32)( *(($1 + [4])) ? uint_32($8 >> [1]) : $7 )) ){ goto $label$7 }
	$8 = ($11 | [1])
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( $2 ){ goto $label$10 }
	if ( ($9 == 0) ){ goto $label$9 }
	$1 = ([0] - $10)
	
.LOOP $label$11:
	if ( ((int_32)*($8) != (int_32)*($7)) ){ goto $label$8 }
	$6 = [1]
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$10
	if ( ($9 == 0) ){ goto $label$9 }
	$6 = (CALL memcmp(( *($11 + [8]) ? $8 : $2 ), $7, $9) == 0)
	goto $label$7 
	
.LABEL $label$9
	$6 = [1]
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	
.LABEL $label$7
	CALL eosio_assert($6, [3328])
	if ( ((*($11) & [1]) == 0) ){ goto $label$6 }
	CALL $349(*($11 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
	return $3
}

int_64 .FUNC _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	CALL memset($7, [0], [100])
	*($2) = [0]
	if ( (*($1) & [1]) ){ goto $label$2 }
	$3 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [8])
	
.LABEL $label$1
	$3 = CALL strchr($3, [46])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$5 }
	$5 = ($1 + [1])
	$4 = uint_32($4 >> [1])
	goto $label$4 
	
.LABEL $label$6
	goto $label$3 
	
.LABEL $label$5
	$5 = *($1 + [8])
	$4 = *($1 + [4])
	
.LABEL $label$4
	*($2) = ((int_64))((CASTING uint_64)(uint_32 ($4 + [255])) - (CASTING uint_64)(uint_32 $3)) + (int_64)(CASTING uint_64)(uint_32 $5))
	CALL memset($7, [0], [100])
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = uint_32($5 >> [1])
	$4 = ($1 + [1])
	goto $label$7 
	
.LABEL $label$8
	$5 = *($1 + [4])
	$4 = *($1 + [8])
	
.LABEL $label$7
	CALL memcpy($7, $4, (($5 + [-1]) - *($2)))
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$10 }
	$1 = uint_32($5 >> [1])
	goto $label$9 
	
.LABEL $label$10
	$1 = *($1 + [4])
	
.LABEL $label$9
	$1 = *($2)
	CALL memcpy(((($7 + $1) - $1) + [-1]), ($3 + [1]), $1)
	$6 = CALL atoll($7)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [112])
	return $6
}

void .FUNC $66 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492896, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $65($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492896, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493360, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $59($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $60 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493360, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $59($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493360, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492912, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $62($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492912, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_32 .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $391([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $391($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $391($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC $391 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [15072]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $395(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [15552]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [15584]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [15590] ? [15585] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [15554] ? [15552] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [15587]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $384()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [15552]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [15552]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [15536])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [15552])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [15568] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [15552]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [15648] ? [15664] : $30 ) ? ( [15616] ? [15632] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [15552]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [15553]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [15552] ? [15557] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [15536])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [15536])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [15536])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([15680], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([15680], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([15680], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $395(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $395(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $395(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $395(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $395(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $395(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $395(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $395(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $395(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC $395 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [15696])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [15792]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [15792]
	return .LABEL $label$1
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([14736])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $348($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [14736], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $349(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $366($6)
	
.LABEL $label$1
	CALL $367($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $87 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492352, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $86($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492352, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $367 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $120($1, $0, [14752])
	CALL abort()
	(unreachable)
}

void .FUNC $366 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $120($1, $0, [14768])
	CALL abort()
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492880, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $68($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492880, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $248 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $245 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $242 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $84 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492368, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $83($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492368, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $201($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492384, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $80($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1920])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [896])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [2208])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $81 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492384, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $80($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492384, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

void .FUNC _ZN9msAccount8ToStringEv (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = *($1)
	CALL $92($0, ($2 + [8]))
	*([0] + [4]) = ($2 + [16])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492912, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $62($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert([1], [1920])
	$5 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [896])
	$7 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$4 = *($1)
	*($9 + [16]) = $4
	*($9 + [8]) = $2
	$6 = (int_64)0
	$5 = (uint_64)$3 >> (uint_64)(int_64)8
	$8 = CALL db_find_i64($2, $4, (int_64)3607749779137757184, $5)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $148(($9 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [704])
	$6 = *($8)
	
.LABEL $label$6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1920])
	
.LOOP $label$9:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$1 = [0]
	
.LABEL $label$7
	CALL eosio_assert($1, [896])
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1920])
	$5 = (int_64)5462355
	
.LOOP $label$13:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert($7, [896])
	*(($0 + [8])) = $3
	*($0) = $6
	*($0 + [16]) = $2
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$16 }
	$1 = ($9 + [36])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	CALL $349($7)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($9 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $0
	
.LABEL $label$17
	*($1) = $0
	CALL $349($8)
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [48])
}

void .FUNC _ZN9msAccount10GetBalanceES_yPKc (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$7 = [-1]
	
.LOOP $label$1:
	$6 = ($4 + $7)
	$5 = ($7 + [1])
	$7 = $5
	if ( *(($6 + [1])) ){ goto $label$1 }
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = (CASTING uint_64)(uint_32 $5)
	$9 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$4:
	$7 = *($4)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$5
	$4 = ($4 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$10 = (int_64)0
	
.LABEL $label$2
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE($0, $1, $2, ((int_64)$10 | (int_64)((int_64)$3 & (int_64)255)))
}

int_32 .FUNC _ZN9msAccountC2Ey (int_32 $0, int_64 $1)
{
	*($0) = $1
	return $0
}

int_32 .FUNC _ZN9msAccountC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$5 = [-1]
	
.LOOP $label$3:
	$4 = ($1 + $5)
	$2 = ($5 + [1])
	$5 = $2
	if ( *(($4 + [1])) ){ goto $label$3 }
	$3 = (CASTING uint_64)(uint_32 $2)
	$7 = (int_64)0
	$6 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$4:
	$9 = (int_64)0
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$5 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$5 = ($5 + [165])
	goto $label$6 
	
.LABEL $label$7
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$9 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	*($0) = $8
	return $0
}

void .FUNC _ZN9msAccount15CheckPermissionEy (int_32 $0, int_64 $1)
{
	CALL require_auth2(*($0), $1)
}

void .FUNC _ZN9msAccount15CheckPermissionEv (int_32 $0)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC sprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vsprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $348([32])
	$6 = CALL $149($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $150(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $349($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1984])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1984])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1984])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1984])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $348($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $371($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $349($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $94($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1984])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1984])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $98(CALL $97($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $234 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $233 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492336, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $89($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $348([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [2332]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $379($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $353($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $411 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [17601])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [17601])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [17601]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [17601]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [17872]))
	$10 = *(($13 + [17601]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [17601]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [17601]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [17601]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [17601])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [17601])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_64 .FUNC _ZN9msAccount10GetEosNameEv (int_32 $0)
{
	return *($0)
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC strtol (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

void .FUNC _ZN7eosdice5closeEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$14 = (*([0] + [4]) - [208])
	*([0] + [4]) = $14
	CALL require_auth(*($0 + [16]))
	$2 = (int_64)0
	$7 = (int_64)59
	$13 = [352]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$2 }
	$15 = *($13)
	if ( ((uint_32)(($15 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$15 = ($15 + [165])
	goto $label$3 
	
.LABEL $label$4
	$15 = ( ($15 + [208]) ? [0] : ((($15 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($15 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$2 = (int_64)0
	$7 = (int_64)59
	$13 = [352]
	$10 = (int_64)0
	
.LOOP $label$5:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$6 }
	$15 = *($13)
	if ( ((uint_32)(($15 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$15 = ($15 + [165])
	goto $label$7 
	
.LABEL $label$8
	$15 = ( ($15 + [208]) ? [0] : ((($15 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($15 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	*(($6 = CALL $348([40])) + [8]) = $10
	*($6) = $8
	*($6 + [16]) = (int_64)-1
	$2 = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	$5 = ($6 + [24])
	$7 = (int_64)59
	$13 = [352]
	$10 = (int_64)0
	
.LOOP $label$9:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$10 }
	$15 = *($13)
	if ( ((uint_32)(($15 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$15 = ($15 + [165])
	goto $label$11 
	
.LABEL $label$12
	$15 = ( ($15 + [208]) ? [0] : ((($15 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($15 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$10
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$9 }
	*(($14 + [100])) = (int_64)0
	*($14 + [64]) = (int_64)0
	*($14 + [56]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*($14 + [80]) = (int_64)0
	*($14 + [88]) = (int_64)0
	*($14 + [96]) = [0]
	$3 = ($14 + [96])
	$13 = CALL strlen([128])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$19 }
	*(($14 + [96])) = ($13 << [1])
	$15 = ($3 + [1])
	if ( $13 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$11 = (($13 + [16]) & [-16])
	$15 = CALL $348($11)
	*(($14 + [96])) = ($11 | [1])
	*(($14 + [104])) = $15
	*(($14 + [100])) = $13
	
.LABEL $label$18
	CALL memcpy($15, [128], $13)
	
.LABEL $label$17
	*(($15 + $13)) = [0]
	CALL $326(($14 + [112]), $6, $10)
	if ( (*($14 + [116]) == 0) ){ goto $label$21 }
	CALL $326(($14 + [184]), $6, $10)
	$13 = *($14 + [188])
	if ( $13 ){ goto $label$22 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$22
	CALL memcpy(($14 + [112]), $13, [40])
	CALL $378((($14 + [112]) + [40]), ($13 + [40]))
	if ( ((*((($14 + [56]) + [40])) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($14 + [104])))
	goto $label$20 
	
.LABEL $label$21
	CALL memcpy(($14 + [112]), ($14 + [56]), [40])
	*((($14 + [112]) + [48])) = *(($3 + [8]))
	$2 = *($3)
	*(($14 + [100])) = [0]
	*($14 + [152]) = $2
	*((($14 + [56]) + [40])) = [0]
	*((($14 + [56]) + [48])) = [0]
	
.LABEL $label$20
	if ( ((int_64)*($14 + [112]) == (int_64)2) ){ goto $label$23 }
	CALL prints([176])
	CALL prints([6112])
	CALL prints([256])
	CALL eosio_assert(((int_64)*($14 + [112]) == (int_64)2), [6112])
	
.LABEL $label$23
	*($14 + [112]) = (int_64)1
	$1 = CALL memcpy($14, ($14 + [112]), [40])
	CALL $378(($1 + [40]), (($1 + [112]) + [40]))
	$2 = (int_64)0
	$7 = (int_64)59
	$13 = [352]
	$10 = (int_64)0
	
.LOOP $label$24:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$25 }
	$15 = *($13)
	if ( ((uint_32)(($15 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$15 = ($15 + [165])
	goto $label$26 
	
.LABEL $label$27
	$15 = ( ($15 + [208]) ? [0] : ((($15 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($15 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$25
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$24 }
	CALL $326(($1 + [176]), $6, $10)
	$13 = *($1 + [180])
	if ( ($13 == 0) ){ goto $label$28 }
	*($1 + [184]) = $1
	CALL eosio_assert([1], [832])
	CALL $328($6, $13, ($1 + [184]))
	goto $label$13 
	
.LABEL $label$28
	*($1 + [168]) = $1
	*($1 + [200]) = $8
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*($1 + [184]) = $6
	*($1 + [188]) = ($1 + [168])
	*($1 + [192]) = ($1 + [200])
	*(($14 = CALL $348([64])) + [48]) = [0]
	$2 = (int_64)0
	*($14 + [40 align=4]) = (int_64)0
	*($14 + [52]) = $6
	CALL $327(($1 + [184]), $14)
	$7 = (int_64)59
	$13 = [352]
	$10 = (int_64)0
	
.LOOP $label$29:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$30 }
	$15 = *($13)
	if ( ((uint_32)(($15 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$15 = ($15 + [165])
	goto $label$31 
	
.LABEL $label$32
	$15 = ( ($15 + [208]) ? [0] : ((($15 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($15 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$30
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$29 }
	$3 = *($14 + [56])
	$12 = *(($6 + [32]))
	$15 = ($6 + [28])
	$13 = *($15)
	if ( ((uint_32)$13 >= (uint_32)$12) ){ goto $label$33 }
	*($13 + [8]) = $10
	*($13) = $14
	*($13 + [16]) = $3
	*($15) = ($13 + [24])
	goto $label$13 
	
.LABEL $label$33
	$11 = *($5)
	$15 = ((int_32)($13 - $11) / (int_32)[24])
	$4 = ($15 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$15 }
	$5 = [178956970]
	$12 = ((int_32)($12 - $11) / (int_32)[24])
	if ( ((uint_32)$12 > (uint_32)[89478484]) ){ goto $label$35 }
	$5 = ($12 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$34 }
	
.LABEL $label$35
	$12 = CALL $348(((int_32)$5 * (int_32)[24]))
	$13 = *(($6 + [28]))
	$11 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$34
	$5 = [0]
	$12 = [0]
	goto $label$14 
	
.LABEL $label$16
	CALL $350($3)
	
.LABEL $label$15
	CALL $371($5)
	
.LABEL $label$14
	*(($15 = ($12 + ((int_32)$15 * (int_32)[24]))) + [8]) = $10
	*($15) = $14
	*($15 + [16]) = $3
	$5 = ($12 + ((int_32)$5 * (int_32)[24]))
	$12 = ($15 + [24])
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$37 }
	
.LOOP $label$38:
	$14 = ($13 + [-24])
	$3 = *($14)
	*($14) = [0]
	*(($15 + [-24])) = $3
	*(($15 + [-8])) = *(($13 + [-8]))
	*(($15 + [-12])) = *(($13 + [-12]))
	*(($15 + [-16])) = *(($13 + [-16]))
	$15 = ($15 + [-24])
	$13 = $14
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$38 }
	$13 = *(($6 + [28]))
	$14 = *(($6 + [24]))
	goto $label$36 
	
.LABEL $label$37
	$14 = $13
	
.LABEL $label$36
	*(($6 + [28])) = $12
	*(($6 + [24])) = $15
	*(($6 + [32])) = $5
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$39 }
	
.LOOP $label$40:
	$13 = ($13 + [-24])
	$15 = *($13)
	*($13) = [0]
	if ( ($15 == 0) ){ goto $label$41 }
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*(($15 + [48])))
	
.LABEL $label$42
	CALL $349($15)
	
.LABEL $label$41
	if ( ((int_32)$14 != (int_32)$13) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ($14 == 0) ){ goto $label$13 }
	CALL $349($14)
	
.LABEL $label$13
	if ( ((*(($1 + [40])) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*(($1 + [48])))
	
.LABEL $label$43
	$2 = *(($0 + [16]))
	*(($0 = CALL $348([40])) + [8]) = $2
	*($0) = $2
	*($0 + [16]) = (int_64)-1
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [32]) = [0]
	$13 = CALL db_lowerbound_i64($2, $2, (int_64)5093418686402150400, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$44 }
	$11 = CALL $329($0, $13)
	$4 = ($0 + [24])
	$5 = ($0 + [28])
	
.LOOP $label$45:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$12 = [0]
	$13 = CALL db_next_i64(*($11 + [40]), ($1 + [184]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$46 }
	$12 = CALL $329($0, $13)
	
.LABEL $label$46
	CALL eosio_assert(((int_32)*($11 + [36]) == (int_32)$0), [4256])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [4304])
	$3 = *($4)
	$14 = *($5)
	if ( ((int_32)$14 == (int_32)$3) ){ goto $label$47 }
	$2 = *($11)
	$13 = ($14 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$48:
	if ( ((int_64)*(*($13)) == (int_64)$2) ){ goto $label$47 }
	$14 = $13
	$15 = ($13 + [-24])
	$13 = $15
	if ( ((int_32)($15 + $6) != (int_32)[-24]) ){ goto $label$48 }
	
.LABEL $label$47
	CALL eosio_assert(((int_32)$14 != (int_32)$3), [4368])
	$15 = *($5)
	$13 = *($4)
	$13 = ($13 + ((int_32)((int_32)(($14 + [-24]) - $13) / (int_32)[24]) * (int_32)[24]))
	$14 = ($13 + [24])
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$51 }
	$3 = ($15 + [-24])
	
.LOOP $label$52:
	$15 = ($13 + [24])
	$6 = *($15)
	*($15) = [0]
	$14 = *($13)
	*($13) = $6
	if ( ($14 == 0) ){ goto $label$53 }
	if ( ((*($14 + [24]) & [1]) == 0) ){ goto $label$54 }
	CALL $349(*(($14 + [32])))
	
.LABEL $label$54
	CALL $349($14)
	
.LABEL $label$53
	*(($13 + [16])) = *(($13 + [40]))
	*(($13 + [8])) = *(($13 + [32]))
	$13 = $15
	if ( ((int_32)$3 != (int_32)$15) ){ goto $label$52 }
	$14 = *($5)
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	$15 = $13
	
.LABEL $label$50
	
.LOOP $label$55:
	$14 = ($14 + [-24])
	$13 = *($14)
	*($14) = [0]
	if ( ($13 == 0) ){ goto $label$56 }
	if ( ((*($13 + [24]) & [1]) == 0) ){ goto $label$57 }
	CALL $349(*(($13 + [32])))
	
.LABEL $label$57
	CALL $349($13)
	
.LABEL $label$56
	if ( ((int_32)$15 != (int_32)$14) ){ goto $label$55 }
	
.LABEL $label$49
	*($5) = $15
	CALL db_remove_i64(*(($11 + [40])))
	$11 = $12
	if ( $12 ){ goto $label$45 }
	
.LABEL $label$44
	$13 = CALL db_lowerbound_i64(*($0), *(($0 + [8])), (int_64)5093418686402150400, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$58 }
	$13 = CALL $329($0, $13)
	CALL eosio_assert([1], [656])
	$13 = CALL db_next_i64(*($13 + [40]), ($1 + [184]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$58 }
	
.LOOP $label$59:
	$13 = CALL $329($0, $13)
	CALL eosio_assert([1], [656])
	$13 = CALL db_next_i64(*($13 + [40]), ($1 + [184]))
	if ( ((int_32)$13 >= (int_32)[0]) ){ goto $label$59 }
	
.LABEL $label$58
	*($1 + [184]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($1 + [184])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([6144])
	CALL printui(*($1 + [120]))
	CALL prints([2560])
	CALL prints([80])
	if ( ((*(($1 + [152])) & [1]) == 0) ){ goto $label$60 }
	CALL $349(*(($1 + [160])))
	
.LABEL $label$60
	*([0] + [4]) = ($1 + [208])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC vsprintf (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL vsnprintf($0, [2147483647], $1, $2)
}

int_32 .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [11]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC __strchrnul (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	($0 + CALL strlen($0))
	$2 = ($1 & [255])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 == (int_32)($1 & [255])) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ($0 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = *($0)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$2 = ((int_32)$2 * (int_32)[16843009])
	
.LOOP $label$6:
	$3 = ((int_32)$3 ^ (int_32)$2)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$0 = ($0 + [4])
	$3 = *($0)
	if ( (((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = ($0 + [-1])
	
.LOOP $label$7:
	$0 = ($0 + [1])
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 != (int_32)($1 & [255])) ){ goto $label$7 }
	
.LABEL $label$2
	return $0
	return .LABEL $label$1
}

void .FUNC $435 ()
{
	(unreachable)
}

int_32 .FUNC __secs_to_tm (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = [-1]
	if ( ((uint_64)((int_64)$0 + (int_64)67908586910515200) > (uint_64)(int_64)135817173789408000) ){ goto $label$1 }
	$0 = ((int_64)$0 + (int_64)-951868800)
	$4 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)86400))
	$0 = ((int_64)(CASTING int_64)(int_32 int_32($4 >> [31])) + (int_64)((int_64)$0 / (int_64)86400))
	$10 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)146097))
	$9 = ( ($10 + [146097]) ? $10 : ((int_32)$10 < (int_32)[0]) )
	$6 = (((int_32)$9 / (int_32)[36524]) - (($9 + [-146096]) <= [36524]))
	$9 = (((int_32)$6 * (int_32)[-36524]) + $9)
	$2 = (((int_32)$9 / (int_32)[1461]) - (($9 + [-36525]) <= [1461]))
	$9 = (((int_32)$2 * (int_32)[-1461]) + $9)
	$8 = (((int_32)$9 / (int_32)[365]) - (($9 + [-1460]) <= [365]))
	$3 = (((int_32)$8 * (int_32)[-365]) + $9)
	$5 = ((int_64)((int_64)$0 + (int_64)3) % (int_64)7)
	$0 = ((int_64)(CASTING uint_64)(uint_32 int_32($10 >> [31])) + (int_64)((int_64)$0 / (int_64)146097))
	$7 = [0]
	if ( $8 ){ goto $label$2 }
	$7 = (($6 == 0) | ((int_32)$2 != (int_32)[0]))
	
.LABEL $label$2
	$0 = ((int_64)(CASTING int_64)(int_32 ((($2 << [2]) + ((int_32)$6 * (int_32)[100])) + $8)) + (int_64)((int_64)((int_64)$0 << (int_64)32) >> (int_64)32) * (int_64)400))
	$9 = $3
	$10 = [0]
	if ( ((int_32)$3 < (int_32)[31]) ){ goto $label$3 }
	$10 = [0]
	$8 = [31]
	$9 = $3
	
.LOOP $label$4:
	$6 = ($10 + [18465])
	$10 = ($10 + [1])
	$8 = *($6)
	$9 = ($9 - $8)
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$8 = ((int_32)$10 > (int_32)[9])
	$0 = ((int_64)$0 + (int_64)(CASTING uint_64)(uint_32 $8))
	if ( ((uint_64)((int_64)$0 + (int_64)2147483748) > (uint_64)(int_64)4294967295) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $5)
	*($1 + [24]) = ( ($6 + [7]) ? $6 : ((int_32)$6 < (int_32)[0]) )
	$11 = ( [366] ? [365] : $7 )
	$6 = (($3 + $7) + [59])
	*($1 + [28]) = ($6 - ( [0] ? $11 : ((int_32)$6 < (int_32)$11) ))
	*($1 + [20]) = ((int_64)$0 + (int_64)100)
	*($1 + [12]) = ($9 + [1])
	$9 = ( ($4 + [86400]) ? $4 : ((int_32)$4 < (int_32)[0]) )
	*($1 + [8]) = ((int_32)$9 / (int_32)[3600])
	*($1 + [4]) = ((int_32)((int_32)$9 / (int_32)[60]) % (int_32)[60])
	*($1 + [16]) = (( ($10 + [-12]) ? $10 : $8 ) + [2])
	*($1) = ((int_32)$9 % (int_32)[60])
	$11 = [0]
	
.LABEL $label$1
	return $11
}

int_32 .FUNC __nl_langinfo_l (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((int_32)$0 != (int_32)[14]) ){ goto $label$1 }
	return ( [18000] ? [17984] : *([0]) )
	
.LABEL $label$1
	$2 = int_32($0 >> [16])
	$3 = ($0 & [65535])
	if ( ((int_32)$3 != (int_32)[65535]) ){ goto $label$9 }
	if ( ((int_32)$2 > (int_32)[5]) ){ goto $label$9 }
	$0 = ($1 + ($2 << [2]))
	if ( (*($0) == 0) ){ goto $label$8 }
	return (*($0) + [8])
	
.LABEL $label$9
	$5 = [18384]
	$0 = ($2 + [-1])
	if ( ((uint_32)$0 > (uint_32)[4]) ){ goto $label$2 }
	goto $label$10 
	
.LABEL $label$10
	$0 = [18368]
	if ( ((uint_32)$3 <= (uint_32)[1]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$8
	return [18400]
	
.LABEL $label$7
	$0 = [18048]
	if ( ((uint_32)$3 <= (uint_32)[49]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	$5 = [18384]
	if ( $3 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	$0 = [18016]
	if ( ((uint_32)$3 > (uint_32)[3]) ){ goto $label$2 }
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = *($0)
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$13 }
	$0 = $5
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = $0
	
.LABEL $label$11
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( (*($5) == 0) ){ goto $label$2 }
	$5 = CALL __lctrans($5, *(($1 + ($2 << [2]))))
	
.LABEL $label$2
	$0
	return $5
}

int_32 .FUNC __asctime (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$2 = CALL __nl_langinfo_l((*($0 + [24]) + [131072]), [17916])
	$3 = CALL __nl_langinfo_l((*($0 + [16]) + [131086]), [17916])
	$4 = *($0 + [12])
	$5 = *($0 + [8])
	$6 = *($0 + [20])
	$7 = *($0 + [4])
	*(($8 + [20])) = *($0)
	*(($8 + [16])) = $7
	*(($8 + [24])) = ($6 + [1900])
	*($8 + [12]) = $5
	*($8 + [8]) = $4
	*($8 + [4]) = $3
	*($8) = $2
	if ( ((int_32)CALL snprintf($1, [26], [17952], $8) < (int_32)[26]) ){ goto $label$1 }
	*([0]) = [0]
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [32])
	return $1
}

int_32 .FUNC __gmtime_r (int_32 $0, int_32 $1)
{
	if ( ((int_32)CALL __secs_to_tm(*($0), $1) <= (int_32)[-1]) ){ goto $label$1 }
	*($1 + [40]) = [18448]
	*($1 + [32 align=4]) = (int_64)0
	return $1
	
.LABEL $label$1
	*(CALL __errno_location()) = [75]
	return [0]
}

int_32 .FUNC gmtime (int_32 $0)
{
	return CALL __gmtime_r($0, [18404])
}

void .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $292($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141018112, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$2 = CALL $137($0, $1, ($5 + [12]), ($5 + [8]), $2)
	$1 = *($2)
	if ( $1 ){ goto $label$1 }
	$1 = CALL $348([48])
	CALL $378(($1 + [16]), $3)
	CALL $132(($1 + [32]), ($3 + [16]))
	*($1) = (int_64)0
	*($1 + [8]) = *($5 + [12])
	*($2) = $1
	$3 = $1
	$4 = *(*($0))
	if ( ($4 == 0) ){ goto $label$2 }
	*($0) = $4
	$3 = *($2)
	
.LABEL $label$2
	CALL $127(*($0 + [4]), $3)
	*($0 + [8]) = (*($0 + [8]) + [1])
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return $1
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL $111($0)
	$5 = *($1 + [8])
	if ( ((int_32)$5 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$4 }
	*(($2 = CALL $348([12])) + [8]) = [0]
	$5 = *($1)
	$6 = *($5)
	*($2 + [4]) = [0]
	$4 = ($2 + [4])
	*($2) = $4
	$3 = ($5 + [4])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = $6
	$5 = ($7 + [16])
	CALL $129($2, $4, $5, $5)
	$5 = *($7 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = $5
	$5 = *($6)
	if ( $5 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$9 }
	$7 = ($7 + [8])
	
.LOOP $label$12:
	$5 = *($7)
	$7 = ($5 + [8])
	$6 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($6)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*($0) = $2
	goto $label$1 
	
.LABEL $label$6
	$5 = CALL $348([12])
	CALL $378($5, *($1))
	*($0) = $5
	goto $label$1 
	
.LABEL $label$5
	$5 = CALL $348([24])
	$2 = *($6 + [16])
	$6 = *($1)
	$7 = *($6 + [4])
	$4 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($6 + [8]) == (int_32)$7) ){ goto $label$3 }
	$3 = ($2 + *($6 + [20]))
	$6 = ($7 + (uint_32($3 >> [6]) & [67108860]))
	$7 = (*($6) + (($3 & [255]) << [4]))
	$2 = (*($4) + (($2 & [255]) << [4]))
	goto $label$2 
	
.LABEL $label$4
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$6 = ($7 + (uint_32(($2 + *($6 + [20])) >> [6]) & [67108860]))
	$2 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($8 + [24]) = $4
	*($8 + [28]) = $2
	*($8 + [20]) = $7
	*($8 + [16]) = $6
	*($8 + [8 align=4]) = *($8 + [24])
	*(($8 + [4])) = *($8 + [20])
	*($8) = *($8 + [16])
	CALL $130($5, ($8 + [8]), $8, [0])
	*($0) = $5
	
.LABEL $label$1
	*($0 + [8]) = *(($1 + [8]))
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $286 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $291($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $290($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141017088, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $284 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

void .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $291($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141017600, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	float_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	$3 = ($1 + [1])
	if ( (CALL isspace(*((( *($1 + [8]) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$1 }
	$9 = ($1 + [8])
	
.LOOP $label$2:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = *($2)
	$14 = *((( *(($1 + [8])) ? $3 : (*($1) & [1]) ) + $8))
	$9 = ($14 + [-91])
	if ( ((uint_32)$9 > (uint_32)[32]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$40
	$9 = [0]
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $379(($16 + [64]), $1, $8, [4], $1)
	$3 = *($16 + [64])
	$8 = CALL strlen([2592])
	if ( ((int_32)$8 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$41 }
	$9 = (CALL $363(($16 + [64]), [0], [-1], [2592], $8) == 0)
	$3 = *($16 + [64])
	
.LABEL $label$41
	if ( (($3 & [1]) == 0) ){ goto $label$42 }
	CALL $349(*($16 + [72]))
	
.LABEL $label$42
	if ( ($9 == 0) ){ goto $label$34 }
	$1 = [1]
	$3 = ($16 + [88])
	if ( ((int_32)*($3) == (int_32)[6]) ){ goto $label$33 }
	CALL $111(($16 + [80]))
	*($3) = [6]
	*($16 + [80]) = [0]
	goto $label$33 
	
.LABEL $label$39
	if ( ((int_32)$14 != (int_32)[34]) ){ goto $label$38 }
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	*($16 + [56]) = [0]
	*($16 + [48]) = (int_64)0
	$14 = ($1 + [8])
	
.LOOP $label$43:
	$9 = ($8 + [1])
	*($2) = $9
	$9 = *((( *($14) ? $3 : (*($1) & [1]) ) + $9))
	if ( ((int_32)$9 == (int_32)[92]) ){ goto $label$45 }
	if ( ((int_32)$9 == (int_32)[34]) ){ goto $label$32 }
	CALL $357(($16 + [48]), int_32(($9 << [24]) >> [24]))
	goto $label$44 
	
.LABEL $label$45
	$8 = ($8 + [2])
	*($2) = $8
	$8 = (*((( *($14) ? $3 : (*($1) & [1]) ) + $8)) + [-34])
	if ( ((uint_32)$8 > (uint_32)[83]) ){ goto $label$49 }
	goto $label$55 
	
.LABEL $label$55
	CALL $357(($16 + [48]), [34])
	goto $label$44 
	
.LABEL $label$54
	CALL $357(($16 + [48]), [47])
	goto $label$44 
	
.LABEL $label$53
	CALL $357(($16 + [48]), [92])
	goto $label$44 
	
.LABEL $label$52
	CALL $357(($16 + [48]), [10])
	goto $label$44 
	
.LABEL $label$51
	CALL $357(($16 + [48]), [13])
	goto $label$44 
	
.LABEL $label$50
	CALL $357(($16 + [48]), [9])
	goto $label$44 
	
.LABEL $label$49
	CALL $357(($16 + [48]), [92])
	goto $label$44 
	
.LABEL $label$48
	CALL $357(($16 + [48]), [8])
	goto $label$44 
	
.LABEL $label$47
	CALL $357(($16 + [48]), [12])
	goto $label$44 
	
.LABEL $label$46
	CALL $356(($16 + [48]), [2896])
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [1]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$56 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$56 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$56
	CALL $357(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [2]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$57 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$57 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$57
	CALL $357(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [3]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$58 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$58 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$58
	CALL $357(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [4]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$59 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$59 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$59
	CALL $357(($16 + [48]), int_32(($8 << [24]) >> [24]))
	*($2) = (*($2) + [4])
	
.LABEL $label$44
	$8 = *($2)
	goto $label$43 
	
.LABEL $label$38
	if ( ((int_32)$14 == (int_32)[45]) ){ goto $label$31 }
	if ( ((uint_32)(($14 + [-48]) & [255]) <= (uint_32)[9]) ){ goto $label$31 }
	*(($16 + [88])) = [0]
	*($16 + [80]) = (int_64)0
	$2 = CALL strlen([3216])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$24 }
	*($16 + [80]) = ($2 << [1])
	$3 = (($16 + [80]) | [1])
	$1 = $3
	if ( $2 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$37
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $111(($16 + [80]))
	*(($8 = CALL $348([24]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16 align=4]) = (int_64)0
	$14 = (*($2) + [1])
	*($2) = $14
	*($16 + [80]) = $8
	*($16 + [88]) = [2]
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $14))) == 0) ){ goto $label$60 }
	
.LOOP $label$61:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$61 }
	
.LABEL $label$60
	$8 = *($2)
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $8)) != (int_32)[93]) ){ goto $label$9 }
	*($2) = ($8 + [1])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$8 
	
.LABEL $label$36
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $379(($16 + [64]), $1, $8, [4], $1)
	$8 = [1]
	$3 = *($16 + [64])
	$9 = CALL strlen([2448])
	if ( ((int_32)$9 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$62 }
	$8 = ((int_32)CALL $363(($16 + [64]), [0], [-1], [2448], $9) != (int_32)[0])
	$3 = *($16 + [64])
	
.LABEL $label$62
	if ( (($3 & [1]) == 0) ){ goto $label$63 }
	CALL $349(*($16 + [72]))
	
.LABEL $label$63
	if ( ($8 == 0) ){ goto $label$11 }
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$3 = CALL strlen([3056])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$27 }
	*($16 + [48]) = ($3 << [1])
	$8 = (($16 + [48]) | [1])
	if ( $3 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$35
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $111(($16 + [80]))
	*(($8 = CALL $348([12])) + [8]) = [0]
	*($8 + [4]) = [0]
	*($8) = ($8 + [4])
	*($16 + [88]) = [1]
	$14 = (*($2) + [1])
	*($2) = $14
	*($16 + [80]) = $8
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $14))) == 0) ){ goto $label$64 }
	
.LOOP $label$65:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$65 }
	
.LABEL $label$64
	$8 = *($2)
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $8)) != (int_32)[125]) ){ goto $label$15 }
	*($2) = ($8 + [1])
	goto $label$14 
	
.LABEL $label$34
	CALL $379(($16 + [64]), $1, *($2), [5], $1)
	$8 = [0]
	$3 = *($16 + [64])
	$9 = CALL strlen([2608])
	if ( ((int_32)$9 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$66 }
	$8 = (CALL $363(($16 + [64]), [0], [-1], [2608], $9) == 0)
	$3 = *($16 + [64])
	
.LABEL $label$66
	if ( (($3 & [1]) == 0) ){ goto $label$67 }
	CALL $349(*($16 + [72]))
	
.LABEL $label$67
	if ( ($8 == 0) ){ goto $label$18 }
	$1 = [0]
	$3 = ($16 + [88])
	if ( ((int_32)*($3) == (int_32)[6]) ){ goto $label$33 }
	CALL $111(($16 + [80]))
	*($3) = [6]
	$1 = [0]
	*($16 + [80]) = [0]
	
.LABEL $label$33
	$3 = [6]
	*($16 + [40]) = [6]
	*(($16 + [88])) = [0]
	*($16 + [80]) = $1
	*($2) = (( [4] ? [5] : $1 ) + *($2))
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$17 
	
.LABEL $label$32
	*($2) = ($8 + [2])
	CALL $378(($16 + [16]), ($16 + [48]))
	$2 = ($16 + [88])
	if ( ((int_32)*($2) == (int_32)[3]) ){ goto $label$68 }
	CALL $111(($16 + [80]))
	*(($1 = CALL $348([12])) + [8]) = [0]
	*($1) = (int_64)0
	*($2) = [3]
	*($16 + [80]) = $1
	
.LABEL $label$68
	CALL $378(($16 + [64]), ($16 + [16]))
	$2 = *($16 + [80])
	if ( (*($2) & [1]) ){ goto $label$21 }
	*($2) = [0]
	goto $label$20 
	
.LABEL $label$31
	$5 = [0]
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	*($16 + [56]) = [0]
	*($16 + [48]) = (int_64)0
	*($16 + [24]) = [0]
	*($16 + [16]) = (int_64)0
	$11 = ($1 + [8])
	
.LOOP $label$70:
	$14 = ($8 + [1])
	*($2) = $14
	$8 = *((( *($11) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$72 }
	if ( ((uint_32)(($8 + [-48]) & [255]) <= (uint_32)[9]) ){ goto $label$72 }
	$9 = int_32(($8 << [24]) >> [24])
	if ( ((int_32)$8 == (int_32)[46]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$72
	
.LOOP $label$73:
	CALL $357(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *($2)
	$14 = ($8 + [1])
	*($2) = $14
	$8 = *(($8 + ( *($11) ? $3 : (*($1) & [1]) )))
	$9 = ($8 + [-48])
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$73 }
	if ( (($9 & [255]) <= [10]) ){ goto $label$73 }
	$9 = int_32(($8 << [24]) >> [24])
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$69 }
	
.LABEL $label$71
	CALL $357(($16 + [48]), [46])
	$8 = *($2)
	$5 = [1]
	goto $label$70 
	
.LABEL $label$69
	if ( ((int_32)$8 == (int_32)[69]) ){ goto $label$84 }
	if ( ((int_32)$8 != (int_32)[101]) ){ goto $label$83 }
	
.LABEL $label$84
	$8 = ($14 + [1])
	*($2) = $8
	$9 = ($1 + [8])
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $14)) != (int_32)[45]) ){ goto $label$85 }
	*($2) = ($14 + [2])
	CALL $357(($16 + [16]), [45])
	$8 = *($2)
	
.LABEL $label$85
	*($2) = ($8 + [1])
	$8 = *((( *($9) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((uint_32)(($8 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$86 }
	$9 = ($1 + [8])
	
.LOOP $label$87:
	CALL $357(($16 + [16]), int_32(($8 << [24]) >> [24]))
	$8 = *($2)
	*($2) = ($8 + [1])
	$8 = *(($8 + ( *($9) ? $3 : (*($1) & [1]) )))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$87 }
	
.LABEL $label$86
	if ( (CALL isspace(int_32(($8 << [24]) >> [24])) == 0) ){ goto $label$82 }
	goto $label$6 
	
.LABEL $label$83
	$15 = (float_64)0
	if ( (CALL isspace($9) == 0) ){ goto $label$81 }
	goto $label$5 
	
.LABEL $label$82
	$1 = ($8 & [255])
	if ( ((int_32)$1 == (int_32)[44]) ){ goto $label$6 }
	if ( ((int_32)$1 == (int_32)[93]) ){ goto $label$6 }
	if ( ((int_32)$1 == (int_32)[125]) ){ goto $label$6 }
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$2 = CALL strlen([3104])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$80 }
	*($16) = ($2 << [1])
	$3 = ($16 | [1])
	$1 = $3
	if ( $2 ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	if ( ((int_32)$8 == (int_32)[44]) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)[93]) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)[125]) ){ goto $label$5 }
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$2 = CALL strlen([3168])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$77 }
	*($16) = ($2 << [1])
	$3 = ($16 | [1])
	$1 = $3
	if ( $2 ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$80
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $348($3)
	*($16) = ($3 | [1])
	*($16 + [8]) = $1
	*($16 + [4]) = $2
	$3 = ($16 | [1])
	
.LABEL $label$79
	CALL memcpy($1, [3104], $2)
	
.LABEL $label$78
	*(($1 + $2)) = [0]
	CALL $357($16, int_32(($8 << [24]) >> [24]))
	CALL $356($16, [2784])
	CALL prints([176])
	CALL prints(( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$4 }
	CALL $349(*(($16 + [8])))
	goto $label$4 
	
.LABEL $label$77
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $348($3)
	*($16) = ($3 | [1])
	*($16 + [8]) = $1
	*($16 + [4]) = $2
	$3 = ($16 | [1])
	
.LABEL $label$76
	CALL memcpy($1, [3168], $2)
	
.LABEL $label$75
	*(($1 + $2)) = [0]
	CALL $357($16, int_32(($8 << [24]) >> [24]))
	CALL $356($16, [2784])
	CALL prints([176])
	CALL prints(( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$4 }
	CALL $349(*(($16 + [8])))
	goto $label$4 
	
.LABEL $label$74
	CALL $350($16)
	
.LABEL $label$30
	CALL $350(($16 + [48]))
	
.LABEL $label$29
	CALL $350(($16 + [80]))
	
.LABEL $label$28
	*(($16 + [24])) = [0]
	*($16 + [16]) = (int_64)0
	$2 = CALL strlen([2912])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$88 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$91 }
	*($16 + [16]) = ($2 << [1])
	$3 = (($16 + [16]) | [1])
	$1 = $3
	if ( $2 ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $348($3)
	*($16 + [16]) = ($3 | [1])
	*($16 + [24]) = $1
	*($16 + [20]) = $2
	$3 = (($16 + [16]) | [1])
	
.LABEL $label$90
	CALL memcpy($1, [2912], $2)
	
.LABEL $label$89
	*(($1 + $2)) = [0]
	CALL $357(($16 + [16]), int_32(($8 << [24]) >> [24]))
	CALL $356(($16 + [16]), [2784])
	CALL prints([176])
	CALL prints(( *($16 + [24]) ? $3 : (*($16 + [16]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [24]) ? $3 : (*($16 + [16]) & [1]) ))
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $111(($16 + [64]))
	*(($2 = CALL $348([12])) + [8]) = [0]
	*($2) = (int_64)0
	*($16 + [64]) = $2
	*($16 + [32]) = *($16 + [64])
	*($16 + [40]) = [3]
	*($16 + [64]) = [0]
	*($16 + [72]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($16 + [24])))
	goto $label$19 
	
.LABEL $label$88
	CALL $350(($16 + [16]))
	
.LABEL $label$27
	$9 = (($3 + [16]) & [-16])
	$8 = CALL $348($9)
	*($16 + [48]) = ($9 | [1])
	*($16 + [56]) = $8
	*($16 + [52]) = $3
	
.LABEL $label$26
	CALL memcpy($8, [3056], $3)
	
.LABEL $label$25
	*(($8 + $3)) = [0]
	CALL $379(($16 + [64]), $1, *($2), [4], $1)
	$2 = *($16 + [64])
	$1 = ($2 & [1])
	CALL $355(($16 + [48]), ( *($16 + [72]) ? (($16 + [64]) | [1]) : $1 ), ( *($16 + [68]) ? uint_32($2 >> [1]) : $1 ))
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$92 }
	CALL $349(*(($16 + [72])))
	
.LABEL $label$92
	CALL $356(($16 + [48]), [2784])
	CALL prints([176])
	$2 = (($16 + [48]) | [1])
	CALL prints(( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$93 }
	CALL $349(*(($16 + [56])))
	
.LABEL $label$93
	$2 = *(($16 + [40]))
	$13 = *($16 + [32])
	goto $label$10 
	
.LABEL $label$24
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $348($3)
	*($16 + [80]) = ($3 | [1])
	*($16 + [88]) = $1
	*($16 + [84]) = $2
	$3 = (($16 + [80]) | [1])
	
.LABEL $label$23
	CALL memcpy($1, [3216], $2)
	
.LABEL $label$22
	*(($1 + $2)) = [0]
	CALL $357(($16 + [80]), $14)
	CALL $356(($16 + [80]), [2784])
	CALL prints([176])
	CALL prints(( *($16 + [88]) ? $3 : (*($16 + [80]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [88]) ? $3 : (*($16 + [80]) & [1]) ))
	*($0 + [8]) = [0]
	*($0) = [0]
	if ( ((*($16 + [80]) & [1]) == 0) ){ goto $label$3 }
	CALL $349(*(($16 + [88])))
	goto $label$3 
	
.LABEL $label$21
	*(*($2 + [8])) = [0]
	*($2 + [4]) = [0]
	
.LABEL $label$20
	CALL $353($2, [0])
	*(($2 + [8])) = *((($16 + [64]) + [8]))
	*($2) = *($16 + [64])
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$94 }
	CALL $349(*($16 + [24]))
	
.LABEL $label$94
	$2 = (($16 + [80]) + [8])
	*($16 + [40]) = *($2)
	*($2) = [0]
	*($16 + [32]) = *($16 + [80])
	*($16 + [80]) = [0]
	
.LABEL $label$19
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$95 }
	CALL $349(*(($16 + [56])))
	
.LABEL $label$95
	CALL $112(($16 + [80]))
	*($0) = *($16 + [32])
	*($0 + [8]) = *($16 + [40])
	*($16 + [40]) = [0]
	*($16 + [32]) = [0]
	CALL $112(($16 + [32]))
	goto $label$3 
	
.LABEL $label$18
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$3 = CALL strlen([2992])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$98 }
	*($16 + [48]) = ($3 << [1])
	$8 = (($16 + [48]) | [1])
	if ( $3 ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$98
	$9 = (($3 + [16]) & [-16])
	$8 = CALL $348($9)
	*($16 + [48]) = ($9 | [1])
	*($16 + [56]) = $8
	*($16 + [52]) = $3
	
.LABEL $label$97
	CALL memcpy($8, [2992], $3)
	
.LABEL $label$96
	*(($8 + $3)) = [0]
	CALL $379(($16 + [64]), $1, *($2), [5], $1)
	$2 = *($16 + [64])
	$1 = ($2 & [1])
	CALL $355(($16 + [48]), ( *($16 + [72]) ? (($16 + [64]) | [1]) : $1 ), ( *($16 + [68]) ? uint_32($2 >> [1]) : $1 ))
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$99 }
	CALL $349(*(($16 + [72])))
	
.LABEL $label$99
	CALL $356(($16 + [48]), [2784])
	CALL prints([176])
	$2 = (($16 + [48]) | [1])
	CALL prints(( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$100 }
	CALL $349(*(($16 + [56])))
	
.LABEL $label$100
	$3 = *(($16 + [40]))
	$13 = *($16 + [32])
	
.LABEL $label$17
	CALL $112(($16 + [80]))
	*($0 + [8]) = $3
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $112(($16 + [32]))
	goto $label$3 
	
.LABEL $label$16
	CALL $350(($16 + [48]))
	
.LABEL $label$15
	$5 = (($16 + [32]) | [1])
	$4 = (($16 + [48]) | [1])
	$8 = ($1 + [8])
	
.LOOP $label$101:
	CALL $123(($16 + [64]), $1, $2)
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$102 }
	
.LOOP $label$103:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$103 }
	
.LABEL $label$102
	$9 = *($2)
	if ( ((int_32)*((( *($8) ? $3 : (*($1) & [1]) ) + $9)) != (int_32)[58]) ){ goto $label$114 }
	$9 = ($9 + [1])
	*($2) = $9
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) == 0) ){ goto $label$115 }
	
.LOOP $label$116:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$116 }
	
.LABEL $label$115
	CALL $123(($16 + [32]), $1, $2)
	CALL $125(($16 + [48]), ($16 + [64]), $16)
	$11 = (($16 + [48]) + [8])
	*(($10 = (($16 + [16]) + [8]))) = *($11)
	*($16 + [16]) = *($16 + [48])
	$14 = (($16 + [80]) + [8])
	if ( ((int_32)*($14) != (int_32)[1]) ){ goto $label$113 }
	$9 = *($16 + [80])
	goto $label$112 
	
.LABEL $label$114
	*(($14 = (($16 + [32]) + [8]))) = [0]
	*($16 + [32]) = (int_64)0
	$9 = CALL strlen([2800])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$111 }
	*($16 + [32]) = ($9 << [1])
	$11 = $5
	if ( $9 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$113
	CALL $111(($16 + [80]))
	*(($9 = CALL $348([12])) + [8]) = [0]
	*($9 + [4]) = [0]
	*($14) = [1]
	*($9) = ($9 + [4])
	*($16 + [80]) = $9
	
.LABEL $label$112
	$6 = CALL $126($9, ($16 + [48]), ($16 + [16]))
	$14 = *($6)
	if ( $14 ){ goto $label$117 }
	$14 = CALL $348([48])
	CALL $378(($14 + [16]), ($16 + [16]))
	*($14) = (int_64)0
	*($14 + [8]) = *($16 + [48])
	*($6) = $14
	*($14 + [40]) = [0]
	*($14 + [32]) = [0]
	$12 = $14
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$118 }
	*($9) = $7
	$12 = *($6)
	
.LABEL $label$118
	CALL $127(*($9 + [4]), $12)
	*($9 + [8]) = (*($9 + [8]) + [1])
	
.LABEL $label$117
	CALL $128(($14 + [32]), ($16 + [32]))
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$119 }
	CALL $349(*($10))
	
.LABEL $label$119
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$120 }
	
.LOOP $label$121:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$121 }
	
.LABEL $label$120
	$9 = *($2)
	$14 = *((( *($8) ? $3 : (*($1) & [1]) ) + $9))
	if ( ((int_32)$14 == (int_32)[125]) ){ goto $label$108 }
	if ( ((int_32)$14 != (int_32)[44]) ){ goto $label$107 }
	*($2) = ($9 + [1])
	$9 = [2]
	goto $label$105 
	
.LABEL $label$111
	$6 = (($9 + [16]) & [-16])
	$11 = CALL $348($6)
	*($14) = $11
	*($16 + [32]) = ($6 | [1])
	*($16 + [36]) = $9
	
.LABEL $label$110
	CALL memcpy($11, [2800], $9)
	
.LABEL $label$109
	*(($11 + $9)) = [0]
	CALL $357(($16 + [32]), *((( *($8) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $356(($16 + [32]), [2784])
	CALL prints([176])
	CALL prints(( *($14) ? $5 : (*($16 + [32]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($14) ? $5 : (*($16 + [32]) & [1]) ))
	if ( ((*($16 + [32]) & [1]) == 0) ){ goto $label$122 }
	CALL $349(*($14))
	
.LABEL $label$122
	$9 = [3]
	goto $label$104 
	
.LABEL $label$108
	*($2) = ($9 + [1])
	goto $label$106 
	
.LABEL $label$107
	*($11) = [0]
	*($16 + [48]) = (int_64)0
	$9 = CALL strlen([2848])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$125 }
	*($16 + [48]) = ($9 << [1])
	$14 = $4
	if ( $9 ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	$6 = (($9 + [16]) & [-16])
	$14 = CALL $348($6)
	*($11) = $14
	*($16 + [48]) = ($6 | [1])
	*($16 + [52]) = $9
	
.LABEL $label$124
	CALL memcpy($14, [2848], $9)
	
.LABEL $label$123
	*(($14 + $9)) = [0]
	CALL $357(($16 + [48]), *((( *($8) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $356(($16 + [48]), [2784])
	CALL prints([176])
	CALL prints(( *($11) ? $4 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($11) ? $4 : (*($16 + [48]) & [1]) ))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$106 }
	CALL $349(*($11))
	
.LABEL $label$106
	$9 = [3]
	
.LABEL $label$105
	CALL $112(($16 + [32]))
	
.LABEL $label$104
	CALL $112(($16 + [64]))
	if ( ((int_32)$9 != (int_32)[3]) ){ goto $label$101 }
	
.LABEL $label$14
	$2 = ($16 + [88])
	$1 = *($2)
	*($2) = [0]
	$13 = *($16 + [80])
	*($16 + [64]) = $13
	*($16 + [80]) = [0]
	CALL $112(($16 + [80]))
	*($0 + [8]) = $1
	*($0) = $13
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	goto $label$3 
	
.LABEL $label$13
	CALL $350(($16 + [32]))
	
.LABEL $label$12
	CALL $350(($16 + [48]))
	
.LABEL $label$11
	*($2) = (*($2) + [4])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	
.LABEL $label$10
	CALL $112(($16 + [80]))
	*($0 + [8]) = $2
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $112(($16 + [32]))
	goto $label$3 
	
.LABEL $label$9
	$11 = (($16 + [80]) + [8])
	$14 = [0]
	
.LOOP $label$126:
	CALL $123(($16 + [64]), $1, $2)
	if ( ((int_32)*($11) != (int_32)[2]) ){ goto $label$128 }
	$8 = *($16 + [80])
	goto $label$127 
	
.LABEL $label$128
	CALL $111(($16 + [80]))
	*(($8 = CALL $348([24]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16 align=4]) = (int_64)0
	*($11) = [2]
	*($16 + [80]) = $8
	
.LABEL $label$127
	if ( ((uint_32)*($8 + [20]) > (uint_32)$14) ){ goto $label$129 }
	CALL $124($8, ($14 + [1]))
	$8 = *($16 + [80])
	
.LABEL $label$129
	$8 = (*($8 + [16]) + $14)
	$8 = (*((*($8 + [4]) + (uint_32($8 >> [6]) & [67108860]))) + (($8 & [255]) << [4]))
	CALL $111($8)
	*($8) = *($16 + [64])
	$9 = (($16 + [64]) + [8])
	*($8 + [8]) = *($9)
	*($9) = [0]
	*($16 + [64]) = [0]
	CALL $112(($16 + [64]))
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$130 }
	
.LOOP $label$131:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$131 }
	
.LABEL $label$130
	$8 = *($2)
	$9 = *((( *($9) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((int_32)$9 != (int_32)[44]) ){ goto $label$132 }
	*($2) = ($8 + [1])
	$14 = ($14 + [1])
	goto $label$126 
	
.LABEL $label$132
	if ( ((int_32)$9 != (int_32)[93]) ){ goto $label$133 }
	*($2) = ($8 + [1])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$8 
	
.LABEL $label$133
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$8 = CALL strlen([2736])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$136 }
	*($16 + [48]) = ($8 << [1])
	$14 = (($16 + [48]) | [1])
	$9 = $14
	if ( $8 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$14 = (($8 + [16]) & [-16])
	$9 = CALL $348($14)
	*($16 + [48]) = ($14 | [1])
	*($16 + [56]) = $9
	*($16 + [52]) = $8
	$14 = (($16 + [48]) | [1])
	
.LABEL $label$135
	CALL memcpy($9, [2736], $8)
	
.LABEL $label$134
	*(($9 + $8)) = [0]
	CALL $357(($16 + [48]), *((( *(($1 + [8])) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $356(($16 + [48]), [2784])
	CALL prints([176])
	CALL prints(( *($16 + [56]) ? $14 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $14 : (*($16 + [48]) & [1]) ))
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $111(($16 + [64]))
	*(($2 = CALL $348([24]))) = (int_64)0
	*($2 + [8 align=4]) = (int_64)0
	*($2 + [16 align=4]) = (int_64)0
	*($16 + [64]) = $2
	*($16 + [32]) = *($16 + [64])
	*($16 + [40]) = [2]
	*($16 + [64]) = [0]
	*($16 + [72]) = [0]
	CALL $112(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$137 }
	CALL $349(*((($16 + [48]) + [8])))
	
.LABEL $label$137
	$2 = *((($16 + [32]) + [8]))
	$13 = *($16 + [32])
	
.LABEL $label$8
	CALL $112(($16 + [80]))
	*($0 + [8]) = $2
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $112(($16 + [32]))
	goto $label$3 
	
.LABEL $label$7
	CALL $350(($16 + [48]))
	
.LABEL $label$6
	$15 = (CASTING float_64)(int_32 CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($16 + [16]), [0], [10]))
	
.LABEL $label$5
	*($2) = (*($2) + [-1])
	if ( (($5 & [1]) == 0) ){ goto $label$139 }
	$2 = [4]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[4]) ){ goto $label$140 }
	CALL $111(($16 + [80]))
	*($1) = [4]
	*($16 + [80]) = (int_64)0
	
.LABEL $label$140
	$13 = (int_64)0
	*($16 + [80]) = (int_64)0
	goto $label$138 
	
.LABEL $label$139
	$2 = *($16 + [16])
	$1 = *($16 + [20])
	$3 = CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($16 + [48]), [0], [10])
	if ( (( $1 ? uint_32($2 >> [1]) : ($2 & [1]) ) == 0) ){ goto $label$141 }
	$15 = ((float_64)(CASTING float_64)(int_32 $3) * (float_64)CALL pow((float_64)10, $15))
	$2 = [4]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[4]) ){ goto $label$142 }
	CALL $111(($16 + [80]))
	*($1) = [4]
	*($16 + [80]) = (int_64)0
	
.LABEL $label$142
	*($16 + [80]) = $15
	$13 = (CASTING int_64)(float_64 $15)
	goto $label$138 
	
.LABEL $label$141
	$2 = [5]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[5]) ){ goto $label$143 }
	CALL $111(($16 + [80]))
	*($1) = [5]
	*($16 + [80]) = [0]
	
.LABEL $label$143
	*($16 + [80]) = $3
	$13 = *($16 + [80])
	
.LABEL $label$138
	*($16 + [40]) = $2
	*(($16 + [88])) = [0]
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	
.LABEL $label$4
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$144 }
	CALL $349(*(($16 + [24])))
	
.LABEL $label$144
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$145 }
	CALL $349(*(($16 + [56])))
	
.LABEL $label$145
	CALL $112(($16 + [80]))
	*($0) = *($16 + [32])
	*($0 + [8]) = *($16 + [40])
	*($16 + [40]) = [0]
	*($16 + [32]) = [0]
	CALL $112(($16 + [32]))
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [96])
	$9
	$8
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN4json4JSON4LoadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	*($2 + [28]) = [0]
	CALL $123(($2 + [8]), $1, ($2 + [28]))
	*($0) = *($2 + [8])
	*($0 + [8]) = *($2 + [16])
	*($2 + [16]) = [0]
	*($2 + [8]) = [0]
	CALL $112(($2 + [8]))
	*([0] + [4]) = ($2 + [32])
}

void .FUNC $288 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $290($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $289($0, *($1))
	CALL $289($0, *($1 + [4]))
	CALL $349($1)
	
.LABEL $label$1
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _ZN10msContract6onCallEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = *($0 + [40])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [3776]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$7) ){ goto $label$7 }
	CALL prints([176])
	CALL prints([3792])
	CALL prints([256])
	$9 = *(($0 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [3776]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$13 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$1 = ($1 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$9 != (int_64)$7), [3792])
	$9 = *(($0 + [40]))
	
.LABEL $label$7
	$2 = ($0 + [52])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$14 }
	$1 = $2
	
.LOOP $label$16:
	if ( ((uint_64)*($4 + [16]) >= (uint_64)$9) ){ goto $label$17 }
	$4 = *($4 + [4])
	if ( $4 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = $4
	$3 = *($4)
	$4 = $3
	if ( $3 ){ goto $label$16 }
	
.LABEL $label$15
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$14 }
	if ( (uint_64)($9 <= *($1 + [16])) ){ goto $label$14 }
	*($10 + [8]) = *($1 + [24])
	*($10 + [12]) = *($1 + [28])
	*($10) = *($10 + [8])
	CALL $184($0, $10)
	
.LABEL $label$14
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($1 + [8])
	*($2) = ((int_32)$3 == (int_32)[3])
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$3 }
	CALL $121($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$2 
	
.LABEL $label$3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL strlen([128])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*($0) = ($1 << [1])
	$2 = ($0 + [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $348($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $2
	*($0 + [4]) = $1
	
.LABEL $label$5
	CALL memcpy($2, [128], $1)
	
.LABEL $label$4
	*(($2 + $1)) = [0]
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $350($0)
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$2 = *($0 + [20])
	if ( ((uint_32)$2 >= (uint_32)$1) ){ goto $label$2 }
	$9 = [0]
	$7 = $2
	$8 = *($0 + [16])
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	$8 = ($5 - $6)
	$4 = (( (($8 << [6]) + [-1]) ? [0] : $8 ) - ($2 + $8))
	$3 = ($1 - $2)
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$3 }
	CALL $131($0, ($3 - $4))
	$5 = *(($0 + [8]))
	$6 = *(($0 + [4]))
	$8 = *(($0 + [16]))
	$7 = *(($0 + [20]))
	
.LABEL $label$3
	$4 = ($7 + $8)
	$8 = ($6 + (uint_32($4 >> [6]) & [67108860]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	$9 = (*($8) + (($4 & [255]) << [4]))
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($2 - $1)
	
.LOOP $label$5:
	*($9 + [8]) = [0]
	*($9) = [0]
	$9 = ($9 + [16])
	if ( ((int_32)($9 - *($8)) != (int_32)[4096]) ){ goto $label$6 }
	$9 = *($8 + [4])
	$8 = ($8 + [4])
	
.LABEL $label$6
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$5 }
	*(($0 + [20])) = ($7 + $3)
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$1 }
	$2 = *($0 + [16])
	$8 = *($0 + [4])
	$9 = ($8 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($0 + [8]) == (int_32)$8) ){ goto $label$9 }
	$8 = (*($9) + (($2 & [255]) << [4]))
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$8 = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = (int_32(($8 - *($9)) >> [4]) + $1)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$10 }
	$9 = ($9 + (uint_32($8 >> [6]) & [67108860]))
	$8 = (*($9) + (($8 & [255]) << [4]))
	goto $label$7 
	
.LABEL $label$10
	$8 = ([255] - $8)
	$9 = ($9 + (((int_32)$8 / (int_32)[-256]) << [2]))
	$8 = (*($9) + (([255] - ((int_32)$8 % (int_32)[256])) << [4]))
	
.LABEL $label$7
	*($10 + [12]) = $8
	*($10 + [8]) = $9
	*($10) = *($10 + [8])
	CALL $138($0, $10)
	
.LABEL $label$1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN10msContract9loadParamERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL prints([3616])
	CALL prints([3632])
	*($8 + [40]) = *($1 + [24])
	CALL $92(($8 + [64]), ($8 + [40]))
	$3 = *($8 + [72])
	$4 = *($8 + [64])
	*($8 + [24]) = *($1 + [32])
	CALL $92(($8 + [40]), ($8 + [24]))
	$5 = *($8 + [48])
	$6 = *($8 + [40])
	*($8 + [56]) = *($1 + [40])
	CALL $92(($8 + [24]), ($8 + [56]))
	$1 = *($8 + [32])
	$7 = *($8 + [24])
	CALL prints([3664])
	CALL prints(( $3 ? (($8 + [64]) | [1]) : ($4 & [1]) ))
	CALL prints([3680])
	CALL prints(( $5 ? (($8 + [40]) | [1]) : ($6 & [1]) ))
	CALL prints([3696])
	CALL prints(( $1 ? (($8 + [24]) | [1]) : ($7 & [1]) ))
	CALL prints([512])
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$1 }
	CALL $349(*(($8 + [32])))
	
.LABEL $label$1
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*(($8 + [48])))
	
.LABEL $label$2
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$3 }
	CALL $349(*(($8 + [72])))
	
.LABEL $label$3
	CALL prints([3712])
	CALL prints([3760])
	*($8 + [40]) = [0]
	CALL $123(($8 + [64]), $2, ($8 + [40]))
	*($0) = *($8 + [64])
	*($0 + [8]) = *($8 + [72])
	*($8 + [72]) = [0]
	*($8 + [64]) = [0]
	CALL $112(($8 + [64]))
	*(($8 + [16])) = [0]
	*($8 + [8]) = (int_64)0
	$1 = CALL strlen([480])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($8 + [8]) = ($1 << [1])
	$2 = (($8 + [8]) | [1])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $348($3)
	*($8 + [8]) = ($3 | [1])
	*($8 + [16]) = $2
	*($8 + [12]) = $1
	
.LABEL $label$6
	CALL memcpy($2, [480], $1)
	
.LABEL $label$5
	*(($2 + $1)) = [0]
	CALL $117(($8 + [64]), $0, [1], ($8 + [8]))
	CALL prints(( *($8 + [72]) ? (($8 + [64]) | [1]) : (*($8 + [64]) & [1]) ))
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$8 }
	CALL $349(*(($8 + [72])))
	
.LABEL $label$8
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $349(*($8 + [16]))
	
.LABEL $label$9
	CALL prints([3712])
	*([0] + [4]) = ($8 + [80])
	return (unreachable)
	
.LABEL $label$4
	CALL $350(($8 + [8]))
}

void .FUNC _ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [192])
	*([0] + [4]) = $9
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([3824])
	CALL prints([256])
	CALL eosio_assert([0], [3824])
	
.LABEL $label$1
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$2) ){ goto $label$3 }
	$6 = *(*($0))
	*((($9 + [168]) + [20])) = *(($3 + [20]))
	*(($7 = (($9 + [168]) + [16]))) = *(($3 + [16]))
	*((($9 + [168]) + [12])) = *(($3 + [12]))
	*(($8 = (($9 + [168]) + [8]))) = *(($3 + [8]))
	*($9 + [172]) = *(($3 + [4]))
	*($9 + [168]) = *($3)
	CALL $378(($9 + [152]), $4)
	*(($9 + [16])) = *($7)
	*(($9 + [8])) = *($8)
	*($9) = *($9 + [168])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 $9), (int_32 ($9 + [152])), (int_32 $6))
	if ( ((*($9 + [152]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*($9 + [160]))
	goto $label$2 
	
.LABEL $label$3
	$6 = *($0)
	if ( ((int_64)$5 != (int_64)$1) ){ goto $label$4 }
	$6 = *($6 + [4])
	*(($7 = (($9 + [128]) + [16]))) = *(($3 + [16]))
	*(($8 = (($9 + [128]) + [8]))) = *(($3 + [8]))
	*($9 + [128]) = *($3)
	CALL $378(($9 + [112]), $4)
	*((($9 + [24]) + [16])) = *($7)
	*((($9 + [24]) + [8])) = *($8)
	*($9 + [24]) = *($9 + [128])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 ($9 + [24])), (int_32 ($9 + [112])), (int_32 $6))
	if ( ((*($9 + [112]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*($9 + [120]))
	goto $label$2 
	
.LABEL $label$4
	$6 = *($6 + [8])
	*(($7 = (($9 + [88]) + [16]))) = *(($3 + [16]))
	*(($8 = (($9 + [88]) + [8]))) = *(($3 + [8]))
	*($9 + [88]) = *($3)
	CALL $378(($9 + [72]), $4)
	*((($9 + [48]) + [16])) = *($7)
	*((($9 + [48]) + [8])) = *($8)
	*($9 + [48]) = *($9 + [88])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 ($9 + [48])), (int_32 ($9 + [72])), (int_32 $6))
	if ( ((*($9 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*($9 + [80]))
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [192])
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC _ZN10msContract25createNewContractInstanceEyyy (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	*(($3 = CALL $348([64])) + [16]) = $0
	*($3 + [8]) = $0
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	*($3 + [40]) = $2
	$0 = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	$10 = ($3 + [52])
	*($3 + [48]) = $10
	*($3) = [20]
	$1 = (int_64)59
	$7 = [3840]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$0 > (uint_64)(int_64)3) ){ goto $label$6 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$1 }
	*(($7 = CALL $348([32])) + [24]) = [0]
	*($7 + [16]) = $8
	*($7 + [28]) = [0]
	$0 = (int_64)0
	*($7) = (int_64)0
	*($7 + [8]) = $10
	*(($3 + [52])) = $7
	$4 = ($3 + [48])
	$9 = *(*($4))
	if ( ($9 == 0) ){ goto $label$7 }
	*($4) = $9
	
.LABEL $label$7
	CALL $127($7, $7)
	*($7 + [24]) = [1]
	*($7 + [28]) = [0]
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	$1 = (int_64)59
	$7 = [3856]
	$8 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$0 > (uint_64)(int_64)3) ){ goto $label$13 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$4 = ($4 + [165])
	goto $label$11 
	
.LABEL $label$13
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$9
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$8 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$18 }
	$4 = $10
	
.LOOP $label$19:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$21 }
	$9 = *($7)
	if ( $9 ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$21
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$16 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$16 }
	$7 = $4
	
.LABEL $label$20
	$4 = $7
	$7 = $9
	goto $label$19 
	
.LABEL $label$18
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$17
	$4 = $7
	
.LABEL $label$16
	$9 = *($4)
	if ( $9 ){ goto $label$14 }
	
.LABEL $label$15
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$22 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$22
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$14
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [2]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3872]
	$8 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$0 > (uint_64)(int_64)3) ){ goto $label$28 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$4 = ($4 + [165])
	goto $label$26 
	
.LABEL $label$28
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$24
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$23 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$33 }
	$4 = $10
	
.LOOP $label$34:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$36 }
	$9 = *($7)
	if ( $9 ){ goto $label$35 }
	goto $label$32 
	
.LABEL $label$36
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$31 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$31 }
	$7 = $4
	
.LABEL $label$35
	$4 = $7
	$7 = $9
	goto $label$34 
	
.LABEL $label$33
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	$4 = $7
	
.LABEL $label$31
	$9 = *($4)
	if ( $9 ){ goto $label$29 }
	
.LABEL $label$30
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$37 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$37
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$29
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [3]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3888]
	$8 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$0 > (uint_64)(int_64)4) ){ goto $label$43 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$4 = ($4 + [165])
	goto $label$41 
	
.LABEL $label$43
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$39
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$38 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$48 }
	$4 = $10
	
.LOOP $label$49:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$51 }
	$9 = *($7)
	if ( $9 ){ goto $label$50 }
	goto $label$47 
	
.LABEL $label$51
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$46 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$46 }
	$7 = $4
	
.LABEL $label$50
	$4 = $7
	$7 = $9
	goto $label$49 
	
.LABEL $label$48
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$47
	$4 = $7
	
.LABEL $label$46
	$9 = *($4)
	if ( $9 ){ goto $label$44 }
	
.LABEL $label$45
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$52 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$52
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$44
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [4]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3904]
	$8 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$0 > (uint_64)(int_64)4) ){ goto $label$58 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$4 = ($4 + [165])
	goto $label$56 
	
.LABEL $label$58
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$54
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$53 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$63 }
	$4 = $10
	
.LOOP $label$64:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$66 }
	$9 = *($7)
	if ( $9 ){ goto $label$65 }
	goto $label$62 
	
.LABEL $label$66
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$61 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$61 }
	$7 = $4
	
.LABEL $label$65
	$4 = $7
	$7 = $9
	goto $label$64 
	
.LABEL $label$63
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$59 }
	goto $label$60 
	
.LABEL $label$62
	$4 = $7
	
.LABEL $label$61
	$9 = *($4)
	if ( $9 ){ goto $label$59 }
	
.LABEL $label$60
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$67 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$67
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$59
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [5]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3920]
	$8 = (int_64)0
	
.LOOP $label$68:
	if ( ((uint_64)$0 > (uint_64)(int_64)9) ){ goto $label$73 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$72 }
	$4 = ($4 + [165])
	goto $label$71 
	
.LABEL $label$73
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$72
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$71
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$70
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$69
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$68 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$78 }
	$4 = $10
	
.LOOP $label$79:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$81 }
	$9 = *($7)
	if ( $9 ){ goto $label$80 }
	goto $label$77 
	
.LABEL $label$81
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$76 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$76 }
	$7 = $4
	
.LABEL $label$80
	$4 = $7
	$7 = $9
	goto $label$79 
	
.LABEL $label$78
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$74 }
	goto $label$75 
	
.LABEL $label$77
	$4 = $7
	
.LABEL $label$76
	$9 = *($4)
	if ( $9 ){ goto $label$74 }
	
.LABEL $label$75
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$82 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$82
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$74
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [6]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3936]
	$8 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$0 > (uint_64)(int_64)10) ){ goto $label$88 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$4 = ($4 + [165])
	goto $label$86 
	
.LABEL $label$88
	$2 = (int_64)0
	if ( ((int_64)$0 == (int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$84
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)-5)
	$8 = ((int_64)$2 | (int_64)$8)
	$0 = ((int_64)$0 + (int_64)1)
	if ( ((int_64)$0 != (int_64)13) ){ goto $label$83 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$93 }
	$4 = $10
	
.LOOP $label$94:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$96 }
	$9 = *($7)
	if ( $9 ){ goto $label$95 }
	goto $label$92 
	
.LABEL $label$96
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$91 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$91 }
	$7 = $4
	
.LABEL $label$95
	$4 = $7
	$7 = $9
	goto $label$94 
	
.LABEL $label$93
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$89 }
	goto $label$90 
	
.LABEL $label$92
	$4 = $7
	
.LABEL $label$91
	$9 = *($4)
	if ( $9 ){ goto $label$89 }
	
.LABEL $label$90
	*(($9 = CALL $348([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$97 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$97
	CALL $127(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$89
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [7]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3952]
	$8 = (int_64)0
	
.LOOP $label$98:
	if ( ((uint_64)$0 > (uint_64)(int_64)10) ){ goto $label$103 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$4 = ($4 + [165])
	goto $label$101 
	
.LABEL $label$103
	$2 = (int_64)0
	if ( ((int_64)$0 == (int_64)11) ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$102
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$101
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$100
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$99
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)-5)
	$8 = ((int_64)$2 | (int_64)$8)
	$0 = ((int_64)$0 + (int_64)1)
	if ( ((int_64)$0 != (int_64)13) ){ goto $label$98 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$109 }
	$9 = $10
	
.LOOP $label$110:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$112 }
	$4 = *($7)
	if ( $4 ){ goto $label$111 }
	goto $label$108 
	
.LABEL $label$112
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$107 }
	$9 = ($7 + [4])
	$4 = *($7 + [4])
	if ( ($4 == 0) ){ goto $label$106 }
	$7 = $9
	
.LABEL $label$111
	$9 = $7
	$7 = $4
	goto $label$110 
	
.LABEL $label$109
	$7 = $10
	$4 = *($7)
	if ( $4 ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$108
	$10 = $7
	$4 = *($7)
	if ( $4 ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$107
	$10 = $7
	$7 = $9
	$4 = *($7)
	if ( $4 ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$106
	$10 = $7
	$7 = $9
	$4 = *($7)
	if ( $4 ){ goto $label$104 }
	
.LABEL $label$105
	*(($4 = CALL $348([32])) + [24]) = [0]
	*($4 + [28]) = [0]
	*($4) = (int_64)0
	*($4 + [8]) = $10
	*($7) = $4
	*($4 + [16]) = $8
	$9 = $4
	$10 = ($3 + [48])
	$6 = *(*($10))
	if ( ($6 == 0) ){ goto $label$113 }
	*($10) = $6
	$9 = *($7)
	
.LABEL $label$113
	CALL $127(*(($3 + [52])), $9)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$104
	*(($4 + [28])) = [0]
	*(($4 + [24])) = [8]
	return $3
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	$3 = CALL _ZN10msContract25createNewContractInstanceEyyy($0, $1, $2)
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$2 }
	$0 = (int_64)0
	$6 = (int_64)59
	$5 = [160]
	$7 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$0 > (uint_64)(int_64)10) ){ goto $label$8 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$8
	$8 = (int_64)0
	if ( ((int_64)$0 == (int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$0 = ((int_64)$0 + (int_64)1)
	if ( ((int_64)$0 != (int_64)13) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$11 }
	CALL $188(($9 + [64]))
	$8 = *($9 + [64])
	*($9 + [40]) = (int_64)0
	$6 = *($9 + [72])
	*($9 + [48]) = (int_64)1398362884
	$7 = *((($9 + [64]) + [24]))
	$2 = *($9 + [80])
	CALL eosio_assert([1], [1920])
	$0 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $0) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZN10msContract6onCallEv($3)
	goto $label$1 
	
.LABEL $label$10
	$4 = [0]
	
.LABEL $label$9
	CALL eosio_assert($4, [896])
	*(($5 = (($9 + [40]) + [8]))) = $7
	*($9 + [40]) = $2
	*($9 + [56]) = $1
	$4 = ($9 + [96])
	CALL $378(($9 + [24]), $4)
	*(($9 + [16])) = *($9 + [56])
	*(($9 + [8])) = *($5)
	*($9) = *($9 + [40])
	CALL _ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($3, $8, $6, $9, ($9 + [24]))
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$15 }
	CALL $349(*($9 + [32]))
	
.LABEL $label$15
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $349(*(($9 + [104])))
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [112])
}

void .FUNC $358 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $348($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $349($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $359 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $360($0, $1, $2, CALL $424($2))
}

int_32 .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $352($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $355 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $352($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $356 (int_32 $0, int_32 $1)
{
	return CALL $355($0, $1, CALL $424($1))
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $358($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $350 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $352($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $352 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $348($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $349($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $348(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $349($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $21 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494432, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $20($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494432, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494432, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $20($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $25 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494416, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $23($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $24 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494416, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $23($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494416, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494400, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $26($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494400, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$9 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($9 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($9 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($9)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $9)
	*($10 + [4]) = $7
	*($10) = $7
	$6 = ($7 + $9)
	*($10 + [8]) = $6
	if ( ((uint_32)$9 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$6 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([48])) + [32]) = [0]
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [36]) = $0
	CALL eosio_assert(((uint_32)($6 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$9 = ($7 + [8])
	CALL eosio_assert(((uint_32)($6 - $9) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $9, [8])
	$9 = ($7 + [16])
	CALL eosio_assert(((uint_32)($6 - $9) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $9, [8])
	*($10 + [4]) = ($7 + [24])
	CALL $101($10, ($3 + [24]))
	*($3 + [40]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [32])))
	
.LABEL $label$19
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

void .FUNC $328 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $330($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN7eosdice5checkEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	float_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_64 $31
	int_64 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	$40 = (*([0] + [4]) - [9120])
	*([0] + [4]) = $40
	CALL require_auth(*($0 + [16]))
	$34 = *($0 + [16])
	*($40 + [9088]) = $34
	*($40 + [9096]) = $34
	*(($39 = CALL $348([40])) + [8]) = $34
	*($39) = $34
	*($39 + [16]) = (int_64)-1
	$32 = (int_64)0
	*($39 + [24 align=4]) = (int_64)0
	*($39 + [32]) = [0]
	*($40 + [9104]) = $39
	$35 = (int_64)0
	$37 = CALL db_lowerbound_i64($34, $34, (int_64)-3903047771713307648, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1 }
	$37 = CALL $215($39, $37)
	CALL eosio_assert([1], [656])
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8848]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2 }
	$35 = (int_64)1
	
.LOOP $label$3:
	$37 = CALL $215($39, $37)
	CALL eosio_assert([1], [656])
	$35 = ((int_64)$35 + (int_64)1)
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8848]))
	if ( ((int_32)$37 >= (int_32)[0]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$35 = (int_64)1
	
.LABEL $label$1
	$1 = ($0 + [16])
	$35 = ((int_64)$35 + (int_64)1)
	$34 = (int_64)59
	$37 = [352]
	$2 = (int_64)0
	
.LOOP $label$4:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$5 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$39 = ($39 + [165])
	goto $label$6 
	
.LABEL $label$7
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$5
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$2 = ((int_64)$31 | (int_64)$2)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$4 }
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [352]
	$33 = (int_64)0
	
.LOOP $label$8:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$9 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$39 = ($39 + [165])
	goto $label$10 
	
.LABEL $label$11
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$9
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$8 }
	*(($3 = CALL $348([40])) + [8]) = $33
	*($3) = $2
	*($3 + [16]) = (int_64)-1
	$32 = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$4 = ($3 + [24])
	$34 = (int_64)59
	$37 = [352]
	$33 = (int_64)0
	
.LOOP $label$12:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$13 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$39 = ($39 + [165])
	goto $label$14 
	
.LABEL $label$15
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$13
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$12 }
	*(($40 + [9020])) = (int_64)0
	*($40 + [8984]) = (int_64)0
	*($40 + [8976]) = (int_64)0
	*($40 + [8992]) = (int_64)0
	*($40 + [9000]) = (int_64)0
	*($40 + [9008]) = (int_64)0
	*($40 + [9016]) = [0]
	$38 = ($40 + [9016])
	$37 = CALL strlen([128])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$28 }
	*(($40 + [9016])) = ($37 << [1])
	$39 = ($38 + [1])
	if ( $37 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$30 = (($37 + [16]) & [-16])
	$39 = CALL $348($30)
	*(($40 + [9016])) = ($30 | [1])
	*(($40 + [9024])) = $39
	*(($40 + [9020])) = $37
	
.LABEL $label$27
	CALL memcpy($39, [128], $37)
	
.LABEL $label$26
	*(($39 + $37)) = [0]
	CALL $216(($40 + [8848]), $3, $33)
	if ( (*($40 + [8852]) == 0) ){ goto $label$30 }
	CALL $216(($40 + [8848]), $3, $33)
	$37 = *($40 + [8852])
	if ( $37 ){ goto $label$31 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$31
	CALL memcpy(($40 + [9032]), $37, [40])
	CALL $378((($40 + [9032]) + [40]), ($37 + [40]))
	if ( ((*((($40 + [8976]) + [40])) & [1]) == 0) ){ goto $label$29 }
	CALL $349(*(($40 + [9024])))
	goto $label$29 
	
.LABEL $label$30
	CALL memcpy(($40 + [9032]), ($40 + [8976]), [40])
	*((($40 + [9032]) + [48])) = *(($38 + [8]))
	$32 = *($38)
	*(($40 + [9020])) = [0]
	*($40 + [9072]) = $32
	*((($40 + [8976]) + [40])) = [0]
	*((($40 + [8976]) + [48])) = [0]
	
.LABEL $label$29
	if ( ((int_64)*($40 + [9032]) == (int_64)1) ){ goto $label$32 }
	CALL prints([176])
	CALL prints([3968])
	CALL prints([256])
	CALL eosio_assert(((int_64)*($40 + [9032]) == (int_64)1), [3968])
	
.LABEL $label$32
	CALL $217(($40 + [8952]))
	if ( (uint_64)(((int_64)*($40 + [8952]) + (int_64)-1) <= (int_64)6) ){ goto $label$33 }
	CALL prints([176])
	CALL prints([4000])
	CALL prints([256])
	CALL eosio_assert((uint_64)(((int_64)*($40 + [8952]) + (int_64)-1) <= (int_64)6), [4000])
	
.LABEL $label$33
	if ( (uint_64)(((int_64)*($40 + [8960]) + (int_64)-1) <= (int_64)6) ){ goto $label$34 }
	CALL prints([176])
	CALL prints([4000])
	CALL prints([256])
	CALL eosio_assert((uint_64)(((int_64)*(($40 + [8960])) + (int_64)-1) <= (int_64)6), [4000])
	
.LABEL $label$34
	if ( (uint_64)(((int_64)*($40 + [8968]) + (int_64)-1) <= (int_64)6) ){ goto $label$35 }
	CALL prints([176])
	CALL prints([4000])
	CALL prints([256])
	CALL eosio_assert((uint_64)(((int_64)*(($40 + [8968])) + (int_64)-1) <= (int_64)6), [4000])
	
.LABEL $label$35
	CALL memset(($40 + [8848]), [0], [100])
	*(($40 + [1896])) = *((($40 + [8952]) + [16]))
	*((($40 + [1872]) + [16])) = *(($40 + [8960]))
	$32 = *($40 + [9040])
	*($40 + [1880]) = *($40 + [8952])
	*($40 + [1872]) = $32
	CALL sprintf(($40 + [8848]), [4032], ($40 + [1872]))
	$5 = ($40 + [9072])
	CALL $354($5, ($40 + [8848]))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$41 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$39 = ($39 + [165])
	goto $label$39 
	
.LABEL $label$41
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$37
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$36 }
	*($40 + [8832]) = (int_64)1398362884
	*($40 + [8824]) = (int_64)0
	CALL eosio_assert([1], [1920])
	$32 = (uint_64)*($40 + [8832]) >> (uint_64)(int_64)8)
	$37 = [0]
	
.LOOP $label$44:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $32) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	
.LOOP $label$46:
	$32 = (uint_64)$32 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$32) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	$37 = ($37 + [1])
	if ( ((int_32)$37 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	$39 = [1]
	$37 = ($37 + [1])
	if ( ((int_32)$37 < (int_32)[7]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$43
	$39 = [0]
	
.LABEL $label$42
	CALL eosio_assert($39, [896])
	*((($40 + [8824]) + [8])) = (int_64)1397703940
	*($40 + [8824]) = (int_64)0
	*($40 + [8840]) = $33
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4064])
	CALL printui(*($40 + [8952]))
	CALL prints([2416])
	$16 = (($40 + [8952]) + [8])
	CALL printui(*($16))
	CALL prints([2416])
	$17 = ($40 + [8968])
	CALL printui(*($17))
	CALL prints([80])
	$32 = *($40 + [8952])
	if ( ((int_64)$32 != (int_64)*($16)) ){ goto $label$172 }
	if ( ((int_64)$32 != (int_64)*($17)) ){ goto $label$172 }
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1248]
	$33 = (int_64)0
	
.LOOP $label$173:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$174 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$176 }
	$39 = ($39 + [165])
	goto $label$175 
	
.LABEL $label$176
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$175
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$174
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$173 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494384, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$177 }
	$36 = CALL $218($9, $37)
	$7 = (($40 + [8568]) | [1])
	$6 = ($40 + [8681])
	$12 = ($40 + [8680])
	$25 = ($40 + [8669])
	$13 = (($40 + [8696]) | [1])
	$11 = (($40 + [8736]) | [1])
	$21 = (($40 + [8632]) + [24])
	$10 = ($40 + [8668])
	$22 = ($10 + [4])
	$23 = (($40 + [8632]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [8676])
	$27 = ($40 + [8688])
	$18 = ($40 + [8684])
	
.LOOP $label$178:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)30))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$179:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$184 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$183 }
	$39 = ($39 + [165])
	goto $label$182 
	
.LABEL $label$184
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$181 }
	goto $label$180 
	
.LABEL $label$183
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$182
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$181
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$180
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$179 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$185:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$186 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$188 }
	$39 = ($39 + [165])
	goto $label$187 
	
.LABEL $label$188
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$187
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$186
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$185 }
	*(($20 = (($40 + [8752]) + [8]))) = *($28)
	*(($28 = (($40 + [8752]) + [16]))) = *($30)
	*(($30 = (($40 + [8736]) + [8]))) = [0]
	*($40 + [8752]) = *($40 + [8776])
	*($40 + [8736]) = (int_64)0
	$37 = CALL strlen([4096])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$171 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$191 }
	*($40 + [8736]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$190 }
	goto $label$189 
	
.LABEL $label$191
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [8736]) = ($26 | [1])
	*($40 + [8740]) = $37
	
.LABEL $label$190
	CALL memcpy($39, [4096], $37)
	
.LABEL $label$189
	*(($39 + $37)) = [0]
	*((($40 + [1848]) + [16])) = *($28)
	*((($40 + [1848]) + [8])) = *($20)
	*($40 + [1848]) = *($40 + [8752])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1848]), ($40 + [8736]))
	if ( ((*($40 + [8736]) & [1]) == 0) ){ goto $label$192 }
	CALL $349(*($30))
	
.LABEL $label$192
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [8712]) + [8]))) = *($15)
	*(($28 = (($40 + [8712]) + [16]))) = *($38)
	*(($20 = (($40 + [8696]) + [8]))) = [0]
	*($40 + [8712]) = *($40 + [8824])
	*($40 + [8696]) = (int_64)0
	$37 = CALL strlen([4144])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$170 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$195 }
	*($40 + [8696]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$194 }
	goto $label$193 
	
.LABEL $label$195
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [8696]) = ($26 | [1])
	*($40 + [8700]) = $37
	
.LABEL $label$194
	CALL memcpy($39, [4144], $37)
	
.LABEL $label$193
	*(($39 + $37)) = [0]
	*((($40 + [1824]) + [16])) = *($28)
	*((($40 + [1824]) + [8])) = *($30)
	*($40 + [1824]) = *($40 + [8712])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1824]), ($40 + [8696]))
	if ( ((*($40 + [8696]) & [1]) == 0) ){ goto $label$196 }
	CALL $349(*($20))
	
.LABEL $label$196
	*((($40 + [8632]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [8632]) + [16])) = *($30)
	*($40 + [8632]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1232])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$169 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$199 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$199
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [8632]) + [40])) = $37
	
.LABEL $label$198
	CALL memcpy($39, [1232], $37)
	
.LABEL $label$197
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$168 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$202 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$201 }
	goto $label$200 
	
.LABEL $label$202
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$201
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$200
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [8632]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$203 }
	CALL $349(*($27))
	
.LABEL $label$203
	if ( ((*($10) & [1]) == 0) ){ goto $label$204 }
	CALL $349(*($24))
	
.LABEL $label$204
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [8584]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [8584]) + [16]))) = *($37)
	*(($15 = (($40 + [8568]) + [8]))) = [0]
	*($40 + [8584]) = *($40 + [8608])
	*($40 + [8568]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$167 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$207 }
	*($40 + [8568]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$206 }
	goto $label$205 
	
.LABEL $label$207
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [8568]) = ($36 | [1])
	*($40 + [8572]) = $37
	
.LABEL $label$206
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$205
	*(($39 + $37)) = [0]
	*((($40 + [1800]) + [16])) = *($30)
	*((($40 + [1800]) + [8])) = *($38)
	*($40 + [1800]) = *($40 + [8584])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1800]), ($40 + [8568]))
	if ( ((*($40 + [8568]) & [1]) == 0) ){ goto $label$208 }
	CALL $349(*($15))
	
.LABEL $label$208
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$209 }
	$36 = CALL $218($9, $37)
	
.LABEL $label$209
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$210 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$211:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$210 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$211 }
	
.LABEL $label$210
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$214 }
	$15 = ($39 + [-24])
	
.LOOP $label$215:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$216 }
	CALL $349($38)
	
.LABEL $label$216
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$215 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$213 }
	goto $label$212 
	
.LABEL $label$214
	$39 = $37
	
.LABEL $label$213
	
.LOOP $label$217:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$218 }
	CALL $349($37)
	
.LABEL $label$218
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$217 }
	
.LABEL $label$212
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$178 }
	
.LABEL $label$177
	$32 = ((int_64)*($40 + [8952]) + (int_64)-1)
	if ( ((uint_64)$32 > (uint_64)(int_64)5) ){ goto $label$172 }
	goto $label$224 
	
.LABEL $label$224
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1280]
	$33 = (int_64)0
	
.LOOP $label$225:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$226 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$228 }
	$39 = ($39 + [165])
	goto $label$227 
	
.LABEL $label$228
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$227
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$226
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$225 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493936, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $220($9, $37)
	$7 = (($40 + [8384]) | [1])
	$6 = ($40 + [8473])
	$12 = ($40 + [8472])
	$25 = ($40 + [8461])
	$13 = (($40 + [8488]) | [1])
	$11 = (($40 + [8528]) | [1])
	$21 = (($40 + [8424]) + [24])
	$10 = ($40 + [8460])
	$22 = ($10 + [4])
	$23 = (($40 + [8424]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [8468])
	$27 = ($40 + [8480])
	$18 = ($40 + [8476])
	
.LOOP $label$229:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$230:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$235 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$234 }
	$39 = ($39 + [165])
	goto $label$233 
	
.LABEL $label$235
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$232 }
	goto $label$231 
	
.LABEL $label$234
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$233
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$232
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$231
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$230 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$236:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$237 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$239 }
	$39 = ($39 + [165])
	goto $label$238 
	
.LABEL $label$239
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$238
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$237
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$236 }
	*(($20 = (($40 + [8544]) + [8]))) = *($28)
	*(($28 = (($40 + [8544]) + [16]))) = *($30)
	*(($30 = (($40 + [8528]) + [8]))) = [0]
	*($40 + [8544]) = *($40 + [8776])
	*($40 + [8528]) = (int_64)0
	$37 = CALL strlen([4432])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$146 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$242 }
	*($40 + [8528]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$241 }
	goto $label$240 
	
.LABEL $label$242
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [8528]) = ($26 | [1])
	*($40 + [8532]) = $37
	
.LABEL $label$241
	CALL memcpy($39, [4432], $37)
	
.LABEL $label$240
	*(($39 + $37)) = [0]
	*((($40 + [1416]) + [16])) = *($28)
	*((($40 + [1416]) + [8])) = *($20)
	*($40 + [1416]) = *($40 + [8544])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1416]), ($40 + [8528]))
	if ( ((*($40 + [8528]) & [1]) == 0) ){ goto $label$243 }
	CALL $349(*($30))
	
.LABEL $label$243
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [8504]) + [8]))) = *($15)
	*(($28 = (($40 + [8504]) + [16]))) = *($38)
	*(($20 = (($40 + [8488]) + [8]))) = [0]
	*($40 + [8504]) = *($40 + [8824])
	*($40 + [8488]) = (int_64)0
	$37 = CALL strlen([4464])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$145 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$246 }
	*($40 + [8488]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$245 }
	goto $label$244 
	
.LABEL $label$246
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [8488]) = ($26 | [1])
	*($40 + [8492]) = $37
	
.LABEL $label$245
	CALL memcpy($39, [4464], $37)
	
.LABEL $label$244
	*(($39 + $37)) = [0]
	*((($40 + [1392]) + [16])) = *($28)
	*((($40 + [1392]) + [8])) = *($30)
	*($40 + [1392]) = *($40 + [8504])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1392]), ($40 + [8488]))
	if ( ((*($40 + [8488]) & [1]) == 0) ){ goto $label$247 }
	CALL $349(*($20))
	
.LABEL $label$247
	*((($40 + [8424]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [8424]) + [16])) = *($30)
	*($40 + [8424]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1264])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$144 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$250 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$249 }
	goto $label$248 
	
.LABEL $label$250
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [8424]) + [40])) = $37
	
.LABEL $label$249
	CALL memcpy($39, [1264], $37)
	
.LABEL $label$248
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$143 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$253 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$252 }
	goto $label$251 
	
.LABEL $label$253
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$252
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$251
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [8424]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$254 }
	CALL $349(*($27))
	
.LABEL $label$254
	if ( ((*($10) & [1]) == 0) ){ goto $label$255 }
	CALL $349(*($24))
	
.LABEL $label$255
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [8400]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [8400]) + [16]))) = *($37)
	*(($15 = (($40 + [8384]) + [8]))) = [0]
	*($40 + [8400]) = *($40 + [8608])
	*($40 + [8384]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$142 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$258 }
	*($40 + [8384]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$258
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [8384]) = ($36 | [1])
	*($40 + [8388]) = $37
	
.LABEL $label$257
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$256
	*(($39 + $37)) = [0]
	*((($40 + [1368]) + [16])) = *($30)
	*((($40 + [1368]) + [8])) = *($38)
	*($40 + [1368]) = *($40 + [8400])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1368]), ($40 + [8384]))
	if ( ((*($40 + [8384]) & [1]) == 0) ){ goto $label$259 }
	CALL $349(*($15))
	
.LABEL $label$259
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$260 }
	$36 = CALL $220($9, $37)
	
.LABEL $label$260
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$261 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$262:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$261 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$262 }
	
.LABEL $label$261
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$265 }
	$15 = ($39 + [-24])
	
.LOOP $label$266:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$267 }
	CALL $349($38)
	
.LABEL $label$267
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$266 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$265
	$39 = $37
	
.LABEL $label$264
	
.LOOP $label$268:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$269 }
	CALL $349($37)
	
.LABEL $label$269
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$268 }
	
.LABEL $label$263
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$229 }
	goto $label$172 
	
.LABEL $label$223
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1312]
	$33 = (int_64)0
	
.LOOP $label$270:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$271 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$273 }
	$39 = ($39 + [165])
	goto $label$272 
	
.LABEL $label$273
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$272
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$271
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$270 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493920, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $221($9, $37)
	$7 = (($40 + [8200]) | [1])
	$6 = ($40 + [8289])
	$12 = ($40 + [8288])
	$25 = ($40 + [8277])
	$13 = (($40 + [8304]) | [1])
	$11 = (($40 + [8344]) | [1])
	$21 = (($40 + [8240]) + [24])
	$10 = ($40 + [8276])
	$22 = ($10 + [4])
	$23 = (($40 + [8240]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [8284])
	$27 = ($40 + [8296])
	$18 = ($40 + [8292])
	
.LOOP $label$274:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$275:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$280 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$279 }
	$39 = ($39 + [165])
	goto $label$278 
	
.LABEL $label$280
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$277 }
	goto $label$276 
	
.LABEL $label$279
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$278
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$277
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$276
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$275 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$281:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$282 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$284 }
	$39 = ($39 + [165])
	goto $label$283 
	
.LABEL $label$284
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$283
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$282
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$281 }
	*(($20 = (($40 + [8360]) + [8]))) = *($28)
	*(($28 = (($40 + [8360]) + [16]))) = *($30)
	*(($30 = (($40 + [8344]) + [8]))) = [0]
	*($40 + [8360]) = *($40 + [8776])
	*($40 + [8344]) = (int_64)0
	$37 = CALL strlen([4496])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$141 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$287 }
	*($40 + [8344]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$286 }
	goto $label$285 
	
.LABEL $label$287
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [8344]) = ($26 | [1])
	*($40 + [8348]) = $37
	
.LABEL $label$286
	CALL memcpy($39, [4496], $37)
	
.LABEL $label$285
	*(($39 + $37)) = [0]
	*((($40 + [1488]) + [16])) = *($28)
	*((($40 + [1488]) + [8])) = *($20)
	*($40 + [1488]) = *($40 + [8360])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1488]), ($40 + [8344]))
	if ( ((*($40 + [8344]) & [1]) == 0) ){ goto $label$288 }
	CALL $349(*($30))
	
.LABEL $label$288
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [8320]) + [8]))) = *($15)
	*(($28 = (($40 + [8320]) + [16]))) = *($38)
	*(($20 = (($40 + [8304]) + [8]))) = [0]
	*($40 + [8320]) = *($40 + [8824])
	*($40 + [8304]) = (int_64)0
	$37 = CALL strlen([4528])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$140 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$291 }
	*($40 + [8304]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$290 }
	goto $label$289 
	
.LABEL $label$291
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [8304]) = ($26 | [1])
	*($40 + [8308]) = $37
	
.LABEL $label$290
	CALL memcpy($39, [4528], $37)
	
.LABEL $label$289
	*(($39 + $37)) = [0]
	*((($40 + [1464]) + [16])) = *($28)
	*((($40 + [1464]) + [8])) = *($30)
	*($40 + [1464]) = *($40 + [8320])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1464]), ($40 + [8304]))
	if ( ((*($40 + [8304]) & [1]) == 0) ){ goto $label$292 }
	CALL $349(*($20))
	
.LABEL $label$292
	*((($40 + [8240]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [8240]) + [16])) = *($30)
	*($40 + [8240]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1296])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$139 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$295 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$294 }
	goto $label$293 
	
.LABEL $label$295
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [8240]) + [40])) = $37
	
.LABEL $label$294
	CALL memcpy($39, [1296], $37)
	
.LABEL $label$293
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$138 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$298 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$297 }
	goto $label$296 
	
.LABEL $label$298
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$297
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$296
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [8240]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$299 }
	CALL $349(*($27))
	
.LABEL $label$299
	if ( ((*($10) & [1]) == 0) ){ goto $label$300 }
	CALL $349(*($24))
	
.LABEL $label$300
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [8216]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [8216]) + [16]))) = *($37)
	*(($15 = (($40 + [8200]) + [8]))) = [0]
	*($40 + [8216]) = *($40 + [8608])
	*($40 + [8200]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$137 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$303 }
	*($40 + [8200]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$302 }
	goto $label$301 
	
.LABEL $label$303
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [8200]) = ($36 | [1])
	*($40 + [8204]) = $37
	
.LABEL $label$302
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$301
	*(($39 + $37)) = [0]
	*((($40 + [1440]) + [16])) = *($30)
	*((($40 + [1440]) + [8])) = *($38)
	*($40 + [1440]) = *($40 + [8216])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1440]), ($40 + [8200]))
	if ( ((*($40 + [8200]) & [1]) == 0) ){ goto $label$304 }
	CALL $349(*($15))
	
.LABEL $label$304
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$305 }
	$36 = CALL $221($9, $37)
	
.LABEL $label$305
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$306 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$307:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$306 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$307 }
	
.LABEL $label$306
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$310 }
	$15 = ($39 + [-24])
	
.LOOP $label$311:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$312 }
	CALL $349($38)
	
.LABEL $label$312
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$311 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$309 }
	goto $label$308 
	
.LABEL $label$310
	$39 = $37
	
.LABEL $label$309
	
.LOOP $label$313:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$314 }
	CALL $349($37)
	
.LABEL $label$314
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$313 }
	
.LABEL $label$308
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$274 }
	goto $label$172 
	
.LABEL $label$222
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1344]
	$33 = (int_64)0
	
.LOOP $label$315:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$316 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$318 }
	$39 = ($39 + [165])
	goto $label$317 
	
.LABEL $label$318
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$317
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$316
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$315 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493904, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $222($9, $37)
	$7 = (($40 + [8016]) | [1])
	$6 = ($40 + [8105])
	$12 = ($40 + [8104])
	$25 = ($40 + [8093])
	$13 = (($40 + [8120]) | [1])
	$11 = (($40 + [8160]) | [1])
	$21 = (($40 + [8056]) + [24])
	$10 = ($40 + [8092])
	$22 = ($10 + [4])
	$23 = (($40 + [8056]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [8100])
	$27 = ($40 + [8112])
	$18 = ($40 + [8108])
	
.LOOP $label$319:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$320:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$325 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$324 }
	$39 = ($39 + [165])
	goto $label$323 
	
.LABEL $label$325
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$322 }
	goto $label$321 
	
.LABEL $label$324
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$323
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$322
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$321
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$320 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$326:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$327 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$329 }
	$39 = ($39 + [165])
	goto $label$328 
	
.LABEL $label$329
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$328
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$327
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$326 }
	*(($20 = (($40 + [8176]) + [8]))) = *($28)
	*(($28 = (($40 + [8176]) + [16]))) = *($30)
	*(($30 = (($40 + [8160]) + [8]))) = [0]
	*($40 + [8176]) = *($40 + [8776])
	*($40 + [8160]) = (int_64)0
	$37 = CALL strlen([4560])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$136 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$332 }
	*($40 + [8160]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$331 }
	goto $label$330 
	
.LABEL $label$332
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [8160]) = ($26 | [1])
	*($40 + [8164]) = $37
	
.LABEL $label$331
	CALL memcpy($39, [4560], $37)
	
.LABEL $label$330
	*(($39 + $37)) = [0]
	*((($40 + [1560]) + [16])) = *($28)
	*((($40 + [1560]) + [8])) = *($20)
	*($40 + [1560]) = *($40 + [8176])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1560]), ($40 + [8160]))
	if ( ((*($40 + [8160]) & [1]) == 0) ){ goto $label$333 }
	CALL $349(*($30))
	
.LABEL $label$333
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [8136]) + [8]))) = *($15)
	*(($28 = (($40 + [8136]) + [16]))) = *($38)
	*(($20 = (($40 + [8120]) + [8]))) = [0]
	*($40 + [8136]) = *($40 + [8824])
	*($40 + [8120]) = (int_64)0
	$37 = CALL strlen([4592])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$135 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$336 }
	*($40 + [8120]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$335 }
	goto $label$334 
	
.LABEL $label$336
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [8120]) = ($26 | [1])
	*($40 + [8124]) = $37
	
.LABEL $label$335
	CALL memcpy($39, [4592], $37)
	
.LABEL $label$334
	*(($39 + $37)) = [0]
	*((($40 + [1536]) + [16])) = *($28)
	*((($40 + [1536]) + [8])) = *($30)
	*($40 + [1536]) = *($40 + [8136])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1536]), ($40 + [8120]))
	if ( ((*($40 + [8120]) & [1]) == 0) ){ goto $label$337 }
	CALL $349(*($20))
	
.LABEL $label$337
	*((($40 + [8056]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [8056]) + [16])) = *($30)
	*($40 + [8056]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1328])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$134 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$340 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$339 }
	goto $label$338 
	
.LABEL $label$340
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [8056]) + [40])) = $37
	
.LABEL $label$339
	CALL memcpy($39, [1328], $37)
	
.LABEL $label$338
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$133 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$343 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$342 }
	goto $label$341 
	
.LABEL $label$343
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$342
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$341
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [8056]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$344 }
	CALL $349(*($27))
	
.LABEL $label$344
	if ( ((*($10) & [1]) == 0) ){ goto $label$345 }
	CALL $349(*($24))
	
.LABEL $label$345
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [8032]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [8032]) + [16]))) = *($37)
	*(($15 = (($40 + [8016]) + [8]))) = [0]
	*($40 + [8032]) = *($40 + [8608])
	*($40 + [8016]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$132 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$348 }
	*($40 + [8016]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$347 }
	goto $label$346 
	
.LABEL $label$348
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [8016]) = ($36 | [1])
	*($40 + [8020]) = $37
	
.LABEL $label$347
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$346
	*(($39 + $37)) = [0]
	*((($40 + [1512]) + [16])) = *($30)
	*((($40 + [1512]) + [8])) = *($38)
	*($40 + [1512]) = *($40 + [8032])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1512]), ($40 + [8016]))
	if ( ((*($40 + [8016]) & [1]) == 0) ){ goto $label$349 }
	CALL $349(*($15))
	
.LABEL $label$349
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$350 }
	$36 = CALL $222($9, $37)
	
.LABEL $label$350
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$351 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$352:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$351 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$352 }
	
.LABEL $label$351
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$355 }
	$15 = ($39 + [-24])
	
.LOOP $label$356:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$357 }
	CALL $349($38)
	
.LABEL $label$357
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$356 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$354 }
	goto $label$353 
	
.LABEL $label$355
	$39 = $37
	
.LABEL $label$354
	
.LOOP $label$358:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$359 }
	CALL $349($37)
	
.LABEL $label$359
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$358 }
	
.LABEL $label$353
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$319 }
	goto $label$172 
	
.LABEL $label$221
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1376]
	$33 = (int_64)0
	
.LOOP $label$360:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$361 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$363 }
	$39 = ($39 + [165])
	goto $label$362 
	
.LABEL $label$363
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$362
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$361
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$360 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493888, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $223($9, $37)
	$7 = (($40 + [7832]) | [1])
	$6 = ($40 + [7921])
	$12 = ($40 + [7920])
	$25 = ($40 + [7909])
	$13 = (($40 + [7936]) | [1])
	$11 = (($40 + [7976]) | [1])
	$21 = (($40 + [7872]) + [24])
	$10 = ($40 + [7908])
	$22 = ($10 + [4])
	$23 = (($40 + [7872]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [7916])
	$27 = ($40 + [7928])
	$18 = ($40 + [7924])
	
.LOOP $label$364:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$365:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$370 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$369 }
	$39 = ($39 + [165])
	goto $label$368 
	
.LABEL $label$370
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$367 }
	goto $label$366 
	
.LABEL $label$369
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$368
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$367
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$366
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$365 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$371:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$372 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$374 }
	$39 = ($39 + [165])
	goto $label$373 
	
.LABEL $label$374
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$373
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$372
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$371 }
	*(($20 = (($40 + [7992]) + [8]))) = *($28)
	*(($28 = (($40 + [7992]) + [16]))) = *($30)
	*(($30 = (($40 + [7976]) + [8]))) = [0]
	*($40 + [7992]) = *($40 + [8776])
	*($40 + [7976]) = (int_64)0
	$37 = CALL strlen([4624])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$131 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$377 }
	*($40 + [7976]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$376 }
	goto $label$375 
	
.LABEL $label$377
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7976]) = ($26 | [1])
	*($40 + [7980]) = $37
	
.LABEL $label$376
	CALL memcpy($39, [4624], $37)
	
.LABEL $label$375
	*(($39 + $37)) = [0]
	*((($40 + [1632]) + [16])) = *($28)
	*((($40 + [1632]) + [8])) = *($20)
	*($40 + [1632]) = *($40 + [7992])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1632]), ($40 + [7976]))
	if ( ((*($40 + [7976]) & [1]) == 0) ){ goto $label$378 }
	CALL $349(*($30))
	
.LABEL $label$378
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7952]) + [8]))) = *($15)
	*(($28 = (($40 + [7952]) + [16]))) = *($38)
	*(($20 = (($40 + [7936]) + [8]))) = [0]
	*($40 + [7952]) = *($40 + [8824])
	*($40 + [7936]) = (int_64)0
	$37 = CALL strlen([4656])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$130 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$381 }
	*($40 + [7936]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$380 }
	goto $label$379 
	
.LABEL $label$381
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7936]) = ($26 | [1])
	*($40 + [7940]) = $37
	
.LABEL $label$380
	CALL memcpy($39, [4656], $37)
	
.LABEL $label$379
	*(($39 + $37)) = [0]
	*((($40 + [1608]) + [16])) = *($28)
	*((($40 + [1608]) + [8])) = *($30)
	*($40 + [1608]) = *($40 + [7952])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1608]), ($40 + [7936]))
	if ( ((*($40 + [7936]) & [1]) == 0) ){ goto $label$382 }
	CALL $349(*($20))
	
.LABEL $label$382
	*((($40 + [7872]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [7872]) + [16])) = *($30)
	*($40 + [7872]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1360])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$129 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$385 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$384 }
	goto $label$383 
	
.LABEL $label$385
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [7872]) + [40])) = $37
	
.LABEL $label$384
	CALL memcpy($39, [1360], $37)
	
.LABEL $label$383
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$128 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$388 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$387 }
	goto $label$386 
	
.LABEL $label$388
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$387
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$386
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [7872]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$389 }
	CALL $349(*($27))
	
.LABEL $label$389
	if ( ((*($10) & [1]) == 0) ){ goto $label$390 }
	CALL $349(*($24))
	
.LABEL $label$390
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [7848]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [7848]) + [16]))) = *($37)
	*(($15 = (($40 + [7832]) + [8]))) = [0]
	*($40 + [7848]) = *($40 + [8608])
	*($40 + [7832]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$127 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$393 }
	*($40 + [7832]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$392 }
	goto $label$391 
	
.LABEL $label$393
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [7832]) = ($36 | [1])
	*($40 + [7836]) = $37
	
.LABEL $label$392
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$391
	*(($39 + $37)) = [0]
	*((($40 + [1584]) + [16])) = *($30)
	*((($40 + [1584]) + [8])) = *($38)
	*($40 + [1584]) = *($40 + [7848])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1584]), ($40 + [7832]))
	if ( ((*($40 + [7832]) & [1]) == 0) ){ goto $label$394 }
	CALL $349(*($15))
	
.LABEL $label$394
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$395 }
	$36 = CALL $223($9, $37)
	
.LABEL $label$395
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$396 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$397:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$396 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$397 }
	
.LABEL $label$396
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$400 }
	$15 = ($39 + [-24])
	
.LOOP $label$401:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$402 }
	CALL $349($38)
	
.LABEL $label$402
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$401 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$399 }
	goto $label$398 
	
.LABEL $label$400
	$39 = $37
	
.LABEL $label$399
	
.LOOP $label$403:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$404 }
	CALL $349($37)
	
.LABEL $label$404
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$403 }
	
.LABEL $label$398
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$364 }
	goto $label$172 
	
.LABEL $label$220
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1408]
	$33 = (int_64)0
	
.LOOP $label$405:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$406 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$408 }
	$39 = ($39 + [165])
	goto $label$407 
	
.LABEL $label$408
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$407
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$406
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$405 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493872, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $224($9, $37)
	$7 = (($40 + [7648]) | [1])
	$6 = ($40 + [7737])
	$12 = ($40 + [7736])
	$25 = ($40 + [7725])
	$13 = (($40 + [7752]) | [1])
	$11 = (($40 + [7792]) | [1])
	$21 = (($40 + [7688]) + [24])
	$10 = ($40 + [7724])
	$22 = ($10 + [4])
	$23 = (($40 + [7688]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [7732])
	$27 = ($40 + [7744])
	$18 = ($40 + [7740])
	
.LOOP $label$409:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$410:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$415 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$414 }
	$39 = ($39 + [165])
	goto $label$413 
	
.LABEL $label$415
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$412 }
	goto $label$411 
	
.LABEL $label$414
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$413
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$412
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$411
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$410 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$416:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$417 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$419 }
	$39 = ($39 + [165])
	goto $label$418 
	
.LABEL $label$419
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$418
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$417
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$416 }
	*(($20 = (($40 + [7808]) + [8]))) = *($28)
	*(($28 = (($40 + [7808]) + [16]))) = *($30)
	*(($30 = (($40 + [7792]) + [8]))) = [0]
	*($40 + [7808]) = *($40 + [8776])
	*($40 + [7792]) = (int_64)0
	$37 = CALL strlen([4688])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$126 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$422 }
	*($40 + [7792]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$421 }
	goto $label$420 
	
.LABEL $label$422
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7792]) = ($26 | [1])
	*($40 + [7796]) = $37
	
.LABEL $label$421
	CALL memcpy($39, [4688], $37)
	
.LABEL $label$420
	*(($39 + $37)) = [0]
	*((($40 + [1704]) + [16])) = *($28)
	*((($40 + [1704]) + [8])) = *($20)
	*($40 + [1704]) = *($40 + [7808])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1704]), ($40 + [7792]))
	if ( ((*($40 + [7792]) & [1]) == 0) ){ goto $label$423 }
	CALL $349(*($30))
	
.LABEL $label$423
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7768]) + [8]))) = *($15)
	*(($28 = (($40 + [7768]) + [16]))) = *($38)
	*(($20 = (($40 + [7752]) + [8]))) = [0]
	*($40 + [7768]) = *($40 + [8824])
	*($40 + [7752]) = (int_64)0
	$37 = CALL strlen([4720])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$125 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$426 }
	*($40 + [7752]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$425 }
	goto $label$424 
	
.LABEL $label$426
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7752]) = ($26 | [1])
	*($40 + [7756]) = $37
	
.LABEL $label$425
	CALL memcpy($39, [4720], $37)
	
.LABEL $label$424
	*(($39 + $37)) = [0]
	*((($40 + [1680]) + [16])) = *($28)
	*((($40 + [1680]) + [8])) = *($30)
	*($40 + [1680]) = *($40 + [7768])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1680]), ($40 + [7752]))
	if ( ((*($40 + [7752]) & [1]) == 0) ){ goto $label$427 }
	CALL $349(*($20))
	
.LABEL $label$427
	*((($40 + [7688]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [7688]) + [16])) = *($30)
	*($40 + [7688]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1392])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$124 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$430 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$429 }
	goto $label$428 
	
.LABEL $label$430
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [7688]) + [40])) = $37
	
.LABEL $label$429
	CALL memcpy($39, [1392], $37)
	
.LABEL $label$428
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$123 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$433 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$432 }
	goto $label$431 
	
.LABEL $label$433
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$432
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$431
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [7688]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$434 }
	CALL $349(*($27))
	
.LABEL $label$434
	if ( ((*($10) & [1]) == 0) ){ goto $label$435 }
	CALL $349(*($24))
	
.LABEL $label$435
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [7664]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [7664]) + [16]))) = *($37)
	*(($15 = (($40 + [7648]) + [8]))) = [0]
	*($40 + [7664]) = *($40 + [8608])
	*($40 + [7648]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$122 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$438 }
	*($40 + [7648]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$437 }
	goto $label$436 
	
.LABEL $label$438
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [7648]) = ($36 | [1])
	*($40 + [7652]) = $37
	
.LABEL $label$437
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$436
	*(($39 + $37)) = [0]
	*((($40 + [1656]) + [16])) = *($30)
	*((($40 + [1656]) + [8])) = *($38)
	*($40 + [1656]) = *($40 + [7664])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1656]), ($40 + [7648]))
	if ( ((*($40 + [7648]) & [1]) == 0) ){ goto $label$439 }
	CALL $349(*($15))
	
.LABEL $label$439
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$440 }
	$36 = CALL $224($9, $37)
	
.LABEL $label$440
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$441 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$442:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$441 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$442 }
	
.LABEL $label$441
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$445 }
	$15 = ($39 + [-24])
	
.LOOP $label$446:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$447 }
	CALL $349($38)
	
.LABEL $label$447
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$446 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$444 }
	goto $label$443 
	
.LABEL $label$445
	$39 = $37
	
.LABEL $label$444
	
.LOOP $label$448:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$449 }
	CALL $349($37)
	
.LABEL $label$449
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$448 }
	
.LABEL $label$443
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$409 }
	goto $label$172 
	
.LABEL $label$219
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1440]
	$33 = (int_64)0
	
.LOOP $label$450:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$451 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$453 }
	$39 = ($39 + [165])
	goto $label$452 
	
.LABEL $label$453
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$452
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$451
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$450 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493424, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$172 }
	$36 = CALL $225($9, $37)
	$7 = (($40 + [7464]) | [1])
	$6 = ($40 + [7553])
	$12 = ($40 + [7552])
	$25 = ($40 + [7541])
	$13 = (($40 + [7568]) | [1])
	$11 = (($40 + [7608]) | [1])
	$21 = (($40 + [7504]) + [24])
	$10 = ($40 + [7540])
	$22 = ($10 + [4])
	$23 = (($40 + [7504]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [7548])
	$27 = ($40 + [7560])
	$18 = ($40 + [7556])
	
.LOOP $label$454:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)185))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$455:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$460 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$459 }
	$39 = ($39 + [165])
	goto $label$458 
	
.LABEL $label$460
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$457 }
	goto $label$456 
	
.LABEL $label$459
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$458
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$457
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$456
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$455 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$461:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$462 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$464 }
	$39 = ($39 + [165])
	goto $label$463 
	
.LABEL $label$464
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$463
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$462
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$461 }
	*(($20 = (($40 + [7624]) + [8]))) = *($28)
	*(($28 = (($40 + [7624]) + [16]))) = *($30)
	*(($30 = (($40 + [7608]) + [8]))) = [0]
	*($40 + [7624]) = *($40 + [8776])
	*($40 + [7608]) = (int_64)0
	$37 = CALL strlen([4752])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$121 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$467 }
	*($40 + [7608]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$466 }
	goto $label$465 
	
.LABEL $label$467
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7608]) = ($26 | [1])
	*($40 + [7612]) = $37
	
.LABEL $label$466
	CALL memcpy($39, [4752], $37)
	
.LABEL $label$465
	*(($39 + $37)) = [0]
	*((($40 + [1776]) + [16])) = *($28)
	*((($40 + [1776]) + [8])) = *($20)
	*($40 + [1776]) = *($40 + [7624])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1776]), ($40 + [7608]))
	if ( ((*($40 + [7608]) & [1]) == 0) ){ goto $label$468 }
	CALL $349(*($30))
	
.LABEL $label$468
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7584]) + [8]))) = *($15)
	*(($28 = (($40 + [7584]) + [16]))) = *($38)
	*(($20 = (($40 + [7568]) + [8]))) = [0]
	*($40 + [7584]) = *($40 + [8824])
	*($40 + [7568]) = (int_64)0
	$37 = CALL strlen([4784])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$120 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$471 }
	*($40 + [7568]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$470 }
	goto $label$469 
	
.LABEL $label$471
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7568]) = ($26 | [1])
	*($40 + [7572]) = $37
	
.LABEL $label$470
	CALL memcpy($39, [4784], $37)
	
.LABEL $label$469
	*(($39 + $37)) = [0]
	*((($40 + [1752]) + [16])) = *($28)
	*((($40 + [1752]) + [8])) = *($30)
	*($40 + [1752]) = *($40 + [7584])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1752]), ($40 + [7568]))
	if ( ((*($40 + [7568]) & [1]) == 0) ){ goto $label$472 }
	CALL $349(*($20))
	
.LABEL $label$472
	*((($40 + [7504]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [7504]) + [16])) = *($30)
	*($40 + [7504]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1424])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$119 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$475 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$474 }
	goto $label$473 
	
.LABEL $label$475
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [7504]) + [40])) = $37
	
.LABEL $label$474
	CALL memcpy($39, [1424], $37)
	
.LABEL $label$473
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$118 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$478 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$477 }
	goto $label$476 
	
.LABEL $label$478
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$477
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$476
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [7504]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$479 }
	CALL $349(*($27))
	
.LABEL $label$479
	if ( ((*($10) & [1]) == 0) ){ goto $label$480 }
	CALL $349(*($24))
	
.LABEL $label$480
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [7480]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [7480]) + [16]))) = *($37)
	*(($15 = (($40 + [7464]) + [8]))) = [0]
	*($40 + [7480]) = *($40 + [8608])
	*($40 + [7464]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$117 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$483 }
	*($40 + [7464]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$482 }
	goto $label$481 
	
.LABEL $label$483
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [7464]) = ($36 | [1])
	*($40 + [7468]) = $37
	
.LABEL $label$482
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$481
	*(($39 + $37)) = [0]
	*((($40 + [1728]) + [16])) = *($30)
	*((($40 + [1728]) + [8])) = *($38)
	*($40 + [1728]) = *($40 + [7480])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1728]), ($40 + [7464]))
	if ( ((*($40 + [7464]) & [1]) == 0) ){ goto $label$484 }
	CALL $349(*($15))
	
.LABEL $label$484
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$485 }
	$36 = CALL $225($9, $37)
	
.LABEL $label$485
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$486 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$487:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$486 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$487 }
	
.LABEL $label$486
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$490 }
	$15 = ($39 + [-24])
	
.LOOP $label$491:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$492 }
	CALL $349($38)
	
.LABEL $label$492
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$491 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$489 }
	goto $label$488 
	
.LABEL $label$490
	$39 = $37
	
.LABEL $label$489
	
.LOOP $label$493:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$494 }
	CALL $349($37)
	
.LABEL $label$494
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$493 }
	
.LABEL $label$488
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$454 }
	
.LABEL $label$172
	if ( (uint_64)(((int_64)((int_64)*($16) + (int_64)*($40 + [8952])) + (int_64)*($17)) <= (int_64)11) ){ goto $label$496 }
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4816])
	CALL prints([80])
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [992]
	$33 = (int_64)0
	
.LOOP $label$497:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$498 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$500 }
	$39 = ($39 + [165])
	goto $label$499 
	
.LABEL $label$500
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$499
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$498
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$497 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494368, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$495 }
	$36 = CALL $226($9, $37)
	$7 = (($40 + [7280]) | [1])
	$6 = ($40 + [7369])
	$12 = ($40 + [7368])
	$25 = ($40 + [7357])
	$13 = (($40 + [7384]) | [1])
	$11 = (($40 + [7424]) | [1])
	$21 = (($40 + [7320]) + [24])
	$10 = ($40 + [7356])
	$22 = ($10 + [4])
	$23 = (($40 + [7320]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [7364])
	$27 = ($40 + [7376])
	$18 = ($40 + [7372])
	
.LOOP $label$501:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	$19 = (CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8]))))
	*($40 + [8824]) = (Rounds 0)(((float_64)$19 + (float_64)$19))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$502:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$507 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$506 }
	$39 = ($39 + [165])
	goto $label$505 
	
.LABEL $label$507
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$504 }
	goto $label$503 
	
.LABEL $label$506
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$505
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$504
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$503
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$502 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$508:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$509 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$511 }
	$39 = ($39 + [165])
	goto $label$510 
	
.LABEL $label$511
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$510
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$509
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$508 }
	*(($20 = (($40 + [7440]) + [8]))) = *($28)
	*(($28 = (($40 + [7440]) + [16]))) = *($30)
	*(($30 = (($40 + [7424]) + [8]))) = [0]
	*($40 + [7440]) = *($40 + [8776])
	*($40 + [7424]) = (int_64)0
	$37 = CALL strlen([4832])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$166 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$514 }
	*($40 + [7424]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$513 }
	goto $label$512 
	
.LABEL $label$514
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7424]) = ($26 | [1])
	*($40 + [7428]) = $37
	
.LABEL $label$513
	CALL memcpy($39, [4832], $37)
	
.LABEL $label$512
	*(($39 + $37)) = [0]
	*((($40 + [1272]) + [16])) = *($28)
	*((($40 + [1272]) + [8])) = *($20)
	*($40 + [1272]) = *($40 + [7440])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1272]), ($40 + [7424]))
	if ( ((*($40 + [7424]) & [1]) == 0) ){ goto $label$515 }
	CALL $349(*($30))
	
.LABEL $label$515
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7400]) + [8]))) = *($15)
	*(($28 = (($40 + [7400]) + [16]))) = *($38)
	*(($20 = (($40 + [7384]) + [8]))) = [0]
	*($40 + [7400]) = *($40 + [8824])
	*($40 + [7384]) = (int_64)0
	$37 = CALL strlen([4864])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$165 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$518 }
	*($40 + [7384]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$517 }
	goto $label$516 
	
.LABEL $label$518
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7384]) = ($26 | [1])
	*($40 + [7388]) = $37
	
.LABEL $label$517
	CALL memcpy($39, [4864], $37)
	
.LABEL $label$516
	*(($39 + $37)) = [0]
	*((($40 + [1248]) + [16])) = *($28)
	*((($40 + [1248]) + [8])) = *($30)
	*($40 + [1248]) = *($40 + [7400])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1248]), ($40 + [7384]))
	if ( ((*($40 + [7384]) & [1]) == 0) ){ goto $label$519 }
	CALL $349(*($20))
	
.LABEL $label$519
	*((($40 + [7320]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [7320]) + [16])) = *($30)
	*($40 + [7320]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([976])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$164 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$522 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$521 }
	goto $label$520 
	
.LABEL $label$522
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [7320]) + [40])) = $37
	
.LABEL $label$521
	CALL memcpy($39, [976], $37)
	
.LABEL $label$520
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$163 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$525 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$524 }
	goto $label$523 
	
.LABEL $label$525
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$524
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$523
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [7320]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$526 }
	CALL $349(*($27))
	
.LABEL $label$526
	if ( ((*($10) & [1]) == 0) ){ goto $label$527 }
	CALL $349(*($24))
	
.LABEL $label$527
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [7296]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [7296]) + [16]))) = *($37)
	*(($15 = (($40 + [7280]) + [8]))) = [0]
	*($40 + [7296]) = *($40 + [8608])
	*($40 + [7280]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$162 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$530 }
	*($40 + [7280]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$529 }
	goto $label$528 
	
.LABEL $label$530
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [7280]) = ($36 | [1])
	*($40 + [7284]) = $37
	
.LABEL $label$529
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$528
	*(($39 + $37)) = [0]
	*((($40 + [1224]) + [16])) = *($30)
	*((($40 + [1224]) + [8])) = *($38)
	*($40 + [1224]) = *($40 + [7296])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1224]), ($40 + [7280]))
	if ( ((*($40 + [7280]) & [1]) == 0) ){ goto $label$531 }
	CALL $349(*($15))
	
.LABEL $label$531
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$532 }
	$36 = CALL $226($9, $37)
	
.LABEL $label$532
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$533 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$534:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$533 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$534 }
	
.LABEL $label$533
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$537 }
	$15 = ($39 + [-24])
	
.LOOP $label$538:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$539 }
	CALL $349($38)
	
.LABEL $label$539
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$538 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$536 }
	goto $label$535 
	
.LABEL $label$537
	$39 = $37
	
.LABEL $label$536
	
.LOOP $label$540:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$541 }
	CALL $349($37)
	
.LABEL $label$541
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$540 }
	
.LABEL $label$535
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$501 }
	goto $label$495 
	
.LABEL $label$496
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4896])
	CALL prints([80])
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1120]
	$33 = (int_64)0
	
.LOOP $label$542:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$543 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$545 }
	$39 = ($39 + [165])
	goto $label$544 
	
.LABEL $label$545
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$544
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$543
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$542 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494448, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$495 }
	$36 = CALL $227($9, $37)
	$7 = (($40 + [7096]) | [1])
	$6 = ($40 + [7185])
	$12 = ($40 + [7184])
	$25 = ($40 + [7173])
	$13 = (($40 + [7200]) | [1])
	$11 = (($40 + [7240]) | [1])
	$21 = (($40 + [7136]) + [24])
	$10 = ($40 + [7172])
	$22 = ($10 + [4])
	$23 = (($40 + [7136]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [7180])
	$27 = ($40 + [7192])
	$18 = ($40 + [7188])
	
.LOOP $label$546:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	$19 = (CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8]))))
	*($40 + [8824]) = (Rounds 0)(((float_64)$19 + (float_64)$19))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$547:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$552 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$551 }
	$39 = ($39 + [165])
	goto $label$550 
	
.LABEL $label$552
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$549 }
	goto $label$548 
	
.LABEL $label$551
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$550
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$549
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$548
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$547 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$553:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$554 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$556 }
	$39 = ($39 + [165])
	goto $label$555 
	
.LABEL $label$556
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$555
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$554
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$553 }
	*(($20 = (($40 + [7256]) + [8]))) = *($28)
	*(($28 = (($40 + [7256]) + [16]))) = *($30)
	*(($30 = (($40 + [7240]) + [8]))) = [0]
	*($40 + [7256]) = *($40 + [8776])
	*($40 + [7240]) = (int_64)0
	$37 = CALL strlen([4912])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$161 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$559 }
	*($40 + [7240]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$558 }
	goto $label$557 
	
.LABEL $label$559
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7240]) = ($26 | [1])
	*($40 + [7244]) = $37
	
.LABEL $label$558
	CALL memcpy($39, [4912], $37)
	
.LABEL $label$557
	*(($39 + $37)) = [0]
	*((($40 + [1344]) + [16])) = *($28)
	*((($40 + [1344]) + [8])) = *($20)
	*($40 + [1344]) = *($40 + [7256])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1344]), ($40 + [7240]))
	if ( ((*($40 + [7240]) & [1]) == 0) ){ goto $label$560 }
	CALL $349(*($30))
	
.LABEL $label$560
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7216]) + [8]))) = *($15)
	*(($28 = (($40 + [7216]) + [16]))) = *($38)
	*(($20 = (($40 + [7200]) + [8]))) = [0]
	*($40 + [7216]) = *($40 + [8824])
	*($40 + [7200]) = (int_64)0
	$37 = CALL strlen([4944])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$160 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$563 }
	*($40 + [7200]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$562 }
	goto $label$561 
	
.LABEL $label$563
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7200]) = ($26 | [1])
	*($40 + [7204]) = $37
	
.LABEL $label$562
	CALL memcpy($39, [4944], $37)
	
.LABEL $label$561
	*(($39 + $37)) = [0]
	*((($40 + [1320]) + [16])) = *($28)
	*((($40 + [1320]) + [8])) = *($30)
	*($40 + [1320]) = *($40 + [7216])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1320]), ($40 + [7200]))
	if ( ((*($40 + [7200]) & [1]) == 0) ){ goto $label$564 }
	CALL $349(*($20))
	
.LABEL $label$564
	*((($40 + [7136]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [7136]) + [16])) = *($30)
	*($40 + [7136]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1104])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$159 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$567 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$566 }
	goto $label$565 
	
.LABEL $label$567
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [7136]) + [40])) = $37
	
.LABEL $label$566
	CALL memcpy($39, [1104], $37)
	
.LABEL $label$565
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$158 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$570 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$569 }
	goto $label$568 
	
.LABEL $label$570
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$569
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$568
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [7136]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$571 }
	CALL $349(*($27))
	
.LABEL $label$571
	if ( ((*($10) & [1]) == 0) ){ goto $label$572 }
	CALL $349(*($24))
	
.LABEL $label$572
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [7112]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [7112]) + [16]))) = *($37)
	*(($15 = (($40 + [7096]) + [8]))) = [0]
	*($40 + [7112]) = *($40 + [8608])
	*($40 + [7096]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$157 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$575 }
	*($40 + [7096]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$574 }
	goto $label$573 
	
.LABEL $label$575
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [7096]) = ($36 | [1])
	*($40 + [7100]) = $37
	
.LABEL $label$574
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$573
	*(($39 + $37)) = [0]
	*((($40 + [1296]) + [16])) = *($30)
	*((($40 + [1296]) + [8])) = *($38)
	*($40 + [1296]) = *($40 + [7112])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1296]), ($40 + [7096]))
	if ( ((*($40 + [7096]) & [1]) == 0) ){ goto $label$576 }
	CALL $349(*($15))
	
.LABEL $label$576
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$577 }
	$36 = CALL $227($9, $37)
	
.LABEL $label$577
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$578 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$579:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$578 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$579 }
	
.LABEL $label$578
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$582 }
	$15 = ($39 + [-24])
	
.LOOP $label$583:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$584 }
	CALL $349($38)
	
.LABEL $label$584
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$583 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$581 }
	goto $label$580 
	
.LABEL $label$582
	$39 = $37
	
.LABEL $label$581
	
.LOOP $label$585:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$586 }
	CALL $349($37)
	
.LABEL $label$586
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$585 }
	
.LABEL $label$580
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$546 }
	
.LABEL $label$495
	$8 = *(($0 + [16]))
	if ( ((int_64)(((int_64)((int_64)((int_64)*(($40 + [8960])) + (int_64)*($40 + [8952])) + (int_64)*((($40 + [8952]) + [16]))) & (int_64)1) == 0) == 0) ){ goto $label$588 }
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1184]
	$33 = (int_64)0
	
.LOOP $label$589:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$590 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$592 }
	$39 = ($39 + [165])
	goto $label$591 
	
.LABEL $label$592
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$591
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$590
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$589 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494416, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$587 }
	$36 = CALL $228($9, $37)
	$7 = (($40 + [6912]) | [1])
	$6 = ($40 + [7001])
	$12 = ($40 + [7000])
	$25 = ($40 + [6989])
	$13 = (($40 + [7016]) | [1])
	$11 = (($40 + [7056]) | [1])
	$21 = (($40 + [6952]) + [24])
	$10 = ($40 + [6988])
	$22 = ($10 + [4])
	$23 = (($40 + [6952]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6996])
	$27 = ($40 + [7008])
	$18 = ($40 + [7004])
	
.LOOP $label$593:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	$19 = (CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8]))))
	*($40 + [8824]) = (Rounds 0)(((float_64)$19 + (float_64)$19))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$594:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$599 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$598 }
	$39 = ($39 + [165])
	goto $label$597 
	
.LABEL $label$599
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$596 }
	goto $label$595 
	
.LABEL $label$598
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$597
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$596
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$595
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$594 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$600:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$601 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$603 }
	$39 = ($39 + [165])
	goto $label$602 
	
.LABEL $label$603
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$602
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$601
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$600 }
	*(($20 = (($40 + [7072]) + [8]))) = *($28)
	*(($28 = (($40 + [7072]) + [16]))) = *($30)
	*(($30 = (($40 + [7056]) + [8]))) = [0]
	*($40 + [7072]) = *($40 + [8776])
	*($40 + [7056]) = (int_64)0
	$37 = CALL strlen([4976])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$156 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$606 }
	*($40 + [7056]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$605 }
	goto $label$604 
	
.LABEL $label$606
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [7056]) = ($26 | [1])
	*($40 + [7060]) = $37
	
.LABEL $label$605
	CALL memcpy($39, [4976], $37)
	
.LABEL $label$604
	*(($39 + $37)) = [0]
	*((($40 + [1128]) + [16])) = *($28)
	*((($40 + [1128]) + [8])) = *($20)
	*($40 + [1128]) = *($40 + [7072])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1128]), ($40 + [7056]))
	if ( ((*($40 + [7056]) & [1]) == 0) ){ goto $label$607 }
	CALL $349(*($30))
	
.LABEL $label$607
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [7032]) + [8]))) = *($15)
	*(($28 = (($40 + [7032]) + [16]))) = *($38)
	*(($20 = (($40 + [7016]) + [8]))) = [0]
	*($40 + [7032]) = *($40 + [8824])
	*($40 + [7016]) = (int_64)0
	$37 = CALL strlen([5008])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$155 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$610 }
	*($40 + [7016]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$609 }
	goto $label$608 
	
.LABEL $label$610
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [7016]) = ($26 | [1])
	*($40 + [7020]) = $37
	
.LABEL $label$609
	CALL memcpy($39, [5008], $37)
	
.LABEL $label$608
	*(($39 + $37)) = [0]
	*((($40 + [1104]) + [16])) = *($28)
	*((($40 + [1104]) + [8])) = *($30)
	*($40 + [1104]) = *($40 + [7032])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1104]), ($40 + [7016]))
	if ( ((*($40 + [7016]) & [1]) == 0) ){ goto $label$611 }
	CALL $349(*($20))
	
.LABEL $label$611
	*((($40 + [6952]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6952]) + [16])) = *($30)
	*($40 + [6952]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1168])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$154 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$614 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$613 }
	goto $label$612 
	
.LABEL $label$614
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6952]) + [40])) = $37
	
.LABEL $label$613
	CALL memcpy($39, [1168], $37)
	
.LABEL $label$612
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$153 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$617 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$616 }
	goto $label$615 
	
.LABEL $label$617
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$616
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$615
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6952]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$618 }
	CALL $349(*($27))
	
.LABEL $label$618
	if ( ((*($10) & [1]) == 0) ){ goto $label$619 }
	CALL $349(*($24))
	
.LABEL $label$619
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6928]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6928]) + [16]))) = *($37)
	*(($15 = (($40 + [6912]) + [8]))) = [0]
	*($40 + [6928]) = *($40 + [8608])
	*($40 + [6912]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$152 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$622 }
	*($40 + [6912]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$621 }
	goto $label$620 
	
.LABEL $label$622
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [6912]) = ($36 | [1])
	*($40 + [6916]) = $37
	
.LABEL $label$621
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$620
	*(($39 + $37)) = [0]
	*((($40 + [1080]) + [16])) = *($30)
	*((($40 + [1080]) + [8])) = *($38)
	*($40 + [1080]) = *($40 + [6928])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1080]), ($40 + [6912]))
	if ( ((*($40 + [6912]) & [1]) == 0) ){ goto $label$623 }
	CALL $349(*($15))
	
.LABEL $label$623
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$624 }
	$36 = CALL $228($9, $37)
	
.LABEL $label$624
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$625 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$626:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$625 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$626 }
	
.LABEL $label$625
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$629 }
	$15 = ($39 + [-24])
	
.LOOP $label$630:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$631 }
	CALL $349($38)
	
.LABEL $label$631
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$630 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$628 }
	goto $label$627 
	
.LABEL $label$629
	$39 = $37
	
.LABEL $label$628
	
.LOOP $label$632:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$633 }
	CALL $349($37)
	
.LABEL $label$633
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$632 }
	
.LABEL $label$627
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$593 }
	goto $label$587 
	
.LABEL $label$588
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1152]
	$33 = (int_64)0
	
.LOOP $label$634:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$635 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$637 }
	$39 = ($39 + [165])
	goto $label$636 
	
.LABEL $label$637
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$636
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$635
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$634 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494432, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$587 }
	$36 = CALL $229($9, $37)
	$7 = (($40 + [6728]) | [1])
	$6 = ($40 + [6817])
	$12 = ($40 + [6816])
	$25 = ($40 + [6805])
	$13 = (($40 + [6832]) | [1])
	$11 = (($40 + [6872]) | [1])
	$21 = (($40 + [6768]) + [24])
	$10 = ($40 + [6804])
	$22 = ($10 + [4])
	$23 = (($40 + [6768]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6812])
	$27 = ($40 + [6824])
	$18 = ($40 + [6820])
	
.LOOP $label$638:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	$19 = (CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8]))))
	*($40 + [8824]) = (Rounds 0)(((float_64)$19 + (float_64)$19))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$639:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$644 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$643 }
	$39 = ($39 + [165])
	goto $label$642 
	
.LABEL $label$644
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$641 }
	goto $label$640 
	
.LABEL $label$643
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$642
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$641
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$640
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$639 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$645:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$646 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$648 }
	$39 = ($39 + [165])
	goto $label$647 
	
.LABEL $label$648
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$647
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$646
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$645 }
	*(($20 = (($40 + [6888]) + [8]))) = *($28)
	*(($28 = (($40 + [6888]) + [16]))) = *($30)
	*(($30 = (($40 + [6872]) + [8]))) = [0]
	*($40 + [6888]) = *($40 + [8776])
	*($40 + [6872]) = (int_64)0
	$37 = CALL strlen([5040])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$151 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$651 }
	*($40 + [6872]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$650 }
	goto $label$649 
	
.LABEL $label$651
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [6872]) = ($26 | [1])
	*($40 + [6876]) = $37
	
.LABEL $label$650
	CALL memcpy($39, [5040], $37)
	
.LABEL $label$649
	*(($39 + $37)) = [0]
	*((($40 + [1200]) + [16])) = *($28)
	*((($40 + [1200]) + [8])) = *($20)
	*($40 + [1200]) = *($40 + [6888])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1200]), ($40 + [6872]))
	if ( ((*($40 + [6872]) & [1]) == 0) ){ goto $label$652 }
	CALL $349(*($30))
	
.LABEL $label$652
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [6848]) + [8]))) = *($15)
	*(($28 = (($40 + [6848]) + [16]))) = *($38)
	*(($20 = (($40 + [6832]) + [8]))) = [0]
	*($40 + [6848]) = *($40 + [8824])
	*($40 + [6832]) = (int_64)0
	$37 = CALL strlen([5072])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$150 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$655 }
	*($40 + [6832]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$654 }
	goto $label$653 
	
.LABEL $label$655
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [6832]) = ($26 | [1])
	*($40 + [6836]) = $37
	
.LABEL $label$654
	CALL memcpy($39, [5072], $37)
	
.LABEL $label$653
	*(($39 + $37)) = [0]
	*((($40 + [1176]) + [16])) = *($28)
	*((($40 + [1176]) + [8])) = *($30)
	*($40 + [1176]) = *($40 + [6848])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1176]), ($40 + [6832]))
	if ( ((*($40 + [6832]) & [1]) == 0) ){ goto $label$656 }
	CALL $349(*($20))
	
.LABEL $label$656
	*((($40 + [6768]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6768]) + [16])) = *($30)
	*($40 + [6768]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1136])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$149 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$659 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$658 }
	goto $label$657 
	
.LABEL $label$659
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6768]) + [40])) = $37
	
.LABEL $label$658
	CALL memcpy($39, [1136], $37)
	
.LABEL $label$657
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$148 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$662 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$661 }
	goto $label$660 
	
.LABEL $label$662
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$661
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$660
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6768]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$663 }
	CALL $349(*($27))
	
.LABEL $label$663
	if ( ((*($10) & [1]) == 0) ){ goto $label$664 }
	CALL $349(*($24))
	
.LABEL $label$664
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6744]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6744]) + [16]))) = *($37)
	*(($15 = (($40 + [6728]) + [8]))) = [0]
	*($40 + [6744]) = *($40 + [8608])
	*($40 + [6728]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$147 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$667 }
	*($40 + [6728]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$666 }
	goto $label$665 
	
.LABEL $label$667
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [6728]) = ($36 | [1])
	*($40 + [6732]) = $37
	
.LABEL $label$666
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$665
	*(($39 + $37)) = [0]
	*((($40 + [1152]) + [16])) = *($30)
	*((($40 + [1152]) + [8])) = *($38)
	*($40 + [1152]) = *($40 + [6744])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1152]), ($40 + [6728]))
	if ( ((*($40 + [6728]) & [1]) == 0) ){ goto $label$668 }
	CALL $349(*($15))
	
.LABEL $label$668
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$669 }
	$36 = CALL $229($9, $37)
	
.LABEL $label$669
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$670 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$671:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$670 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$671 }
	
.LABEL $label$670
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$674 }
	$15 = ($39 + [-24])
	
.LOOP $label$675:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$676 }
	CALL $349($38)
	
.LABEL $label$676
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$675 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$673 }
	goto $label$672 
	
.LABEL $label$674
	$39 = $37
	
.LABEL $label$673
	
.LOOP $label$677:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$678 }
	CALL $349($37)
	
.LABEL $label$678
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$677 }
	
.LABEL $label$672
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$638 }
	
.LABEL $label$587
	$32 = ((int_64)((int_64)((int_64)*(($40 + [8960])) + (int_64)*($40 + [8952])) + (int_64)*(($40 + [8968]))) + (int_64)-4)
	if ( ((uint_64)$32 > (uint_64)(int_64)13) ){ goto $label$679 }
	goto $label$693 
	
.LABEL $label$693
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1472]
	$33 = (int_64)0
	
.LOOP $label$694:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$695 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$697 }
	$39 = ($39 + [165])
	goto $label$696 
	
.LABEL $label$697
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$696
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$695
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$694 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493408, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $230($9, $37)
	$7 = (($40 + [6544]) | [1])
	$6 = ($40 + [6633])
	$12 = ($40 + [6632])
	$25 = ($40 + [6621])
	$13 = (($40 + [6648]) | [1])
	$11 = (($40 + [6688]) | [1])
	$21 = (($40 + [6584]) + [24])
	$10 = ($40 + [6620])
	$22 = ($10 + [4])
	$23 = (($40 + [6584]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6628])
	$27 = ($40 + [6640])
	$18 = ($40 + [6636])
	
.LOOP $label$698:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)60))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$699:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$704 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$703 }
	$39 = ($39 + [165])
	goto $label$702 
	
.LABEL $label$704
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$701 }
	goto $label$700 
	
.LABEL $label$703
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$702
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$701
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$700
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$699 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$705:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$706 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$708 }
	$39 = ($39 + [165])
	goto $label$707 
	
.LABEL $label$708
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$707
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$706
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$705 }
	*(($20 = (($40 + [6704]) + [8]))) = *($28)
	*(($28 = (($40 + [6704]) + [16]))) = *($30)
	*(($30 = (($40 + [6688]) + [8]))) = [0]
	*($40 + [6704]) = *($40 + [8776])
	*($40 + [6688]) = (int_64)0
	$37 = CALL strlen([5104])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$116 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$711 }
	*($40 + [6688]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$710 }
	goto $label$709 
	
.LABEL $label$711
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [6688]) = ($26 | [1])
	*($40 + [6692]) = $37
	
.LABEL $label$710
	CALL memcpy($39, [5104], $37)
	
.LABEL $label$709
	*(($39 + $37)) = [0]
	*((($40 + [120]) + [16])) = *($28)
	*((($40 + [120]) + [8])) = *($20)
	*($40 + [120]) = *($40 + [6704])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [120]), ($40 + [6688]))
	if ( ((*($40 + [6688]) & [1]) == 0) ){ goto $label$712 }
	CALL $349(*($30))
	
.LABEL $label$712
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [6664]) + [8]))) = *($15)
	*(($28 = (($40 + [6664]) + [16]))) = *($38)
	*(($20 = (($40 + [6648]) + [8]))) = [0]
	*($40 + [6664]) = *($40 + [8824])
	*($40 + [6648]) = (int_64)0
	$37 = CALL strlen([5136])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$115 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$715 }
	*($40 + [6648]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$714 }
	goto $label$713 
	
.LABEL $label$715
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [6648]) = ($26 | [1])
	*($40 + [6652]) = $37
	
.LABEL $label$714
	CALL memcpy($39, [5136], $37)
	
.LABEL $label$713
	*(($39 + $37)) = [0]
	*((($40 + [96]) + [16])) = *($28)
	*((($40 + [96]) + [8])) = *($30)
	*($40 + [96]) = *($40 + [6664])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [96]), ($40 + [6648]))
	if ( ((*($40 + [6648]) & [1]) == 0) ){ goto $label$716 }
	CALL $349(*($20))
	
.LABEL $label$716
	*((($40 + [6584]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6584]) + [16])) = *($30)
	*($40 + [6584]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1456])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$114 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$719 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$718 }
	goto $label$717 
	
.LABEL $label$719
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6584]) + [40])) = $37
	
.LABEL $label$718
	CALL memcpy($39, [1456], $37)
	
.LABEL $label$717
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$113 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$722 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$721 }
	goto $label$720 
	
.LABEL $label$722
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$721
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$720
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6584]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$723 }
	CALL $349(*($27))
	
.LABEL $label$723
	if ( ((*($10) & [1]) == 0) ){ goto $label$724 }
	CALL $349(*($24))
	
.LABEL $label$724
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6560]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6560]) + [16]))) = *($37)
	*(($15 = (($40 + [6544]) + [8]))) = [0]
	*($40 + [6560]) = *($40 + [8608])
	*($40 + [6544]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$112 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$727 }
	*($40 + [6544]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$726 }
	goto $label$725 
	
.LABEL $label$727
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [6544]) = ($36 | [1])
	*($40 + [6548]) = $37
	
.LABEL $label$726
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$725
	*(($39 + $37)) = [0]
	*((($40 + [72]) + [16])) = *($30)
	*((($40 + [72]) + [8])) = *($38)
	*($40 + [72]) = *($40 + [6560])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [72]), ($40 + [6544]))
	if ( ((*($40 + [6544]) & [1]) == 0) ){ goto $label$728 }
	CALL $349(*($15))
	
.LABEL $label$728
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$729 }
	$36 = CALL $230($9, $37)
	
.LABEL $label$729
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$730 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$731:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$730 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$731 }
	
.LABEL $label$730
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$734 }
	$15 = ($39 + [-24])
	
.LOOP $label$735:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$736 }
	CALL $349($38)
	
.LABEL $label$736
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$735 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$733 }
	goto $label$732 
	
.LABEL $label$734
	$39 = $37
	
.LABEL $label$733
	
.LOOP $label$737:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$738 }
	CALL $349($37)
	
.LABEL $label$738
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$737 }
	
.LABEL $label$732
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$698 }
	goto $label$679 
	
.LABEL $label$692
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1504]
	$33 = (int_64)0
	
.LOOP $label$739:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$740 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$742 }
	$39 = ($39 + [165])
	goto $label$741 
	
.LABEL $label$742
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$741
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$740
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$739 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493392, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $232($9, $37)
	$7 = (($40 + [6176]) | [1])
	$6 = ($40 + [6265])
	$12 = ($40 + [6264])
	$25 = ($40 + [6253])
	$13 = (($40 + [6280]) | [1])
	$11 = (($40 + [6320]) | [1])
	$21 = (($40 + [6216]) + [24])
	$10 = ($40 + [6252])
	$22 = ($10 + [4])
	$23 = (($40 + [6216]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6260])
	$27 = ($40 + [6272])
	$18 = ($40 + [6268])
	
.LOOP $label$743:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)30))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$744:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$749 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$748 }
	$39 = ($39 + [165])
	goto $label$747 
	
.LABEL $label$749
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$746 }
	goto $label$745 
	
.LABEL $label$748
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$747
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$746
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$745
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$744 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$750:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$751 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$753 }
	$39 = ($39 + [165])
	goto $label$752 
	
.LABEL $label$753
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$752
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$751
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$750 }
	*(($20 = (($40 + [6336]) + [8]))) = *($28)
	*(($28 = (($40 + [6336]) + [16]))) = *($30)
	*(($30 = (($40 + [6320]) + [8]))) = [0]
	*($40 + [6336]) = *($40 + [8776])
	*($40 + [6320]) = (int_64)0
	$37 = CALL strlen([5232])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$111 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$756 }
	*($40 + [6320]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$755 }
	goto $label$754 
	
.LABEL $label$756
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [6320]) = ($26 | [1])
	*($40 + [6324]) = $37
	
.LABEL $label$755
	CALL memcpy($39, [5232], $37)
	
.LABEL $label$754
	*(($39 + $37)) = [0]
	*((($40 + [264]) + [16])) = *($28)
	*((($40 + [264]) + [8])) = *($20)
	*($40 + [264]) = *($40 + [6336])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [264]), ($40 + [6320]))
	if ( ((*($40 + [6320]) & [1]) == 0) ){ goto $label$757 }
	CALL $349(*($30))
	
.LABEL $label$757
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [6296]) + [8]))) = *($15)
	*(($28 = (($40 + [6296]) + [16]))) = *($38)
	*(($20 = (($40 + [6280]) + [8]))) = [0]
	*($40 + [6296]) = *($40 + [8824])
	*($40 + [6280]) = (int_64)0
	$37 = CALL strlen([5264])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$110 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$760 }
	*($40 + [6280]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$759 }
	goto $label$758 
	
.LABEL $label$760
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [6280]) = ($26 | [1])
	*($40 + [6284]) = $37
	
.LABEL $label$759
	CALL memcpy($39, [5264], $37)
	
.LABEL $label$758
	*(($39 + $37)) = [0]
	*((($40 + [240]) + [16])) = *($28)
	*((($40 + [240]) + [8])) = *($30)
	*($40 + [240]) = *($40 + [6296])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [240]), ($40 + [6280]))
	if ( ((*($40 + [6280]) & [1]) == 0) ){ goto $label$761 }
	CALL $349(*($20))
	
.LABEL $label$761
	*((($40 + [6216]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6216]) + [16])) = *($30)
	*($40 + [6216]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1488])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$109 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$764 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$763 }
	goto $label$762 
	
.LABEL $label$764
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6216]) + [40])) = $37
	
.LABEL $label$763
	CALL memcpy($39, [1488], $37)
	
.LABEL $label$762
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$108 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$767 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$766 }
	goto $label$765 
	
.LABEL $label$767
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$766
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$765
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6216]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$768 }
	CALL $349(*($27))
	
.LABEL $label$768
	if ( ((*($10) & [1]) == 0) ){ goto $label$769 }
	CALL $349(*($24))
	
.LABEL $label$769
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6192]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6192]) + [16]))) = *($37)
	*(($15 = (($40 + [6176]) + [8]))) = [0]
	*($40 + [6192]) = *($40 + [8608])
	*($40 + [6176]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$107 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$772 }
	*($40 + [6176]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$771 }
	goto $label$770 
	
.LABEL $label$772
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [6176]) = ($36 | [1])
	*($40 + [6180]) = $37
	
.LABEL $label$771
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$770
	*(($39 + $37)) = [0]
	*((($40 + [216]) + [16])) = *($30)
	*((($40 + [216]) + [8])) = *($38)
	*($40 + [216]) = *($40 + [6192])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [216]), ($40 + [6176]))
	if ( ((*($40 + [6176]) & [1]) == 0) ){ goto $label$773 }
	CALL $349(*($15))
	
.LABEL $label$773
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$774 }
	$36 = CALL $232($9, $37)
	
.LABEL $label$774
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$775 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$776:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$775 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$776 }
	
.LABEL $label$775
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$779 }
	$15 = ($39 + [-24])
	
.LOOP $label$780:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$781 }
	CALL $349($38)
	
.LABEL $label$781
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$780 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$778 }
	goto $label$777 
	
.LABEL $label$779
	$39 = $37
	
.LABEL $label$778
	
.LOOP $label$782:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$783 }
	CALL $349($37)
	
.LABEL $label$783
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$782 }
	
.LABEL $label$777
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$743 }
	goto $label$679 
	
.LABEL $label$691
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1536]
	$33 = (int_64)0
	
.LOOP $label$784:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$785 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$787 }
	$39 = ($39 + [165])
	goto $label$786 
	
.LABEL $label$787
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$786
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$785
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$784 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493376, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $234($9, $37)
	$7 = (($40 + [5808]) | [1])
	$6 = ($40 + [5897])
	$12 = ($40 + [5896])
	$25 = ($40 + [5885])
	$13 = (($40 + [5912]) | [1])
	$11 = (($40 + [5952]) | [1])
	$21 = (($40 + [5848]) + [24])
	$10 = ($40 + [5884])
	$22 = ($10 + [4])
	$23 = (($40 + [5848]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [5892])
	$27 = ($40 + [5904])
	$18 = ($40 + [5900])
	
.LOOP $label$788:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)18))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$789:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$794 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$793 }
	$39 = ($39 + [165])
	goto $label$792 
	
.LABEL $label$794
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$791 }
	goto $label$790 
	
.LABEL $label$793
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$792
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$791
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$790
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$789 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$795:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$796 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$798 }
	$39 = ($39 + [165])
	goto $label$797 
	
.LABEL $label$798
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$797
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$796
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$795 }
	*(($20 = (($40 + [5968]) + [8]))) = *($28)
	*(($28 = (($40 + [5968]) + [16]))) = *($30)
	*(($30 = (($40 + [5952]) + [8]))) = [0]
	*($40 + [5968]) = *($40 + [8776])
	*($40 + [5952]) = (int_64)0
	$37 = CALL strlen([5360])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$106 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$801 }
	*($40 + [5952]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$800 }
	goto $label$799 
	
.LABEL $label$801
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5952]) = ($26 | [1])
	*($40 + [5956]) = $37
	
.LABEL $label$800
	CALL memcpy($39, [5360], $37)
	
.LABEL $label$799
	*(($39 + $37)) = [0]
	*((($40 + [408]) + [16])) = *($28)
	*((($40 + [408]) + [8])) = *($20)
	*($40 + [408]) = *($40 + [5968])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [408]), ($40 + [5952]))
	if ( ((*($40 + [5952]) & [1]) == 0) ){ goto $label$802 }
	CALL $349(*($30))
	
.LABEL $label$802
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5928]) + [8]))) = *($15)
	*(($28 = (($40 + [5928]) + [16]))) = *($38)
	*(($20 = (($40 + [5912]) + [8]))) = [0]
	*($40 + [5928]) = *($40 + [8824])
	*($40 + [5912]) = (int_64)0
	$37 = CALL strlen([5392])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$105 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$805 }
	*($40 + [5912]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$804 }
	goto $label$803 
	
.LABEL $label$805
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [5912]) = ($26 | [1])
	*($40 + [5916]) = $37
	
.LABEL $label$804
	CALL memcpy($39, [5392], $37)
	
.LABEL $label$803
	*(($39 + $37)) = [0]
	*((($40 + [384]) + [16])) = *($28)
	*((($40 + [384]) + [8])) = *($30)
	*($40 + [384]) = *($40 + [5928])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [384]), ($40 + [5912]))
	if ( ((*($40 + [5912]) & [1]) == 0) ){ goto $label$806 }
	CALL $349(*($20))
	
.LABEL $label$806
	*((($40 + [5848]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [5848]) + [16])) = *($30)
	*($40 + [5848]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1520])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$104 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$809 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$808 }
	goto $label$807 
	
.LABEL $label$809
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [5848]) + [40])) = $37
	
.LABEL $label$808
	CALL memcpy($39, [1520], $37)
	
.LABEL $label$807
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$103 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$812 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$811 }
	goto $label$810 
	
.LABEL $label$812
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$811
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$810
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [5848]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$813 }
	CALL $349(*($27))
	
.LABEL $label$813
	if ( ((*($10) & [1]) == 0) ){ goto $label$814 }
	CALL $349(*($24))
	
.LABEL $label$814
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [5824]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [5824]) + [16]))) = *($37)
	*(($15 = (($40 + [5808]) + [8]))) = [0]
	*($40 + [5824]) = *($40 + [8608])
	*($40 + [5808]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$102 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$817 }
	*($40 + [5808]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$816 }
	goto $label$815 
	
.LABEL $label$817
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5808]) = ($36 | [1])
	*($40 + [5812]) = $37
	
.LABEL $label$816
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$815
	*(($39 + $37)) = [0]
	*((($40 + [360]) + [16])) = *($30)
	*((($40 + [360]) + [8])) = *($38)
	*($40 + [360]) = *($40 + [5824])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [360]), ($40 + [5808]))
	if ( ((*($40 + [5808]) & [1]) == 0) ){ goto $label$818 }
	CALL $349(*($15))
	
.LABEL $label$818
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$819 }
	$36 = CALL $234($9, $37)
	
.LABEL $label$819
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$820 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$821:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$820 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$821 }
	
.LABEL $label$820
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$824 }
	$15 = ($39 + [-24])
	
.LOOP $label$825:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$826 }
	CALL $349($38)
	
.LABEL $label$826
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$825 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$823 }
	goto $label$822 
	
.LABEL $label$824
	$39 = $37
	
.LABEL $label$823
	
.LOOP $label$827:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$828 }
	CALL $349($37)
	
.LABEL $label$828
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$827 }
	
.LABEL $label$822
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$788 }
	goto $label$679 
	
.LABEL $label$690
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1568]
	$33 = (int_64)0
	
.LOOP $label$829:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$830 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$832 }
	$39 = ($39 + [165])
	goto $label$831 
	
.LABEL $label$832
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$831
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$830
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$829 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493360, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $236($9, $37)
	$7 = (($40 + [5440]) | [1])
	$6 = ($40 + [5529])
	$12 = ($40 + [5528])
	$25 = ($40 + [5517])
	$13 = (($40 + [5544]) | [1])
	$11 = (($40 + [5584]) | [1])
	$21 = (($40 + [5480]) + [24])
	$10 = ($40 + [5516])
	$22 = ($10 + [4])
	$23 = (($40 + [5480]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [5524])
	$27 = ($40 + [5536])
	$18 = ($40 + [5532])
	
.LOOP $label$833:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)12))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$834:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$839 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$838 }
	$39 = ($39 + [165])
	goto $label$837 
	
.LABEL $label$839
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$836 }
	goto $label$835 
	
.LABEL $label$838
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$837
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$836
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$835
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$834 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$840:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$841 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$843 }
	$39 = ($39 + [165])
	goto $label$842 
	
.LABEL $label$843
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$842
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$841
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$840 }
	*(($20 = (($40 + [5600]) + [8]))) = *($28)
	*(($28 = (($40 + [5600]) + [16]))) = *($30)
	*(($30 = (($40 + [5584]) + [8]))) = [0]
	*($40 + [5600]) = *($40 + [8776])
	*($40 + [5584]) = (int_64)0
	$37 = CALL strlen([5488])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$101 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$846 }
	*($40 + [5584]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$845 }
	goto $label$844 
	
.LABEL $label$846
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5584]) = ($26 | [1])
	*($40 + [5588]) = $37
	
.LABEL $label$845
	CALL memcpy($39, [5488], $37)
	
.LABEL $label$844
	*(($39 + $37)) = [0]
	*((($40 + [552]) + [16])) = *($28)
	*((($40 + [552]) + [8])) = *($20)
	*($40 + [552]) = *($40 + [5600])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [552]), ($40 + [5584]))
	if ( ((*($40 + [5584]) & [1]) == 0) ){ goto $label$847 }
	CALL $349(*($30))
	
.LABEL $label$847
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5560]) + [8]))) = *($15)
	*(($28 = (($40 + [5560]) + [16]))) = *($38)
	*(($20 = (($40 + [5544]) + [8]))) = [0]
	*($40 + [5560]) = *($40 + [8824])
	*($40 + [5544]) = (int_64)0
	$37 = CALL strlen([5520])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$100 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$850 }
	*($40 + [5544]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$849 }
	goto $label$848 
	
.LABEL $label$850
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [5544]) = ($26 | [1])
	*($40 + [5548]) = $37
	
.LABEL $label$849
	CALL memcpy($39, [5520], $37)
	
.LABEL $label$848
	*(($39 + $37)) = [0]
	*((($40 + [528]) + [16])) = *($28)
	*((($40 + [528]) + [8])) = *($30)
	*($40 + [528]) = *($40 + [5560])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [528]), ($40 + [5544]))
	if ( ((*($40 + [5544]) & [1]) == 0) ){ goto $label$851 }
	CALL $349(*($20))
	
.LABEL $label$851
	*((($40 + [5480]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [5480]) + [16])) = *($30)
	*($40 + [5480]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1552])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$99 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$854 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$853 }
	goto $label$852 
	
.LABEL $label$854
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [5480]) + [40])) = $37
	
.LABEL $label$853
	CALL memcpy($39, [1552], $37)
	
.LABEL $label$852
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$98 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$857 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$856 }
	goto $label$855 
	
.LABEL $label$857
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$856
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$855
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [5480]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$858 }
	CALL $349(*($27))
	
.LABEL $label$858
	if ( ((*($10) & [1]) == 0) ){ goto $label$859 }
	CALL $349(*($24))
	
.LABEL $label$859
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [5456]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [5456]) + [16]))) = *($37)
	*(($15 = (($40 + [5440]) + [8]))) = [0]
	*($40 + [5456]) = *($40 + [8608])
	*($40 + [5440]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$97 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$862 }
	*($40 + [5440]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$861 }
	goto $label$860 
	
.LABEL $label$862
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5440]) = ($36 | [1])
	*($40 + [5444]) = $37
	
.LABEL $label$861
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$860
	*(($39 + $37)) = [0]
	*((($40 + [504]) + [16])) = *($30)
	*((($40 + [504]) + [8])) = *($38)
	*($40 + [504]) = *($40 + [5456])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [504]), ($40 + [5440]))
	if ( ((*($40 + [5440]) & [1]) == 0) ){ goto $label$863 }
	CALL $349(*($15))
	
.LABEL $label$863
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$864 }
	$36 = CALL $236($9, $37)
	
.LABEL $label$864
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$865 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$866:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$865 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$866 }
	
.LABEL $label$865
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$869 }
	$15 = ($39 + [-24])
	
.LOOP $label$870:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$871 }
	CALL $349($38)
	
.LABEL $label$871
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$870 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$868 }
	goto $label$867 
	
.LABEL $label$869
	$39 = $37
	
.LABEL $label$868
	
.LOOP $label$872:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$873 }
	CALL $349($37)
	
.LABEL $label$873
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$872 }
	
.LABEL $label$867
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$833 }
	goto $label$679 
	
.LABEL $label$689
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1600]
	$33 = (int_64)0
	
.LOOP $label$874:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$875 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$877 }
	$39 = ($39 + [165])
	goto $label$876 
	
.LABEL $label$877
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$876
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$875
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$874 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492912, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $238($9, $37)
	$7 = (($40 + [5072]) | [1])
	$6 = ($40 + [5161])
	$12 = ($40 + [5160])
	$25 = ($40 + [5149])
	$13 = (($40 + [5176]) | [1])
	$11 = (($40 + [5216]) | [1])
	$21 = (($40 + [5112]) + [24])
	$10 = ($40 + [5148])
	$22 = ($10 + [4])
	$23 = (($40 + [5112]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [5156])
	$27 = ($40 + [5168])
	$18 = ($40 + [5164])
	
.LOOP $label$878:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)8))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$879:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$884 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$883 }
	$39 = ($39 + [165])
	goto $label$882 
	
.LABEL $label$884
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$881 }
	goto $label$880 
	
.LABEL $label$883
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$882
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$881
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$880
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$879 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$885:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$886 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$888 }
	$39 = ($39 + [165])
	goto $label$887 
	
.LABEL $label$888
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$887
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$886
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$885 }
	*(($20 = (($40 + [5232]) + [8]))) = *($28)
	*(($28 = (($40 + [5232]) + [16]))) = *($30)
	*(($30 = (($40 + [5216]) + [8]))) = [0]
	*($40 + [5232]) = *($40 + [8776])
	*($40 + [5216]) = (int_64)0
	$37 = CALL strlen([5616])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$96 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$891 }
	*($40 + [5216]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$890 }
	goto $label$889 
	
.LABEL $label$891
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5216]) = ($26 | [1])
	*($40 + [5220]) = $37
	
.LABEL $label$890
	CALL memcpy($39, [5616], $37)
	
.LABEL $label$889
	*(($39 + $37)) = [0]
	*((($40 + [696]) + [16])) = *($28)
	*((($40 + [696]) + [8])) = *($20)
	*($40 + [696]) = *($40 + [5232])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [696]), ($40 + [5216]))
	if ( ((*($40 + [5216]) & [1]) == 0) ){ goto $label$892 }
	CALL $349(*($30))
	
.LABEL $label$892
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5192]) + [8]))) = *($15)
	*(($28 = (($40 + [5192]) + [16]))) = *($38)
	*(($20 = (($40 + [5176]) + [8]))) = [0]
	*($40 + [5192]) = *($40 + [8824])
	*($40 + [5176]) = (int_64)0
	$37 = CALL strlen([5648])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$95 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$895 }
	*($40 + [5176]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$894 }
	goto $label$893 
	
.LABEL $label$895
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [5176]) = ($26 | [1])
	*($40 + [5180]) = $37
	
.LABEL $label$894
	CALL memcpy($39, [5648], $37)
	
.LABEL $label$893
	*(($39 + $37)) = [0]
	*((($40 + [672]) + [16])) = *($28)
	*((($40 + [672]) + [8])) = *($30)
	*($40 + [672]) = *($40 + [5192])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [672]), ($40 + [5176]))
	if ( ((*($40 + [5176]) & [1]) == 0) ){ goto $label$896 }
	CALL $349(*($20))
	
.LABEL $label$896
	*((($40 + [5112]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [5112]) + [16])) = *($30)
	*($40 + [5112]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1584])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$94 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$899 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$898 }
	goto $label$897 
	
.LABEL $label$899
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [5112]) + [40])) = $37
	
.LABEL $label$898
	CALL memcpy($39, [1584], $37)
	
.LABEL $label$897
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$93 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$902 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$901 }
	goto $label$900 
	
.LABEL $label$902
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$901
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$900
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [5112]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$903 }
	CALL $349(*($27))
	
.LABEL $label$903
	if ( ((*($10) & [1]) == 0) ){ goto $label$904 }
	CALL $349(*($24))
	
.LABEL $label$904
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [5088]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [5088]) + [16]))) = *($37)
	*(($15 = (($40 + [5072]) + [8]))) = [0]
	*($40 + [5088]) = *($40 + [8608])
	*($40 + [5072]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$92 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$907 }
	*($40 + [5072]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$906 }
	goto $label$905 
	
.LABEL $label$907
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5072]) = ($36 | [1])
	*($40 + [5076]) = $37
	
.LABEL $label$906
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$905
	*(($39 + $37)) = [0]
	*((($40 + [648]) + [16])) = *($30)
	*((($40 + [648]) + [8])) = *($38)
	*($40 + [648]) = *($40 + [5088])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [648]), ($40 + [5072]))
	if ( ((*($40 + [5072]) & [1]) == 0) ){ goto $label$908 }
	CALL $349(*($15))
	
.LABEL $label$908
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$909 }
	$36 = CALL $238($9, $37)
	
.LABEL $label$909
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$910 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$911:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$910 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$911 }
	
.LABEL $label$910
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$914 }
	$15 = ($39 + [-24])
	
.LOOP $label$915:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$916 }
	CALL $349($38)
	
.LABEL $label$916
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$915 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$913 }
	goto $label$912 
	
.LABEL $label$914
	$39 = $37
	
.LABEL $label$913
	
.LOOP $label$917:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$918 }
	CALL $349($37)
	
.LABEL $label$918
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$917 }
	
.LABEL $label$912
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$878 }
	goto $label$679 
	
.LABEL $label$688
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1632]
	$33 = (int_64)0
	
.LOOP $label$919:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$920 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$922 }
	$39 = ($39 + [165])
	goto $label$921 
	
.LABEL $label$922
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$921
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$920
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$919 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492896, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $240($9, $37)
	$7 = (($40 + [4704]) | [1])
	$6 = ($40 + [4793])
	$12 = ($40 + [4792])
	$25 = ($40 + [4781])
	$13 = (($40 + [4808]) | [1])
	$11 = (($40 + [4848]) | [1])
	$21 = (($40 + [4744]) + [24])
	$10 = ($40 + [4780])
	$22 = ($10 + [4])
	$23 = (($40 + [4744]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4788])
	$27 = ($40 + [4800])
	$18 = ($40 + [4796])
	
.LOOP $label$923:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)7))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$924:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$929 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$928 }
	$39 = ($39 + [165])
	goto $label$927 
	
.LABEL $label$929
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$926 }
	goto $label$925 
	
.LABEL $label$928
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$927
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$926
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$925
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$924 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$930:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$931 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$933 }
	$39 = ($39 + [165])
	goto $label$932 
	
.LABEL $label$933
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$932
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$931
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$930 }
	*(($20 = (($40 + [4864]) + [8]))) = *($28)
	*(($28 = (($40 + [4864]) + [16]))) = *($30)
	*(($30 = (($40 + [4848]) + [8]))) = [0]
	*($40 + [4864]) = *($40 + [8776])
	*($40 + [4848]) = (int_64)0
	$37 = CALL strlen([5744])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$91 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$936 }
	*($40 + [4848]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$935 }
	goto $label$934 
	
.LABEL $label$936
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [4848]) = ($26 | [1])
	*($40 + [4852]) = $37
	
.LABEL $label$935
	CALL memcpy($39, [5744], $37)
	
.LABEL $label$934
	*(($39 + $37)) = [0]
	*((($40 + [840]) + [16])) = *($28)
	*((($40 + [840]) + [8])) = *($20)
	*($40 + [840]) = *($40 + [4864])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [840]), ($40 + [4848]))
	if ( ((*($40 + [4848]) & [1]) == 0) ){ goto $label$937 }
	CALL $349(*($30))
	
.LABEL $label$937
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [4824]) + [8]))) = *($15)
	*(($28 = (($40 + [4824]) + [16]))) = *($38)
	*(($20 = (($40 + [4808]) + [8]))) = [0]
	*($40 + [4824]) = *($40 + [8824])
	*($40 + [4808]) = (int_64)0
	$37 = CALL strlen([5776])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$90 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$940 }
	*($40 + [4808]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$939 }
	goto $label$938 
	
.LABEL $label$940
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4808]) = ($26 | [1])
	*($40 + [4812]) = $37
	
.LABEL $label$939
	CALL memcpy($39, [5776], $37)
	
.LABEL $label$938
	*(($39 + $37)) = [0]
	*((($40 + [816]) + [16])) = *($28)
	*((($40 + [816]) + [8])) = *($30)
	*($40 + [816]) = *($40 + [4824])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [816]), ($40 + [4808]))
	if ( ((*($40 + [4808]) & [1]) == 0) ){ goto $label$941 }
	CALL $349(*($20))
	
.LABEL $label$941
	*((($40 + [4744]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [4744]) + [16])) = *($30)
	*($40 + [4744]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1616])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$89 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$944 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$943 }
	goto $label$942 
	
.LABEL $label$944
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [4744]) + [40])) = $37
	
.LABEL $label$943
	CALL memcpy($39, [1616], $37)
	
.LABEL $label$942
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$88 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$947 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$946 }
	goto $label$945 
	
.LABEL $label$947
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$946
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$945
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [4744]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$948 }
	CALL $349(*($27))
	
.LABEL $label$948
	if ( ((*($10) & [1]) == 0) ){ goto $label$949 }
	CALL $349(*($24))
	
.LABEL $label$949
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [4720]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [4720]) + [16]))) = *($37)
	*(($15 = (($40 + [4704]) + [8]))) = [0]
	*($40 + [4720]) = *($40 + [8608])
	*($40 + [4704]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$87 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$952 }
	*($40 + [4704]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$951 }
	goto $label$950 
	
.LABEL $label$952
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [4704]) = ($36 | [1])
	*($40 + [4708]) = $37
	
.LABEL $label$951
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$950
	*(($39 + $37)) = [0]
	*((($40 + [792]) + [16])) = *($30)
	*((($40 + [792]) + [8])) = *($38)
	*($40 + [792]) = *($40 + [4720])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [792]), ($40 + [4704]))
	if ( ((*($40 + [4704]) & [1]) == 0) ){ goto $label$953 }
	CALL $349(*($15))
	
.LABEL $label$953
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$954 }
	$36 = CALL $240($9, $37)
	
.LABEL $label$954
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$955 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$956:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$955 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$956 }
	
.LABEL $label$955
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$959 }
	$15 = ($39 + [-24])
	
.LOOP $label$960:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$961 }
	CALL $349($38)
	
.LABEL $label$961
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$960 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$958 }
	goto $label$957 
	
.LABEL $label$959
	$39 = $37
	
.LABEL $label$958
	
.LOOP $label$962:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$963 }
	CALL $349($37)
	
.LABEL $label$963
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$962 }
	
.LABEL $label$957
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$923 }
	goto $label$679 
	
.LABEL $label$687
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1664]
	$33 = (int_64)0
	
.LOOP $label$964:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$965 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$967 }
	$39 = ($39 + [165])
	goto $label$966 
	
.LABEL $label$967
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$966
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$965
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$964 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492880, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $242($9, $37)
	$7 = (($40 + [4336]) | [1])
	$6 = ($40 + [4425])
	$12 = ($40 + [4424])
	$25 = ($40 + [4413])
	$13 = (($40 + [4440]) | [1])
	$11 = (($40 + [4480]) | [1])
	$21 = (($40 + [4376]) + [24])
	$10 = ($40 + [4412])
	$22 = ($10 + [4])
	$23 = (($40 + [4376]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4420])
	$27 = ($40 + [4432])
	$18 = ($40 + [4428])
	
.LOOP $label$968:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)6))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$969:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$974 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$973 }
	$39 = ($39 + [165])
	goto $label$972 
	
.LABEL $label$974
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$971 }
	goto $label$970 
	
.LABEL $label$973
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$972
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$971
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$970
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$969 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$975:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$976 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$978 }
	$39 = ($39 + [165])
	goto $label$977 
	
.LABEL $label$978
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$977
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$976
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$975 }
	*(($20 = (($40 + [4496]) + [8]))) = *($28)
	*(($28 = (($40 + [4496]) + [16]))) = *($30)
	*(($30 = (($40 + [4480]) + [8]))) = [0]
	*($40 + [4496]) = *($40 + [8776])
	*($40 + [4480]) = (int_64)0
	$37 = CALL strlen([5872])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$86 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$981 }
	*($40 + [4480]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$980 }
	goto $label$979 
	
.LABEL $label$981
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [4480]) = ($26 | [1])
	*($40 + [4484]) = $37
	
.LABEL $label$980
	CALL memcpy($39, [5872], $37)
	
.LABEL $label$979
	*(($39 + $37)) = [0]
	*((($40 + [984]) + [16])) = *($28)
	*((($40 + [984]) + [8])) = *($20)
	*($40 + [984]) = *($40 + [4496])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [984]), ($40 + [4480]))
	if ( ((*($40 + [4480]) & [1]) == 0) ){ goto $label$982 }
	CALL $349(*($30))
	
.LABEL $label$982
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [4456]) + [8]))) = *($15)
	*(($28 = (($40 + [4456]) + [16]))) = *($38)
	*(($20 = (($40 + [4440]) + [8]))) = [0]
	*($40 + [4456]) = *($40 + [8824])
	*($40 + [4440]) = (int_64)0
	$37 = CALL strlen([5904])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$85 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$985 }
	*($40 + [4440]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$984 }
	goto $label$983 
	
.LABEL $label$985
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4440]) = ($26 | [1])
	*($40 + [4444]) = $37
	
.LABEL $label$984
	CALL memcpy($39, [5904], $37)
	
.LABEL $label$983
	*(($39 + $37)) = [0]
	*((($40 + [960]) + [16])) = *($28)
	*((($40 + [960]) + [8])) = *($30)
	*($40 + [960]) = *($40 + [4456])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [960]), ($40 + [4440]))
	if ( ((*($40 + [4440]) & [1]) == 0) ){ goto $label$986 }
	CALL $349(*($20))
	
.LABEL $label$986
	*((($40 + [4376]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [4376]) + [16])) = *($30)
	*($40 + [4376]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1648])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$84 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$989 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$988 }
	goto $label$987 
	
.LABEL $label$989
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [4376]) + [40])) = $37
	
.LABEL $label$988
	CALL memcpy($39, [1648], $37)
	
.LABEL $label$987
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$83 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$992 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$991 }
	goto $label$990 
	
.LABEL $label$992
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$991
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$990
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [4376]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$993 }
	CALL $349(*($27))
	
.LABEL $label$993
	if ( ((*($10) & [1]) == 0) ){ goto $label$994 }
	CALL $349(*($24))
	
.LABEL $label$994
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [4352]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [4352]) + [16]))) = *($37)
	*(($15 = (($40 + [4336]) + [8]))) = [0]
	*($40 + [4352]) = *($40 + [8608])
	*($40 + [4336]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$82 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$997 }
	*($40 + [4336]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$996 }
	goto $label$995 
	
.LABEL $label$997
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [4336]) = ($36 | [1])
	*($40 + [4340]) = $37
	
.LABEL $label$996
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$995
	*(($39 + $37)) = [0]
	*((($40 + [936]) + [16])) = *($30)
	*((($40 + [936]) + [8])) = *($38)
	*($40 + [936]) = *($40 + [4352])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [936]), ($40 + [4336]))
	if ( ((*($40 + [4336]) & [1]) == 0) ){ goto $label$998 }
	CALL $349(*($15))
	
.LABEL $label$998
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$999 }
	$36 = CALL $242($9, $37)
	
.LABEL $label$999
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1000 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1001:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1000 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1001 }
	
.LABEL $label$1000
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1004 }
	$15 = ($39 + [-24])
	
.LOOP $label$1005:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1006 }
	CALL $349($38)
	
.LABEL $label$1006
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1005 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1003 }
	goto $label$1002 
	
.LABEL $label$1004
	$39 = $37
	
.LABEL $label$1003
	
.LOOP $label$1007:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1008 }
	CALL $349($37)
	
.LABEL $label$1008
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1007 }
	
.LABEL $label$1002
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$968 }
	goto $label$679 
	
.LABEL $label$686
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1696]
	$33 = (int_64)0
	
.LOOP $label$1009:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1010 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1012 }
	$39 = ($39 + [165])
	goto $label$1011 
	
.LABEL $label$1012
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1011
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1010
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1009 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492864, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $243($9, $37)
	$7 = (($40 + [4152]) | [1])
	$6 = ($40 + [4241])
	$12 = ($40 + [4240])
	$25 = ($40 + [4229])
	$13 = (($40 + [4256]) | [1])
	$11 = (($40 + [4296]) | [1])
	$21 = (($40 + [4192]) + [24])
	$10 = ($40 + [4228])
	$22 = ($10 + [4])
	$23 = (($40 + [4192]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4236])
	$27 = ($40 + [4248])
	$18 = ($40 + [4244])
	
.LOOP $label$1013:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)6))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1014:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1019 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1018 }
	$39 = ($39 + [165])
	goto $label$1017 
	
.LABEL $label$1019
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1016 }
	goto $label$1015 
	
.LABEL $label$1018
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1017
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1016
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1015
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1014 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1020:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1021 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1023 }
	$39 = ($39 + [165])
	goto $label$1022 
	
.LABEL $label$1023
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1022
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1021
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1020 }
	*(($20 = (($40 + [4312]) + [8]))) = *($28)
	*(($28 = (($40 + [4312]) + [16]))) = *($30)
	*(($30 = (($40 + [4296]) + [8]))) = [0]
	*($40 + [4312]) = *($40 + [8776])
	*($40 + [4296]) = (int_64)0
	$37 = CALL strlen([5936])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$81 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1026 }
	*($40 + [4296]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1025 }
	goto $label$1024 
	
.LABEL $label$1026
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [4296]) = ($26 | [1])
	*($40 + [4300]) = $37
	
.LABEL $label$1025
	CALL memcpy($39, [5936], $37)
	
.LABEL $label$1024
	*(($39 + $37)) = [0]
	*((($40 + [1056]) + [16])) = *($28)
	*((($40 + [1056]) + [8])) = *($20)
	*($40 + [1056]) = *($40 + [4312])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [1056]), ($40 + [4296]))
	if ( ((*($40 + [4296]) & [1]) == 0) ){ goto $label$1027 }
	CALL $349(*($30))
	
.LABEL $label$1027
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [4272]) + [8]))) = *($15)
	*(($28 = (($40 + [4272]) + [16]))) = *($38)
	*(($20 = (($40 + [4256]) + [8]))) = [0]
	*($40 + [4272]) = *($40 + [8824])
	*($40 + [4256]) = (int_64)0
	$37 = CALL strlen([5968])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$80 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1030 }
	*($40 + [4256]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1029 }
	goto $label$1028 
	
.LABEL $label$1030
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4256]) = ($26 | [1])
	*($40 + [4260]) = $37
	
.LABEL $label$1029
	CALL memcpy($39, [5968], $37)
	
.LABEL $label$1028
	*(($39 + $37)) = [0]
	*((($40 + [1032]) + [16])) = *($28)
	*((($40 + [1032]) + [8])) = *($30)
	*($40 + [1032]) = *($40 + [4272])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1032]), ($40 + [4256]))
	if ( ((*($40 + [4256]) & [1]) == 0) ){ goto $label$1031 }
	CALL $349(*($20))
	
.LABEL $label$1031
	*((($40 + [4192]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [4192]) + [16])) = *($30)
	*($40 + [4192]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1680])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$79 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1034 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1033 }
	goto $label$1032 
	
.LABEL $label$1034
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [4192]) + [40])) = $37
	
.LABEL $label$1033
	CALL memcpy($39, [1680], $37)
	
.LABEL $label$1032
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$78 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1037 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1036 }
	goto $label$1035 
	
.LABEL $label$1037
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1036
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1035
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [4192]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1038 }
	CALL $349(*($27))
	
.LABEL $label$1038
	if ( ((*($10) & [1]) == 0) ){ goto $label$1039 }
	CALL $349(*($24))
	
.LABEL $label$1039
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [4168]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [4168]) + [16]))) = *($37)
	*(($15 = (($40 + [4152]) + [8]))) = [0]
	*($40 + [4168]) = *($40 + [8608])
	*($40 + [4152]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$77 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1042 }
	*($40 + [4152]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1041 }
	goto $label$1040 
	
.LABEL $label$1042
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [4152]) = ($36 | [1])
	*($40 + [4156]) = $37
	
.LABEL $label$1041
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1040
	*(($39 + $37)) = [0]
	*((($40 + [1008]) + [16])) = *($30)
	*((($40 + [1008]) + [8])) = *($38)
	*($40 + [1008]) = *($40 + [4168])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [1008]), ($40 + [4152]))
	if ( ((*($40 + [4152]) & [1]) == 0) ){ goto $label$1043 }
	CALL $349(*($15))
	
.LABEL $label$1043
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1044 }
	$36 = CALL $243($9, $37)
	
.LABEL $label$1044
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1045 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1046:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1045 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1046 }
	
.LABEL $label$1045
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1049 }
	$15 = ($39 + [-24])
	
.LOOP $label$1050:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1051 }
	CALL $349($38)
	
.LABEL $label$1051
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1050 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1048 }
	goto $label$1047 
	
.LABEL $label$1049
	$39 = $37
	
.LABEL $label$1048
	
.LOOP $label$1052:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1053 }
	CALL $349($37)
	
.LABEL $label$1053
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1052 }
	
.LABEL $label$1047
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1013 }
	goto $label$679 
	
.LABEL $label$685
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1728]
	$33 = (int_64)0
	
.LOOP $label$1054:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1055 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1057 }
	$39 = ($39 + [165])
	goto $label$1056 
	
.LABEL $label$1057
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1056
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1055
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1054 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492848, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $241($9, $37)
	$7 = (($40 + [4520]) | [1])
	$6 = ($40 + [4609])
	$12 = ($40 + [4608])
	$25 = ($40 + [4597])
	$13 = (($40 + [4624]) | [1])
	$11 = (($40 + [4664]) | [1])
	$21 = (($40 + [4560]) + [24])
	$10 = ($40 + [4596])
	$22 = ($10 + [4])
	$23 = (($40 + [4560]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4604])
	$27 = ($40 + [4616])
	$18 = ($40 + [4612])
	
.LOOP $label$1058:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)7))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1059:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1064 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1063 }
	$39 = ($39 + [165])
	goto $label$1062 
	
.LABEL $label$1064
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1061 }
	goto $label$1060 
	
.LABEL $label$1063
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1062
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1061
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1060
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1059 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1065:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1066 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1068 }
	$39 = ($39 + [165])
	goto $label$1067 
	
.LABEL $label$1068
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1067
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1066
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1065 }
	*(($20 = (($40 + [4680]) + [8]))) = *($28)
	*(($28 = (($40 + [4680]) + [16]))) = *($30)
	*(($30 = (($40 + [4664]) + [8]))) = [0]
	*($40 + [4680]) = *($40 + [8776])
	*($40 + [4664]) = (int_64)0
	$37 = CALL strlen([5808])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$76 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1071 }
	*($40 + [4664]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1070 }
	goto $label$1069 
	
.LABEL $label$1071
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [4664]) = ($26 | [1])
	*($40 + [4668]) = $37
	
.LABEL $label$1070
	CALL memcpy($39, [5808], $37)
	
.LABEL $label$1069
	*(($39 + $37)) = [0]
	*((($40 + [912]) + [16])) = *($28)
	*((($40 + [912]) + [8])) = *($20)
	*($40 + [912]) = *($40 + [4680])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [912]), ($40 + [4664]))
	if ( ((*($40 + [4664]) & [1]) == 0) ){ goto $label$1072 }
	CALL $349(*($30))
	
.LABEL $label$1072
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [4640]) + [8]))) = *($15)
	*(($28 = (($40 + [4640]) + [16]))) = *($38)
	*(($20 = (($40 + [4624]) + [8]))) = [0]
	*($40 + [4640]) = *($40 + [8824])
	*($40 + [4624]) = (int_64)0
	$37 = CALL strlen([5840])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$75 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1075 }
	*($40 + [4624]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1074 }
	goto $label$1073 
	
.LABEL $label$1075
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4624]) = ($26 | [1])
	*($40 + [4628]) = $37
	
.LABEL $label$1074
	CALL memcpy($39, [5840], $37)
	
.LABEL $label$1073
	*(($39 + $37)) = [0]
	*((($40 + [888]) + [16])) = *($28)
	*((($40 + [888]) + [8])) = *($30)
	*($40 + [888]) = *($40 + [4640])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [888]), ($40 + [4624]))
	if ( ((*($40 + [4624]) & [1]) == 0) ){ goto $label$1076 }
	CALL $349(*($20))
	
.LABEL $label$1076
	*((($40 + [4560]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [4560]) + [16])) = *($30)
	*($40 + [4560]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1712])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1079 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1078 }
	goto $label$1077 
	
.LABEL $label$1079
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [4560]) + [40])) = $37
	
.LABEL $label$1078
	CALL memcpy($39, [1712], $37)
	
.LABEL $label$1077
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$73 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1082 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1081 }
	goto $label$1080 
	
.LABEL $label$1082
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1081
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1080
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [4560]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1083 }
	CALL $349(*($27))
	
.LABEL $label$1083
	if ( ((*($10) & [1]) == 0) ){ goto $label$1084 }
	CALL $349(*($24))
	
.LABEL $label$1084
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [4536]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [4536]) + [16]))) = *($37)
	*(($15 = (($40 + [4520]) + [8]))) = [0]
	*($40 + [4536]) = *($40 + [8608])
	*($40 + [4520]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$72 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1087 }
	*($40 + [4520]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1086 }
	goto $label$1085 
	
.LABEL $label$1087
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [4520]) = ($36 | [1])
	*($40 + [4524]) = $37
	
.LABEL $label$1086
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1085
	*(($39 + $37)) = [0]
	*((($40 + [864]) + [16])) = *($30)
	*((($40 + [864]) + [8])) = *($38)
	*($40 + [864]) = *($40 + [4536])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [864]), ($40 + [4520]))
	if ( ((*($40 + [4520]) & [1]) == 0) ){ goto $label$1088 }
	CALL $349(*($15))
	
.LABEL $label$1088
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1089 }
	$36 = CALL $241($9, $37)
	
.LABEL $label$1089
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1090 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1091:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1090 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1091 }
	
.LABEL $label$1090
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1094 }
	$15 = ($39 + [-24])
	
.LOOP $label$1095:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1096 }
	CALL $349($38)
	
.LABEL $label$1096
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1095 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1093 }
	goto $label$1092 
	
.LABEL $label$1094
	$39 = $37
	
.LABEL $label$1093
	
.LOOP $label$1097:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1098 }
	CALL $349($37)
	
.LABEL $label$1098
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1097 }
	
.LABEL $label$1092
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1058 }
	goto $label$679 
	
.LABEL $label$684
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1760]
	$33 = (int_64)0
	
.LOOP $label$1099:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1100 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1102 }
	$39 = ($39 + [165])
	goto $label$1101 
	
.LABEL $label$1102
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1101
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1100
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1099 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492400, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $239($9, $37)
	$7 = (($40 + [4888]) | [1])
	$6 = ($40 + [4977])
	$12 = ($40 + [4976])
	$25 = ($40 + [4965])
	$13 = (($40 + [4992]) | [1])
	$11 = (($40 + [5032]) | [1])
	$21 = (($40 + [4928]) + [24])
	$10 = ($40 + [4964])
	$22 = ($10 + [4])
	$23 = (($40 + [4928]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4972])
	$27 = ($40 + [4984])
	$18 = ($40 + [4980])
	
.LOOP $label$1103:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)8))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1104:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1109 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1108 }
	$39 = ($39 + [165])
	goto $label$1107 
	
.LABEL $label$1109
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1106 }
	goto $label$1105 
	
.LABEL $label$1108
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1107
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1106
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1105
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1104 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1110:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1111 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1113 }
	$39 = ($39 + [165])
	goto $label$1112 
	
.LABEL $label$1113
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1112
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1111
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1110 }
	*(($20 = (($40 + [5048]) + [8]))) = *($28)
	*(($28 = (($40 + [5048]) + [16]))) = *($30)
	*(($30 = (($40 + [5032]) + [8]))) = [0]
	*($40 + [5048]) = *($40 + [8776])
	*($40 + [5032]) = (int_64)0
	$37 = CALL strlen([5680])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$71 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1116 }
	*($40 + [5032]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1115 }
	goto $label$1114 
	
.LABEL $label$1116
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5032]) = ($26 | [1])
	*($40 + [5036]) = $37
	
.LABEL $label$1115
	CALL memcpy($39, [5680], $37)
	
.LABEL $label$1114
	*(($39 + $37)) = [0]
	*((($40 + [768]) + [16])) = *($28)
	*((($40 + [768]) + [8])) = *($20)
	*($40 + [768]) = *($40 + [5048])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [768]), ($40 + [5032]))
	if ( ((*($40 + [5032]) & [1]) == 0) ){ goto $label$1117 }
	CALL $349(*($30))
	
.LABEL $label$1117
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5008]) + [8]))) = *($15)
	*(($28 = (($40 + [5008]) + [16]))) = *($38)
	*(($20 = (($40 + [4992]) + [8]))) = [0]
	*($40 + [5008]) = *($40 + [8824])
	*($40 + [4992]) = (int_64)0
	$37 = CALL strlen([5712])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$70 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1120 }
	*($40 + [4992]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1119 }
	goto $label$1118 
	
.LABEL $label$1120
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4992]) = ($26 | [1])
	*($40 + [4996]) = $37
	
.LABEL $label$1119
	CALL memcpy($39, [5712], $37)
	
.LABEL $label$1118
	*(($39 + $37)) = [0]
	*((($40 + [744]) + [16])) = *($28)
	*((($40 + [744]) + [8])) = *($30)
	*($40 + [744]) = *($40 + [5008])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [744]), ($40 + [4992]))
	if ( ((*($40 + [4992]) & [1]) == 0) ){ goto $label$1121 }
	CALL $349(*($20))
	
.LABEL $label$1121
	*((($40 + [4928]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [4928]) + [16])) = *($30)
	*($40 + [4928]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1744])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$69 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1124 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1123 }
	goto $label$1122 
	
.LABEL $label$1124
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [4928]) + [40])) = $37
	
.LABEL $label$1123
	CALL memcpy($39, [1744], $37)
	
.LABEL $label$1122
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$68 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1127 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1126 }
	goto $label$1125 
	
.LABEL $label$1127
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1126
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1125
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [4928]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1128 }
	CALL $349(*($27))
	
.LABEL $label$1128
	if ( ((*($10) & [1]) == 0) ){ goto $label$1129 }
	CALL $349(*($24))
	
.LABEL $label$1129
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [4904]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [4904]) + [16]))) = *($37)
	*(($15 = (($40 + [4888]) + [8]))) = [0]
	*($40 + [4904]) = *($40 + [8608])
	*($40 + [4888]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1132 }
	*($40 + [4888]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1131 }
	goto $label$1130 
	
.LABEL $label$1132
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [4888]) = ($36 | [1])
	*($40 + [4892]) = $37
	
.LABEL $label$1131
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1130
	*(($39 + $37)) = [0]
	*((($40 + [720]) + [16])) = *($30)
	*((($40 + [720]) + [8])) = *($38)
	*($40 + [720]) = *($40 + [4904])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [720]), ($40 + [4888]))
	if ( ((*($40 + [4888]) & [1]) == 0) ){ goto $label$1133 }
	CALL $349(*($15))
	
.LABEL $label$1133
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1134 }
	$36 = CALL $239($9, $37)
	
.LABEL $label$1134
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1135 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1136:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1135 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1136 }
	
.LABEL $label$1135
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1139 }
	$15 = ($39 + [-24])
	
.LOOP $label$1140:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1141 }
	CALL $349($38)
	
.LABEL $label$1141
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1140 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1138 }
	goto $label$1137 
	
.LABEL $label$1139
	$39 = $37
	
.LABEL $label$1138
	
.LOOP $label$1142:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1143 }
	CALL $349($37)
	
.LABEL $label$1143
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1142 }
	
.LABEL $label$1137
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1103 }
	goto $label$679 
	
.LABEL $label$683
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1792]
	$33 = (int_64)0
	
.LOOP $label$1144:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1145 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1147 }
	$39 = ($39 + [165])
	goto $label$1146 
	
.LABEL $label$1147
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1146
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1145
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1144 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492384, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $237($9, $37)
	$7 = (($40 + [5256]) | [1])
	$6 = ($40 + [5345])
	$12 = ($40 + [5344])
	$25 = ($40 + [5333])
	$13 = (($40 + [5360]) | [1])
	$11 = (($40 + [5400]) | [1])
	$21 = (($40 + [5296]) + [24])
	$10 = ($40 + [5332])
	$22 = ($10 + [4])
	$23 = (($40 + [5296]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [5340])
	$27 = ($40 + [5352])
	$18 = ($40 + [5348])
	
.LOOP $label$1148:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)12))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1149:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1154 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1153 }
	$39 = ($39 + [165])
	goto $label$1152 
	
.LABEL $label$1154
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1151 }
	goto $label$1150 
	
.LABEL $label$1153
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1152
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1151
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1150
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1149 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1155:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1156 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1158 }
	$39 = ($39 + [165])
	goto $label$1157 
	
.LABEL $label$1158
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1157
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1156
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1155 }
	*(($20 = (($40 + [5416]) + [8]))) = *($28)
	*(($28 = (($40 + [5416]) + [16]))) = *($30)
	*(($30 = (($40 + [5400]) + [8]))) = [0]
	*($40 + [5416]) = *($40 + [8776])
	*($40 + [5400]) = (int_64)0
	$37 = CALL strlen([5552])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$66 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1161 }
	*($40 + [5400]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1160 }
	goto $label$1159 
	
.LABEL $label$1161
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5400]) = ($26 | [1])
	*($40 + [5404]) = $37
	
.LABEL $label$1160
	CALL memcpy($39, [5552], $37)
	
.LABEL $label$1159
	*(($39 + $37)) = [0]
	*((($40 + [624]) + [16])) = *($28)
	*((($40 + [624]) + [8])) = *($20)
	*($40 + [624]) = *($40 + [5416])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [624]), ($40 + [5400]))
	if ( ((*($40 + [5400]) & [1]) == 0) ){ goto $label$1162 }
	CALL $349(*($30))
	
.LABEL $label$1162
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5376]) + [8]))) = *($15)
	*(($28 = (($40 + [5376]) + [16]))) = *($38)
	*(($20 = (($40 + [5360]) + [8]))) = [0]
	*($40 + [5376]) = *($40 + [8824])
	*($40 + [5360]) = (int_64)0
	$37 = CALL strlen([5584])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1165 }
	*($40 + [5360]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1164 }
	goto $label$1163 
	
.LABEL $label$1165
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [5360]) = ($26 | [1])
	*($40 + [5364]) = $37
	
.LABEL $label$1164
	CALL memcpy($39, [5584], $37)
	
.LABEL $label$1163
	*(($39 + $37)) = [0]
	*((($40 + [600]) + [16])) = *($28)
	*((($40 + [600]) + [8])) = *($30)
	*($40 + [600]) = *($40 + [5376])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [600]), ($40 + [5360]))
	if ( ((*($40 + [5360]) & [1]) == 0) ){ goto $label$1166 }
	CALL $349(*($20))
	
.LABEL $label$1166
	*((($40 + [5296]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [5296]) + [16])) = *($30)
	*($40 + [5296]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1776])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1169 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1168 }
	goto $label$1167 
	
.LABEL $label$1169
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [5296]) + [40])) = $37
	
.LABEL $label$1168
	CALL memcpy($39, [1776], $37)
	
.LABEL $label$1167
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1172 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1171 }
	goto $label$1170 
	
.LABEL $label$1172
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1171
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1170
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [5296]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1173 }
	CALL $349(*($27))
	
.LABEL $label$1173
	if ( ((*($10) & [1]) == 0) ){ goto $label$1174 }
	CALL $349(*($24))
	
.LABEL $label$1174
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [5272]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [5272]) + [16]))) = *($37)
	*(($15 = (($40 + [5256]) + [8]))) = [0]
	*($40 + [5272]) = *($40 + [8608])
	*($40 + [5256]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$62 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1177 }
	*($40 + [5256]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1176 }
	goto $label$1175 
	
.LABEL $label$1177
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5256]) = ($36 | [1])
	*($40 + [5260]) = $37
	
.LABEL $label$1176
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1175
	*(($39 + $37)) = [0]
	*((($40 + [576]) + [16])) = *($30)
	*((($40 + [576]) + [8])) = *($38)
	*($40 + [576]) = *($40 + [5272])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [576]), ($40 + [5256]))
	if ( ((*($40 + [5256]) & [1]) == 0) ){ goto $label$1178 }
	CALL $349(*($15))
	
.LABEL $label$1178
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1179 }
	$36 = CALL $237($9, $37)
	
.LABEL $label$1179
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1180 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1181:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1180 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1181 }
	
.LABEL $label$1180
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1184 }
	$15 = ($39 + [-24])
	
.LOOP $label$1185:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1186 }
	CALL $349($38)
	
.LABEL $label$1186
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1185 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1183 }
	goto $label$1182 
	
.LABEL $label$1184
	$39 = $37
	
.LABEL $label$1183
	
.LOOP $label$1187:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1188 }
	CALL $349($37)
	
.LABEL $label$1188
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1187 }
	
.LABEL $label$1182
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1148 }
	goto $label$679 
	
.LABEL $label$682
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1824]
	$33 = (int_64)0
	
.LOOP $label$1189:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1190 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1192 }
	$39 = ($39 + [165])
	goto $label$1191 
	
.LABEL $label$1192
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1191
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1190
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1189 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492368, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $235($9, $37)
	$7 = (($40 + [5624]) | [1])
	$6 = ($40 + [5713])
	$12 = ($40 + [5712])
	$25 = ($40 + [5701])
	$13 = (($40 + [5728]) | [1])
	$11 = (($40 + [5768]) | [1])
	$21 = (($40 + [5664]) + [24])
	$10 = ($40 + [5700])
	$22 = ($10 + [4])
	$23 = (($40 + [5664]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [5708])
	$27 = ($40 + [5720])
	$18 = ($40 + [5716])
	
.LOOP $label$1193:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)18))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1194:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1199 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1198 }
	$39 = ($39 + [165])
	goto $label$1197 
	
.LABEL $label$1199
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1196 }
	goto $label$1195 
	
.LABEL $label$1198
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1197
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1196
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1195
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1194 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1200:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1201 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1203 }
	$39 = ($39 + [165])
	goto $label$1202 
	
.LABEL $label$1203
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1202
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1201
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1200 }
	*(($20 = (($40 + [5784]) + [8]))) = *($28)
	*(($28 = (($40 + [5784]) + [16]))) = *($30)
	*(($30 = (($40 + [5768]) + [8]))) = [0]
	*($40 + [5784]) = *($40 + [8776])
	*($40 + [5768]) = (int_64)0
	$37 = CALL strlen([5424])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$61 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1206 }
	*($40 + [5768]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1205 }
	goto $label$1204 
	
.LABEL $label$1206
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [5768]) = ($26 | [1])
	*($40 + [5772]) = $37
	
.LABEL $label$1205
	CALL memcpy($39, [5424], $37)
	
.LABEL $label$1204
	*(($39 + $37)) = [0]
	*((($40 + [480]) + [16])) = *($28)
	*((($40 + [480]) + [8])) = *($20)
	*($40 + [480]) = *($40 + [5784])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [480]), ($40 + [5768]))
	if ( ((*($40 + [5768]) & [1]) == 0) ){ goto $label$1207 }
	CALL $349(*($30))
	
.LABEL $label$1207
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [5744]) + [8]))) = *($15)
	*(($28 = (($40 + [5744]) + [16]))) = *($38)
	*(($20 = (($40 + [5728]) + [8]))) = [0]
	*($40 + [5744]) = *($40 + [8824])
	*($40 + [5728]) = (int_64)0
	$37 = CALL strlen([5456])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$60 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1210 }
	*($40 + [5728]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1209 }
	goto $label$1208 
	
.LABEL $label$1210
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [5728]) = ($26 | [1])
	*($40 + [5732]) = $37
	
.LABEL $label$1209
	CALL memcpy($39, [5456], $37)
	
.LABEL $label$1208
	*(($39 + $37)) = [0]
	*((($40 + [456]) + [16])) = *($28)
	*((($40 + [456]) + [8])) = *($30)
	*($40 + [456]) = *($40 + [5744])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [456]), ($40 + [5728]))
	if ( ((*($40 + [5728]) & [1]) == 0) ){ goto $label$1211 }
	CALL $349(*($20))
	
.LABEL $label$1211
	*((($40 + [5664]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [5664]) + [16])) = *($30)
	*($40 + [5664]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1808])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$59 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1214 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1213 }
	goto $label$1212 
	
.LABEL $label$1214
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [5664]) + [40])) = $37
	
.LABEL $label$1213
	CALL memcpy($39, [1808], $37)
	
.LABEL $label$1212
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$58 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1217 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1216 }
	goto $label$1215 
	
.LABEL $label$1217
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1216
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1215
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [5664]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1218 }
	CALL $349(*($27))
	
.LABEL $label$1218
	if ( ((*($10) & [1]) == 0) ){ goto $label$1219 }
	CALL $349(*($24))
	
.LABEL $label$1219
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [5640]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [5640]) + [16]))) = *($37)
	*(($15 = (($40 + [5624]) + [8]))) = [0]
	*($40 + [5640]) = *($40 + [8608])
	*($40 + [5624]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$57 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1222 }
	*($40 + [5624]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1221 }
	goto $label$1220 
	
.LABEL $label$1222
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5624]) = ($36 | [1])
	*($40 + [5628]) = $37
	
.LABEL $label$1221
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1220
	*(($39 + $37)) = [0]
	*((($40 + [432]) + [16])) = *($30)
	*((($40 + [432]) + [8])) = *($38)
	*($40 + [432]) = *($40 + [5640])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [432]), ($40 + [5624]))
	if ( ((*($40 + [5624]) & [1]) == 0) ){ goto $label$1223 }
	CALL $349(*($15))
	
.LABEL $label$1223
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1224 }
	$36 = CALL $235($9, $37)
	
.LABEL $label$1224
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1225 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1226:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1225 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1226 }
	
.LABEL $label$1225
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1229 }
	$15 = ($39 + [-24])
	
.LOOP $label$1230:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1231 }
	CALL $349($38)
	
.LABEL $label$1231
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1230 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1228 }
	goto $label$1227 
	
.LABEL $label$1229
	$39 = $37
	
.LABEL $label$1228
	
.LOOP $label$1232:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1233 }
	CALL $349($37)
	
.LABEL $label$1233
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1232 }
	
.LABEL $label$1227
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1193 }
	goto $label$679 
	
.LABEL $label$681
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1856]
	$33 = (int_64)0
	
.LOOP $label$1234:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1235 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1237 }
	$39 = ($39 + [165])
	goto $label$1236 
	
.LABEL $label$1237
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1236
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1235
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1234 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492352, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $233($9, $37)
	$7 = (($40 + [5992]) | [1])
	$6 = ($40 + [6081])
	$12 = ($40 + [6080])
	$25 = ($40 + [6069])
	$13 = (($40 + [6096]) | [1])
	$11 = (($40 + [6136]) | [1])
	$21 = (($40 + [6032]) + [24])
	$10 = ($40 + [6068])
	$22 = ($10 + [4])
	$23 = (($40 + [6032]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6076])
	$27 = ($40 + [6088])
	$18 = ($40 + [6084])
	
.LOOP $label$1238:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)30))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1239:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1244 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1243 }
	$39 = ($39 + [165])
	goto $label$1242 
	
.LABEL $label$1244
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1241 }
	goto $label$1240 
	
.LABEL $label$1243
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1242
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1241
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1240
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1239 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1245:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1246 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1248 }
	$39 = ($39 + [165])
	goto $label$1247 
	
.LABEL $label$1248
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1247
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1246
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1245 }
	*(($20 = (($40 + [6152]) + [8]))) = *($28)
	*(($28 = (($40 + [6152]) + [16]))) = *($30)
	*(($30 = (($40 + [6136]) + [8]))) = [0]
	*($40 + [6152]) = *($40 + [8776])
	*($40 + [6136]) = (int_64)0
	$37 = CALL strlen([5296])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$56 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1251 }
	*($40 + [6136]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1250 }
	goto $label$1249 
	
.LABEL $label$1251
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [6136]) = ($26 | [1])
	*($40 + [6140]) = $37
	
.LABEL $label$1250
	CALL memcpy($39, [5296], $37)
	
.LABEL $label$1249
	*(($39 + $37)) = [0]
	*((($40 + [336]) + [16])) = *($28)
	*((($40 + [336]) + [8])) = *($20)
	*($40 + [336]) = *($40 + [6152])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [336]), ($40 + [6136]))
	if ( ((*($40 + [6136]) & [1]) == 0) ){ goto $label$1252 }
	CALL $349(*($30))
	
.LABEL $label$1252
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [6112]) + [8]))) = *($15)
	*(($28 = (($40 + [6112]) + [16]))) = *($38)
	*(($20 = (($40 + [6096]) + [8]))) = [0]
	*($40 + [6112]) = *($40 + [8824])
	*($40 + [6096]) = (int_64)0
	$37 = CALL strlen([5328])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1255 }
	*($40 + [6096]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1254 }
	goto $label$1253 
	
.LABEL $label$1255
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [6096]) = ($26 | [1])
	*($40 + [6100]) = $37
	
.LABEL $label$1254
	CALL memcpy($39, [5328], $37)
	
.LABEL $label$1253
	*(($39 + $37)) = [0]
	*((($40 + [312]) + [16])) = *($28)
	*((($40 + [312]) + [8])) = *($30)
	*($40 + [312]) = *($40 + [6112])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [312]), ($40 + [6096]))
	if ( ((*($40 + [6096]) & [1]) == 0) ){ goto $label$1256 }
	CALL $349(*($20))
	
.LABEL $label$1256
	*((($40 + [6032]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6032]) + [16])) = *($30)
	*($40 + [6032]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1840])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1259 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1258 }
	goto $label$1257 
	
.LABEL $label$1259
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6032]) + [40])) = $37
	
.LABEL $label$1258
	CALL memcpy($39, [1840], $37)
	
.LABEL $label$1257
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1262 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1261 }
	goto $label$1260 
	
.LABEL $label$1262
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1261
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1260
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6032]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1263 }
	CALL $349(*($27))
	
.LABEL $label$1263
	if ( ((*($10) & [1]) == 0) ){ goto $label$1264 }
	CALL $349(*($24))
	
.LABEL $label$1264
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6008]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6008]) + [16]))) = *($37)
	*(($15 = (($40 + [5992]) + [8]))) = [0]
	*($40 + [6008]) = *($40 + [8608])
	*($40 + [5992]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1267 }
	*($40 + [5992]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1266 }
	goto $label$1265 
	
.LABEL $label$1267
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [5992]) = ($36 | [1])
	*($40 + [5996]) = $37
	
.LABEL $label$1266
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1265
	*(($39 + $37)) = [0]
	*((($40 + [288]) + [16])) = *($30)
	*((($40 + [288]) + [8])) = *($38)
	*($40 + [288]) = *($40 + [6008])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [288]), ($40 + [5992]))
	if ( ((*($40 + [5992]) & [1]) == 0) ){ goto $label$1268 }
	CALL $349(*($15))
	
.LABEL $label$1268
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1269 }
	$36 = CALL $233($9, $37)
	
.LABEL $label$1269
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1270 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1271:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1270 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1271 }
	
.LABEL $label$1270
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1274 }
	$15 = ($39 + [-24])
	
.LOOP $label$1275:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1276 }
	CALL $349($38)
	
.LABEL $label$1276
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1275 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1273 }
	goto $label$1272 
	
.LABEL $label$1274
	$39 = $37
	
.LABEL $label$1273
	
.LOOP $label$1277:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1278 }
	CALL $349($37)
	
.LABEL $label$1278
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1277 }
	
.LABEL $label$1272
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1238 }
	goto $label$679 
	
.LABEL $label$680
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1888]
	$33 = (int_64)0
	
.LOOP $label$1279:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1280 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1282 }
	$39 = ($39 + [165])
	goto $label$1281 
	
.LABEL $label$1282
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1281
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1280
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1279 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492336, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$679 }
	$36 = CALL $231($9, $37)
	$7 = (($40 + [6360]) | [1])
	$6 = ($40 + [6449])
	$12 = ($40 + [6448])
	$25 = ($40 + [6437])
	$13 = (($40 + [6464]) | [1])
	$11 = (($40 + [6504]) | [1])
	$21 = (($40 + [6400]) + [24])
	$10 = ($40 + [6436])
	$22 = ($10 + [4])
	$23 = (($40 + [6400]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [6444])
	$27 = ($40 + [6456])
	$18 = ($40 + [6452])
	
.LOOP $label$1283:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)60))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1284:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1289 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1288 }
	$39 = ($39 + [165])
	goto $label$1287 
	
.LABEL $label$1289
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1286 }
	goto $label$1285 
	
.LABEL $label$1288
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1287
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1286
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1285
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1284 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1290:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1291 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1293 }
	$39 = ($39 + [165])
	goto $label$1292 
	
.LABEL $label$1293
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1292
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1291
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1290 }
	*(($20 = (($40 + [6520]) + [8]))) = *($28)
	*(($28 = (($40 + [6520]) + [16]))) = *($30)
	*(($30 = (($40 + [6504]) + [8]))) = [0]
	*($40 + [6520]) = *($40 + [8776])
	*($40 + [6504]) = (int_64)0
	$37 = CALL strlen([5168])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1296 }
	*($40 + [6504]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1295 }
	goto $label$1294 
	
.LABEL $label$1296
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [6504]) = ($26 | [1])
	*($40 + [6508]) = $37
	
.LABEL $label$1295
	CALL memcpy($39, [5168], $37)
	
.LABEL $label$1294
	*(($39 + $37)) = [0]
	*((($40 + [192]) + [16])) = *($28)
	*((($40 + [192]) + [8])) = *($20)
	*($40 + [192]) = *($40 + [6520])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [192]), ($40 + [6504]))
	if ( ((*($40 + [6504]) & [1]) == 0) ){ goto $label$1297 }
	CALL $349(*($30))
	
.LABEL $label$1297
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [6480]) + [8]))) = *($15)
	*(($28 = (($40 + [6480]) + [16]))) = *($38)
	*(($20 = (($40 + [6464]) + [8]))) = [0]
	*($40 + [6480]) = *($40 + [8824])
	*($40 + [6464]) = (int_64)0
	$37 = CALL strlen([5200])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1300 }
	*($40 + [6464]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1299 }
	goto $label$1298 
	
.LABEL $label$1300
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [6464]) = ($26 | [1])
	*($40 + [6468]) = $37
	
.LABEL $label$1299
	CALL memcpy($39, [5200], $37)
	
.LABEL $label$1298
	*(($39 + $37)) = [0]
	*((($40 + [168]) + [16])) = *($28)
	*((($40 + [168]) + [8])) = *($30)
	*($40 + [168]) = *($40 + [6480])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [168]), ($40 + [6464]))
	if ( ((*($40 + [6464]) & [1]) == 0) ){ goto $label$1301 }
	CALL $349(*($20))
	
.LABEL $label$1301
	*((($40 + [6400]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [6400]) + [16])) = *($30)
	*($40 + [6400]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1872])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1304 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1303 }
	goto $label$1302 
	
.LABEL $label$1304
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [6400]) + [40])) = $37
	
.LABEL $label$1303
	CALL memcpy($39, [1872], $37)
	
.LABEL $label$1302
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1307 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1306 }
	goto $label$1305 
	
.LABEL $label$1307
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1306
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1305
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [6400]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1308 }
	CALL $349(*($27))
	
.LABEL $label$1308
	if ( ((*($10) & [1]) == 0) ){ goto $label$1309 }
	CALL $349(*($24))
	
.LABEL $label$1309
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [4136]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [4136])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [6376]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [6376]) + [16]))) = *($37)
	*(($15 = (($40 + [6360]) + [8]))) = [0]
	*($40 + [6376]) = *($40 + [8608])
	*($40 + [6360]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1312 }
	*($40 + [6360]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1311 }
	goto $label$1310 
	
.LABEL $label$1312
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [6360]) = ($36 | [1])
	*($40 + [6364]) = $37
	
.LABEL $label$1311
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1310
	*(($39 + $37)) = [0]
	*((($40 + [144]) + [16])) = *($30)
	*((($40 + [144]) + [8])) = *($38)
	*($40 + [144]) = *($40 + [6376])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [144]), ($40 + [6360]))
	if ( ((*($40 + [6360]) & [1]) == 0) ){ goto $label$1313 }
	CALL $349(*($15))
	
.LABEL $label$1313
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [4136]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1314 }
	$36 = CALL $231($9, $37)
	
.LABEL $label$1314
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1315 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1316:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1315 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1316 }
	
.LABEL $label$1315
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1319 }
	$15 = ($39 + [-24])
	
.LOOP $label$1320:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1321 }
	CALL $349($38)
	
.LABEL $label$1321
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1320 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1318 }
	goto $label$1317 
	
.LABEL $label$1319
	$39 = $37
	
.LABEL $label$1318
	
.LOOP $label$1322:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1323 }
	CALL $349($37)
	
.LABEL $label$1323
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1322 }
	
.LABEL $label$1317
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1283 }
	
.LABEL $label$679
	$30 = [0]
	*($40 + [4144]) = [0]
	*($40 + [4140]) = [0]
	$15 = (($40 + [4136]) | [4])
	*($40 + [4136]) = $15
	if ( [0] ){ goto $label$24 }
	*(($37 = CALL $348([24]))) = (int_64)0
	*($37 + [8]) = $15
	*($37 + [16]) = *($40 + [8952])
	*($40 + [4140]) = $37
	$39 = *(*($40 + [4136]))
	if ( ($39 == 0) ){ goto $label$1324 }
	*($40 + [4136]) = $39
	
.LABEL $label$1324
	CALL $127(*($40 + [4140]), $37)
	*(($37 = (($40 + [4136]) + [8]))) = (*($37) + [1])
	$36 = *($40 + [4140])
	if ( ($36 == 0) ){ goto $label$24 }
	$32 = *((($40 + [8952]) + [8]))
	$37 = $36
	$39 = $15
	
.LOOP $label$1327:
	$34 = *($37 + [16])
	if ( ((uint_64)$32 >= (uint_64)$34) ){ goto $label$1329 }
	$38 = *($37)
	if ( $38 ){ goto $label$1328 }
	goto $label$1325 
	
.LABEL $label$1329
	if ( ((uint_64)$34 >= (uint_64)$32) ){ goto $label$1326 }
	$39 = ($37 + [4])
	$38 = *($37 + [4])
	if ( ($38 == 0) ){ goto $label$1326 }
	$37 = $39
	
.LABEL $label$1328
	$39 = $37
	$37 = $38
	goto $label$1327 
	
.LABEL $label$1326
	$30 = $36
	if ( *($39) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$1325
	$30 = $36
	$39 = $37
	if ( *($39) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$171
	CALL $350(($40 + [8736]))
	
.LABEL $label$170
	CALL $350(($40 + [8696]))
	
.LABEL $label$169
	CALL $350($10)
	
.LABEL $label$168
	CALL $350($12)
	
.LABEL $label$167
	CALL $350(($40 + [8568]))
	
.LABEL $label$166
	CALL $350(($40 + [7424]))
	
.LABEL $label$165
	CALL $350(($40 + [7384]))
	
.LABEL $label$164
	CALL $350($10)
	
.LABEL $label$163
	CALL $350($12)
	
.LABEL $label$162
	CALL $350(($40 + [7280]))
	
.LABEL $label$161
	CALL $350(($40 + [7240]))
	
.LABEL $label$160
	CALL $350(($40 + [7200]))
	
.LABEL $label$159
	CALL $350($10)
	
.LABEL $label$158
	CALL $350($12)
	
.LABEL $label$157
	CALL $350(($40 + [7096]))
	
.LABEL $label$156
	CALL $350(($40 + [7056]))
	
.LABEL $label$155
	CALL $350(($40 + [7016]))
	
.LABEL $label$154
	CALL $350($10)
	
.LABEL $label$153
	CALL $350($12)
	
.LABEL $label$152
	CALL $350(($40 + [6912]))
	
.LABEL $label$151
	CALL $350(($40 + [6872]))
	
.LABEL $label$150
	CALL $350(($40 + [6832]))
	
.LABEL $label$149
	CALL $350($10)
	
.LABEL $label$148
	CALL $350($12)
	
.LABEL $label$147
	CALL $350(($40 + [6728]))
	
.LABEL $label$146
	CALL $350(($40 + [8528]))
	
.LABEL $label$145
	CALL $350(($40 + [8488]))
	
.LABEL $label$144
	CALL $350($10)
	
.LABEL $label$143
	CALL $350($12)
	
.LABEL $label$142
	CALL $350(($40 + [8384]))
	
.LABEL $label$141
	CALL $350(($40 + [8344]))
	
.LABEL $label$140
	CALL $350(($40 + [8304]))
	
.LABEL $label$139
	CALL $350($10)
	
.LABEL $label$138
	CALL $350($12)
	
.LABEL $label$137
	CALL $350(($40 + [8200]))
	
.LABEL $label$136
	CALL $350(($40 + [8160]))
	
.LABEL $label$135
	CALL $350(($40 + [8120]))
	
.LABEL $label$134
	CALL $350($10)
	
.LABEL $label$133
	CALL $350($12)
	
.LABEL $label$132
	CALL $350(($40 + [8016]))
	
.LABEL $label$131
	CALL $350(($40 + [7976]))
	
.LABEL $label$130
	CALL $350(($40 + [7936]))
	
.LABEL $label$129
	CALL $350($10)
	
.LABEL $label$128
	CALL $350($12)
	
.LABEL $label$127
	CALL $350(($40 + [7832]))
	
.LABEL $label$126
	CALL $350(($40 + [7792]))
	
.LABEL $label$125
	CALL $350(($40 + [7752]))
	
.LABEL $label$124
	CALL $350($10)
	
.LABEL $label$123
	CALL $350($12)
	
.LABEL $label$122
	CALL $350(($40 + [7648]))
	
.LABEL $label$121
	CALL $350(($40 + [7608]))
	
.LABEL $label$120
	CALL $350(($40 + [7568]))
	
.LABEL $label$119
	CALL $350($10)
	
.LABEL $label$118
	CALL $350($12)
	
.LABEL $label$117
	CALL $350(($40 + [7464]))
	
.LABEL $label$116
	CALL $350(($40 + [6688]))
	
.LABEL $label$115
	CALL $350(($40 + [6648]))
	
.LABEL $label$114
	CALL $350($10)
	
.LABEL $label$113
	CALL $350($12)
	
.LABEL $label$112
	CALL $350(($40 + [6544]))
	
.LABEL $label$111
	CALL $350(($40 + [6320]))
	
.LABEL $label$110
	CALL $350(($40 + [6280]))
	
.LABEL $label$109
	CALL $350($10)
	
.LABEL $label$108
	CALL $350($12)
	
.LABEL $label$107
	CALL $350(($40 + [6176]))
	
.LABEL $label$106
	CALL $350(($40 + [5952]))
	
.LABEL $label$105
	CALL $350(($40 + [5912]))
	
.LABEL $label$104
	CALL $350($10)
	
.LABEL $label$103
	CALL $350($12)
	
.LABEL $label$102
	CALL $350(($40 + [5808]))
	
.LABEL $label$101
	CALL $350(($40 + [5584]))
	
.LABEL $label$100
	CALL $350(($40 + [5544]))
	
.LABEL $label$99
	CALL $350($10)
	
.LABEL $label$98
	CALL $350($12)
	
.LABEL $label$97
	CALL $350(($40 + [5440]))
	
.LABEL $label$96
	CALL $350(($40 + [5216]))
	
.LABEL $label$95
	CALL $350(($40 + [5176]))
	
.LABEL $label$94
	CALL $350($10)
	
.LABEL $label$93
	CALL $350($12)
	
.LABEL $label$92
	CALL $350(($40 + [5072]))
	
.LABEL $label$91
	CALL $350(($40 + [4848]))
	
.LABEL $label$90
	CALL $350(($40 + [4808]))
	
.LABEL $label$89
	CALL $350($10)
	
.LABEL $label$88
	CALL $350($12)
	
.LABEL $label$87
	CALL $350(($40 + [4704]))
	
.LABEL $label$86
	CALL $350(($40 + [4480]))
	
.LABEL $label$85
	CALL $350(($40 + [4440]))
	
.LABEL $label$84
	CALL $350($10)
	
.LABEL $label$83
	CALL $350($12)
	
.LABEL $label$82
	CALL $350(($40 + [4336]))
	
.LABEL $label$81
	CALL $350(($40 + [4296]))
	
.LABEL $label$80
	CALL $350(($40 + [4256]))
	
.LABEL $label$79
	CALL $350($10)
	
.LABEL $label$78
	CALL $350($12)
	
.LABEL $label$77
	CALL $350(($40 + [4152]))
	
.LABEL $label$76
	CALL $350(($40 + [4664]))
	
.LABEL $label$75
	CALL $350(($40 + [4624]))
	
.LABEL $label$74
	CALL $350($10)
	
.LABEL $label$73
	CALL $350($12)
	
.LABEL $label$72
	CALL $350(($40 + [4520]))
	
.LABEL $label$71
	CALL $350(($40 + [5032]))
	
.LABEL $label$70
	CALL $350(($40 + [4992]))
	
.LABEL $label$69
	CALL $350($10)
	
.LABEL $label$68
	CALL $350($12)
	
.LABEL $label$67
	CALL $350(($40 + [4888]))
	
.LABEL $label$66
	CALL $350(($40 + [5400]))
	
.LABEL $label$65
	CALL $350(($40 + [5360]))
	
.LABEL $label$64
	CALL $350($10)
	
.LABEL $label$63
	CALL $350($12)
	
.LABEL $label$62
	CALL $350(($40 + [5256]))
	
.LABEL $label$61
	CALL $350(($40 + [5768]))
	
.LABEL $label$60
	CALL $350(($40 + [5728]))
	
.LABEL $label$59
	CALL $350($10)
	
.LABEL $label$58
	CALL $350($12)
	
.LABEL $label$57
	CALL $350(($40 + [5624]))
	
.LABEL $label$56
	CALL $350(($40 + [6136]))
	
.LABEL $label$55
	CALL $350(($40 + [6096]))
	
.LABEL $label$54
	CALL $350($10)
	
.LABEL $label$53
	CALL $350($12)
	
.LABEL $label$52
	CALL $350(($40 + [5992]))
	
.LABEL $label$51
	CALL $350(($40 + [6504]))
	
.LABEL $label$50
	CALL $350(($40 + [6464]))
	
.LABEL $label$49
	CALL $350($10)
	
.LABEL $label$48
	CALL $350($12)
	
.LABEL $label$47
	CALL $350(($40 + [6360]))
	
.LABEL $label$25
	CALL $350($38)
	
.LABEL $label$24
	$37 = $15
	$39 = $15
	if ( (*($39) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	if ( $30 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	*(($38 = CALL $348([24]))) = (int_64)0
	*($38 + [8]) = $37
	*($39) = $38
	*($38 + [16]) = *((($40 + [8952]) + [8]))
	$37 = *(*($40 + [4136]))
	if ( ($37 == 0) ){ goto $label$1330 }
	*($40 + [4136]) = $37
	$38 = *($39)
	
.LABEL $label$1330
	CALL $127(*($40 + [4140]), $38)
	*(($37 = (($40 + [4136]) + [8]))) = (*($37) + [1])
	$30 = *($40 + [4140])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$32 = *(($40 + [8968]))
	$37 = $30
	$39 = $15
	
.LOOP $label$1331:
	$34 = *($37 + [16])
	if ( ((uint_64)$32 >= (uint_64)$34) ){ goto $label$1333 }
	$38 = *($37)
	if ( $38 ){ goto $label$1332 }
	goto $label$19 
	
.LABEL $label$1333
	if ( ((uint_64)$34 >= (uint_64)$32) ){ goto $label$18 }
	$39 = ($37 + [4])
	$38 = *($37 + [4])
	if ( ($38 == 0) ){ goto $label$18 }
	$37 = $39
	
.LABEL $label$1332
	$39 = $37
	$37 = $38
	goto $label$1331 
	
.LABEL $label$20
	$37 = $15
	$39 = $15
	if ( *($39) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$19
	$39 = $37
	
.LABEL $label$18
	if ( *($39) ){ goto $label$16 }
	
.LABEL $label$17
	*(($38 = CALL $348([24]))) = (int_64)0
	*($38 + [8]) = $37
	*($39) = $38
	*($38 + [16]) = *(($40 + [8968]))
	$37 = *(*($40 + [4136]))
	if ( ($37 == 0) ){ goto $label$1334 }
	*($40 + [4136]) = $37
	$38 = *($39)
	
.LABEL $label$1334
	CALL $127(*($40 + [4140]), $38)
	*(($37 = ($40 + [4144]))) = (*($37) + [1])
	$30 = *($40 + [4140])
	
.LABEL $label$16
	if ( ($30 == 0) ){ goto $label$1343 }
	$34 = *(*($40 + [4136]) + [16])
	$32 = ((int_64)$34 + (int_64)1)
	$39 = $15
	$37 = $30
	
.LOOP $label$1345:
	if ( ((uint_64)*($37 + [16]) >= (uint_64)$32) ){ goto $label$1346 }
	$37 = *($37 + [4])
	if ( $37 ){ goto $label$1345 }
	goto $label$1344 
	
.LABEL $label$1346
	$39 = $37
	$38 = *($37)
	$37 = $38
	if ( $38 ){ goto $label$1345 }
	
.LABEL $label$1344
	if ( ((int_32)$39 == (int_32)$15) ){ goto $label$1343 }
	if ( (uint_64)($32 <= *($39 + [16])) ){ goto $label$1343 }
	$32 = ((int_64)$34 + (int_64)2)
	$37 = $15
	
.LOOP $label$1348:
	if ( ((uint_64)*($30 + [16]) >= (uint_64)$32) ){ goto $label$1349 }
	$30 = *($30 + [4])
	if ( $30 ){ goto $label$1348 }
	goto $label$1347 
	
.LABEL $label$1349
	$37 = $30
	$39 = *($30)
	$30 = $39
	if ( $39 ){ goto $label$1348 }
	
.LABEL $label$1347
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$1343 }
	if ( (uint_64)($32 <= *($37 + [16])) ){ goto $label$1343 }
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [1216]
	$33 = (int_64)0
	
.LOOP $label$1350:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1351 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1353 }
	$39 = ($39 + [165])
	goto $label$1352 
	
.LABEL $label$1353
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1352
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1351
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1350 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494400, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1343 }
	$36 = CALL $244($9, $37)
	$7 = (($40 + [3952]) | [1])
	$6 = ($40 + [4041])
	$12 = ($40 + [4040])
	$25 = ($40 + [4029])
	$13 = (($40 + [4056]) | [1])
	$11 = (($40 + [4096]) | [1])
	$21 = (($40 + [3992]) + [24])
	$10 = ($40 + [4028])
	$22 = ($10 + [4])
	$23 = (($40 + [3992]) + [32])
	$29 = ($9 + [28])
	$24 = ($40 + [4036])
	$27 = ($40 + [4048])
	$18 = ($40 + [4044])
	
.LOOP $label$1354:
	$14 = $36
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4080])
	CALL printi(*($36 + [8]))
	CALL prints([80])
	*($40 + [8824]) = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($36 + [8])))) * (float_64)(float_64)7))
	$32 = (int_64)0
	$31 = (int_64)59
	$37 = [160]
	$33 = (int_64)0
	
.LOOP $label$1355:
	if ( ((uint_64)$32 > (uint_64)(int_64)10) ){ goto $label$1360 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1359 }
	$39 = ($39 + [165])
	goto $label$1358 
	
.LABEL $label$1360
	$34 = (int_64)0
	if ( ((int_64)$32 == (int_64)11) ){ goto $label$1357 }
	goto $label$1356 
	
.LABEL $label$1359
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1358
	$34 = (int_64)((int_64)(CASTING uint_64)(uint_32 $39) << (int_64)56) >> (int_64)56)
	
.LABEL $label$1357
	$34 = ((int_64)((int_64)$34 & (int_64)31) << (int_64)((int_64)$31 & (int_64)4294967295))
	
.LABEL $label$1356
	$37 = ($37 + [1])
	$31 = ((int_64)$31 + (int_64)-5)
	$33 = ((int_64)$34 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)1)
	if ( ((int_64)$32 != (int_64)13) ){ goto $label$1355 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($40 + [8800]), $1, $33, (int_64)1397703940)
	$32 = *($40 + [8800])
	*($40 + [8776]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8776])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6080])
	CALL printi($32)
	CALL prints([2416])
	$32 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $32)) * (float_64)(float_64)0.04))
	CALL printui($32)
	CALL prints([80])
	$34 = *($40 + [8824])
	$32 = ( $32 ? $34 : ((uint_64)$34 > (uint_64)$32) )
	*($40 + [8824]) = $32
	$38 = (($40 + [8824]) + [16])
	*(($30 = (($40 + [8776]) + [16]))) = *($38)
	$15 = (($40 + [8824]) + [8])
	*(($28 = (($40 + [8776]) + [8]))) = *($15)
	*($40 + [8776]) = *($40 + [8824])
	*($40 + [8776]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $32) * (float_64)(float_64)0.02))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6096])
	CALL $12(($40 + [8776]))
	CALL prints([944])
	CALL printn(*($30))
	CALL prints([80])
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [560]
	$33 = (int_64)0
	
.LOOP $label$1361:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1362 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1364 }
	$39 = ($39 + [165])
	goto $label$1363 
	
.LABEL $label$1364
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1363
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1362
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1361 }
	*(($20 = (($40 + [4112]) + [8]))) = *($28)
	*(($28 = (($40 + [4112]) + [16]))) = *($30)
	*(($30 = (($40 + [4096]) + [8]))) = [0]
	*($40 + [4112]) = *($40 + [8776])
	*($40 + [4096]) = (int_64)0
	$37 = CALL strlen([6000])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1342 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1367 }
	*($40 + [4096]) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1366 }
	goto $label$1365 
	
.LABEL $label$1367
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($30) = $39
	*($40 + [4096]) = ($26 | [1])
	*($40 + [4100]) = $37
	
.LABEL $label$1366
	CALL memcpy($39, [6000], $37)
	
.LABEL $label$1365
	*(($39 + $37)) = [0]
	*((($40 + [48]) + [16])) = *($28)
	*((($40 + [48]) + [8])) = *($20)
	*($40 + [48]) = *($40 + [4112])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $33, ($40 + [48]), ($40 + [4096]))
	if ( ((*($40 + [4096]) & [1]) == 0) ){ goto $label$1368 }
	CALL $349(*($30))
	
.LABEL $label$1368
	*($40 + [8824]) = (int_64))(*($40 + [8824]) - *($40 + [8776]))
	*($40 + [8608]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8608])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([4128])
	CALL $12(($40 + [8824]))
	CALL prints([944])
	CALL printn(*($38))
	CALL prints([80])
	$32 = *($36)
	*(($30 = (($40 + [4072]) + [8]))) = *($15)
	*(($28 = (($40 + [4072]) + [16]))) = *($38)
	*(($20 = (($40 + [4056]) + [8]))) = [0]
	*($40 + [4072]) = *($40 + [8824])
	*($40 + [4056]) = (int_64)0
	$37 = CALL strlen([6032])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1341 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1371 }
	*($40 + [4056]) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1370 }
	goto $label$1369 
	
.LABEL $label$1371
	$26 = (($37 + [16]) & [-16])
	$39 = CALL $348($26)
	*($20) = $39
	*($40 + [4056]) = ($26 | [1])
	*($40 + [4060]) = $37
	
.LABEL $label$1370
	CALL memcpy($39, [6032], $37)
	
.LABEL $label$1369
	*(($39 + $37)) = [0]
	*((($40 + [24]) + [16])) = *($28)
	*((($40 + [24]) + [8])) = *($30)
	*($40 + [24]) = *($40 + [4072])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, ($40 + [24]), ($40 + [4056]))
	if ( ((*($40 + [4056]) & [1]) == 0) ){ goto $label$1372 }
	CALL $349(*($20))
	
.LABEL $label$1372
	*((($40 + [3992]) + [8])) = *($36)
	$30 = ($36 + [8])
	*((($40 + [3992]) + [16])) = *($30)
	*($40 + [3992]) = $35
	*($21) = *($40 + [8824])
	*($22) = (int_64)0
	*($10) = [0]
	*($23) = [1]
	$37 = CALL strlen([1200])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1340 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1375 }
	*($10) = ($37 << [1])
	$39 = $25
	if ( $37 ){ goto $label$1374 }
	goto $label$1373 
	
.LABEL $label$1375
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($10) = ($28 | [1])
	*($24) = $39
	*((($40 + [3992]) + [40])) = $37
	
.LABEL $label$1374
	CALL memcpy($39, [1200], $37)
	
.LABEL $label$1373
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1339 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1378 }
	*($12) = ($37 << [1])
	$39 = $6
	if ( $37 ){ goto $label$1377 }
	goto $label$1376 
	
.LABEL $label$1378
	$28 = (($37 + [16]) & [-16])
	$39 = CALL $348($28)
	*($12) = ($28 | [1])
	*($27) = $39
	*($18) = $37
	
.LABEL $label$1377
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1376
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3992]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1379 }
	CALL $349(*($27))
	
.LABEL $label$1379
	if ( ((*($10) & [1]) == 0) ){ goto $label$1380 }
	CALL $349(*($24))
	
.LABEL $label$1380
	*(($37 = (($40 + [8608]) + [16]))) = *($38)
	*(($39 = (($40 + [8608]) + [8]))) = *($15)
	*($40 + [8608]) = *($40 + [8824])
	*($40 + [8608]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($30))) * (float_64)(float_64)0.005))
	*($40 + [9112]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$38 = CALL asctime(CALL $432(($40 + [9112])))
	CALL prints([32])
	CALL prints($38)
	CALL prints([4176])
	CALL $12(($40 + [8608]))
	CALL prints([944])
	CALL printn(*($37))
	CALL prints([80])
	*(($38 = (($40 + [3968]) + [8]))) = *($39)
	$32 = *($36 + [16])
	*(($30 = (($40 + [3968]) + [16]))) = *($37)
	*(($15 = (($40 + [3952]) + [8]))) = [0]
	*($40 + [3968]) = *($40 + [8608])
	*($40 + [3952]) = (int_64)0
	$37 = CALL strlen([4192])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1338 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1383 }
	*($40 + [3952]) = ($37 << [1])
	$39 = $7
	if ( $37 ){ goto $label$1382 }
	goto $label$1381 
	
.LABEL $label$1383
	$36 = (($37 + [16]) & [-16])
	$39 = CALL $348($36)
	*($15) = $39
	*($40 + [3952]) = ($36 | [1])
	*($40 + [3956]) = $37
	
.LABEL $label$1382
	CALL memcpy($39, [4192], $37)
	
.LABEL $label$1381
	*(($39 + $37)) = [0]
	*(($40 + [16])) = *($30)
	*(($40 + [8])) = *($38)
	*($40) = *($40 + [3968])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $32, $40, ($40 + [3952]))
	if ( ((*($40 + [3952]) & [1]) == 0) ){ goto $label$1384 }
	CALL $349(*($15))
	
.LABEL $label$1384
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [9112]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1385 }
	$36 = CALL $244($9, $37)
	
.LABEL $label$1385
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1386 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1387:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1386 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1387 }
	
.LABEL $label$1386
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1390 }
	$15 = ($39 + [-24])
	
.LOOP $label$1391:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1392 }
	CALL $349($38)
	
.LABEL $label$1392
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1391 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1389 }
	goto $label$1388 
	
.LABEL $label$1390
	$39 = $37
	
.LABEL $label$1389
	
.LOOP $label$1393:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1394 }
	CALL $349($37)
	
.LABEL $label$1394
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1393 }
	
.LABEL $label$1388
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	if ( $36 ){ goto $label$1354 }
	
.LABEL $label$1343
	$8 = *(($0 + [16]))
	$32 = (int_64)0
	$34 = (int_64)59
	$37 = [992]
	$33 = (int_64)0
	
.LOOP $label$1395:
	$31 = (int_64)0
	if ( ((uint_64)$32 > (uint_64)(int_64)11) ){ goto $label$1396 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1398 }
	$39 = ($39 + [165])
	goto $label$1397 
	
.LABEL $label$1398
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1397
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$34 & (int_64)4294967295))
	
.LABEL $label$1396
	$37 = ($37 + [1])
	$32 = ((int_64)$32 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$34 = ((int_64)$34 + (int_64)-5)
	if ( ((int_64)$34 != (int_64)-6) ){ goto $label$1395 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494368, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1451 }
	$13 = ($40 + [3937])
	$12 = ($40 + [3936])
	$11 = ($40 + [3925])
	$20 = (($40 + [3888]) + [8])
	$21 = (($40 + [3888]) + [16])
	$22 = (($40 + [3888]) + [24])
	$23 = (($40 + [3888]) + [32])
	$10 = ($40 + [3924])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3932])
	$26 = ($40 + [3944])
	$25 = ($40 + [3940])
	$14 = CALL $245($9, $37)
	$36 = $14
	
.LOOP $label$1452:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3888]) = $35
	$37 = CALL strlen([976])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1450 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1455 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1454 }
	goto $label$1453 
	
.LABEL $label$1455
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3888]) + [40])) = $37
	
.LABEL $label$1454
	CALL memcpy($39, [976], $37)
	
.LABEL $label$1453
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1449 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1458 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1457 }
	goto $label$1456 
	
.LABEL $label$1458
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1457
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1456
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3888]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1459 }
	CALL $349(*($26))
	
.LABEL $label$1459
	if ( ((*($10) & [1]) == 0) ){ goto $label$1460 }
	CALL $349(*($27))
	
.LABEL $label$1460
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1461 }
	$36 = CALL $245($9, $37)
	
.LABEL $label$1461
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1462 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1463:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1462 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1463 }
	
.LABEL $label$1462
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1466 }
	$15 = ($39 + [-24])
	
.LOOP $label$1467:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1468 }
	CALL $349($38)
	
.LABEL $label$1468
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1467 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1465 }
	goto $label$1464 
	
.LABEL $label$1466
	$39 = $37
	
.LABEL $label$1465
	
.LOOP $label$1469:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1470 }
	CALL $349($37)
	
.LABEL $label$1470
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1469 }
	
.LABEL $label$1464
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1452 }
	
.LABEL $label$1451
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1120]
	$33 = (int_64)0
	
.LOOP $label$1471:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1472 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1474 }
	$39 = ($39 + [165])
	goto $label$1473 
	
.LABEL $label$1474
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1473
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1472
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1471 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494448, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1475 }
	$13 = ($40 + [3873])
	$12 = ($40 + [3872])
	$11 = ($40 + [3861])
	$20 = (($40 + [3824]) + [8])
	$21 = (($40 + [3824]) + [16])
	$22 = (($40 + [3824]) + [24])
	$23 = (($40 + [3824]) + [32])
	$10 = ($40 + [3860])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3868])
	$26 = ($40 + [3880])
	$25 = ($40 + [3876])
	$14 = CALL $246($9, $37)
	$36 = $14
	
.LOOP $label$1476:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3824]) = $35
	$37 = CALL strlen([1104])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1448 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1479 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1478 }
	goto $label$1477 
	
.LABEL $label$1479
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3824]) + [40])) = $37
	
.LABEL $label$1478
	CALL memcpy($39, [1104], $37)
	
.LABEL $label$1477
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1447 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1482 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1481 }
	goto $label$1480 
	
.LABEL $label$1482
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1481
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1480
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3824]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1483 }
	CALL $349(*($26))
	
.LABEL $label$1483
	if ( ((*($10) & [1]) == 0) ){ goto $label$1484 }
	CALL $349(*($27))
	
.LABEL $label$1484
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1485 }
	$36 = CALL $246($9, $37)
	
.LABEL $label$1485
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1486 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1487:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1486 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1487 }
	
.LABEL $label$1486
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1490 }
	$15 = ($39 + [-24])
	
.LOOP $label$1491:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1492 }
	CALL $349($38)
	
.LABEL $label$1492
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1491 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1489 }
	goto $label$1488 
	
.LABEL $label$1490
	$39 = $37
	
.LABEL $label$1489
	
.LOOP $label$1493:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1494 }
	CALL $349($37)
	
.LABEL $label$1494
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1493 }
	
.LABEL $label$1488
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1476 }
	
.LABEL $label$1475
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1152]
	$33 = (int_64)0
	
.LOOP $label$1495:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1496 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1498 }
	$39 = ($39 + [165])
	goto $label$1497 
	
.LABEL $label$1498
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1497
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1496
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1495 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494432, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1499 }
	$13 = ($40 + [3809])
	$12 = ($40 + [3808])
	$11 = ($40 + [3797])
	$20 = (($40 + [3760]) + [8])
	$21 = (($40 + [3760]) + [16])
	$22 = (($40 + [3760]) + [24])
	$23 = (($40 + [3760]) + [32])
	$10 = ($40 + [3796])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3804])
	$26 = ($40 + [3816])
	$25 = ($40 + [3812])
	$14 = CALL $247($9, $37)
	$36 = $14
	
.LOOP $label$1500:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3760]) = $35
	$37 = CALL strlen([1136])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1446 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1503 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1502 }
	goto $label$1501 
	
.LABEL $label$1503
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3760]) + [40])) = $37
	
.LABEL $label$1502
	CALL memcpy($39, [1136], $37)
	
.LABEL $label$1501
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1445 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1506 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1505 }
	goto $label$1504 
	
.LABEL $label$1506
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1505
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1504
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3760]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1507 }
	CALL $349(*($26))
	
.LABEL $label$1507
	if ( ((*($10) & [1]) == 0) ){ goto $label$1508 }
	CALL $349(*($27))
	
.LABEL $label$1508
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1509 }
	$36 = CALL $247($9, $37)
	
.LABEL $label$1509
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1510 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1511:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1510 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1511 }
	
.LABEL $label$1510
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1514 }
	$15 = ($39 + [-24])
	
.LOOP $label$1515:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1516 }
	CALL $349($38)
	
.LABEL $label$1516
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1515 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1513 }
	goto $label$1512 
	
.LABEL $label$1514
	$39 = $37
	
.LABEL $label$1513
	
.LOOP $label$1517:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1518 }
	CALL $349($37)
	
.LABEL $label$1518
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1517 }
	
.LABEL $label$1512
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1500 }
	
.LABEL $label$1499
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1184]
	$33 = (int_64)0
	
.LOOP $label$1519:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1520 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1522 }
	$39 = ($39 + [165])
	goto $label$1521 
	
.LABEL $label$1522
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1521
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1520
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1519 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494416, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1523 }
	$13 = ($40 + [3745])
	$12 = ($40 + [3744])
	$11 = ($40 + [3733])
	$20 = (($40 + [3696]) + [8])
	$21 = (($40 + [3696]) + [16])
	$22 = (($40 + [3696]) + [24])
	$23 = (($40 + [3696]) + [32])
	$10 = ($40 + [3732])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3740])
	$26 = ($40 + [3752])
	$25 = ($40 + [3748])
	$14 = CALL $248($9, $37)
	$36 = $14
	
.LOOP $label$1524:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3696]) = $35
	$37 = CALL strlen([1168])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1444 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1527 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1526 }
	goto $label$1525 
	
.LABEL $label$1527
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3696]) + [40])) = $37
	
.LABEL $label$1526
	CALL memcpy($39, [1168], $37)
	
.LABEL $label$1525
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1443 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1530 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1529 }
	goto $label$1528 
	
.LABEL $label$1530
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1529
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1528
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3696]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1531 }
	CALL $349(*($26))
	
.LABEL $label$1531
	if ( ((*($10) & [1]) == 0) ){ goto $label$1532 }
	CALL $349(*($27))
	
.LABEL $label$1532
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1533 }
	$36 = CALL $248($9, $37)
	
.LABEL $label$1533
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1534 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1535:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1534 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1535 }
	
.LABEL $label$1534
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1538 }
	$15 = ($39 + [-24])
	
.LOOP $label$1539:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1540 }
	CALL $349($38)
	
.LABEL $label$1540
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1539 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1537 }
	goto $label$1536 
	
.LABEL $label$1538
	$39 = $37
	
.LABEL $label$1537
	
.LOOP $label$1541:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1542 }
	CALL $349($37)
	
.LABEL $label$1542
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1541 }
	
.LABEL $label$1536
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1524 }
	
.LABEL $label$1523
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1216]
	$33 = (int_64)0
	
.LOOP $label$1543:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1544 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1546 }
	$39 = ($39 + [165])
	goto $label$1545 
	
.LABEL $label$1546
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1545
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1544
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1543 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494400, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1547 }
	$13 = ($40 + [3681])
	$12 = ($40 + [3680])
	$11 = ($40 + [3669])
	$20 = (($40 + [3632]) + [8])
	$21 = (($40 + [3632]) + [16])
	$22 = (($40 + [3632]) + [24])
	$23 = (($40 + [3632]) + [32])
	$10 = ($40 + [3668])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3676])
	$26 = ($40 + [3688])
	$25 = ($40 + [3684])
	$14 = CALL $249($9, $37)
	$36 = $14
	
.LOOP $label$1548:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3632]) = $35
	$37 = CALL strlen([1200])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1442 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1551 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1550 }
	goto $label$1549 
	
.LABEL $label$1551
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3632]) + [40])) = $37
	
.LABEL $label$1550
	CALL memcpy($39, [1200], $37)
	
.LABEL $label$1549
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1441 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1554 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1553 }
	goto $label$1552 
	
.LABEL $label$1554
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1553
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1552
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3632]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1555 }
	CALL $349(*($26))
	
.LABEL $label$1555
	if ( ((*($10) & [1]) == 0) ){ goto $label$1556 }
	CALL $349(*($27))
	
.LABEL $label$1556
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1557 }
	$36 = CALL $249($9, $37)
	
.LABEL $label$1557
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1558 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1559:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1558 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1559 }
	
.LABEL $label$1558
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1562 }
	$15 = ($39 + [-24])
	
.LOOP $label$1563:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1564 }
	CALL $349($38)
	
.LABEL $label$1564
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1563 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1561 }
	goto $label$1560 
	
.LABEL $label$1562
	$39 = $37
	
.LABEL $label$1561
	
.LOOP $label$1565:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1566 }
	CALL $349($37)
	
.LABEL $label$1566
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1565 }
	
.LABEL $label$1560
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1548 }
	
.LABEL $label$1547
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1248]
	$33 = (int_64)0
	
.LOOP $label$1567:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1568 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1570 }
	$39 = ($39 + [165])
	goto $label$1569 
	
.LABEL $label$1570
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1569
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1568
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1567 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274494384, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1571 }
	$13 = ($40 + [3617])
	$12 = ($40 + [3616])
	$11 = ($40 + [3605])
	$20 = (($40 + [3568]) + [8])
	$21 = (($40 + [3568]) + [16])
	$22 = (($40 + [3568]) + [24])
	$23 = (($40 + [3568]) + [32])
	$10 = ($40 + [3604])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3612])
	$26 = ($40 + [3624])
	$25 = ($40 + [3620])
	$14 = CALL $250($9, $37)
	$36 = $14
	
.LOOP $label$1572:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3568]) = $35
	$37 = CALL strlen([1232])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1440 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1575 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1574 }
	goto $label$1573 
	
.LABEL $label$1575
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3568]) + [40])) = $37
	
.LABEL $label$1574
	CALL memcpy($39, [1232], $37)
	
.LABEL $label$1573
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1439 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1578 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1577 }
	goto $label$1576 
	
.LABEL $label$1578
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1577
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1576
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3568]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1579 }
	CALL $349(*($26))
	
.LABEL $label$1579
	if ( ((*($10) & [1]) == 0) ){ goto $label$1580 }
	CALL $349(*($27))
	
.LABEL $label$1580
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1581 }
	$36 = CALL $250($9, $37)
	
.LABEL $label$1581
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1582 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1583:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1582 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1583 }
	
.LABEL $label$1582
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1586 }
	$15 = ($39 + [-24])
	
.LOOP $label$1587:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1588 }
	CALL $349($38)
	
.LABEL $label$1588
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1587 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1585 }
	goto $label$1584 
	
.LABEL $label$1586
	$39 = $37
	
.LABEL $label$1585
	
.LOOP $label$1589:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1590 }
	CALL $349($37)
	
.LABEL $label$1590
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1589 }
	
.LABEL $label$1584
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1572 }
	
.LABEL $label$1571
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1280]
	$33 = (int_64)0
	
.LOOP $label$1591:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1592 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1594 }
	$39 = ($39 + [165])
	goto $label$1593 
	
.LABEL $label$1594
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1593
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1592
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1591 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493936, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1595 }
	$13 = ($40 + [3553])
	$12 = ($40 + [3552])
	$11 = ($40 + [3541])
	$20 = (($40 + [3504]) + [8])
	$21 = (($40 + [3504]) + [16])
	$22 = (($40 + [3504]) + [24])
	$23 = (($40 + [3504]) + [32])
	$10 = ($40 + [3540])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3548])
	$26 = ($40 + [3560])
	$25 = ($40 + [3556])
	$14 = CALL $251($9, $37)
	$36 = $14
	
.LOOP $label$1596:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3504]) = $35
	$37 = CALL strlen([1264])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1438 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1599 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1598 }
	goto $label$1597 
	
.LABEL $label$1599
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3504]) + [40])) = $37
	
.LABEL $label$1598
	CALL memcpy($39, [1264], $37)
	
.LABEL $label$1597
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1437 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1602 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1601 }
	goto $label$1600 
	
.LABEL $label$1602
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1601
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1600
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3504]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1603 }
	CALL $349(*($26))
	
.LABEL $label$1603
	if ( ((*($10) & [1]) == 0) ){ goto $label$1604 }
	CALL $349(*($27))
	
.LABEL $label$1604
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1605 }
	$36 = CALL $251($9, $37)
	
.LABEL $label$1605
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1606 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1607:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1606 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1607 }
	
.LABEL $label$1606
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1610 }
	$15 = ($39 + [-24])
	
.LOOP $label$1611:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1612 }
	CALL $349($38)
	
.LABEL $label$1612
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1611 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1609 }
	goto $label$1608 
	
.LABEL $label$1610
	$39 = $37
	
.LABEL $label$1609
	
.LOOP $label$1613:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1614 }
	CALL $349($37)
	
.LABEL $label$1614
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1613 }
	
.LABEL $label$1608
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1596 }
	
.LABEL $label$1595
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1312]
	$33 = (int_64)0
	
.LOOP $label$1615:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1616 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1618 }
	$39 = ($39 + [165])
	goto $label$1617 
	
.LABEL $label$1618
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1617
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1616
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1615 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493920, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1619 }
	$13 = ($40 + [3489])
	$12 = ($40 + [3488])
	$11 = ($40 + [3477])
	$20 = (($40 + [3440]) + [8])
	$21 = (($40 + [3440]) + [16])
	$22 = (($40 + [3440]) + [24])
	$23 = (($40 + [3440]) + [32])
	$10 = ($40 + [3476])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3484])
	$26 = ($40 + [3496])
	$25 = ($40 + [3492])
	$14 = CALL $252($9, $37)
	$36 = $14
	
.LOOP $label$1620:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3440]) = $35
	$37 = CALL strlen([1296])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1436 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1623 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1622 }
	goto $label$1621 
	
.LABEL $label$1623
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3440]) + [40])) = $37
	
.LABEL $label$1622
	CALL memcpy($39, [1296], $37)
	
.LABEL $label$1621
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1435 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1626 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1625 }
	goto $label$1624 
	
.LABEL $label$1626
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1625
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1624
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3440]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1627 }
	CALL $349(*($26))
	
.LABEL $label$1627
	if ( ((*($10) & [1]) == 0) ){ goto $label$1628 }
	CALL $349(*($27))
	
.LABEL $label$1628
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1629 }
	$36 = CALL $252($9, $37)
	
.LABEL $label$1629
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1630 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1631:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1630 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1631 }
	
.LABEL $label$1630
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1634 }
	$15 = ($39 + [-24])
	
.LOOP $label$1635:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1636 }
	CALL $349($38)
	
.LABEL $label$1636
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1635 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1633 }
	goto $label$1632 
	
.LABEL $label$1634
	$39 = $37
	
.LABEL $label$1633
	
.LOOP $label$1637:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1638 }
	CALL $349($37)
	
.LABEL $label$1638
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1637 }
	
.LABEL $label$1632
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1620 }
	
.LABEL $label$1619
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1344]
	$33 = (int_64)0
	
.LOOP $label$1639:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1640 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1642 }
	$39 = ($39 + [165])
	goto $label$1641 
	
.LABEL $label$1642
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1641
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1640
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1639 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493904, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1643 }
	$13 = ($40 + [3425])
	$12 = ($40 + [3424])
	$11 = ($40 + [3413])
	$20 = (($40 + [3376]) + [8])
	$21 = (($40 + [3376]) + [16])
	$22 = (($40 + [3376]) + [24])
	$23 = (($40 + [3376]) + [32])
	$10 = ($40 + [3412])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3420])
	$26 = ($40 + [3432])
	$25 = ($40 + [3428])
	$14 = CALL $253($9, $37)
	$36 = $14
	
.LOOP $label$1644:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3376]) = $35
	$37 = CALL strlen([1328])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1434 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1647 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1646 }
	goto $label$1645 
	
.LABEL $label$1647
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3376]) + [40])) = $37
	
.LABEL $label$1646
	CALL memcpy($39, [1328], $37)
	
.LABEL $label$1645
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1433 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1650 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1649 }
	goto $label$1648 
	
.LABEL $label$1650
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1649
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1648
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3376]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1651 }
	CALL $349(*($26))
	
.LABEL $label$1651
	if ( ((*($10) & [1]) == 0) ){ goto $label$1652 }
	CALL $349(*($27))
	
.LABEL $label$1652
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1653 }
	$36 = CALL $253($9, $37)
	
.LABEL $label$1653
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1654 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1655:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1654 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1655 }
	
.LABEL $label$1654
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1658 }
	$15 = ($39 + [-24])
	
.LOOP $label$1659:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1660 }
	CALL $349($38)
	
.LABEL $label$1660
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1659 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1657 }
	goto $label$1656 
	
.LABEL $label$1658
	$39 = $37
	
.LABEL $label$1657
	
.LOOP $label$1661:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1662 }
	CALL $349($37)
	
.LABEL $label$1662
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1661 }
	
.LABEL $label$1656
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1644 }
	
.LABEL $label$1643
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1376]
	$33 = (int_64)0
	
.LOOP $label$1663:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1664 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1666 }
	$39 = ($39 + [165])
	goto $label$1665 
	
.LABEL $label$1666
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1665
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1664
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1663 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493888, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1667 }
	$13 = ($40 + [3361])
	$12 = ($40 + [3360])
	$11 = ($40 + [3349])
	$20 = (($40 + [3312]) + [8])
	$21 = (($40 + [3312]) + [16])
	$22 = (($40 + [3312]) + [24])
	$23 = (($40 + [3312]) + [32])
	$10 = ($40 + [3348])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3356])
	$26 = ($40 + [3368])
	$25 = ($40 + [3364])
	$14 = CALL $254($9, $37)
	$36 = $14
	
.LOOP $label$1668:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3312]) = $35
	$37 = CALL strlen([1360])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1432 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1671 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1670 }
	goto $label$1669 
	
.LABEL $label$1671
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3312]) + [40])) = $37
	
.LABEL $label$1670
	CALL memcpy($39, [1360], $37)
	
.LABEL $label$1669
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1431 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1674 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1673 }
	goto $label$1672 
	
.LABEL $label$1674
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1673
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1672
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3312]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1675 }
	CALL $349(*($26))
	
.LABEL $label$1675
	if ( ((*($10) & [1]) == 0) ){ goto $label$1676 }
	CALL $349(*($27))
	
.LABEL $label$1676
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1677 }
	$36 = CALL $254($9, $37)
	
.LABEL $label$1677
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1678 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1679:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1678 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1679 }
	
.LABEL $label$1678
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1682 }
	$15 = ($39 + [-24])
	
.LOOP $label$1683:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1684 }
	CALL $349($38)
	
.LABEL $label$1684
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1683 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1681 }
	goto $label$1680 
	
.LABEL $label$1682
	$39 = $37
	
.LABEL $label$1681
	
.LOOP $label$1685:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1686 }
	CALL $349($37)
	
.LABEL $label$1686
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1685 }
	
.LABEL $label$1680
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1668 }
	
.LABEL $label$1667
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1408]
	$33 = (int_64)0
	
.LOOP $label$1687:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1688 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1690 }
	$39 = ($39 + [165])
	goto $label$1689 
	
.LABEL $label$1690
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1689
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1688
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1687 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493872, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1691 }
	$13 = ($40 + [3297])
	$12 = ($40 + [3296])
	$11 = ($40 + [3285])
	$20 = (($40 + [3248]) + [8])
	$21 = (($40 + [3248]) + [16])
	$22 = (($40 + [3248]) + [24])
	$23 = (($40 + [3248]) + [32])
	$10 = ($40 + [3284])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3292])
	$26 = ($40 + [3304])
	$25 = ($40 + [3300])
	$14 = CALL $255($9, $37)
	$36 = $14
	
.LOOP $label$1692:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3248]) = $35
	$37 = CALL strlen([1392])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1430 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1695 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1694 }
	goto $label$1693 
	
.LABEL $label$1695
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3248]) + [40])) = $37
	
.LABEL $label$1694
	CALL memcpy($39, [1392], $37)
	
.LABEL $label$1693
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1429 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1698 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1697 }
	goto $label$1696 
	
.LABEL $label$1698
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1697
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1696
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3248]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1699 }
	CALL $349(*($26))
	
.LABEL $label$1699
	if ( ((*($10) & [1]) == 0) ){ goto $label$1700 }
	CALL $349(*($27))
	
.LABEL $label$1700
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1701 }
	$36 = CALL $255($9, $37)
	
.LABEL $label$1701
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1702 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1703:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1702 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1703 }
	
.LABEL $label$1702
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1706 }
	$15 = ($39 + [-24])
	
.LOOP $label$1707:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1708 }
	CALL $349($38)
	
.LABEL $label$1708
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1707 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1705 }
	goto $label$1704 
	
.LABEL $label$1706
	$39 = $37
	
.LABEL $label$1705
	
.LOOP $label$1709:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1710 }
	CALL $349($37)
	
.LABEL $label$1710
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1709 }
	
.LABEL $label$1704
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1692 }
	
.LABEL $label$1691
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1440]
	$33 = (int_64)0
	
.LOOP $label$1711:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1712 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1714 }
	$39 = ($39 + [165])
	goto $label$1713 
	
.LABEL $label$1714
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1713
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1712
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1711 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493424, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1715 }
	$13 = ($40 + [3233])
	$12 = ($40 + [3232])
	$11 = ($40 + [3221])
	$20 = (($40 + [3184]) + [8])
	$21 = (($40 + [3184]) + [16])
	$22 = (($40 + [3184]) + [24])
	$23 = (($40 + [3184]) + [32])
	$10 = ($40 + [3220])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3228])
	$26 = ($40 + [3240])
	$25 = ($40 + [3236])
	$14 = CALL $256($9, $37)
	$36 = $14
	
.LOOP $label$1716:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3184]) = $35
	$37 = CALL strlen([1424])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1428 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1719 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1718 }
	goto $label$1717 
	
.LABEL $label$1719
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3184]) + [40])) = $37
	
.LABEL $label$1718
	CALL memcpy($39, [1424], $37)
	
.LABEL $label$1717
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1427 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1722 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1721 }
	goto $label$1720 
	
.LABEL $label$1722
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1721
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1720
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3184]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1723 }
	CALL $349(*($26))
	
.LABEL $label$1723
	if ( ((*($10) & [1]) == 0) ){ goto $label$1724 }
	CALL $349(*($27))
	
.LABEL $label$1724
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1725 }
	$36 = CALL $256($9, $37)
	
.LABEL $label$1725
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1726 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1727:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1726 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1727 }
	
.LABEL $label$1726
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1730 }
	$15 = ($39 + [-24])
	
.LOOP $label$1731:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1732 }
	CALL $349($38)
	
.LABEL $label$1732
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1731 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1729 }
	goto $label$1728 
	
.LABEL $label$1730
	$39 = $37
	
.LABEL $label$1729
	
.LOOP $label$1733:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1734 }
	CALL $349($37)
	
.LABEL $label$1734
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1733 }
	
.LABEL $label$1728
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1716 }
	
.LABEL $label$1715
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1472]
	$33 = (int_64)0
	
.LOOP $label$1735:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1736 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1738 }
	$39 = ($39 + [165])
	goto $label$1737 
	
.LABEL $label$1738
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1737
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1736
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1735 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493408, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1739 }
	$13 = ($40 + [3169])
	$12 = ($40 + [3168])
	$11 = ($40 + [3157])
	$20 = (($40 + [3120]) + [8])
	$21 = (($40 + [3120]) + [16])
	$22 = (($40 + [3120]) + [24])
	$23 = (($40 + [3120]) + [32])
	$10 = ($40 + [3156])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3164])
	$26 = ($40 + [3176])
	$25 = ($40 + [3172])
	$14 = CALL $257($9, $37)
	$36 = $14
	
.LOOP $label$1740:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3120]) = $35
	$37 = CALL strlen([1456])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1426 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1743 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1742 }
	goto $label$1741 
	
.LABEL $label$1743
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3120]) + [40])) = $37
	
.LABEL $label$1742
	CALL memcpy($39, [1456], $37)
	
.LABEL $label$1741
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1425 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1746 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1745 }
	goto $label$1744 
	
.LABEL $label$1746
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1745
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1744
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3120]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1747 }
	CALL $349(*($26))
	
.LABEL $label$1747
	if ( ((*($10) & [1]) == 0) ){ goto $label$1748 }
	CALL $349(*($27))
	
.LABEL $label$1748
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1749 }
	$36 = CALL $257($9, $37)
	
.LABEL $label$1749
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1750 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1751:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1750 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1751 }
	
.LABEL $label$1750
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1754 }
	$15 = ($39 + [-24])
	
.LOOP $label$1755:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1756 }
	CALL $349($38)
	
.LABEL $label$1756
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1755 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1753 }
	goto $label$1752 
	
.LABEL $label$1754
	$39 = $37
	
.LABEL $label$1753
	
.LOOP $label$1757:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1758 }
	CALL $349($37)
	
.LABEL $label$1758
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1757 }
	
.LABEL $label$1752
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1740 }
	
.LABEL $label$1739
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1504]
	$33 = (int_64)0
	
.LOOP $label$1759:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1760 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1762 }
	$39 = ($39 + [165])
	goto $label$1761 
	
.LABEL $label$1762
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1761
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1760
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1759 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493392, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1763 }
	$13 = ($40 + [3105])
	$12 = ($40 + [3104])
	$11 = ($40 + [3093])
	$20 = (($40 + [3056]) + [8])
	$21 = (($40 + [3056]) + [16])
	$22 = (($40 + [3056]) + [24])
	$23 = (($40 + [3056]) + [32])
	$10 = ($40 + [3092])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3100])
	$26 = ($40 + [3112])
	$25 = ($40 + [3108])
	$14 = CALL $258($9, $37)
	$36 = $14
	
.LOOP $label$1764:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [3056]) = $35
	$37 = CALL strlen([1488])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1424 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1767 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1766 }
	goto $label$1765 
	
.LABEL $label$1767
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [3056]) + [40])) = $37
	
.LABEL $label$1766
	CALL memcpy($39, [1488], $37)
	
.LABEL $label$1765
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1423 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1770 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1769 }
	goto $label$1768 
	
.LABEL $label$1770
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1769
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1768
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [3056]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1771 }
	CALL $349(*($26))
	
.LABEL $label$1771
	if ( ((*($10) & [1]) == 0) ){ goto $label$1772 }
	CALL $349(*($27))
	
.LABEL $label$1772
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1773 }
	$36 = CALL $258($9, $37)
	
.LABEL $label$1773
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1774 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1775:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1774 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1775 }
	
.LABEL $label$1774
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1778 }
	$15 = ($39 + [-24])
	
.LOOP $label$1779:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1780 }
	CALL $349($38)
	
.LABEL $label$1780
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1779 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1777 }
	goto $label$1776 
	
.LABEL $label$1778
	$39 = $37
	
.LABEL $label$1777
	
.LOOP $label$1781:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1782 }
	CALL $349($37)
	
.LABEL $label$1782
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1781 }
	
.LABEL $label$1776
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1764 }
	
.LABEL $label$1763
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1536]
	$33 = (int_64)0
	
.LOOP $label$1783:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1784 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1786 }
	$39 = ($39 + [165])
	goto $label$1785 
	
.LABEL $label$1786
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1785
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1784
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1783 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493376, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1787 }
	$13 = ($40 + [3041])
	$12 = ($40 + [3040])
	$11 = ($40 + [3029])
	$20 = (($40 + [2992]) + [8])
	$21 = (($40 + [2992]) + [16])
	$22 = (($40 + [2992]) + [24])
	$23 = (($40 + [2992]) + [32])
	$10 = ($40 + [3028])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [3036])
	$26 = ($40 + [3048])
	$25 = ($40 + [3044])
	$14 = CALL $259($9, $37)
	$36 = $14
	
.LOOP $label$1788:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2992]) = $35
	$37 = CALL strlen([1520])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1422 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1791 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1790 }
	goto $label$1789 
	
.LABEL $label$1791
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2992]) + [40])) = $37
	
.LABEL $label$1790
	CALL memcpy($39, [1520], $37)
	
.LABEL $label$1789
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1421 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1794 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1793 }
	goto $label$1792 
	
.LABEL $label$1794
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1793
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1792
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2992]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1795 }
	CALL $349(*($26))
	
.LABEL $label$1795
	if ( ((*($10) & [1]) == 0) ){ goto $label$1796 }
	CALL $349(*($27))
	
.LABEL $label$1796
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1797 }
	$36 = CALL $259($9, $37)
	
.LABEL $label$1797
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1798 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1799:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1798 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1799 }
	
.LABEL $label$1798
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1802 }
	$15 = ($39 + [-24])
	
.LOOP $label$1803:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1804 }
	CALL $349($38)
	
.LABEL $label$1804
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1803 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1801 }
	goto $label$1800 
	
.LABEL $label$1802
	$39 = $37
	
.LABEL $label$1801
	
.LOOP $label$1805:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1806 }
	CALL $349($37)
	
.LABEL $label$1806
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1805 }
	
.LABEL $label$1800
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1788 }
	
.LABEL $label$1787
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1568]
	$33 = (int_64)0
	
.LOOP $label$1807:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1808 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1810 }
	$39 = ($39 + [165])
	goto $label$1809 
	
.LABEL $label$1810
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1809
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1808
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1807 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274493360, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1811 }
	$13 = ($40 + [2977])
	$12 = ($40 + [2976])
	$11 = ($40 + [2965])
	$20 = (($40 + [2928]) + [8])
	$21 = (($40 + [2928]) + [16])
	$22 = (($40 + [2928]) + [24])
	$23 = (($40 + [2928]) + [32])
	$10 = ($40 + [2964])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2972])
	$26 = ($40 + [2984])
	$25 = ($40 + [2980])
	$14 = CALL $260($9, $37)
	$36 = $14
	
.LOOP $label$1812:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2928]) = $35
	$37 = CALL strlen([1552])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1420 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1815 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1814 }
	goto $label$1813 
	
.LABEL $label$1815
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2928]) + [40])) = $37
	
.LABEL $label$1814
	CALL memcpy($39, [1552], $37)
	
.LABEL $label$1813
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1419 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1818 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1817 }
	goto $label$1816 
	
.LABEL $label$1818
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1817
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1816
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2928]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1819 }
	CALL $349(*($26))
	
.LABEL $label$1819
	if ( ((*($10) & [1]) == 0) ){ goto $label$1820 }
	CALL $349(*($27))
	
.LABEL $label$1820
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1821 }
	$36 = CALL $260($9, $37)
	
.LABEL $label$1821
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1822 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1823:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1822 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1823 }
	
.LABEL $label$1822
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1826 }
	$15 = ($39 + [-24])
	
.LOOP $label$1827:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1828 }
	CALL $349($38)
	
.LABEL $label$1828
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1827 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1825 }
	goto $label$1824 
	
.LABEL $label$1826
	$39 = $37
	
.LABEL $label$1825
	
.LOOP $label$1829:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1830 }
	CALL $349($37)
	
.LABEL $label$1830
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1829 }
	
.LABEL $label$1824
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1812 }
	
.LABEL $label$1811
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1600]
	$33 = (int_64)0
	
.LOOP $label$1831:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1832 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1834 }
	$39 = ($39 + [165])
	goto $label$1833 
	
.LABEL $label$1834
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1833
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1832
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1831 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492912, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1835 }
	$13 = ($40 + [2913])
	$12 = ($40 + [2912])
	$11 = ($40 + [2901])
	$20 = (($40 + [2864]) + [8])
	$21 = (($40 + [2864]) + [16])
	$22 = (($40 + [2864]) + [24])
	$23 = (($40 + [2864]) + [32])
	$10 = ($40 + [2900])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2908])
	$26 = ($40 + [2920])
	$25 = ($40 + [2916])
	$14 = CALL $261($9, $37)
	$36 = $14
	
.LOOP $label$1836:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2864]) = $35
	$37 = CALL strlen([1584])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1418 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1839 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1838 }
	goto $label$1837 
	
.LABEL $label$1839
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2864]) + [40])) = $37
	
.LABEL $label$1838
	CALL memcpy($39, [1584], $37)
	
.LABEL $label$1837
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1417 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1842 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1841 }
	goto $label$1840 
	
.LABEL $label$1842
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1841
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1840
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2864]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1843 }
	CALL $349(*($26))
	
.LABEL $label$1843
	if ( ((*($10) & [1]) == 0) ){ goto $label$1844 }
	CALL $349(*($27))
	
.LABEL $label$1844
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1845 }
	$36 = CALL $261($9, $37)
	
.LABEL $label$1845
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1846 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1847:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1846 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1847 }
	
.LABEL $label$1846
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1850 }
	$15 = ($39 + [-24])
	
.LOOP $label$1851:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1852 }
	CALL $349($38)
	
.LABEL $label$1852
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1851 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1849 }
	goto $label$1848 
	
.LABEL $label$1850
	$39 = $37
	
.LABEL $label$1849
	
.LOOP $label$1853:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1854 }
	CALL $349($37)
	
.LABEL $label$1854
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1853 }
	
.LABEL $label$1848
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1836 }
	
.LABEL $label$1835
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1632]
	$33 = (int_64)0
	
.LOOP $label$1855:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1856 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1858 }
	$39 = ($39 + [165])
	goto $label$1857 
	
.LABEL $label$1858
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1857
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1856
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1855 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492896, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1859 }
	$13 = ($40 + [2849])
	$12 = ($40 + [2848])
	$11 = ($40 + [2837])
	$20 = (($40 + [2800]) + [8])
	$21 = (($40 + [2800]) + [16])
	$22 = (($40 + [2800]) + [24])
	$23 = (($40 + [2800]) + [32])
	$10 = ($40 + [2836])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2844])
	$26 = ($40 + [2856])
	$25 = ($40 + [2852])
	$14 = CALL $262($9, $37)
	$36 = $14
	
.LOOP $label$1860:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2800]) = $35
	$37 = CALL strlen([1616])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1416 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1863 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1862 }
	goto $label$1861 
	
.LABEL $label$1863
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2800]) + [40])) = $37
	
.LABEL $label$1862
	CALL memcpy($39, [1616], $37)
	
.LABEL $label$1861
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1415 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1866 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1865 }
	goto $label$1864 
	
.LABEL $label$1866
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1865
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1864
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2800]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1867 }
	CALL $349(*($26))
	
.LABEL $label$1867
	if ( ((*($10) & [1]) == 0) ){ goto $label$1868 }
	CALL $349(*($27))
	
.LABEL $label$1868
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1869 }
	$36 = CALL $262($9, $37)
	
.LABEL $label$1869
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1870 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1871:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1870 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1871 }
	
.LABEL $label$1870
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1874 }
	$15 = ($39 + [-24])
	
.LOOP $label$1875:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1876 }
	CALL $349($38)
	
.LABEL $label$1876
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1875 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1873 }
	goto $label$1872 
	
.LABEL $label$1874
	$39 = $37
	
.LABEL $label$1873
	
.LOOP $label$1877:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1878 }
	CALL $349($37)
	
.LABEL $label$1878
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1877 }
	
.LABEL $label$1872
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1860 }
	
.LABEL $label$1859
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1664]
	$33 = (int_64)0
	
.LOOP $label$1879:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1880 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1882 }
	$39 = ($39 + [165])
	goto $label$1881 
	
.LABEL $label$1882
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1881
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1880
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1879 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492880, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1883 }
	$13 = ($40 + [2785])
	$12 = ($40 + [2784])
	$11 = ($40 + [2773])
	$20 = (($40 + [2736]) + [8])
	$21 = (($40 + [2736]) + [16])
	$22 = (($40 + [2736]) + [24])
	$23 = (($40 + [2736]) + [32])
	$10 = ($40 + [2772])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2780])
	$26 = ($40 + [2792])
	$25 = ($40 + [2788])
	$14 = CALL $263($9, $37)
	$36 = $14
	
.LOOP $label$1884:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2736]) = $35
	$37 = CALL strlen([1648])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1414 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1887 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1886 }
	goto $label$1885 
	
.LABEL $label$1887
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2736]) + [40])) = $37
	
.LABEL $label$1886
	CALL memcpy($39, [1648], $37)
	
.LABEL $label$1885
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1413 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1890 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1889 }
	goto $label$1888 
	
.LABEL $label$1890
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1889
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1888
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2736]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1891 }
	CALL $349(*($26))
	
.LABEL $label$1891
	if ( ((*($10) & [1]) == 0) ){ goto $label$1892 }
	CALL $349(*($27))
	
.LABEL $label$1892
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1893 }
	$36 = CALL $263($9, $37)
	
.LABEL $label$1893
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1894 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1895:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1894 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1895 }
	
.LABEL $label$1894
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1898 }
	$15 = ($39 + [-24])
	
.LOOP $label$1899:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1900 }
	CALL $349($38)
	
.LABEL $label$1900
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1899 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1897 }
	goto $label$1896 
	
.LABEL $label$1898
	$39 = $37
	
.LABEL $label$1897
	
.LOOP $label$1901:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1902 }
	CALL $349($37)
	
.LABEL $label$1902
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1901 }
	
.LABEL $label$1896
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1884 }
	
.LABEL $label$1883
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1696]
	$33 = (int_64)0
	
.LOOP $label$1903:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1904 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1906 }
	$39 = ($39 + [165])
	goto $label$1905 
	
.LABEL $label$1906
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1905
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1904
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1903 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492864, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1907 }
	$13 = ($40 + [2721])
	$12 = ($40 + [2720])
	$11 = ($40 + [2709])
	$20 = (($40 + [2672]) + [8])
	$21 = (($40 + [2672]) + [16])
	$22 = (($40 + [2672]) + [24])
	$23 = (($40 + [2672]) + [32])
	$10 = ($40 + [2708])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2716])
	$26 = ($40 + [2728])
	$25 = ($40 + [2724])
	$14 = CALL $264($9, $37)
	$36 = $14
	
.LOOP $label$1908:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2672]) = $35
	$37 = CALL strlen([1680])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1412 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1911 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1910 }
	goto $label$1909 
	
.LABEL $label$1911
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2672]) + [40])) = $37
	
.LABEL $label$1910
	CALL memcpy($39, [1680], $37)
	
.LABEL $label$1909
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1411 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1914 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1913 }
	goto $label$1912 
	
.LABEL $label$1914
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1913
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1912
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2672]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1915 }
	CALL $349(*($26))
	
.LABEL $label$1915
	if ( ((*($10) & [1]) == 0) ){ goto $label$1916 }
	CALL $349(*($27))
	
.LABEL $label$1916
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1917 }
	$36 = CALL $264($9, $37)
	
.LABEL $label$1917
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1918 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1919:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1918 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1919 }
	
.LABEL $label$1918
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1922 }
	$15 = ($39 + [-24])
	
.LOOP $label$1923:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1924 }
	CALL $349($38)
	
.LABEL $label$1924
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1923 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1921 }
	goto $label$1920 
	
.LABEL $label$1922
	$39 = $37
	
.LABEL $label$1921
	
.LOOP $label$1925:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1926 }
	CALL $349($37)
	
.LABEL $label$1926
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1925 }
	
.LABEL $label$1920
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1908 }
	
.LABEL $label$1907
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1728]
	$33 = (int_64)0
	
.LOOP $label$1927:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1928 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1930 }
	$39 = ($39 + [165])
	goto $label$1929 
	
.LABEL $label$1930
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1929
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1928
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1927 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492848, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1931 }
	$13 = ($40 + [2657])
	$12 = ($40 + [2656])
	$11 = ($40 + [2645])
	$20 = (($40 + [2608]) + [8])
	$21 = (($40 + [2608]) + [16])
	$22 = (($40 + [2608]) + [24])
	$23 = (($40 + [2608]) + [32])
	$10 = ($40 + [2644])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2652])
	$26 = ($40 + [2664])
	$25 = ($40 + [2660])
	$14 = CALL $265($9, $37)
	$36 = $14
	
.LOOP $label$1932:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2608]) = $35
	$37 = CALL strlen([1712])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1410 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1935 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1934 }
	goto $label$1933 
	
.LABEL $label$1935
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2608]) + [40])) = $37
	
.LABEL $label$1934
	CALL memcpy($39, [1712], $37)
	
.LABEL $label$1933
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1409 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1938 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1937 }
	goto $label$1936 
	
.LABEL $label$1938
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1937
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1936
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2608]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1939 }
	CALL $349(*($26))
	
.LABEL $label$1939
	if ( ((*($10) & [1]) == 0) ){ goto $label$1940 }
	CALL $349(*($27))
	
.LABEL $label$1940
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1941 }
	$36 = CALL $265($9, $37)
	
.LABEL $label$1941
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1942 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1943:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1942 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1943 }
	
.LABEL $label$1942
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1946 }
	$15 = ($39 + [-24])
	
.LOOP $label$1947:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1948 }
	CALL $349($38)
	
.LABEL $label$1948
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1947 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1945 }
	goto $label$1944 
	
.LABEL $label$1946
	$39 = $37
	
.LABEL $label$1945
	
.LOOP $label$1949:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1950 }
	CALL $349($37)
	
.LABEL $label$1950
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1949 }
	
.LABEL $label$1944
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1932 }
	
.LABEL $label$1931
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1760]
	$33 = (int_64)0
	
.LOOP $label$1951:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1952 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1954 }
	$39 = ($39 + [165])
	goto $label$1953 
	
.LABEL $label$1954
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1953
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1952
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1951 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492400, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1955 }
	$13 = ($40 + [2593])
	$12 = ($40 + [2592])
	$11 = ($40 + [2581])
	$20 = (($40 + [2544]) + [8])
	$21 = (($40 + [2544]) + [16])
	$22 = (($40 + [2544]) + [24])
	$23 = (($40 + [2544]) + [32])
	$10 = ($40 + [2580])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2588])
	$26 = ($40 + [2600])
	$25 = ($40 + [2596])
	$14 = CALL $266($9, $37)
	$36 = $14
	
.LOOP $label$1956:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2544]) = $35
	$37 = CALL strlen([1744])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1408 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1959 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1958 }
	goto $label$1957 
	
.LABEL $label$1959
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2544]) + [40])) = $37
	
.LABEL $label$1958
	CALL memcpy($39, [1744], $37)
	
.LABEL $label$1957
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1407 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1962 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1961 }
	goto $label$1960 
	
.LABEL $label$1962
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1961
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1960
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2544]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1963 }
	CALL $349(*($26))
	
.LABEL $label$1963
	if ( ((*($10) & [1]) == 0) ){ goto $label$1964 }
	CALL $349(*($27))
	
.LABEL $label$1964
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1965 }
	$36 = CALL $266($9, $37)
	
.LABEL $label$1965
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1966 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1967:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1966 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1967 }
	
.LABEL $label$1966
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1970 }
	$15 = ($39 + [-24])
	
.LOOP $label$1971:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1972 }
	CALL $349($38)
	
.LABEL $label$1972
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1971 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1969 }
	goto $label$1968 
	
.LABEL $label$1970
	$39 = $37
	
.LABEL $label$1969
	
.LOOP $label$1973:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1974 }
	CALL $349($37)
	
.LABEL $label$1974
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1973 }
	
.LABEL $label$1968
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1956 }
	
.LABEL $label$1955
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1792]
	$33 = (int_64)0
	
.LOOP $label$1975:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$1976 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$1978 }
	$39 = ($39 + [165])
	goto $label$1977 
	
.LABEL $label$1978
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$1977
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$1976
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1975 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492384, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1979 }
	$13 = ($40 + [2529])
	$12 = ($40 + [2528])
	$11 = ($40 + [2517])
	$20 = (($40 + [2480]) + [8])
	$21 = (($40 + [2480]) + [16])
	$22 = (($40 + [2480]) + [24])
	$23 = (($40 + [2480]) + [32])
	$10 = ($40 + [2516])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2524])
	$26 = ($40 + [2536])
	$25 = ($40 + [2532])
	$14 = CALL $267($9, $37)
	$36 = $14
	
.LOOP $label$1980:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2480]) = $35
	$37 = CALL strlen([1776])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1406 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1983 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$1982 }
	goto $label$1981 
	
.LABEL $label$1983
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2480]) + [40])) = $37
	
.LABEL $label$1982
	CALL memcpy($39, [1776], $37)
	
.LABEL $label$1981
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1405 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$1986 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$1985 }
	goto $label$1984 
	
.LABEL $label$1986
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$1985
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$1984
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2480]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$1987 }
	CALL $349(*($26))
	
.LABEL $label$1987
	if ( ((*($10) & [1]) == 0) ){ goto $label$1988 }
	CALL $349(*($27))
	
.LABEL $label$1988
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1989 }
	$36 = CALL $267($9, $37)
	
.LABEL $label$1989
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$1990 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$1991:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$1990 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$1991 }
	
.LABEL $label$1990
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$1994 }
	$15 = ($39 + [-24])
	
.LOOP $label$1995:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$1996 }
	CALL $349($38)
	
.LABEL $label$1996
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$1995 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$1993 }
	goto $label$1992 
	
.LABEL $label$1994
	$39 = $37
	
.LABEL $label$1993
	
.LOOP $label$1997:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$1998 }
	CALL $349($37)
	
.LABEL $label$1998
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$1997 }
	
.LABEL $label$1992
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$1980 }
	
.LABEL $label$1979
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1824]
	$33 = (int_64)0
	
.LOOP $label$1999:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$2000 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$2002 }
	$39 = ($39 + [165])
	goto $label$2001 
	
.LABEL $label$2002
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$2001
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$2000
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$1999 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492368, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2003 }
	$13 = ($40 + [2465])
	$12 = ($40 + [2464])
	$11 = ($40 + [2453])
	$20 = (($40 + [2416]) + [8])
	$21 = (($40 + [2416]) + [16])
	$22 = (($40 + [2416]) + [24])
	$23 = (($40 + [2416]) + [32])
	$10 = ($40 + [2452])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2460])
	$26 = ($40 + [2472])
	$25 = ($40 + [2468])
	$14 = CALL $268($9, $37)
	$36 = $14
	
.LOOP $label$2004:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2416]) = $35
	$37 = CALL strlen([1808])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1404 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2007 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$2006 }
	goto $label$2005 
	
.LABEL $label$2007
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2416]) + [40])) = $37
	
.LABEL $label$2006
	CALL memcpy($39, [1808], $37)
	
.LABEL $label$2005
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1403 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2010 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$2009 }
	goto $label$2008 
	
.LABEL $label$2010
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$2009
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$2008
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2416]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$2011 }
	CALL $349(*($26))
	
.LABEL $label$2011
	if ( ((*($10) & [1]) == 0) ){ goto $label$2012 }
	CALL $349(*($27))
	
.LABEL $label$2012
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2013 }
	$36 = CALL $268($9, $37)
	
.LABEL $label$2013
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2014 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2015:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$2014 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2015 }
	
.LABEL $label$2014
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2018 }
	$15 = ($39 + [-24])
	
.LOOP $label$2019:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2020 }
	CALL $349($38)
	
.LABEL $label$2020
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2019 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2017 }
	goto $label$2016 
	
.LABEL $label$2018
	$39 = $37
	
.LABEL $label$2017
	
.LOOP $label$2021:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2022 }
	CALL $349($37)
	
.LABEL $label$2022
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2021 }
	
.LABEL $label$2016
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$2004 }
	
.LABEL $label$2003
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1856]
	$33 = (int_64)0
	
.LOOP $label$2023:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$2024 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$2026 }
	$39 = ($39 + [165])
	goto $label$2025 
	
.LABEL $label$2026
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$2025
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$2024
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$2023 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492352, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2027 }
	$13 = ($40 + [2401])
	$12 = ($40 + [2400])
	$11 = ($40 + [2389])
	$20 = (($40 + [2352]) + [8])
	$21 = (($40 + [2352]) + [16])
	$22 = (($40 + [2352]) + [24])
	$23 = (($40 + [2352]) + [32])
	$10 = ($40 + [2388])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2396])
	$26 = ($40 + [2408])
	$25 = ($40 + [2404])
	$14 = CALL $269($9, $37)
	$36 = $14
	
.LOOP $label$2028:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2352]) = $35
	$37 = CALL strlen([1840])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1402 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2031 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$2030 }
	goto $label$2029 
	
.LABEL $label$2031
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2352]) + [40])) = $37
	
.LABEL $label$2030
	CALL memcpy($39, [1840], $37)
	
.LABEL $label$2029
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1401 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2034 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$2033 }
	goto $label$2032 
	
.LABEL $label$2034
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$2033
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$2032
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2352]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$2035 }
	CALL $349(*($26))
	
.LABEL $label$2035
	if ( ((*($10) & [1]) == 0) ){ goto $label$2036 }
	CALL $349(*($27))
	
.LABEL $label$2036
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2037 }
	$36 = CALL $269($9, $37)
	
.LABEL $label$2037
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2038 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2039:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$2038 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2039 }
	
.LABEL $label$2038
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2042 }
	$15 = ($39 + [-24])
	
.LOOP $label$2043:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2044 }
	CALL $349($38)
	
.LABEL $label$2044
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2043 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2041 }
	goto $label$2040 
	
.LABEL $label$2042
	$39 = $37
	
.LABEL $label$2041
	
.LOOP $label$2045:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2046 }
	CALL $349($37)
	
.LABEL $label$2046
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2045 }
	
.LABEL $label$2040
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$2028 }
	
.LABEL $label$2027
	$8 = *(($0 + [16]))
	$32 = (int_64)59
	$37 = [1888]
	$33 = (int_64)0
	
.LOOP $label$2047:
	$31 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$2048 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$2050 }
	$39 = ($39 + [165])
	goto $label$2049 
	
.LABEL $label$2050
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$2049
	$31 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$2048
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$33 = ((int_64)$31 | (int_64)$33)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$2047 }
	*(($9 = CALL $348([40])) + [8]) = $33
	*($9) = $8
	*($9 + [16]) = (int_64)-1
	$34 = (int_64)0
	*($9 + [24 align=4]) = (int_64)0
	*($9 + [32]) = [0]
	$37 = CALL db_lowerbound_i64($8, $33, (int_64)-3922893633274492336, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2051 }
	$13 = ($40 + [2337])
	$12 = ($40 + [2336])
	$11 = ($40 + [2325])
	$20 = (($40 + [2288]) + [8])
	$21 = (($40 + [2288]) + [16])
	$22 = (($40 + [2288]) + [24])
	$23 = (($40 + [2288]) + [32])
	$10 = ($40 + [2324])
	$24 = ($10 + [4])
	$29 = ($9 + [28])
	$27 = ($40 + [2332])
	$26 = ($40 + [2344])
	$25 = ($40 + [2340])
	$14 = CALL $270($9, $37)
	$36 = $14
	
.LOOP $label$2052:
	*($20) = *($36)
	*($21) = *($36 + [8])
	*($22) = (int_64)0
	*($23) = [0]
	*($24) = (int_64)0
	*($10) = [0]
	*($40 + [2288]) = $35
	$37 = CALL strlen([1872])
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1400 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2055 }
	*($10) = ($37 << [1])
	$39 = $11
	if ( $37 ){ goto $label$2054 }
	goto $label$2053 
	
.LABEL $label$2055
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($10) = ($38 | [1])
	*($27) = $39
	*((($40 + [2288]) + [40])) = $37
	
.LABEL $label$2054
	CALL memcpy($39, [1872], $37)
	
.LABEL $label$2053
	*(($39 + $37)) = [0]
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$37 = CALL strlen(($40 + [8848]))
	if ( ((uint_32)$37 >= (uint_32)[-16]) ){ goto $label$1399 }
	if ( ((uint_32)$37 >= (uint_32)[11]) ){ goto $label$2058 }
	*($12) = ($37 << [1])
	$39 = $13
	if ( $37 ){ goto $label$2057 }
	goto $label$2056 
	
.LABEL $label$2058
	$38 = (($37 + [16]) & [-16])
	$39 = CALL $348($38)
	*($12) = ($38 | [1])
	*($26) = $39
	*($25) = $37
	
.LABEL $label$2057
	CALL memcpy($39, ($40 + [8848]), $37)
	
.LABEL $label$2056
	*(($39 + $37)) = [0]
	CALL $219(($40 + [9088]), ($40 + [2288]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$2059 }
	CALL $349(*($26))
	
.LABEL $label$2059
	if ( ((*($10) & [1]) == 0) ){ goto $label$2060 }
	CALL $349(*($27))
	
.LABEL $label$2060
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$36 = [0]
	$37 = CALL db_next_i64(*($14 + [28]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2061 }
	$36 = CALL $270($9, $37)
	
.LABEL $label$2061
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)$9), [4256])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($9 + [24])
	$15 = *($28)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2062 }
	$32 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2063:
	if ( ((int_64)*(*($37)) == (int_64)$32) ){ goto $label$2062 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2063 }
	
.LABEL $label$2062
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($29)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2066 }
	$15 = ($39 + [-24])
	
.LOOP $label$2067:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2068 }
	CALL $349($38)
	
.LABEL $label$2068
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2067 }
	$38 = *($29)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2065 }
	goto $label$2064 
	
.LABEL $label$2066
	$39 = $37
	
.LABEL $label$2065
	
.LOOP $label$2069:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2070 }
	CALL $349($37)
	
.LABEL $label$2070
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2069 }
	
.LABEL $label$2064
	$35 = ((int_64)$35 + (int_64)1)
	*($29) = $39
	CALL db_remove_i64(*(($14 + [28])))
	$14 = $36
	if ( $36 ){ goto $label$2052 }
	
.LABEL $label$2051
	CALL _Z16ClearAllBetTabley(*($1))
	*($40 + [9032]) = (int_64)0
	CALL memcpy(($40 + [2232]), ($40 + [9032]), [40])
	CALL $378((($40 + [2232]) + [40]), $5)
	$35 = (int_64)59
	$37 = [352]
	$31 = (int_64)0
	
.LOOP $label$2071:
	$32 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$2072 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$2074 }
	$39 = ($39 + [165])
	goto $label$2073 
	
.LABEL $label$2074
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$2073
	$32 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$35 & (int_64)4294967295))
	
.LABEL $label$2072
	$37 = ($37 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$31 = ((int_64)$32 | (int_64)$31)
	$35 = ((int_64)$35 + (int_64)-5)
	if ( ((int_64)$35 != (int_64)-6) ){ goto $label$2071 }
	CALL $216(($40 + [8608]), $3, $31)
	$37 = *($40 + [8612])
	if ( ($37 == 0) ){ goto $label$2075 }
	*($40 + [8800]) = ($40 + [2232])
	CALL eosio_assert([1], [832])
	CALL $273($3, $37, ($40 + [8800]))
	goto $label$1335 
	
.LABEL $label$2075
	*($40 + [9112]) = ($40 + [2232])
	*($40 + [8776]) = $2
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $3
	*($40 + [8804]) = ($40 + [9112])
	*($40 + [8808]) = ($40 + [8776])
	*(($38 = CALL $348([64])) + [48]) = [0]
	$35 = (int_64)0
	*($38 + [40 align=4]) = (int_64)0
	*($38 + [52]) = $3
	CALL $272(($40 + [8800]), $38)
	$32 = (int_64)59
	$37 = [352]
	$31 = (int_64)0
	
.LOOP $label$2076:
	$34 = (int_64)0
	if ( ((uint_64)$35 > (uint_64)(int_64)11) ){ goto $label$2077 }
	$39 = *($37)
	if ( ((uint_32)(($39 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$2079 }
	$39 = ($39 + [165])
	goto $label$2078 
	
.LABEL $label$2079
	$39 = ( ($39 + [208]) ? [0] : ((($39 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$2078
	$34 = ((int_64)(CASTING uint_64)(uint_32 ($39 & [31])) << (int_64)((int_64)$32 & (int_64)4294967295))
	
.LABEL $label$2077
	$37 = ($37 + [1])
	$35 = ((int_64)$35 + (int_64)1)
	$31 = ((int_64)$34 | (int_64)$31)
	$32 = ((int_64)$32 + (int_64)-5)
	if ( ((int_64)$32 != (int_64)-6) ){ goto $label$2076 }
	$30 = *($38 + [56])
	$36 = *(($3 + [32]))
	$39 = ($3 + [28])
	$37 = *($39)
	if ( ((uint_32)$37 >= (uint_32)$36) ){ goto $label$2080 }
	*($37 + [8]) = $31
	*($37) = $38
	*($37 + [16]) = $30
	*($39) = ($37 + [24])
	goto $label$1335 
	
.LABEL $label$2080
	$15 = *($4)
	$39 = ((int_32)($37 - $15) / (int_32)[24])
	$14 = ($39 + [1])
	if ( ((uint_32)$14 >= (uint_32)[178956971]) ){ goto $label$1337 }
	$1 = [178956970]
	$36 = ((int_32)($36 - $15) / (int_32)[24])
	if ( ((uint_32)$36 > (uint_32)[89478484]) ){ goto $label$2082 }
	$1 = ($36 << [1])
	$1 = ( $14 ? $1 : ($1 <= $14) )
	if ( ($1 == 0) ){ goto $label$2081 }
	
.LABEL $label$2082
	$36 = CALL $348(((int_32)$1 * (int_32)[24]))
	$37 = *(($3 + [28]))
	$15 = *(($3 + [24]))
	goto $label$1336 
	
.LABEL $label$2081
	$1 = [0]
	$36 = [0]
	goto $label$1336 
	
.LABEL $label$1450
	CALL $350($10)
	
.LABEL $label$1449
	CALL $350($12)
	
.LABEL $label$1448
	CALL $350($10)
	
.LABEL $label$1447
	CALL $350($12)
	
.LABEL $label$1446
	CALL $350($10)
	
.LABEL $label$1445
	CALL $350($12)
	
.LABEL $label$1444
	CALL $350($10)
	
.LABEL $label$1443
	CALL $350($12)
	
.LABEL $label$1442
	CALL $350($10)
	
.LABEL $label$1441
	CALL $350($12)
	
.LABEL $label$1440
	CALL $350($10)
	
.LABEL $label$1439
	CALL $350($12)
	
.LABEL $label$1438
	CALL $350($10)
	
.LABEL $label$1437
	CALL $350($12)
	
.LABEL $label$1436
	CALL $350($10)
	
.LABEL $label$1435
	CALL $350($12)
	
.LABEL $label$1434
	CALL $350($10)
	
.LABEL $label$1433
	CALL $350($12)
	
.LABEL $label$1432
	CALL $350($10)
	
.LABEL $label$1431
	CALL $350($12)
	
.LABEL $label$1430
	CALL $350($10)
	
.LABEL $label$1429
	CALL $350($12)
	
.LABEL $label$1428
	CALL $350($10)
	
.LABEL $label$1427
	CALL $350($12)
	
.LABEL $label$1426
	CALL $350($10)
	
.LABEL $label$1425
	CALL $350($12)
	
.LABEL $label$1424
	CALL $350($10)
	
.LABEL $label$1423
	CALL $350($12)
	
.LABEL $label$1422
	CALL $350($10)
	
.LABEL $label$1421
	CALL $350($12)
	
.LABEL $label$1420
	CALL $350($10)
	
.LABEL $label$1419
	CALL $350($12)
	
.LABEL $label$1418
	CALL $350($10)
	
.LABEL $label$1417
	CALL $350($12)
	
.LABEL $label$1416
	CALL $350($10)
	
.LABEL $label$1415
	CALL $350($12)
	
.LABEL $label$1414
	CALL $350($10)
	
.LABEL $label$1413
	CALL $350($12)
	
.LABEL $label$1412
	CALL $350($10)
	
.LABEL $label$1411
	CALL $350($12)
	
.LABEL $label$1410
	CALL $350($10)
	
.LABEL $label$1409
	CALL $350($12)
	
.LABEL $label$1408
	CALL $350($10)
	
.LABEL $label$1407
	CALL $350($12)
	
.LABEL $label$1406
	CALL $350($10)
	
.LABEL $label$1405
	CALL $350($12)
	
.LABEL $label$1404
	CALL $350($10)
	
.LABEL $label$1403
	CALL $350($12)
	
.LABEL $label$1402
	CALL $350($10)
	
.LABEL $label$1401
	CALL $350($12)
	
.LABEL $label$1400
	CALL $350($10)
	
.LABEL $label$1399
	CALL $350($12)
	
.LABEL $label$1342
	CALL $350(($40 + [4096]))
	
.LABEL $label$1341
	CALL $350(($40 + [4056]))
	
.LABEL $label$1340
	CALL $350($10)
	
.LABEL $label$1339
	CALL $350($12)
	
.LABEL $label$1338
	CALL $350(($40 + [3952]))
	
.LABEL $label$1337
	CALL $371($4)
	
.LABEL $label$1336
	*(($39 = ($36 + ((int_32)$39 * (int_32)[24]))) + [8]) = $31
	*($39) = $38
	*($39 + [16]) = $30
	$1 = ($36 + ((int_32)$1 * (int_32)[24]))
	$36 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2084 }
	
.LOOP $label$2085:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2085 }
	$37 = *(($3 + [28]))
	$38 = *(($3 + [24]))
	goto $label$2083 
	
.LABEL $label$2084
	$38 = $37
	
.LABEL $label$2083
	*(($3 + [28])) = $36
	*(($3 + [24])) = $39
	*(($3 + [32])) = $1
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2086 }
	
.LOOP $label$2087:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2088 }
	if ( ((*($39 + [40]) & [1]) == 0) ){ goto $label$2089 }
	CALL $349(*(($39 + [48])))
	
.LABEL $label$2089
	CALL $349($39)
	
.LABEL $label$2088
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2087 }
	
.LABEL $label$2086
	if ( ($38 == 0) ){ goto $label$1335 }
	CALL $349($38)
	
.LABEL $label$1335
	if ( ((*(($40 + [2272])) & [1]) == 0) ){ goto $label$2090 }
	CALL $349(*(($40 + [2280])))
	
.LABEL $label$2090
	*($40 + [8800]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$37 = CALL asctime(CALL $432(($40 + [8800])))
	CALL prints([32])
	CALL prints($37)
	CALL prints([6064])
	CALL printui(*(($40 + [9040])))
	CALL prints([2560])
	CALL prints([80])
	$39 = *(($40 + [9104]))
	$37 = CALL db_lowerbound_i64(*($39), *($39 + [8]), (int_64)-3903047771713307648, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2096 }
	$37 = CALL $215($39, $37)
	CALL eosio_assert([1], [656])
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2097 }
	$35 = (int_64)-1
	
.LOOP $label$2098:
	$37 = CALL $215($39, $37)
	CALL eosio_assert([1], [656])
	$35 = ((int_64)$35 + (int_64)-1)
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 > (int_32)[-1]) ){ goto $label$2098 }
	if ( (int_64)($35 == 0) ){ goto $label$2096 }
	
.LABEL $label$2097
	$32 = *(($0 + [16]))
	*(($36 = CALL $348([40])) + [8]) = $32
	*($36) = $32
	*($36 + [16]) = (int_64)-1
	*($36 + [32]) = [0]
	*(($29 = ($36 + [24]))) = (int_64)0
	$37 = CALL db_lowerbound_i64($32, $32, (int_64)4229679821141019136, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2099 }
	$1 = CALL $274($36, $37)
	$14 = ($36 + [28])
	
.LOOP $label$2100:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$12 = [0]
	$37 = CALL db_next_i64(*($1 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2101 }
	$12 = CALL $274($36, $37)
	
.LABEL $label$2101
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$36), [4256])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [4304])
	$15 = *($29)
	$38 = *($14)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2102 }
	$35 = *($1)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2103:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2102 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2103 }
	
.LABEL $label$2102
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($14)
	$37 = *($29)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2106 }
	$15 = ($39 + [-24])
	
.LOOP $label$2107:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2108 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2109 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2109
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2110 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2110
	CALL $349($38)
	
.LABEL $label$2108
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2107 }
	$38 = *($14)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2105 }
	goto $label$2104 
	
.LABEL $label$2106
	$39 = $37
	
.LABEL $label$2105
	
.LOOP $label$2111:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2112 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2113 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2113
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2114 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2114
	CALL $349($37)
	
.LABEL $label$2112
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2111 }
	
.LABEL $label$2104
	*($14) = $39
	CALL db_remove_i64(*(($1 + [64])))
	$1 = $12
	if ( $12 ){ goto $label$2100 }
	
.LABEL $label$2099
	$37 = CALL db_lowerbound_i64(*($36), *(($36 + [8])), (int_64)4229679821141019136, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2115 }
	$37 = CALL $274($36, $37)
	CALL eosio_assert([1], [656])
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2115 }
	
.LOOP $label$2116:
	$37 = CALL $274($36, $37)
	CALL eosio_assert([1], [656])
	$37 = CALL db_next_i64(*($37 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 >= (int_32)[0]) ){ goto $label$2116 }
	
.LABEL $label$2115
	$11 = ($0 + [16])
	$34 = *($11)
	*(($14 = CALL $348([40])) + [8]) = $34
	*($14) = $34
	*($14 + [16]) = (int_64)-1
	*($14 + [32]) = [0]
	*(($10 = ($14 + [24]))) = (int_64)0
	$37 = CALL db_lowerbound_i64($34, $34, (int_64)4229679821141018624, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2117 }
	$20 = (($40 + [2168]) + [48])
	$21 = (($40 + [2168]) + [36])
	$22 = (($40 + [2168]) + [8])
	$23 = (($40 + [2168]) + [16])
	$24 = (($40 + [2168]) + [32])
	$28 = ($36 + [28])
	$12 = CALL $275($14, $37)
	$1 = $12
	
.LOOP $label$2118:
	*($22) = *($1 + [8])
	*($23) = *($1 + [16])
	*($40 + [2168]) = *($1)
	*((($40 + [2168]) + [24])) = *($1 + [24])
	*($24) = *($1 + [32])
	CALL $378($21, ($1 + [36]))
	CALL $378($20, ($1 + [48]))
	$35 = *($40 + [2168])
	$1 = ($36 + [24])
	$15 = *($1)
	$38 = *($28)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2119 }
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2120:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2119 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2120 }
	
.LABEL $label$2119
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2124 }
	$37 = *(($38 + [-24]))
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	if ( $37 ){ goto $label$2123 }
	goto $label$2122 
	
.LABEL $label$2124
	$37 = CALL db_find_i64(*($36), *(($36 + [8])), (int_64)4229679821141019136, $35)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2122 }
	$37 = CALL $274($36, $37)
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	
.LABEL $label$2123
	*($40 + [8800]) = ($40 + [2168])
	CALL eosio_assert([1], [832])
	CALL $277($36, $37, ($40 + [8800]))
	goto $label$2121 
	
.LABEL $label$2122
	*($40 + [8608]) = ($40 + [2168])
	*($40 + [8776]) = $32
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $36
	*((($40 + [8800]) + [8])) = ($40 + [8776])
	*($40 + [8804]) = ($40 + [8608])
	*(($38 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($38 + [44 align=4]) = (int_64)0
	*($38 + [52 align=4]) = (int_64)0
	*($38 + [60]) = $36
	CALL $276(($40 + [8800]), $38)
	$30 = *($38 + [64])
	$35 = *($38)
	$27 = ($36 + [32])
	$39 = *($27)
	$37 = *($28)
	if ( ((uint_32)$37 >= (uint_32)$39) ){ goto $label$2125 }
	*($37 + [8]) = $35
	*($37) = $38
	*($37 + [16]) = $30
	*($28) = ($37 + [24])
	goto $label$2121 
	
.LABEL $label$2125
	$15 = *($29)
	$3 = ((int_32)($37 - $15) / (int_32)[24])
	$26 = ($3 + [1])
	if ( ((uint_32)$26 >= (uint_32)[178956971]) ){ goto $label$2095 }
	$9 = [178956970]
	$39 = ((int_32)($39 - $15) / (int_32)[24])
	if ( ((uint_32)$39 > (uint_32)[89478484]) ){ goto $label$2127 }
	$39 = ($39 << [1])
	$9 = ( $26 ? $39 : ($39 <= $26) )
	if ( $9 ){ goto $label$2127 }
	$9 = [0]
	$26 = [0]
	goto $label$2126 
	
.LABEL $label$2127
	$26 = CALL $348(((int_32)$9 * (int_32)[24]))
	$37 = *($28)
	$15 = *($1)
	
.LABEL $label$2126
	*(($39 = ($26 + ((int_32)$3 * (int_32)[24]))) + [8]) = $35
	*($39) = $38
	*($39 + [16]) = $30
	$9 = ($26 + ((int_32)$9 * (int_32)[24]))
	$26 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2129 }
	
.LOOP $label$2130:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2130 }
	$37 = *($28)
	$38 = *($1)
	goto $label$2128 
	
.LABEL $label$2129
	$38 = $37
	
.LABEL $label$2128
	*($28) = $26
	*($1) = $39
	*($27) = $9
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2131 }
	
.LOOP $label$2132:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2133 }
	if ( ((*($39 + [48]) & [1]) == 0) ){ goto $label$2134 }
	CALL $349(*(($39 + [56])))
	
.LABEL $label$2134
	if ( ((*($39 + [36]) & [1]) == 0) ){ goto $label$2135 }
	CALL $349(*(($39 + [44])))
	
.LABEL $label$2135
	CALL $349($39)
	
.LABEL $label$2133
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2132 }
	
.LABEL $label$2131
	if ( ($38 == 0) ){ goto $label$2121 }
	CALL $349($38)
	
.LABEL $label$2121
	if ( ((*($20) & [1]) == 0) ){ goto $label$2136 }
	CALL $349(*((($40 + [2168]) + [56])))
	
.LABEL $label$2136
	if ( ((*($21) & [1]) == 0) ){ goto $label$2137 }
	CALL $349(*((($40 + [2168]) + [44])))
	
.LABEL $label$2137
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$1 = [0]
	$37 = CALL db_next_i64(*($12 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2138 }
	$1 = CALL $275($14, $37)
	
.LABEL $label$2138
	CALL eosio_assert(((int_32)*($12 + [60]) == (int_32)$14), [4256])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$13()), [4304])
	$15 = *($10)
	$9 = ($14 + [28])
	$38 = *($9)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2139 }
	$35 = *($12)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2140:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2139 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2140 }
	
.LABEL $label$2139
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($9)
	$37 = *($10)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2143 }
	$15 = ($39 + [-24])
	
.LOOP $label$2144:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2145 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2146 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2146
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2147 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2147
	CALL $349($38)
	
.LABEL $label$2145
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2144 }
	$38 = *($9)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2142 }
	goto $label$2141 
	
.LABEL $label$2143
	$39 = $37
	
.LABEL $label$2142
	
.LOOP $label$2148:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2149 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2150 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2150
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2151 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2151
	CALL $349($37)
	
.LABEL $label$2149
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2148 }
	
.LABEL $label$2141
	*($9) = $39
	CALL db_remove_i64(*(($12 + [64])))
	$12 = $1
	if ( $1 ){ goto $label$2118 }
	
.LABEL $label$2117
	$32 = *($11)
	*(($36 = CALL $348([40])) + [8]) = $32
	*($36) = $32
	*($36 + [16]) = (int_64)-1
	*($36 + [32]) = [0]
	*(($3 = ($36 + [24]))) = (int_64)0
	$37 = CALL db_lowerbound_i64($32, $32, (int_64)4229679821141018112, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2152 }
	$28 = (($40 + [2104]) + [48])
	$20 = (($40 + [2104]) + [36])
	$22 = (($40 + [2104]) + [8])
	$23 = (($40 + [2104]) + [16])
	$24 = (($40 + [2104]) + [32])
	$29 = ($14 + [28])
	$12 = CALL $278($36, $37)
	$1 = $12
	
.LOOP $label$2153:
	*($22) = *($1 + [8])
	*($23) = *($1 + [16])
	*($40 + [2104]) = *($1)
	*((($40 + [2104]) + [24])) = *($1 + [24])
	*($24) = *($1 + [32])
	CALL $378($20, ($1 + [36]))
	CALL $378($28, ($1 + [48]))
	$35 = *($40 + [2104])
	$1 = ($14 + [24])
	$15 = *($1)
	$38 = *($29)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2154 }
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2155:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2154 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2155 }
	
.LABEL $label$2154
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2159 }
	$37 = *(($38 + [-24]))
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$14), [704])
	if ( $37 ){ goto $label$2158 }
	goto $label$2157 
	
.LABEL $label$2159
	$37 = CALL db_find_i64(*($14), *(($14 + [8])), (int_64)4229679821141018624, $35)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2157 }
	$37 = CALL $275($14, $37)
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$14), [704])
	
.LABEL $label$2158
	*($40 + [8800]) = ($40 + [2104])
	CALL eosio_assert([1], [832])
	CALL $280($14, $37, ($40 + [8800]))
	goto $label$2156 
	
.LABEL $label$2157
	*($40 + [8608]) = ($40 + [2104])
	*($40 + [8776]) = $34
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $14
	*((($40 + [8800]) + [8])) = ($40 + [8776])
	*($40 + [8804]) = ($40 + [8608])
	*(($38 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($38 + [44 align=4]) = (int_64)0
	*($38 + [52 align=4]) = (int_64)0
	*($38 + [60]) = $14
	CALL $279(($40 + [8800]), $38)
	$30 = *($38 + [64])
	$35 = *($38)
	$21 = ($14 + [32])
	$39 = *($21)
	$37 = *($29)
	if ( ((uint_32)$37 >= (uint_32)$39) ){ goto $label$2160 }
	*($37 + [8]) = $35
	*($37) = $38
	*($37 + [16]) = $30
	*($29) = ($37 + [24])
	goto $label$2156 
	
.LABEL $label$2160
	$15 = *($10)
	$26 = ((int_32)($37 - $15) / (int_32)[24])
	$27 = ($26 + [1])
	if ( ((uint_32)$27 >= (uint_32)[178956971]) ){ goto $label$2094 }
	$9 = [178956970]
	$39 = ((int_32)($39 - $15) / (int_32)[24])
	if ( ((uint_32)$39 > (uint_32)[89478484]) ){ goto $label$2162 }
	$39 = ($39 << [1])
	$9 = ( $27 ? $39 : ($39 <= $27) )
	if ( $9 ){ goto $label$2162 }
	$9 = [0]
	$27 = [0]
	goto $label$2161 
	
.LABEL $label$2162
	$27 = CALL $348(((int_32)$9 * (int_32)[24]))
	$37 = *($29)
	$15 = *($1)
	
.LABEL $label$2161
	*(($39 = ($27 + ((int_32)$26 * (int_32)[24]))) + [8]) = $35
	*($39) = $38
	*($39 + [16]) = $30
	$9 = ($27 + ((int_32)$9 * (int_32)[24]))
	$27 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2164 }
	
.LOOP $label$2165:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2165 }
	$37 = *($29)
	$38 = *($1)
	goto $label$2163 
	
.LABEL $label$2164
	$38 = $37
	
.LABEL $label$2163
	*($29) = $27
	*($1) = $39
	*($21) = $9
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2166 }
	
.LOOP $label$2167:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2168 }
	if ( ((*($39 + [48]) & [1]) == 0) ){ goto $label$2169 }
	CALL $349(*(($39 + [56])))
	
.LABEL $label$2169
	if ( ((*($39 + [36]) & [1]) == 0) ){ goto $label$2170 }
	CALL $349(*(($39 + [44])))
	
.LABEL $label$2170
	CALL $349($39)
	
.LABEL $label$2168
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2167 }
	
.LABEL $label$2166
	if ( ($38 == 0) ){ goto $label$2156 }
	CALL $349($38)
	
.LABEL $label$2156
	if ( ((*($28) & [1]) == 0) ){ goto $label$2171 }
	CALL $349(*((($40 + [2104]) + [56])))
	
.LABEL $label$2171
	if ( ((*($20) & [1]) == 0) ){ goto $label$2172 }
	CALL $349(*((($40 + [2104]) + [44])))
	
.LABEL $label$2172
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$1 = [0]
	$37 = CALL db_next_i64(*($12 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2173 }
	$1 = CALL $278($36, $37)
	
.LABEL $label$2173
	CALL eosio_assert(((int_32)*($12 + [60]) == (int_32)$36), [4256])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [4304])
	$21 = ($36 + [24])
	$15 = *($21)
	$9 = ($36 + [28])
	$38 = *($9)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2174 }
	$35 = *($12)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2175:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2174 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2175 }
	
.LABEL $label$2174
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($9)
	$37 = *($21)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2178 }
	$15 = ($39 + [-24])
	
.LOOP $label$2179:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2180 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2181 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2181
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2182 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2182
	CALL $349($38)
	
.LABEL $label$2180
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2179 }
	$38 = *($9)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2177 }
	goto $label$2176 
	
.LABEL $label$2178
	$39 = $37
	
.LABEL $label$2177
	
.LOOP $label$2183:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2184 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2185 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2185
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2186 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2186
	CALL $349($37)
	
.LABEL $label$2184
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2183 }
	
.LABEL $label$2176
	*($9) = $39
	CALL db_remove_i64(*(($12 + [64])))
	$12 = $1
	if ( $1 ){ goto $label$2153 }
	
.LABEL $label$2152
	$26 = ($0 + [16])
	$34 = *($26)
	*(($14 = CALL $348([40])) + [8]) = $34
	*($14) = $34
	*($14 + [16]) = (int_64)-1
	*($14 + [32]) = [0]
	*(($29 = ($14 + [24]))) = (int_64)0
	$37 = CALL db_lowerbound_i64($34, $34, (int_64)4229679821141017600, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2187 }
	$28 = (($40 + [2040]) + [48])
	$0 = (($40 + [2040]) + [36])
	$20 = (($40 + [2040]) + [8])
	$21 = (($40 + [2040]) + [16])
	$22 = (($40 + [2040]) + [32])
	$10 = ($36 + [28])
	$12 = CALL $281($14, $37)
	$1 = $12
	
.LOOP $label$2188:
	*($20) = *($1 + [8])
	*($21) = *($1 + [16])
	*($40 + [2040]) = *($1)
	*((($40 + [2040]) + [24])) = *($1 + [24])
	*($22) = *($1 + [32])
	CALL $378($0, ($1 + [36]))
	CALL $378($28, ($1 + [48]))
	$35 = *($40 + [2040])
	$1 = ($36 + [24])
	$15 = *($1)
	$38 = *($10)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2189 }
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2190:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2189 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2190 }
	
.LABEL $label$2189
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2194 }
	$37 = *(($38 + [-24]))
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	if ( $37 ){ goto $label$2193 }
	goto $label$2192 
	
.LABEL $label$2194
	$37 = CALL db_find_i64(*($36), *(($36 + [8])), (int_64)4229679821141018112, $35)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2192 }
	$37 = CALL $278($36, $37)
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	
.LABEL $label$2193
	*($40 + [8800]) = ($40 + [2040])
	CALL eosio_assert([1], [832])
	CALL $283($36, $37, ($40 + [8800]))
	goto $label$2191 
	
.LABEL $label$2192
	*($40 + [8608]) = ($40 + [2040])
	*($40 + [8776]) = $32
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $36
	*((($40 + [8800]) + [8])) = ($40 + [8776])
	*($40 + [8804]) = ($40 + [8608])
	*(($38 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($38 + [44 align=4]) = (int_64)0
	*($38 + [52 align=4]) = (int_64)0
	*($38 + [60]) = $36
	CALL $282(($40 + [8800]), $38)
	$30 = *($38 + [64])
	$35 = *($38)
	$23 = ($36 + [32])
	$39 = *($23)
	$37 = *($10)
	if ( ((uint_32)$37 >= (uint_32)$39) ){ goto $label$2195 }
	*($37 + [8]) = $35
	*($37) = $38
	*($37 + [16]) = $30
	*($10) = ($37 + [24])
	goto $label$2191 
	
.LABEL $label$2195
	$15 = *($3)
	$27 = ((int_32)($37 - $15) / (int_32)[24])
	$24 = ($27 + [1])
	if ( ((uint_32)$24 >= (uint_32)[178956971]) ){ goto $label$2093 }
	$9 = [178956970]
	$39 = ((int_32)($39 - $15) / (int_32)[24])
	if ( ((uint_32)$39 > (uint_32)[89478484]) ){ goto $label$2197 }
	$39 = ($39 << [1])
	$9 = ( $24 ? $39 : ($39 <= $24) )
	if ( $9 ){ goto $label$2197 }
	$9 = [0]
	$24 = [0]
	goto $label$2196 
	
.LABEL $label$2197
	$24 = CALL $348(((int_32)$9 * (int_32)[24]))
	$37 = *($10)
	$15 = *($1)
	
.LABEL $label$2196
	*(($39 = ($24 + ((int_32)$27 * (int_32)[24]))) + [8]) = $35
	*($39) = $38
	*($39 + [16]) = $30
	$9 = ($24 + ((int_32)$9 * (int_32)[24]))
	$24 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2199 }
	
.LOOP $label$2200:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2200 }
	$37 = *($10)
	$38 = *($1)
	goto $label$2198 
	
.LABEL $label$2199
	$38 = $37
	
.LABEL $label$2198
	*($10) = $24
	*($1) = $39
	*($23) = $9
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2201 }
	
.LOOP $label$2202:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2203 }
	if ( ((*($39 + [48]) & [1]) == 0) ){ goto $label$2204 }
	CALL $349(*(($39 + [56])))
	
.LABEL $label$2204
	if ( ((*($39 + [36]) & [1]) == 0) ){ goto $label$2205 }
	CALL $349(*(($39 + [44])))
	
.LABEL $label$2205
	CALL $349($39)
	
.LABEL $label$2203
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2202 }
	
.LABEL $label$2201
	if ( ($38 == 0) ){ goto $label$2191 }
	CALL $349($38)
	
.LABEL $label$2191
	if ( ((*($28) & [1]) == 0) ){ goto $label$2206 }
	CALL $349(*((($40 + [2040]) + [56])))
	
.LABEL $label$2206
	if ( ((*($0) & [1]) == 0) ){ goto $label$2207 }
	CALL $349(*((($40 + [2040]) + [44])))
	
.LABEL $label$2207
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$1 = [0]
	$37 = CALL db_next_i64(*($12 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2208 }
	$1 = CALL $281($14, $37)
	
.LABEL $label$2208
	CALL eosio_assert(((int_32)*($12 + [60]) == (int_32)$14), [4256])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$13()), [4304])
	$15 = *($29)
	$9 = ($14 + [28])
	$38 = *($9)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2209 }
	$35 = *($12)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2210:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2209 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2210 }
	
.LABEL $label$2209
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($9)
	$37 = *($29)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2213 }
	$15 = ($39 + [-24])
	
.LOOP $label$2214:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2215 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2216 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2216
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2217 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2217
	CALL $349($38)
	
.LABEL $label$2215
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2214 }
	$38 = *($9)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2212 }
	goto $label$2211 
	
.LABEL $label$2213
	$39 = $37
	
.LABEL $label$2212
	
.LOOP $label$2218:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2219 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2220 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2220
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2221 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2221
	CALL $349($37)
	
.LABEL $label$2219
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2218 }
	
.LABEL $label$2211
	*($9) = $39
	CALL db_remove_i64(*(($12 + [64])))
	$12 = $1
	if ( $1 ){ goto $label$2188 }
	
.LABEL $label$2187
	$32 = *($26)
	*(($36 = CALL $348([40])) + [8]) = $32
	*($36) = $32
	*($36 + [16]) = (int_64)-1
	*($36 + [32]) = [0]
	*(($26 = ($36 + [24]))) = (int_64)0
	$37 = CALL db_lowerbound_i64($32, $32, (int_64)4229679821141017088, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2222 }
	$28 = (($40 + [1976]) + [48])
	$0 = (($40 + [1976]) + [36])
	$21 = (($40 + [1976]) + [8])
	$22 = (($40 + [1976]) + [16])
	$23 = (($40 + [1976]) + [32])
	$10 = ($14 + [28])
	$12 = CALL $284($36, $37)
	$1 = $12
	
.LOOP $label$2223:
	*($21) = *($1 + [8])
	*($22) = *($1 + [16])
	*($40 + [1976]) = *($1)
	*((($40 + [1976]) + [24])) = *($1 + [24])
	*($23) = *($1 + [32])
	CALL $378($0, ($1 + [36]))
	CALL $378($28, ($1 + [48]))
	$35 = *($40 + [1976])
	$1 = ($14 + [24])
	$15 = *($1)
	$38 = *($10)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2224 }
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2225:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2224 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2225 }
	
.LABEL $label$2224
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2229 }
	$37 = *(($38 + [-24]))
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$14), [704])
	if ( $37 ){ goto $label$2228 }
	goto $label$2227 
	
.LABEL $label$2229
	$37 = CALL db_find_i64(*($14), *(($14 + [8])), (int_64)4229679821141017600, $35)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2227 }
	$37 = CALL $281($14, $37)
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$14), [704])
	
.LABEL $label$2228
	*($40 + [8800]) = ($40 + [1976])
	CALL eosio_assert([1], [832])
	CALL $286($14, $37, ($40 + [8800]))
	goto $label$2226 
	
.LABEL $label$2227
	*($40 + [8608]) = ($40 + [1976])
	*($40 + [8776]) = $34
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $14
	*((($40 + [8800]) + [8])) = ($40 + [8776])
	*($40 + [8804]) = ($40 + [8608])
	*(($38 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($38 + [44 align=4]) = (int_64)0
	*($38 + [52 align=4]) = (int_64)0
	*($38 + [60]) = $14
	CALL $285(($40 + [8800]), $38)
	$30 = *($38 + [64])
	$35 = *($38)
	$20 = ($14 + [32])
	$39 = *($20)
	$37 = *($10)
	if ( ((uint_32)$37 >= (uint_32)$39) ){ goto $label$2230 }
	*($37 + [8]) = $35
	*($37) = $38
	*($37 + [16]) = $30
	*($10) = ($37 + [24])
	goto $label$2226 
	
.LABEL $label$2230
	$15 = *($29)
	$27 = ((int_32)($37 - $15) / (int_32)[24])
	$24 = ($27 + [1])
	if ( ((uint_32)$24 >= (uint_32)[178956971]) ){ goto $label$2092 }
	$9 = [178956970]
	$39 = ((int_32)($39 - $15) / (int_32)[24])
	if ( ((uint_32)$39 > (uint_32)[89478484]) ){ goto $label$2232 }
	$39 = ($39 << [1])
	$9 = ( $24 ? $39 : ($39 <= $24) )
	if ( $9 ){ goto $label$2232 }
	$9 = [0]
	$24 = [0]
	goto $label$2231 
	
.LABEL $label$2232
	$24 = CALL $348(((int_32)$9 * (int_32)[24]))
	$37 = *($10)
	$15 = *($1)
	
.LABEL $label$2231
	*(($39 = ($24 + ((int_32)$27 * (int_32)[24]))) + [8]) = $35
	*($39) = $38
	*($39 + [16]) = $30
	$9 = ($24 + ((int_32)$9 * (int_32)[24]))
	$24 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2234 }
	
.LOOP $label$2235:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2235 }
	$37 = *($10)
	$38 = *($1)
	goto $label$2233 
	
.LABEL $label$2234
	$38 = $37
	
.LABEL $label$2233
	*($10) = $24
	*($1) = $39
	*($20) = $9
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2236 }
	
.LOOP $label$2237:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2238 }
	if ( ((*($39 + [48]) & [1]) == 0) ){ goto $label$2239 }
	CALL $349(*(($39 + [56])))
	
.LABEL $label$2239
	if ( ((*($39 + [36]) & [1]) == 0) ){ goto $label$2240 }
	CALL $349(*(($39 + [44])))
	
.LABEL $label$2240
	CALL $349($39)
	
.LABEL $label$2238
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2237 }
	
.LABEL $label$2236
	if ( ($38 == 0) ){ goto $label$2226 }
	CALL $349($38)
	
.LABEL $label$2226
	if ( ((*($28) & [1]) == 0) ){ goto $label$2241 }
	CALL $349(*((($40 + [1976]) + [56])))
	
.LABEL $label$2241
	if ( ((*($0) & [1]) == 0) ){ goto $label$2242 }
	CALL $349(*((($40 + [1976]) + [44])))
	
.LABEL $label$2242
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$1 = [0]
	$37 = CALL db_next_i64(*($12 + [64]), ($40 + [8800]))
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2243 }
	$1 = CALL $284($36, $37)
	
.LABEL $label$2243
	CALL eosio_assert(((int_32)*($12 + [60]) == (int_32)$36), [4256])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [4304])
	$20 = ($36 + [24])
	$15 = *($20)
	$9 = ($36 + [28])
	$38 = *($9)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2244 }
	$35 = *($12)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2245:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2244 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2245 }
	
.LABEL $label$2244
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($9)
	$37 = *($20)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2248 }
	$15 = ($39 + [-24])
	
.LOOP $label$2249:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2250 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2251 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2251
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2252 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2252
	CALL $349($38)
	
.LABEL $label$2250
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2249 }
	$38 = *($9)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2247 }
	goto $label$2246 
	
.LABEL $label$2248
	$39 = $37
	
.LABEL $label$2247
	
.LOOP $label$2253:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2254 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2255 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2255
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2256 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2256
	CALL $349($37)
	
.LABEL $label$2254
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2253 }
	
.LABEL $label$2246
	*($9) = $39
	CALL db_remove_i64(*(($12 + [64])))
	$12 = $1
	if ( $1 ){ goto $label$2223 }
	
.LABEL $label$2222
	$0 = (($40 + [9088]) + [16])
	$23 = *($0)
	$37 = CALL db_lowerbound_i64(*($23), *($23 + [8]), (int_64)-3903047771713307648, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2096 }
	$29 = (($40 + [1912]) + [48])
	$10 = (($40 + [1912]) + [36])
	$20 = (($40 + [1912]) + [8])
	$21 = (($40 + [1912]) + [16])
	$22 = (($40 + [1912]) + [32])
	$9 = ($36 + [28])
	$14 = CALL $215($23, $37)
	$1 = $14
	
.LOOP $label$2257:
	*($20) = *($1 + [8])
	*($21) = *($1 + [16])
	*($40 + [1912]) = *($1)
	*((($40 + [1912]) + [24])) = *($1 + [24])
	*($22) = *($1 + [32])
	CALL $378($10, ($1 + [36]))
	CALL $378($29, ($1 + [48]))
	$35 = *($40 + [1912])
	$1 = ($36 + [24])
	$15 = *($1)
	$38 = *($9)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2258 }
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2259:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2258 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2259 }
	
.LABEL $label$2258
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2263 }
	$37 = *(($38 + [-24]))
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	if ( $37 ){ goto $label$2262 }
	goto $label$2261 
	
.LABEL $label$2263
	$37 = CALL db_find_i64(*($36), *(($36 + [8])), (int_64)4229679821141017088, $35)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$2261 }
	$37 = CALL $284($36, $37)
	CALL eosio_assert(((int_32)*($37 + [60]) == (int_32)$36), [704])
	
.LABEL $label$2262
	*($40 + [8800]) = ($40 + [1912])
	CALL eosio_assert([1], [832])
	CALL $288($36, $37, ($40 + [8800]))
	goto $label$2260 
	
.LABEL $label$2261
	*($40 + [8608]) = ($40 + [1912])
	*($40 + [8776]) = $32
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$13()), [768])
	*($40 + [8800]) = $36
	*((($40 + [8800]) + [8])) = ($40 + [8776])
	*($40 + [8804]) = ($40 + [8608])
	*(($38 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($38 + [44 align=4]) = (int_64)0
	*($38 + [52 align=4]) = (int_64)0
	*($38 + [60]) = $36
	CALL $287(($40 + [8800]), $38)
	$30 = *($38 + [64])
	$35 = *($38)
	$28 = ($36 + [32])
	$39 = *($28)
	$37 = *($9)
	if ( ((uint_32)$37 >= (uint_32)$39) ){ goto $label$2264 }
	*($37 + [8]) = $35
	*($37) = $38
	*($37 + [16]) = $30
	*($9) = ($37 + [24])
	goto $label$2260 
	
.LABEL $label$2264
	$15 = *($26)
	$27 = ((int_32)($37 - $15) / (int_32)[24])
	$24 = ($27 + [1])
	if ( ((uint_32)$24 >= (uint_32)[178956971]) ){ goto $label$2091 }
	$12 = [178956970]
	$39 = ((int_32)($39 - $15) / (int_32)[24])
	if ( ((uint_32)$39 > (uint_32)[89478484]) ){ goto $label$2266 }
	$39 = ($39 << [1])
	$12 = ( $24 ? $39 : ($39 <= $24) )
	if ( $12 ){ goto $label$2266 }
	$12 = [0]
	$24 = [0]
	goto $label$2265 
	
.LABEL $label$2266
	$24 = CALL $348(((int_32)$12 * (int_32)[24]))
	$37 = *($9)
	$15 = *($1)
	
.LABEL $label$2265
	*(($39 = ($24 + ((int_32)$27 * (int_32)[24]))) + [8]) = $35
	*($39) = $38
	*($39 + [16]) = $30
	$12 = ($24 + ((int_32)$12 * (int_32)[24]))
	$24 = ($39 + [24])
	if ( ((int_32)$37 == (int_32)$15) ){ goto $label$2268 }
	
.LOOP $label$2269:
	$38 = ($37 + [-24])
	$30 = *($38)
	*($38) = [0]
	*(($39 + [-24])) = $30
	*(($39 + [-8])) = *(($37 + [-8]))
	*(($39 + [-12])) = *(($37 + [-12]))
	*(($39 + [-16])) = *(($37 + [-16]))
	$39 = ($39 + [-24])
	$37 = $38
	if ( ((int_32)$15 != (int_32)$38) ){ goto $label$2269 }
	$37 = *($9)
	$38 = *($1)
	goto $label$2267 
	
.LABEL $label$2268
	$38 = $37
	
.LABEL $label$2267
	*($9) = $24
	*($1) = $39
	*($28) = $12
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$2270 }
	
.LOOP $label$2271:
	$37 = ($37 + [-24])
	$39 = *($37)
	*($37) = [0]
	if ( ($39 == 0) ){ goto $label$2272 }
	if ( ((*($39 + [48]) & [1]) == 0) ){ goto $label$2273 }
	CALL $349(*(($39 + [56])))
	
.LABEL $label$2273
	if ( ((*($39 + [36]) & [1]) == 0) ){ goto $label$2274 }
	CALL $349(*(($39 + [44])))
	
.LABEL $label$2274
	CALL $349($39)
	
.LABEL $label$2272
	if ( ((int_32)$38 != (int_32)$37) ){ goto $label$2271 }
	
.LABEL $label$2270
	if ( ($38 == 0) ){ goto $label$2260 }
	CALL $349($38)
	
.LABEL $label$2260
	if ( ((*($29) & [1]) == 0) ){ goto $label$2275 }
	CALL $349(*((($40 + [1912]) + [56])))
	
.LABEL $label$2275
	if ( ((*($10) & [1]) == 0) ){ goto $label$2276 }
	CALL $349(*((($40 + [1912]) + [44])))
	
.LABEL $label$2276
	$37 = *($0)
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$1 = [0]
	$39 = CALL db_next_i64(*($14 + [64]), ($40 + [8800]))
	if ( ((int_32)$39 < (int_32)[0]) ){ goto $label$2277 }
	$1 = CALL $215($23, $39)
	
.LABEL $label$2277
	CALL eosio_assert(((int_32)*($14 + [60]) == (int_32)$37), [4256])
	CALL eosio_assert(((int_64)*($37) == (int_64)CALL $fimport$13()), [4304])
	$28 = ($37 + [24])
	$15 = *($28)
	$12 = ($37 + [28])
	$38 = *($12)
	if ( ((int_32)$38 == (int_32)$15) ){ goto $label$2278 }
	$35 = *($14)
	$37 = ($38 + [-24])
	$30 = ([0] - $15)
	
.LOOP $label$2279:
	if ( ((int_64)*(*($37)) == (int_64)$35) ){ goto $label$2278 }
	$38 = $37
	$39 = ($37 + [-24])
	$37 = $39
	if ( ((int_32)($39 + $30) != (int_32)[-24]) ){ goto $label$2279 }
	
.LABEL $label$2278
	CALL eosio_assert(((int_32)$38 != (int_32)$15), [4368])
	$39 = *($12)
	$37 = *($28)
	$37 = ($37 + ((int_32)((int_32)(($38 + [-24]) - $37) / (int_32)[24]) * (int_32)[24]))
	$38 = ($37 + [24])
	if ( ((int_32)$38 == (int_32)$39) ){ goto $label$2282 }
	$15 = ($39 + [-24])
	
.LOOP $label$2283:
	$39 = ($37 + [24])
	$30 = *($39)
	*($39) = [0]
	$38 = *($37)
	*($37) = $30
	if ( ($38 == 0) ){ goto $label$2284 }
	if ( ((*($38 + [48]) & [1]) == 0) ){ goto $label$2285 }
	CALL $349(*(($38 + [56])))
	
.LABEL $label$2285
	if ( ((*($38 + [36]) & [1]) == 0) ){ goto $label$2286 }
	CALL $349(*(($38 + [44])))
	
.LABEL $label$2286
	CALL $349($38)
	
.LABEL $label$2284
	*(($37 + [16])) = *(($37 + [40]))
	*(($37 + [8])) = *(($37 + [32]))
	$37 = $39
	if ( ((int_32)$15 != (int_32)$39) ){ goto $label$2283 }
	$38 = *($12)
	if ( ((int_32)$38 != (int_32)$39) ){ goto $label$2281 }
	goto $label$2280 
	
.LABEL $label$2282
	$39 = $37
	
.LABEL $label$2281
	
.LOOP $label$2287:
	$38 = ($38 + [-24])
	$37 = *($38)
	*($38) = [0]
	if ( ($37 == 0) ){ goto $label$2288 }
	if ( ((*($37 + [48]) & [1]) == 0) ){ goto $label$2289 }
	CALL $349(*(($37 + [56])))
	
.LABEL $label$2289
	if ( ((*($37 + [36]) & [1]) == 0) ){ goto $label$2290 }
	CALL $349(*(($37 + [44])))
	
.LABEL $label$2290
	CALL $349($37)
	
.LABEL $label$2288
	if ( ((int_32)$39 != (int_32)$38) ){ goto $label$2287 }
	
.LABEL $label$2280
	*($12) = $39
	CALL db_remove_i64(*(($14 + [64])))
	$14 = $1
	if ( $1 ){ goto $label$2257 }
	
.LABEL $label$2096
	CALL $289(($40 + [4136]), *($40 + [4140]))
	if ( ((*(($40 + [9072])) & [1]) == 0) ){ goto $label$2291 }
	CALL $349(*(($40 + [9080])))
	
.LABEL $label$2291
	*([0] + [4]) = ($40 + [9120])
	return (unreachable)
	
.LABEL $label$2095
	CALL $371($29)
	
.LABEL $label$2094
	CALL $371($10)
	
.LABEL $label$2093
	CALL $371($3)
	
.LABEL $label$2092
	CALL $371($29)
	
.LABEL $label$2091
	CALL $371($26)
	(CASTING uint_32)(uint_64 $32)
	(CASTING uint_32)(uint_64 $32)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $320 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $323 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $324($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $324($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-3903047771713307648, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

void .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $330($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $326 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $331($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $102($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $353($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $348($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $353($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $349($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $350($7)
	return (unreachable)
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([2416])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2432])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $94($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [2208])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC $28 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494400, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $26($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_64 .FUNC _ZN5eosio14string_to_nameENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	if ( (*($0) & [1]) ){ goto $label$2 }
	$0 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($0 + [8])
	
.LABEL $label$1
	$4 = [-1]
	
.LOOP $label$3:
	$3 = ($0 + $4)
	$1 = ($4 + [1])
	$4 = $1
	if ( *(($3 + [1])) ){ goto $label$3 }
	$2 = (CASTING uint_64)(uint_32 $1)
	$6 = (int_64)0
	$5 = (int_64)59
	$7 = (int_64)0
	
.LOOP $label$4:
	$8 = (int_64)0
	if ( ((uint_64)$6 >= (uint_64)$2) ){ goto $label$5 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$9 }
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$8 = ((int_64)$8 & (int_64)15)
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$4 }
	return $7
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC $318 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC strchr (int_32 $0, int_32 $1)
{
	$0 = CALL __strchrnul($0, $1)
	return ( $0 ? [0] : ((int_32)*($0) == (int_32)($1 & [255])) )
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

void .FUNC $217 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *([0] + [4])
	$4 = $3
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$3 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$1
	CALL read_action_data($3, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [2208])
	CALL memcpy($0, $3, [8])
	$2 = ($1 & [-8])
	CALL eosio_assert(((int_32)$2 != (int_32)[8]), [2208])
	CALL memcpy(($0 + [8]), ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$2 != (int_32)[16]), [2208])
	CALL memcpy(($0 + [16]), ($3 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($3)
	
.LABEL $label$3
	*([0] + [4]) = $4
}

void .FUNC $216 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $325($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $213($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $210 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $214($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

int_32 .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC _ZN7eosdice11upcheckinfoEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [16]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$2 = CALL $197()
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$5:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	*(($4 = CALL $348([40])) + [8]) = $13
	*($4) = $11
	*($4 + [16]) = (int_64)-1
	$10 = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	$8 = ($4 + [24])
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$9:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$10 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*(($15 + [100])) = (int_64)0
	*($15 + [64]) = (int_64)0
	*($15 + [56]) = (int_64)0
	*($15 + [72]) = (int_64)0
	*($15 + [80]) = (int_64)0
	*($15 + [88]) = (int_64)0
	*($15 + [96]) = [0]
	$1 = ($15 + [96])
	$0 = CALL strlen([128])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$19 }
	*(($15 + [96])) = ($0 << [1])
	$3 = ($1 + [1])
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$14 = (($0 + [16]) & [-16])
	$3 = CALL $348($14)
	*(($15 + [96])) = ($14 | [1])
	*(($15 + [104])) = $3
	*(($15 + [100])) = $0
	
.LABEL $label$18
	CALL memcpy($3, [128], $0)
	
.LABEL $label$17
	*(($3 + $0)) = [0]
	CALL $198(($15 + [112]), $4, $13)
	if ( (*($15 + [116]) == 0) ){ goto $label$21 }
	CALL $198(($15 + [184]), $4, $13)
	$0 = *($15 + [188])
	if ( $0 ){ goto $label$22 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$22
	CALL memcpy(($15 + [112]), $0, [40])
	CALL $378((($15 + [112]) + [40]), ($0 + [40]))
	if ( ((*((($15 + [56]) + [40])) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($15 + [104])))
	goto $label$20 
	
.LABEL $label$21
	CALL memcpy(($15 + [112]), ($15 + [56]), [40])
	*((($15 + [112]) + [48])) = *(($1 + [8]))
	$10 = *($1)
	*(($15 + [100])) = [0]
	*($15 + [152]) = $10
	*((($15 + [56]) + [40])) = [0]
	*((($15 + [56]) + [48])) = [0]
	
.LABEL $label$20
	*($15 + [144]) = $2
	$1 = CALL memcpy($15, ($15 + [112]), [40])
	CALL $378(($1 + [40]), (($1 + [112]) + [40]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$23:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$24 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	CALL $198(($1 + [176]), $4, $13)
	$0 = *($1 + [180])
	if ( ($0 == 0) ){ goto $label$27 }
	*($1 + [184]) = $1
	CALL eosio_assert([1], [832])
	CALL $200($4, $0, ($1 + [184]))
	goto $label$13 
	
.LABEL $label$27
	*($1 + [168]) = $1
	*($1 + [200]) = $11
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [768])
	*($1 + [184]) = $4
	*($1 + [188]) = ($1 + [168])
	*($1 + [192]) = ($1 + [200])
	*(($15 = CALL $348([64])) + [48]) = [0]
	$10 = (int_64)0
	*($15 + [40 align=4]) = (int_64)0
	*($15 + [52]) = $4
	CALL $199(($1 + [184]), $15)
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$28:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$28 }
	$5 = *($15 + [56])
	$6 = *(($4 + [32]))
	$3 = ($4 + [28])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)$6) ){ goto $label$32 }
	*($0 + [8]) = $13
	*($0) = $15
	*($0 + [16]) = $5
	*($3) = ($0 + [24])
	goto $label$13 
	
.LABEL $label$32
	$14 = *($8)
	$3 = ((int_32)($0 - $14) / (int_32)[24])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$15 }
	$8 = [178956970]
	$6 = ((int_32)($6 - $14) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$34 }
	$8 = ($6 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$6 = CALL $348(((int_32)$8 * (int_32)[24]))
	$0 = *(($4 + [28]))
	$14 = *(($4 + [24]))
	goto $label$14 
	
.LABEL $label$33
	$8 = [0]
	$6 = [0]
	goto $label$14 
	
.LABEL $label$16
	CALL $350($1)
	
.LABEL $label$15
	CALL $371($8)
	
.LABEL $label$14
	*(($3 = ($6 + ((int_32)$3 * (int_32)[24]))) + [8]) = $13
	*($3) = $15
	*($3 + [16]) = $5
	$5 = ($6 + ((int_32)$8 * (int_32)[24]))
	$6 = ($3 + [24])
	if ( ((int_32)$0 == (int_32)$14) ){ goto $label$36 }
	
.LOOP $label$37:
	$15 = ($0 + [-24])
	$8 = *($15)
	*($15) = [0]
	*(($3 + [-24])) = $8
	*(($3 + [-8])) = *(($0 + [-8]))
	*(($3 + [-12])) = *(($0 + [-12]))
	*(($3 + [-16])) = *(($0 + [-16]))
	$3 = ($3 + [-24])
	$0 = $15
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$37 }
	$0 = *(($4 + [28]))
	$15 = *(($4 + [24]))
	goto $label$35 
	
.LABEL $label$36
	$15 = $0
	
.LABEL $label$35
	*(($4 + [28])) = $6
	*(($4 + [24])) = $3
	*(($4 + [32])) = $5
	if ( ((int_32)$0 == (int_32)$15) ){ goto $label$38 }
	
.LOOP $label$39:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$40 }
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$41 }
	CALL $349(*(($3 + [48])))
	
.LABEL $label$41
	CALL $349($3)
	
.LABEL $label$40
	if ( ((int_32)$15 != (int_32)$0) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$13 }
	CALL $349($15)
	
.LABEL $label$13
	if ( ((*(($1 + [40])) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*(($1 + [48])))
	
.LABEL $label$42
	if ( ((*((($1 + [112]) + [40])) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*(($1 + [160])))
	
.LABEL $label$43
	*([0] + [4]) = ($1 + [208])
	(unreachable)
	(unreachable)
}

int_64 .FUNC $197 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	if ( ($0 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
	return $1
}

void .FUNC _ZN7eosdice10upopeninfoEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [16]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$2 = CALL $209()
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$5:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	*(($4 = CALL $348([40])) + [8]) = $13
	*($4) = $11
	*($4 + [16]) = (int_64)-1
	$10 = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	$8 = ($4 + [24])
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$9:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$10 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*(($15 + [100])) = (int_64)0
	*($15 + [64]) = (int_64)0
	*($15 + [56]) = (int_64)0
	*($15 + [72]) = (int_64)0
	*($15 + [80]) = (int_64)0
	*($15 + [88]) = (int_64)0
	*($15 + [96]) = [0]
	$1 = ($15 + [96])
	$0 = CALL strlen([128])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$19 }
	*(($15 + [96])) = ($0 << [1])
	$3 = ($1 + [1])
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$14 = (($0 + [16]) & [-16])
	$3 = CALL $348($14)
	*(($15 + [96])) = ($14 | [1])
	*(($15 + [104])) = $3
	*(($15 + [100])) = $0
	
.LABEL $label$18
	CALL memcpy($3, [128], $0)
	
.LABEL $label$17
	*(($3 + $0)) = [0]
	CALL $210(($15 + [112]), $4, $13)
	if ( (*($15 + [116]) == 0) ){ goto $label$21 }
	CALL $210(($15 + [184]), $4, $13)
	$0 = *($15 + [188])
	if ( $0 ){ goto $label$22 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$22
	CALL memcpy(($15 + [112]), $0, [40])
	CALL $378((($15 + [112]) + [40]), ($0 + [40]))
	if ( ((*((($15 + [56]) + [40])) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($15 + [104])))
	goto $label$20 
	
.LABEL $label$21
	CALL memcpy(($15 + [112]), ($15 + [56]), [40])
	*((($15 + [112]) + [48])) = *(($1 + [8]))
	$10 = *($1)
	*(($15 + [100])) = [0]
	*($15 + [152]) = $10
	*((($15 + [56]) + [40])) = [0]
	*((($15 + [56]) + [48])) = [0]
	
.LABEL $label$20
	*($15 + [128]) = $2
	$1 = CALL memcpy($15, ($15 + [112]), [40])
	CALL $378(($1 + [40]), (($1 + [112]) + [40]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$23:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$24 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	CALL $210(($1 + [176]), $4, $13)
	$0 = *($1 + [180])
	if ( ($0 == 0) ){ goto $label$27 }
	*($1 + [184]) = $1
	CALL eosio_assert([1], [832])
	CALL $212($4, $0, ($1 + [184]))
	goto $label$13 
	
.LABEL $label$27
	*($1 + [168]) = $1
	*($1 + [200]) = $11
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [768])
	*($1 + [184]) = $4
	*($1 + [188]) = ($1 + [168])
	*($1 + [192]) = ($1 + [200])
	*(($15 = CALL $348([64])) + [48]) = [0]
	$10 = (int_64)0
	*($15 + [40 align=4]) = (int_64)0
	*($15 + [52]) = $4
	CALL $211(($1 + [184]), $15)
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$28:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$28 }
	$5 = *($15 + [56])
	$6 = *(($4 + [32]))
	$3 = ($4 + [28])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)$6) ){ goto $label$32 }
	*($0 + [8]) = $13
	*($0) = $15
	*($0 + [16]) = $5
	*($3) = ($0 + [24])
	goto $label$13 
	
.LABEL $label$32
	$14 = *($8)
	$3 = ((int_32)($0 - $14) / (int_32)[24])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$15 }
	$8 = [178956970]
	$6 = ((int_32)($6 - $14) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$34 }
	$8 = ($6 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$6 = CALL $348(((int_32)$8 * (int_32)[24]))
	$0 = *(($4 + [28]))
	$14 = *(($4 + [24]))
	goto $label$14 
	
.LABEL $label$33
	$8 = [0]
	$6 = [0]
	goto $label$14 
	
.LABEL $label$16
	CALL $350($1)
	
.LABEL $label$15
	CALL $371($8)
	
.LABEL $label$14
	*(($3 = ($6 + ((int_32)$3 * (int_32)[24]))) + [8]) = $13
	*($3) = $15
	*($3 + [16]) = $5
	$5 = ($6 + ((int_32)$8 * (int_32)[24]))
	$6 = ($3 + [24])
	if ( ((int_32)$0 == (int_32)$14) ){ goto $label$36 }
	
.LOOP $label$37:
	$15 = ($0 + [-24])
	$8 = *($15)
	*($15) = [0]
	*(($3 + [-24])) = $8
	*(($3 + [-8])) = *(($0 + [-8]))
	*(($3 + [-12])) = *(($0 + [-12]))
	*(($3 + [-16])) = *(($0 + [-16]))
	$3 = ($3 + [-24])
	$0 = $15
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$37 }
	$0 = *(($4 + [28]))
	$15 = *(($4 + [24]))
	goto $label$35 
	
.LABEL $label$36
	$15 = $0
	
.LABEL $label$35
	*(($4 + [28])) = $6
	*(($4 + [24])) = $3
	*(($4 + [32])) = $5
	if ( ((int_32)$0 == (int_32)$15) ){ goto $label$38 }
	
.LOOP $label$39:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$40 }
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$41 }
	CALL $349(*(($3 + [48])))
	
.LABEL $label$41
	CALL $349($3)
	
.LABEL $label$40
	if ( ((int_32)$15 != (int_32)$0) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$13 }
	CALL $349($15)
	
.LABEL $label$13
	if ( ((*(($1 + [40])) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*(($1 + [48])))
	
.LABEL $label$42
	if ( ((*((($1 + [112]) + [40])) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*(($1 + [160])))
	
.LABEL $label$43
	*([0] + [4]) = ($1 + [208])
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7eosdice11upcloseinfoEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [16]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$2 = CALL $203()
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$5:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	*(($4 = CALL $348([40])) + [8]) = $13
	*($4) = $11
	*($4 + [16]) = (int_64)-1
	$10 = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	$8 = ($4 + [24])
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$9:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$10 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*(($15 + [100])) = (int_64)0
	*($15 + [64]) = (int_64)0
	*($15 + [56]) = (int_64)0
	*($15 + [72]) = (int_64)0
	*($15 + [80]) = (int_64)0
	*($15 + [88]) = (int_64)0
	*($15 + [96]) = [0]
	$1 = ($15 + [96])
	$0 = CALL strlen([128])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$19 }
	*(($15 + [96])) = ($0 << [1])
	$3 = ($1 + [1])
	if ( $0 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$14 = (($0 + [16]) & [-16])
	$3 = CALL $348($14)
	*(($15 + [96])) = ($14 | [1])
	*(($15 + [104])) = $3
	*(($15 + [100])) = $0
	
.LABEL $label$18
	CALL memcpy($3, [128], $0)
	
.LABEL $label$17
	*(($3 + $0)) = [0]
	CALL $204(($15 + [112]), $4, $13)
	if ( (*($15 + [116]) == 0) ){ goto $label$21 }
	CALL $204(($15 + [184]), $4, $13)
	$0 = *($15 + [188])
	if ( $0 ){ goto $label$22 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$22
	CALL memcpy(($15 + [112]), $0, [40])
	CALL $378((($15 + [112]) + [40]), ($0 + [40]))
	if ( ((*((($15 + [56]) + [40])) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($15 + [104])))
	goto $label$20 
	
.LABEL $label$21
	CALL memcpy(($15 + [112]), ($15 + [56]), [40])
	*((($15 + [112]) + [48])) = *(($1 + [8]))
	$10 = *($1)
	*(($15 + [100])) = [0]
	*($15 + [152]) = $10
	*((($15 + [56]) + [40])) = [0]
	*((($15 + [56]) + [48])) = [0]
	
.LABEL $label$20
	*($15 + [136]) = $2
	$1 = CALL memcpy($15, ($15 + [112]), [40])
	CALL $378(($1 + [40]), (($1 + [112]) + [40]))
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$23:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$24 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	CALL $204(($1 + [176]), $4, $13)
	$0 = *($1 + [180])
	if ( ($0 == 0) ){ goto $label$27 }
	*($1 + [184]) = $1
	CALL eosio_assert([1], [832])
	CALL $206($4, $0, ($1 + [184]))
	goto $label$13 
	
.LABEL $label$27
	*($1 + [168]) = $1
	*($1 + [200]) = $11
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [768])
	*($1 + [184]) = $4
	*($1 + [188]) = ($1 + [168])
	*($1 + [192]) = ($1 + [200])
	*(($15 = CALL $348([64])) + [48]) = [0]
	$10 = (int_64)0
	*($15 + [40 align=4]) = (int_64)0
	*($15 + [52]) = $4
	CALL $205(($1 + [184]), $15)
	$9 = (int_64)59
	$0 = [352]
	$13 = (int_64)0
	
.LOOP $label$28:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$28 }
	$5 = *($15 + [56])
	$6 = *(($4 + [32]))
	$3 = ($4 + [28])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)$6) ){ goto $label$32 }
	*($0 + [8]) = $13
	*($0) = $15
	*($0 + [16]) = $5
	*($3) = ($0 + [24])
	goto $label$13 
	
.LABEL $label$32
	$14 = *($8)
	$3 = ((int_32)($0 - $14) / (int_32)[24])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$15 }
	$8 = [178956970]
	$6 = ((int_32)($6 - $14) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$34 }
	$8 = ($6 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$6 = CALL $348(((int_32)$8 * (int_32)[24]))
	$0 = *(($4 + [28]))
	$14 = *(($4 + [24]))
	goto $label$14 
	
.LABEL $label$33
	$8 = [0]
	$6 = [0]
	goto $label$14 
	
.LABEL $label$16
	CALL $350($1)
	
.LABEL $label$15
	CALL $371($8)
	
.LABEL $label$14
	*(($3 = ($6 + ((int_32)$3 * (int_32)[24]))) + [8]) = $13
	*($3) = $15
	*($3 + [16]) = $5
	$5 = ($6 + ((int_32)$8 * (int_32)[24]))
	$6 = ($3 + [24])
	if ( ((int_32)$0 == (int_32)$14) ){ goto $label$36 }
	
.LOOP $label$37:
	$15 = ($0 + [-24])
	$8 = *($15)
	*($15) = [0]
	*(($3 + [-24])) = $8
	*(($3 + [-8])) = *(($0 + [-8]))
	*(($3 + [-12])) = *(($0 + [-12]))
	*(($3 + [-16])) = *(($0 + [-16]))
	$3 = ($3 + [-24])
	$0 = $15
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$37 }
	$0 = *(($4 + [28]))
	$15 = *(($4 + [24]))
	goto $label$35 
	
.LABEL $label$36
	$15 = $0
	
.LABEL $label$35
	*(($4 + [28])) = $6
	*(($4 + [24])) = $3
	*(($4 + [32])) = $5
	if ( ((int_32)$0 == (int_32)$15) ){ goto $label$38 }
	
.LOOP $label$39:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$40 }
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$41 }
	CALL $349(*(($3 + [48])))
	
.LABEL $label$41
	CALL $349($3)
	
.LABEL $label$40
	if ( ((int_32)$15 != (int_32)$0) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$13 }
	CALL $349($15)
	
.LABEL $label$13
	if ( ((*(($1 + [40])) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*(($1 + [48])))
	
.LABEL $label$42
	if ( ((*((($1 + [112]) + [40])) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*(($1 + [160])))
	
.LABEL $label$43
	*([0] + [4]) = ($1 + [208])
	(unreachable)
	(unreachable)
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$2 = *($1)
	$3 = *(($5 + [24]))
	$5 = *($0 + [16])
	$7 = *(($5 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$9 = ($8 + [-24])
	$8 = $9
	if ( ((int_32)($9 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [60]) == (int_32)$5), [704])
	$5 = *(($0 + [16]))
	if ( $8 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$8 = CALL db_find_i64(*($5), *($5 + [8]), (int_64)-3903047771713307648, $2)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$5 }
	$8 = CALL $215($5, $8)
	CALL eosio_assert(((int_32)*($8 + [60]) == (int_32)$5), [704])
	$5 = *(($0 + [16]))
	
.LABEL $label$6
	*($10 + [8]) = $1
	CALL eosio_assert([1], [832])
	CALL $323($5, $8, ($10 + [8]))
	goto $label$3 
	
.LABEL $label$5
	$5 = *(($0 + [16]))
	
.LABEL $label$4
	$2 = *($0)
	*($10) = $1
	*($10 + [24]) = $2
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$13()), [768])
	*($10 + [8]) = $5
	*($10 + [12]) = $10
	*($10 + [16]) = ($10 + [24])
	*(($7 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($7 + [44 align=4]) = (int_64)0
	*($7 + [52 align=4]) = (int_64)0
	*($7 + [60]) = $5
	CALL $322(($10 + [8]), $7)
	$4 = *($7 + [64])
	$2 = *($7)
	$3 = *(($5 + [32]))
	$9 = ($5 + [28])
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)$3) ){ goto $label$8 }
	*($8 + [8]) = $2
	*($8) = $7
	*($8 + [16]) = $4
	*($9) = ($8 + [24])
	goto $label$3 
	
.LABEL $label$8
	$1 = ($5 + [24])
	$0 = *($1)
	$9 = ((int_32)($8 - $0) / (int_32)[24])
	$6 = ($9 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$10 }
	$1 = [178956970]
	$3 = ((int_32)($3 - $0) / (int_32)[24])
	if ( ((uint_32)$3 > (uint_32)[89478484]) ){ goto $label$12 }
	$1 = ($3 << [1])
	$1 = ( $6 ? $1 : ($1 <= $6) )
	if ( ($1 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$3 = CALL $348(((int_32)$1 * (int_32)[24]))
	$8 = *(($5 + [28]))
	$0 = *(($5 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$1 = [0]
	$3 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($1)
	
.LABEL $label$9
	*(($9 = ($3 + ((int_32)$9 * (int_32)[24]))) + [8]) = $2
	*($9) = $7
	*($9 + [16]) = $4
	$1 = ($3 + ((int_32)$1 * (int_32)[24]))
	$3 = ($9 + [24])
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$7 = ($8 + [-24])
	$4 = *($7)
	*($7) = [0]
	*(($9 + [-24])) = $4
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = ($9 + [-24])
	$8 = $7
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$15 }
	$8 = *(($5 + [28]))
	$7 = *(($5 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$7 = $8
	
.LABEL $label$13
	*(($5 + [28])) = $3
	*(($5 + [24])) = $9
	*(($5 + [32])) = $1
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $349($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

int_32 .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC _ZN7eosdice4initEv (int_32 $0)
{
	CALL require_auth(*($0 + [16]))
}

void .FUNC _ZN7eosdice4openEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	CALL require_auth(*($0 + [16]))
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [352]
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($8)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [352]
	$13 = (int_64)0
	
.LOOP $label$5:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$6 }
	$1 = *($8)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$1 = ($1 + [165])
	goto $label$7 
	
.LABEL $label$8
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	*(($2 = CALL $348([40])) + [8]) = $13
	*($2) = $11
	*($2 + [16]) = (int_64)-1
	$10 = (int_64)0
	*($2 + [24 align=4]) = (int_64)0
	*($2 + [32]) = [0]
	$7 = ($2 + [24])
	$9 = (int_64)59
	$8 = [352]
	$13 = (int_64)0
	
.LOOP $label$9:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$10 }
	$1 = *($8)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$1 = ($1 + [165])
	goto $label$11 
	
.LABEL $label$12
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$10
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$9 }
	*(($15 + [100])) = (int_64)0
	*($15 + [64]) = (int_64)0
	*($15 + [56]) = (int_64)0
	*($15 + [72]) = (int_64)0
	*($15 + [80]) = (int_64)0
	*($15 + [88]) = (int_64)0
	*($15 + [96]) = [0]
	$6 = ($15 + [96])
	$8 = CALL strlen([128])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$19 }
	*(($15 + [96])) = ($8 << [1])
	$1 = ($6 + [1])
	if ( $8 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$14 = (($8 + [16]) & [-16])
	$1 = CALL $348($14)
	*(($15 + [96])) = ($14 | [1])
	*(($15 + [104])) = $1
	*(($15 + [100])) = $8
	
.LABEL $label$18
	CALL memcpy($1, [128], $8)
	
.LABEL $label$17
	*(($1 + $8)) = [0]
	CALL $332(($15 + [112]), $2, $13)
	if ( (*($15 + [116]) == 0) ){ goto $label$21 }
	CALL $332(($15 + [184]), $2, $13)
	$8 = *($15 + [188])
	if ( $8 ){ goto $label$22 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$22
	CALL memcpy(($15 + [112]), $8, [40])
	CALL $378((($15 + [112]) + [40]), ($8 + [40]))
	if ( ((*((($15 + [56]) + [40])) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($15 + [104])))
	goto $label$20 
	
.LABEL $label$21
	CALL memcpy(($15 + [112]), ($15 + [56]), [40])
	*((($15 + [112]) + [48])) = *(($6 + [8]))
	$10 = *($6)
	*(($15 + [100])) = [0]
	*($15 + [152]) = $10
	*((($15 + [56]) + [40])) = [0]
	*((($15 + [56]) + [48])) = [0]
	
.LABEL $label$20
	if ( (int_64)(*($15 + [112]) == 0) ){ goto $label$23 }
	CALL prints([176])
	CALL prints([6160])
	CALL prints([256])
	CALL eosio_assert((int_64)(*($15 + [112]) == 0), [6160])
	
.LABEL $label$23
	*($15 + [112]) = (int_64)2
	*($15 + [120]) = ((int_64)*($15 + [120]) + (int_64)1)
	$15 = CALL memcpy($15, ($15 + [112]), [40])
	CALL $378(($15 + [40]), (($15 + [112]) + [40]))
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [352]
	$13 = (int_64)0
	
.LOOP $label$24:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$25 }
	$1 = *($8)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$1 = ($1 + [165])
	goto $label$26 
	
.LABEL $label$27
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$25
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$24 }
	CALL $332(($15 + [176]), $2, $13)
	$8 = *($15 + [180])
	if ( ($8 == 0) ){ goto $label$28 }
	*($15 + [184]) = $15
	CALL eosio_assert([1], [832])
	CALL $334($2, $8, ($15 + [184]))
	goto $label$13 
	
.LABEL $label$28
	*($15 + [168]) = $15
	*($15 + [200]) = $11
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$13()), [768])
	*($15 + [184]) = $2
	*($15 + [188]) = ($15 + [168])
	*($15 + [192]) = ($15 + [200])
	*(($6 = CALL $348([64])) + [48]) = [0]
	$10 = (int_64)0
	*($6 + [40 align=4]) = (int_64)0
	*($6 + [52]) = $2
	CALL $333(($15 + [184]), $6)
	$9 = (int_64)59
	$8 = [352]
	$13 = (int_64)0
	
.LOOP $label$29:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$30 }
	$1 = *($8)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$1 = ($1 + [165])
	goto $label$31 
	
.LABEL $label$32
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$30
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$29 }
	$3 = *($6 + [56])
	$4 = *(($2 + [32]))
	$1 = ($2 + [28])
	$8 = *($1)
	if ( ((uint_32)$8 >= (uint_32)$4) ){ goto $label$33 }
	*($8 + [8]) = $13
	*($8) = $6
	*($8 + [16]) = $3
	*($1) = ($8 + [24])
	goto $label$13 
	
.LABEL $label$33
	$14 = *($7)
	$1 = ((int_32)($8 - $14) / (int_32)[24])
	$5 = ($1 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$15 }
	$7 = [178956970]
	$4 = ((int_32)($4 - $14) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$35 }
	$7 = ($4 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$34 }
	
.LABEL $label$35
	$4 = CALL $348(((int_32)$7 * (int_32)[24]))
	$8 = *(($2 + [28]))
	$14 = *(($2 + [24]))
	goto $label$14 
	
.LABEL $label$34
	$7 = [0]
	$4 = [0]
	goto $label$14 
	
.LABEL $label$16
	CALL $350($6)
	
.LABEL $label$15
	CALL $371($7)
	
.LABEL $label$14
	*(($1 = ($4 + ((int_32)$1 * (int_32)[24]))) + [8]) = $13
	*($1) = $6
	*($1 + [16]) = $3
	$3 = ($4 + ((int_32)$7 * (int_32)[24]))
	$4 = ($1 + [24])
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$37 }
	
.LOOP $label$38:
	$6 = ($8 + [-24])
	$7 = *($6)
	*($6) = [0]
	*(($1 + [-24])) = $7
	*(($1 + [-8])) = *(($8 + [-8]))
	*(($1 + [-12])) = *(($8 + [-12]))
	*(($1 + [-16])) = *(($8 + [-16]))
	$1 = ($1 + [-24])
	$8 = $6
	if ( ((int_32)$14 != (int_32)$6) ){ goto $label$38 }
	$8 = *(($2 + [28]))
	$6 = *(($2 + [24]))
	goto $label$36 
	
.LABEL $label$37
	$6 = $8
	
.LABEL $label$36
	*(($2 + [28])) = $4
	*(($2 + [24])) = $1
	*(($2 + [32])) = $3
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$39 }
	
.LOOP $label$40:
	$8 = ($8 + [-24])
	$1 = *($8)
	*($8) = [0]
	if ( ($1 == 0) ){ goto $label$41 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*(($1 + [48])))
	
.LABEL $label$42
	CALL $349($1)
	
.LABEL $label$41
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $349($6)
	
.LABEL $label$13
	if ( ((*(($15 + [40])) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*(($15 + [48])))
	
.LABEL $label$43
	CALL _Z16ClearAllBetTabley(*(($0 + [16])))
	*($15 + [184]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$8 = CALL asctime(CALL $432(($15 + [184])))
	CALL prints([32])
	CALL prints($8)
	CALL prints([6208])
	CALL printui(*(($15 + [120])))
	CALL prints([2560])
	CALL prints([80])
	if ( ((*((($15 + [112]) + [40])) & [1]) == 0) ){ goto $label$44 }
	CALL $349(*(($15 + [160])))
	
.LABEL $label$44
	*([0] + [4]) = ($15 + [208])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $378 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $348($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $379 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $348($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $372 (int_32 $0, int_32 $1)
{
	*($0 + [4]) = $1
	*($0) = [0]
	$1 = ($1 + *((*($1) + [-12])))
	if ( *($1 + [16]) ){ goto $label$1 }
	$1 = *($1 + [72])
	if ( ($1 == 0) ){ goto $label$2 }
	CALL $373($1)
	
.LABEL $label$2
	*($0) = [1]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $373 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($0 + *((*($0) + [-12])))
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$2 }
	$1 = *($1 + [72])
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $373($1)
	$2 = *(($0 + *((*($0) + [-12]))) + [24])
	
.LABEL $label$3
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [24]))) != (int_32)[-1]) ){ goto $label$2 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$2
	$1 = ($0 + *((*($0) + [-12])))
	if ( (*($1 + [24]) == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$1 }
	if ( ((*(($1 + [5])) & [32]) == 0) ){ goto $label$1 }
	if ( CALL _ZSt18uncaught_exceptionv() ){ goto $label$1 }
	$1 = *(($0 + *((*($0) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [24]))) != (int_32)[-1]) ){ goto $label$1 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEd (int_32 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14800], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $369(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $369(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $371 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $376 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [4])
	$1 = ($1 + *((*($1) + [-12])))
	if ( (*($1 + [24]) == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$1 }
	if ( ((*(($1 + [5])) & [32]) == 0) ){ goto $label$1 }
	if ( CALL _ZSt18uncaught_exceptionv() ){ goto $label$1 }
	$2 = ($0 + [4])
	$1 = *($2)
	$1 = *(($1 + *((*($1) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [24]))) != (int_32)[-1]) ){ goto $label$1 }
	*(($1 = (($1 = *($2)) + *((*($1) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _ZNSt3__16localeD2Ev (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *($1 + [4])
	*(($1 = *($0)) + [4]) = ($2 + [-1])
	if ( $2 ){ goto $label$1 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _ZSt18uncaught_exceptionv ()
{
	CALL _ZSt19uncaught_exceptionsv()
	return (unreachable)
}

int_32 .FUNC _ZSt19uncaught_exceptionsv ()
{
	CALL fprintf(*([0] + [14860]), [14816], [0])
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _ZN10msContractC2Eyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	*($0) = [3376]
	*($0 + [8]) = $1
	*($0 + [16]) = $1
	*($0 + [24]) = $1
	*($0 + [32]) = $2
	*($0 + [40]) = $3
	*(($4 = ($0 + [52]))) = [0]
	*(($0 + [56])) = [0]
	*($0 + [48]) = $4
	return $0
}

void .FUNC $175 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([3520])
	CALL prints([256])
	CALL eosio_assert([0], [3520])
}

void .FUNC $176 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([3456])
	CALL prints([256])
	CALL eosio_assert([0], [3456])
}

void .FUNC $177 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([3392])
	CALL prints([256])
	CALL eosio_assert([0], [3392])
}

int_64 .FUNC _ZN7msAsset18GetContractEosNameEv (int_32 $0)
{
	return *($0 + [16])
}

void .FUNC _ZN7msAsset8ToStringEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$6 = (*([0] + [4]) - [144])
	$9 = $6
	*([0] + [4]) = $6
	$5 = (int_64)1
	$7 = *($1 + [8])
	$4 = (int_64)($7 == 0)
	if ( $4 ){ goto $label$1 }
	$8 = ((int_64)$7 + (int_64)1)
	$5 = (int_64)1
	
.LOOP $label$2:
	$5 = ((int_64)$5 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($6 - (((CASTING uint_32)(uint_64 ((int_64)$7 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $7))))) = [0]
	if ( $4 ){ goto $label$3 }
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)*($1) % (int_64)$5)
	$6 = ($6 + [-1])
	
.LOOP $label$4:
	*($6) = ((int_64)((int_64)$8 % (int_64)10) + (int_64)48)
	$6 = ($6 + [-1])
	$8 = ((int_64)$8 / (int_64)10)
	$7 = ((int_64)$7 + (int_64)-1)
	if ( ((int_64)$7 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL memset(($9 + [32]), [0], [100])
	*($9) = ((int_64)*($1) / (int_64)$5)
	CALL sprintf(($9 + [32]), [3360], $9)
	CALL strncpy((($9 + [32]) + CALL $424(($9 + [32]))), $2, $3)
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$6 = CALL strlen(($9 + [32]))
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($9 + [16]) = ($6 << [1])
	$1 = (($9 + [16]) | [1])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$2 = (($6 + [16]) & [-16])
	$1 = CALL $348($2)
	*($9 + [16]) = ($2 | [1])
	*($9 + [24]) = $1
	*($9 + [20]) = $6
	
.LABEL $label$7
	CALL memcpy($1, ($9 + [32]), $6)
	
.LABEL $label$6
	*(($1 + $6)) = [0]
	$6 = CALL $356(($9 + [16]), [2400])
	$8 = *($6)
	*($6) = (int_64)0
	*($0) = $8
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $349(*($9 + [24]))
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [144])
	return (unreachable)
	
.LABEL $label$5
	CALL $350(($9 + [16]))
}

int_32 .FUNC _ZN7msAsset8ValidateENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_yN5eosio11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$6 = [0]
	if ( ((int_64)*($0 + [16]) != (int_64)$3) ){ goto $label$1 }
	if ( ((int_64)*($0 + [8]) != (int_64)$4) ){ goto $label$1 }
	*($7 + [31]) = [0]
	$3 = *($0)
	CALL $378(($7 + [16]), $1)
	if ( ((uint_64)$3 >= (uint_64)CALL _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($7, ($7 + [16]), ($7 + [31]))) ){ goto $label$3 }
	$1 = *(($0 + [8]))
	$5 = *($7 + [31])
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL $349(*($7 + [24]))
	
.LABEL $label$4
	$6 = [0]
	if ( ((int_32)($5 & [255]) != (int_32)($1 & [255])) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*($7 + [24]))
	
.LABEL $label$2
	$3 = *($0)
	CALL $378($7, $2)
	if ( ((uint_64)$3 <= (uint_64)CALL _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($7, $7, ($7 + [31]))) ){ goto $label$6 }
	$0 = *(($0 + [8]))
	$1 = *($7 + [31])
	if ( ((*($7) & [1]) == 0) ){ goto $label$7 }
	CALL $349(*($7 + [8]))
	
.LABEL $label$7
	$6 = [0]
	if ( ((int_32)($1 & [255]) != (int_32)($0 & [255])) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $349(*($7 + [8]))
	
.LABEL $label$5
	$6 = [1]
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
	return $6
}

int_64 .FUNC _ZN7msAsset14GetAmountByIntEv (int_32 $0)
{
	return *($0)
}

int_64 .FUNC _ZN10msContract18getCurrentReceiverEv (int_32 $0)
{
	return *($0 + [24])
}

int_64 .FUNC _ZN10msContract17getActionContractEv (int_32 $0)
{
	return *($0 + [32])
}

int_32 .FUNC $361 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $99($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $360 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $352($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1984])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1984])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1984])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $90 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492336, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $89($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492336, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $93 (int_64 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	$5 = *($2 + [16])
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [2320]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$6 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	*((($12 + [8]) + [28])) = *(($2 + [12]))
	*((($12 + [8]) + [24])) = *(($2 + [8]))
	*((($12 + [8]) + [20])) = *(($2 + [4]))
	*($12 + [16]) = $1
	*($12 + [8]) = $0
	*($12 + [24]) = *($2)
	CALL $378((($12 + [8]) + [32]), $3)
	*($12 + [64]) = $10
	*($12 + [56]) = $5
	*(($7 = CALL $348([16]))) = $0
	*($7 + [8]) = $4
	*((($12 + [56]) + [32])) = [0]
	$6 = ($7 + [16])
	*((($12 + [56]) + [24])) = $6
	*((($12 + [56]) + [20])) = $6
	*($12 + [72]) = $7
	*($12 + [84]) = [0]
	*((($12 + [56]) + [36])) = [0]
	$7 = *($12 + [40])
	$6 = ( *((($12 + [8]) + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($6 + [32])
	$9 = (CASTING uint_64)(uint_32 $6)
	$6 = (($12 + [56]) + [28])
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($7 == 0) ){ goto $label$9 }
	CALL $94($6, $7)
	$6 = *(($12 + [88]))
	$7 = *(($12 + [84]))
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$7 = [0]
	
.LABEL $label$8
	*($12 + [100]) = $7
	*($12 + [96]) = $7
	*($12 + [104]) = $6
	CALL $95(($12 + [96]), ($12 + [8]))
	if ( ((*(($12 + [40])) & [1]) == 0) ){ goto $label$10 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$10
	CALL $96(($12 + [8]), ($12 + [56]))
	$7 = *($12 + [8])
	CALL send_inline($7, (*($12 + [12]) - $7))
	$7 = *($12 + [8])
	if ( ($7 == 0) ){ goto $label$11 }
	*($12 + [12]) = $7
	CALL $349($7)
	
.LABEL $label$11
	$7 = *($12 + [84])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($12 + [88])) = $7
	CALL $349($7)
	
.LABEL $label$12
	$7 = *($12 + [72])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($12 + [76])) = $7
	CALL $349($7)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [112])
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492368, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $83($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493376, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $56($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC _Z16ClearAllBetTabley (int_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [16])
	*([0] + [4]) = $21
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [992]
	$14 = (int_64)0
	
.LOOP $label$1:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$2 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$18 = ($18 + [165])
	goto $label$3 
	
.LABEL $label$4
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$2
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$1 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494368, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $296($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$6:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $296($8, $16)
	
.LABEL $label$7
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$8 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$9:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$8 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$12 }
	$2 = ($18 + [-24])
	
.LOOP $label$13:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$14 }
	CALL $349($17)
	
.LABEL $label$14
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$13 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$18 = $16
	
.LABEL $label$11
	
.LOOP $label$15:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$16 }
	CALL $349($16)
	
.LABEL $label$16
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$15 }
	
.LABEL $label$10
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$6 }
	
.LABEL $label$5
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494368, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$17 }
	$16 = CALL $296($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$17 }
	
.LOOP $label$18:
	$16 = CALL $296($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$18 }
	
.LABEL $label$17
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1120]
	$14 = (int_64)0
	
.LOOP $label$19:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$20 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$18 = ($18 + [165])
	goto $label$21 
	
.LABEL $label$22
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$20
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$19 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494448, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$23 }
	$3 = CALL $297($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$24:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$25 }
	$5 = CALL $297($8, $16)
	
.LABEL $label$25
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$26 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$27:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$26 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$27 }
	
.LABEL $label$26
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$30 }
	$2 = ($18 + [-24])
	
.LOOP $label$31:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$32 }
	CALL $349($17)
	
.LABEL $label$32
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$31 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$18 = $16
	
.LABEL $label$29
	
.LOOP $label$33:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$34 }
	CALL $349($16)
	
.LABEL $label$34
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$33 }
	
.LABEL $label$28
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$24 }
	
.LABEL $label$23
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494448, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$35 }
	$16 = CALL $297($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$35 }
	
.LOOP $label$36:
	$16 = CALL $297($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$36 }
	
.LABEL $label$35
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1152]
	$14 = (int_64)0
	
.LOOP $label$37:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$38 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$18 = ($18 + [165])
	goto $label$39 
	
.LABEL $label$40
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$38
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$37 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494432, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$41 }
	$3 = CALL $298($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$42:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$43 }
	$5 = CALL $298($8, $16)
	
.LABEL $label$43
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$44 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$45:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$44 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$45 }
	
.LABEL $label$44
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$48 }
	$2 = ($18 + [-24])
	
.LOOP $label$49:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$50 }
	CALL $349($17)
	
.LABEL $label$50
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$49 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$18 = $16
	
.LABEL $label$47
	
.LOOP $label$51:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$52 }
	CALL $349($16)
	
.LABEL $label$52
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$51 }
	
.LABEL $label$46
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$42 }
	
.LABEL $label$41
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494432, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$53 }
	$16 = CALL $298($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$53 }
	
.LOOP $label$54:
	$16 = CALL $298($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$54 }
	
.LABEL $label$53
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1184]
	$14 = (int_64)0
	
.LOOP $label$55:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$56 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$58 }
	$18 = ($18 + [165])
	goto $label$57 
	
.LABEL $label$58
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$57
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$56
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$55 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494416, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$59 }
	$3 = CALL $299($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$60:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$61 }
	$5 = CALL $299($8, $16)
	
.LABEL $label$61
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$62 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$63:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$62 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$63 }
	
.LABEL $label$62
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$66 }
	$2 = ($18 + [-24])
	
.LOOP $label$67:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$68 }
	CALL $349($17)
	
.LABEL $label$68
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$67 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$18 = $16
	
.LABEL $label$65
	
.LOOP $label$69:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$70 }
	CALL $349($16)
	
.LABEL $label$70
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$69 }
	
.LABEL $label$64
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$60 }
	
.LABEL $label$59
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494416, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$71 }
	$16 = CALL $299($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$71 }
	
.LOOP $label$72:
	$16 = CALL $299($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$72 }
	
.LABEL $label$71
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1216]
	$14 = (int_64)0
	
.LOOP $label$73:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$74 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$18 = ($18 + [165])
	goto $label$75 
	
.LABEL $label$76
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$74
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$73 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494400, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$77 }
	$3 = CALL $300($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$78:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$79 }
	$5 = CALL $300($8, $16)
	
.LABEL $label$79
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$80 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$81:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$80 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$81 }
	
.LABEL $label$80
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$84 }
	$2 = ($18 + [-24])
	
.LOOP $label$85:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$86 }
	CALL $349($17)
	
.LABEL $label$86
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$85 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$18 = $16
	
.LABEL $label$83
	
.LOOP $label$87:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$88 }
	CALL $349($16)
	
.LABEL $label$88
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$87 }
	
.LABEL $label$82
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$78 }
	
.LABEL $label$77
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494400, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$89 }
	$16 = CALL $300($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$89 }
	
.LOOP $label$90:
	$16 = CALL $300($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$90 }
	
.LABEL $label$89
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1248]
	$14 = (int_64)0
	
.LOOP $label$91:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$92 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$94 }
	$18 = ($18 + [165])
	goto $label$93 
	
.LABEL $label$94
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$93
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$92
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$91 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$16 = CALL db_lowerbound_i64($0, $14, (int_64)-3922893633274494384, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$95 }
	$3 = CALL $301($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$96:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$97 }
	$5 = CALL $301($8, $16)
	
.LABEL $label$97
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$98 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$99:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$98 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$99 }
	
.LABEL $label$98
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$102 }
	$2 = ($18 + [-24])
	
.LOOP $label$103:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$104 }
	CALL $349($17)
	
.LABEL $label$104
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$103 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$102
	$18 = $16
	
.LABEL $label$101
	
.LOOP $label$105:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$106 }
	CALL $349($16)
	
.LABEL $label$106
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$105 }
	
.LABEL $label$100
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$96 }
	
.LABEL $label$95
	$16 = CALL db_lowerbound_i64(*($8), *(($8 + [8])), (int_64)-3922893633274494384, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$107 }
	$16 = CALL $301($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$107 }
	
.LOOP $label$108:
	$16 = CALL $301($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$108 }
	
.LABEL $label$107
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1472]
	$14 = (int_64)0
	
.LOOP $label$109:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$110 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$18 = ($18 + [165])
	goto $label$111 
	
.LABEL $label$112
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$110
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$109 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1888]
	$14 = (int_64)0
	
.LOOP $label$113:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$114 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$18 = ($18 + [165])
	goto $label$115 
	
.LABEL $label$116
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$114
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$113 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$19 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493408, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$117 }
	$4 = CALL $302($8, $16)
	$5 = ($8 + [28])
	
.LOOP $label$118:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($4 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$119 }
	$6 = CALL $302($8, $16)
	
.LABEL $label$119
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($8 + [24])
	$2 = *($7)
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$120 }
	$1 = *($4)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$121:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$120 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$121 }
	
.LABEL $label$120
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($5)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$124 }
	$2 = ($18 + [-24])
	
.LOOP $label$125:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$126 }
	CALL $349($17)
	
.LABEL $label$126
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$125 }
	$17 = *($5)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$123 }
	goto $label$122 
	
.LABEL $label$124
	$18 = $16
	
.LABEL $label$123
	
.LOOP $label$127:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$128 }
	CALL $349($16)
	
.LABEL $label$128
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$127 }
	
.LABEL $label$122
	*($5) = $18
	CALL db_remove_i64(*(($4 + [28])))
	$4 = $6
	if ( $6 ){ goto $label$118 }
	
.LABEL $label$117
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493408, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$129 }
	$16 = CALL $302($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$129 }
	
.LOOP $label$130:
	$16 = CALL $302($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$130 }
	
.LABEL $label$129
	$7 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492336, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$131 }
	$8 = CALL $303($3, $16)
	$4 = ($3 + [28])
	
.LOOP $label$132:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$133 }
	$5 = CALL $303($3, $16)
	
.LABEL $label$133
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($3 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$134 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$135:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$134 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$135 }
	
.LABEL $label$134
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$138 }
	$2 = ($18 + [-24])
	
.LOOP $label$139:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$140 }
	CALL $349($17)
	
.LABEL $label$140
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$139 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	$18 = $16
	
.LABEL $label$137
	
.LOOP $label$141:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$142 }
	CALL $349($16)
	
.LABEL $label$142
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$141 }
	
.LABEL $label$136
	*($4) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $5
	if ( $5 ){ goto $label$132 }
	
.LABEL $label$131
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492336, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$143 }
	$16 = CALL $303($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$143 }
	
.LOOP $label$144:
	$16 = CALL $303($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$144 }
	
.LABEL $label$143
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1504]
	$14 = (int_64)0
	
.LOOP $label$145:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$146 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$148 }
	$18 = ($18 + [165])
	goto $label$147 
	
.LABEL $label$148
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$147
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$146
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$145 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1856]
	$14 = (int_64)0
	
.LOOP $label$149:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$150 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$152 }
	$18 = ($18 + [165])
	goto $label$151 
	
.LABEL $label$152
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$151
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$150
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$149 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$19 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493392, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$153 }
	$4 = CALL $304($8, $16)
	$5 = ($8 + [28])
	
.LOOP $label$154:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($4 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$155 }
	$6 = CALL $304($8, $16)
	
.LABEL $label$155
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($8 + [24])
	$2 = *($7)
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$156 }
	$1 = *($4)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$157:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$156 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$157 }
	
.LABEL $label$156
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($5)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$160 }
	$2 = ($18 + [-24])
	
.LOOP $label$161:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$162 }
	CALL $349($17)
	
.LABEL $label$162
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$161 }
	$17 = *($5)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$159 }
	goto $label$158 
	
.LABEL $label$160
	$18 = $16
	
.LABEL $label$159
	
.LOOP $label$163:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$164 }
	CALL $349($16)
	
.LABEL $label$164
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$163 }
	
.LABEL $label$158
	*($5) = $18
	CALL db_remove_i64(*(($4 + [28])))
	$4 = $6
	if ( $6 ){ goto $label$154 }
	
.LABEL $label$153
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493392, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$165 }
	$16 = CALL $304($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$165 }
	
.LOOP $label$166:
	$16 = CALL $304($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$166 }
	
.LABEL $label$165
	$7 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492352, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$167 }
	$8 = CALL $305($3, $16)
	$4 = ($3 + [28])
	
.LOOP $label$168:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$169 }
	$5 = CALL $305($3, $16)
	
.LABEL $label$169
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($3 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$170 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$171:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$170 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$171 }
	
.LABEL $label$170
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$174 }
	$2 = ($18 + [-24])
	
.LOOP $label$175:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$176 }
	CALL $349($17)
	
.LABEL $label$176
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$175 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$174
	$18 = $16
	
.LABEL $label$173
	
.LOOP $label$177:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$178 }
	CALL $349($16)
	
.LABEL $label$178
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$177 }
	
.LABEL $label$172
	*($4) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $5
	if ( $5 ){ goto $label$168 }
	
.LABEL $label$167
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492352, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$179 }
	$16 = CALL $305($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$179 }
	
.LOOP $label$180:
	$16 = CALL $305($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$180 }
	
.LABEL $label$179
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1536]
	$14 = (int_64)0
	
.LOOP $label$181:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$182 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$184 }
	$18 = ($18 + [165])
	goto $label$183 
	
.LABEL $label$184
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$183
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$182
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$181 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1824]
	$14 = (int_64)0
	
.LOOP $label$185:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$186 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$188 }
	$18 = ($18 + [165])
	goto $label$187 
	
.LABEL $label$188
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$187
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$186
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$185 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$19 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493376, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$189 }
	$4 = CALL $306($8, $16)
	$5 = ($8 + [28])
	
.LOOP $label$190:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($4 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$191 }
	$6 = CALL $306($8, $16)
	
.LABEL $label$191
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($8 + [24])
	$2 = *($7)
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$192 }
	$1 = *($4)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$193:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$192 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$193 }
	
.LABEL $label$192
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($5)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$196 }
	$2 = ($18 + [-24])
	
.LOOP $label$197:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$198 }
	CALL $349($17)
	
.LABEL $label$198
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$197 }
	$17 = *($5)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$195 }
	goto $label$194 
	
.LABEL $label$196
	$18 = $16
	
.LABEL $label$195
	
.LOOP $label$199:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$200 }
	CALL $349($16)
	
.LABEL $label$200
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$199 }
	
.LABEL $label$194
	*($5) = $18
	CALL db_remove_i64(*(($4 + [28])))
	$4 = $6
	if ( $6 ){ goto $label$190 }
	
.LABEL $label$189
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493376, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$201 }
	$16 = CALL $306($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$201 }
	
.LOOP $label$202:
	$16 = CALL $306($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$202 }
	
.LABEL $label$201
	$7 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492368, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$203 }
	$8 = CALL $307($3, $16)
	$4 = ($3 + [28])
	
.LOOP $label$204:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$205 }
	$5 = CALL $307($3, $16)
	
.LABEL $label$205
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($3 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$206 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$207:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$206 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$207 }
	
.LABEL $label$206
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$210 }
	$2 = ($18 + [-24])
	
.LOOP $label$211:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$212 }
	CALL $349($17)
	
.LABEL $label$212
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$211 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$209 }
	goto $label$208 
	
.LABEL $label$210
	$18 = $16
	
.LABEL $label$209
	
.LOOP $label$213:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$214 }
	CALL $349($16)
	
.LABEL $label$214
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$213 }
	
.LABEL $label$208
	*($4) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $5
	if ( $5 ){ goto $label$204 }
	
.LABEL $label$203
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492368, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$215 }
	$16 = CALL $307($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$215 }
	
.LOOP $label$216:
	$16 = CALL $307($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$216 }
	
.LABEL $label$215
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1568]
	$14 = (int_64)0
	
.LOOP $label$217:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$218 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$220 }
	$18 = ($18 + [165])
	goto $label$219 
	
.LABEL $label$220
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$219
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$218
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$217 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1792]
	$14 = (int_64)0
	
.LOOP $label$221:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$222 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$224 }
	$18 = ($18 + [165])
	goto $label$223 
	
.LABEL $label$224
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$223
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$222
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$221 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$19 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493360, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$225 }
	$4 = CALL $308($8, $16)
	$5 = ($8 + [28])
	
.LOOP $label$226:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($4 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$227 }
	$6 = CALL $308($8, $16)
	
.LABEL $label$227
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($8 + [24])
	$2 = *($7)
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$228 }
	$1 = *($4)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$229:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$228 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$229 }
	
.LABEL $label$228
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($5)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$232 }
	$2 = ($18 + [-24])
	
.LOOP $label$233:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$234 }
	CALL $349($17)
	
.LABEL $label$234
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$233 }
	$17 = *($5)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$231 }
	goto $label$230 
	
.LABEL $label$232
	$18 = $16
	
.LABEL $label$231
	
.LOOP $label$235:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$236 }
	CALL $349($16)
	
.LABEL $label$236
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$235 }
	
.LABEL $label$230
	*($5) = $18
	CALL db_remove_i64(*(($4 + [28])))
	$4 = $6
	if ( $6 ){ goto $label$226 }
	
.LABEL $label$225
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274493360, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$237 }
	$16 = CALL $308($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$237 }
	
.LOOP $label$238:
	$16 = CALL $308($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$238 }
	
.LABEL $label$237
	$7 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492384, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$239 }
	$8 = CALL $309($3, $16)
	$4 = ($3 + [28])
	
.LOOP $label$240:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$241 }
	$5 = CALL $309($3, $16)
	
.LABEL $label$241
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($3 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$242 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$243:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$242 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$243 }
	
.LABEL $label$242
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$246 }
	$2 = ($18 + [-24])
	
.LOOP $label$247:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$248 }
	CALL $349($17)
	
.LABEL $label$248
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$247 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$245 }
	goto $label$244 
	
.LABEL $label$246
	$18 = $16
	
.LABEL $label$245
	
.LOOP $label$249:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$250 }
	CALL $349($16)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$249 }
	
.LABEL $label$244
	*($4) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $5
	if ( $5 ){ goto $label$240 }
	
.LABEL $label$239
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492384, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$251 }
	$16 = CALL $309($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$251 }
	
.LOOP $label$252:
	$16 = CALL $309($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$252 }
	
.LABEL $label$251
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1600]
	$14 = (int_64)0
	
.LOOP $label$253:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$254 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$256 }
	$18 = ($18 + [165])
	goto $label$255 
	
.LABEL $label$256
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$255
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$254
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$253 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1760]
	$14 = (int_64)0
	
.LOOP $label$257:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$258 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$260 }
	$18 = ($18 + [165])
	goto $label$259 
	
.LABEL $label$260
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$259
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$258
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$257 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$19 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274492912, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$261 }
	$4 = CALL $310($8, $16)
	$5 = ($8 + [28])
	
.LOOP $label$262:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($4 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$263 }
	$6 = CALL $310($8, $16)
	
.LABEL $label$263
	CALL eosio_assert(((int_32)*(($4 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($8 + [24])
	$2 = *($7)
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$264 }
	$1 = *($4)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$265:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$264 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$265 }
	
.LABEL $label$264
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($5)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$268 }
	$2 = ($18 + [-24])
	
.LOOP $label$269:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$270 }
	CALL $349($17)
	
.LABEL $label$270
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$269 }
	$17 = *($5)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$267 }
	goto $label$266 
	
.LABEL $label$268
	$18 = $16
	
.LABEL $label$267
	
.LOOP $label$271:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$272 }
	CALL $349($16)
	
.LABEL $label$272
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$271 }
	
.LABEL $label$266
	*($5) = $18
	CALL db_remove_i64(*(($4 + [28])))
	$4 = $6
	if ( $6 ){ goto $label$262 }
	
.LABEL $label$261
	$16 = CALL db_lowerbound_i64(*($8), *($19), (int_64)-3922893633274492912, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$273 }
	$16 = CALL $310($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$273 }
	
.LOOP $label$274:
	$16 = CALL $310($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$274 }
	
.LABEL $label$273
	$7 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492400, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$275 }
	$8 = CALL $311($3, $16)
	$4 = ($3 + [28])
	
.LOOP $label$276:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$277 }
	$5 = CALL $311($3, $16)
	
.LABEL $label$277
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($3 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$278 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$279:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$278 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$279 }
	
.LABEL $label$278
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$282 }
	$2 = ($18 + [-24])
	
.LOOP $label$283:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$284 }
	CALL $349($17)
	
.LABEL $label$284
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$283 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$281 }
	goto $label$280 
	
.LABEL $label$282
	$18 = $16
	
.LABEL $label$281
	
.LOOP $label$285:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$286 }
	CALL $349($16)
	
.LABEL $label$286
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$285 }
	
.LABEL $label$280
	*($4) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $5
	if ( $5 ){ goto $label$276 }
	
.LABEL $label$275
	$16 = CALL db_lowerbound_i64(*($3), *($7), (int_64)-3922893633274492400, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$287 }
	$16 = CALL $311($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$287 }
	
.LOOP $label$288:
	$16 = CALL $311($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$288 }
	
.LABEL $label$287
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1632]
	$14 = (int_64)0
	
.LOOP $label$289:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$290 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$292 }
	$18 = ($18 + [165])
	goto $label$291 
	
.LABEL $label$292
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$291
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$290
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$289 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1664]
	$14 = (int_64)0
	
.LOOP $label$293:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$294 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$296 }
	$18 = ($18 + [165])
	goto $label$295 
	
.LABEL $label$296
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$295
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$294
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$293 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1696]
	$14 = (int_64)0
	
.LOOP $label$297:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$298 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$300 }
	$18 = ($18 + [165])
	goto $label$299 
	
.LABEL $label$300
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$299
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$298
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$297 }
	*(($4 = CALL $348([40])) + [8]) = $14
	*($4) = $0
	*($4 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1728]
	$14 = (int_64)0
	
.LOOP $label$301:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$302 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$304 }
	$18 = ($18 + [165])
	goto $label$303 
	
.LABEL $label$304
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$303
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$302
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$301 }
	*(($5 = CALL $348([40])) + [8]) = $14
	*($5) = $0
	*($5 + [16]) = (int_64)-1
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	$20 = ($8 + [8])
	$16 = CALL db_lowerbound_i64(*($8), *($20), (int_64)-3922893633274492896, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$305 }
	$6 = CALL $312($8, $16)
	$7 = ($8 + [28])
	
.LOOP $label$306:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$19 = [0]
	$16 = CALL db_next_i64(*($6 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$307 }
	$19 = CALL $312($8, $16)
	
.LABEL $label$307
	CALL eosio_assert(((int_32)*(($6 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$12 = ($8 + [24])
	$2 = *($12)
	$17 = *($7)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$308 }
	$1 = *($6)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$309:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$308 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$309 }
	
.LABEL $label$308
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($7)
	$16 = *($12)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$312 }
	$2 = ($18 + [-24])
	
.LOOP $label$313:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$314 }
	CALL $349($17)
	
.LABEL $label$314
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$313 }
	$17 = *($7)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$311 }
	goto $label$310 
	
.LABEL $label$312
	$18 = $16
	
.LABEL $label$311
	
.LOOP $label$315:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$316 }
	CALL $349($16)
	
.LABEL $label$316
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$315 }
	
.LABEL $label$310
	*($7) = $18
	CALL db_remove_i64(*(($6 + [28])))
	$6 = $19
	if ( $19 ){ goto $label$306 }
	
.LABEL $label$305
	$16 = CALL db_lowerbound_i64(*($8), *($20), (int_64)-3922893633274492896, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$317 }
	$16 = CALL $312($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$317 }
	
.LOOP $label$318:
	$16 = CALL $312($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$318 }
	
.LABEL $label$317
	$12 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($12), (int_64)-3922893633274492880, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$319 }
	$8 = CALL $313($3, $16)
	$6 = ($3 + [28])
	
.LOOP $label$320:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$7 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$321 }
	$7 = CALL $313($3, $16)
	
.LABEL $label$321
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$19 = ($3 + [24])
	$2 = *($19)
	$17 = *($6)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$322 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$323:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$322 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$323 }
	
.LABEL $label$322
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($6)
	$16 = *($19)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$326 }
	$2 = ($18 + [-24])
	
.LOOP $label$327:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$328 }
	CALL $349($17)
	
.LABEL $label$328
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$327 }
	$17 = *($6)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$325 }
	goto $label$324 
	
.LABEL $label$326
	$18 = $16
	
.LABEL $label$325
	
.LOOP $label$329:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$330 }
	CALL $349($16)
	
.LABEL $label$330
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$329 }
	
.LABEL $label$324
	*($6) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $7
	if ( $7 ){ goto $label$320 }
	
.LABEL $label$319
	$16 = CALL db_lowerbound_i64(*($3), *($12), (int_64)-3922893633274492880, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$331 }
	$16 = CALL $313($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$331 }
	
.LOOP $label$332:
	$16 = CALL $313($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$332 }
	
.LABEL $label$331
	$19 = ($4 + [8])
	$16 = CALL db_lowerbound_i64(*($4), *($19), (int_64)-3922893633274492864, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$333 }
	$8 = CALL $314($4, $16)
	$3 = ($4 + [28])
	
.LOOP $label$334:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$6 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$335 }
	$6 = CALL $314($4, $16)
	
.LABEL $label$335
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$4), [4256])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [4304])
	$7 = ($4 + [24])
	$2 = *($7)
	$17 = *($3)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$336 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$337:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$336 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$337 }
	
.LABEL $label$336
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($3)
	$16 = *($7)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$340 }
	$2 = ($18 + [-24])
	
.LOOP $label$341:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$342 }
	CALL $349($17)
	
.LABEL $label$342
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$341 }
	$17 = *($3)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$339 }
	goto $label$338 
	
.LABEL $label$340
	$18 = $16
	
.LABEL $label$339
	
.LOOP $label$343:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$344 }
	CALL $349($16)
	
.LABEL $label$344
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$343 }
	
.LABEL $label$338
	*($3) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $6
	if ( $6 ){ goto $label$334 }
	
.LABEL $label$333
	$16 = CALL db_lowerbound_i64(*($4), *($19), (int_64)-3922893633274492864, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$345 }
	$16 = CALL $314($4, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$345 }
	
.LOOP $label$346:
	$16 = CALL $314($4, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$346 }
	
.LABEL $label$345
	$7 = ($5 + [8])
	$16 = CALL db_lowerbound_i64(*($5), *($7), (int_64)-3922893633274492848, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$347 }
	$8 = CALL $315($5, $16)
	$3 = ($5 + [28])
	
.LOOP $label$348:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$4 = [0]
	$16 = CALL db_next_i64(*($8 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$349 }
	$4 = CALL $315($5, $16)
	
.LABEL $label$349
	CALL eosio_assert(((int_32)*(($8 + [24])) == (int_32)$5), [4256])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($5 + [24])
	$2 = *($6)
	$17 = *($3)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$350 }
	$1 = *($8)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$351:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$350 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$351 }
	
.LABEL $label$350
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($3)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$354 }
	$2 = ($18 + [-24])
	
.LOOP $label$355:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$356 }
	CALL $349($17)
	
.LABEL $label$356
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$355 }
	$17 = *($3)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$353 }
	goto $label$352 
	
.LABEL $label$354
	$18 = $16
	
.LABEL $label$353
	
.LOOP $label$357:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$358 }
	CALL $349($16)
	
.LABEL $label$358
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$357 }
	
.LABEL $label$352
	*($3) = $18
	CALL db_remove_i64(*(($8 + [28])))
	$8 = $4
	if ( $4 ){ goto $label$348 }
	
.LABEL $label$347
	$16 = CALL db_lowerbound_i64(*($5), *($7), (int_64)-3922893633274492848, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$359 }
	$16 = CALL $315($5, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$359 }
	
.LOOP $label$360:
	$16 = CALL $315($5, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$360 }
	
.LABEL $label$359
	$1 = (int_64)0
	$13 = (int_64)59
	$16 = [1280]
	$14 = (int_64)0
	
.LOOP $label$361:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$362 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$364 }
	$18 = ($18 + [165])
	goto $label$363 
	
.LABEL $label$364
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$363
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$362
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$361 }
	*(($3 = CALL $348([40])) + [8]) = $14
	*($3) = $0
	*($3 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1312]
	$14 = (int_64)0
	
.LOOP $label$365:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$366 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$368 }
	$18 = ($18 + [165])
	goto $label$367 
	
.LABEL $label$368
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$367
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$366
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$365 }
	*(($4 = CALL $348([40])) + [8]) = $14
	*($4) = $0
	*($4 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($4 + [24 align=4]) = (int_64)0
	*($4 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1344]
	$14 = (int_64)0
	
.LOOP $label$369:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$370 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$372 }
	$18 = ($18 + [165])
	goto $label$371 
	
.LABEL $label$372
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$371
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$370
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$369 }
	*(($5 = CALL $348([40])) + [8]) = $14
	*($5) = $0
	*($5 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1376]
	$14 = (int_64)0
	
.LOOP $label$373:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$374 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$376 }
	$18 = ($18 + [165])
	goto $label$375 
	
.LABEL $label$376
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$375
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$374
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$373 }
	*(($6 = CALL $348([40])) + [8]) = $14
	*($6) = $0
	*($6 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($6 + [24 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1408]
	$14 = (int_64)0
	
.LOOP $label$377:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$378 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$380 }
	$18 = ($18 + [165])
	goto $label$379 
	
.LABEL $label$380
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$379
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$378
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$377 }
	*(($7 = CALL $348([40])) + [8]) = $14
	*($7) = $0
	*($7 + [16]) = (int_64)-1
	$1 = (int_64)0
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32]) = [0]
	$13 = (int_64)59
	$16 = [1440]
	$14 = (int_64)0
	
.LOOP $label$381:
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$382 }
	$18 = *($16)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$384 }
	$18 = ($18 + [165])
	goto $label$383 
	
.LABEL $label$384
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$383
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$382
	$16 = ($16 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$381 }
	*(($8 = CALL $348([40])) + [8]) = $14
	*($8) = $0
	*($8 + [16]) = (int_64)-1
	*($8 + [24 align=4]) = (int_64)0
	*($8 + [32]) = [0]
	$10 = ($3 + [8])
	$16 = CALL db_lowerbound_i64(*($3), *($10), (int_64)-3922893633274493936, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$385 }
	$19 = CALL $316($3, $16)
	$12 = ($3 + [28])
	
.LOOP $label$386:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$20 = [0]
	$16 = CALL db_next_i64(*($19 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$387 }
	$20 = CALL $316($3, $16)
	
.LABEL $label$387
	CALL eosio_assert(((int_32)*(($19 + [24])) == (int_32)$3), [4256])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$13()), [4304])
	$11 = ($3 + [24])
	$2 = *($11)
	$17 = *($12)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$388 }
	$1 = *($19)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$389:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$388 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$389 }
	
.LABEL $label$388
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($12)
	$16 = *($11)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$392 }
	$2 = ($18 + [-24])
	
.LOOP $label$393:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$394 }
	CALL $349($17)
	
.LABEL $label$394
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$393 }
	$17 = *($12)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$391 }
	goto $label$390 
	
.LABEL $label$392
	$18 = $16
	
.LABEL $label$391
	
.LOOP $label$395:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$396 }
	CALL $349($16)
	
.LABEL $label$396
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$395 }
	
.LABEL $label$390
	*($12) = $18
	CALL db_remove_i64(*(($19 + [28])))
	$19 = $20
	if ( $20 ){ goto $label$386 }
	
.LABEL $label$385
	$16 = CALL db_lowerbound_i64(*($3), *($10), (int_64)-3922893633274493936, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$397 }
	$16 = CALL $316($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$397 }
	
.LOOP $label$398:
	$16 = CALL $316($3, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$398 }
	
.LABEL $label$397
	$11 = ($4 + [8])
	$16 = CALL db_lowerbound_i64(*($4), *($11), (int_64)-3922893633274493920, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$399 }
	$3 = CALL $317($4, $16)
	$19 = ($4 + [28])
	
.LOOP $label$400:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$12 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$401 }
	$12 = CALL $317($4, $16)
	
.LABEL $label$401
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$4), [4256])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [4304])
	$20 = ($4 + [24])
	$2 = *($20)
	$17 = *($19)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$402 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$403:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$402 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$403 }
	
.LABEL $label$402
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($19)
	$16 = *($20)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$406 }
	$2 = ($18 + [-24])
	
.LOOP $label$407:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$408 }
	CALL $349($17)
	
.LABEL $label$408
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$407 }
	$17 = *($19)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$405 }
	goto $label$404 
	
.LABEL $label$406
	$18 = $16
	
.LABEL $label$405
	
.LOOP $label$409:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$410 }
	CALL $349($16)
	
.LABEL $label$410
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$409 }
	
.LABEL $label$404
	*($19) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $12
	if ( $12 ){ goto $label$400 }
	
.LABEL $label$399
	$16 = CALL db_lowerbound_i64(*($4), *($11), (int_64)-3922893633274493920, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$411 }
	$16 = CALL $317($4, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$411 }
	
.LOOP $label$412:
	$16 = CALL $317($4, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$412 }
	
.LABEL $label$411
	$20 = ($5 + [8])
	$16 = CALL db_lowerbound_i64(*($5), *($20), (int_64)-3922893633274493904, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$413 }
	$3 = CALL $318($5, $16)
	$4 = ($5 + [28])
	
.LOOP $label$414:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$19 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$415 }
	$19 = CALL $318($5, $16)
	
.LABEL $label$415
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$5), [4256])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$13()), [4304])
	$12 = ($5 + [24])
	$2 = *($12)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$416 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$417:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$416 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$417 }
	
.LABEL $label$416
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($12)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$420 }
	$2 = ($18 + [-24])
	
.LOOP $label$421:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$422 }
	CALL $349($17)
	
.LABEL $label$422
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$421 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$419 }
	goto $label$418 
	
.LABEL $label$420
	$18 = $16
	
.LABEL $label$419
	
.LOOP $label$423:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$424 }
	CALL $349($16)
	
.LABEL $label$424
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$423 }
	
.LABEL $label$418
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $19
	if ( $19 ){ goto $label$414 }
	
.LABEL $label$413
	$16 = CALL db_lowerbound_i64(*($5), *($20), (int_64)-3922893633274493904, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$425 }
	$16 = CALL $318($5, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$425 }
	
.LOOP $label$426:
	$16 = CALL $318($5, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$426 }
	
.LABEL $label$425
	$12 = ($6 + [8])
	$16 = CALL db_lowerbound_i64(*($6), *($12), (int_64)-3922893633274493888, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$427 }
	$3 = CALL $319($6, $16)
	$4 = ($6 + [28])
	
.LOOP $label$428:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$429 }
	$5 = CALL $319($6, $16)
	
.LABEL $label$429
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$6), [4256])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [4304])
	$19 = ($6 + [24])
	$2 = *($19)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$430 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$431:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$430 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$431 }
	
.LABEL $label$430
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($19)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$434 }
	$2 = ($18 + [-24])
	
.LOOP $label$435:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$436 }
	CALL $349($17)
	
.LABEL $label$436
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$435 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$433 }
	goto $label$432 
	
.LABEL $label$434
	$18 = $16
	
.LABEL $label$433
	
.LOOP $label$437:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$438 }
	CALL $349($16)
	
.LABEL $label$438
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$437 }
	
.LABEL $label$432
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$428 }
	
.LABEL $label$427
	$16 = CALL db_lowerbound_i64(*($6), *($12), (int_64)-3922893633274493888, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$439 }
	$16 = CALL $319($6, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$439 }
	
.LOOP $label$440:
	$16 = CALL $319($6, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$440 }
	
.LABEL $label$439
	$19 = ($7 + [8])
	$16 = CALL db_lowerbound_i64(*($7), *($19), (int_64)-3922893633274493872, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$441 }
	$3 = CALL $320($7, $16)
	$4 = ($7 + [28])
	
.LOOP $label$442:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$443 }
	$5 = CALL $320($7, $16)
	
.LABEL $label$443
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$7), [4256])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($7 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$444 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$445:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$444 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$445 }
	
.LABEL $label$444
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$448 }
	$2 = ($18 + [-24])
	
.LOOP $label$449:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$450 }
	CALL $349($17)
	
.LABEL $label$450
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$449 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$447 }
	goto $label$446 
	
.LABEL $label$448
	$18 = $16
	
.LABEL $label$447
	
.LOOP $label$451:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$452 }
	CALL $349($16)
	
.LABEL $label$452
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$451 }
	
.LABEL $label$446
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$442 }
	
.LABEL $label$441
	$16 = CALL db_lowerbound_i64(*($7), *($19), (int_64)-3922893633274493872, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$453 }
	$16 = CALL $320($7, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$453 }
	
.LOOP $label$454:
	$16 = CALL $320($7, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$454 }
	
.LABEL $label$453
	$13 = *(($8 + [8]))
	$1 = *($8)
	$16 = CALL db_lowerbound_i64($1, $13, (int_64)-3922893633274493424, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$455 }
	$3 = CALL $321($8, $16)
	$4 = ($8 + [28])
	
.LOOP $label$456:
	CALL eosio_assert([1], [4208])
	CALL eosio_assert([1], [656])
	$5 = [0]
	$16 = CALL db_next_i64(*($3 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$457 }
	$5 = CALL $321($8, $16)
	
.LABEL $label$457
	CALL eosio_assert(((int_32)*(($3 + [24])) == (int_32)$8), [4256])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$13()), [4304])
	$6 = ($8 + [24])
	$2 = *($6)
	$17 = *($4)
	if ( ((int_32)$17 == (int_32)$2) ){ goto $label$458 }
	$1 = *($3)
	$16 = ($17 + [-24])
	$9 = ([0] - $2)
	
.LOOP $label$459:
	if ( ((int_64)*(*($16)) == (int_64)$1) ){ goto $label$458 }
	$17 = $16
	$18 = ($16 + [-24])
	$16 = $18
	if ( ((int_32)($18 + $9) != (int_32)[-24]) ){ goto $label$459 }
	
.LABEL $label$458
	CALL eosio_assert(((int_32)$17 != (int_32)$2), [4368])
	$18 = *($4)
	$16 = *($6)
	$16 = ($16 + ((int_32)((int_32)(($17 + [-24]) - $16) / (int_32)[24]) * (int_32)[24]))
	$17 = ($16 + [24])
	if ( ((int_32)$17 == (int_32)$18) ){ goto $label$462 }
	$2 = ($18 + [-24])
	
.LOOP $label$463:
	$18 = ($16 + [24])
	$9 = *($18)
	*($18) = [0]
	$17 = *($16)
	*($16) = $9
	if ( ($17 == 0) ){ goto $label$464 }
	CALL $349($17)
	
.LABEL $label$464
	*(($16 + [16])) = *(($16 + [40]))
	*(($16 + [8])) = *(($16 + [32]))
	$16 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$463 }
	$17 = *($4)
	if ( ((int_32)$17 != (int_32)$18) ){ goto $label$461 }
	goto $label$460 
	
.LABEL $label$462
	$18 = $16
	
.LABEL $label$461
	
.LOOP $label$465:
	$17 = ($17 + [-24])
	$16 = *($17)
	*($17) = [0]
	if ( ($16 == 0) ){ goto $label$466 }
	CALL $349($16)
	
.LABEL $label$466
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$465 }
	
.LABEL $label$460
	*($4) = $18
	CALL db_remove_i64(*(($3 + [28])))
	$3 = $5
	if ( $5 ){ goto $label$456 }
	$13 = *(($8 + [8]))
	$1 = *($8)
	
.LABEL $label$455
	$16 = CALL db_lowerbound_i64($1, $13, (int_64)-3922893633274493424, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$467 }
	$16 = CALL $321($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$467 }
	
.LOOP $label$468:
	$16 = CALL $321($8, $16)
	CALL eosio_assert([1], [656])
	$16 = CALL db_next_i64(*($16 + [28]), ($21 + [8]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$468 }
	
.LABEL $label$467
	*([0] + [4]) = ($21 + [16])
}

int_32 .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $294($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $294($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141019136, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493408, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $50($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493408, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [16])
	$7 = $6
	*([0] + [4]) = $6
	$2 = *($0)
	$5 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $5, [33])
	CALL $351(($1 + [36]), ($5 + [36]))
	CALL $351(($1 + [48]), ($5 + [48]))
	$5 = *($1 + [36])
	$3 = ( *(($1 + [40])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($3 + [33])
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$3 = *(($1 + [48]))
	$3 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $5)
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	$6 = CALL malloc($5)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($6 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$3
	*($7 + [4]) = $6
	*($7) = $6
	*($7 + [8]) = ($6 + $5)
	CALL $293($7, $1)
	$4 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141018624, *(*($0 + [8])), $4, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $54 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493392, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $53($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493392, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493392, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $53($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $57 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493376, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $56($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493376, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $348(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $371($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $348([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [40])
	$1 = ( *(($4 + [44])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [40])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $94($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	*($10 + [16]) = $10
	*($10 + [24]) = $4
	$5 = ($9 + [40])
	CALL $159(($10 + [24]), ($10 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $349($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $349($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $349($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $155($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $94($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $156($4, $1)
	CALL $158(CALL $157(CALL $157($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $348(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $371($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $349($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $349($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN9msAccount13delayTransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	*([0] + [4]) = $14
	$11 = CALL current_time()
	*(($14 + [140])) = [0]
	*(($14 + [144])) = [0]
	*($14 + [124]) = [0]
	*($14 + [128]) = [0]
	*($14 + [132]) = [0]
	*($14 + [136]) = [0]
	*($14 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [148]) = [0]
	*(($14 + [152])) = [0]
	*(($14 + [156])) = [0]
	*($14 + [160]) = [0]
	*(($14 + [164])) = [0]
	*(($14 + [168])) = [0]
	$6 = ($14 + [148])
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [2304]
	$12 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$6 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	*($14 + [104]) = $12
	*($14 + [96]) = $5
	$8 = ($2 + [16])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [2320]
	$12 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$12 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$8
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$7 }
	*($14 + [88]) = $12
	*(($9 = (($14 + [8]) + [16]))) = *(($2 + [16]))
	*(($7 = (($14 + [8]) + [8]))) = *(($2 + [8]))
	*($14 + [8]) = *($2)
	*($14 + [32]) = $5
	*($14 + [40]) = $1
	*(($14 + [64])) = *($9)
	*(($14 + [56])) = *($7)
	*($14 + [48]) = *($14 + [8])
	CALL $378(($14 + [72]), $3)
	CALL $152($6, ($14 + [96]), $8, ($14 + [88]), ($14 + [32]))
	if ( ((*($14 + [72]) & [1]) == 0) ){ goto $label$13 }
	CALL $349(*(($14 + [80])))
	
.LABEL $label$13
	*(($14 + [132])) = $4
	*($14 + [40]) = (int_64)0
	*($14 + [32]) = $1
	$11 = *($0)
	CALL $153(($14 + [8]), ($14 + [112]))
	$9 = *($14 + [8])
	CALL send_deferred(($14 + [32]), $11, $9, (*($14 + [12]) - $9), [0])
	$9 = *($14 + [8])
	if ( ($9 == 0) ){ goto $label$14 }
	*($14 + [12]) = $9
	CALL $349($9)
	
.LABEL $label$14
	CALL $154(($14 + [112]))
	*([0] + [4]) = ($14 + [176])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1984])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1984])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1984])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1984])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1984])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1984])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1984])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $98(CALL $97($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $154 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $349($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $349($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $349($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $349($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $349($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $349($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $349($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $349($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1984])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1984])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $98($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $99(*($1), ($0 + [40]))
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC $273 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $295($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $295($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC __stpcpy (int_32 $0, int_32 $1)
{
	int_32 $2
	if ( (((int_32)$1 ^ (int_32)$0) & [3]) ){ goto $label$2 }
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ($1 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$2 = *($1)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$2 }
	
.LOOP $label$5:
	*($0) = $2
	$0 = ($0 + [4])
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	
.LABEL $label$2
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = ($1 + [1])
	
.LOOP $label$6:
	$2 = *($1)
	*(($0 = ($0 + [1]))) = $2
	$1 = ($1 + [1])
	if ( $2 ){ goto $label$6 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC strncpy (int_32 $0, int_32 $1, int_32 $2)
{
	CALL __stpncpy($0, $1, $2)
	return $0
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC strcpy (int_32 $0, int_32 $1)
{
	CALL __stpcpy($0, $1)
	return $0
}

int_32 .FUNC _ZNKSt3__16locale9use_facetERNS0_2idE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	$0 = *($0)
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [9])
	*($2) = $1
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$1 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL _ZNSt3__111__call_onceERVmPvPFvS2_E($1, ($2 + [16]), [10])
	
.LABEL $label$1
	$1 = *(((*($0 + [16]) + (*($1 + [4]) << [2])) + [-4]))
	*([0] + [4]) = ($2 + [32])
	return $1
}

int_32 .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492352, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $86($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC fprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vfprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC isspace (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_64 .FUNC __stdio_seek (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

int_32 .FUNC __stdio_write (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_32 .FUNC __stdio_close (int_32 $0)
{
	return [0]
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC $52 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493408, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $50($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [15040])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [15024]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [15056]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_32 .FUNC __errno_location ()
{
	return [15016]
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492864, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $71($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492864, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492864, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $71($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492880, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $68($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492848, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $74($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492848, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $74($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492848, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $78 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274492400, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $77($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274492400, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274492400, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $77($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC _ZN10msContract21getCurrentTransactionEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = (*([0] + [4]) - [32])
	$6 = $3
	*([0] + [4]) = $3
	$4 = $3
	$5 = CALL transaction_size()
	$3 = ($3 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $3
	$2 = CALL read_transaction($3, $5)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([3584])
	CALL prints([256])
	CALL eosio_assert([0], [3584])
	
.LABEL $label$1
	CALL sha256($3, $2, $6)
	CALL printhex($6, [32])
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen([128])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$2 = (($3 + [16]) & [-16])
	$5 = CALL $348($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($5, [128], $3)
	
.LABEL $label$3
	*(($5 + $3)) = [0]
	$4
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $350($0)
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_64 .FUNC _ZN10msContract15getSelfContractEv (int_32 $0)
{
	return *($0 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = *($0 + [16])
	$9 = ($2 + *($0 + [20]))
	$7 = *($0 + [4])
	$10 = ($7 + (uint_32($9 >> [6]) & [67108860]))
	$6 = ((int_32)*($0 + [8]) == (int_32)$7)
	if ( $6 ){ goto $label$2 }
	$9 = (*($10) + (($9 & [255]) << [4]))
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	$8 = *($1 + [4])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$3 }
	$4 = int_32(($8 - *($3)) >> [4])
	$3 = *($1)
	$5 = ((int_32(($9 - *($10)) >> [4]) + (($10 - $3) << [6])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	$1 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( $6 ){ goto $label$6 }
	$10 = (*($1) + (($2 & [255]) << [4]))
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = [0]
	if ( ((int_32)$8 == (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (($4 + (($3 - $1) << [6])) - int_32(($10 - *($1)) >> [4]))
	if ( ($7 == 0) ){ goto $label$4 }
	$10 = (int_32(($10 - *($1)) >> [4]) + $7)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$7 }
	$1 = ($1 + (uint_32($10 >> [6]) & [67108860]))
	$10 = (*($1) + (($10 & [255]) << [4]))
	goto $label$4 
	
.LABEL $label$7
	$10 = ([255] - $10)
	$1 = ($1 + (((int_32)$10 / (int_32)[-256]) << [2]))
	$10 = (*($1) + (([255] - ((int_32)$10 % (int_32)[256])) << [4]))
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = (CALL $112($10) + [16])
	if ( ((int_32)($10 - *($1)) != (int_32)[4096]) ){ goto $label$10 }
	$10 = *($1 + [4])
	$1 = ($1 + [4])
	
.LABEL $label$10
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	$1 = (*($7) - $5)
	*(($7 = ($0 + [20]))) = $1
	$0 = ($0 + [16])
	$8 = ($0 + [4])
	$9 = ($0 + [8])
	$10 = *($9)
	$2 = ($10 - *($8))
	if ( ((( (($2 << [6]) + [-1]) ? [0] : $2 ) - ($1 + *($0))) <= [512]) ){ goto $label$3 }
	
.LOOP $label$11:
	CALL $349(*(($10 + [-4])))
	$10 = (*($9) + [-4])
	*($9) = $10
	$1 = ($10 - *($8))
	if ( ((uint_32)(( (($1 << [6]) + [-1]) ? [0] : $1 ) - (*($7) + *($0))) > (uint_32)[511]) ){ goto $label$11 }
	
.LABEL $label$3
}

int_32 .FUNC _ZN4json6getIntERNS_4JSONEii (int_32 $0, int_32 $1, int_32 $2)
{
	if ( ((int_32)*($0 + [8]) != (int_32)[5]) ){ goto $label$1 }
	return *($0)
	
.LABEL $label$1
	CALL prints([176])
	CALL prints([3264])
	CALL prints([256])
	CALL eosio_assert([0], [3264])
	return [0]
}

int_32 .FUNC __stpncpy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((((int_32)$1 ^ (int_32)$0) & [3]) == 0) ){ goto $label$4 }
	$4 = $2
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$9 }
	if ( (($1 & [3]) == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$4 = *($1)
	*($0) = $4
	if ( ($4 == 0) ){ goto $label$6 }
	$3 = ((int_32)$2 != (int_32)[1])
	$0 = ($0 + [1])
	$4 = ($2 + [-1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $4
	if ( ($1 & [3]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$4 = $2
	if ( $3 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$8
	$4 = $2
	
.LABEL $label$7
	if ( $3 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	if ( (*($1) == 0) ){ goto $label$2 }
	if ( ($4 <= [4]) ){ goto $label$3 }
	
.LOOP $label$11:
	$2 = *($1)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$3 }
	*($0) = $2
	$0 = ($0 + [4])
	$1 = ($1 + [4])
	$4 = ($4 + [-4])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$3
	$5 = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	
.LOOP $label$12:
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$2 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	CALL memset($0, [0], $5)
	return $0
}

int_32 .FUNC $369 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $358($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = *($1)
	$9 = (CASTING uint_32)(uint_64 $7)
	$11 = [0]
	$12 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	$8 = *($2)
	$10 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	if ( ((int_32)$10) == (int_32)$12)) ){ goto $label$1 }
	$11 = (CASTING uint_32)(uint_64 $8)
	$11 = ((int_32(($10 - *($11)) >> [4]) + (($11 - $9) << [6])) - int_32(($12 - *($9)) >> [4]))
	
.LABEL $label$1
	$6 = *($0 + [16])
	$5 = *($0 + [20])
	$10 = *($0 + [4])
	$12 = *($0 + [8])
	$5 = ($12 - $10)
	$4 = (( (($5 << [6]) + [-1]) ? [0] : $5 ) - ($5 + $6))
	if ( ((uint_32)$11 <= (uint_32)$4) ){ goto $label$2 }
	CALL $131($0, ($11 - $4))
	$12 = *(($0 + [8]))
	$10 = *(($0 + [4]))
	$6 = *(($0 + [16]))
	$5 = *(($0 + [20]))
	
.LABEL $label$2
	$5 = ($6 + $5)
	$11 = ($10 + (uint_32($5 >> [6]) & [67108860]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$4 }
	$12 = (*($11) + (($5 & [255]) << [4]))
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	
.LABEL $label$3
	$5 = *($2 + [4])
	$10 = *($1 + [4])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$5 }
	$0 = ($0 + [20])
	
.LOOP $label$6:
	$12 = (CALL $132($12, $10) + [16])
	if ( ((int_32)($12 - *($11)) != (int_32)[4096]) ){ goto $label$7 }
	$12 = *($11 + [4])
	$11 = ($11 + [4])
	
.LABEL $label$7
	$10 = ($10 + [16])
	*(($2 = ($1 + [4]))) = $10
	if ( ((int_32)($10 - *($9)) != (int_32)[4096]) ){ goto $label$8 }
	$6 = ($9 + [4])
	*($1) = $6
	$10 = *($9 + [4])
	*($2) = $10
	$9 = $6
	
.LABEL $label$8
	*($0) = (*($0) + [1])
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$5
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$2 = *($0 + [16])
	$8 = uint_32($2 >> [8])
	$1 = ( $10 ? $8 : ($10 <= $8) )
	$3 = uint_32($1 >> [8])
	$11 = *($0 + [4])
	$12 = *($0 + [8])
	$1 = (((int_32)$12 == (int_32)$11) + $1)
	$9 = ((int_32)($1 & [255]) != (int_32)[0])
	$10 = ($9 + $3)
	$5 = ($10 - $1)
	if ( ($5 == 0) ){ goto $label$8 }
	$11 = int_32(($12 - $11) >> [2])
	$2 = *($0 + [12])
	$6 = ($2 - *($0))
	if ( ((uint_32)$5 <= (uint_32)(int_32($6 >> [2]) - $11)) ){ goto $label$7 }
	*(($13 + [24])) = ($0 + [12])
	$12 = [0]
	*($13 + [20]) = [0]
	$2 = int_32($6 >> [1])
	$5 = ($11 + $5)
	$5 = ( $5 ? $2 : ($2 <= $5) )
	if ( ($5 == 0) ){ goto $label$9 }
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$12 = CALL $348(($5 << [2]))
	
.LABEL $label$9
	$7 = ($1 << [8])
	*($13 + [8]) = $12
	*((($13 + [8]) + [12])) = ($12 + ($5 << [2]))
	$12 = ($12 + (($11 - $1) << [2]))
	*($13 + [16]) = $12
	*($13 + [12]) = $12
	$11 = ((int_32)$10 ^ (int_32)[-1])
	$12 = ((int_32)$8 ^ (int_32)[-1])
	$12 = ((((int_32)( $12 ? $11 : ((uint_32)$12 > (uint_32)$11) ) ^ (int_32)[-1]) - $3) - $9)
	
.LOOP $label$10:
	*($13 + [4]) = CALL $348([4096])
	CALL $135(($13 + [8]), ($13 + [4]))
	$12 = ($12 + [1])
	if ( $12 ){ goto $label$10 }
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [4])
	$10 = *($2)
	$8 = ($13 + [16])
	$12 = *($8)
	$9 = ($13 + [20])
	
.LOOP $label$11:
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$12 }
	$3 = *($13 + [8])
	$11 = *($13 + [12])
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$13 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$14 }
	CALL memmove($5, $11, $6)
	$11 = *($13 + [12])
	
.LABEL $label$14
	$12 = ($5 + ($12 << [2]))
	*($8) = $12
	*($13 + [12]) = ($11 + $3)
	goto $label$12 
	
.LABEL $label$13
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $348($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($8)
	$11 = *($13 + [12])
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$15 }
	$12 = $6
	
.LOOP $label$16:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$16 }
	
.LABEL $label$15
	*($8) = $12
	*($9) = $4
	*($13 + [12]) = $6
	$11 = *($13 + [8])
	*($13 + [8]) = $3
	if ( ($11 == 0) ){ goto $label$12 }
	CALL $349($11)
	$12 = *($8)
	
.LABEL $label$12
	*($12) = *($10)
	$12 = (*($8) + [4])
	*($8) = $12
	$10 = (*($2) + [4])
	*($2) = $10
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$11 }
	goto $label$5 
	
.LABEL $label$8
	*(($0 + [16])) = ($2 - ($1 << [8]))
	if ( ($1 == 0) ){ goto $label$2 }
	$9 = ($0 + [12])
	$10 = ($0 + [8])
	
.LOOP $label$17:
	$2 = *($11)
	$11 = ($11 + [4])
	*(($8 = ($0 + [4]))) = $11
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$18 }
	$3 = *($0)
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$19 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$20 }
	CALL memmove($5, $11, $6)
	$11 = *($8)
	
.LABEL $label$20
	*($8) = ($11 + $3)
	$12 = ($5 + ($12 << [2]))
	*($10) = $12
	goto $label$18 
	
.LABEL $label$19
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $348($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($10)
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$21 }
	$12 = $6
	
.LOOP $label$22:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$22 }
	
.LABEL $label$21
	*($8) = $6
	$11 = *($0)
	*($0) = $3
	*($10) = $12
	*($9) = $4
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $349($11)
	$12 = *($10)
	
.LABEL $label$18
	*($12) = $2
	$12 = (*($10) + [4])
	*($10) = $12
	$1 = ($1 + [-1])
	if ( ($1 == 0) ){ goto $label$2 }
	$11 = *($8)
	goto $label$17 
	
.LABEL $label$7
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$23 }
	$12 = ($0 + [8])
	$11 = ($0 + [12])
	
.LOOP $label$24:
	*($13 + [8]) = CALL $348([4096])
	CALL $133($0, ($13 + [8]))
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	$5 = ($5 + [-1])
	if ( ((int_32)*($11) != (int_32)*($12)) ){ goto $label$24 }
	
.LABEL $label$23
	$8 = ((int_32)( $8 ? $10 : ((uint_32)$10 > (uint_32)$8) ) ^ (int_32)[-1])
	$1 = ($0 + [8])
	$12 = ($0 + [16])
	$11 = $5
	
.LOOP $label$25:
	*($13 + [8]) = CALL $348([4096])
	CALL $134($0, ($13 + [8]))
	$10 = ((*($12) + ( [-1] ? [0] : ((int_32)(*($1) - *(($0 + [4]))) == (int_32)[4]) )) + [256])
	*($12) = $10
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$25 }
	$1 = (($5 + [-1]) - $8)
	goto $label$3 
	
.LABEL $label$6
	$10 = *(($0 + [4]))
	
.LABEL $label$5
	$1 = ($0 + [8])
	$12 = *($1)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$26 }
	$11 = ($0 + [4])
	
.LOOP $label$27:
	$12 = ($12 + [-4])
	CALL $136(($13 + [8]), $12)
	$10 = *($11)
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$27 }
	$12 = *(($0 + [8]))
	
.LABEL $label$26
	$11 = *($0)
	*($0) = *($13 + [8])
	*(($0 + [4])) = *($13 + [12])
	*($13 + [8]) = $11
	*($13 + [12]) = $10
	$5 = (($13 + [8]) + [8])
	$8 = *($5)
	*($5) = $12
	*($1) = $8
	$1 = ($0 + [12])
	$5 = *($1)
	$8 = (($13 + [8]) + [12])
	*($1) = *($8)
	*($8) = $5
	*(($0 = ($0 + [16]))) = (*($0) - $7)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$28 }
	*(($13 + [16])) = ($12 + (((int_32)(($12 + [-4]) - $10) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$28
	if ( ($11 == 0) ){ goto $label$2 }
	CALL $349($11)
	goto $label$2 
	
.LABEL $label$4
	$10 = *(($0 + [16]))
	
.LABEL $label$3
	*(($0 + [16])) = ($10 - ($1 << [8]))
	if ( ($1 == 0) ){ goto $label$2 }
	$10 = ($0 + [8])
	$12 = *($10)
	$9 = ($0 + [12])
	
.LOOP $label$29:
	$8 = ($0 + [4])
	$11 = *($8)
	$2 = *($11)
	$11 = ($11 + [4])
	*($8) = $11
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$30 }
	$3 = *($0)
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$31 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$32 }
	CALL memmove($5, $11, $6)
	$11 = *($8)
	
.LABEL $label$32
	*($8) = ($11 + $3)
	$12 = ($5 + ($12 << [2]))
	*($10) = $12
	goto $label$30 
	
.LABEL $label$31
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $348($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($10)
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$33 }
	$12 = $6
	
.LOOP $label$34:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$34 }
	
.LABEL $label$33
	*($8) = $6
	$11 = *($0)
	*($0) = $3
	*($10) = $12
	*($9) = $4
	if ( ($11 == 0) ){ goto $label$30 }
	CALL $349($11)
	$12 = *($10)
	
.LABEL $label$30
	*($12) = $2
	$12 = (*($10) + [4])
	*($10) = $12
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$29 }
	
.LABEL $label$2
	*([0] + [4]) = ($13 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = [0]
	$5 = *($1 + [8])
	if ( ((int_32)$5 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$4 }
	*(($2 = CALL $348([12])) + [8]) = [0]
	$5 = *($1)
	$6 = *($5)
	*($2 + [4]) = [0]
	$4 = ($2 + [4])
	*($2) = $4
	$3 = ($5 + [4])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = $6
	$5 = ($7 + [16])
	CALL $129($2, $4, $5, $5)
	$5 = *($7 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = $5
	$5 = *($6)
	if ( $5 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$9 }
	$7 = ($7 + [8])
	
.LOOP $label$12:
	$5 = *($7)
	$7 = ($5 + [8])
	$6 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($6)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*($0) = $2
	goto $label$1 
	
.LABEL $label$6
	$5 = CALL $348([12])
	CALL $378($5, *($1))
	*($0) = $5
	goto $label$1 
	
.LABEL $label$5
	$5 = CALL $348([24])
	$2 = *($6 + [16])
	$6 = *($1)
	$7 = *($6 + [4])
	$4 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($6 + [8]) == (int_32)$7) ){ goto $label$3 }
	$3 = ($2 + *($6 + [20]))
	$6 = ($7 + (uint_32($3 >> [6]) & [67108860]))
	$7 = (*($6) + (($3 & [255]) << [4]))
	$2 = (*($4) + (($2 & [255]) << [4]))
	goto $label$2 
	
.LABEL $label$4
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$6 = ($7 + (uint_32(($2 + *($6 + [20])) >> [6]) & [67108860]))
	$2 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($8 + [24]) = $4
	*($8 + [28]) = $2
	*($8 + [20]) = $7
	*($8 + [16]) = $6
	*($8 + [8 align=4]) = *($8 + [24])
	*(($8 + [4])) = *($8 + [20])
	*($8) = *($8 + [16])
	CALL $130($5, ($8 + [8]), $8, [0])
	*($0) = $5
	
.LABEL $label$1
	*(($0 + [8])) = *(($1 + [8]))
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $348($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $349($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $348($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $349($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $348($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $349($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $348($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $349($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	$6 = ($1 + [16])
	$8 = ($10 & [1])
	$10 = *($4)
	$10 = ( *($4 + [4]) ? uint_32($10 >> [1]) : $8 )
	$7 = ($11 & [1])
	$11 = *($1 + [16])
	$11 = ( *($1 + [20]) ? uint_32($11 >> [1]) : $7 )
	$9 = ( $11 ? $10 : ($11 <= $10) )
	if ( ($9 == 0) ){ goto $label$14 }
	$7 = CALL memcmp(( *($4 + [8]) ? ($4 + [1]) : $8 ), ( *($1 + [24]) ? ($6 + [1]) : $7 ), $9)
	if ( ($7 == 0) ){ goto $label$14 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((uint_32)$10 >= (uint_32)$11) ){ goto $label$12 }
	
.LABEL $label$13
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$11 }
	$10 = *($1)
	if ( ($10 == 0) ){ goto $label$7 }
	
.LOOP $label$15:
	$11 = $10
	$10 = *($11 + [4])
	if ( $10 ){ goto $label$15 }
	goto $label$6 
	
.LABEL $label$12
	$8 = ($10 & [1])
	$10 = *(($1 + [16]))
	$10 = ( *(($1 + [20])) ? uint_32($10 >> [1]) : $8 )
	$7 = ($11 & [1])
	$11 = *($4)
	$11 = ( *(($4 + [4])) ? uint_32($11 >> [1]) : $7 )
	$9 = ( $11 ? $10 : ($11 <= $10) )
	if ( ($9 == 0) ){ goto $label$10 }
	$6 = CALL memcmp(( *($1 + [24]) ? ($6 + [1]) : $8 ), ( *($4 + [8]) ? ($4 + [1]) : $7 ), $9)
	if ( ($6 == 0) ){ goto $label$10 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$11
	$11 = $1
	if ( *($1) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$10
	if ( ((uint_32)$10 >= (uint_32)$11) ){ goto $label$8 }
	
.LABEL $label$9
	$11 = *($1 + [4])
	if ( ($11 == 0) ){ goto $label$2 }
	
.LOOP $label$16:
	$10 = $11
	$11 = *($10)
	if ( $11 ){ goto $label$16 }
	goto $label$1 
	
.LABEL $label$8
	*($2) = $1
	*($3) = $1
	return $3
	
.LABEL $label$7
	$10 = $1
	
.LOOP $label$17:
	$11 = *($10 + [8])
	$3 = ((int_32)*($11) == (int_32)$10)
	$10 = $11
	if ( $3 ){ goto $label$17 }
	
.LABEL $label$6
	$5 = ($3 & [1])
	$3 = *($11 + [16])
	$3 = ( *(($11 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($10 & [1])
	$10 = *($4)
	$10 = ( *($4 + [4]) ? uint_32($10 >> [1]) : $6 )
	$7 = ( $10 ? $3 : ($10 <= $3) )
	if ( ($7 == 0) ){ goto $label$19 }
	$6 = CALL memcmp(( *(($11 + [24])) ? (($11 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $7)
	if ( ($6 == 0) ){ goto $label$19 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((uint_32)$3 >= (uint_32)$10) ){ goto $label$4 }
	
.LABEL $label$18
	if ( (*($1) == 0) ){ goto $label$3 }
	
.LABEL $label$5
	*($2) = $11
	return ($11 + [4])
	
.LABEL $label$4
	return CALL $126($0, $2, $4)
	
.LABEL $label$3
	*($2) = $1
	return $1
	
.LABEL $label$2
	$10 = *($1 + [8])
	if ( ((int_32)*($10) == (int_32)$1) ){ goto $label$1 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$11 = *($3)
	$3 = ($11 + [8])
	$10 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($10)) ){ goto $label$20 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$23 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($11 & [1])
	$11 = *($10 + [16])
	$11 = ( *($10 + [20]) ? uint_32($11 >> [1]) : $6 )
	$7 = ( $11 ? $3 : ($11 <= $3) )
	if ( ($7 == 0) ){ goto $label$24 }
	$6 = CALL memcmp(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($10 + [24]) ? (($10 + [16]) + [1]) : $6 ), $7)
	if ( ($6 == 0) ){ goto $label$24 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$22 }
	
.LABEL $label$23
	$11 = ($1 + [4])
	if ( (*($11) == 0) ){ goto $label$21 }
	*($2) = $10
	return $10
	
.LABEL $label$22
	return CALL $126($0, $2, $4)
	
.LABEL $label$21
	*($2) = $1
	return $11
}

void .FUNC $33 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493936, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $32($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493936, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC _ZNSt3__19to_stringEl (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14784], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $369(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $369(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC asctime (int_32 $0)
{
	return CALL __asctime($0, [17888])
}

int_32 .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

int_64 .FUNC $209 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	if ( ($0 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
	return $1
}

int_32 .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

int_64 .FUNC $203 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	if ( ($0 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
	return $1
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $201($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

void .FUNC $206 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $207($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $207 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

void .FUNC $204 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $208($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $207($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $348(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $371($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $349(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $349($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$9 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($9 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($9 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($9)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $9)
	*($10 + [4]) = $7
	*($10) = $7
	$6 = ($7 + $9)
	*($10 + [8]) = $6
	if ( ((uint_32)$9 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$6 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([48])) + [32]) = [0]
	*($3 + [24 align=4]) = (int_64)0
	*($3 + [36]) = $0
	CALL eosio_assert(((uint_32)($6 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$9 = ($7 + [8])
	CALL eosio_assert(((uint_32)($6 - $9) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $9, [8])
	$9 = ($7 + [16])
	CALL eosio_assert(((uint_32)($6 - $9) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $9, [8])
	*($10 + [4]) = ($7 + [24])
	CALL $101($10, ($3 + [24]))
	*($3 + [40]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [32])))
	
.LABEL $label$19
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL $12($1)
	CALL prints([944])
	CALL printn(*($1 + [16]))
}

void .FUNC $7 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $103($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $4 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL prints(*($1))
}

void .FUNC $5 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL printui(*($1))
}

void .FUNC _ZN7eosdice15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 _ZN7eosdice15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, int_32 $3, int_32 $4)
{
	int_32 $5
	CALL _ZN10msContract13commitAndExitEy($5, (int_64)1)
	(unreachable)
}

void .FUNC _ZN10msContract13commitAndExitEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	*($2 + [24]) = $1
	*($2 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($2 + [12]) = CALL asctime(CALL $432(($2 + [16])))
	CALL $4([32], ($2 + [12]))
	CALL $5([48], ($2 + [24]))
	CALL prints([80])
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC memory (int_32 memory, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [368])
	*([0] + [4]) = $21
	$13 = *($4)
	$19 = CALL strlen([128])
	if ( ((int_32)$19 != (int_32)( *($4 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$6 }
	if ( (CALL $363($4, [0], [-1], [128], $19) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$17 = *($3 + [16])
	$15 = (int_64)0
	$14 = (int_64)59
	$13 = [160]
	$18 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$15 > (uint_64)(int_64)10) ){ goto $label$12 }
	$19 = *($13)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$19 = ($19 + [165])
	goto $label$10 
	
.LABEL $label$12
	$16 = (int_64)0
	if ( ((int_64)$15 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $19) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$8
	$13 = ($13 + [1])
	$14 = ((int_64)$14 + (int_64)-5)
	$18 = ((int_64)$16 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)1)
	if ( ((int_64)$15 != (int_64)13) ){ goto $label$7 }
	if ( ((int_64)$17 != (int_64)$18) ){ goto $label$14 }
	if ( ((int_64)*($3 + [8]) == (int_64)1397703940) ){ goto $label$13 }
	
.LABEL $label$14
	CALL prints([176])
	CALL prints([224])
	CALL prints([256])
	CALL eosio_assert([0], [224])
	
.LABEL $label$13
	if ( ((int_64)*($3) > (int_64)999) ){ goto $label$15 }
	CALL prints([176])
	CALL prints([304])
	CALL prints([256])
	CALL eosio_assert([0], [304])
	
.LABEL $label$15
	$15 = (int_64)0
	$16 = (int_64)59
	$13 = [352]
	$18 = (int_64)0
	
.LOOP $label$16:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$17 }
	$19 = *($13)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$19 = ($19 + [165])
	goto $label$18 
	
.LABEL $label$19
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$17
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$14 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$16 }
	$15 = (int_64)0
	$16 = (int_64)59
	$13 = [352]
	$17 = (int_64)0
	
.LOOP $label$20:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$21 }
	$19 = *($13)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$19 = ($19 + [165])
	goto $label$22 
	
.LABEL $label$23
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$21
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$17 = ((int_64)$14 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$20 }
	*(($20 = CALL $348([40])) + [8]) = $17
	*($20) = $18
	*($20 + [16]) = (int_64)-1
	$15 = (int_64)0
	*($20 + [24 align=4]) = (int_64)0
	*($20 + [32]) = [0]
	$16 = (int_64)59
	$13 = [352]
	$18 = (int_64)0
	
.LOOP $label$24:
	$14 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$25 }
	$19 = *($13)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$19 = ($19 + [165])
	goto $label$26 
	
.LABEL $label$27
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$25
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$18 = ((int_64)$14 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$24 }
	*(($21 + [300])) = (int_64)0
	*($21 + [264]) = (int_64)0
	*($21 + [256]) = (int_64)0
	*($21 + [272]) = (int_64)0
	*($21 + [280]) = (int_64)0
	*($21 + [288]) = (int_64)0
	*($21 + [296]) = [0]
	$10 = ($21 + [296])
	$13 = CALL strlen([128])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$32 }
	*(($21 + [296])) = ($13 << [1])
	$19 = ($10 + [1])
	if ( $13 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$11 = (($13 + [16]) & [-16])
	$19 = CALL $348($11)
	*(($21 + [296])) = ($11 | [1])
	*(($21 + [304])) = $19
	*(($21 + [300])) = $13
	
.LABEL $label$31
	CALL memcpy($19, [128], $13)
	
.LABEL $label$30
	*(($19 + $13)) = [0]
	CALL $7(($21 + [312]), $20, $18)
	if ( (*($21 + [316]) == 0) ){ goto $label$34 }
	CALL $7(($21 + [128]), $20, $18)
	$13 = *($21 + [132])
	if ( $13 ){ goto $label$35 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$35
	CALL memcpy(($21 + [312]), $13, [40])
	CALL $378((($21 + [312]) + [40]), ($13 + [40]))
	if ( ((*((($21 + [256]) + [40])) & [1]) == 0) ){ goto $label$33 }
	CALL $349(*(($21 + [304])))
	goto $label$33 
	
.LABEL $label$34
	CALL memcpy(($21 + [312]), ($21 + [256]), [40])
	*((($21 + [312]) + [48])) = *(($10 + [8]))
	$15 = *($10)
	*(($21 + [300])) = [0]
	*($21 + [352]) = $15
	*((($21 + [256]) + [40])) = [0]
	*((($21 + [256]) + [48])) = [0]
	
.LABEL $label$33
	if ( ((int_64)*($21 + [312]) == (int_64)2) ){ goto $label$36 }
	CALL prints([176])
	CALL prints([400])
	CALL prints([256])
	CALL eosio_assert(((int_64)*($21 + [312]) == (int_64)2), [400])
	
.LABEL $label$36
	*($21 + [240]) = (int_64)0
	*($21 + [248]) = [0]
	$19 = CALL $362($4, [44], [0])
	if ( ((int_32)$19 == (int_32)[-1]) ){ goto $label$38 }
	$20 = (($21 + [240]) + [8])
	$13 = [0]
	
.LOOP $label$39:
	CALL $379(($21 + [128]), $4, $13, ($19 - $13), $4)
	$13 = *($21 + [244])
	if ( ((uint_32)$13 >= (uint_32)*($20)) ){ goto $label$41 }
	*($13) = *($21 + [128])
	$13 = (($21 + [128]) + [8])
	*(($13 + [8])) = *($13)
	*($13) = [0]
	*($21 + [128]) = [0]
	*($21 + [132]) = [0]
	*($21 + [244]) = (*($21 + [244]) + [12])
	goto $label$40 
	
.LABEL $label$41
	CALL $8(($21 + [240]), ($21 + [128]))
	if ( ((*($21 + [128]) & [1]) == 0) ){ goto $label$40 }
	CALL $349(*((($21 + [128]) + [8])))
	
.LABEL $label$40
	$13 = ($19 + [1])
	$19 = CALL $362($4, [44], $13)
	if ( ((int_32)$19 != (int_32)[-1]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	$13 = [0]
	
.LABEL $label$37
	CALL $379(($21 + [128]), $4, $13, [-1], $4)
	$13 = *($21 + [244])
	if ( ((uint_32)$13 >= (uint_32)*((($21 + [240]) + [8]))) ){ goto $label$43 }
	*($13) = *($21 + [128])
	$13 = (($21 + [128]) + [8])
	*(($13 + [8])) = *($13)
	*($13) = [0]
	*($21 + [128]) = [0]
	*($21 + [132]) = [0]
	*($21 + [244]) = (*($21 + [244]) + [12])
	goto $label$42 
	
.LABEL $label$43
	CALL $8(($21 + [240]), ($21 + [128]))
	if ( ((*($21 + [128]) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*($21 + [136]))
	
.LABEL $label$42
	CALL prints([432])
	$13 = *($21 + [240])
	if ( ((int_32)*($21 + [244]) == (int_32)$13) ){ goto $label$44 }
	$15 = (int_64)0
	$20 = [0]
	$19 = [4]
	
.LOOP $label$45:
	CALL prints([480])
	CALL printi($15)
	CALL prints([496])
	$10 = *(($13 + [-4]))
	$11 = ($10 & [1])
	$13 = ($13 + $19)
	CALL prints_l(( *(($13 + [4])) ? ($13 + [-3]) : $11 ), ( *($13) ? uint_32($10 >> [1]) : $11 ))
	CALL prints([512])
	$19 = ($19 + [12])
	$15 = ((int_64)$15 + (int_64)1)
	$13 = *($21 + [240])
	$20 = ($20 + [1])
	if ( ($20 <= ((int_32)(*($21 + [244]) - $13) / (int_32)[12])) ){ goto $label$45 }
	
.LABEL $label$44
	CALL prints([80])
	*(($21 + [232])) = [0]
	*($21 + [224]) = (int_64)0
	$13 = CALL strlen([128])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$48 }
	*($21 + [224]) = ($13 << [1])
	$19 = (($21 + [224]) | [1])
	if ( $13 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$20 = (($13 + [16]) & [-16])
	$19 = CALL $348($20)
	*($21 + [224]) = ($20 | [1])
	*($21 + [232]) = $19
	*($21 + [228]) = $13
	
.LABEL $label$47
	CALL memcpy($19, [128], $13)
	
.LABEL $label$46
	*(($19 + $13)) = [0]
	if ( ((int_32)*($21 + [244]) == (int_32)*($21 + [240])) ){ goto $label$50 }
	$5 = (($21 + [208]) | [1])
	$12 = (($21 + [208]) + [8])
	$20 = [0]
	$19 = [0]
	
.LOOP $label$51:
	if ( ((int_32)$19 <= (int_32)[0]) ){ goto $label$53 }
	CALL $357(($21 + [224]), [44])
	CALL $378(($21 + [208]), ($21 + [224]))
	if ( ((*($21 + [208]) & [1]) == 0) ){ goto $label$52 }
	CALL $349(*($12))
	goto $label$52 
	
.LABEL $label$53
	*($12) = [0]
	*($21 + [208]) = (int_64)0
	$13 = CALL strlen([0])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$56 }
	*($21 + [208]) = ($13 << [1])
	$10 = $5
	if ( $13 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$11 = (($13 + [16]) & [-16])
	$10 = CALL $348($11)
	*($12) = $10
	*($21 + [208]) = ($11 | [1])
	*($21 + [212]) = $13
	
.LABEL $label$55
	CALL memcpy($10, [0], $13)
	
.LABEL $label$54
	*(($10 + $13)) = [0]
	if ( ((*($21 + [208]) & [1]) == 0) ){ goto $label$52 }
	CALL $349(*($12))
	
.LABEL $label$52
	$10 = *($13)
	$11 = ($10 & [1])
	$13 = (*($21 + [240]) + $20)
	CALL $355(($21 + [224]), ( *(($13 + [8])) ? ($13 + [1]) : $11 ), ( *(($13 + [4])) ? uint_32($10 >> [1]) : $11 ))
	$20 = ($20 + [12])
	$19 = ($19 + [1])
	if ( ($19 <= ((int_32)(*($21 + [244]) - *($21 + [240])) / (int_32)[12])) ){ goto $label$51 }
	
.LABEL $label$50
	*($21 + [128]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [128])))
	CALL prints([32])
	CALL prints($13)
	$20 = (($21 + [224]) | [1])
	CALL prints(( *($21 + [232]) ? $20 : (*($21 + [224]) & [1]) ))
	CALL prints([80])
	*($21 + [128]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [128])))
	CALL prints([32])
	CALL prints($13)
	if ( (*($4) & [1]) ){ goto $label$58 }
	$13 = ($4 + [1])
	goto $label$57 
	
.LABEL $label$58
	$13 = *($4 + [8])
	
.LABEL $label$57
	CALL prints($13)
	CALL prints([80])
	$13 = ($13 & [1])
	$13 = *($4)
	$11 = ($4 + [4])
	$19 = ($13 & [1])
	$13 = *($21 + [224])
	$12 = uint_32($13 >> [1])
	$10 = ( *($21 + [228]) ? $12 : $19 )
	if ( ((int_32)$10 != (int_32)( *($11) ? uint_32($13 >> [1]) : $13 )) ){ goto $label$60 }
	$13 = ( *($4 + [8]) ? ($4 + [1]) : $13 )
	if ( $19 ){ goto $label$61 }
	if ( ($10 == 0) ){ goto $label$59 }
	$10 = ([0] - $12)
	$19 = $20
	
.LOOP $label$62:
	if ( ((int_32)*($19) != (int_32)*($13)) ){ goto $label$60 }
	$13 = ($13 + [1])
	$19 = ($19 + [1])
	$10 = ($10 + [1])
	if ( $10 ){ goto $label$62 }
	goto $label$59 
	
.LABEL $label$61
	if ( ($10 == 0) ){ goto $label$59 }
	if ( (CALL memcmp(( *(($21 + [232])) ? $20 : $19 ), $13, $10) == 0) ){ goto $label$59 }
	
.LABEL $label$60
	CALL prints([176])
	CALL prints([528])
	CALL prints([256])
	$19 = [0]
	$13 = ($13 & [1])
	$13 = *($4)
	$10 = ($13 & [1])
	$13 = *($21 + [224])
	$5 = uint_32($13 >> [1])
	$12 = ( *($21 + [228]) ? $5 : $10 )
	if ( ((int_32)$12 != (int_32)( *($11) ? uint_32($13 >> [1]) : $13 )) ){ goto $label$63 }
	$19 = [1]
	$13 = ( *($4 + [8]) ? ($4 + [1]) : $13 )
	if ( $10 ){ goto $label$65 }
	if ( ($12 == 0) ){ goto $label$63 }
	$4 = ([0] - $5)
	
.LOOP $label$66:
	if ( ((int_32)*($20) != (int_32)*($13)) ){ goto $label$64 }
	$19 = [1]
	$13 = ($13 + [1])
	$20 = ($20 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$66 }
	goto $label$63 
	
.LABEL $label$65
	if ( ($12 == 0) ){ goto $label$63 }
	$19 = (CALL memcmp(( *(($21 + [232])) ? $20 : $10 ), $13, $12) == 0)
	goto $label$63 
	
.LABEL $label$64
	$19 = [0]
	
.LABEL $label$63
	CALL eosio_assert($19, [528])
	
.LABEL $label$59
	$10 = *($21 + [240])
	$19 = *($21 + [244])
	if ( ((int_32)$19 == (int_32)$10) ){ goto $label$1 }
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [560]
	$15 = (int_64)0
	
.LOOP $label$67:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$68 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$70 }
	$4 = ($4 + [165])
	goto $label$69 
	
.LABEL $label$70
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$69
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$68
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$15 = ((int_64)$18 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$67 }
	if ( (((int_32)($19 - $10) / (int_32)[12]) <= [2]) ){ goto $label$71 }
	CALL $378(($21 + [192]), ($10 + [12]))
	$11 = (*($21 + [192]) & [1])
	$12 = *($21 + [200])
	$13 = ( $12 ? (($21 + [192]) | [1]) : $11 )
	$4 = [-1]
	
.LOOP $label$72:
	$19 = ($13 + $4)
	$20 = ($4 + [1])
	$4 = $20
	if ( *(($19 + [1])) ){ goto $label$72 }
	$17 = (CASTING uint_64)(uint_32 $20)
	$16 = (int_64)0
	$14 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$73:
	$18 = (int_64)0
	if ( ((uint_64)$16 >= (uint_64)$17) ){ goto $label$74 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$4 = ($4 + [165])
	goto $label$75 
	
.LABEL $label$76
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$78 }
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	goto $label$77 
	
.LABEL $label$78
	$18 = ((int_64)$18 & (int_64)15)
	
.LABEL $label$77
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$15 = ((int_64)$18 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$73 }
	if ( ($11 == 0) ){ goto $label$71 }
	CALL $349($12)
	
.LABEL $label$71
	if ( CALL is_account($15) ){ goto $label$79 }
	*($21 + [128]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [128])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([576])
	CALL prints([80])
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [560]
	$15 = (int_64)0
	
.LOOP $label$80:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$81 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$4 = ($4 + [165])
	goto $label$82 
	
.LABEL $label$83
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$81
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$15 = ((int_64)$18 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$80 }
	
.LABEL $label$79
	if ( ((int_64)$15 != (int_64)$1) ){ goto $label$84 }
	CALL prints([176])
	CALL prints([592])
	CALL prints([256])
	CALL eosio_assert([0], [592])
	
.LABEL $label$84
	$5 = ($0 + [16])
	$14 = *($0 + [16])
	if ( ((int_64)$15 != (int_64)$14) ){ goto $label$86 }
	CALL prints([176])
	CALL prints([624])
	CALL prints([256])
	$0 = ($0 + [16])
	CALL eosio_assert(((int_64)$15 != (int_64)*($0)), [624])
	$14 = *($0)
	goto $label$85 
	
.LABEL $label$86
	$0 = $5
	
.LABEL $label$85
	*(($4 = CALL $348([40])) + [8]) = $14
	*($4) = $14
	*($4 + [16]) = (int_64)-1
	*($4 + [32]) = [0]
	$16 = (int_64)0
	*(($6 = ($4 + [24]))) = (int_64)0
	$13 = CALL db_lowerbound_i64($14, $14, (int_64)5093418686402150400, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$87 }
	$13 = CALL $9($4, $13)
	CALL eosio_assert([1], [656])
	$13 = CALL db_next_i64(*($13 + [40]), ($21 + [128]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$88 }
	$16 = (int_64)1
	
.LOOP $label$89:
	$13 = CALL $9($4, $13)
	CALL eosio_assert([1], [656])
	$16 = ((int_64)$16 + (int_64)1)
	$13 = CALL db_next_i64(*($13 + [40]), ($21 + [128]))
	if ( ((int_32)$13 >= (int_32)[0]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$88
	$16 = (int_64)1
	
.LABEL $label$87
	*($21 + [128]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [128])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([688])
	$16 = ((int_64)$16 + (int_64)1)
	CALL printui($16)
	CALL prints([80])
	*($21 + [160]) = $1
	*($21 + [152]) = $16
	*($21 + [168]) = *($3)
	CALL $378((($21 + [152]) + [24]), $10)
	$16 = *($21 + [152])
	$12 = *($6)
	$20 = *(($4 + [28]))
	if ( ((int_32)$20 == (int_32)$12) ){ goto $label$90 }
	$13 = ($20 + [-24])
	$11 = ([0] - $12)
	
.LOOP $label$91:
	if ( ((int_64)*(*($13)) == (int_64)$16) ){ goto $label$90 }
	$20 = $13
	$19 = ($13 + [-24])
	$13 = $19
	if ( ((int_32)($19 + $11) != (int_32)[-24]) ){ goto $label$91 }
	
.LABEL $label$90
	if ( ((int_32)$20 == (int_32)$12) ){ goto $label$94 }
	$13 = *(($20 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [36]) == (int_32)$4), [704])
	if ( $13 ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	$13 = CALL db_find_i64(*($4), *(($4 + [8])), (int_64)5093418686402150400, $16)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$92 }
	$13 = CALL $9($4, $13)
	CALL eosio_assert(((int_32)*($13 + [36]) == (int_32)$4), [704])
	
.LABEL $label$93
	*($21 + [128]) = ($21 + [152])
	CALL eosio_assert([1], [832])
	CALL $11($4, $13, ($21 + [128]))
	goto $label$2 
	
.LABEL $label$92
	*($21 + [40]) = ($21 + [152])
	*($21 + [64]) = $14
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$13()), [768])
	*($21 + [128]) = $4
	*($21 + [132]) = ($21 + [40])
	*($21 + [136]) = ($21 + [64])
	*(($20 = CALL $348([48])) + [32]) = [0]
	*($20 + [24 align=4]) = (int_64)0
	*($20 + [36]) = $4
	CALL $10(($21 + [128]), $20)
	$11 = *($20 + [40])
	$16 = *($20)
	$7 = *(($4 + [32]))
	$19 = ($4 + [28])
	$13 = *($19)
	if ( ((uint_32)$13 >= (uint_32)$7) ){ goto $label$95 }
	*($13 + [8]) = $16
	*($13) = $20
	*($13 + [16]) = $11
	*($19) = ($13 + [24])
	goto $label$2 
	
.LABEL $label$95
	$12 = *($6)
	$19 = ((int_32)($13 - $12) / (int_32)[24])
	$8 = ($19 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$4 }
	$6 = [178956970]
	$7 = ((int_32)($7 - $12) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$97 }
	$6 = ($7 << [1])
	$6 = ( $8 ? $6 : ($6 <= $8) )
	if ( ($6 == 0) ){ goto $label$96 }
	
.LABEL $label$97
	$7 = CALL $348(((int_32)$6 * (int_32)[24]))
	$13 = *(($4 + [28]))
	$12 = *(($4 + [24]))
	goto $label$3 
	
.LABEL $label$96
	$6 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$49
	CALL $350(($21 + [208]))
	
.LABEL $label$29
	CALL $350($10)
	
.LABEL $label$28
	CALL $350(($21 + [224]))
	
.LABEL $label$5
	*($21 + [312]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($21 + [128]) = CALL asctime(CALL $432(($21 + [312])))
	CALL $4([32], ($21 + [128]))
	CALL $6([144], $3)
	CALL prints([80])
	CALL _ZN10msContract13commitAndExitEy($21, (int_64)1)
	
.LABEL $label$4
	CALL $371($6)
	
.LABEL $label$3
	*(($19 = ($7 + ((int_32)$19 * (int_32)[24]))) + [8]) = $16
	*($19) = $20
	*($19 + [16]) = $11
	$6 = ($7 + ((int_32)$6 * (int_32)[24]))
	$7 = ($19 + [24])
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$99 }
	
.LOOP $label$100:
	$20 = ($13 + [-24])
	$11 = *($20)
	*($20) = [0]
	*(($19 + [-24])) = $11
	*(($19 + [-8])) = *(($13 + [-8]))
	*(($19 + [-12])) = *(($13 + [-12]))
	*(($19 + [-16])) = *(($13 + [-16]))
	$19 = ($19 + [-24])
	$13 = $20
	if ( ((int_32)$12 != (int_32)$20) ){ goto $label$100 }
	$13 = *(($4 + [28]))
	$20 = *(($4 + [24]))
	goto $label$98 
	
.LABEL $label$99
	$20 = $13
	
.LABEL $label$98
	*(($4 + [28])) = $7
	*(($4 + [24])) = $19
	*(($4 + [32])) = $6
	if ( ((int_32)$13 == (int_32)$20) ){ goto $label$101 }
	
.LOOP $label$102:
	$13 = ($13 + [-24])
	$4 = *($13)
	*($13) = [0]
	if ( ($4 == 0) ){ goto $label$103 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$104 }
	CALL $349(*(($4 + [32])))
	
.LABEL $label$104
	CALL $349($4)
	
.LABEL $label$103
	if ( ((int_32)$20 != (int_32)$13) ){ goto $label$102 }
	
.LABEL $label$101
	if ( ($20 == 0) ){ goto $label$2 }
	CALL $349($20)
	
.LABEL $label$2
	if ( ((*(($21 + [176])) & [1]) == 0) ){ goto $label$105 }
	CALL $349(*(($21 + [184])))
	
.LABEL $label$105
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [880]
	$17 = (int_64)0
	
.LOOP $label$106:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$107 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$4 = ($4 + [165])
	goto $label$108 
	
.LABEL $label$109
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$107
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$106 }
	*($21 + [128]) = (int_64)0
	*($21 + [136]) = (int_64)1398362884
	$14 = *($3)
	CALL eosio_assert([1], [1920])
	$16 = (uint_64)*($21 + [136]) >> (uint_64)(int_64)8)
	$14 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $14)) * (float_64)(float_64)50.625))
	$13 = [0]
	
.LOOP $label$112:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$111 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$113 }
	
.LOOP $label$114:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$111 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$114 }
	
.LABEL $label$113
	$4 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$112 }
	goto $label$110 
	
.LABEL $label$111
	$4 = [0]
	
.LABEL $label$110
	CALL eosio_assert($4, [896])
	*(($13 = (($21 + [128]) + [8]))) = (int_64)362174039556
	*($21 + [128]) = $14
	*($21 + [144]) = $17
	*($21 + [64]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = CALL asctime(CALL $432(($21 + [64])))
	CALL prints([32])
	CALL prints($4)
	CALL prints([928])
	CALL $12(($21 + [128]))
	CALL prints([944])
	CALL printn(*($21 + [144]))
	CALL prints([80])
	*((($21 + [104]) + [8])) = *($13)
	*(($21 + [120])) = *($21 + [144])
	*((($21 + [88]) + [8])) = [0]
	*($21 + [104]) = *($21 + [128])
	*($21 + [88]) = (int_64)0
	$13 = CALL strlen([960])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$115 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$118 }
	*($21 + [88]) = ($13 << [1])
	$4 = (($21 + [88]) | [1])
	if ( $13 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$19 = (($13 + [16]) & [-16])
	$4 = CALL $348($19)
	*($21 + [88]) = ($19 | [1])
	*($21 + [96]) = $4
	*($21 + [92]) = $13
	
.LABEL $label$117
	CALL memcpy($4, [960], $13)
	
.LABEL $label$116
	*(($4 + $13)) = [0]
	*((($21 + [8]) + [16])) = *((($21 + [104]) + [16]))
	*((($21 + [8]) + [8])) = *((($21 + [104]) + [8]))
	*($21 + [8]) = *($21 + [104])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($5, $1, ($21 + [8]), ($21 + [88]))
	if ( ((*($21 + [88]) & [1]) == 0) ){ goto $label$119 }
	CALL $349(*($21 + [96]))
	
.LABEL $label$119
	$13 = *($10)
	$4 = CALL strlen([976])
	if ( ((int_32)$4 != (int_32)( *($10 + [4]) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$250 }
	if ( (CALL $363($10, [0], [-1], [976], $4) == 0) ){ goto $label$249 }
	
.LABEL $label$250
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1104])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$251 }
	if ( (CALL $363($10, [0], [-1], [1104], $19) == 0) ){ goto $label$248 }
	
.LABEL $label$251
	$13 = *($10)
	$19 = CALL strlen([1136])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$252 }
	if ( (CALL $363($10, [0], [-1], [1136], $19) == 0) ){ goto $label$247 }
	
.LABEL $label$252
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1168])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$253 }
	if ( (CALL $363($10, [0], [-1], [1168], $19) == 0) ){ goto $label$246 }
	
.LABEL $label$253
	$13 = *($10)
	$19 = CALL strlen([1200])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$254 }
	if ( (CALL $363($10, [0], [-1], [1200], $19) == 0) ){ goto $label$245 }
	
.LABEL $label$254
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1232])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$255 }
	if ( (CALL $363($10, [0], [-1], [1232], $19) == 0) ){ goto $label$240 }
	
.LABEL $label$255
	$13 = *($10)
	$19 = CALL strlen([1264])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$256 }
	if ( (CALL $363($10, [0], [-1], [1264], $19) == 0) ){ goto $label$235 }
	
.LABEL $label$256
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1296])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$257 }
	if ( (CALL $363($10, [0], [-1], [1296], $19) == 0) ){ goto $label$230 }
	
.LABEL $label$257
	$13 = *($10)
	$19 = CALL strlen([1328])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$258 }
	if ( (CALL $363($10, [0], [-1], [1328], $19) == 0) ){ goto $label$225 }
	
.LABEL $label$258
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1360])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$259 }
	if ( (CALL $363($10, [0], [-1], [1360], $19) == 0) ){ goto $label$220 }
	
.LABEL $label$259
	$13 = *($10)
	$19 = CALL strlen([1392])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$260 }
	if ( (CALL $363($10, [0], [-1], [1392], $19) == 0) ){ goto $label$215 }
	
.LABEL $label$260
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1424])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$261 }
	if ( (CALL $363($10, [0], [-1], [1424], $19) == 0) ){ goto $label$210 }
	
.LABEL $label$261
	$13 = *($10)
	$19 = CALL strlen([1456])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$262 }
	if ( (CALL $363($10, [0], [-1], [1456], $19) == 0) ){ goto $label$205 }
	
.LABEL $label$262
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1488])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$263 }
	if ( (CALL $363($10, [0], [-1], [1488], $19) == 0) ){ goto $label$200 }
	
.LABEL $label$263
	$13 = *($10)
	$19 = CALL strlen([1520])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$264 }
	if ( (CALL $363($10, [0], [-1], [1520], $19) == 0) ){ goto $label$195 }
	
.LABEL $label$264
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1552])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$265 }
	if ( (CALL $363($10, [0], [-1], [1552], $19) == 0) ){ goto $label$190 }
	
.LABEL $label$265
	$13 = *($10)
	$19 = CALL strlen([1584])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$266 }
	if ( (CALL $363($10, [0], [-1], [1584], $19) == 0) ){ goto $label$185 }
	
.LABEL $label$266
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1616])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$267 }
	if ( (CALL $363($10, [0], [-1], [1616], $19) == 0) ){ goto $label$180 }
	
.LABEL $label$267
	$13 = *($10)
	$19 = CALL strlen([1648])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$268 }
	if ( (CALL $363($10, [0], [-1], [1648], $19) == 0) ){ goto $label$175 }
	
.LABEL $label$268
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1680])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$269 }
	if ( (CALL $363($10, [0], [-1], [1680], $19) == 0) ){ goto $label$170 }
	
.LABEL $label$269
	$13 = *($10)
	$19 = CALL strlen([1712])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$270 }
	if ( (CALL $363($10, [0], [-1], [1712], $19) == 0) ){ goto $label$165 }
	
.LABEL $label$270
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1744])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$271 }
	if ( (CALL $363($10, [0], [-1], [1744], $19) == 0) ){ goto $label$160 }
	
.LABEL $label$271
	$13 = *($10)
	$19 = CALL strlen([1776])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$272 }
	if ( (CALL $363($10, [0], [-1], [1776], $19) == 0) ){ goto $label$155 }
	
.LABEL $label$272
	$13 = *($10)
	$4 = ($10 + [4])
	$19 = CALL strlen([1808])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$273 }
	if ( (CALL $363($10, [0], [-1], [1808], $19) == 0) ){ goto $label$150 }
	
.LABEL $label$273
	$13 = *($10)
	$19 = CALL strlen([1840])
	if ( ((int_32)$19 != (int_32)( *($4) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$274 }
	if ( (CALL $363($10, [0], [-1], [1840], $19) == 0) ){ goto $label$145 }
	
.LABEL $label$274
	$13 = *($10)
	$4 = CALL strlen([1872])
	if ( ((int_32)$4 != (int_32)( *(($10 + [4])) ? uint_32($13 >> [1]) : ($13 & [1]) )) ){ goto $label$275 }
	if ( (CALL $363($10, [0], [-1], [1872], $4) == 0) ){ goto $label$140 }
	
.LABEL $label$275
	CALL prints([176])
	CALL prints([1904])
	CALL prints([256])
	CALL eosio_assert([0], [1904])
	goto $label$1 
	
.LABEL $label$249
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [992]
	$17 = (int_64)0
	
.LOOP $label$276:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$277 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$279 }
	$4 = ($4 + [165])
	goto $label$278 
	
.LABEL $label$279
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$278
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$277
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$276 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [992]
	$17 = (int_64)0
	
.LOOP $label$280:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$281 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$283 }
	$4 = ($4 + [165])
	goto $label$282 
	
.LABEL $label$283
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$282
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$281
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$280 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$284 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$285:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$284 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$285 }
	
.LABEL $label$284
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$244 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$248
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1120]
	$17 = (int_64)0
	
.LOOP $label$286:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$287 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$289 }
	$4 = ($4 + [165])
	goto $label$288 
	
.LABEL $label$289
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$288
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$287
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$286 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1120]
	$17 = (int_64)0
	
.LOOP $label$290:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$291 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$293 }
	$4 = ($4 + [165])
	goto $label$292 
	
.LABEL $label$293
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$292
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$291
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$290 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$294 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$295:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$294 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$295 }
	
.LABEL $label$294
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$239 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$238 }
	goto $label$237 
	
.LABEL $label$247
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1152]
	$17 = (int_64)0
	
.LOOP $label$296:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$297 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$299 }
	$4 = ($4 + [165])
	goto $label$298 
	
.LABEL $label$299
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$298
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$297
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$296 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1152]
	$17 = (int_64)0
	
.LOOP $label$300:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$301 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$303 }
	$4 = ($4 + [165])
	goto $label$302 
	
.LABEL $label$303
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$302
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$301
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$300 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$304 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$305:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$304 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$305 }
	
.LABEL $label$304
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$234 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$233 }
	goto $label$232 
	
.LABEL $label$246
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1184]
	$17 = (int_64)0
	
.LOOP $label$306:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$307 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$309 }
	$4 = ($4 + [165])
	goto $label$308 
	
.LABEL $label$309
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$308
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$307
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$306 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1184]
	$17 = (int_64)0
	
.LOOP $label$310:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$311 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$313 }
	$4 = ($4 + [165])
	goto $label$312 
	
.LABEL $label$313
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$312
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$311
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$310 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$314 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$315:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$314 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$315 }
	
.LABEL $label$314
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$229 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$228 }
	goto $label$227 
	
.LABEL $label$245
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1216]
	$17 = (int_64)0
	
.LOOP $label$316:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$317 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$319 }
	$4 = ($4 + [165])
	goto $label$318 
	
.LABEL $label$319
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$318
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$317
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$316 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1216]
	$17 = (int_64)0
	
.LOOP $label$320:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$321 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$323 }
	$4 = ($4 + [165])
	goto $label$322 
	
.LABEL $label$323
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$322
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$321
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$320 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$324 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$325:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$324 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$325 }
	
.LABEL $label$324
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$224 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$223 }
	goto $label$222 
	
.LABEL $label$244
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494368, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$242 }
	CALL eosio_assert(((int_32)*(CALL $14($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$243
	CALL $16(($21 + [40]), ($21 + [64]), $1)
	CALL $15(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $16(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$241 
	
.LABEL $label$242
	CALL $15(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$241
	CALL $16(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $16(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$240
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1248]
	$17 = (int_64)0
	
.LOOP $label$326:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$327 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$329 }
	$4 = ($4 + [165])
	goto $label$328 
	
.LABEL $label$329
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$328
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$327
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$326 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1248]
	$17 = (int_64)0
	
.LOOP $label$330:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$331 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$333 }
	$4 = ($4 + [165])
	goto $label$332 
	
.LABEL $label$333
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$332
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$331
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$330 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$334 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$335:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$334 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$335 }
	
.LABEL $label$334
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$219 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$218 }
	goto $label$217 
	
.LABEL $label$239
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494448, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$237 }
	CALL eosio_assert(((int_32)*(CALL $17($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$238
	CALL $19(($21 + [40]), ($21 + [64]), $1)
	CALL $18(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $19(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$236 
	
.LABEL $label$237
	CALL $18(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$236
	CALL $19(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $19(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$235
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1280]
	$17 = (int_64)0
	
.LOOP $label$336:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$337 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$339 }
	$4 = ($4 + [165])
	goto $label$338 
	
.LABEL $label$339
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$338
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$337
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$336 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1280]
	$17 = (int_64)0
	
.LOOP $label$340:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$341 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$343 }
	$4 = ($4 + [165])
	goto $label$342 
	
.LABEL $label$343
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$342
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$341
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$340 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$344 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$345:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$344 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$345 }
	
.LABEL $label$344
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$214 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$213 }
	goto $label$212 
	
.LABEL $label$234
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494432, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$232 }
	CALL eosio_assert(((int_32)*(CALL $20($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$233
	CALL $22(($21 + [40]), ($21 + [64]), $1)
	CALL $21(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $22(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$231 
	
.LABEL $label$232
	CALL $21(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$231
	CALL $22(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $22(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$230
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1312]
	$17 = (int_64)0
	
.LOOP $label$346:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$347 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$349 }
	$4 = ($4 + [165])
	goto $label$348 
	
.LABEL $label$349
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$348
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$347
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$346 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1312]
	$17 = (int_64)0
	
.LOOP $label$350:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$351 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$353 }
	$4 = ($4 + [165])
	goto $label$352 
	
.LABEL $label$353
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$352
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$351
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$350 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$354 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$355:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$354 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$355 }
	
.LABEL $label$354
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$209 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$208 }
	goto $label$207 
	
.LABEL $label$229
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494416, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$227 }
	CALL eosio_assert(((int_32)*(CALL $23($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$228
	CALL $25(($21 + [40]), ($21 + [64]), $1)
	CALL $24(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $25(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$226 
	
.LABEL $label$227
	CALL $24(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$226
	CALL $25(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $25(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$225
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1344]
	$17 = (int_64)0
	
.LOOP $label$356:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$357 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$359 }
	$4 = ($4 + [165])
	goto $label$358 
	
.LABEL $label$359
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$358
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$357
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$356 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1344]
	$17 = (int_64)0
	
.LOOP $label$360:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$361 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$363 }
	$4 = ($4 + [165])
	goto $label$362 
	
.LABEL $label$363
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$362
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$361
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$360 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$364 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$365:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$364 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$365 }
	
.LABEL $label$364
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$204 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$203 }
	goto $label$202 
	
.LABEL $label$224
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494400, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$222 }
	CALL eosio_assert(((int_32)*(CALL $26($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$223
	CALL $28(($21 + [40]), ($21 + [64]), $1)
	CALL $27(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $28(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$221 
	
.LABEL $label$222
	CALL $27(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$221
	CALL $28(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $28(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$220
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1376]
	$17 = (int_64)0
	
.LOOP $label$366:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$367 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$369 }
	$4 = ($4 + [165])
	goto $label$368 
	
.LABEL $label$369
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$368
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$367
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$366 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1376]
	$17 = (int_64)0
	
.LOOP $label$370:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$371 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$373 }
	$4 = ($4 + [165])
	goto $label$372 
	
.LABEL $label$373
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$372
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$371
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$370 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$374 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$375:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$374 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$375 }
	
.LABEL $label$374
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$199 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$219
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274494384, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$217 }
	CALL eosio_assert(((int_32)*(CALL $29($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$218
	CALL $31(($21 + [40]), ($21 + [64]), $1)
	CALL $30(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $31(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$216 
	
.LABEL $label$217
	CALL $30(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$216
	CALL $31(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $31(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$215
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1408]
	$17 = (int_64)0
	
.LOOP $label$376:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$377 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$379 }
	$4 = ($4 + [165])
	goto $label$378 
	
.LABEL $label$379
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$378
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$377
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$376 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1408]
	$17 = (int_64)0
	
.LOOP $label$380:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$381 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$383 }
	$4 = ($4 + [165])
	goto $label$382 
	
.LABEL $label$383
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$382
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$381
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$380 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$384 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$385:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$384 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$385 }
	
.LABEL $label$384
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$194 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$214
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493936, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$212 }
	CALL eosio_assert(((int_32)*(CALL $32($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$213
	CALL $34(($21 + [40]), ($21 + [64]), $1)
	CALL $33(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $34(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$211 
	
.LABEL $label$212
	CALL $33(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$211
	CALL $34(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $34(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$210
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1440]
	$17 = (int_64)0
	
.LOOP $label$386:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$387 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$389 }
	$4 = ($4 + [165])
	goto $label$388 
	
.LABEL $label$389
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$388
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$387
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$386 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1440]
	$17 = (int_64)0
	
.LOOP $label$390:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$391 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$393 }
	$4 = ($4 + [165])
	goto $label$392 
	
.LABEL $label$393
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$392
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$391
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$390 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$394 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$395:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$394 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$395 }
	
.LABEL $label$394
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$189 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$188 }
	goto $label$187 
	
.LABEL $label$209
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493920, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$207 }
	CALL eosio_assert(((int_32)*(CALL $35($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$208
	CALL $37(($21 + [40]), ($21 + [64]), $1)
	CALL $36(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $37(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$206 
	
.LABEL $label$207
	CALL $36(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$206
	CALL $37(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $37(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$205
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1472]
	$17 = (int_64)0
	
.LOOP $label$396:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$397 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$399 }
	$4 = ($4 + [165])
	goto $label$398 
	
.LABEL $label$399
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$398
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$397
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$396 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1472]
	$17 = (int_64)0
	
.LOOP $label$400:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$401 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$403 }
	$4 = ($4 + [165])
	goto $label$402 
	
.LABEL $label$403
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$402
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$401
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$400 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$404 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$405:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$404 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$405 }
	
.LABEL $label$404
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$184 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$183 }
	goto $label$182 
	
.LABEL $label$204
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493904, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$202 }
	CALL eosio_assert(((int_32)*(CALL $38($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$203
	CALL $40(($21 + [40]), ($21 + [64]), $1)
	CALL $39(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $40(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$201 
	
.LABEL $label$202
	CALL $39(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$201
	CALL $40(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $40(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$200
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1504]
	$17 = (int_64)0
	
.LOOP $label$406:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$407 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$409 }
	$4 = ($4 + [165])
	goto $label$408 
	
.LABEL $label$409
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$408
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$407
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$406 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1504]
	$17 = (int_64)0
	
.LOOP $label$410:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$411 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$413 }
	$4 = ($4 + [165])
	goto $label$412 
	
.LABEL $label$413
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$412
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$411
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$410 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$414 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$415:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$414 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$415 }
	
.LABEL $label$414
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$179 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$178 }
	goto $label$177 
	
.LABEL $label$199
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493888, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$197 }
	CALL eosio_assert(((int_32)*(CALL $41($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$198
	CALL $43(($21 + [40]), ($21 + [64]), $1)
	CALL $42(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $43(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$196 
	
.LABEL $label$197
	CALL $42(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$196
	CALL $43(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $43(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$195
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1536]
	$17 = (int_64)0
	
.LOOP $label$416:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$417 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$419 }
	$4 = ($4 + [165])
	goto $label$418 
	
.LABEL $label$419
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$418
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$417
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$416 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1536]
	$17 = (int_64)0
	
.LOOP $label$420:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$421 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$423 }
	$4 = ($4 + [165])
	goto $label$422 
	
.LABEL $label$423
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$422
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$421
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$420 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$424 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$425:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$424 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$425 }
	
.LABEL $label$424
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$174 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$194
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493872, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$192 }
	CALL eosio_assert(((int_32)*(CALL $44($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$193
	CALL $46(($21 + [40]), ($21 + [64]), $1)
	CALL $45(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $46(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$191 
	
.LABEL $label$192
	CALL $45(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$191
	CALL $46(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $46(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$190
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1568]
	$17 = (int_64)0
	
.LOOP $label$426:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$427 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$429 }
	$4 = ($4 + [165])
	goto $label$428 
	
.LABEL $label$429
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$428
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$427
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$426 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1568]
	$17 = (int_64)0
	
.LOOP $label$430:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$431 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$433 }
	$4 = ($4 + [165])
	goto $label$432 
	
.LABEL $label$433
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$432
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$431
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$430 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$434 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$435:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$434 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$435 }
	
.LABEL $label$434
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$169 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$189
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493424, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$187 }
	CALL eosio_assert(((int_32)*(CALL $47($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$188
	CALL $49(($21 + [40]), ($21 + [64]), $1)
	CALL $48(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $49(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$186 
	
.LABEL $label$187
	CALL $48(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$186
	CALL $49(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $49(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$185
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1600]
	$17 = (int_64)0
	
.LOOP $label$436:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$437 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$439 }
	$4 = ($4 + [165])
	goto $label$438 
	
.LABEL $label$439
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$438
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$437
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$436 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1600]
	$17 = (int_64)0
	
.LOOP $label$440:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$441 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$443 }
	$4 = ($4 + [165])
	goto $label$442 
	
.LABEL $label$443
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$442
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$441
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$440 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$444 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$445:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$444 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$445 }
	
.LABEL $label$444
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$164 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$184
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493408, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$182 }
	CALL eosio_assert(((int_32)*(CALL $50($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$183
	CALL $52(($21 + [40]), ($21 + [64]), $1)
	CALL $51(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $52(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$181 
	
.LABEL $label$182
	CALL $51(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$181
	CALL $52(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $52(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$180
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1632]
	$17 = (int_64)0
	
.LOOP $label$446:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$447 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$449 }
	$4 = ($4 + [165])
	goto $label$448 
	
.LABEL $label$449
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$448
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$447
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$446 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1632]
	$17 = (int_64)0
	
.LOOP $label$450:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$451 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$453 }
	$4 = ($4 + [165])
	goto $label$452 
	
.LABEL $label$453
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$452
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$451
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$450 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$454 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$455:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$454 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$455 }
	
.LABEL $label$454
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$159 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$179
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493392, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$177 }
	CALL eosio_assert(((int_32)*(CALL $53($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$178
	CALL $55(($21 + [40]), ($21 + [64]), $1)
	CALL $54(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $55(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$176 
	
.LABEL $label$177
	CALL $54(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$176
	CALL $55(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $55(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$175
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1664]
	$17 = (int_64)0
	
.LOOP $label$456:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$457 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$459 }
	$4 = ($4 + [165])
	goto $label$458 
	
.LABEL $label$459
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$458
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$457
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$456 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1664]
	$17 = (int_64)0
	
.LOOP $label$460:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$461 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$463 }
	$4 = ($4 + [165])
	goto $label$462 
	
.LABEL $label$463
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$462
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$461
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$460 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$464 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$465:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$464 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$465 }
	
.LABEL $label$464
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$154 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$153 }
	goto $label$152 
	
.LABEL $label$174
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493376, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$172 }
	CALL eosio_assert(((int_32)*(CALL $56($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$173
	CALL $58(($21 + [40]), ($21 + [64]), $1)
	CALL $57(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $58(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$171 
	
.LABEL $label$172
	CALL $57(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$171
	CALL $58(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $58(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$170
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1696]
	$17 = (int_64)0
	
.LOOP $label$466:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$467 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$469 }
	$4 = ($4 + [165])
	goto $label$468 
	
.LABEL $label$469
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$468
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$467
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$466 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1696]
	$17 = (int_64)0
	
.LOOP $label$470:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$471 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$473 }
	$4 = ($4 + [165])
	goto $label$472 
	
.LABEL $label$473
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$472
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$471
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$470 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$474 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$475:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$474 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$475 }
	
.LABEL $label$474
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$149 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$169
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274493360, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$167 }
	CALL eosio_assert(((int_32)*(CALL $59($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$168
	CALL $61(($21 + [40]), ($21 + [64]), $1)
	CALL $60(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $61(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$166 
	
.LABEL $label$167
	CALL $60(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$166
	CALL $61(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $61(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$165
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1728]
	$17 = (int_64)0
	
.LOOP $label$476:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$477 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$479 }
	$4 = ($4 + [165])
	goto $label$478 
	
.LABEL $label$479
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$478
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$477
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$476 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1728]
	$17 = (int_64)0
	
.LOOP $label$480:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$481 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$483 }
	$4 = ($4 + [165])
	goto $label$482 
	
.LABEL $label$483
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$482
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$481
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$480 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$484 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$485:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$484 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$485 }
	
.LABEL $label$484
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$144 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$164
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492912, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$162 }
	CALL eosio_assert(((int_32)*(CALL $62($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$163
	CALL $64(($21 + [40]), ($21 + [64]), $1)
	CALL $63(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $64(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$161 
	
.LABEL $label$162
	CALL $63(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$161
	CALL $64(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $64(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$160
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1760]
	$17 = (int_64)0
	
.LOOP $label$486:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$487 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$489 }
	$4 = ($4 + [165])
	goto $label$488 
	
.LABEL $label$489
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$488
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$487
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$486 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1760]
	$17 = (int_64)0
	
.LOOP $label$490:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$491 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$493 }
	$4 = ($4 + [165])
	goto $label$492 
	
.LABEL $label$493
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$492
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$491
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$490 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$494 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$495:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$494 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$495 }
	
.LABEL $label$494
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$139 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$159
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492896, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$157 }
	CALL eosio_assert(((int_32)*(CALL $65($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$158
	CALL $67(($21 + [40]), ($21 + [64]), $1)
	CALL $66(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $67(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$156 
	
.LABEL $label$157
	CALL $66(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$156
	CALL $67(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $67(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$155
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1792]
	$17 = (int_64)0
	
.LOOP $label$496:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$497 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$499 }
	$4 = ($4 + [165])
	goto $label$498 
	
.LABEL $label$499
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$498
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$497
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$496 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1792]
	$17 = (int_64)0
	
.LOOP $label$500:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$501 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$503 }
	$4 = ($4 + [165])
	goto $label$502 
	
.LABEL $label$503
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$502
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$501
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$500 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$504 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$505:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$504 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$505 }
	
.LABEL $label$504
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$135 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$154
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492880, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$152 }
	CALL eosio_assert(((int_32)*(CALL $68($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$153
	CALL $70(($21 + [40]), ($21 + [64]), $1)
	CALL $69(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $70(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$151 
	
.LABEL $label$152
	CALL $69(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$151
	CALL $70(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $70(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$150
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1824]
	$17 = (int_64)0
	
.LOOP $label$506:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$507 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$509 }
	$4 = ($4 + [165])
	goto $label$508 
	
.LABEL $label$509
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$508
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$507
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$506 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1824]
	$17 = (int_64)0
	
.LOOP $label$510:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$511 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$513 }
	$4 = ($4 + [165])
	goto $label$512 
	
.LABEL $label$513
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$512
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$511
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$510 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$514 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$515:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$514 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$515 }
	
.LABEL $label$514
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$131 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$149
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492864, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$147 }
	CALL eosio_assert(((int_32)*(CALL $71($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$148
	CALL $73(($21 + [40]), ($21 + [64]), $1)
	CALL $72(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $73(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$146 
	
.LABEL $label$147
	CALL $72(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$146
	CALL $73(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $73(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$145
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1856]
	$17 = (int_64)0
	
.LOOP $label$516:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$517 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$519 }
	$4 = ($4 + [165])
	goto $label$518 
	
.LABEL $label$519
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$518
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$517
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$516 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1856]
	$17 = (int_64)0
	
.LOOP $label$520:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$521 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$523 }
	$4 = ($4 + [165])
	goto $label$522 
	
.LABEL $label$523
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$522
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$521
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$520 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$524 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$525:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$524 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$525 }
	
.LABEL $label$524
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$127 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$144
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492848, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$142 }
	CALL eosio_assert(((int_32)*(CALL $74($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$143
	CALL $76(($21 + [40]), ($21 + [64]), $1)
	CALL $75(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $76(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$141 
	
.LABEL $label$142
	CALL $75(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$141
	CALL $76(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $76(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$140
	$9 = *($0)
	$16 = (int_64)0
	$14 = (int_64)59
	$13 = [1888]
	$17 = (int_64)0
	
.LOOP $label$526:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$527 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$529 }
	$4 = ($4 + [165])
	goto $label$528 
	
.LABEL $label$529
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$528
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$527
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$526 }
	*($21 + [72]) = $17
	*($21 + [64]) = $9
	*(($10 = CALL $348([40])) + [8]) = $17
	*($10) = $9
	*($10 + [16]) = (int_64)-1
	$16 = (int_64)0
	*($10 + [24 align=4]) = (int_64)0
	*($10 + [32]) = [0]
	*($21 + [80]) = $10
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	$14 = (int_64)59
	$13 = [1888]
	$17 = (int_64)0
	
.LOOP $label$530:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$531 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$533 }
	$4 = ($4 + [165])
	goto $label$532 
	
.LABEL $label$533
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$532
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$531
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$530 }
	CALL prints([1008])
	CALL printui($17)
	CALL prints([80])
	$11 = *(($10 + [24]))
	$19 = *(($10 + [28]))
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$534 }
	$13 = ($19 + [-24])
	$20 = ([0] - $11)
	
.LOOP $label$535:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$534 }
	$19 = $13
	$4 = ($13 + [-24])
	$13 = $4
	if ( ((int_32)($4 + $20) != (int_32)[-24]) ){ goto $label$535 }
	
.LABEL $label$534
	if ( ((int_32)$19 == (int_32)$11) ){ goto $label$123 }
	$13 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [24]) == (int_32)$10), [704])
	if ( $13 ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$139
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492400, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$137 }
	CALL eosio_assert(((int_32)*(CALL $77($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$138
	CALL $79(($21 + [40]), ($21 + [64]), $1)
	CALL $78(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $79(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$136 
	
.LABEL $label$137
	CALL $78(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$136
	CALL $79(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $79(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$135
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492384, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$133 }
	CALL eosio_assert(((int_32)*(CALL $80($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$134
	CALL $82(($21 + [40]), ($21 + [64]), $1)
	CALL $81(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $82(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$132 
	
.LABEL $label$133
	CALL $81(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$132
	CALL $82(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $82(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$131
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492368, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$129 }
	CALL eosio_assert(((int_32)*(CALL $83($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$130
	CALL $85(($21 + [40]), ($21 + [64]), $1)
	CALL $84(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $85(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$128 
	
.LABEL $label$129
	CALL $84(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$128
	CALL $85(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $85(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$127
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492352, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$125 }
	CALL eosio_assert(((int_32)*(CALL $86($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$126
	CALL $88(($21 + [40]), ($21 + [64]), $1)
	CALL $87(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $88(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$124 
	
.LABEL $label$125
	CALL $87(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$124
	CALL $88(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $88(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$123
	$13 = CALL db_find_i64(*($10), *($10 + [8]), (int_64)-3922893633274492336, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$121 }
	CALL eosio_assert(((int_32)*(CALL $89($10, $13) + [24]) == (int_32)$10), [704])
	
.LABEL $label$122
	CALL $91(($21 + [40]), ($21 + [64]), $1)
	CALL $90(($21 + [64]), $1, ((int_64)*($3) + (int_64)*($21 + [48])), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1040])
	CALL printi(*($3))
	CALL prints([80])
	*($21 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [32])))
	CALL prints([32])
	CALL prints($13)
	CALL $91(($21 + [40]), ($21 + [64]), $1)
	CALL prints([1056])
	CALL printi(*($21 + [48]))
	CALL prints([80])
	goto $label$120 
	
.LABEL $label$121
	CALL $90(($21 + [64]), $1, *($3), $15)
	*($21 + [40]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$13 = CALL asctime(CALL $432(($21 + [40])))
	CALL prints([32])
	CALL prints($13)
	CALL prints([1024])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$120
	CALL $91(($21 + [40]), ($21 + [64]), $1)
	if ( ((int_64)*($21 + [48]) < (int_64)1000001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1072])
	CALL prints([256])
	CALL $91(($21 + [40]), ($21 + [64]), $1)
	CALL eosio_assert(((int_64)*($21 + [48]) < (int_64)1000001), [1072])
	goto $label$1 
	
.LABEL $label$115
	CALL $350(($21 + [88]))
	
.LABEL $label$1
	if ( ((*($21 + [224]) & [1]) == 0) ){ goto $label$536 }
	CALL $349(*(($21 + [232])))
	
.LABEL $label$536
	$19 = *($21 + [240])
	if ( ($19 == 0) ){ goto $label$537 }
	$13 = *($21 + [244])
	if ( ((int_32)$13 == (int_32)$19) ){ goto $label$539 }
	$4 = ([0] - $19)
	$13 = ($13 + [-12])
	
.LOOP $label$540:
	if ( ((*($13) & [1]) == 0) ){ goto $label$541 }
	CALL $349(*(($13 + [8])))
	
.LABEL $label$541
	$13 = ($13 + [-12])
	if ( ((int_32)($13 + $4) != (int_32)[-12]) ){ goto $label$540 }
	$13 = *($21 + [240])
	goto $label$538 
	
.LABEL $label$539
	$13 = $19
	
.LABEL $label$538
	*($21 + [244]) = $19
	CALL $349($13)
	
.LABEL $label$537
	if ( ((*($21 + [352]) & [1]) == 0) ){ goto $label$542 }
	CALL $349(*(($21 + [360])))
	
.LABEL $label$542
	*([0] + [4]) = ($21 + [368])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7eosdice16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 _ZN7eosdice16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	CALL _ZN10msContract13commitAndExitEy($5, (int_64)1)
	(unreachable)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $15 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494368, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $14($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494368, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $16 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494368, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $14($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [16])
	$9 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$6 = *(*($0 + [4]))
	*($1) = *($6)
	*(($1 + [16])) = *(($6 + [16]))
	*(($1 + [8])) = *(($6 + [8]))
	$3 = ($1 + [24])
	CALL $351($3, ($6 + [24]))
	$6 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($4 + [24])
	$7 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($6)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($8 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	*($9) = $8
	$4 = ($8 + $6)
	*($9 + [8]) = $4
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [1984])
	CALL memcpy($8, $1, [8])
	$5 = ($8 + [8])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[7]), [1984])
	CALL memcpy($5, ($1 + [8]), [8])
	$5 = ($8 + [16])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[7]), [1984])
	CALL memcpy($5, ($1 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $99($9, $3)
	$7 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($2 + [8]), (int_64)5093418686402150400, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$4 }
	CALL free($8)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [16])
	$9 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$2 = *($2)
	*($1) = *($2)
	*(($1 + [16])) = *(($2 + [16]))
	*(($1 + [8])) = *(($2 + [8]))
	$4 = ($1 + [24])
	CALL $351($4, ($2 + [24]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [2112])
	$2 = *($1 + [24])
	$5 = ( *(($1 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [24])
	$7 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($8 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	*($9) = $8
	$5 = ($8 + $2)
	*($9 + [8]) = $5
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [1984])
	CALL memcpy($8, $1, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[7]), [1984])
	CALL memcpy($6, ($1 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[7]), [1984])
	CALL memcpy($6, ($1 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $99($9, $4)
	CALL db_update_i64(*($1 + [40]), (int_64)0, $8, $2)
	if ( ($2 <= [513]) ){ goto $label$4 }
	CALL free($8)
	
.LABEL $label$4
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $12 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([2384])
	CALL prints_l($2, $3)
	CALL prints([2400])
	CALL $100($1, [0])
	*([0] + [4]) = $10
}

void .FUNC _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	if ( (CALL is_account($1) == 0) ){ goto $label$1 }
	$10 = CALL current_time()
	CALL prints([2224])
	CALL prints([2240])
	CALL printui($10)
	CALL prints([2256])
	*($13 + [72]) = *($0)
	CALL $92(($13 + [88]), ($13 + [72]))
	$5 = *($13 + [96])
	$6 = *($13 + [88])
	*($13 + [104]) = $1
	CALL $92(($13 + [72]), ($13 + [104]))
	$7 = *($13 + [80])
	$8 = *($13 + [72])
	CALL prints(( $5 ? (($13 + [88]) | [1]) : ($6 & [1]) ))
	CALL prints([2272])
	CALL prints(( $7 ? (($13 + [72]) | [1]) : ($8 & [1]) ))
	CALL $12($2)
	CALL prints([944])
	CALL printn(*($2 + [16]))
	CALL prints([2288])
	if ( ((*($13 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*(($13 + [80])))
	
.LABEL $label$2
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$3 }
	CALL $349(*(($13 + [96])))
	
.LABEL $label$3
	CALL prints([80])
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$1 }
	$10 = CALL current_time()
	CALL prints([2224])
	CALL prints([2240])
	CALL printui($10)
	CALL prints([2256])
	*($13 + [72]) = *($0)
	CALL $92(($13 + [88]), ($13 + [72]))
	$5 = *($13 + [96])
	$6 = *($13 + [88])
	*($13 + [104]) = $1
	CALL $92(($13 + [72]), ($13 + [104]))
	$7 = *($13 + [80])
	$8 = *($13 + [72])
	CALL prints(( $5 ? (($13 + [88]) | [1]) : ($6 & [1]) ))
	CALL prints([2272])
	CALL prints(( $7 ? (($13 + [72]) | [1]) : ($8 & [1]) ))
	CALL $12($2)
	CALL prints([944])
	CALL printn(*(($2 + [16])))
	CALL prints([2288])
	if ( ((*($13 + [72]) & [1]) == 0) ){ goto $label$4 }
	CALL $349(*(($13 + [80])))
	
.LABEL $label$4
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$5 }
	CALL $349(*(($13 + [96])))
	
.LABEL $label$5
	CALL prints([80])
	*((($13 + [48]) + [20])) = *(($2 + [20]))
	*((($13 + [48]) + [16])) = *(($2 + [16]))
	*((($13 + [48]) + [12])) = *(($2 + [12]))
	*((($13 + [48]) + [8])) = *(($2 + [8]))
	*($13 + [52]) = *(($2 + [4]))
	*($13 + [48]) = *($2)
	$4 = *($0)
	CALL $378(($13 + [32]), $3)
	$10 = (int_64)0
	$9 = (int_64)59
	$2 = [2304]
	$11 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$11 }
	$0 = *($2)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$0 = ($0 + [165])
	goto $label$9 
	
.LABEL $label$11
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$2 = ($2 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	*((($13 + [8]) + [16])) = *((($13 + [48]) + [16]))
	*((($13 + [8]) + [8])) = *((($13 + [48]) + [8]))
	*($13 + [8]) = *($13 + [48])
	CALL $93($4, $1, ($13 + [8]), ($13 + [32]), $11)
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $349(*($13 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [112])
}

void .FUNC $39 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493904, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $38($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493904, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $18 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494448, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $17($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494448, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $19 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494448, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $17($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $339($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [14624])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $339 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [14710]) == 0) ){ goto $label$2 }
	$7 = *([0] + [14712])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [14710]) = [1]
	$7 = ($7 << [16])
	*([0] + [14712]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [14712])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [14712]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [14710]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [14710]) = [1]
	$3 = ($3 << [16])
	*([0] + [14712]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [14712])
	
.LABEL $label$8
	*([0] + [14712]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $338([6224], $0)
}

void .FUNC $334 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $335($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

void .FUNC $332 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $336($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$6 = (*([0] + [4]) - [16])
	$11 = $6
	*([0] + [4]) = $6
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$2 = CALL memcpy($1, $4, [40])
	CALL $351(($2 + [40]), ($4 + [40]))
	$1 = *($2 + [40])
	$4 = ( *(($2 + [44])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [40])
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($11 + [4]) = $5
	*($11) = $5
	*($11 + [8]) = ($5 + $1)
	CALL $335($11, $2)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$5
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$4 }
	*($2 + [56]) = CALL db_store_i64(*($3 + [8]), (int_64)7035938067002163200, *(*($0 + [8])), $9, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	if ( (uint_64)($9 <= *($3 + [16])) ){ goto $label$9 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

int_32 .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [16])
	$13 = $14
	*([0] + [4]) = $14
	$2 = ($0 + [24])
	$11 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$1 }
	$3 = ([0] - $11)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$12 = ($6 + [-24])
	$6 = $12
	if ( ((int_32)($12 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$11) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$6 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($14 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$5
	CALL db_get_i64($1, $6, $5)
	*($13 + [4]) = $6
	*($13) = $6
	$12 = ($6 + $5)
	*($13 + [8]) = $12
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($6)
	$12 = *(($13 + [8]))
	$6 = *($13 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([64])) + [48]) = [0]
	$8 = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [52]) = $0
	CALL eosio_assert(((uint_32)($12 - $6) > (uint_32)[7]), [2208])
	CALL memcpy($3, $6, [8])
	$5 = ($6 + [8])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $5, [8])
	$5 = ($6 + [16])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $5, [8])
	$5 = ($6 + [24])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $5, [8])
	$5 = ($6 + [32])
	CALL eosio_assert(((uint_32)($12 - $5) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [32]), $5, [8])
	*($13 + [4]) = ($6 + [40])
	CALL $101($13, ($3 + [40]))
	*($3 + [56]) = $1
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$8:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$12 = ($12 + [165])
	goto $label$10 
	
.LABEL $label$11
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$14 = *(($0 + [32]))
	$12 = ($0 + [28])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$12 }
	*($6 + [8]) = $9
	*($6) = $3
	*($6 + [16]) = $1
	*($12) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$12
	$11 = *($2)
	$12 = ((int_32)($6 - $11) / (int_32)[24])
	$4 = ($12 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$14 }
	$5 = [178956970]
	$14 = ((int_32)($14 - $11) / (int_32)[24])
	if ( ((uint_32)$14 > (uint_32)[89478484]) ){ goto $label$16 }
	$5 = ($14 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$14 = CALL $348(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$11 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$15
	$5 = [0]
	$14 = [0]
	goto $label$13 
	
.LABEL $label$14
	CALL $371($2)
	
.LABEL $label$13
	*(($12 = ($14 + ((int_32)$12 * (int_32)[24]))) + [8]) = $9
	*($12) = $3
	*($12 + [16]) = $1
	$14 = ($14 + ((int_32)$5 * (int_32)[24]))
	$2 = ($12 + [24])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($12 + [-24])) = $1
	*(($12 + [-8])) = *(($6 + [-8]))
	*(($12 + [-12])) = *(($6 + [-12]))
	*(($12 + [-16])) = *(($6 + [-16]))
	$12 = ($12 + [-24])
	$6 = $5
	if ( ((int_32)$11 != (int_32)$5) ){ goto $label$19 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $6
	
.LABEL $label$17
	*(($0 + [28])) = $2
	*(($0 + [24])) = $12
	*(($0 + [32])) = $14
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$12 = *($6)
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $349(*(($12 + [48])))
	
.LABEL $label$23
	CALL $349($12)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $349($5)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [16])
	(unreachable)
	return $3
}

int_32 .FUNC _ZN4jsonlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4JSONE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$2 = CALL strlen([480])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($5) = ($2 << [1])
	$4 = ($5 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $348($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($4, [480], $2)
	
.LABEL $label$2
	*(($4 + $2)) = [0]
	CALL $117(($5 + [16]), $1, [1], $5)
	$2 = *($5 + [16])
	$4 = ($2 & [1])
	CALL $118($0, ( *($5 + [24]) ? (($5 + [16]) | [1]) : $4 ), ( *($5 + [20]) ? uint_32($2 >> [1]) : $4 ))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $349(*(($5 + [24])))
	
.LABEL $label$5
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL $349(*($5 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($5 + [32])
	return $0
	
.LABEL $label$1
	CALL $350($5)
	return (unreachable)
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	*(($13 + [120])) = [0]
	*($13 + [112]) = (int_64)0
	$12 = CALL strlen([128])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$5 }
	*($13 + [112]) = ($12 << [1])
	$11 = (($13 + [112]) | [1])
	if ( $12 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $348($8)
	*($13 + [112]) = ($8 | [1])
	*($13 + [120]) = $11
	*($13 + [116]) = $12
	
.LABEL $label$4
	CALL memcpy($11, [128], $12)
	
.LABEL $label$3
	*(($11 + $12)) = [0]
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	$4 = ($3 + [1])
	$9 = ($3 + [4])
	$10 = ($3 + [8])
	$12 = $2
	
.LOOP $label$7:
	$11 = *($3)
	$8 = ($11 & [1])
	CALL $355(($13 + [112]), ( *($10) ? $4 : $8 ), ( *($9) ? uint_32($11 >> [1]) : $8 ))
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$7 }
	
.LABEL $label$6
	$12 = *($1 + [8])
	if ( ((uint_32)$12 > (uint_32)[6]) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$33
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([2448])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$19 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$32
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([128])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$25 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([2464])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$16 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$30
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$11 = CALL strlen([2544])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$22 }
	*($0) = ($11 << [1])
	$8 = ($0 + [1])
	if ( $11 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$29
	CALL $121(($13 + [80]), *($1))
	$12 = CALL $359(($13 + [80]), [0], [2512])
	$11 = ($12 + [8])
	*((($13 + [96]) + [8])) = *($11)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	$12 = CALL $356(($13 + [96]), [2512])
	*($0) = *($12)
	$11 = ($12 + [8])
	*(($0 + [8])) = *($11)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$34 }
	CALL $349(*($13 + [104]))
	
.LABEL $label$34
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$8 }
	CALL $349(*($13 + [88]))
	goto $label$8 
	
.LABEL $label$28
	CALL _ZNSt3__19to_stringEd($0, *($1))
	goto $label$8 
	
.LABEL $label$27
	CALL _ZNSt3__19to_stringEl($0, *($1))
	goto $label$8 
	
.LABEL $label$26
	*($0) = [0]
	*(($0 + [4])) = (int_64)0
	$8 = ( [2592] ? [2608] : *($1) )
	$12 = CALL strlen($8)
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$13 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$25
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $348($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$24
	CALL memcpy($11, [128], $12)
	
.LABEL $label$23
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$22
	$12 = (($11 + [16]) & [-16])
	$8 = CALL $348($12)
	*($0) = ($12 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $11
	
.LABEL $label$21
	CALL memcpy($8, [2544], $11)
	
.LABEL $label$20
	$12 = [0]
	*(($8 + $11)) = [0]
	$4 = *($11 + [16])
	$11 = *($1)
	$8 = *($11 + [4])
	$9 = ($8 + (uint_32($4 >> [6]) & [67108860]))
	if ( ((int_32)*($11 + [8]) == (int_32)$8) ){ goto $label$10 }
	$12 = ($4 + *($11 + [20]))
	$10 = (*(($8 + (uint_32($12 >> [6]) & [67108860]))) + (($12 & [255]) << [4]))
	$12 = (*($9) + (($4 & [255]) << [4]))
	goto $label$9 
	
.LABEL $label$19
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $348($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$18
	CALL memcpy($11, [2448], $12)
	
.LABEL $label$17
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$16
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $348($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$15
	CALL memcpy($11, [2464], $12)
	
.LABEL $label$14
	*(($11 + $12)) = [0]
	$1 = ($12 + [4])
	$12 = *($1)
	$11 = *($12)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$35 }
	$5 = ($2 + [1])
	$7 = (($13 + [96]) | [1])
	$6 = (($13 + [32]) | [1])
	$4 = [1]
	
.LOOP $label$36:
	$8 = $11
	$12 = ($8 + [16])
	if ( ($4 & [1]) ){ goto $label$37 }
	CALL $356($0, [2496])
	
.LABEL $label$37
	CALL $120(($13 + [48]), ($13 + [112]), [2512])
	$12 = *($12)
	$11 = ($12 & [1])
	$12 = CALL $355(($13 + [48]), ( *($8 + [24]) ? ($12 + [1]) : $11 ), ( *($8 + [20]) ? uint_32($12 >> [1]) : $11 ))
	$11 = ($12 + [8])
	*(($9 = (($13 + [64]) + [8]))) = *($11)
	*($13 + [64]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	$12 = CALL $356(($13 + [64]), [2528])
	$11 = ($12 + [8])
	*(($10 = (($13 + [80]) + [8]))) = *($11)
	*($13 + [80]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	CALL $378(($13 + [16]), $3)
	CALL $117(($13 + [32]), ($8 + [32]), $5, ($13 + [16]))
	$12 = *($13 + [32])
	$4 = ($12 & [1])
	$2 = (($13 + [32]) + [8])
	$12 = CALL $355(($13 + [80]), ( *($2) ? $6 : $4 ), ( *($13 + [36]) ? uint_32($12 >> [1]) : $4 ))
	$4 = ($12 + [8])
	*(($11 = (($13 + [96]) + [8]))) = *($4)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($4) = [0]
	$12 = *($13 + [96])
	$4 = ($12 & [1])
	CALL $355($0, ( *($11) ? $7 : $4 ), ( *($13 + [100]) ? uint_32($12 >> [1]) : $4 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$38 }
	CALL $349(*($11))
	
.LABEL $label$38
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$39 }
	CALL $349(*($2))
	
.LABEL $label$39
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$40 }
	CALL $349(*((($13 + [16]) + [8])))
	
.LABEL $label$40
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$41 }
	CALL $349(*($10))
	
.LABEL $label$41
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$42 }
	CALL $349(*($9))
	
.LABEL $label$42
	if ( ((*($13 + [48]) & [1]) == 0) ){ goto $label$43 }
	CALL $349(*((($13 + [48]) + [8])))
	
.LABEL $label$43
	$12 = *($8 + [4])
	if ( ($12 == 0) ){ goto $label$45 }
	
.LOOP $label$46:
	$11 = $12
	$12 = *($11)
	if ( $12 ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$11 = *($8 + [8])
	if ( ((int_32)*($11) == (int_32)$8) ){ goto $label$44 }
	$8 = ($8 + [8])
	
.LOOP $label$47:
	$12 = *($8)
	$8 = ($12 + [8])
	$11 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($11)) ){ goto $label$47 }
	
.LABEL $label$44
	$4 = [0]
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$36 }
	
.LABEL $label$35
	CALL $364(($13 + [80]), [512], CALL $361(($13 + [112]), [0], [2]))
	$12 = CALL $356(($13 + [80]), [2480])
	$8 = ($12 + [8])
	*(($11 = (($13 + [96]) + [8]))) = *($8)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($8) = [0]
	$12 = *($13 + [96])
	$8 = ($12 & [1])
	CALL $355($0, ( *($11) ? (($13 + [96]) | [1]) : $8 ), ( *($13 + [100]) ? uint_32($12 >> [1]) : $8 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$48 }
	CALL $349(*($11))
	
.LABEL $label$48
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$8 }
	CALL $349(*($13 + [88]))
	goto $label$8 
	
.LABEL $label$13
	$3 = (($12 + [16]) & [-16])
	$11 = CALL $348($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$12
	CALL memcpy($11, $8, $12)
	
.LABEL $label$11
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	$2 = ($2 + [1])
	$1 = (($13 + [96]) | [1])
	$4 = (($13 + [96]) + [8])
	$11 = [1]
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$49 }
	
.LOOP $label$50:
	if ( ($11 & [1]) ){ goto $label$51 }
	CALL $356($0, [2576])
	
.LABEL $label$51
	CALL $378($13, $3)
	CALL $117(($13 + [96]), $12, $2, $13)
	$11 = *($13 + [96])
	$8 = ($11 & [1])
	CALL $355($0, ( *($4) ? $1 : $8 ), ( *($13 + [100]) ? uint_32($11 >> [1]) : $8 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$52 }
	CALL $349(*($4))
	
.LABEL $label$52
	if ( ((*($13) & [1]) == 0) ){ goto $label$53 }
	CALL $349(*(($13 + [8])))
	
.LABEL $label$53
	$11 = [0]
	$12 = ($12 + [16])
	if ( ((int_32)($12 - *($9)) != (int_32)[4096]) ){ goto $label$54 }
	$12 = *($9 + [4])
	$11 = [0]
	$9 = ($9 + [4])
	
.LABEL $label$54
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$50 }
	
.LABEL $label$49
	CALL $356($0, [2560])
	
.LABEL $label$8
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$55 }
	CALL $349(*($13 + [120]))
	
.LABEL $label$55
	*([0] + [4]) = ($13 + [128])
	return (unreachable)
	
.LABEL $label$2
	CALL $350(($13 + [112]))
	
.LABEL $label$1
	CALL $350($0)
	$12
	(unreachable)
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $114($0, *($1))
	CALL $114($0, *($1 + [4]))
	CALL $112(($1 + [32]))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $349(*(($1 + [24])))
	
.LABEL $label$2
	CALL $349($1)
	
.LABEL $label$1
}

void .FUNC _ZN4json6ObjectEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = [0]
	*($2) = [0]
	CALL $111($2)
	*(($1 = CALL $348([12])) + [8]) = [0]
	*($1 + [4]) = [0]
	*($1) = ($1 + [4])
	*($0 + [8]) = [1]
	*($2) = $1
	*($0) = *($2)
	*($2) = [0]
	*($2 + [8]) = [0]
	CALL $112($2)
	*([0] + [4]) = ($2 + [16])
}

int_32 .FUNC $112 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0 + [8])
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$2 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$1 }
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $113($1)
	$2 = *($1 + [8])
	$4 = *($1 + [4])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $349(*($4))
	$4 = ($4 + [4])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$5 }
	$3 = *(($1 + [4]))
	$2 = ($1 + [8])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	*($2) = ($4 + (((int_32)(($4 + [-4]) - $3) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$4
	$4 = *($1)
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $349($4)
	
.LABEL $label$6
	CALL $349($1)
	return $0
	
.LABEL $label$3
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	CALL $114($4, *($4 + [4]))
	CALL $349($4)
	return $0
	
.LABEL $label$2
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $349(*($4 + [8]))
	
.LABEL $label$7
	CALL $349($4)
	
.LABEL $label$1
	return $0
}

void .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [16])
	$4 = *($0 + [4])
	$3 = ($4 + (uint_32($1 >> [6]) & [67108860]))
	if ( ((int_32)*($0 + [8]) == (int_32)$4) ){ goto $label$2 }
	$2 = ($1 + *($0 + [20]))
	$2 = (*(($4 + (uint_32($2 >> [6]) & [67108860]))) + (($2 & [255]) << [4]))
	$4 = (*($3) + (($1 & [255]) << [4]))
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	$2 = [0]
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = (CALL $112($4) + [16])
	if ( ((int_32)($4 - *($3)) != (int_32)[4096]) ){ goto $label$5 }
	$4 = *($3 + [4])
	$3 = ($3 + [4])
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$4 }
	
.LABEL $label$3
	*(($0 + [20])) = [0]
	$3 = ($0 + [4])
	$4 = *($3)
	$1 = ($0 + [8])
	$2 = int_32((*($1) - $4) >> [2])
	if ( ($2 <= [3]) ){ goto $label$6 }
	
.LOOP $label$7:
	CALL $349(*($4))
	$4 = (*($3) + [4])
	*($3) = $4
	$2 = int_32((*($1) - $4) >> [2])
	if ( ((uint_32)$2 > (uint_32)[2]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$8 }
	$4 = [128]
	goto $label$9 
	
.LABEL $label$10
	$4 = [256]
	
.LABEL $label$9
	*(($0 + [16])) = $4
	
.LABEL $label$8
}

void .FUNC _ZN4json5ArrayEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = [0]
	*($2) = [0]
	CALL $111($2)
	*(($1 = CALL $348([24]))) = (int_64)0
	*($1 + [8 align=4]) = (int_64)0
	*($1 + [16 align=4]) = (int_64)0
	*($2) = $1
	*($0) = *($2)
	*($0 + [8]) = [2]
	*($2) = [0]
	*($2 + [8]) = [0]
	CALL $112($2)
	*([0] + [4]) = ($2 + [16])
}

void .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$3 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$1 }
	$0 = *($0)
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $114($0, *($0 + [4]))
	CALL $349($0)
	return 
	
.LABEL $label$3
	$0 = *($0)
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((*($0) & [1]) == 0) ){ goto $label$4 }
	CALL $349(*($0 + [8]))
	
.LABEL $label$4
	CALL $349($0)
	return 
	
.LABEL $label$2
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $113($1)
	$2 = *($1 + [8])
	$0 = *($1 + [4])
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $349(*($0))
	$0 = ($0 + [4])
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$3 = *(($1 + [4]))
	$2 = ($1 + [8])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	*($2) = ($0 + (((int_32)(($0 + [-4]) - $3) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$5
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $349($0)
	
.LABEL $label$7
	CALL $349($1)
	return 
	
.LABEL $label$1
}

int_32 .FUNC $118 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL $372($7, $0)
	if ( (*($7) == 0) ){ goto $label$1 }
	$2 = ($0 + *((*($0) + [-12])))
	$4 = ($1 + $2)
	$5 = ( $4 ? $1 : ((int_32)(*($2 + [4]) & [176]) == (int_32)[32]) )
	$3 = *($2 + [24])
	$6 = *($2 + [76])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$2 }
	CALL _ZNKSt3__18ios_base6getlocEv(($7 + [8]), $2)
	$6 = CALL _ZNKSt3__16locale9use_facetERNS0_2idE(($7 + [8]), [14716])
	$6 = CALL int_32 $6((int_32 [32]), (int_32 *(*($6) + [28])))
	CALL _ZNSt3__16localeD2Ev(($7 + [8]))
	*(($2 + [76])) = $6
	
.LABEL $label$2
	if ( CALL $119($3, $1, $5, $4, $2, int_32(($6 << [24]) >> [24])) ){ goto $label$1 }
	$2 = ($0 + *((*($0) + [-12])))
	CALL _ZNSt3__18ios_base5clearEj($2, (*($2 + [16]) | [5]))
	
.LABEL $label$1
	CALL $376($7)
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $119 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	if ( ($0 == 0) ){ goto $label$5 }
	$7 = *($4 + [12])
	$8 = [0]
	$6 = ($2 - $1)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	if ( ((int_32)CALL int_32 $0((int_32 $1), (int_32 $6), (int_32 *(*($0) + [48]))) != (int_32)$6) ){ goto $label$1 }
	
.LABEL $label$6
	$8 = ($3 - $1)
	$1 = ( ($7 - $8) ? [0] : ((int_32)$7 > (int_32)$8) )
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	*(($9 + [8])) = [0]
	*($9) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($9) = ($1 << [1])
	$6 = ($9 | [1])
	$7 = $6
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$1 
	
.LABEL $label$4
	$8 = (($1 + [16]) & [-16])
	$7 = CALL $348($8)
	*($9) = ($8 | [1])
	*($9 + [8]) = $7
	*($9 + [4]) = $1
	$6 = ($9 | [1])
	
.LABEL $label$3
	CALL memset($7, ($5 & [255]), $1)
	$8 = [0]
	*(($7 + $1)) = [0]
	$5 = ($9 + [8])
	$7 = CALL int_32 $0((int_32 ( *($5) ? $6 : (*($9) & [1]) )), (int_32 $1), (int_32 *(*($0) + [48])))
	if ( ((*($9) & [1]) == 0) ){ goto $label$7 }
	CALL $349(*($5))
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($3 - $2)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$8 }
	$8 = [0]
	if ( ((int_32)CALL int_32 $0((int_32 $2), (int_32 $1), (int_32 *(*($0) + [48]))) != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$8
	*(($4 + [12])) = [0]
	$8 = $0
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [16])
	return $8
}

int_32 .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	CALL $99($0, ($1 + [40]))
}

void .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $296 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $292 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1984])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [32])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1984])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	CALL $99($0, ($1 + [36]))
	CALL $99($0, ($1 + [48]))
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $202($1, $5)
	CALL eosio_assert(((int_32)*($5 + [52]) == (int_32)$1), [704])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $349 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $348 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [14728])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__111__call_onceERVmPvPFvS2_E (int_32 $0, int_32 $1, int_32 $2)
{
	if ( *($0) ){ goto $label$1 }
	*($0) = [1]
	CALL void $1((int_32 $2))
	*($0) = [-1]
	
.LABEL $label$1
}

void .FUNC $346 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [8]))
	$0 = *(*($0))
	$1 = (*($0) + int_32($2 >> [1]))
	$0 = *($0 + [4])
	if ( (($2 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL void $1((int_32 $0))
}

void .FUNC _ZNSt3__16locale2id6__initEv (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [14724]) + [1])
	*($0 + [4]) = $1
	*([0] + [14724]) = $1
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$4 = *($2)
	$1 = CALL memcpy($1, $4, [40])
	CALL $351(($1 + [40]), ($4 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [2112])
	$4 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($3 + [40])
	$6 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$9:
	$4 = ($4 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$9 }
	if ( ($4 <= [513]) ){ goto $label$11 }
	$3 = CALL malloc($4)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($11 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$10
	*($10 + [4]) = $3
	*($10) = $3
	*($10 + [8]) = ($3 + $4)
	CALL $213($10, $1)
	CALL db_update_i64(*($1 + [56]), (int_64)0, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$12 }
	CALL free($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZNSt3__16localeC2ERKS0_ (int_32 $0, int_32 $1)
{
	$1 = *($1)
	*($0) = $1
	*($1 + [4]) = (*($1 + [4]) + [1])
	return $0
}

void .FUNC _ZNKSt3__18ios_base6getlocEv (int_32 $0, int_32 $1)
{
	CALL _ZNSt3__16localeC2ERKS0_($0, ($1 + [28]))
}

void .FUNC _ZNSt3__18ios_base5clearEj (int_32 $0, int_32 $1)
{
	*($0 + [16]) = ((*($0 + [24]) == 0) | $1)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [14608])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [14416]
	$1 = (((int_32)$2 * (int_32)[12]) + [14416])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $283 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $292($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $36 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274493920, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $35($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274493920, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493920, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $35($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

void .FUNC $34 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274493936, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $32($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [2176])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $348([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [2208])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [2208])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [2208])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $371($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $349($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC $280 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [2000])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [2048])
	$3 = *($1)
	$5 = *($2)
	$2 = CALL memcpy($1, $5, [33])
	CALL $351(($2 + [36]), ($5 + [36]))
	CALL $351(($2 + [48]), ($5 + [48]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [2112])
	$1 = *($2 + [36])
	$5 = ( *(($2 + [40])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($5 + [33])
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	$5 = *(($2 + [48]))
	$5 = ( *(($2 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$1 = ($5 + $1)
	$4 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$2 }
	if ( ($1 <= [513]) ){ goto $label$4 }
	$5 = CALL malloc($1)
	goto $label$3 
	
.LABEL $label$4
	$5 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$3
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $1)
	CALL $293($6, $2)
	CALL db_update_i64(*($2 + [64]), (int_64)0, $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $30 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$4 = *(($6 + [24]))
	$6 = *($0 + [16])
	$9 = *(($6 + [28]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$11 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$1 }
	$9 = $11
	$12 = ($11 + [-24])
	$11 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$7 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	if ( $11 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)-3922893633274494384, $1)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $29($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [704])
	$6 = *(($0 + [16]))
	
.LABEL $label$6
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [2000])
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [2048])
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	$2 = *($11)
	*($11) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [2112])
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $11, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($11 + [16]), [8])
	CALL db_update_i64(*($11 + [28]), (int_64)0, $13, [24])
	if ( (uint_64)($2 <= *($6 + [16])) ){ goto $label$3 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	$6 = *(($0 + [16]))
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert(((int_64)*($6) == (int_64)CALL $fimport$13()), [768])
	*(($9 = CALL $348([40])) + [24]) = $6
	*($9 + [8]) = $2
	*($9) = $1
	*($9 + [16]) = $3
	CALL eosio_assert([1], [1984])
	CALL memcpy($13, $9, [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [1984])
	CALL memcpy(($13 + [16]), ($9 + [16]), [8])
	$1 = *($9)
	$5 = CALL db_store_i64(*($6 + [8]), (int_64)-3922893633274494384, $10, $1, $13, [24])
	*($9 + [28]) = $5
	if ( (uint_64)($1 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$1 = *($9)
	$7 = *(($6 + [32]))
	$12 = ($6 + [28])
	$11 = *($12)
	if ( ((uint_32)$11 >= (uint_32)$7) ){ goto $label$9 }
	*($11 + [8]) = $1
	*($11) = $9
	*($11 + [16]) = $5
	*($12) = ($11 + [24])
	goto $label$3 
	
.LABEL $label$9
	$4 = ($6 + [24])
	$0 = *($4)
	$12 = ((int_32)($11 - $0) / (int_32)[24])
	$8 = ($12 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$11 }
	$4 = [178956970]
	$7 = ((int_32)($7 - $0) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$13 }
	$4 = ($7 << [1])
	$4 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = CALL $348(((int_32)$4 * (int_32)[24]))
	$11 = *(($6 + [28]))
	$0 = *(($6 + [24]))
	goto $label$10 
	
.LABEL $label$12
	$4 = [0]
	$7 = [0]
	goto $label$10 
	
.LABEL $label$11
	CALL $371($4)
	
.LABEL $label$10
	*(($12 = ($7 + ((int_32)$12 * (int_32)[24]))) + [8]) = $1
	*($12) = $9
	*($12 + [16]) = $5
	$4 = ($7 + ((int_32)$4 * (int_32)[24]))
	$7 = ($12 + [24])
	if ( ((int_32)$11 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($11 + [-24])
	$5 = *($9)
	*($9) = [0]
	*(($12 + [-24])) = $5
	*(($12 + [-8])) = *(($11 + [-8]))
	*(($12 + [-12])) = *(($11 + [-12]))
	*(($12 + [-16])) = *(($11 + [-16]))
	$12 = ($12 + [-24])
	$11 = $9
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$11 = *(($6 + [28]))
	$9 = *(($6 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $11
	
.LABEL $label$14
	*(($6 + [28])) = $7
	*(($6 + [24])) = $12
	*(($6 + [32])) = $4
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = ($11 + [-24])
	$12 = *($11)
	*($11) = [0]
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $349($12)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $349($9)
	
.LABEL $label$3
	*([0] + [4]) = ($13 + [32])
	(unreachable)
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)-3922893633274494384, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $29($3, $1)
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$3), [704])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC $281 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2176])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $6)
	*($10 + [4]) = $7
	*($10) = $7
	$9 = ($7 + $6)
	*($10 + [8]) = $9
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($7)
	$9 = *(($10 + [8]))
	$7 = *($10 + [4])
	
.LABEL $label$7
	*(($3 = CALL $348([72])) + [36 align=4]) = (int_64)0
	*($3 + [44 align=4]) = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	*($3 + [60]) = $0
	CALL eosio_assert(((uint_32)($9 - $7) > (uint_32)[7]), [2208])
	CALL memcpy($3, $7, [8])
	$6 = ($7 + [8])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [8]), $6, [8])
	$6 = ($7 + [16])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [16]), $6, [8])
	$6 = ($7 + [24])
	CALL eosio_assert(((uint_32)($9 - $6) > (uint_32)[7]), [2208])
	CALL memcpy(($3 + [24]), $6, [8])
	$6 = ($7 + [32])
	CALL eosio_assert(((int_32)$9 != (int_32)$6), [2208])
	CALL memcpy(($10 + [15]), $6, [1])
	*($3 + [32]) = ((int_32)*($10 + [15]) != (int_32)[0])
	*($10 + [4]) = ($7 + [33])
	CALL $101($10, ($3 + [36]))
	CALL $101($10, ($3 + [48]))
	*($3 + [64]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$8 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$8
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$10 }
	$6 = [178956970]
	$11 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$11 > (uint_32)[89478484]) ){ goto $label$12 }
	$6 = ($11 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = CALL $348(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	$11 = [0]
	goto $label$9 
	
.LABEL $label$10
	CALL $371($2)
	
.LABEL $label$9
	*(($9 = ($11 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$11 = ($11 + ((int_32)$6 * (int_32)[24]))
	$2 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$6 = $7
	
.LABEL $label$13
	*(($0 + [28])) = $2
	*(($0 + [24])) = $9
	*(($0 + [32])) = $11
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$19 }
	CALL $349(*(($9 + [56])))
	
.LABEL $label$19
	if ( ((*($9 + [36]) & [1]) == 0) ){ goto $label$20 }
	CALL $349(*(($9 + [44])))
	
.LABEL $label$20
	CALL $349($9)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $349($6)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [16])
	(unreachable)
	return $3
}