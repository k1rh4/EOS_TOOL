(data (i32.const 8237) "failed to allocate pages\00game does not exist.\00")
(data (i32.const 8283) "cannot play against yourself.\00")
(data (i32.const 8313) "game must be public or the challenged player must exist\00")
(data (i32.const 8369) "game does not exist\00")
(data (i32.const 8389) "not authorized to join game.\00")
(data (i32.const 8418) "game has already started.\00")
(data (i32.const 8444) "game must have started and not finished.\00")
(data (i32.const 8485) "game board is full.\00")
(data (i32.const 8505) "it is not your turn.\00")
(data (i32.const 8526) "column is full.\00")
(data (i32.const 8542) "only 7 discs have been dropped, win is not possible.\00")
(data (i32.const 8595) "Cancelled Connect 4 Game! Play now at connectfours.io\00")
(data (i32.const 8649) "game has not started yet.\00")
(data (i32.const 8675) "game has already finished.\00")
(data (i32.const 8702) "game has not timed out.\00")
(data (i32.const 8726) "Won Connect 4 Game by timeout! Play now at connectfours.io\00")
(data (i32.const 8785) "not a player to the game.\00")
(data (i32.const 8811) "Other player forfeit Connect 4 Game! Play now at connectfours.io\00")
(data (i32.const 8876) "account does not exist.\00")
(data (i32.const 8900) "overdrawn balance\00")
(data (i32.const 8918) "EOS\00")
(data (i32.const 8922) "must deposit EOS.\00")
(data (i32.const 8940) "must buy in with a minimum of 0.5 EOS to cover RAM.\00")
(data (i32.const 8992) "multiplication overflow\00")
(data (i32.const 9016) "multiplication underflow\00")
(data (i32.const 9041) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9090) "invalid symbol name\00")
(data (i32.const 9110) "string is too long to be a valid symbol_code\00")
(data (i32.const 9155) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9208) "error reading iterator\00")
(data (i32.const 9231) "get\00")
(data (i32.const 9235) "read\00")
(data (i32.const 9240) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 9294) "cannot decrement iterator at beginning of table\00")
(data (i32.const 9342) "cannot pass end iterator to erase\00")
(data (i32.const 9376) "cannot increment end iterator\00")
(data (i32.const 9406) "object passed to erase is not in multi_index\00")
(data (i32.const 9451) "cannot erase objects in table of another contract\00")
(data (i32.const 9501) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9554) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9605) "cannot pass end iterator to modify\00")
(data (i32.const 9640) "object passed to modify is not in multi_index\00")
(data (i32.const 9686) "cannot modify objects in table of another contract\00")
(data (i32.const 9737) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9796) "write\00")
(data (i32.const 9802) "cannot create objects in table of another contract\00")
(data (i32.const 9853) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9905) "Draw Connect 4 Game! Play now at connectfours.io\00")
(data (i32.const 9954) "Won Connect 4 Game! Play now at connectfours.io\00")
(data (i32.const 10002) "Referral Cut for Connect 4! Play now at connectfours.io\00")
(data (i32.const 10058) "Dev Cut for Connect 4! Play now at connectfours.io\00")
(data (i32.const 10109) "attempt to subtract asset with different symbol\00")
(data (i32.const 10157) "subtraction underflow\00")
(data (i32.const 10179) "subtraction overflow\00")
(data (i32.const 10200) "game has not been won yet.\00")
(data (i32.const 10227) "attempt to add asset with different symbol\00")
(data (i32.const 10270) "addition underflow\00")
(data (i32.const 10289) "addition overflow\00")
(data (i32.const 0) "H(\00\00")
(import "env" "send_deferred" (func $fimport$0 (param i32 i64 i32 i32 i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$1 (param i32 i32)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$4 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$5 (param i32 i32) (result i64)))
(import "env" "abort" (func $fimport$6))
(import "env" "memset" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$8 (result i64)))
(import "env" "get_active_producers" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$10 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "is_account" (func $fimport$14 (param i64) (result i32)))
(import "env" "current_receiver" (func $fimport$15 (result i64)))
(import "env" "memmove" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$17 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$18 (param i32 i32)))
(import "env" "__multf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$20 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$21 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$22 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$23 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$27 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$28 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$30 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$31 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$33 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$34 (param i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$35 (param i32 i32)))
(import "env" "db_store_i64" (func $fimport$36 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$37 (result i32)))
(import "env" "read_action_data" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$39 (param i32 i64)))
(import "env" "db_previous_i64" (func $fimport$40 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$41 (param i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$42 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$43 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_upperbound" (func $fimport$44 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$45 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$46 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$47 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$48 (param i32)))
(import "env" "db_update_i64" (func $fimport$49 (param i32 i64 i32 i32)))
(import "env" "db_idx64_update" (func $fimport$50 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$51 (param i64 i64 i64 i64 i32) (result i32)))
(export "apply" (func $1))
(table $0 1 1 anyfunc)

(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10307))
(global $global$2 i32 (i32.const 10307))


int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9796])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9796])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9796])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$2 = (*($1 + [4]) - *($1))
	$3 = ((int_32)$2 / (int_32)[12])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$1 }
	$2 = CALL $8($2)
	*(($4 = ($0 + [4]))) = $2
	*(($0 + [8])) = ($2 + ((int_32)$3 * (int_32)[12]))
	*($0) = $2
	$5 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2) = (int_64)0
	*($2 + [8]) = [0]
	$6 = ($3 + [4])
	$1 = (*($6) - *($3))
	if ( ($1 == 0) ){ goto $label$5 }
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = CALL $8($1)
	*(($7 = ($2 + [4]))) = $8
	*(($2 + [8])) = ($8 + $1)
	*($2) = $8
	$1 = *($3)
	$2 = (*($6) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($8, $1, $2)
	*($7) = (*($7) + $2)
	
.LABEL $label$5
	$2 = (*($4) + [12])
	*($4) = $2
	$3 = ($3 + [12])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$4 }
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	CALL $16($2)
	
.LABEL $label$1
	CALL $16($0)
	(unreachable)
	return (unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	float_64 $4
	int_64 $5
	$2 = *($1 + [64])
	$1 = CALL $18([8918])
	$3 = ($1 <= [8])
	$4 = ((float_64)(CASTING float_64)(int_64 $2) * (float_64)(float_64)0.05)
	if ( ((float_64)(float_64)|$4| < (float_64)(float_64)9223372036854775808) ){ goto $label$5 }
	$5 = (int_64)-9223372036854775808
	if ( ($3 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = (Rounds 0)($4)
	if ( $3 ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9110])
	goto $label$2 
	
.LABEL $label$3
	if ( $1 ){ goto $label$2 }
	$2 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$6:
	$3 = *(($1 + [8917]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9155])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($0 + [8]) = $2
	*($0) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$8 }
	CALL eosio_assert([0], [9041])
	
.LABEL $label$8
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$2 = $5
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$2 = $5
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$0 = ($1 + [1])
	$1 = $0
	if ( $3 ){ goto $label$13 }
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$10 }
	
.LABEL $label$11
	return 
	
.LABEL $label$9
	CALL eosio_assert([0], [9090])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9796])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9796])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $93(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9796])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $38 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [24]) = $2
	*($5 + [32]) = $1
	*($5 + [23]) = $4
	CALL require_auth($1)
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8283])
	
.LABEL $label$1
	if ( $4 ){ goto $label$2 }
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [8313])
	
.LABEL $label$2
	$1 = *($0)
	*($5) = $0
	*($5 + [8]) = $3
	*($5 + [4]) = ($5 + [32])
	*($5 + [12]) = ($5 + [23])
	*($5 + [16]) = ($5 + [24])
	*($5 + [72]) = $1
	$3 = ($0 + [32])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [32])) ){ goto $label$3 }
	CALL eosio_assert([0], [9802])
	
.LABEL $label$3
	*($5 + [48]) = $3
	*($5 + [52]) = $5
	*($5 + [56]) = ($5 + [72])
	*(($4 = CALL $8([128])) + [20]) = [0]
	*($4 + [12 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [100]) = $3
	CALL $39(($5 + [48]), $4)
	*($5 + [64]) = $4
	$1 = *($4)
	*($5 + [48]) = $1
	$6 = *($4 + [104])
	*($5 + [44]) = $6
	$7 = ($0 + [60])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [64]))) ){ goto $label$6 }
	*($3 + [8]) = $1
	*($3 + [16]) = $6
	*($5 + [64]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	$7 = *($5 + [64])
	*($5 + [64]) = [0]
	if ( ($7 == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $40(($0 + [56]), ($5 + [64]), ($5 + [48]), ($5 + [44]))
	$7 = *($5 + [64])
	*($5 + [64]) = [0]
	if ( $7 ){ goto $label$4 }
	
.LABEL $label$5
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$4
	$6 = *($7 + [12])
	if ( ($6 == 0) ){ goto $label$7 }
	$8 = ($7 + [16])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($0 + [-12])
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($0 + [-8])) = $3
	CALL $10($3)
	
.LABEL $label$11
	$0 = $4
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($7 + [12]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $6
	
.LABEL $label$8
	*($8) = $6
	CALL $10($4)
	
.LABEL $label$7
	CALL $10($7)
	$global$0 = ($5 + [80])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($1)
	$3 = [3]
	
.LOOP $label$2:
	$4 = *($2)
	$1 = *($4)
	$5 = $3
	if ( ((uint_32)$5 >= (uint_32)[6]) ){ goto $label$4 }
	$3 = ($1 & [255])
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 != (int_32)*($4 + [1])) ){ goto $label$6 }
	if ( ((int_32)$3 != (int_32)*($4 + [2])) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)*($4 + [3])) ){ goto $label$1 }
	
.LABEL $label$6
	$6 = *(($2 + [12]))
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$7 }
	if ( ((int_32)$3 != (int_32)*(*(($2 + [24])))) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)*(*(($2 + [36])))) ){ goto $label$1 }
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)*($6 + [1])) ){ goto $label$5 }
	if ( ((int_32)$3 != (int_32)*(*(($2 + [24])) + [2])) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)*(*(($2 + [36])) + [3])) ){ goto $label$1 }
	
.LABEL $label$5
	$1 = *($4 + [1])
	if ( ($1 == 0) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)*($4 + [2])) ){ goto $label$9 }
	if ( ((int_32)$1 != (int_32)*($4 + [3])) ){ goto $label$9 }
	if ( ((int_32)$1 == (int_32)*($4 + [4])) ){ goto $label$1 }
	
.LABEL $label$9
	$3 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($3 + [1])) ){ goto $label$10 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [1])) ){ goto $label$10 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [1])) ){ goto $label$1 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)*($3 + [2])) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [3])) ){ goto $label$8 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [4])) ){ goto $label$1 }
	
.LABEL $label$8
	$1 = *($4 + [2])
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((int_32)$1 != (int_32)*($4 + [3])) ){ goto $label$12 }
	if ( ((int_32)$1 != (int_32)*($4 + [4])) ){ goto $label$12 }
	if ( ((int_32)$1 == (int_32)*($4 + [5])) ){ goto $label$1 }
	
.LABEL $label$12
	$3 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($3 + [2])) ){ goto $label$13 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [2])) ){ goto $label$13 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [2])) ){ goto $label$1 }
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)*($3 + [3])) ){ goto $label$11 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [4])) ){ goto $label$11 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [5])) ){ goto $label$1 }
	
.LABEL $label$11
	$1 = *($4 + [3])
	if ( ($1 == 0) ){ goto $label$14 }
	if ( ((int_32)$1 != (int_32)*($4 + [4])) ){ goto $label$15 }
	if ( ((int_32)$1 != (int_32)*($4 + [5])) ){ goto $label$15 }
	if ( ((int_32)$1 == (int_32)*($4 + [6])) ){ goto $label$1 }
	
.LABEL $label$15
	$3 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($3 + [3])) ){ goto $label$16 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [3])) ){ goto $label$16 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [3])) ){ goto $label$1 }
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)*($3 + [4])) ){ goto $label$17 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [5])) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [6])) ){ goto $label$1 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)*($3 + [2])) ){ goto $label$14 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [1])) ){ goto $label$14 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])))) ){ goto $label$1 }
	
.LABEL $label$14
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$18 }
	$3 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($3 + [4])) ){ goto $label$19 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [4])) ){ goto $label$19 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [4])) ){ goto $label$1 }
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)*($3 + [3])) ){ goto $label$18 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [2])) ){ goto $label$18 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [1])) ){ goto $label$1 }
	
.LABEL $label$18
	$1 = *($4 + [5])
	if ( ($1 == 0) ){ goto $label$20 }
	$3 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($3 + [5])) ){ goto $label$21 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [5])) ){ goto $label$21 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [5])) ){ goto $label$1 }
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)*($3 + [4])) ){ goto $label$20 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [3])) ){ goto $label$20 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [2])) ){ goto $label$1 }
	
.LABEL $label$20
	$1 = *($4 + [6])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = *(($2 + [12]))
	if ( ((int_32)$1 != (int_32)*($4 + [6])) ){ goto $label$22 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [6])) ){ goto $label$22 }
	if ( ((int_32)$1 == (int_32)*(*(($2 + [36])) + [6])) ){ goto $label$1 }
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)*($4 + [5])) ){ goto $label$3 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [24])) + [4])) ){ goto $label$3 }
	if ( ((int_32)$1 != (int_32)*(*(($2 + [36])) + [3])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = ($1 & [255])
	if ( ($3 == 0) ){ goto $label$23 }
	if ( ((int_32)$3 != (int_32)*($4 + [1])) ){ goto $label$23 }
	if ( ((int_32)$3 != (int_32)*($4 + [2])) ){ goto $label$23 }
	if ( ((int_32)$3 == (int_32)*($4 + [3])) ){ goto $label$1 }
	
.LABEL $label$23
	$1 = *($4 + [1])
	if ( ($1 == 0) ){ goto $label$24 }
	if ( ((int_32)$1 != (int_32)*($4 + [2])) ){ goto $label$24 }
	if ( ((int_32)$1 != (int_32)*($4 + [3])) ){ goto $label$24 }
	if ( ((int_32)$1 == (int_32)*($4 + [4])) ){ goto $label$1 }
	
.LABEL $label$24
	$1 = *($4 + [2])
	if ( ($1 == 0) ){ goto $label$25 }
	if ( ((int_32)$1 != (int_32)*($4 + [3])) ){ goto $label$25 }
	if ( ((int_32)$1 != (int_32)*($4 + [4])) ){ goto $label$25 }
	if ( ((int_32)$1 == (int_32)*($4 + [5])) ){ goto $label$1 }
	
.LABEL $label$25
	$1 = *($4 + [3])
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((int_32)$1 != (int_32)*($4 + [4])) ){ goto $label$3 }
	if ( ((int_32)$1 != (int_32)*($4 + [5])) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)*($4 + [6])) ){ goto $label$1 }
	
.LABEL $label$3
	$3 = ($5 + [1])
	$2 = ($2 + [12])
	if ( (($5 + [-2]) <= [6]) ){ goto $label$2 }
	$1 = [0]
	
.LABEL $label$1
	return ($1 & [255])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	int_32 $23
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($4) = *(($1 + [32]))
	*($4 + [8]) = *(($1 + [40]))
	$5 = ($1 + [92])
	*($4 + [16]) = *($5)
	$6 = ($1 + [96])
	*($4 + [24]) = *($6)
	$7 = *($1)
	$8 = *($2)
	$9 = ($1 + [12])
	$10 = CALL $90(($4 + [112]), $9)
	$11 = CALL $49($2, $10)
	$12 = *($10)
	if ( ($12 == 0) ){ goto $label$3 }
	$13 = *($10 + [4])
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = ($13 + [-12])
	$14 = *($2)
	if ( ($14 == 0) ){ goto $label$7 }
	*(($13 + [-8])) = $14
	CALL $10($14)
	
.LABEL $label$7
	$13 = $2
	if ( ((int_32)$12 != (int_32)$2) ){ goto $label$6 }
	$2 = *($10)
	goto $label$4 
	
.LABEL $label$5
	$2 = $12
	
.LABEL $label$4
	*(($10 + [4])) = $12
	CALL $10($2)
	
.LABEL $label$3
	if ( $11 ){ goto $label$8 }
	CALL eosio_assert([0], [10200])
	
.LABEL $label$8
	if ( (*([0] + [8236]) == 0) ){ goto $label$10 }
	$2 = *([0] + [8232])
	goto $label$9 
	
.LABEL $label$10
	$17 = CALL $17()
	*([0] + [8236]) = [1]
	$2 = (CASTING uint_32)(uint_64 ((int_64)$17 / (int_64)1000000))
	*([0] + [8232]) = $2
	
.LABEL $label$9
	*(($1 + [96])) = $2
	$16 = ($1 + [40])
	$15 = ($1 + [32])
	$17 = *(( $15 ? $16 : ((int_32)$11 == (int_32)[1]) ))
	CALL $53(($4 + [152]), $1)
	$18 = *($4 + [160])
	$19 = *($4 + [152])
	if ( ((int_64)$19 >= (int_64)2305843009213693952) ){ goto $label$12 }
	if ( ((int_64)$19 > (int_64)-2305843009213693952) ){ goto $label$11 }
	CALL eosio_assert([0], [9016])
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [8992])
	
.LABEL $label$11
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	$2 = CALL $18([9954])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$16 }
	$19 = ((int_64)$19 << (int_64)1)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$19 }
	*($4 + [96]) = ($2 << [1])
	$13 = (($4 + [96]) | [1])
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$14 = (($2 + [16]) & [-16])
	$13 = CALL $8($14)
	*($4 + [96]) = ($14 | [1])
	*($4 + [104]) = $13
	*($4 + [100]) = $2
	
.LABEL $label$18
	CALL memcpy($13, [9954], $2)
	
.LABEL $label$17
	*(($13 + $2)) = [0]
	*($4 + [144]) = $18
	*($4 + [136]) = $19
	*($4 + [80]) = $17
	$19 = *($8)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $19
	*($2 + [8]) = (int_64)3617214756542218240
	$13 = ($2 + [16])
	*((($4 + [152]) + [16])) = $13
	*(($14 = ($4 + [164]))) = $13
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $8, ($4 + [80]), ($4 + [136]), ($4 + [96]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$20 }
	*($14) = $2
	CALL $10($2)
	
.LABEL $label$20
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$21 }
	CALL $10(*($4 + [104]))
	
.LABEL $label$21
	if ( (CALL is_account(*($1 + [56])) == 0) ){ goto $label$31 }
	$19 = *(($1 + [56]))
	CALL $91(($4 + [80]), $1)
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$2 = CALL $18([10002])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [64]) = ($2 << [1])
	$13 = (($4 + [64]) | [1])
	if ( $2 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$19 = *(($1 + [72]))
	$18 = *($1 + [64])
	if ( ((int_64)$18 >= (int_64)2305843009213693952) ){ goto $label$33 }
	if ( ((int_64)$18 > (int_64)-2305843009213693952) ){ goto $label$32 }
	CALL eosio_assert([0], [9016])
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [8992])
	
.LABEL $label$32
	CALL $53(($4 + [152]), $1)
	$20 = *($4 + [160])
	$21 = *($4 + [152])
	if ( ((int_64)$21 >= (int_64)2305843009213693952) ){ goto $label$37 }
	if ( ((int_64)$21 > (int_64)-2305843009213693952) ){ goto $label$36 }
	CALL eosio_assert([0], [9016])
	if ( ((int_64)$20 != (int_64)$19) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	CALL eosio_assert([0], [8992])
	
.LABEL $label$36
	if ( ((int_64)$20 == (int_64)$19) ){ goto $label$34 }
	
.LABEL $label$35
	CALL eosio_assert([0], [10109])
	
.LABEL $label$34
	$18 = ((int_64))($18 - $21) << (int_64)1
	if ( ((int_64)$18) <= (int_64)-4611686018427387904) ){ goto $label$39 }
	if ( ((int_64)$18 < (int_64)4611686018427387904) ){ goto $label$38 }
	CALL eosio_assert([0], [10179])
	goto $label$38 
	
.LABEL $label$39
	CALL eosio_assert([0], [10157])
	
.LABEL $label$38
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	$2 = CALL $18([10058])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$27 }
	*($4 + [80]) = ($2 << [1])
	$13 = (($4 + [80]) | [1])
	if ( $2 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$30
	$14 = (($2 + [16]) & [-16])
	$13 = CALL $8($14)
	*($4 + [64]) = ($14 | [1])
	*($4 + [72]) = $13
	*($4 + [68]) = $2
	
.LABEL $label$29
	CALL memcpy($13, [10002], $2)
	
.LABEL $label$28
	*(($13 + $2)) = [0]
	*((($4 + [136]) + [8])) = *((($4 + [80]) + [8]))
	*($4 + [48]) = $19
	*($4 + [136]) = *($4 + [80])
	$19 = *($8)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $19
	*($2 + [8]) = (int_64)3617214756542218240
	$13 = ($2 + [16])
	*((($4 + [152]) + [16])) = $13
	*(($14 = ($4 + [164]))) = $13
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $8, ($4 + [48]), ($4 + [136]), ($4 + [64]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$40 }
	*($14) = $2
	CALL $10($2)
	
.LABEL $label$40
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$41 }
	CALL $10(*($4 + [72]))
	
.LABEL $label$41
	$19 = *(($1 + [72]))
	$18 = *($1 + [64])
	if ( ((int_64)$18 >= (int_64)2305843009213693952) ){ goto $label$24 }
	if ( ((int_64)$18 > (int_64)-2305843009213693952) ){ goto $label$23 }
	CALL eosio_assert([0], [9016])
	goto $label$23 
	
.LABEL $label$27
	$14 = (($2 + [16]) & [-16])
	$13 = CALL $8($14)
	*($4 + [80]) = ($14 | [1])
	*($4 + [88]) = $13
	*($4 + [84]) = $2
	
.LABEL $label$26
	CALL memcpy($13, [10058], $2)
	
.LABEL $label$25
	*(($13 + $2)) = [0]
	*($4 + [144]) = $19
	*($4 + [136]) = $18
	*($4 + [48]) = (int_64)4983009937881214608
	$19 = *($8)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $19
	*($2 + [8]) = (int_64)3617214756542218240
	$13 = ($2 + [16])
	*((($4 + [152]) + [16])) = $13
	*(($14 = ($4 + [164]))) = $13
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $8, ($4 + [48]), ($4 + [136]), ($4 + [80]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$42 }
	*($14) = $2
	CALL $10($2)
	
.LABEL $label$42
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$22 }
	CALL $10(*($4 + [88]))
	goto $label$22 
	
.LABEL $label$24
	CALL eosio_assert([0], [8992])
	
.LABEL $label$23
	CALL $53(($4 + [152]), $1)
	$20 = *($4 + [160])
	$21 = *($4 + [152])
	if ( ((int_64)$21 >= (int_64)2305843009213693952) ){ goto $label$46 }
	if ( ((int_64)$21 > (int_64)-2305843009213693952) ){ goto $label$45 }
	CALL eosio_assert([0], [9016])
	if ( ((int_64)$20 != (int_64)$19) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	CALL eosio_assert([0], [8992])
	
.LABEL $label$45
	if ( ((int_64)$20 == (int_64)$19) ){ goto $label$43 }
	
.LABEL $label$44
	CALL eosio_assert([0], [10109])
	
.LABEL $label$43
	$18 = ((int_64))($18 - $21) << (int_64)1
	if ( ((int_64)$18) <= (int_64)-4611686018427387904) ){ goto $label$48 }
	if ( ((int_64)$18 < (int_64)4611686018427387904) ){ goto $label$47 }
	CALL eosio_assert([0], [10179])
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [10157])
	
.LABEL $label$47
	CALL $91(($4 + [48]), $1)
	if ( ((int_64)*($4 + [56]) == (int_64)$19) ){ goto $label$49 }
	CALL eosio_assert([0], [10109])
	
.LABEL $label$49
	$18 = (int_64)
	if ( ((int_64)$18($18 - *($4 + [48]))) <= (int_64)-4611686018427387904) ){ goto $label$51 }
	if ( ((int_64)$18 < (int_64)4611686018427387904) ){ goto $label$50 }
	CALL eosio_assert([0], [10179])
	goto $label$50 
	
.LABEL $label$51
	CALL eosio_assert([0], [10157])
	
.LABEL $label$50
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$2 = CALL $18([10058])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$54 }
	*($4 + [32]) = ($2 << [1])
	$13 = (($4 + [32]) | [1])
	if ( $2 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$14 = (($2 + [16]) & [-16])
	$13 = CALL $8($14)
	*($4 + [32]) = ($14 | [1])
	*($4 + [40]) = $13
	*($4 + [36]) = $2
	
.LABEL $label$53
	CALL memcpy($13, [10058], $2)
	
.LABEL $label$52
	*(($13 + $2)) = [0]
	*($4 + [144]) = $19
	*($4 + [136]) = $18
	*($4 + [128]) = (int_64)4983009937881214608
	$19 = *($8)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $19
	*($2 + [8]) = (int_64)3617214756542218240
	$13 = ($2 + [16])
	*((($4 + [152]) + [16])) = $13
	*(($14 = ($4 + [164]))) = $13
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $8, ($4 + [128]), ($4 + [136]), ($4 + [32]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$55 }
	*($14) = $2
	CALL $10($2)
	
.LABEL $label$55
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$22 }
	CALL $10(*($4 + [40]))
	
.LABEL $label$22
	*($1 + [48]) = $17
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$56 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$56
	$11 = ($4 + [24])
	$22 = ($4 + [16])
	$23 = ($4 + [8])
	$13 = *($1 + [12])
	$10 = *(($1 + [16]))
	$17 = (CASTING uint_64)(uint_32 ((int_32)($10 - $13) / (int_32)[12]))
	$2 = [9]
	
.LOOP $label$57:
	$2 = ($2 + [1])
	$17 = (uint_64)$17 >> (uint_64)(int_64)7
	if ( ((int_64)$17) != (int_64)0) ){ goto $label$57 }
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$58 }
	
.LOOP $label$59:
	$12 = *($13)
	$14 = *($13 + [4])
	$8 = ($14 - $12)
	$17 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$60:
	$2 = ($2 + [1])
	$17 = (uint_64)$17 >> (uint_64)(int_64)7
	if ( ((int_64)$17) != (int_64)0) ){ goto $label$60 }
	$2 = ( $2 ? ($8 + $2) : ((int_32)$12 == (int_32)$14) )
	$13 = ($13 + [12])
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$59 }
	
.LABEL $label$58
	$13 = ($2 + [69])
	if ( ($13 <= [513]) ){ goto $label$62 }
	$2 = CALL $2($13)
	goto $label$61 
	
.LABEL $label$62
	$2 = ($3 - (($13 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$61
	*($4 + [140]) = $2
	*($4 + [136]) = $2
	*($4 + [144]) = ($2 + $13)
	*($4 + [80]) = ($4 + [136])
	*($4 + [160]) = $9
	*($4 + [168]) = $15
	*($4 + [172]) = $16
	*($4 + [196]) = $5
	*($4 + [200]) = $6
	*($4 + [152]) = $1
	*($4 + [156]) = ($1 + [8])
	*($4 + [164]) = ($1 + [24])
	*($4 + [176]) = ($1 + [48])
	*($4 + [180]) = ($1 + [56])
	*($4 + [184]) = ($1 + [64])
	*($4 + [188]) = ($1 + [80])
	*($4 + [192]) = ($1 + [88])
	CALL $86(($4 + [152]), ($4 + [80]))
	CALL db_update_i64(*($1 + [104]), (int_64)0, $2, $13)
	if ( ($13 <= [513]) ){ goto $label$63 }
	CALL $3($2)
	
.LABEL $label$63
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$64 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$64
	*($4 + [152]) = *(($1 + [32]))
	if ( (CALL $19($4, ($4 + [152]), [8]) == 0) ){ goto $label$65 }
	$2 = *($1 + [108])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$66 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($4 + [80]), $7)
	*(($1 + [108])) = $2
	
.LABEL $label$66
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$65
	*($4 + [152]) = *(($1 + [40]))
	if ( (CALL $19($23, ($4 + [152]), [8]) == 0) ){ goto $label$67 }
	$13 = ($1 + [112])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$68 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($4 + [80]), $7)
	*($13) = $2
	
.LABEL $label$68
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$67
	*($4 + [152]) = *($5)
	if ( (CALL $19($22, ($4 + [152]), [8]) == 0) ){ goto $label$69 }
	$13 = ($1 + [116])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$70 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($4 + [80]), $7)
	*($13) = $2
	
.LABEL $label$70
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$69
	*($4 + [152]) = *($6)
	if ( (CALL $19($11, ($4 + [152]), [8]) == 0) ){ goto $label$71 }
	$13 = ($1 + [120])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$72 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($4 + [80]), $7)
	*($13) = $2
	
.LABEL $label$72
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$71
	$global$0 = ($4 + [208])
	return (unreachable)
	
.LABEL $label$16
	CALL $20(($4 + [96]))
	
.LABEL $label$15
	CALL $20(($4 + [64]))
	
.LABEL $label$14
	CALL $20(($4 + [80]))
	
.LABEL $label$13
	CALL $20(($4 + [32]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($5 + [16]) = *(($1 + [32]))
	*($5 + [24]) = *(($1 + [40]))
	$6 = ($1 + [92])
	*($5 + [32]) = *($6)
	$7 = ($1 + [96])
	*($5 + [40]) = *($7)
	$8 = *($1)
	if ( (*([0] + [8236]) == 0) ){ goto $label$4 }
	$9 = *([0] + [8232])
	goto $label$3 
	
.LABEL $label$4
	$19 = CALL $17()
	*([0] + [8236]) = [1]
	$9 = (CASTING uint_32)(uint_64 ((int_64)$19 / (int_64)1000000))
	*([0] + [8232]) = $9
	
.LABEL $label$3
	*(($1 + [92])) = $9
	if ( (*($1 + [8]) == 0) ){ goto $label$5 }
	*(($1 + [40])) = *(*($3))
	
.LABEL $label$5
	$11 = ($1 + [32])
	$10 = ($1 + [40])
	*($1 + [80]) = *(( $10 ? $11 : ($9 & [1]) ))
	*($1 + [88]) = $9
	*($1 + [56]) = *(*($3 + [4]))
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$6
	$12 = ($5 + [40])
	$13 = ($5 + [32])
	$14 = ($5 + [24])
	$15 = ($1 + [8])
	$16 = ($1 + [88])
	$17 = ($1 + [12])
	$3 = *($1 + [12])
	$18 = *(($1 + [16]))
	$19 = (CASTING uint_64)(uint_32 ((int_32)($18 - $3) / (int_32)[12]))
	$9 = [9]
	
.LOOP $label$7:
	$9 = ($9 + [1])
	$19 = (uint_64)$19 >> (uint_64)(int_64)7
	if ( ((int_64)$19) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$18) ){ goto $label$8 }
	
.LOOP $label$9:
	$21 = *($3)
	$20 = *($3 + [4])
	$22 = ($20 - $21)
	$19 = (CASTING uint_64)(uint_32 $22)
	
.LOOP $label$10:
	$9 = ($9 + [1])
	$19 = (uint_64)$19 >> (uint_64)(int_64)7
	if ( ((int_64)$19) != (int_64)0) ){ goto $label$10 }
	$9 = ( $9 ? ($22 + $9) : ((int_32)$21 == (int_32)$20) )
	$3 = ($3 + [12])
	if ( ((int_32)$3 != (int_32)$18) ){ goto $label$9 }
	
.LABEL $label$8
	$3 = ($9 + [69])
	if ( ($3 <= [513]) ){ goto $label$12 }
	$9 = CALL $2($3)
	goto $label$11 
	
.LABEL $label$12
	$9 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$11
	*($5 + [4]) = $9
	*($5) = $9
	*($5 + [8]) = ($9 + $3)
	*($5 + [48]) = $5
	*($5 + [60]) = $15
	*($5 + [64]) = $17
	*($5 + [72]) = $11
	*($5 + [76]) = $10
	*($5 + [96]) = $16
	*($5 + [100]) = $6
	*($5 + [104]) = $7
	*($5 + [56]) = $1
	*($5 + [68]) = ($1 + [24])
	*($5 + [80]) = ($1 + [48])
	*($5 + [84]) = ($1 + [56])
	*($5 + [88]) = ($1 + [64])
	*($5 + [92]) = ($1 + [80])
	CALL $86(($5 + [56]), ($5 + [48]))
	CALL db_update_i64(*($1 + [104]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$13 }
	CALL $3($9)
	
.LABEL $label$13
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($5 + [56]) = *(($1 + [32]))
	if ( (CALL $19(($5 + [16]), ($5 + [56]), [8]) == 0) ){ goto $label$15 }
	$9 = *($1 + [108])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($5 + [48]), $8)
	*(($1 + [108])) = $9
	
.LABEL $label$16
	CALL db_idx64_update($9, $2, ($5 + [56]))
	
.LABEL $label$15
	*($5 + [56]) = *(($1 + [40]))
	if ( (CALL $19($14, ($5 + [56]), [8]) == 0) ){ goto $label$17 }
	$3 = ($1 + [112])
	$9 = *($3)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($5 + [48]), $8)
	*($3) = $9
	
.LABEL $label$18
	CALL db_idx64_update($9, $2, ($5 + [56]))
	
.LABEL $label$17
	*($5 + [56]) = *($6)
	if ( (CALL $19($13, ($5 + [56]), [8]) == 0) ){ goto $label$19 }
	$3 = ($1 + [116])
	$9 = *($3)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($5 + [48]), $8)
	*($3) = $9
	
.LABEL $label$20
	CALL db_idx64_update($9, $2, ($5 + [56]))
	
.LABEL $label$19
	*($5 + [56]) = *($7)
	if ( (CALL $19($12, ($5 + [56]), [8]) == 0) ){ goto $label$21 }
	$3 = ($1 + [120])
	$9 = *($3)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$22 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($5 + [48]), $8)
	*($3) = $9
	
.LABEL $label$22
	CALL db_idx64_update($9, $2, ($5 + [56]))
	
.LABEL $label$21
	$global$0 = ($5 + [112])
}

void .FUNC $42 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9554])
	if ( ((int_64)*($8 + [8]) < (int_64)*($2)) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $29($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$4
	if ( ((int_64)*($8 + [8]) >= (int_64)*($2)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8876])
	if ( ((int_64)*([0] + [8]) >= (int_64)*($2)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8900])
	
.LABEL $label$1
	*($3) = $2
	if ( $8 ){ goto $label$8 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$8
	CALL $44($4, $8, $3)
	if ( ((int_64)*(($8 + [8])) == (int_64)0) ){ goto $label$9 }
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	if ( $8 ){ goto $label$10 }
	CALL eosio_assert([0], [9342])
	CALL eosio_assert([0], [9376])
	
.LABEL $label$10
	$7 = CALL db_next_i64(*($8 + [28]), ($3 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	CALL $29($4, $7)
	
.LABEL $label$11
	CALL $31($4, $8)
	$global$0 = ($3 + [16])
}

void .FUNC $41 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $3
	*($4 + [56]) = $1
	CALL require_auth($1)
	$5 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [100]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$10
	if ( $9 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)7035937633859534848, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $26($5, $8)
	if ( ((int_32)*($9 + [100]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( *($9 + [8]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	CALL eosio_assert([0], [8369])
	if ( *([0] + [8]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)*($9 + [40]) == (int_64)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [8389])
	if ( ((int_64)*($9 + [32]) == (int_64)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)*($9 + [32]) != (int_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8283])
	
.LABEL $label$1
	if ( (*($9 + [92]) == 0) ){ goto $label$11 }
	CALL eosio_assert([0], [8418])
	
.LABEL $label$11
	$3 = *(($9 + [72]))
	*((($4 + [32]) + [8])) = $3
	$2 = *($9 + [64])
	*((($4 + [8]) + [8])) = $3
	*($4 + [32]) = $2
	*($4 + [8]) = $2
	CALL $42($0, $1, ($4 + [8]))
	$2 = *($0)
	*($4 + [28]) = ($4 + [48])
	*($4 + [24]) = ($4 + [56])
	if ( $9 ){ goto $label$12 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$12
	CALL $43($5, $9, $2, ($4 + [24]))
	$global$0 = ($4 + [64])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$3 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$2 = *($4)
	*($4) = [0]
	*($1) = $2
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$3 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $3
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	$2 = *($0 + [12])
	if ( ($2 == 0) ){ goto $label$11 }
	$6 = ($0 + [16])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	$4 = *($1)
	if ( ($4 == 0) ){ goto $label$15 }
	*(($7 + [-8])) = $4
	CALL $10($4)
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($0 + [12]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $2
	
.LABEL $label$12
	*($6) = $2
	CALL $10($1)
	
.LABEL $label$11
	CALL $10($0)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $10($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $47 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$9:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$8 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$10 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$10
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $26($3, $6)
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( (*($7 + [92]) == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	CALL eosio_assert([0], [8369])
	if ( (*([0] + [92]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( *($7 + [96]) ){ goto $label$3 }
	if ( ((uint_32)*($7 + [24]) > (uint_32)[7]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8444])
	if ( ((uint_32)*($7 + [24]) > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8542])
	
.LABEL $label$1
	*($2 + [8]) = $0
	if ( $7 ){ goto $label$11 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$11
	CALL $48($3, $7, ($2 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($4) = *(($1 + [32]))
	$5 = ($1 + [40])
	$6 = *($5)
	*($4 + [8]) = $6
	$7 = ($1 + [92])
	*($4 + [16]) = *($7)
	$8 = ($1 + [96])
	*($4 + [24]) = *($8)
	$9 = *($1)
	$10 = *($2 + [12])
	*((*((*($1 + [12]) + ((int_32)*(*($2)) * (int_32)[12]))) + *(*($2 + [4])))) = ( [1] ? [2] : ((int_64)$6 == (int_64)*($1 + [80])) )
	if ( (*([0] + [8236]) == 0) ){ goto $label$4 }
	$11 = *([0] + [8232])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL $17()
	*([0] + [8236]) = [1]
	$11 = (CASTING uint_32)(uint_64 ((int_64)$6 / (int_64)1000000))
	*([0] + [8232]) = $11
	
.LABEL $label$3
	$12 = ($1 + [12])
	*($1 + [88]) = $11
	*(($1 + [80])) = *(*($2 + [8]))
	$2 = (*($1 + [24]) + [1])
	*($1 + [24]) = $2
	if ( ((int_32)($2 & [255]) != (int_32)[42]) ){ goto $label$9 }
	$13 = CALL $90(($4 + [112]), $12)
	$14 = CALL $49($2, $13)
	$15 = *($13)
	if ( ($15 == 0) ){ goto $label$10 }
	$11 = *($13 + [4])
	if ( ((int_32)$11 == (int_32)$15) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($11 + [-12])
	$16 = *($2)
	if ( ($16 == 0) ){ goto $label$14 }
	*(($11 + [-8])) = $16
	CALL $10($16)
	
.LABEL $label$14
	$11 = $2
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$13 }
	$2 = *($13)
	goto $label$11 
	
.LABEL $label$12
	$2 = $15
	
.LABEL $label$11
	*(($13 + [4])) = $15
	CALL $10($2)
	
.LABEL $label$10
	if ( (*([0] + [8236]) == 0) ){ goto $label$18 }
	*($8) = *([0] + [8232])
	if ( ($14 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$6 = CALL $17()
	*([0] + [8236]) = [1]
	$2 = (CASTING uint_32)(uint_64 ((int_64)$6 / (int_64)1000000))
	*([0] + [8232]) = $2
	*($8) = $2
	if ( $14 ){ goto $label$16 }
	
.LABEL $label$17
	$6 = *(($1 + [32]))
	CALL $53(($4 + [96]), $1)
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	$2 = CALL $18([9905])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [80]) = ($2 << [1])
	$11 = (($4 + [80]) | [1])
	if ( $2 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [80]) = ($16 | [1])
	*($4 + [88]) = $11
	*($4 + [84]) = $2
	
.LABEL $label$22
	CALL memcpy($11, [9905], $2)
	
.LABEL $label$21
	*(($11 + $2)) = [0]
	*((($4 + [128]) + [8])) = *((($4 + [96]) + [8]))
	*($4 + [64]) = $6
	*($4 + [128]) = *($4 + [96])
	$6 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $6
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [64]), ($4 + [128]), ($4 + [80]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$24 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$24
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$25 }
	CALL $10(*($4 + [88]))
	
.LABEL $label$25
	$6 = *(($1 + [40]))
	CALL $53(($4 + [64]), $1)
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	$2 = CALL $18([9905])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$28 }
	*($4 + [48]) = ($2 << [1])
	$11 = (($4 + [48]) | [1])
	if ( $2 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [48]) = ($16 | [1])
	*($4 + [56]) = $11
	*($4 + [52]) = $2
	
.LABEL $label$27
	CALL memcpy($11, [9905], $2)
	
.LABEL $label$26
	*(($11 + $2)) = [0]
	*((($4 + [128]) + [8])) = *((($4 + [64]) + [8]))
	*($4 + [32]) = $6
	*($4 + [128]) = *($4 + [64])
	$6 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $6
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [32]), ($4 + [128]), ($4 + [48]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$29 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$29
	$6 = (int_64)5606348217378668544
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*($4 + [56]))
	goto $label$15 
	
.LABEL $label$20
	CALL $20(($4 + [80]))
	
.LABEL $label$19
	CALL $20(($4 + [48]))
	
.LABEL $label$16
	$6 = *(( ($1 + [32]) ? $5 : ((int_32)$14 == (int_32)[1]) ))
	CALL $53(($4 + [152]), $1)
	$17 = *($4 + [160])
	$18 = *($4 + [152])
	if ( ((int_64)$18 >= (int_64)2305843009213693952) ){ goto $label$31 }
	if ( ((int_64)$18 > (int_64)-2305843009213693952) ){ goto $label$30 }
	CALL eosio_assert([0], [9016])
	goto $label$30 
	
.LABEL $label$31
	CALL eosio_assert([0], [8992])
	
.LABEL $label$30
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	$2 = CALL $18([9954])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$8 }
	$18 = ((int_64)$18 << (int_64)1)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$34 }
	*($4 + [80]) = ($2 << [1])
	$11 = (($4 + [80]) | [1])
	if ( $2 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [80]) = ($16 | [1])
	*($4 + [88]) = $11
	*($4 + [84]) = $2
	
.LABEL $label$33
	CALL memcpy($11, [9954], $2)
	
.LABEL $label$32
	*(($11 + $2)) = [0]
	*($4 + [136]) = $17
	*($4 + [128]) = $18
	*($4 + [96]) = $6
	$18 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $18
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [96]), ($4 + [128]), ($4 + [80]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$35 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$35
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$36 }
	CALL $10(*($4 + [88]))
	
.LABEL $label$36
	if ( (CALL is_account(*($1 + [56])) == 0) ){ goto $label$45 }
	$18 = *(($1 + [56]))
	CALL $91(($4 + [96]), $1)
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	$2 = CALL $18([10002])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$44 }
	*($4 + [48]) = ($2 << [1])
	$11 = (($4 + [48]) | [1])
	if ( $2 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$18 = *(($1 + [72]))
	$17 = *($1 + [64])
	if ( ((int_64)$17 >= (int_64)2305843009213693952) ){ goto $label$47 }
	if ( ((int_64)$17 > (int_64)-2305843009213693952) ){ goto $label$46 }
	CALL eosio_assert([0], [9016])
	goto $label$46 
	
.LABEL $label$47
	CALL eosio_assert([0], [8992])
	
.LABEL $label$46
	CALL $53(($4 + [152]), $1)
	$19 = *($4 + [160])
	$20 = *($4 + [152])
	if ( ((int_64)$20 >= (int_64)2305843009213693952) ){ goto $label$51 }
	if ( ((int_64)$20 > (int_64)-2305843009213693952) ){ goto $label$50 }
	CALL eosio_assert([0], [9016])
	if ( ((int_64)$19 != (int_64)$18) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	CALL eosio_assert([0], [8992])
	
.LABEL $label$50
	if ( ((int_64)$19 == (int_64)$18) ){ goto $label$48 }
	
.LABEL $label$49
	CALL eosio_assert([0], [10109])
	
.LABEL $label$48
	$17 = ((int_64))($17 - $20) << (int_64)1
	if ( ((int_64)$17) <= (int_64)-4611686018427387904) ){ goto $label$53 }
	if ( ((int_64)$17 < (int_64)4611686018427387904) ){ goto $label$52 }
	CALL eosio_assert([0], [10179])
	goto $label$52 
	
.LABEL $label$53
	CALL eosio_assert([0], [10157])
	
.LABEL $label$52
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	$2 = CALL $18([10058])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$41 }
	*($4 + [96]) = ($2 << [1])
	$11 = (($4 + [96]) | [1])
	if ( $2 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$44
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [48]) = ($16 | [1])
	*($4 + [56]) = $11
	*($4 + [52]) = $2
	
.LABEL $label$43
	CALL memcpy($11, [10002], $2)
	
.LABEL $label$42
	*(($11 + $2)) = [0]
	*((($4 + [128]) + [8])) = *((($4 + [96]) + [8]))
	*($4 + [64]) = $18
	*($4 + [128]) = *($4 + [96])
	$18 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $18
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [64]), ($4 + [128]), ($4 + [48]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$54 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$54
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$55 }
	CALL $10(*($4 + [56]))
	
.LABEL $label$55
	$18 = *(($1 + [72]))
	$17 = *($1 + [64])
	if ( ((int_64)$17 >= (int_64)2305843009213693952) ){ goto $label$38 }
	if ( ((int_64)$17 > (int_64)-2305843009213693952) ){ goto $label$37 }
	CALL eosio_assert([0], [9016])
	goto $label$37 
	
.LABEL $label$41
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [96]) = ($16 | [1])
	*($4 + [104]) = $11
	*($4 + [100]) = $2
	
.LABEL $label$40
	CALL memcpy($11, [10058], $2)
	
.LABEL $label$39
	*(($11 + $2)) = [0]
	*($4 + [136]) = $18
	*($4 + [128]) = $17
	*($4 + [64]) = (int_64)4983009937881214608
	$18 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $18
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [64]), ($4 + [128]), ($4 + [96]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$56 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$56
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*($4 + [104]))
	goto $label$15 
	
.LABEL $label$38
	CALL eosio_assert([0], [8992])
	
.LABEL $label$37
	CALL $53(($4 + [152]), $1)
	$19 = *($4 + [160])
	$20 = *($4 + [152])
	if ( ((int_64)$20 >= (int_64)2305843009213693952) ){ goto $label$60 }
	if ( ((int_64)$20 > (int_64)-2305843009213693952) ){ goto $label$59 }
	CALL eosio_assert([0], [9016])
	if ( ((int_64)$19 != (int_64)$18) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	CALL eosio_assert([0], [8992])
	
.LABEL $label$59
	if ( ((int_64)$19 == (int_64)$18) ){ goto $label$57 }
	
.LABEL $label$58
	CALL eosio_assert([0], [10109])
	
.LABEL $label$57
	$17 = ((int_64))($17 - $20) << (int_64)1
	if ( ((int_64)$17) <= (int_64)-4611686018427387904) ){ goto $label$62 }
	if ( ((int_64)$17 < (int_64)4611686018427387904) ){ goto $label$61 }
	CALL eosio_assert([0], [10179])
	goto $label$61 
	
.LABEL $label$62
	CALL eosio_assert([0], [10157])
	
.LABEL $label$61
	CALL $91(($4 + [64]), $1)
	if ( ((int_64)*($4 + [72]) == (int_64)$18) ){ goto $label$63 }
	CALL eosio_assert([0], [10109])
	
.LABEL $label$63
	$17 = (int_64)
	if ( ((int_64)$17($17 - *($4 + [64]))) <= (int_64)-4611686018427387904) ){ goto $label$65 }
	if ( ((int_64)$17 < (int_64)4611686018427387904) ){ goto $label$64 }
	CALL eosio_assert([0], [10179])
	goto $label$64 
	
.LABEL $label$65
	CALL eosio_assert([0], [10157])
	
.LABEL $label$64
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$2 = CALL $18([10058])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$68 }
	*($4 + [32]) = ($2 << [1])
	$11 = (($4 + [32]) | [1])
	if ( $2 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$16 = (($2 + [16]) & [-16])
	$11 = CALL $8($16)
	*($4 + [32]) = ($16 | [1])
	*($4 + [40]) = $11
	*($4 + [36]) = $2
	
.LABEL $label$67
	CALL memcpy($11, [10058], $2)
	
.LABEL $label$66
	*(($11 + $2)) = [0]
	*($4 + [136]) = $18
	*($4 + [128]) = $17
	*($4 + [144]) = (int_64)4983009937881214608
	$18 = *($10)
	*($4 + [152]) = (int_64)6138663591592764928
	*(($2 = CALL $8([16]))) = $18
	*($2 + [8]) = (int_64)3617214756542218240
	$11 = ($2 + [16])
	*((($4 + [152]) + [16])) = $11
	*(($16 = ($4 + [164]))) = $11
	*($4 + [160]) = $2
	CALL $51(($4 + [152]), $10, ($4 + [144]), ($4 + [128]), ($4 + [32]))
	$2 = *($4 + [160])
	if ( ($2 == 0) ){ goto $label$69 }
	*($16) = $2
	CALL $10($2)
	
.LABEL $label$69
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$15 }
	CALL $10(*($4 + [40]))
	
.LABEL $label$15
	*($1 + [48]) = $6
	
.LABEL $label$9
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$70 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$70
	$14 = ($4 + [24])
	$21 = ($4 + [16])
	$22 = ($4 + [8])
	$23 = ($1 + [24])
	$24 = ($1 + [88])
	$11 = *($1 + [12])
	$13 = *(($1 + [16]))
	$6 = (CASTING uint_64)(uint_32 ((int_32)($13 - $11) / (int_32)[12]))
	$2 = [9]
	
.LOOP $label$71:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$71 }
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$72 }
	
.LOOP $label$73:
	$15 = *($11)
	$16 = *($11 + [4])
	$10 = ($16 - $15)
	$6 = (CASTING uint_64)(uint_32 $10)
	
.LOOP $label$74:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$74 }
	$2 = ( $2 ? ($10 + $2) : ((int_32)$15 == (int_32)$16) )
	$11 = ($11 + [12])
	if ( ((int_32)$11 != (int_32)$13) ){ goto $label$73 }
	
.LABEL $label$72
	$11 = ($2 + [69])
	if ( ($11 <= [513]) ){ goto $label$76 }
	$2 = CALL $2($11)
	goto $label$75 
	
.LABEL $label$76
	$2 = ($3 - (($11 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$75
	*($4 + [132]) = $2
	*($4 + [128]) = $2
	*($4 + [136]) = ($2 + $11)
	*($4 + [96]) = ($4 + [128])
	*($4 + [160]) = $12
	*($4 + [164]) = $23
	*($4 + [172]) = $5
	*($4 + [192]) = $24
	*($4 + [196]) = $7
	*($4 + [200]) = $8
	*($4 + [152]) = $1
	*($4 + [156]) = ($1 + [8])
	*($4 + [168]) = ($1 + [32])
	*($4 + [176]) = ($1 + [48])
	*($4 + [180]) = ($1 + [56])
	*($4 + [184]) = ($1 + [64])
	*($4 + [188]) = ($1 + [80])
	CALL $86(($4 + [152]), ($4 + [96]))
	CALL db_update_i64(*($1 + [104]), (int_64)0, $2, $11)
	if ( ($11 <= [513]) ){ goto $label$77 }
	CALL $3($2)
	
.LABEL $label$77
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$78 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$78
	*($4 + [152]) = *(($1 + [32]))
	if ( (CALL $19($4, ($4 + [152]), [8]) == 0) ){ goto $label$79 }
	$2 = *($1 + [108])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$80 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($4 + [96]), $9)
	*(($1 + [108])) = $2
	
.LABEL $label$80
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$79
	*($4 + [152]) = *(($1 + [40]))
	if ( (CALL $19($22, ($4 + [152]), [8]) == 0) ){ goto $label$81 }
	$11 = ($1 + [112])
	$2 = *($11)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$82 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($4 + [96]), $9)
	*($11) = $2
	
.LABEL $label$82
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$81
	*($4 + [152]) = *($7)
	if ( (CALL $19($21, ($4 + [152]), [8]) == 0) ){ goto $label$83 }
	$11 = ($1 + [116])
	$2 = *($11)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$84 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($4 + [96]), $9)
	*($11) = $2
	
.LABEL $label$84
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$83
	*($4 + [152]) = *($8)
	if ( (CALL $19($14, ($4 + [152]), [8]) == 0) ){ goto $label$85 }
	$11 = ($1 + [120])
	$2 = *($11)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$86 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($4 + [96]), $9)
	*($11) = $2
	
.LABEL $label$86
	CALL db_idx64_update($2, (int_64)0, ($4 + [152]))
	
.LABEL $label$85
	$global$0 = ($4 + [208])
	return (unreachable)
	
.LABEL $label$8
	CALL $20(($4 + [80]))
	
.LABEL $label$7
	CALL $20(($4 + [48]))
	
.LABEL $label$6
	CALL $20(($4 + [96]))
	
.LABEL $label$5
	CALL $20(($4 + [32]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	*($4 + [23]) = $3
	*($4 + [24]) = $1
	CALL require_auth($1)
	$5 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [100]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$10
	if ( $9 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)7035937633859534848, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $26($5, $8)
	if ( ((int_32)*($9 + [100]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( (*($9 + [92]) == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	CALL eosio_assert([0], [8262])
	if ( (*([0] + [92]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( *($9 + [96]) ){ goto $label$3 }
	if ( (*($9 + [24]) <= [42]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8444])
	if ( (*($9 + [24]) <= [42]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8485])
	
.LABEL $label$1
	if ( ((int_64)*(( ($9 + [32]) ? ($9 + [40]) : ((int_64)*($9 + [80]) == (int_64)*($9 + [40])) )) == (int_64)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [8505])
	
.LABEL $label$11
	*($4 + [22]) = [5]
	$8 = *($9 + [12])
	if ( (*((*($8 + [60]) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [4]
	if ( (*((*($8 + [48]) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [3]
	if ( (*((*($8 + [36]) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [2]
	if ( (*((*($8 + [24]) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [1]
	if ( (*((*($8 + [12]) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [0]
	if ( (*((*($8) + $3)) == 0) ){ goto $label$12 }
	*($4 + [22]) = [255]
	CALL eosio_assert([0], [8526])
	
.LABEL $label$12
	*($4 + [12]) = $0
	*($4 + [4]) = ($4 + [23])
	*($4) = ($4 + [22])
	*($4 + [8]) = ($4 + [24])
	if ( $9 ){ goto $label$13 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$13
	CALL $46($5, $9, $4)
	$global$0 = ($4 + [32])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	$5 = *($1)
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10109])
	
.LABEL $label$3
	$6 = (int_64)
	*($1 + [8]) = $6(*($1 + [8]) - *($2)))
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10157])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10179])
	if ( ((int_64)$5 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9737])
	
.LABEL $label$4
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-8])
	CALL $62($4, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $3, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($4 + [16])
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8237])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $65($0, $1)
	CALL $67($0, $1)
	CALL $68($0, $1)
	CALL $69($0, $1)
	CALL $70($0, $1)
	CALL $71($0, $1)
	CALL $72($0, $1)
	CALL $73($0, $1)
	CALL $74($0, $1)
	CALL $75($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $76($0, $1)
	CALL $23([0])
	((int_64)$0 == (int_64)$1)
	((int_64)5031766159042707456 == (int_64)$2)
	((int_64)9015421515604164608 == (int_64)$2)
	((int_64)5614111572763869184 == (int_64)$2)
	((int_64)4851652721037541376 == (int_64)$2)
	((int_64)4730614992256270336 == (int_64)$2)
	((int_64)6714503360205329408 == (int_64)$2)
	((int_64)4921565116338877840 == (int_64)$2)
	((int_64)4923678922967265280 == (int_64)$2)
	((int_64)6714450526323743232 == (int_64)$2)
	((int_64)5378222255775068160 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
	((int_64)6138663591592764928 == (int_64)$1)
	((int_64)-3617168760277827584 == (int_64)$2)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

void .FUNC $16 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $17 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $75 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [20])) = $4
	*(($3 + [24])) = ($4 + $5)
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = (int_64)0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $4
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	CALL $32($3)
	CALL $66($3)
	$global$0 = ($3 + [112])
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $95(CALL $94($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9796])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $50 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$6 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$8
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $26($3, $6)
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$4
	if ( (*($7 + [92]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$7 = [0]
	CALL eosio_assert([0], [8262])
	if ( (*([0] + [92]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8418])
	
.LABEL $label$1
	CALL require_auth(*($7 + [32]))
	$6 = ($7 + [72])
	$8 = *($6)
	*((($2 + [48]) + [8])) = $8
	$9 = *($7 + [32])
	$1 = *($7 + [64])
	*(($2 + [8])) = $8
	*($2 + [48]) = $1
	*($2) = $1
	CALL $42($0, $9, $2)
	*((($2 + [16]) + [8])) = [0]
	*((($2 + [32]) + [8])) = *($6)
	*($2 + [16]) = (int_64)0
	*($2 + [32]) = *($7 + [64])
	$1 = *($7 + [32])
	$6 = CALL $18([8595])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$12 }
	*($2 + [16]) = ($6 << [1])
	$5 = (($2 + [16]) | [1])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$4 = (($6 + [16]) & [-16])
	$5 = CALL $8($4)
	*($2 + [16]) = ($4 | [1])
	*($2 + [24]) = $5
	*($2 + [20]) = $6
	
.LABEL $label$11
	CALL memcpy($5, [8595], $6)
	
.LABEL $label$10
	*(($5 + $6)) = [0]
	*((($2 + [64]) + [8])) = *((($2 + [32]) + [8]))
	*($2 + [104]) = $1
	*($2 + [64]) = *($2 + [32])
	*($2 + [80]) = (int_64)6138663591592764928
	$1 = *($0)
	*(($6 = CALL $8([16]))) = $1
	*($6 + [8]) = (int_64)3617214756542218240
	$5 = ($6 + [16])
	*((($2 + [80]) + [16])) = $5
	*(($4 = ($2 + [92]))) = $5
	*($2 + [88]) = $6
	CALL $51(($2 + [80]), $0, ($2 + [104]), ($2 + [64]), ($2 + [16]))
	$6 = *($2 + [88])
	if ( ($6 == 0) ){ goto $label$13 }
	*($4) = $6
	CALL $10($6)
	
.LABEL $label$13
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$14 }
	CALL $10(*($2 + [24]))
	
.LABEL $label$14
	if ( $7 ){ goto $label$15 }
	CALL eosio_assert([0], [9342])
	CALL eosio_assert([0], [9376])
	
.LABEL $label$15
	$6 = CALL db_next_i64(*($7 + [104]), ($2 + [80]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$16 }
	CALL $26($3, $6)
	
.LABEL $label$16
	CALL $28($3, $7)
	$global$0 = ($2 + [112])
	return (unreachable)
	
.LABEL $label$9
	CALL $20(($2 + [16]))
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [80])
	$global$0 = $5
	CALL $57(($5 + [8]), $0, $1, $2, $3, $4)
	*($5 + [56]) = [0]
	*($5 + [48]) = (int_64)0
	$2 = *($5 + [24])
	$1 = *(($5 + [28]))
	$3 = ($1 - $2)
	$6 = (CASTING uint_64)(uint_32 int_32($3 >> [4]))
	$0 = [16]
	
.LOOP $label$1:
	$0 = ($0 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$2 }
	$0 = (($3 & [-16]) + $0)
	
.LABEL $label$2
	$2 = *($5 + [36])
	$1 = *(($5 + [40]))
	$0 = (($0 + $1) - $2)
	$6 = (CASTING uint_64)(uint_32 ($1 - $2))
	
.LOOP $label$3:
	$0 = ($0 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $58(($5 + [48]), $0)
	$1 = *($5 + [52])
	$0 = *($5 + [48])
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	$0 = [0]
	
.LABEL $label$4
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = $1
	CALL $59(($5 + [64]), ($5 + [8]))
	$0 = *($5 + [48])
	CALL send_inline($0, (*($5 + [52]) - $0))
	$0 = *($5 + [48])
	if ( ($0 == 0) ){ goto $label$6 }
	*($5 + [52]) = $0
	CALL $10($0)
	
.LABEL $label$6
	$0 = *($5 + [36])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($5 + [40])) = $0
	CALL $10($0)
	
.LABEL $label$7
	$0 = *($5 + [24])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($5 + [28])) = $0
	CALL $10($0)
	
.LABEL $label$8
	$global$0 = ($5 + [80])
}

void .FUNC $52 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$9:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$8 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$7 }
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$10 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$10
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $26($3, $6)
	if ( ((int_32)*($7 + [100]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( (*($7 + [92]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = [0]
	CALL eosio_assert([0], [8262])
	if ( *([0] + [92]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8649])
	if ( *($7 + [96]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($7 + [96]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8675])
	
.LABEL $label$1
	if ( (*([0] + [8236]) == 0) ){ goto $label$12 }
	$6 = *([0] + [8232])
	goto $label$11 
	
.LABEL $label$12
	$1 = CALL $17()
	*([0] + [8236]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000))
	*([0] + [8232]) = $6
	
.LABEL $label$11
	if ( ((uint_32)$6 > (uint_32)(*($7 + [88]) + [86400])) ){ goto $label$13 }
	CALL eosio_assert([0], [8702])
	
.LABEL $label$13
	CALL require_auth(*($7 + [80]))
	$8 = *($7 + [80])
	CALL $53(($2 + [32]), $7)
	$9 = *($2 + [40])
	$1 = *($2 + [32])
	if ( ((int_64)$1 >= (int_64)2305843009213693952) ){ goto $label$15 }
	if ( ((int_64)$1 > (int_64)-2305843009213693952) ){ goto $label$14 }
	CALL eosio_assert([0], [9016])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8992])
	
.LABEL $label$14
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$6 = CALL $18([8726])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$16 }
	$1 = ((int_64)$1 << (int_64)1)
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$19 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$4 = (($6 + [16]) & [-16])
	$5 = CALL $8($4)
	*($2) = ($4 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$18
	CALL memcpy($5, [8726], $6)
	
.LABEL $label$17
	*(($5 + $6)) = [0]
	*($2 + [24]) = $9
	*($2 + [16]) = $1
	*($2 + [56]) = $8
	*($2 + [32]) = (int_64)6138663591592764928
	$1 = *($0)
	*(($6 = CALL $8([16]))) = $1
	*($6 + [8]) = (int_64)3617214756542218240
	$5 = ($6 + [16])
	*((($2 + [32]) + [16])) = $5
	*(($4 = ($2 + [44]))) = $5
	*($2 + [40]) = $6
	CALL $51(($2 + [32]), $0, ($2 + [56]), ($2 + [16]), $2)
	$6 = *($2 + [40])
	if ( ($6 == 0) ){ goto $label$20 }
	*($4) = $6
	CALL $10($6)
	
.LABEL $label$20
	if ( ((*($2) & [1]) == 0) ){ goto $label$21 }
	CALL $10(*($2 + [8]))
	
.LABEL $label$21
	if ( $7 ){ goto $label$22 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$22
	CALL $54($3, $7)
	$global$0 = ($2 + [64])
	return (unreachable)
	
.LABEL $label$16
	CALL $20($2)
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	float_64 $4
	int_64 $5
	$2 = *($1 + [64])
	$1 = CALL $18([8918])
	$3 = ($1 <= [8])
	$4 = ((float_64)(CASTING float_64)(int_64 $2) * (float_64)(float_64)0.9)
	if ( ((float_64)(float_64)|$4| < (float_64)(float_64)9223372036854775808) ){ goto $label$5 }
	$5 = (int_64)-9223372036854775808
	if ( ($3 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = (Rounds 0)($4)
	if ( $3 ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9110])
	goto $label$2 
	
.LABEL $label$3
	if ( $1 ){ goto $label$2 }
	$2 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$6:
	$3 = *(($1 + [8917]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9155])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($0 + [8]) = $2
	*($0) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$8 }
	CALL eosio_assert([0], [9041])
	
.LABEL $label$8
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$2 = $5
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$2 = $5
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$0 = ($1 + [1])
	$1 = $0
	if ( $3 ){ goto $label$13 }
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$10 }
	
.LABEL $label$11
	return 
	
.LABEL $label$9
	CALL eosio_assert([0], [9090])
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($3 + [16]) = *(($1 + [32]))
	*($3 + [24]) = *(($1 + [40]))
	$4 = ($1 + [92])
	*($3 + [32]) = *($4)
	$5 = ($1 + [96])
	*($3 + [40]) = *($5)
	$6 = *($1)
	if ( (*([0] + [8236]) == 0) ){ goto $label$4 }
	*($5) = *([0] + [8232])
	*($1 + [48]) = *($1 + [80])
	goto $label$3 
	
.LABEL $label$4
	$13 = CALL $17()
	*([0] + [8236]) = [1]
	*($1 + [48]) = *($1 + [80])
	$14 = (CASTING uint_32)(uint_64 ((int_64)$13 / (int_64)1000000))
	*([0] + [8232]) = $14
	*($5) = $14
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$7 = ($3 + [40])
	$8 = ($3 + [32])
	$9 = ($3 + [24])
	$10 = ($1 + [12])
	$12 = *($1 + [12])
	$11 = *(($1 + [16]))
	$13 = (CASTING uint_64)(uint_32 ((int_32)($11 - $12) / (int_32)[12]))
	$14 = [9]
	
.LOOP $label$5:
	$14 = ($14 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$6 }
	
.LOOP $label$7:
	$16 = *($12)
	$15 = *($12 + [4])
	$17 = ($15 - $16)
	$13 = (CASTING uint_64)(uint_32 $17)
	
.LOOP $label$8:
	$14 = ($14 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$8 }
	$14 = ( $14 ? ($17 + $14) : ((int_32)$16 == (int_32)$15) )
	$12 = ($12 + [12])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$7 }
	
.LABEL $label$6
	$12 = ($14 + [69])
	if ( ($12 <= [513]) ){ goto $label$10 }
	$14 = CALL $2($12)
	goto $label$9 
	
.LABEL $label$10
	$14 = ($2 - (($12 + [15]) & [-16]))
	$global$0 = $14
	
.LABEL $label$9
	*($3 + [4]) = $14
	*($3) = $14
	*($3 + [8]) = ($14 + $12)
	*($3 + [48]) = $3
	*($3 + [64]) = $10
	*($3 + [100]) = $4
	*($3 + [104]) = $5
	*($3 + [56]) = $1
	*($3 + [60]) = ($1 + [8])
	*($3 + [68]) = ($1 + [24])
	*($3 + [72]) = ($1 + [32])
	*($3 + [76]) = ($1 + [40])
	*($3 + [80]) = ($1 + [48])
	*($3 + [84]) = ($1 + [56])
	*($3 + [88]) = ($1 + [64])
	*($3 + [92]) = ($1 + [80])
	*($3 + [96]) = ($1 + [88])
	CALL $86(($3 + [56]), ($3 + [48]))
	CALL db_update_i64(*($1 + [104]), (int_64)0, $14, $12)
	if ( ($12 <= [513]) ){ goto $label$11 }
	CALL $3($14)
	
.LABEL $label$11
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($3 + [56]) = *(($1 + [32]))
	if ( (CALL $19(($3 + [16]), ($3 + [56]), [8]) == 0) ){ goto $label$13 }
	$14 = *($1 + [108])
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$14 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($3 + [48]), $6)
	*(($1 + [108])) = $14
	
.LABEL $label$14
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$13
	*($3 + [56]) = *(($1 + [40]))
	if ( (CALL $19($9, ($3 + [56]), [8]) == 0) ){ goto $label$15 }
	$12 = ($1 + [112])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$16 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$16
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$15
	*($3 + [56]) = *($4)
	if ( (CALL $19($8, ($3 + [56]), [8]) == 0) ){ goto $label$17 }
	$12 = ($1 + [116])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$18 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$18
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$17
	*($3 + [56]) = *($5)
	if ( (CALL $19($7, ($3 + [56]), [8]) == 0) ){ goto $label$19 }
	$12 = ($1 + [120])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$20 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$20
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$19
	$global$0 = ($3 + [112])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_upperbound(*($2), *($2 + [8]), (int_64)7035937633859534851, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $26($7, CALL $fimport$13(*($7), *($7 + [8]), (int_64)7035937633859534848, $6))
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$2
	*(($4 + [120])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($4 + [16]) = *(($1 + [32]))
	*($4 + [24]) = *(($1 + [40]))
	$5 = ($1 + [92])
	*($4 + [32]) = *($5)
	$6 = ($1 + [96])
	*($4 + [40]) = *($6)
	$7 = *($1)
	if ( (*([0] + [8236]) == 0) ){ goto $label$4 }
	*($6) = *([0] + [8232])
	*($1 + [48]) = *(*($2))
	goto $label$3 
	
.LABEL $label$4
	$14 = CALL $17()
	*([0] + [8236]) = [1]
	$13 = (CASTING uint_32)(uint_64 ((int_64)$14 / (int_64)1000000))
	*([0] + [8232]) = $13
	*($6) = $13
	*($1 + [48]) = *(*($2))
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$8 = ($4 + [40])
	$9 = ($4 + [32])
	$10 = ($4 + [24])
	$11 = ($1 + [12])
	$13 = *($1 + [12])
	$12 = *(($1 + [16]))
	$14 = (CASTING uint_64)(uint_32 ((int_32)($12 - $13) / (int_32)[12]))
	$2 = [9]
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$6 }
	
.LOOP $label$7:
	$16 = *($13)
	$15 = *($13 + [4])
	$17 = ($15 - $16)
	$14 = (CASTING uint_64)(uint_32 $17)
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$8 }
	$2 = ( $2 ? ($17 + $2) : ((int_32)$16 == (int_32)$15) )
	$13 = ($13 + [12])
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$7 }
	
.LABEL $label$6
	$13 = ($2 + [69])
	if ( ($13 <= [513]) ){ goto $label$10 }
	$2 = CALL $2($13)
	goto $label$9 
	
.LABEL $label$10
	$2 = ($3 - (($13 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$9
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($2 + $13)
	*($4 + [48]) = $4
	*($4 + [64]) = $11
	*($4 + [100]) = $5
	*($4 + [104]) = $6
	*($4 + [56]) = $1
	*($4 + [60]) = ($1 + [8])
	*($4 + [68]) = ($1 + [24])
	*($4 + [72]) = ($1 + [32])
	*($4 + [76]) = ($1 + [40])
	*($4 + [80]) = ($1 + [48])
	*($4 + [84]) = ($1 + [56])
	*($4 + [88]) = ($1 + [64])
	*($4 + [92]) = ($1 + [80])
	*($4 + [96]) = ($1 + [88])
	CALL $86(($4 + [56]), ($4 + [48]))
	CALL db_update_i64(*($1 + [104]), (int_64)0, $2, $13)
	if ( ($13 <= [513]) ){ goto $label$11 }
	CALL $3($2)
	
.LABEL $label$11
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($4 + [56]) = *(($1 + [32]))
	if ( (CALL $19(($4 + [16]), ($4 + [56]), [8]) == 0) ){ goto $label$13 }
	$2 = *($1 + [108])
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($4 + [48]), $7)
	*(($1 + [108])) = $2
	
.LABEL $label$14
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$13
	*($4 + [56]) = *(($1 + [40]))
	if ( (CALL $19($10, ($4 + [56]), [8]) == 0) ){ goto $label$15 }
	$13 = ($1 + [112])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$16 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($4 + [48]), $7)
	*($13) = $2
	
.LABEL $label$16
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$15
	*($4 + [56]) = *($5)
	if ( (CALL $19($9, ($4 + [56]), [8]) == 0) ){ goto $label$17 }
	$13 = ($1 + [116])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$18 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($4 + [48]), $7)
	*($13) = $2
	
.LABEL $label$18
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$17
	*($4 + [56]) = *($6)
	if ( (CALL $19($8, ($4 + [56]), [8]) == 0) ){ goto $label$19 }
	$13 = ($1 + [120])
	$2 = *($13)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$20 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($4 + [48]), $7)
	*($13) = $2
	
.LABEL $label$20
	CALL db_idx64_update($2, (int_64)0, ($4 + [56]))
	
.LABEL $label$19
	$global$0 = ($4 + [112])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [56]) = [0]
	*($6 + [48]) = (int_64)0
	$7 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($7)
	*((($6 + [48]) + [8])) = ($7 + ($8 << [4]))
	*($6 + [48]) = $7
	*($6 + [52]) = $7
	$9 = *(($1 + [8]))
	$8 = (*(($1 + [12])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $9, $8)
	*($6 + [52]) = ($7 + $8)
	
.LABEL $label$2
	$10 = *($1)
	*(($6 + [24])) = *(($4 + [8]))
	*($6) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16]) = *($4)
	$1 = CALL $21(($6 + [32]), $5)
	*($0 + [8]) = (int_64)-3617168760277827584
	*($0) = $10
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($0 + [16]) = *($6 + [48])
	*(($0 + [24])) = *((($6 + [48]) + [8]))
	*($6 + [48]) = [0]
	*($6 + [52 align=4]) = (int_64)0
	$1 = *($1)
	$4 = ( *(($6 + [36])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [32])
	$10 = (CASTING uint_64)(uint_32 $4)
	$4 = ($0 + [28])
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $58($4, $1)
	$4 = *(($0 + [32]))
	$1 = *(($0 + [28]))
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$1 = [0]
	
.LABEL $label$4
	*($6 + [68]) = $1
	*($6 + [64]) = $1
	*($6 + [72]) = $4
	*($6 + [80]) = ($6 + [64])
	*($6 + [88]) = $6
	CALL $92(($6 + [88]), ($6 + [80]))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $10(*(($6 + [40])))
	
.LABEL $label$6
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$7 }
	*($6 + [52]) = $1
	CALL $10($1)
	
.LABEL $label$7
	$global$0 = ($6 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $16(($6 + [48]))
}

int_32 .FUNC $35 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [9376])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [120]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7035937633859534851, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [120])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9554])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7035937633859534848, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $26($7, $2)
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$4
	*(($4 + [120])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9208])
	
.LABEL $label$5
	$5 = CALL $2($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $8([40])
	$6 = CALL $84($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [28])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $63(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $10($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9406])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9451])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$8 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$9:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	$11 = [-24]
	$12 = ($6 + [-24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $3
	
.LABEL $label$6
	CALL eosio_assert([0], [9501])
	$11 = [-24]
	$12 = ($6 + [-24])
	$5 = *($4)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$9 = *($6)
	*($6) = [0]
	$4 = *($12)
	*($12) = $9
	if ( ($4 == 0) ){ goto $label$11 }
	$3 = *($4 + [12])
	if ( ($3 == 0) ){ goto $label$12 }
	$13 = ($4 + [16])
	$10 = *($13)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = ($10 + [-12])
	$8 = *($9)
	if ( ($8 == 0) ){ goto $label$16 }
	*(($10 + [-8])) = $8
	CALL $10($8)
	
.LABEL $label$16
	$10 = $9
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$15 }
	$9 = *(($4 + [12]))
	goto $label$13 
	
.LABEL $label$14
	$9 = $3
	
.LABEL $label$13
	*($13) = $3
	CALL $10($9)
	
.LABEL $label$12
	CALL $10($4)
	
.LABEL $label$11
	*($12 + [8]) = *($6 + [8])
	*(($12 + [16])) = *(($6 + [16]))
	$12 = ($12 + [24])
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$17:
	$6 = ($6 + $11)
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	$3 = *($4 + [12])
	if ( ($3 == 0) ){ goto $label$19 }
	$5 = ($4 + [16])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$21 }
	
.LOOP $label$22:
	$9 = ($10 + [-12])
	$8 = *($9)
	if ( ($8 == 0) ){ goto $label$23 }
	*(($10 + [-8])) = $8
	CALL $10($8)
	
.LABEL $label$23
	$10 = $9
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$22 }
	$9 = *(($4 + [12]))
	goto $label$20 
	
.LABEL $label$21
	$9 = $3
	
.LABEL $label$20
	*($5) = $3
	CALL $10($9)
	
.LABEL $label$19
	CALL $10($4)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$12) ){ goto $label$17 }
	
.LABEL $label$3
	*(($0 + [28])) = $12
	CALL db_remove_i64(*($1 + [104]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $85(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	$global$0 = ($2 + [16])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL require_auth($2)
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$8 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($8 + [100]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$10
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $26($4, $7)
	if ( ((int_32)*($8 + [100]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( (*($8 + [92]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	CALL eosio_assert([0], [8262])
	if ( *([0] + [92]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8649])
	if ( *($8 + [96]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($8 + [96]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8675])
	
.LABEL $label$1
	$7 = ($8 + [32])
	$1 = $2
	$9 = *($8 + [32])
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$11 }
	$1 = $9
	if ( ((int_64)*($8 + [40]) == (int_64)$2) ){ goto $label$11 }
	CALL eosio_assert([0], [8785])
	$1 = *($7)
	
.LABEL $label$11
	$2 = *(( ($8 + [40]) ? $7 : ((int_64)$1 == (int_64)$2) ))
	*($3 + [24]) = $2
	CALL $53(($3 + [48]), $8)
	$9 = *($3 + [56])
	$1 = *($3 + [48])
	if ( ((int_64)$1 >= (int_64)2305843009213693952) ){ goto $label$13 }
	if ( ((int_64)$1 > (int_64)-2305843009213693952) ){ goto $label$12 }
	CALL eosio_assert([0], [9016])
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [8992])
	
.LABEL $label$12
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$7 = CALL $18([8811])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$14 }
	$1 = ((int_64)$1 << (int_64)1)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$17 }
	*($3 + [8]) = ($7 << [1])
	$6 = (($3 + [8]) | [1])
	if ( $7 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $8($5)
	*($3 + [8]) = ($5 | [1])
	*($3 + [16]) = $6
	*($3 + [12]) = $7
	
.LABEL $label$16
	CALL memcpy($6, [8811], $7)
	
.LABEL $label$15
	*(($6 + $7)) = [0]
	*($3 + [40]) = $9
	*($3 + [32]) = $1
	*($3 + [72]) = $2
	*($3 + [48]) = (int_64)6138663591592764928
	$1 = *($0)
	*(($7 = CALL $8([16]))) = $1
	*($7 + [8]) = (int_64)3617214756542218240
	$6 = ($7 + [16])
	*((($3 + [48]) + [16])) = $6
	*(($5 = ($3 + [60]))) = $6
	*($3 + [56]) = $7
	CALL $51(($3 + [48]), $0, ($3 + [72]), ($3 + [32]), ($3 + [8]))
	$7 = *($3 + [56])
	if ( ($7 == 0) ){ goto $label$18 }
	*($5) = $7
	CALL $10($7)
	
.LABEL $label$18
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$19 }
	CALL $10(*($3 + [16]))
	
.LABEL $label$19
	*($3 + [48]) = ($3 + [24])
	if ( $8 ){ goto $label$20 }
	CALL eosio_assert([0], [9605])
	
.LABEL $label$20
	CALL $56($4, $8, ($3 + [48]))
	$global$0 = ($3 + [80])
	return (unreachable)
	
.LABEL $label$14
	CALL $20(($3 + [8]))
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $20 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $23 (int_32 $0)
{
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $25 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [64])
	$global$0 = $1
	*(($1 + [48])) = [0]
	*($1 + [32]) = (int_64)-1
	$2 = *($0)
	*($1 + [16]) = $2
	*($1 + [24]) = $2
	*($1 + [40]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($1 + [24])
	
.LOOP $label$2:
	CALL $29(($1 + [16]), $0)
	*($1 + [12]) = [0]
	*($1 + [8]) = ($1 + [16])
	$2 = *(CALL $30(($1 + [8])))
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$3 }
	CALL eosio_assert([0], [9342])
	CALL eosio_assert([0], [9376])
	
.LABEL $label$3
	$4 = CALL db_next_i64(*($0 + [28]), ($1 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $29((CASTING uint_32)(uint_64 $2), $4)
	
.LABEL $label$4
	CALL $31(($1 + [16]), $0)
	$0 = CALL db_lowerbound_i64(*($1 + [16]), *($3), (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$2 }
	$3 = *($1 + [40])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($1 + [44])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $10($4)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($5) = $3
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($1 + [64])
}

void .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = ($global$0 - [64])
	$global$0 = $1
	*(($1 + [48])) = (int_64)0
	*($1 + [32]) = (int_64)-1
	*($1 + [40]) = (int_64)0
	$2 = *($0)
	*($1 + [16]) = $2
	*($1 + [24]) = $2
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($1 + [24])
	
.LOOP $label$2:
	CALL $26(($1 + [16]), $0)
	*($1 + [12]) = [0]
	*($1 + [8]) = ($1 + [16])
	$2 = *(CALL $27(($1 + [8])))
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$3 }
	CALL eosio_assert([0], [9342])
	CALL eosio_assert([0], [9376])
	
.LABEL $label$3
	$4 = CALL db_next_i64(*($0 + [104]), ($1 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $26((CASTING uint_32)(uint_64 $2), $4)
	
.LABEL $label$4
	CALL $28(($1 + [16]), $0)
	$0 = CALL db_lowerbound_i64(*($1 + [16]), *($3), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$2 }
	$5 = *($1 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($1 + [44])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	$9 = *($8 + [12])
	if ( ($9 == 0) ){ goto $label$9 }
	$10 = ($8 + [16])
	$4 = *($10)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($4 + [-12])
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($4 + [-8])) = $3
	CALL $10($3)
	
.LABEL $label$13
	$4 = $0
	if ( ((int_32)$9 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($8 + [12]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $9
	
.LABEL $label$10
	*($10) = $9
	CALL $10($0)
	
.LABEL $label$9
	CALL $10($8)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$7 }
	$0 = *(($1 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($1 + [64])
}

int_32 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [104]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9294])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7035937633859534848)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9240])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9240])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $26(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9208])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([128])) + [20]) = [0]
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [100]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [12])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [48])
	*($3 + [68]) = ($5 + [56])
	*($3 + [72]) = ($5 + [64])
	*($3 + [76]) = ($5 + [80])
	*($3 + [80]) = ($5 + [88])
	*($3 + [84]) = ($5 + [92])
	*($3 + [88]) = ($5 + [96])
	CALL $79(($3 + [40]), ($3 + [32]))
	*($5 + [104]) = $1
	*($5 + [108 align=4]) = (int_64)-1
	*($5 + [116 align=4]) = (int_64)-1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$6 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	$2 = *($6 + [12])
	if ( ($2 == 0) ){ goto $label$11 }
	$8 = ($6 + [16])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($4 + [-12])
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$15 }
	*(($4 + [-8])) = $0
	CALL $10($0)
	
.LABEL $label$15
	$4 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($6 + [12]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $2
	
.LABEL $label$12
	*($8) = $2
	CALL $10($1)
	
.LABEL $label$11
	CALL $10($6)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $69 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9235])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $47(($3 + [8]), *($3 + [120]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $68 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [128]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$7
	CALL memcpy(($3 + [127]), $5, [1])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [17])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $45(($3 + [8]), *($3 + [136]), *($3 + [128]), *($3 + [127]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [144])
}

void .FUNC $65 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $5, [8])
	*($3 + [152]) = (int_64)0
	*($3 + [144]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$7
	CALL memcpy(($3 + [144]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$8
	$6 = ($2 + $4)
	CALL memcpy(($3 + [32]), $5, [8])
	*((($3 + [144]) + [8])) = *($3 + [32])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$9
	CALL memcpy(($3 + [32]), $5, [1])
	$4 = *($3 + [32])
	*(($3 + [56])) = $6
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = (int_64)0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [33])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	$0 = *($3 + [168])
	$1 = *($3 + [160])
	$7 = *((($3 + [144]) + [8]))
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	$7 = *($3 + [144])
	*($3) = $7
	*($3 + [16]) = $7
	CALL $38(($3 + [32]), $0, $1, $3, ((int_32)$4 != (int_32)[0]))
	CALL $66(($3 + [32]))
	$global$0 = ($3 + [176])
}

void .FUNC $64 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$5 = ($global$0 - [32])
	$global$0 = $5
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	$6 = CALL $18([8918])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9110])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$2 = (int_64)0
	
.LOOP $label$7:
	$7 = *(($6 + [8917]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9155])
	
.LABEL $label$8
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	if ( ((int_64)*($3 + [8]) == (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4)) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_64)*($3 + [8]) == (int_64)4) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8922])
	
.LABEL $label$2
	if ( ((int_64)*($3) > (int_64)999) ){ goto $label$9 }
	CALL eosio_assert([0], [8940])
	
.LABEL $label$9
	$8 = *(($3 + [8]))
	*((($5 + [16]) + [8])) = $8
	$2 = *($3)
	*(($5 + [8])) = $8
	*($5 + [16]) = $2
	*($5) = $2
	CALL $60($0, $1, $5)
	
.LABEL $label$1
	$global$0 = ($5 + [32])
}

void .FUNC $67 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [128]), $5, [8])
	*($3 + [120]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$7
	CALL memcpy(($3 + [120]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $41(($3 + [8]), *($3 + [136]), *($3 + [128]), *($3 + [120]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [144])
}

int_32 .FUNC $66 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $10($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [96]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $10($3)
	
.LABEL $label$1
	$5 = *(($0 + [56]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($0 + [60])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	$2 = *($8 + [12])
	if ( ($2 == 0) ){ goto $label$11 }
	$9 = ($8 + [16])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($4 + [-12])
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$15 }
	*(($4 + [-8])) = $1
	CALL $10($1)
	
.LABEL $label$15
	$4 = $3
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($8 + [12]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $2
	
.LABEL $label$12
	*($9) = $2
	CALL $10($3)
	
.LABEL $label$11
	CALL $10($8)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$9 }
	$3 = *(($0 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $10($3)
	
.LABEL $label$6
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	$5 = *($1)
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10227])
	
.LABEL $label$3
	$6 = ((int_64)*($1 + [8]) + (int_64)*($2))
	*($1 + [8]) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10270])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10289])
	if ( ((int_64)$5 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9737])
	
.LABEL $label$4
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($2 + [-8])
	CALL $62($4, $1)
	CALL db_update_i64(*($1 + [28]), (int_64)0, $3, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($4 + [16])
}

void .FUNC $60 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $29($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$2
	*($3 + [16]) = $2
	CALL $61($4, $8, ($3 + [16]))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$9 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [72]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9802])
	
.LABEL $label$6
	*(($5 = CALL $8([40]))) = (int_64)0
	$7 = CALL $18([8918])
	if ( ($7 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [9110])
	goto $label$9 
	
.LABEL $label$10
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	$10 = (int_64)0
	
.LOOP $label$11:
	$6 = *(($7 + [8917]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [9155])
	
.LABEL $label$12
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$11 }
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)4)
	goto $label$7 
	
.LABEL $label$8
	$10 = (int_64)4
	
.LABEL $label$7
	*($5 + [16]) = $10
	*($5 + [8]) = (int_64)0
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$11 = ($5 + [8])
	$7 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$10 = $12
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	$10 = $12
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $6 ){ goto $label$17 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [9090])
	
.LABEL $label$13
	*($5 + [24]) = $4
	*($5) = $1
	*($11) = *($2)
	*(($11 + [8])) = *(($2 + [8]))
	*($3 + [56]) = (($3 + [16]) + [24])
	*($3 + [52]) = ($3 + [16])
	*($3 + [48]) = ($3 + [16])
	CALL $62(($3 + [48]), $5)
	$10 = *($5)
	$6 = CALL db_store_i64(*(($0 + [80])), (int_64)3607749779137757184, $9, $10, ($3 + [16]), [24])
	*($5 + [28]) = $6
	$7 = ($0 + [88])
	if ( (uint_64)($10 <= *($7)) ){ goto $label$18 }
	*($7) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*($3 + [48]) = $5
	$10 = *($5)
	*($3 + [16]) = $10
	*($3 + [12]) = $6
	$8 = ($0 + [100])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [104]))) ){ goto $label$21 }
	*($7 + [8]) = $10
	*($7 + [16]) = $6
	*($3 + [48]) = [0]
	*($7) = $5
	*($8) = ($7 + [24])
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( $7 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $63(($0 + [96]), ($3 + [48]), ($3 + [16]), ($3 + [12]))
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $10($7)
	
.LABEL $label$19
	$global$0 = ($3 + [64])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9796])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$4 = ($1 + [8])
	CALL memcpy($3, $1, [8])
	$5 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $5
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$5 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*(($0 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9796])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $10($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL $8($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $16($0)
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[12])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[12])) ){ goto $label$8 }
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = *($0 + [4])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$9:
	$4 = ($6 + [-12])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$10 }
	*(($6 + [-8])) = $7
	CALL $10($7)
	
.LABEL $label$10
	$6 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	$4 = *($0)
	goto $label$6 
	
.LABEL $label$8
	$7 = ((int_32)(*($0 + [4]) - $5) / (int_32)[12])
	$4 = ($1 + ((int_32)$7 * (int_32)[12]))
	$6 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$13 }
	CALL $89($5, *($1), *(($1 + [4])))
	
.LABEL $label$13
	$5 = ($5 + [12])
	$1 = ($1 + [12])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$14 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$15:
	*($1) = (int_64)0
	*($1 + [8]) = [0]
	$7 = ($4 + [4])
	$5 = (*($7) - *($4))
	if ( ($5 == 0) ){ goto $label$16 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL $8($5)
	*(($3 = ($1 + [4]))) = $6
	*(($1 + [8])) = ($6 + $5)
	*($1) = $6
	$5 = *($4)
	$1 = (*($7) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($6, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$16
	$1 = (*($0) + [12])
	*($0) = $1
	$4 = ($4 + [12])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$15 }
	goto $label$4 
	
.LABEL $label$14
	$2 = ($0 + [4])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$18:
	$1 = ($4 + [-12])
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$19 }
	*(($4 + [-8])) = $6
	CALL $10($6)
	
.LABEL $label$19
	$4 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$18 }
	
.LABEL $label$17
	*($2) = $5
	return (unreachable)
	
.LABEL $label$7
	$4 = $5
	
.LABEL $label$6
	*(($0 + [4])) = $5
	CALL $10($4)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[357913942]) ){ goto $label$1 }
	$5 = [357913941]
	$4 = ((int_32)$4 / (int_32)[12])
	if ( ((uint_32)$4 > (uint_32)[178956969]) ){ goto $label$20 }
	$5 = ($4 << [1])
	$5 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$20
	$4 = ((int_32)$5 * (int_32)[12])
	$5 = CALL $8($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$21:
	*($5) = (int_64)0
	*($5 + [8]) = [0]
	$7 = ($1 + [4])
	$4 = (*($7) - *($1))
	if ( ($4 == 0) ){ goto $label$22 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL $8($4)
	*(($3 = ($5 + [4]))) = $6
	*(($5 + [8])) = ($6 + $4)
	*($5) = $6
	$4 = *($1)
	$5 = (*($7) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$22 }
	CALL memcpy($6, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$22
	$5 = (*($5) + [12])
	*(($5 = ($0 + [4]))) = $5
	$1 = ($1 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$21 }
	
.LABEL $label$4
	return (unreachable)
	
.LABEL $label$3
	CALL $16($5)
	
.LABEL $label$2
	CALL $16($1)
	
.LABEL $label$1
	CALL $16($0)
	(unreachable)
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9796])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [1])
	$4 = (*($7) + [1])
	*($7) = $4
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [6]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, ($2 + [6]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$6 = *($0 + [8])
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*($6 + [4]) - *($6)) / (int_32)[12]))
	$5 = *($1)
	$4 = *($5 + [4])
	$8 = ($5 + [8])
	
.LOOP $label$3:
	$3 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$9 = ((int_64)$7) != (int_64)0
	*($2 + [7]) = (($9) << [7]) | ($3 & [127]))
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9796])
	$4 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [7]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($5 + [4]))) = $4
	if ( $9 ){ goto $label$3 }
	$3 = *(($6 + [4]))
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $87($5, $4)
	$4 = ($4 + [12])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$15 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$16 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$16
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$17 }
	CALL eosio_assert([0], [9796])
	$5 = *(($4 + [4]))
	
.LABEL $label$17
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *($7 + [108])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)7035937633859534848, ($5 + [8]), *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($8)
	
.LABEL $label$1
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [112]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)7035937633859534849, ($5 + [8]), *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($8)
	
.LABEL $label$3
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [116]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)7035937633859534850, ($5 + [8]), *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($8)
	
.LABEL $label$5
	$8 = *($0)
	$6 = *($8 + [4])
	$0 = *(($6 + [120]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($8)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($5 + [8]), *($6))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($0)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0) = (int_64)0
	$4 = CALL $18([8918])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9110])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($4 + [8917]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9155])
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$5 = (int_64)4
	
.LABEL $label$1
	*($0 + [8]) = (int_64)0
	*(($0 + [16])) = $5
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$5 = $7
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$5 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $6 ){ goto $label$11 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9090])
	
.LABEL $label$7
	*($0 + [24]) = $1
	$6 = *($4 + [4])
	$4 = *($2 + [4])
	if ( ((uint_32)(*($4 + [8]) - $6) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9235])
	$6 = *(($4 + [4]))
	
.LABEL $label$12
	$1 = ($0 + [8])
	CALL memcpy($0, $6, [8])
	$8 = (*($6) + [8])
	*(($6 = ($4 + [4]))) = $8
	if ( ((uint_32)(*(($4 + [8])) - $8) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9235])
	$8 = *($6)
	
.LABEL $label$13
	CALL memcpy($1, $8, [8])
	$8 = (*($6) + [8])
	*($6) = $8
	*($3 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $8) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9235])
	$8 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy(($3 + [8]), $8, [8])
	*(($0 + [16])) = *($3 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	$global$0 = ($3 + [16])
	return $0
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $16($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9231])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = ($5 - $7)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $83($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + $2)
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [9235])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [1])
	$2 = (*($6) + [1])
	*($6) = $2
	$7 = ($7 + [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[12])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $8(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[12]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $16($0)
	
.LABEL $label$1
	$5 = ($2 + ((int_32)$6 * (int_32)[12]))
	$3 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$7 = ($3 + ((int_32)$1 * (int_32)[12]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	*(($4 = ($3 + [-12]))) = (int_64)0
	*(($3 = ($3 + [-4]))) = [0]
	$6 = ($1 + [-12])
	*($4) = *($6)
	$1 = ($1 + [-4])
	*($3) = *($1)
	*($1) = [0]
	*($6) = (int_64)0
	$3 = $4
	$1 = $6
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	$3 = $4
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $3
	*(($0 + [4])) = $7
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($2 + [-12])
	$3 = *($6)
	if ( ($3 == 0) ){ goto $label$13 }
	*(($2 + [-8])) = $3
	CALL $10($3)
	
.LABEL $label$13
	$2 = $6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $10($1)
	
.LABEL $label$14
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9231])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[12])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $81($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($5 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($7 + [-12])
	$6 = *($2)
	if ( ($6 == 0) ){ goto $label$9 }
	*(($7 + [-8])) = $6
	CALL $10($6)
	
.LABEL $label$9
	$7 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $5
	$7 = $5
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$10:
	CALL $82($0, $2)
	$2 = ($2 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

void .FUNC $72 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9235])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $52(($3 + [8]), *($3 + [120]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $73 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [20])) = $4
	*(($3 + [24])) = ($4 + $5)
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = (int_64)0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $4
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	CALL require_auth($0)
	CALL $24($3)
	CALL $25($3)
	CALL $66($3)
	$global$0 = ($3 + [112])
}

void .FUNC $70 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9235])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $50(($3 + [8]), *($3 + [120]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $71 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9235])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [112]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	
.LABEL $label$6
	CALL memcpy(($3 + [112]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = (int_64)0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	CALL $55($3, *($3 + [120]), *($3 + [112]))
	CALL $66($3)
	$global$0 = ($3 + [128])
}

void .FUNC $76 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [212]) = $2
	*($3 + [208]) = $2
	$5 = ($2 + $4)
	*($3 + [216]) = $5
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [192]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	$5 = *((($3 + [208]) + [8]))
	$2 = *($3 + [212])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [184]) = (int_64)0
	*($3 + [176]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9235])
	$5 = *(($3 + [216]))
	$2 = *($3 + [212])
	
.LABEL $label$7
	CALL memcpy(($3 + [176]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [212]) = $2
	*($3 + [48]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9235])
	$2 = *($3 + [212])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $2, [8])
	*(($5 = (($3 + [176]) + [8]))) = *($3 + [48])
	*($3 + [212]) = ($2 + [8])
	*($3 + [168]) = [0]
	*($3 + [160]) = (int_64)0
	CALL $77(($3 + [208]), ($3 + [160]))
	*(($2 = (($3 + [32]) + [8]))) = *((($3 + [208]) + [8]))
	*($3 + [32]) = *($3 + [208])
	$2 = *($2)
	*((($3 + [224]) + [8])) = $2
	*(($4 = (($3 + [240]) + [8]))) = $2
	$6 = *($3 + [32])
	*($3 + [240]) = $6
	*($3 + [224]) = $6
	$2 = *($4)
	*((($3 + [256]) + [8])) = $2
	*(($3 + [72])) = $2
	*($3 + [48]) = $0
	*($3 + [56]) = $1
	$1 = *($3 + [240])
	*($3 + [64]) = $1
	*($3 + [256]) = $1
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	$0 = *($5)
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [176])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $64(($3 + [48]), *($3 + [200]), *($3 + [192]), $3, $3)
	CALL $66(($3 + [48]))
	if ( ((*($3 + [160]) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($3 + [168])))
	
.LABEL $label$9
	$global$0 = ($3 + [272])
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $78($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $22($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $22($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $20($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $74 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [120])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [120])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9235])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	CALL $36(($3 + [8]), *($3 + [120]))
	CALL $66(($3 + [8]))
	$global$0 = ($3 + [128])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [48]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [32])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [40])), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $26($8, $9)
	*($3 + [28]) = [0]
	*($3 + [24]) = $8
	$7 = *(*(CALL $27(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [48])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9853])
	$7 = *(($6 + [48]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [48])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [32]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [72])) = *(($6 + [8]))
	*($1 + [64]) = *($6)
	$6 = *($5 + [12])
	*($1 + [8]) = *($6)
	if ( *($6) ){ goto $label$5 }
	*($1 + [40]) = *(*($5 + [16]))
	
.LABEL $label$5
	*(($6 = CALL $8([7]))) = [0]
	*($6 + [4 align=1]) = [0]
	*($6 + [6]) = [0]
	*(($5 = CALL $8([72])) + [8]) = [0]
	*($5) = (int_64)0
	$8 = CALL $8([7])
	*($5) = $8
	*($5 + [4]) = $8
	*($5 + [8]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [12 align=4]) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [4]) = (*($5 + [4]) + [7])
	$8 = CALL $8([7])
	*($5 + [12]) = $8
	*($5 + [16]) = $8
	*($5 + [20]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [16]) = (*($5 + [16]) + [7])
	$8 = CALL $8([7])
	*($5 + [24]) = $8
	*($5 + [28]) = $8
	*($5 + [32]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [36 align=4]) = (int_64)0
	*($5 + [44]) = [0]
	*($5 + [28]) = (*($5 + [28]) + [7])
	$8 = CALL $8([7])
	*($5 + [36]) = $8
	*($5 + [40]) = $8
	*($5 + [44]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [40]) = (*($5 + [40]) + [7])
	$8 = CALL $8([7])
	*($5 + [48]) = $8
	*($5 + [52]) = $8
	*($5 + [56]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [60 align=4]) = (int_64)0
	*($5 + [68]) = [0]
	*($5 + [52]) = (*($5 + [52]) + [7])
	$8 = CALL $8([7])
	*($5 + [60]) = $8
	*($5 + [64]) = $8
	*($5 + [68]) = ($8 + [7])
	CALL memcpy($8, $6, [7])
	*($5 + [64]) = (*($5 + [64]) + [7])
	$8 = ($5 + [72])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL $10($6)
	
.LABEL $label$6
	$10 = ($1 + [12])
	CALL $88($10, $5, $8)
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = *($5 + [60])
	if ( ($6 == 0) ){ goto $label$8 }
	*($5 + [64]) = $6
	CALL $10($6)
	
.LABEL $label$8
	$6 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$9 }
	*($5 + [52]) = $6
	CALL $10($6)
	
.LABEL $label$9
	$6 = *($5 + [36])
	if ( ($6 == 0) ){ goto $label$10 }
	*($5 + [40]) = $6
	CALL $10($6)
	
.LABEL $label$10
	$6 = *($5 + [24])
	if ( ($6 == 0) ){ goto $label$11 }
	*($5 + [28]) = $6
	CALL $10($6)
	
.LABEL $label$11
	$6 = *($5 + [12])
	if ( ($6 == 0) ){ goto $label$12 }
	*($5 + [16]) = $6
	CALL $10($6)
	
.LABEL $label$12
	$6 = *($5)
	if ( ($6 == 0) ){ goto $label$13 }
	*($5 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$13
	CALL $10($5)
	
.LABEL $label$7
	$11 = ($1 + [8])
	$12 = ($1 + [64])
	$6 = *($1 + [12])
	$13 = *(($1 + [16]))
	$7 = (CASTING uint_64)(uint_32 ((int_32)($13 - $6) / (int_32)[12]))
	$5 = [9]
	
.LOOP $label$14:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$14 }
	if ( ((int_32)$6 == (int_32)$13) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = *($6)
	$8 = *($6 + [4])
	$14 = ($8 - $9)
	$7 = (CASTING uint_64)(uint_32 $14)
	
.LOOP $label$17:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$17 }
	$5 = ( $5 ? ($14 + $5) : ((int_32)$9 == (int_32)$8) )
	$6 = ($6 + [12])
	if ( ((int_32)$6 != (int_32)$13) ){ goto $label$16 }
	
.LABEL $label$15
	$6 = ($5 + [69])
	if ( ($6 <= [513]) ){ goto $label$19 }
	$5 = CALL $2($6)
	goto $label$18 
	
.LABEL $label$19
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$18
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	*($3 + [16]) = $3
	*($3 + [28]) = $11
	*($3 + [24]) = $1
	*($3 + [32]) = $10
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	*($3 + [48]) = ($1 + [48])
	*($3 + [52]) = ($1 + [56])
	*($3 + [56]) = $12
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [88])
	*($3 + [68]) = ($1 + [92])
	*($3 + [72]) = ($1 + [96])
	CALL $86(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [104]) = CALL db_store_i64(*($4 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $7, $5, $6)
	if ( ($6 <= [513]) ){ goto $label$20 }
	CALL $3($5)
	
.LABEL $label$20
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$21 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$5 = ($4 + [8])
	$7 = *($5)
	$6 = *(($0 + [8]))
	$15 = *($6)
	$16 = *($1)
	*($3 + [24]) = *(($1 + [32]))
	*($1 + [108]) = CALL db_idx64_store($7, (int_64)7035937633859534848, $15, $16, ($3 + [24]))
	$7 = *($6)
	$15 = *($5)
	$16 = *($1)
	*($3 + [24]) = *($1 + [40])
	*(($1 + [112])) = CALL db_idx64_store($15, (int_64)7035937633859534849, $7, $16, ($3 + [24]))
	$7 = *($6)
	$15 = *($5)
	$16 = *($1)
	*($3 + [24]) = *(($1 + [92]))
	*(($1 + [116])) = CALL db_idx64_store($15, (int_64)7035937633859534850, $7, $16, ($3 + [24]))
	$7 = *($6)
	$15 = *($5)
	$16 = *($1)
	*($3 + [24]) = *(($1 + [96]))
	*(($1 + [120])) = CALL db_idx64_store($15, (int_64)7035937633859534851, $7, $16, ($3 + [24]))
	$global$0 = ($3 + [80])
}

void .FUNC $36 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL require_auth(*($0))
	$2 = ($0 + [32])
	$4 = *(($0 + [60]))
	$3 = *(($0 + [56]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$5:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$4 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)*($6 + [100]) == (int_32)$2) ){ goto $label$6 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$6
	if ( $6 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)7035937633859534848, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $26($2, $5)
	if ( ((int_32)*($6 + [100]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9554])
	CALL $37($2, $6)
	return 
	
.LABEL $label$2
	$6 = [0]
	CALL eosio_assert([0], [8262])
	CALL eosio_assert([0], [9605])
	
.LABEL $label$1
	CALL $37($2, $6)
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9640])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9686])
	
.LABEL $label$2
	*($3 + [16]) = *(($1 + [32]))
	*($3 + [24]) = *(($1 + [40]))
	$4 = ($1 + [92])
	*($3 + [32]) = *($4)
	$5 = ($1 + [96])
	*($3 + [40]) = *($5)
	$6 = *($1)
	if ( (*([0] + [8236]) == 0) ){ goto $label$4 }
	*($5) = (*([0] + [8232]) + [-604800])
	goto $label$3 
	
.LABEL $label$4
	$13 = CALL $17()
	*([0] + [8236]) = [1]
	$14 = (CASTING uint_32)(uint_64 ((int_64)$13 / (int_64)1000000))
	*([0] + [8232]) = $14
	*($5) = ($14 + [-604800])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9737])
	
.LABEL $label$3
	$7 = ($3 + [40])
	$8 = ($3 + [32])
	$9 = ($3 + [24])
	$10 = ($1 + [12])
	$12 = *($1 + [12])
	$11 = *(($1 + [16]))
	$13 = (CASTING uint_64)(uint_32 ((int_32)($11 - $12) / (int_32)[12]))
	$14 = [9]
	
.LOOP $label$5:
	$14 = ($14 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$6 }
	
.LOOP $label$7:
	$16 = *($12)
	$15 = *($12 + [4])
	$17 = ($15 - $16)
	$13 = (CASTING uint_64)(uint_32 $17)
	
.LOOP $label$8:
	$14 = ($14 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$8 }
	$14 = ( $14 ? ($17 + $14) : ((int_32)$16 == (int_32)$15) )
	$12 = ($12 + [12])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$7 }
	
.LABEL $label$6
	$12 = ($14 + [69])
	if ( ($12 <= [513]) ){ goto $label$10 }
	$14 = CALL $2($12)
	goto $label$9 
	
.LABEL $label$10
	$14 = ($2 - (($12 + [15]) & [-16]))
	$global$0 = $14
	
.LABEL $label$9
	*($3 + [4]) = $14
	*($3) = $14
	*($3 + [8]) = ($14 + $12)
	*($3 + [48]) = $3
	*($3 + [64]) = $10
	*($3 + [100]) = $4
	*($3 + [104]) = $5
	*($3 + [56]) = $1
	*($3 + [60]) = ($1 + [8])
	*($3 + [68]) = ($1 + [24])
	*($3 + [72]) = ($1 + [32])
	*($3 + [76]) = ($1 + [40])
	*($3 + [80]) = ($1 + [48])
	*($3 + [84]) = ($1 + [56])
	*($3 + [88]) = ($1 + [64])
	*($3 + [92]) = ($1 + [80])
	*($3 + [96]) = ($1 + [88])
	CALL $86(($3 + [56]), ($3 + [48]))
	CALL db_update_i64(*($1 + [104]), (int_64)0, $14, $12)
	if ( ($12 <= [513]) ){ goto $label$11 }
	CALL $3($14)
	
.LABEL $label$11
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($3 + [56]) = *(($1 + [32]))
	if ( (CALL $19(($3 + [16]), ($3 + [56]), [8]) == 0) ){ goto $label$13 }
	$14 = *($1 + [108])
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$14 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($3 + [48]), $6)
	*(($1 + [108])) = $14
	
.LABEL $label$14
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$13
	*($3 + [56]) = *(($1 + [40]))
	if ( (CALL $19($9, ($3 + [56]), [8]) == 0) ){ goto $label$15 }
	$12 = ($1 + [112])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$16 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534849, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$16
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$15
	*($3 + [56]) = *($4)
	if ( (CALL $19($8, ($3 + [56]), [8]) == 0) ){ goto $label$17 }
	$12 = ($1 + [116])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$18 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534850, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$18
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$17
	*($3 + [56]) = *($5)
	if ( (CALL $19($7, ($3 + [56]), [8]) == 0) ){ goto $label$19 }
	$12 = ($1 + [120])
	$14 = *($12)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$20 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534851, ($3 + [48]), $6)
	*($12) = $14
	
.LABEL $label$20
	CALL db_idx64_update($14, (int_64)0, ($3 + [56]))
	
.LABEL $label$19
	$global$0 = ($3 + [112])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9231])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $58($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [7]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [7]) != (int_32)[0])
	CALL $80(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$11 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$12 }
	CALL eosio_assert([0], [9235])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$13 }
	CALL eosio_assert([0], [9235])
	$1 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_64 $2
	$1 = ($global$0 - [32])
	$global$0 = $1
	CALL require_auth(*($0))
	if ( *([0] + [8236]) ){ goto $label$1 }
	$2 = CALL $17()
	*([0] + [8236]) = [1]
	*([0] + [8232]) = ((int_64)$2 / (int_64)1000000)
	
.LABEL $label$1
	*($1 + [16]) = ($0 + [32])
	*($1 + [24]) = (int_64)1
	CALL $33(($1 + [8]), ($1 + [16]), ($1 + [24]))
	if ( (*([0] + [8236]) == 0) ){ goto $label$3 }
	$0 = *([0] + [8232])
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL $17()
	*([0] + [8236]) = [1]
	$0 = (CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000))
	*([0] + [8232]) = $0
	
.LABEL $label$2
	*($1 + [24]) = (CASTING uint_64)(uint_32 ($0 + [-604800]))
	CALL $34($1, ($1 + [16]), ($1 + [24]))
	if ( ((int_32)*($1 + [12]) == (int_32)*($1 + [4])) ){ goto $label$4 }
	$2 = *($1 + [8])
	
.LOOP $label$5:
	*($1 + [24]) = $2
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$6 }
	CALL eosio_assert([0], [9342])
	$0 = *($1 + [28])
	
.LABEL $label$6
	CALL $35(($1 + [24]))
	CALL $28(*($1 + [16]), $0)
	$2 = *($1 + [24])
	*($1 + [8]) = $2
	if ( ((int_32)*($1 + [4]) != (int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32))) ){ goto $label$5 }
	
.LABEL $label$4
	$global$0 = ($1 + [32])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7035937633859534851, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $26($7, CALL $fimport$13(*($7), *($7 + [8]), (int_64)7035937633859534848, $6))
	if ( ((int_32)*($4 + [100]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9554])
	
.LABEL $label$2
	*(($4 + [120])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $30 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [28]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9294])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)3607749779137757184)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9240])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9240])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $29(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9406])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9451])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9501])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}